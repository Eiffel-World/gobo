/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_ANY;
#define EIF_REFERENCE EIF_ANY*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif 
#endif 

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_PROCEDURE EIF_POINTER
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern char** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Information about the feature being executed.
*/
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
	char* feature_name;
	char* type_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
	Context of features containing a rescue clause.
*/
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern GE_rescue* GE_last_rescue;

/*
	Raise an exception with code 'code'.
*/
extern void GE_raise(int code);

/*
	Check whether the type id of 'obj' is not in 'type_ids'.
	If it is, then raise a CAT-call exception. Don't do anything if 'obj' is Void.
	'nb' is the number of ids in 'type_ids' and is expected to be >0.
	'type_ids' is sorted in increasing order.
	Return 'obj'.
*/
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, int type_ids[], int nb);

/*
	Check whether 'obj' is Void.
	If it is, then raise a call-on-void-target exception.
	Return 'obj'
*/
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
	Check whether 'ptr' is a null pointer.
	If it is, then raise a no-more-memory exception.
	Return 'ptr'
*/
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/*
	Create a new DOS console if needed (i.e. in case of a Windows application).
*/
extern void GE_show_console(void);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/*
	Main entry point when compiling a Windows application.
	See:
		http://en.wikipedia.org/wiki/WinMain
		http://msdn2.microsoft.com/en-us/library/ms633559.aspx
*/
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H

#ifdef EIF_BOEHM_GC

/*
	Use the Boehm garbage collector.
	See:
		http://en.wikipedia.org/wiki/Boehm_GC
		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
*/

#include "gc.h"

/*
	GC initialization.
*/
#define GE_init_gc() GC_INIT(); GC_enable_incremental()

/*
	Memory allocation.
*/
#define GE_alloc(x) GE_null(GC_MALLOC(x))
#define GE_alloc_atomic(x) GE_null(GC_MALLOC_ATOMIC(x))

#else

/*
	No garbage collector.
*/

/*
	GC initialization.
*/
#define GE_init_gc() /* do nothing */

/*
	Memory allocation.
*/
#define GE_alloc(x) GE_null(calloc((x),1))
#define GE_alloc_atomic(x) GE_null(calloc((x),1))

#endif


/*
	Access to objects, useful with GCs which move objects in memory.
	This is not the case here, since the Boehm GC is not a moving GC.
*/

/* Access object through hector */
#define eif_access(obj) (obj)
/* Freeze memory address */
#define eif_freeze(obj) (obj)
/* The C side adopts an object */
#define eif_adopt(obj) (obj)
/* The C side protects an object */
#define eif_protect(obj) (obj)
/* The C side weans adopted object */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address */
#define eif_unfreeze(obj)
/* Always frozen since they do not move */
#define eif_frozen(obj) 1
/* Always frozen since they do not move */
#define spfrozen(obj) 1

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GEC */
typedef struct S21 T21;

/* KL_TEXT_INPUT_FILE */
typedef struct S22 T22;

/* KL_ARGUMENTS */
typedef struct S23 T23;

/* UT_ERROR_HANDLER */
typedef struct S24 T24;

/* KL_STRING_ROUTINES */
typedef struct S26 T26;

/* ET_ERROR_HANDLER */
typedef struct S28 T28;

/* KL_EXCEPTIONS */
typedef struct S29 T29;

/* AP_PARSER */
typedef struct S30 T30;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S31 T31;

/* AP_ERROR */
typedef struct S32 T32;

/* AP_FLAG */
typedef struct S33 T33;

/* AP_ENUMERATION_OPTION */
typedef struct S35 T35;

/* AP_BOOLEAN_OPTION */
typedef struct S36 T36;

/* AP_INTEGER_OPTION */
typedef struct S37 T37;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S41 T41;

/* ET_XACE_UNIVERSE_PARSER */
typedef struct S43 T43;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S44 T44;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S45 T45;

/* ST_SPLITTER */
typedef struct S46 T46;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S48 T48;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S49 T49;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S50 T50;

/* ET_XACE_UNIVERSE */
typedef struct S53 T53;

/* ET_LACE_PARSER */
typedef struct S54 T54;

/* ET_LACE_ERROR_HANDLER */
typedef struct S55 T55;

/* ET_LACE_UNIVERSE */
typedef struct S56 T56;

/* ET_NULL_ERROR_HANDLER */
typedef struct S57 T57;

/* ET_SYSTEM */
typedef struct S58 T58;

/* ET_CLASS */
typedef struct S60 T60;

/* ET_C_GENERATOR */
typedef struct S61 T61;

/* KL_SHELL_COMMAND */
typedef struct S62 T62;

/* UT_VERSION */
typedef struct S63 T63;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S64 T64;

/* KL_OPERATING_SYSTEM */
typedef struct S66 T66;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S68 T68;

/* UT_VERSION_NUMBER */
typedef struct S69 T69;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S70 T70;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S71 T71;

/* KL_LINKABLE [CHARACTER_8] */
typedef struct S72 T72;

/* TYPED_POINTER [ANY] */
typedef struct S74 T74;

/* KL_STANDARD_FILES */
typedef struct S75 T75;

/* KL_STDERR_FILE */
typedef struct S76 T76;

/* KL_STDOUT_FILE */
typedef struct S77 T77;

/* UC_STRING */
typedef struct S78 T78;

/* KL_ANY_ROUTINES */
typedef struct S79 T79;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S80 T80;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S81 T81;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S82 T82;

/* AP_ERROR_HANDLER */
typedef struct S83 T83;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S84 T84;

/* SPECIAL [STRING_8] */
typedef struct S85 T85;

/* ARRAY [STRING_8] */
typedef struct S86 T86;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S88 T88;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S89 T89;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S93 T93;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S96 T96;

/* ST_WORD_WRAPPER */
typedef struct S97 T97;

/* ET_XACE_AST_FACTORY */
typedef struct S98 T98;

/* XM_DOCUMENT */
typedef struct S99 T99;

/* XM_ELEMENT */
typedef struct S100 T100;

/* XM_POSITION_TABLE */
typedef struct S101 T101;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S103 T103;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S104 T104;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S105 T105;

/* ET_XACE_VALIDATOR */
typedef struct S106 T106;

/* ET_XACE_PREPROCESSOR */
typedef struct S107 T107;

/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8] */
typedef struct S108 T108;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S109 T109;

/* ET_XACE_LIBRARY_PARSER */
typedef struct S110 T110;

/* XM_EIFFEL_PARSER */
typedef struct S111 T111;

/* UT_MESSAGE */
typedef struct S114 T114;

/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
typedef struct S115 T115;

/* SPECIAL [INTEGER_32] */
typedef struct S117 T117;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S118 T118;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S119 T119;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S120 T120;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S121 T121;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S122 T122;

/* EXECUTION_ENVIRONMENT */
typedef struct S123 T123;

/* ET_LACE_AST_FACTORY */
typedef struct S124 T124;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S125 T125;

/* YY_FILE_BUFFER */
typedef struct S126 T126;

/* YY_BUFFER */
typedef struct S127 T127;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S128 T128;

/* ET_IDENTIFIER */
typedef struct S129 T129;

/* SPECIAL [ANY] */
typedef struct S131 T131;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S132 T132;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S133 T133;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S134 T134;

/* ET_LACE_CLUSTERS */
typedef struct S135 T135;

/* ET_LACE_CLUSTER */
typedef struct S136 T136;

/* ET_LACE_EXCLUDE */
typedef struct S137 T137;

/* ET_LACE_DOTNET_ASSEMBLIES */
typedef struct S138 T138;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S139 T139;

/* SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S140 T140;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S141 T141;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
typedef struct S142 T142;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S143 T143;

/* SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S144 T144;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S145 T145;

/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
typedef struct S146 T146;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S147 T147;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S148 T148;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S149 T149;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S150 T150;

/* KL_PLATFORM */
typedef struct S151 T151;

/* KL_INTEGER_ROUTINES */
typedef struct S152 T152;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S153 T153;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S154 T154;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S155 T155;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S156 T156;

/* ET_DYNAMIC_TYPE */
typedef struct S157 T157;

/* ET_QUERY_LIST */
typedef struct S159 T159;

/* ET_PROCEDURE_LIST */
typedef struct S161 T161;

/* ET_DYNAMIC_FEATURE */
typedef struct S163 T163;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S164 T164;

/* DT_DATE_TIME */
typedef struct S165 T165;

/* DT_SYSTEM_CLOCK */
typedef struct S166 T166;

/* ET_TOKEN_CONSTANTS */
typedef struct S170 T170;

/* ET_EIFFEL_PARSER */
typedef struct S171 T171;

/* ET_CLASS_TYPE */
typedef struct S172 T172;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S173 T173;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S174 T174;

/* ET_EXTERNAL_FUNCTION */
typedef struct S176 T176;

/* ET_KEYWORD */
typedef struct S179 T179;

/* ET_TUPLE_TYPE */
typedef struct S181 T181;

/* ET_TYPE_CHECKER */
typedef struct S182 T182;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S183 T183;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S184 T184;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S185 T185;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S186 T186;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S187 T187;

/* ET_DYNAMIC_TYPE_LIST */
typedef struct S188 T188;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S189 T189;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S190 T190;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S191 T191;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S192 T192;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S193 T193;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S194 T194;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S195 T195;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S196 T196;

/* ET_CURRENT */
typedef struct S198 T198;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S199 T199;

/* ET_CALL_INSTRUCTION */
typedef struct S200 T200;

/* ET_CALL_EXPRESSION */
typedef struct S203 T203;

/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION] */
typedef struct S204 T204;

/* ET_MANIFEST_TUPLE */
typedef struct S205 T205;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S206 T206;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S207 T207;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S208 T208;

/* DS_HASH_SET [ET_INLINE_CONSTANT] */
typedef struct S209 T209;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S210 T210;

/* DS_HASH_SET [STRING_8] */
typedef struct S211 T211;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S212 T212;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S213 T213;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S214 T214;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S215 T215;

/* UT_TEMPLATE_EXPANDER */
typedef struct S216 T216;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S217 T217;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S218 T218;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S219 T219;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S220 T220;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S221 T221;

/* ET_RESULT */
typedef struct S222 T222;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S223 T223;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S227 T227;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S229 T229;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S233 T233;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S234 T234;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S236 T236;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S239 T239;

/* ET_FORMAL_ARGUMENT */
typedef struct S242 T242;

/* TUPLE */
typedef struct S246 T246;

/* PROCEDURE [ET_C_GENERATOR, TUPLE] */
typedef struct S247 T247;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S248 T248;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S250 T250;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S251 T251;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S255 T255;

/* TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S256 T256;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S257 T257;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S258 T258;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S260 T260;

/* ET_ATTRIBUTE */
typedef struct S261 T261;

/* UT_INTEGER_FORMATTER */
typedef struct S263 T263;

/* DS_CELL [INTEGER_32] */
typedef struct S264 T264;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S266 T266;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S267 T267;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S268 T268;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S269 T269;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S270 T270;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S271 T271;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S272 T272;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S273 T273;

/* UNIX_FILE_INFO */
typedef struct S275 T275;

/* ET_AST_FACTORY */
typedef struct S277 T277;

/* ET_XACE_EXTERNALS */
typedef struct S278 T278;

/* ET_XACE_OPTIONS */
typedef struct S279 T279;

/* ET_XACE_CLUSTERS */
typedef struct S280 T280;

/* ET_XACE_CLUSTER */
typedef struct S283 T283;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S284 T284;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S285 T285;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S286 T286;

/* XM_ATTRIBUTE */
typedef struct S287 T287;

/* DS_LINKED_LIST_CURSOR [XM_NODE] */
typedef struct S288 T288;

/* ET_XACE_LIBRARY */
typedef struct S290 T290;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S291 T291;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S294 T294;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S295 T295;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S296 T296;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S297 T297;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S298 T298;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S299 T299;

/* ET_CLASS_NAME_TESTER */
typedef struct S301 T301;

/* ET_AST_NULL_PROCESSOR */
typedef struct S303 T303;

/* ET_FEATURE_FLATTENER */
typedef struct S304 T304;

/* ET_INTERFACE_CHECKER */
typedef struct S305 T305;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S306 T306;

/* ET_PROVIDER_CHECKER */
typedef struct S307 T307;

/* ET_ANCESTOR_BUILDER */
typedef struct S308 T308;

/* DT_DATE_TIME_DURATION */
typedef struct S312 T312;

/* ET_EIFFEL_PREPARSER */
typedef struct S313 T313;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S314 T314;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S315 T315;

/* ET_NONE_GROUP */
typedef struct S316 T316;

/* ET_PARENT */
typedef struct S317 T317;

/* ET_RENAME_LIST */
typedef struct S318 T318;

/* ET_EXPORT_LIST */
typedef struct S319 T319;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S320 T320;

/* ET_PARENT_LIST */
typedef struct S321 T321;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S323 T323;

/* ARRAY [INTEGER_32] */
typedef struct S324 T324;

/* ET_BASE_TYPE_LIST */
typedef struct S325 T325;

/* UT_CONFIG_PARSER */
typedef struct S326 T326;

/* ET_DO_PROCEDURE */
typedef struct S327 T327;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S329 T329;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S332 T332;

/* ET_DEFERRED_PROCEDURE */
typedef struct S333 T333;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S334 T334;

/* SPECIAL [AP_OPTION] */
typedef struct S336 T336;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S337 T337;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S338 T338;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S339 T339;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S340 T340;

/* DS_LINKABLE [STRING_8] */
typedef struct S341 T341;

/* DS_LINKABLE [BOOLEAN] */
typedef struct S342 T342;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S343 T343;

/* DS_LINKABLE [INTEGER_32] */
typedef struct S344 T344;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S345 T345;

/* XM_NAMESPACE_RESOLVER */
typedef struct S346 T346;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S347 T347;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S348 T348;

/* XM_CALLBACKS_NULL */
typedef struct S349 T349;

/* ET_XACE_OPTION_NAMES */
typedef struct S350 T350;

/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8] */
typedef struct S353 T353;

/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8] */
typedef struct S355 T355;

/* SPECIAL [ET_XACE_LIBRARY] */
typedef struct S356 T356;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
typedef struct S357 T357;

/* XM_EIFFEL_SCANNER */
typedef struct S358 T358;

/* XM_DEFAULT_POSITION */
typedef struct S359 T359;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S361 T361;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S362 T362;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S363 T363;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S365 T365;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S366 T366;

/* XM_EIFFEL_DECLARATION */
typedef struct S367 T367;

/* XM_DTD_EXTERNAL_ID */
typedef struct S368 T368;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S369 T369;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S370 T370;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S371 T371;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S372 T372;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S373 T373;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S374 T374;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S375 T375;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S376 T376;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S377 T377;

/* SPECIAL [BOOLEAN] */
typedef struct S378 T378;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S379 T379;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S380 T380;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S381 T381;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S382 T382;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S383 T383;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S384 T384;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S386 T386;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S388 T388;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S389 T389;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S390 T390;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S391 T391;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S392 T392;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S393 T393;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S394 T394;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S396 T396;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S397 T397;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S399 T399;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
typedef struct S400 T400;

/* TO_SPECIAL [INTEGER_32] */
typedef struct S401 T401;

/* TO_SPECIAL [STRING_8] */
typedef struct S402 T402;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S403 T403;

/* KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S405 T405;

/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S407 T407;

/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S409 T409;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S410 T410;

/* TO_SPECIAL [ANY] */
typedef struct S411 T411;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S412 T412;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S413 T413;

/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S414 T414;

/* TO_SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S415 T415;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S416 T416;

/* TO_SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S417 T417;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S418 T418;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S419 T419;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S421 T421;

/* SPECIAL [ET_CLASS] */
typedef struct S423 T423;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S424 T424;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S425 T425;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S426 T426;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S427 T427;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S428 T428;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S429 T429;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S430 T430;

/* MANAGED_POINTER */
typedef struct S432 T432;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S433 T433;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S434 T434;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S435 T435;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S436 T436;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S437 T437;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S438 T438;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S439 T439;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S440 T440;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S442 T442;

/* KL_DIRECTORY */
typedef struct S444 T444;

/* KL_EIFFEL_COMPILER */
typedef struct S445 T445;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S446 T446;

/* ET_CLASS_NAME_LIST */
typedef struct S448 T448;

/* ET_CLIENTS */
typedef struct S449 T449;

/* ET_FEATURE_CLAUSE */
typedef struct S450 T450;

/* SPECIAL [ET_KEYWORD] */
typedef struct S452 T452;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S453 T453;

/* ET_AGENT_KEYWORD */
typedef struct S454 T454;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S455 T455;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S456 T456;

/* ET_PRECURSOR_KEYWORD */
typedef struct S457 T457;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S458 T458;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S459 T459;

/* ET_SYMBOL */
typedef struct S460 T460;

/* SPECIAL [ET_SYMBOL] */
typedef struct S461 T461;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S462 T462;

/* SPECIAL [ET_POSITION] */
typedef struct S463 T463;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S464 T464;

/* ET_BIT_CONSTANT */
typedef struct S465 T465;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S466 T466;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S467 T467;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S469 T469;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S470 T470;

/* SPECIAL [ET_BREAK] */
typedef struct S472 T472;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S473 T473;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S475 T475;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S476 T476;

/* SPECIAL [ET_CURRENT] */
typedef struct S477 T477;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S478 T478;

/* ET_FREE_OPERATOR */
typedef struct S479 T479;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S480 T480;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S481 T481;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S483 T483;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S484 T484;

/* ET_KEYWORD_OPERATOR */
typedef struct S485 T485;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S486 T486;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S487 T487;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S488 T488;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S489 T489;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S491 T491;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S492 T492;

/* SPECIAL [ET_RESULT] */
typedef struct S493 T493;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S494 T494;

/* ET_RETRY_INSTRUCTION */
typedef struct S495 T495;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S496 T496;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S497 T497;

/* ET_SYMBOL_OPERATOR */
typedef struct S498 T498;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S499 T499;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S500 T500;

/* ET_VOID */
typedef struct S501 T501;

/* SPECIAL [ET_VOID] */
typedef struct S502 T502;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S503 T503;

/* ET_SEMICOLON_SYMBOL */
typedef struct S504 T504;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S505 T505;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S506 T506;

/* ET_BRACKET_SYMBOL */
typedef struct S507 T507;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S508 T508;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S509 T509;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S510 T510;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S511 T511;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S512 T512;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S513 T513;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S514 T514;

/* ET_VERBATIM_STRING */
typedef struct S515 T515;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S516 T516;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S517 T517;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S518 T518;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S519 T519;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S520 T520;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S521 T521;

/* ET_TRUE_CONSTANT */
typedef struct S523 T523;

/* ET_FALSE_CONSTANT */
typedef struct S524 T524;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S525 T525;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S526 T526;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S528 T528;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S530 T530;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S531 T531;

/* ET_CREATOR_LIST */
typedef struct S532 T532;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S533 T533;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S534 T534;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S535 T535;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S536 T536;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S537 T537;

/* ET_INVARIANTS */
typedef struct S538 T538;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S539 T539;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S540 T540;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S542 T542;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S544 T544;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S546 T546;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S550 T550;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S551 T551;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S553 T553;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S554 T554;

/* ET_CREATE_EXPRESSION */
typedef struct S555 T555;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S556 T556;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S557 T557;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S558 T558;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S559 T559;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S560 T560;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S561 T561;

/* ET_FORMAL_PARAMETER */
typedef struct S562 T562;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S563 T563;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S565 T565;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S566 T566;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S568 T568;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S569 T569;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S570 T570;

/* ET_CONSTRAINT_CREATOR */
typedef struct S571 T571;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S572 T572;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S573 T573;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S575 T575;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S576 T576;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S577 T577;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S578 T578;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S579 T579;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S581 T581;

/* ET_BIT_N */
typedef struct S582 T582;

/* ET_BIT_FEATURE */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S584 T584;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S586 T586;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S588 T588;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S589 T589;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S590 T590;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S591 T591;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S592 T592;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S593 T593;

/* SPECIAL [ET_PARENT] */
typedef struct S594 T594;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S595 T595;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S596 T596;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S597 T597;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S598 T598;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S599 T599;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S600 T600;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S601 T601;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S603 T603;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S604 T604;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S605 T605;

/* ET_RENAME */
typedef struct S606 T606;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S607 T607;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S608 T608;

/* SPECIAL [ET_EXPORT] */
typedef struct S610 T610;

/* SPECIAL [ET_CLIENTS] */
typedef struct S611 T611;

/* ET_ALL_EXPORT */
typedef struct S612 T612;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S613 T613;

/* ET_FEATURE_EXPORT */
typedef struct S614 T614;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S615 T615;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S617 T617;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S618 T618;

/* SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S620 T620;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
typedef struct S621 T621;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S622 T622;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S623 T623;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S624 T624;

/* ET_CREATOR */
typedef struct S625 T625;

/* SPECIAL [ET_CREATOR] */
typedef struct S626 T626;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S627 T627;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S628 T628;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S630 T630;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S632 T632;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S633 T633;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S635 T635;

/* ET_CONVERT_FUNCTION */
typedef struct S636 T636;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S637 T637;

/* ET_CONVERT_PROCEDURE */
typedef struct S638 T638;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S639 T639;

/* SPECIAL [ET_TYPE] */
typedef struct S640 T640;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S642 T642;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S643 T643;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S644 T644;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S645 T645;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S646 T646;

/* SPECIAL [ET_QUERY] */
typedef struct S647 T647;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S648 T648;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S651 T651;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S652 T652;

/* SPECIAL [ET_CONSTANT] */
typedef struct S653 T653;

/* ET_PRECONDITIONS */
typedef struct S655 T655;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S656 T656;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S657 T657;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S658 T658;

/* ET_COMPOUND */
typedef struct S659 T659;

/* SPECIAL [ET_COMPOUND] */
typedef struct S660 T660;

/* ET_POSTCONDITIONS */
typedef struct S661 T661;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S662 T662;

/* ET_DO_FUNCTION */
typedef struct S663 T663;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S664 T664;

/* ET_ONCE_FUNCTION */
typedef struct S665 T665;

/* ET_DEFERRED_FUNCTION */
typedef struct S666 T666;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S669 T669;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S670 T670;

/* ET_ONCE_PROCEDURE */
typedef struct S671 T671;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S672 T672;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S673 T673;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S675 T675;

/* ET_PREFIX_NAME */
typedef struct S676 T676;

/* ET_PREFIX_FREE_NAME */
typedef struct S677 T677;

/* ET_INFIX_NAME */
typedef struct S678 T678;

/* ET_INFIX_FREE_NAME */
typedef struct S679 T679;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S680 T680;

/* ET_ALIAS_NAME */
typedef struct S681 T681;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S682 T682;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S683 T683;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S684 T684;

/* ET_ALIAS_FREE_NAME */
typedef struct S685 T685;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S686 T686;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S688 T688;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S689 T689;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S691 T691;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S692 T692;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S693 T693;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S695 T695;

/* ET_LOCAL_VARIABLE */
typedef struct S696 T696;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S697 T697;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S699 T699;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S700 T700;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S701 T701;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S702 T702;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S703 T703;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S704 T704;

/* ET_LOOP_INVARIANTS */
typedef struct S705 T705;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S706 T706;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S707 T707;

/* ET_VARIANT */
typedef struct S708 T708;

/* SPECIAL [ET_VARIANT] */
typedef struct S709 T709;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S710 T710;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S711 T711;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S712 T712;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S713 T713;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S714 T714;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S716 T716;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S717 T717;

/* ET_LIKE_FEATURE */
typedef struct S719 T719;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S720 T720;

/* ET_LIKE_CURRENT */
typedef struct S721 T721;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S723 T723;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S724 T724;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S725 T725;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S727 T727;

/* ET_BRACKET_EXPRESSION */
typedef struct S728 T728;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S729 T729;

/* SPECIAL [ET_WRITABLE] */
typedef struct S730 T730;

/* ET_ASSIGNMENT */
typedef struct S731 T731;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S732 T732;

/* ET_IF_INSTRUCTION */
typedef struct S733 T733;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S734 T734;

/* ET_INSPECT_INSTRUCTION */
typedef struct S735 T735;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S736 T736;

/* ET_LOOP_INSTRUCTION */
typedef struct S738 T738;

/* ET_DEBUG_INSTRUCTION */
typedef struct S739 T739;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S740 T740;

/* ET_CHECK_INSTRUCTION */
typedef struct S741 T741;

/* ET_BANG_INSTRUCTION */
typedef struct S743 T743;

/* ET_QUALIFIED_CALL */
typedef struct S744 T744;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S745 T745;

/* ET_CREATE_INSTRUCTION */
typedef struct S747 T747;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S748 T748;

/* ET_ELSEIF_PART_LIST */
typedef struct S749 T749;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S750 T750;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S751 T751;

/* ET_ELSEIF_PART */
typedef struct S752 T752;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S753 T753;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S754 T754;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S755 T755;

/* ET_WHEN_PART_LIST */
typedef struct S756 T756;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S758 T758;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S759 T759;

/* ET_WHEN_PART */
typedef struct S760 T760;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S761 T761;

/* ET_CHOICE_LIST */
typedef struct S762 T762;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S763 T763;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S764 T764;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S765 T765;

/* SPECIAL [ET_CHOICE] */
typedef struct S767 T767;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S769 T769;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S770 T770;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S772 T772;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S773 T773;

/* ET_CHOICE_RANGE */
typedef struct S774 T774;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S775 T775;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S776 T776;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S777 T777;

/* ET_MANIFEST_STRING_LIST */
typedef struct S778 T778;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S779 T779;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S780 T780;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S781 T781;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S783 T783;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S784 T784;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S785 T785;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S787 T787;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S788 T788;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S789 T789;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S790 T790;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S791 T791;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S792 T792;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S793 T793;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S794 T794;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S795 T795;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S796 T796;

/* ET_FEATURE_ADDRESS */
typedef struct S797 T797;

/* ET_CURRENT_ADDRESS */
typedef struct S798 T798;

/* ET_RESULT_ADDRESS */
typedef struct S799 T799;

/* ET_EXPRESSION_ADDRESS */
typedef struct S800 T800;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S801 T801;

/* ET_INFIX_EXPRESSION */
typedef struct S802 T802;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S804 T804;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S805 T805;

/* ET_EQUALITY_EXPRESSION */
typedef struct S806 T806;

/* ET_PREFIX_EXPRESSION */
typedef struct S807 T807;

/* ET_OLD_EXPRESSION */
typedef struct S808 T808;

/* ET_CALL_AGENT */
typedef struct S809 T809;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S810 T810;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S812 T812;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S813 T813;

/* ET_MANIFEST_ARRAY */
typedef struct S814 T814;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S815 T815;

/* ET_STRIP_EXPRESSION */
typedef struct S816 T816;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S817 T817;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S818 T818;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S819 T819;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S820 T820;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S821 T821;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S822 T822;

/* ET_MANIFEST_TYPE */
typedef struct S823 T823;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S824 T824;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S825 T825;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S826 T826;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S827 T827;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S828 T828;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S829 T829;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S830 T830;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S831 T831;

/* ET_AGENT_OPEN_TARGET */
typedef struct S832 T832;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S833 T833;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S834 T834;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S835 T835;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S836 T836;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S837 T837;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S838 T838;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S839 T839;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S840 T840;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S841 T841;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S842 T842;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S844 T844;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S845 T845;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S846 T846;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S847 T847;

/* ET_TAGGED_ASSERTION */
typedef struct S849 T849;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S854 T854;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S855 T855;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S856 T856;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S857 T857;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S859 T859;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S860 T860;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S862 T862;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S864 T864;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S865 T865;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S866 T866;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S867 T867;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S869 T869;

/* SPECIAL [ET_AGENT] */
typedef struct S871 T871;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S872 T872;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S873 T873;

/* DS_ARRAYED_LIST_CURSOR [ET_CALL_EXPRESSION] */
typedef struct S875 T875;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S876 T876;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S877 T877;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S878 T878;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S879 T879;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S881 T881;

/* SPECIAL [ET_FEATURE] */
typedef struct S882 T882;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S883 T883;

/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
typedef struct S885 T885;

/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT] */
typedef struct S887 T887;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S888 T888;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S889 T889;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S890 T890;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S891 T891;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S892 T892;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S893 T893;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8] */
typedef struct S895 T895;

/* RX_BYTE_CODE */
typedef struct S898 T898;

/* RX_CASE_MAPPING */
typedef struct S899 T899;

/* RX_CHARACTER_SET */
typedef struct S900 T900;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S902 T902;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S903 T903;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S904 T904;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
typedef struct S905 T905;

/* ARRAY [BOOLEAN] */
typedef struct S906 T906;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S907 T907;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S908 T908;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S909 T909;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S910 T910;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S911 T911;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S912 T912;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S913 T913;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S914 T914;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S915 T915;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S916 T916;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S917 T917;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S918 T918;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S919 T919;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S920 T920;

/* C_STRING */
typedef struct S923 T923;

/* ET_SYSTEM_ERROR */
typedef struct S924 T924;

/* ET_INTERNAL_ERROR */
typedef struct S925 T925;

/* ET_VALIDITY_ERROR */
typedef struct S926 T926;

/* ET_CLUSTER_ERROR */
typedef struct S927 T927;

/* ET_SYNTAX_ERROR */
typedef struct S928 T928;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S929 T929;

/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S930 T930;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S931 T931;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S932 T932;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S933 T933;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S934 T934;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S935 T935;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S936 T936;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S937 T937;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S938 T938;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S941 T941;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S944 T944;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S946 T946;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S947 T947;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S948 T948;

/* UC_UTF8_ROUTINES */
typedef struct S949 T949;

/* UC_UTF8_STRING */
typedef struct S950 T950;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S951 T951;

/* KL_CHARACTER_BUFFER */
typedef struct S954 T954;

/* KL_CHARACTER_ROUTINES */
typedef struct S955 T955;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S957 T957;

/* ET_FILE_POSITION */
typedef struct S959 T959;

/* KL_STDIN_FILE */
typedef struct S960 T960;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S961 T961;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S962 T962;

/* ARRAY [ET_TYPE] */
typedef struct S963 T963;

/* TYPED_POINTER [SPECIAL [CHARACTER_8]] */
typedef struct S968 T968;

/* ET_BRACED_TYPE_LIST */
typedef struct S969 T969;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S970 T970;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S971 T971;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S972 T972;

/* ET_KEYWORD_EXPRESSION */
typedef struct S973 T973;

/* UT_TRISTATE */
typedef struct S975 T975;

/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S976 T976;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S977 T977;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S978 T978;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S979 T979;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
typedef struct S980 T980;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S982 T982;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S984 T984;

/* ET_FEATURE_NAME_TESTER */
typedef struct S985 T985;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S987 T987;

/* ET_ALIAS_NAME_TESTER */
typedef struct S988 T988;

/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
typedef struct S990 T990;

/* DS_HASH_SET [ET_CLASS_NAME] */
typedef struct S991 T991;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S992 T992;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S993 T993;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S994 T994;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S995 T995;

/* ET_SIGNATURE_CHECKER */
typedef struct S996 T996;

/* ET_PARENT_CHECKER2 */
typedef struct S997 T997;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S998 T998;

/* ET_PRECURSOR_CHECKER */
typedef struct S999 T999;

/* ET_PARENT_CHECKER3 */
typedef struct S1000 T1000;

/* ET_FEATURE_CHECKER */
typedef struct S1001 T1001;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S1002 T1002;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S1003 T1003;

/* ET_SUPPLIER_BUILDER */
typedef struct S1004 T1004;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1005 T1005;

/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1006 T1006;

/* ET_PARENT_CHECKER1 */
typedef struct S1007 T1007;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1008 T1008;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1009 T1009;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1010 T1010;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S1015 T1015;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S1016 T1016;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1017 T1017;

/* UT_SYNTAX_ERROR */
typedef struct S1018 T1018;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1019 T1019;

/* TO_SPECIAL [AP_OPTION] */
typedef struct S1020 T1020;

/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S1021 T1021;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1022 T1022;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1024 T1024;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING_8] */
typedef struct S1025 T1025;

/* TO_SPECIAL [ET_XACE_LIBRARY] */
typedef struct S1026 T1026;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1027 T1027;

/* DS_LINKED_STACK [INTEGER_32] */
typedef struct S1028 T1028;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S1029 T1029;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1030 T1030;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1031 T1031;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1032 T1032;

/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1033 T1033;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1035 T1035;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1037 T1037;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1038 T1038;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1039 T1039;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1040 T1040;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1041 T1041;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1042 T1042;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1043 T1043;

/* DS_BILINKABLE [STRING_8] */
typedef struct S1044 T1044;

/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S1045 T1045;

/* TO_SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S1046 T1046;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S1047 T1047;

/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S1048 T1048;

/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1049 T1049;

/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S1050 T1050;

/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1051 T1051;

/* TO_SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S1052 T1052;

/* TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S1053 T1053;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S1055 T1055;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1056 T1056;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S1057 T1057;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S1058 T1058;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S1059 T1059;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S1060 T1060;

/* TO_SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S1061 T1061;

/* EXCEPTIONS */
typedef struct S1062 T1062;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1063 T1063;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1064 T1064;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1065 T1065;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S1066 T1066;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1067 T1067;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1068 T1068;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1069 T1069;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1070 T1070;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S1072 T1072;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S1073 T1073;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S1074 T1074;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S1075 T1075;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S1076 T1076;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S1077 T1077;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S1078 T1078;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S1079 T1079;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S1080 T1080;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S1081 T1081;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S1082 T1082;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S1083 T1083;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S1084 T1084;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S1085 T1085;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S1087 T1087;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S1088 T1088;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S1089 T1089;

/* TO_SPECIAL [ET_VOID] */
typedef struct S1090 T1090;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S1091 T1091;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S1092 T1092;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S1093 T1093;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S1095 T1095;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S1096 T1096;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S1097 T1097;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S1098 T1098;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S1099 T1099;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S1100 T1100;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1101 T1101;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S1102 T1102;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S1103 T1103;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S1105 T1105;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1106 T1106;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1107 T1107;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S1108 T1108;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S1109 T1109;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S1110 T1110;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S1111 T1111;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S1112 T1112;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S1113 T1113;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S1114 T1114;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S1115 T1115;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S1116 T1116;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S1117 T1117;

/* TO_SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S1118 T1118;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1119 T1119;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1120 T1120;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S1121 T1121;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S1122 T1122;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S1123 T1123;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1124 T1124;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S1125 T1125;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S1126 T1126;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S1127 T1127;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S1128 T1128;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1129 T1129;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S1130 T1130;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S1135 T1135;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S1136 T1136;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S1137 T1137;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S1138 T1138;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S1139 T1139;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S1140 T1140;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1141 T1141;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S1142 T1142;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1143 T1143;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S1144 T1144;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S1145 T1145;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1146 T1146;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S1147 T1147;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S1148 T1148;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S1149 T1149;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S1150 T1150;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S1151 T1151;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S1152 T1152;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S1153 T1153;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1154 T1154;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1155 T1155;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S1156 T1156;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S1157 T1157;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S1158 T1158;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S1159 T1159;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S1160 T1160;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S1161 T1161;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S1162 T1162;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S1163 T1163;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S1165 T1165;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S1166 T1166;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1167 T1167;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S1168 T1168;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S1169 T1169;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S1171 T1171;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S1172 T1172;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1173 T1173;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S1174 T1174;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S1175 T1175;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S1176 T1176;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1177 T1177;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1178 T1178;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S1179 T1179;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1180 T1180;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S1181 T1181;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S1182 T1182;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1183 T1183;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S1184 T1184;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S1185 T1185;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S1186 T1186;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S1187 T1187;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S1189 T1189;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S1190 T1190;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S1191 T1191;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1192 T1192;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1193 T1193;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1194 T1194;

/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1195 T1195;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S1196 T1196;

/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1197 T1197;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S1198 T1198;

/* TO_SPECIAL [ET_AGENT] */
typedef struct S1199 T1199;

/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1200 T1200;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S1201 T1201;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1202 T1202;

/* TO_SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S1203 T1203;

/* TO_SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S1204 T1204;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8] */
typedef struct S1205 T1205;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1206 T1206;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1208 T1208;

/* SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1209 T1209;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
typedef struct S1210 T1210;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
typedef struct S1211 T1211;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1213 T1213;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1214 T1214;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1215 T1215;

/* UC_UNICODE_ROUTINES */
typedef struct S1216 T1216;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1217 T1217;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1219 T1219;

/* ET_PARENT_FEATURE */
typedef struct S1223 T1223;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1224 T1224;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1225 T1225;

/* ET_INHERITED_FEATURE */
typedef struct S1226 T1226;

/* ET_REDECLARED_FEATURE */
typedef struct S1228 T1228;

/* ET_FEATURE_LIST */
typedef struct S1229 T1229;

/* ET_FEATURE_IDS */
typedef struct S1230 T1230;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1238 T1238;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1239 T1239;

/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1240 T1240;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1243 T1243;

/* UC_UTF16_ROUTINES */
typedef struct S1244 T1244;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1245 T1245;

/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1246 T1246;

/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1247 T1247;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1248 T1248;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1249 T1249;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1250 T1250;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1252 T1252;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1254 T1254;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1255 T1255;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1257 T1257;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
typedef struct S1258 T1258;

/* SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1259 T1259;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
typedef struct S1260 T1260;

/* DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
typedef struct S1261 T1261;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1262 T1262;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1263 T1263;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1264 T1264;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1265 T1265;

/* ET_REPLICATED_FEATURE */
typedef struct S1267 T1267;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1268 T1268;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1269 T1269;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1270 T1270;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1271 T1271;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1273 T1273;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1275 T1275;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
typedef struct S1276 T1276;

/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
typedef struct S1277 T1277;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1278 T1278;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1279 T1279;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1280 T1280;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1281 T1281;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1282 T1282;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1284 T1284;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1286 T1286;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1287 T1287;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1288 T1288;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S1289 T1289;

/* SPECIAL [YY_BUFFER] */
typedef struct S1290 T1290;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1291 T1291;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1293 T1293;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1294 T1294;

/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1296 T1296;

/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1297 T1297;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1298 T1298;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1299 T1299;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1302 T1302;

/* TO_SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1303 T1303;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1310 T1310;

/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1311 T1311;

/* SPECIAL [NATURAL_8] */
typedef struct S1312 T1312;

/* STRING_SEARCHER */
typedef struct S1313 T1313;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S1315 T1315;

/* XM_COMMENT */
typedef struct S1316 T1316;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1317 T1317;

/* XM_CHARACTER_DATA */
typedef struct S1318 T1318;

/* XM_NAMESPACE */
typedef struct S1319 T1319;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1320 T1320;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1323 T1323;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1329 T1329;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1331 T1331;

/* ET_CONVERT_EXPRESSION */
typedef struct S1334 T1334;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1335 T1335;

/* ET_COMPRESSED_POSITION */
typedef struct S1338 T1338;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1340 T1340;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1347 T1347;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1348 T1348;

/* SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1349 T1349;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1350 T1350;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1351 T1351;

/* SPECIAL [NATURAL_64] */
typedef struct S1352 T1352;

/* DS_LINKABLE [CHARACTER_8] */
typedef struct S1353 T1353;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1355 T1355;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1356 T1356;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1357 T1357;

/* TO_SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1358 T1358;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1359 T1359;

/* SPECIAL [ET_RENAME] */
typedef struct S1360 T1360;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1362 T1362;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1364 T1364;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1365 T1365;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1366 T1366;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1367 T1367;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1369 T1369;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1370 T1370;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1372 T1372;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1374 T1374;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1375 T1375;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1376 T1376;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1377 T1377;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1378 T1378;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1379 T1379;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1380 T1380;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1381 T1381;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1382 T1382;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1383 T1383;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1385 T1385;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1387 T1387;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1388 T1388;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1389 T1389;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1390 T1390;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1391 T1391;

/* SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1392 T1392;

/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
typedef struct S1393 T1393;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
typedef struct S1394 T1394;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
typedef struct S1395 T1395;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1397 T1397;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32] */
typedef struct S1398 T1398;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1399 T1399;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1400 T1400;

/* TO_SPECIAL [YY_BUFFER] */
typedef struct S1401 T1401;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1402 T1402;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1405 T1405;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S1406 T1406;

/* AP_OPTION_COMPARATOR */
typedef struct S1407 T1407;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1408 T1408;

/* STD_FILES */
typedef struct S1416 T1416;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1417 T1417;

/* PLATFORM */
typedef struct S1418 T1418;

/* DS_LINKABLE [XM_NODE] */
typedef struct S1420 T1420;

/* XM_NODE_TYPER */
typedef struct S1421 T1421;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1428 T1428;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1429 T1429;

/* KL_STRING_INPUT_STREAM */
typedef struct S1430 T1430;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1434 T1434;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1442 T1442;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1443 T1443;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1449 T1449;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1450 T1450;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1451 T1451;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1452 T1452;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1453 T1453;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1454 T1454;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1455 T1455;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1458 T1458;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1459 T1459;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1460 T1460;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1461 T1461;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1462 T1462;

/* TO_SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1463 T1463;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1464 T1464;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1465 T1465;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1466 T1466;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1468 T1468;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1470 T1470;

/* TO_SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1471 T1471;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1472 T1472;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1475 T1475;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1477 T1477;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S1478 T1478;

/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1486 T1486;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1487 T1487;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1488 T1488;

/* TO_SPECIAL [XM_NAMESPACE] */
typedef struct S1489 T1489;

/* TO_SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1490 T1490;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1495 T1495;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1497 T1497;

/* CONSOLE */
typedef struct S1498 T1498;

/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1499 T1499;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1502 T1502;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S74 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER_8]] */
struct S968 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1331 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type GEC */
struct S21 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ace_filename */
	T0* a3; /* last_universe */
	T0* a4; /* finalize_flag */
	T0* a5; /* catcall_option */
	T0* a6; /* c_compile_option */
	T0* a7; /* split_option */
	T0* a8; /* split_size_option */
	T0* a9; /* gc_option */
	T0* a10; /* silent_flag */
	T0* a11; /* verbose_flag */
	T0* a12; /* version_flag */
	T6 a13; /* split_size */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S22 {
	int id;
	T6 a1; /* mode */
	T0* a2; /* name */
	T0* a3; /* string_name */
	T0* a4; /* character_buffer */
	T1 a5; /* end_of_file */
	T14 a6; /* file_pointer */
	T1 a7; /* descriptor_available */
	T0* a8; /* last_string */
	T2 a9; /* last_character */
};

/* Struct for type KL_ARGUMENTS */
struct S23 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type UT_ERROR_HANDLER */
struct S24 {
	int id;
	T0* a1; /* info_file */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
};

/* Struct for type KL_STRING_ROUTINES */
struct S26 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S28 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T1 a3; /* benchmark_shown */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_internal_error */
	T1 a9; /* is_se */
	T1 a10; /* is_ve */
	T1 a11; /* is_ge */
	T1 a12; /* is_pedantic */
	T1 a13; /* is_verbose */
};

/* Struct for type KL_EXCEPTIONS */
struct S29 {
	int id;
};

/* Struct for type AP_PARSER */
struct S30 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a5; /* application_description */
	T0* a6; /* parameters_description */
	T0* a7; /* error_handler */
	T0* a8; /* argument_list */
	T0* a9; /* current_options */
	T1 a10; /* is_first_option */
	T0* a11; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S31 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S32 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type AP_FLAG */
struct S33 {
	int id;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S35 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* description */
	T0* a3; /* possible_values */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S36 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* description */
	T0* a3; /* parameter_description */
	T0* a4; /* long_form */
	T1 a5; /* is_mandatory */
	T6 a6; /* maximum_occurrences */
	T1 a7; /* has_short_form */
	T2 a8; /* short_form */
	T1 a9; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S37 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* long_form */
	T2 a3; /* short_form */
	T0* a4; /* description */
	T0* a5; /* parameter_description */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* has_short_form */
	T1 a9; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S41 {
	int id;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type ET_XACE_UNIVERSE_PARSER */
struct S43 {
	int id;
	T0* a1; /* last_universe */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T0* a10; /* eiffel_error_handler */
	T0* a11; /* eiffel_ast_factory */
	T1 a12; /* is_shallow */
	T1 a13; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S44 {
	int id;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S45 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* key_storage */
	T6 a16; /* free_slot */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ST_SPLITTER */
struct S46 {
	int id;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S48 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S49 {
	int id;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S50 {
	int id;
};

/* Struct for type ET_XACE_UNIVERSE */
struct S53 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a8; /* default_create_seed */
	T0* a9; /* boolean_class */
	T0* a10; /* character_8_class */
	T0* a11; /* character_32_class */
	T0* a12; /* character_class */
	T0* a13; /* wide_character_class */
	T0* a14; /* integer_8_class */
	T0* a15; /* integer_16_class */
	T0* a16; /* integer_32_class */
	T0* a17; /* integer_64_class */
	T0* a18; /* integer_class */
	T0* a19; /* natural_8_class */
	T0* a20; /* natural_16_class */
	T0* a21; /* natural_32_class */
	T0* a22; /* natural_64_class */
	T0* a23; /* natural_class */
	T0* a24; /* real_32_class */
	T0* a25; /* real_64_class */
	T0* a26; /* real_class */
	T0* a27; /* double_class */
	T0* a28; /* pointer_class */
	T0* a29; /* special_class */
	T0* a30; /* string_8_class */
	T0* a31; /* string_32_class */
	T0* a32; /* string_class */
	T0* a33; /* array_class */
	T0* a34; /* interface_checker */
	T0* a35; /* typed_pointer_class */
	T0* a36; /* ise_version */
	T0* a37; /* routine_class */
	T0* a38; /* tuple_type */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T0* a42; /* type_class */
	T6 a43; /* routine_call_seed */
	T6 a44; /* function_item_seed */
	T0* a45; /* any_type */
	T6 a46; /* feature_count */
	T0* a47; /* system_name */
	T0* a48; /* options */
	T0* a49; /* internal_eiffel_parser */
	T0* a50; /* ast_factory */
	T1 a51; /* use_assign_keyword */
	T1 a52; /* use_attribute_keyword */
	T1 a53; /* use_convert_keyword */
	T1 a54; /* use_create_keyword */
	T1 a55; /* use_recast_keyword */
	T1 a56; /* use_reference_keyword */
	T1 a57; /* use_void_keyword */
	T1 a58; /* providers_enabled */
	T0* a59; /* clusters */
	T0* a60; /* basic_classes */
	T1 a61; /* console_application_mode */
	T0* a62; /* null_processor */
	T0* a63; /* provider_checker */
	T0* a64; /* ancestor_builder */
	T0* a65; /* feature_flattener */
	T0* a66; /* implementation_checker */
	T0* a67; /* flat_implementation_checker */
	T0* a68; /* ecma_version */
	T0* a69; /* dotnet_assemblies */
	T1 a70; /* is_preparsed */
	T1 a71; /* flat_mode */
	T1 a72; /* flat_dbc_mode */
	T1 a73; /* suppliers_enabled */
	T0* a74; /* root_class_name */
	T0* a75; /* libraries */
	T1 a76; /* exception_trace_mode */
	T1 a77; /* trace_mode */
	T0* a78; /* creation_procedure_name */
	T0* a79; /* general_class */
	T0* a80; /* tuple_class */
	T0* a81; /* bit_class */
	T0* a82; /* native_array_class */
	T0* a83; /* procedure_class */
	T0* a84; /* predicate_class */
	T0* a85; /* function_class */
	T0* a86; /* arguments_class */
	T0* a87; /* identified_routines_class */
	T0* a88; /* platform_class */
	T0* a89; /* system_object_class */
	T0* a90; /* system_string_class */
	T0* a91; /* none_type */
	T0* a92; /* integer_type */
	T0* a93; /* natural_type */
	T0* a94; /* character_type */
	T0* a95; /* string_type */
	T0* a96; /* real_type */
	T0* a97; /* double_type */
	T0* a98; /* array_any_type */
	T0* a99; /* array_none_type */
	T0* a100; /* any_parent */
	T0* a101; /* any_parents */
	T0* a102; /* system_object_parents */
	T0* a103; /* integer_convert_feature */
	T0* a104; /* integer_8_convert_feature */
	T0* a105; /* integer_16_convert_feature */
	T0* a106; /* integer_32_convert_feature */
	T0* a107; /* integer_64_convert_feature */
	T0* a108; /* natural_convert_feature */
	T0* a109; /* natural_8_convert_feature */
	T0* a110; /* natural_16_convert_feature */
	T0* a111; /* natural_32_convert_feature */
	T0* a112; /* natural_64_convert_feature */
	T0* a113; /* real_convert_feature */
	T0* a114; /* double_convert_feature */
	T0* a115; /* real_32_convert_feature */
	T0* a116; /* real_64_convert_feature */
	T0* a117; /* boolean_ref_class */
	T0* a118; /* character_8_ref_class */
	T0* a119; /* character_32_ref_class */
	T0* a120; /* character_ref_class */
	T0* a121; /* wide_character_ref_class */
	T0* a122; /* integer_8_ref_class */
	T0* a123; /* integer_16_ref_class */
	T0* a124; /* integer_32_ref_class */
	T0* a125; /* integer_64_ref_class */
	T0* a126; /* integer_ref_class */
	T0* a127; /* natural_8_ref_class */
	T0* a128; /* natural_16_ref_class */
	T0* a129; /* natural_32_ref_class */
	T0* a130; /* natural_64_ref_class */
	T0* a131; /* natural_ref_class */
	T0* a132; /* real_32_ref_class */
	T0* a133; /* real_64_ref_class */
	T0* a134; /* real_ref_class */
	T0* a135; /* double_ref_class */
	T0* a136; /* pointer_ref_class */
	T0* a137; /* numeric_class */
	T0* a138; /* comparable_class */
	T0* a139; /* part_comparable_class */
	T0* a140; /* hashable_class */
	T0* a141; /* boolean_convert_feature */
	T0* a142; /* character_convert_feature */
	T0* a143; /* wide_character_convert_feature */
	T0* a144; /* pointer_convert_feature */
	T1 a145; /* cluster_dependence_enabled */
	T0* a146; /* internal_eiffel_preparser */
	T0* a147; /* internal_dotnet_assembly_consumer */
	T6 a148; /* copy_seed */
	T6 a149; /* void_seed */
	T6 a150; /* inline_constant_count */
	T0* a151; /* supplier_handler */
};

/* Struct for type ET_LACE_PARSER */
struct S54 {
	int id;
	T0* a1; /* last_universe */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T6 a27; /* error_count */
	T1 a28; /* yy_lookahead_needed */
	T6 a29; /* yyerrstatus */
	T6 a30; /* yyssp */
	T0* a31; /* yyss */
	T0* a32; /* yypact */
	T6 a33; /* last_token */
	T0* a34; /* yytranslate */
	T0* a35; /* yycheck */
	T0* a36; /* yytable */
	T0* a37; /* yydefact */
	T0* a38; /* yyr1 */
	T0* a39; /* yypgoto */
	T0* a40; /* yydefgoto */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T6 a43; /* yy_start_state */
	T6 a44; /* line */
	T6 a45; /* column */
	T6 a46; /* position */
	T1 a47; /* yy_more_flag */
	T6 a48; /* yy_more_len */
	T6 a49; /* yy_last_accepting_state */
	T6 a50; /* yy_last_accepting_cpos */
	T1 a51; /* yy_rejected */
	T6 a52; /* yy_state_count */
	T6 a53; /* yy_full_match */
	T6 a54; /* yy_lp */
	T6 a55; /* yy_looking_for_trail_begin */
	T6 a56; /* yy_full_lp */
	T6 a57; /* yy_full_state */
	T6 a58; /* yy_start */
	T6 a59; /* yyvsp1 */
	T6 a60; /* yyvsp2 */
	T6 a61; /* yyvsp3 */
	T6 a62; /* yyvsp4 */
	T6 a63; /* yyvsp5 */
	T6 a64; /* yyvsp6 */
	T6 a65; /* yyvsp7 */
	T0* a66; /* yy_state_stack */
	T0* a67; /* yy_ec */
	T0* a68; /* yy_content_area */
	T0* a69; /* yy_content */
	T0* a70; /* yy_accept */
	T0* a71; /* yy_chk */
	T0* a72; /* yy_base */
	T0* a73; /* yy_def */
	T0* a74; /* yy_meta */
	T0* a75; /* yy_nxt */
	T0* a76; /* yy_acclist */
	T0* a77; /* yytypes2 */
	T6 a78; /* yyvsc1 */
	T0* a79; /* yyvs1 */
	T0* a80; /* yyspecial_routines1 */
	T0* a81; /* last_any_value */
	T6 a82; /* yyvsc2 */
	T0* a83; /* yyvs2 */
	T0* a84; /* yyspecial_routines2 */
	T0* a85; /* last_et_identifier_value */
	T0* a86; /* yyvs4 */
	T0* a87; /* yyvs7 */
	T6 a88; /* yyvsc4 */
	T0* a89; /* yyspecial_routines4 */
	T0* a90; /* yyvs3 */
	T0* a91; /* yyvs5 */
	T6 a92; /* yyvsc3 */
	T0* a93; /* yyspecial_routines3 */
	T6 a94; /* yyvsc5 */
	T0* a95; /* yyspecial_routines5 */
	T6 a96; /* yyvsc7 */
	T0* a97; /* yyspecial_routines7 */
	T0* a98; /* yyvs6 */
	T6 a99; /* yyvsc6 */
	T0* a100; /* yyspecial_routines6 */
	T0* a101; /* yytypes1 */
	T6 a102; /* code_ */
	T0* a103; /* str_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S55 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_LACE_UNIVERSE */
struct S56 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a8; /* default_create_seed */
	T0* a9; /* boolean_class */
	T0* a10; /* character_8_class */
	T0* a11; /* character_32_class */
	T0* a12; /* character_class */
	T0* a13; /* wide_character_class */
	T0* a14; /* integer_8_class */
	T0* a15; /* integer_16_class */
	T0* a16; /* integer_32_class */
	T0* a17; /* integer_64_class */
	T0* a18; /* integer_class */
	T0* a19; /* natural_8_class */
	T0* a20; /* natural_16_class */
	T0* a21; /* natural_32_class */
	T0* a22; /* natural_64_class */
	T0* a23; /* natural_class */
	T0* a24; /* real_32_class */
	T0* a25; /* real_64_class */
	T0* a26; /* real_class */
	T0* a27; /* double_class */
	T0* a28; /* pointer_class */
	T0* a29; /* special_class */
	T0* a30; /* string_8_class */
	T0* a31; /* string_32_class */
	T0* a32; /* string_class */
	T0* a33; /* array_class */
	T0* a34; /* interface_checker */
	T0* a35; /* typed_pointer_class */
	T0* a36; /* ise_version */
	T0* a37; /* routine_class */
	T0* a38; /* tuple_type */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T0* a42; /* type_class */
	T6 a43; /* routine_call_seed */
	T6 a44; /* function_item_seed */
	T0* a45; /* any_type */
	T6 a46; /* feature_count */
	T1 a47; /* exception_trace_mode */
	T1 a48; /* trace_mode */
	T1 a49; /* console_application_mode */
	T0* a50; /* tuple_class */
	T0* a51; /* procedure_class */
	T0* a52; /* function_class */
	T0* a53; /* predicate_class */
	T0* a54; /* system_name */
	T0* a55; /* ancestor_builder */
	T0* a56; /* internal_eiffel_parser */
	T0* a57; /* ast_factory */
	T1 a58; /* cluster_dependence_enabled */
	T0* a59; /* general_class */
	T1 a60; /* use_void_keyword */
	T1 a61; /* use_assign_keyword */
	T1 a62; /* use_attribute_keyword */
	T1 a63; /* use_convert_keyword */
	T1 a64; /* use_create_keyword */
	T1 a65; /* use_recast_keyword */
	T1 a66; /* use_reference_keyword */
	T1 a67; /* providers_enabled */
	T0* a68; /* clusters */
	T0* a69; /* basic_classes */
	T0* a70; /* null_processor */
	T0* a71; /* provider_checker */
	T0* a72; /* feature_flattener */
	T0* a73; /* implementation_checker */
	T0* a74; /* flat_implementation_checker */
	T0* a75; /* ecma_version */
	T0* a76; /* dotnet_assemblies */
	T1 a77; /* is_preparsed */
	T1 a78; /* flat_mode */
	T1 a79; /* flat_dbc_mode */
	T1 a80; /* suppliers_enabled */
	T6 a81; /* copy_seed */
	T6 a82; /* void_seed */
	T0* a83; /* bit_class */
	T0* a84; /* native_array_class */
	T0* a85; /* arguments_class */
	T0* a86; /* identified_routines_class */
	T0* a87; /* platform_class */
	T0* a88; /* system_object_class */
	T0* a89; /* system_string_class */
	T0* a90; /* none_type */
	T0* a91; /* integer_type */
	T0* a92; /* natural_type */
	T0* a93; /* character_type */
	T0* a94; /* string_type */
	T0* a95; /* real_type */
	T0* a96; /* double_type */
	T0* a97; /* array_any_type */
	T0* a98; /* array_none_type */
	T0* a99; /* any_parent */
	T0* a100; /* any_parents */
	T0* a101; /* system_object_parents */
	T0* a102; /* integer_convert_feature */
	T0* a103; /* integer_8_convert_feature */
	T0* a104; /* integer_16_convert_feature */
	T0* a105; /* integer_32_convert_feature */
	T0* a106; /* integer_64_convert_feature */
	T0* a107; /* natural_convert_feature */
	T0* a108; /* natural_8_convert_feature */
	T0* a109; /* natural_16_convert_feature */
	T0* a110; /* natural_32_convert_feature */
	T0* a111; /* natural_64_convert_feature */
	T0* a112; /* real_convert_feature */
	T0* a113; /* double_convert_feature */
	T0* a114; /* real_32_convert_feature */
	T0* a115; /* real_64_convert_feature */
	T0* a116; /* boolean_ref_class */
	T0* a117; /* character_8_ref_class */
	T0* a118; /* character_32_ref_class */
	T0* a119; /* character_ref_class */
	T0* a120; /* wide_character_ref_class */
	T0* a121; /* integer_8_ref_class */
	T0* a122; /* integer_16_ref_class */
	T0* a123; /* integer_32_ref_class */
	T0* a124; /* integer_64_ref_class */
	T0* a125; /* integer_ref_class */
	T0* a126; /* natural_8_ref_class */
	T0* a127; /* natural_16_ref_class */
	T0* a128; /* natural_32_ref_class */
	T0* a129; /* natural_64_ref_class */
	T0* a130; /* natural_ref_class */
	T0* a131; /* real_32_ref_class */
	T0* a132; /* real_64_ref_class */
	T0* a133; /* real_ref_class */
	T0* a134; /* double_ref_class */
	T0* a135; /* pointer_ref_class */
	T0* a136; /* numeric_class */
	T0* a137; /* comparable_class */
	T0* a138; /* part_comparable_class */
	T0* a139; /* hashable_class */
	T0* a140; /* boolean_convert_feature */
	T0* a141; /* character_convert_feature */
	T0* a142; /* wide_character_convert_feature */
	T0* a143; /* pointer_convert_feature */
	T0* a144; /* internal_dotnet_assembly_consumer */
	T0* a145; /* internal_eiffel_preparser */
	T6 a146; /* inline_constant_count */
	T0* a147; /* supplier_handler */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S57 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
	T1 a4; /* has_error */
	T1 a5; /* benchmark_shown */
	T1 a6; /* is_ise */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_internal_error */
	T1 a9; /* is_se */
	T1 a10; /* is_ve */
	T1 a11; /* is_ge */
	T1 a12; /* is_pedantic */
	T1 a13; /* is_verbose */
};

/* Struct for type ET_SYSTEM */
struct S58 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* universe */
	T0* a4; /* null_dynamic_type_set_builder */
	T0* a5; /* dynamic_types */
	T1 a6; /* catcall_warning_mode */
	T0* a7; /* dynamic_type_set_builder */
	T0* a8; /* unknown_type */
	T0* a9; /* boolean_type */
	T0* a10; /* character_type */
	T0* a11; /* wide_character_type */
	T0* a12; /* character_8_type */
	T0* a13; /* character_32_type */
	T0* a14; /* integer_type */
	T0* a15; /* integer_8_type */
	T0* a16; /* integer_16_type */
	T0* a17; /* integer_32_type */
	T0* a18; /* integer_64_type */
	T0* a19; /* natural_type */
	T0* a20; /* natural_8_type */
	T0* a21; /* natural_16_type */
	T0* a22; /* natural_32_type */
	T0* a23; /* natural_64_type */
	T0* a24; /* real_type */
	T0* a25; /* double_type */
	T0* a26; /* real_32_type */
	T0* a27; /* real_64_type */
	T0* a28; /* pointer_type */
	T0* a29; /* string_type */
	T0* a30; /* string_8_type */
	T0* a31; /* string_32_type */
	T0* a32; /* special_character_type */
	T0* a33; /* special_character_8_type */
	T0* a34; /* special_character_32_type */
	T0* a35; /* any_type */
	T0* a36; /* none_type */
	T0* a37; /* root_type */
	T0* a38; /* root_creation_procedure */
	T0* a39; /* array_area_feature */
	T0* a40; /* array_lower_feature */
	T0* a41; /* array_upper_feature */
	T0* a42; /* typed_pointer_to_pointer_feature */
	T0* a43; /* routine_closed_operands_feature */
};

/* Struct for type ET_CLASS */
struct S60 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T0* a3; /* ancestors */
	T0* a4; /* queries */
	T0* a5; /* procedures */
	T0* a6; /* class_keyword */
	T0* a7; /* end_keyword */
	T0* a8; /* eiffel_class */
	T0* a9; /* master_class */
	T6 a10; /* time_stamp */
	T0* a11; /* formal_parameters */
	T0* a12; /* group */
	T0* a13; /* class_mark */
	T6 a14; /* index */
	T1 a15; /* interface_checked */
	T1 a16; /* has_interface_error */
	T1 a17; /* is_parsed */
	T0* a18; /* overridden_class */
	T1 a19; /* has_syntax_error */
	T1 a20; /* features_flattened */
	T1 a21; /* has_flattening_error */
	T0* a22; /* parents */
	T1 a23; /* ancestors_built */
	T1 a24; /* has_ancestors_error */
	T0* a25; /* filename */
	T0* a26; /* creators */
	T0* a27; /* frozen_keyword */
	T0* a28; /* external_keyword */
	T0* a29; /* providers */
	T1 a30; /* in_system */
	T0* a31; /* invariants */
	T0* a32; /* convert_features */
	T1 a33; /* has_flat_implementation_error */
	T1 a34; /* flat_implementation_checked */
	T1 a35; /* has_implementation_error */
	T1 a36; /* implementation_checked */
	T0* a37; /* suppliers */
	T1 a38; /* has_deferred_features */
	T0* a39; /* feature_clauses */
	T0* a40; /* first_indexing */
	T0* a41; /* second_indexing */
	T0* a42; /* obsolete_message */
	T0* a43; /* leading_break */
	T1 a44; /* is_interface */
};

/* Struct for type ET_C_GENERATOR */
struct S61 {
	int id;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T1 a4; /* short_names */
	T1 a5; /* split_mode */
	T6 a6; /* split_threshold */
	T0* a7; /* system_name */
	T0* a8; /* type_checker */
	T0* a9; /* universe */
	T0* a10; /* current_system */
	T0* a11; /* current_file */
	T0* a12; /* header_file */
	T0* a13; /* current_type */
	T0* a14; /* current_feature */
	T0* a15; /* extra_dynamic_type_sets */
	T0* a16; /* current_dynamic_type_sets */
	T0* a17; /* current_function_header_buffer */
	T0* a18; /* current_function_body_buffer */
	T0* a19; /* temp_variables */
	T0* a20; /* used_temp_variables */
	T0* a21; /* free_temp_variables */
	T0* a22; /* frozen_temp_variables */
	T0* a23; /* conforming_types */
	T0* a24; /* conforming_type_set */
	T0* a25; /* non_conforming_types */
	T0* a26; /* current_call_info */
	T0* a27; /* operand_stack */
	T0* a28; /* call_operands */
	T0* a29; /* attachment_dynamic_type_ids */
	T0* a30; /* target_dynamic_type_ids */
	T0* a31; /* target_dynamic_types */
	T0* a32; /* standalone_type_sets */
	T0* a33; /* deep_twin_types */
	T0* a34; /* deep_equal_types */
	T0* a35; /* deep_feature_target_type_sets */
	T0* a36; /* current_agents */
	T0* a37; /* agent_open_operands */
	T0* a38; /* agent_closed_operands */
	T0* a39; /* agent_target */
	T0* a40; /* agent_arguments */
	T0* a41; /* agent_instruction */
	T0* a42; /* agent_expression */
	T0* a43; /* agent_closed_operands_type */
	T0* a44; /* wrapper_expression */
	T0* a45; /* agent_tuple_item_expressions */
	T0* a46; /* agent_manifest_tuple */
	T0* a47; /* formal_arguments */
	T0* a48; /* manifest_array_types */
	T0* a49; /* manifest_tuple_types */
	T0* a50; /* once_features */
	T0* a51; /* constant_features */
	T0* a52; /* inline_constants */
	T0* a53; /* dynamic_type_id_set_names */
	T0* a54; /* called_features */
	T0* a55; /* included_header_filenames */
	T0* a56; /* included_runtime_header_files */
	T0* a57; /* included_runtime_c_files */
	T0* a58; /* c_filenames */
	T1 a59; /* use_boehm_gc */
	T1 a60; /* finalize_mode */
	T0* a61; /* external_c_regexp */
	T0* a62; /* external_c_macro_regexp */
	T0* a63; /* external_c_struct_regexp */
	T0* a64; /* external_c_inline_regexp */
	T0* a65; /* old_external_c_regexp */
	T0* a66; /* old_external_c_macro_regexp */
	T0* a67; /* old_external_c_struct_regexp */
	T0* a68; /* external_cpp_regexp */
	T0* a69; /* external_cpp_inline_regexp */
	T0* a70; /* external_dllwin_regexp */
	T0* a71; /* c_file */
	T6 a72; /* c_file_size */
	T0* a73; /* cpp_file */
	T6 a74; /* cpp_file_size */
	T6 a75; /* indentation */
	T0* a76; /* assignment_target */
	T1 a77; /* in_operand */
	T0* a78; /* call_target_type */
	T0* a79; /* current_agent */
	T1 a80; /* call_target_check_void */
};

/* Struct for type KL_SHELL_COMMAND */
struct S62 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type UT_VERSION */
struct S63 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S64 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* current_dynamic_type */
	T0* a4; /* current_dynamic_feature */
	T0* a5; /* dynamic_type_sets */
	T0* a6; /* object_id_dynamic_type_set */
	T0* a7; /* current_index */
	T0* a8; /* result_index */
	T0* a9; /* character_index */
	T0* a10; /* boolean_index */
	T0* a11; /* double_index */
	T0* a12; /* real_index */
	T0* a13; /* integer_index */
	T0* a14; /* integer_8_index */
	T0* a15; /* integer_16_index */
	T0* a16; /* integer_32_index */
	T0* a17; /* integer_64_index */
	T0* a18; /* natural_index */
	T0* a19; /* natural_8_index */
	T0* a20; /* natural_16_index */
	T0* a21; /* natural_32_index */
	T0* a22; /* natural_64_index */
	T0* a23; /* pointer_index */
	T0* a24; /* none_index */
	T0* a25; /* string_index */
	T1 a26; /* catcall_error_mode */
	T1 a27; /* catcall_warning_mode */
	T1 a28; /* no_debug */
	T1 a29; /* no_assertion */
	T1 a30; /* is_built */
	T0* a31; /* universe */
	T0* a32; /* type_checker */
	T0* a33; /* current_class */
	T0* a34; /* current_type */
	T0* a35; /* current_feature */
	T0* a36; /* current_feature_impl */
	T0* a37; /* current_class_impl */
	T0* a38; /* enclosing_inline_agents */
	T0* a39; /* overloaded_procedures */
	T0* a40; /* unused_overloaded_procedures_list */
	T0* a41; /* overloaded_queries */
	T0* a42; /* unused_overloaded_queries_list */
	T0* a43; /* best_overloaded_features */
	T0* a44; /* unused_contexts */
	T0* a45; /* current_context */
	T0* a46; /* current_target_type */
	T1 a47; /* in_precursor */
	T0* a48; /* current_inline_agent */
	T1 a49; /* in_rescue */
	T1 a50; /* in_invariant */
	T1 a51; /* in_precondition */
	T1 a52; /* in_postcondition */
	T0* a53; /* precursor_procedures */
	T1 a54; /* in_assertion */
	T0* a55; /* precursor_queries */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S66 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S68 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S69 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S70 {
	int id;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S71 {
	int id;
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S72 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_STANDARD_FILES */
struct S75 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S76 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type KL_STDOUT_FILE */
struct S77 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type UC_STRING */
struct S78 {
	int id;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* last_byte_index_input */
	T6 a5; /* last_byte_index_result */
	T0* a6; /* area */
};

/* Struct for type KL_ANY_ROUTINES */
struct S79 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S80 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S81 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S82 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S83 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S84 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type SPECIAL [STRING_8] */
struct S85 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [STRING_8] */
struct S86 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S88 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T6 a4; /* count */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S89 {
	int id;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S93 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S96 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type ST_WORD_WRAPPER */
struct S97 {
	int id;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S98 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S99 {
	int id;
	T0* a1; /* root_element */
	T0* a2; /* internal_cursor */
	T0* a3; /* first_cell */
	T0* a4; /* last_cell */
	T6 a5; /* count */
	T0* a6; /* parent */
};

/* Struct for type XM_ELEMENT */
struct S100 {
	int id;
	T0* a1; /* parent */
	T0* a2; /* name */
	T0* a3; /* namespace */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
	T0* a7; /* internal_cursor */
};

/* Struct for type XM_POSITION_TABLE */
struct S101 {
	int id;
	T0* a1; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S103 {
	int id;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S104 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S105 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* next */
	T0* a4; /* source_parser */
	T0* a5; /* current_element */
	T0* a6; /* namespace_cache */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S106 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S107 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8] */
struct S108 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S109 {
	int id;
};

/* Struct for type ET_XACE_LIBRARY_PARSER */
struct S110 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* library_parser */
	T0* a5; /* xml_preprocessor */
	T0* a6; /* xml_validator */
	T0* a7; /* xml_parser */
	T0* a8; /* tree_pipe */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T1 a11; /* is_ve */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S111 {
	int id;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* yyss */
	T0* a14; /* yytranslate */
	T0* a15; /* yyr1 */
	T0* a16; /* yytypes1 */
	T0* a17; /* yytypes2 */
	T0* a18; /* yydefact */
	T0* a19; /* yydefgoto */
	T0* a20; /* yypact */
	T0* a21; /* yypgoto */
	T0* a22; /* yytable */
	T0* a23; /* yycheck */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T6 a32; /* error_count */
	T1 a33; /* yy_lookahead_needed */
	T6 a34; /* yyerrstatus */
	T6 a35; /* yyssp */
	T6 a36; /* last_token */
	T6 a37; /* yyvsp1 */
	T6 a38; /* yyvsp2 */
	T6 a39; /* yyvsp3 */
	T6 a40; /* yyvsp4 */
	T6 a41; /* yyvsp5 */
	T6 a42; /* yyvsp6 */
	T6 a43; /* yyvsp7 */
	T6 a44; /* yyvsp8 */
	T6 a45; /* yyvsp9 */
	T6 a46; /* yyvsp10 */
	T6 a47; /* yyvsp11 */
	T0* a48; /* last_string_value */
	T6 a49; /* yyvsc1 */
	T0* a50; /* yyvs1 */
	T0* a51; /* yyspecial_routines1 */
	T0* a52; /* last_any_value */
	T6 a53; /* yyvsc4 */
	T0* a54; /* yyvs4 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc2 */
	T0* a57; /* yyvs2 */
	T0* a58; /* yyspecial_routines2 */
	T0* a59; /* yyvs11 */
	T6 a60; /* yyvsc11 */
	T0* a61; /* yyspecial_routines11 */
	T0* a62; /* yyvs10 */
	T0* a63; /* yyvs5 */
	T6 a64; /* yyvsc10 */
	T0* a65; /* yyspecial_routines10 */
	T6 a66; /* yyvsc3 */
	T0* a67; /* yyvs3 */
	T0* a68; /* yyspecial_routines3 */
	T0* a69; /* yyvs6 */
	T6 a70; /* yyvsc6 */
	T0* a71; /* yyspecial_routines6 */
	T0* a72; /* yyvs8 */
	T0* a73; /* yyvs7 */
	T6 a74; /* yyvsc8 */
	T0* a75; /* yyspecial_routines8 */
	T6 a76; /* yyvsc7 */
	T0* a77; /* yyspecial_routines7 */
	T0* a78; /* yyvs9 */
	T6 a79; /* yyvsc9 */
	T0* a80; /* yyspecial_routines9 */
	T6 a81; /* yyvsc5 */
	T0* a82; /* yyspecial_routines5 */
	T0* a83; /* dtd_callbacks */
};

/* Struct for type UT_MESSAGE */
struct S114 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
struct S115 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S117 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S118 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S119 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S120 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S121 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T1 a3; /* before */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S122 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T0* a6; /* internal_cursor */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S123 {
	int id;
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S124 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S125 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_keys */
	T0* a12; /* internal_cursor */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S126 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S127 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S128 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_IDENTIFIER */
struct S129 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a3; /* status_code */
	T6 a4; /* compressed_position */
	T6 a5; /* hash_code */
	T0* a6; /* name */
};

/* Struct for type SPECIAL [ANY] */
struct S131 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S132 {
	int id;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S133 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S134 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S135 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S136 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T1 a4; /* is_abstract */
	T1 a5; /* is_recursive */
	T1 a6; /* is_read_only */
	T0* a7; /* exclude */
	T0* a8; /* subclusters */
	T1 a9; /* overridden_constraint_enabled */
	T0* a10; /* parent */
	T1 a11; /* is_override */
	T0* a12; /* provider_constraint */
	T0* a13; /* dependant_constraint */
	T1 a14; /* is_implicit */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S137 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLIES */
struct S138 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S139 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTERS] */
struct S140 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S141 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
struct S142 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S143 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_EXCLUDE] */
struct S144 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S145 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
struct S146 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
struct S147 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S148 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S149 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S150 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
};

/* Struct for type KL_PLATFORM */
struct S151 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S152 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S153 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S154 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* key_storage */
	T6 a16; /* free_slot */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S155 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S156 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S157 {
	int id;
	T0* a1; /* base_type */
	T1 a2; /* is_alive */
	T6 a3; /* id */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* base_class */
	T0* a7; /* procedures */
	T0* a8; /* conforming_dynamic_types */
	T0* a9; /* all_conforming_dynamic_types */
	T0* a10; /* next_type */
	T0* a11; /* meta_type */
	T1 a12; /* has_reference_attributes */
	T1 a13; /* has_generic_expanded_attributes */
	T0* a14; /* query_calls */
	T1 a15; /* has_static */
	T0* a16; /* procedure_calls */
};

/* Struct for type ET_QUERY_LIST */
struct S159 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a3; /* declared_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S161 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a3; /* declared_count */
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S163 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T0* a4; /* result_type_set */
	T1 a5; /* is_generated */
	T0* a6; /* target_type */
	T6 a7; /* builtin_code */
	T1 a8; /* is_creation */
	T0* a9; /* first_precursor */
	T1 a10; /* is_regular */
	T0* a11; /* other_precursors */
	T1 a12; /* is_built */
	T1 a13; /* is_current_type_needed */
	T1 a14; /* is_static */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S164 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S165 {
	int id;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S166 {
	int id;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T1 a8; /* is_utc */
	T0* a9; /* internal_item */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S170 {
	int id;
};

/* Struct for type ET_EIFFEL_PARSER */
struct S171 {
	int id;
	T0* a1; /* counters */
	T0* a2; /* last_formal_arguments_stack */
	T0* a3; /* last_local_variables_stack */
	T0* a4; /* last_keywords */
	T0* a5; /* last_symbols */
	T0* a6; /* assertions */
	T0* a7; /* queries */
	T0* a8; /* procedures */
	T0* a9; /* constraints */
	T0* a10; /* providers */
	T0* a11; /* universe */
	T0* a12; /* ast_factory */
	T0* a13; /* error_handler */
	T1 a14; /* use_assign_keyword */
	T1 a15; /* use_attribute_keyword */
	T1 a16; /* use_convert_keyword */
	T1 a17; /* use_create_keyword */
	T1 a18; /* use_recast_keyword */
	T1 a19; /* use_reference_keyword */
	T1 a20; /* use_void_keyword */
	T1 a21; /* providers_enabled */
	T1 a22; /* overriding_class_added */
	T1 a23; /* is_null */
	T6 a24; /* last_text_count */
	T6 a25; /* last_literal_start */
	T0* a26; /* filename */
	T0* a27; /* current_class */
	T0* a28; /* yyss */
	T0* a29; /* input_buffer */
	T0* a30; /* yytranslate */
	T0* a31; /* yyr1 */
	T0* a32; /* yytypes1 */
	T0* a33; /* yytypes2 */
	T0* a34; /* yydefact */
	T0* a35; /* yydefgoto */
	T0* a36; /* yypact */
	T0* a37; /* yypgoto */
	T0* a38; /* yytable */
	T0* a39; /* yycheck */
	T6 a40; /* time_stamp */
	T0* a41; /* cluster */
	T6 a42; /* yy_start_state */
	T6 a43; /* yy_line */
	T6 a44; /* yy_column */
	T6 a45; /* yy_position */
	T6 a46; /* line */
	T6 a47; /* column */
	T6 a48; /* position */
	T0* a49; /* yy_state_stack */
	T6 a50; /* yy_end */
	T6 a51; /* yy_start */
	T6 a52; /* yy_parsing_status */
	T6 a53; /* yy_suspended_yystacksize */
	T6 a54; /* yy_suspended_yystate */
	T6 a55; /* yy_suspended_yyn */
	T6 a56; /* yy_suspended_yychar1 */
	T6 a57; /* yy_suspended_index */
	T6 a58; /* yy_suspended_yyss_top */
	T6 a59; /* yy_suspended_yy_goto */
	T6 a60; /* error_count */
	T1 a61; /* yy_lookahead_needed */
	T6 a62; /* yyerrstatus */
	T6 a63; /* yyssp */
	T6 a64; /* last_token */
	T0* a65; /* last_class */
	T0* a66; /* last_clients */
	T0* a67; /* last_export_clients */
	T0* a68; /* last_feature_clause */
	T6 a69; /* last_literal_end */
	T0* a70; /* verbatim_marker */
	T0* a71; /* verbatim_open_white_characters */
	T0* a72; /* verbatim_close_white_characters */
	T1 a73; /* yy_more_flag */
	T6 a74; /* yy_more_len */
	T6 a75; /* yy_last_accepting_state */
	T6 a76; /* yy_last_accepting_cpos */
	T1 a77; /* yy_rejected */
	T6 a78; /* yy_state_count */
	T6 a79; /* yy_full_match */
	T6 a80; /* yy_lp */
	T6 a81; /* yy_looking_for_trail_begin */
	T6 a82; /* yy_full_lp */
	T6 a83; /* yy_full_state */
	T0* a84; /* yy_nxt */
	T0* a85; /* yy_chk */
	T0* a86; /* yy_base */
	T0* a87; /* yy_def */
	T0* a88; /* yy_ec */
	T0* a89; /* yy_meta */
	T0* a90; /* yy_accept */
	T0* a91; /* yy_acclist */
	T0* a92; /* yy_content */
	T0* a93; /* yy_content_area */
	T6 a94; /* yyvsp1 */
	T6 a95; /* yyvsp2 */
	T6 a96; /* yyvsp3 */
	T6 a97; /* yyvsp4 */
	T6 a98; /* yyvsp5 */
	T6 a99; /* yyvsp6 */
	T6 a100; /* yyvsp7 */
	T6 a101; /* yyvsp8 */
	T6 a102; /* yyvsp9 */
	T6 a103; /* yyvsp10 */
	T6 a104; /* yyvsp11 */
	T6 a105; /* yyvsp12 */
	T6 a106; /* yyvsp13 */
	T6 a107; /* yyvsp14 */
	T6 a108; /* yyvsp15 */
	T6 a109; /* yyvsp16 */
	T6 a110; /* yyvsp17 */
	T6 a111; /* yyvsp18 */
	T6 a112; /* yyvsp19 */
	T6 a113; /* yyvsp20 */
	T6 a114; /* yyvsp21 */
	T6 a115; /* yyvsp22 */
	T6 a116; /* yyvsp23 */
	T6 a117; /* yyvsp24 */
	T6 a118; /* yyvsp25 */
	T6 a119; /* yyvsp26 */
	T6 a120; /* yyvsp27 */
	T6 a121; /* yyvsp28 */
	T6 a122; /* yyvsp29 */
	T6 a123; /* yyvsp30 */
	T6 a124; /* yyvsp31 */
	T6 a125; /* yyvsp32 */
	T6 a126; /* yyvsp33 */
	T6 a127; /* yyvsp34 */
	T6 a128; /* yyvsp35 */
	T6 a129; /* yyvsp36 */
	T6 a130; /* yyvsp37 */
	T6 a131; /* yyvsp38 */
	T6 a132; /* yyvsp39 */
	T6 a133; /* yyvsp40 */
	T6 a134; /* yyvsp41 */
	T6 a135; /* yyvsp42 */
	T6 a136; /* yyvsp43 */
	T6 a137; /* yyvsp44 */
	T6 a138; /* yyvsp45 */
	T6 a139; /* yyvsp46 */
	T6 a140; /* yyvsp47 */
	T6 a141; /* yyvsp48 */
	T6 a142; /* yyvsp49 */
	T6 a143; /* yyvsp50 */
	T6 a144; /* yyvsp51 */
	T6 a145; /* yyvsp52 */
	T6 a146; /* yyvsp53 */
	T6 a147; /* yyvsp54 */
	T6 a148; /* yyvsp55 */
	T6 a149; /* yyvsp56 */
	T6 a150; /* yyvsp57 */
	T6 a151; /* yyvsp58 */
	T6 a152; /* yyvsp59 */
	T6 a153; /* yyvsp60 */
	T6 a154; /* yyvsp61 */
	T6 a155; /* yyvsp62 */
	T6 a156; /* yyvsp63 */
	T6 a157; /* yyvsp64 */
	T6 a158; /* yyvsp65 */
	T6 a159; /* yyvsp66 */
	T6 a160; /* yyvsp67 */
	T6 a161; /* yyvsp68 */
	T6 a162; /* yyvsp69 */
	T6 a163; /* yyvsp70 */
	T6 a164; /* yyvsp71 */
	T6 a165; /* yyvsp72 */
	T6 a166; /* yyvsp73 */
	T6 a167; /* yyvsp74 */
	T6 a168; /* yyvsp75 */
	T6 a169; /* yyvsp76 */
	T6 a170; /* yyvsp77 */
	T6 a171; /* yyvsp78 */
	T6 a172; /* yyvsp79 */
	T6 a173; /* yyvsp80 */
	T6 a174; /* yyvsp81 */
	T6 a175; /* yyvsp82 */
	T6 a176; /* yyvsp83 */
	T6 a177; /* yyvsp84 */
	T6 a178; /* yyvsp85 */
	T6 a179; /* yyvsp86 */
	T6 a180; /* yyvsp87 */
	T6 a181; /* yyvsp88 */
	T6 a182; /* yyvsp89 */
	T6 a183; /* yyvsp90 */
	T6 a184; /* yyvsp91 */
	T6 a185; /* yyvsp92 */
	T6 a186; /* yyvsp93 */
	T6 a187; /* yyvsp94 */
	T6 a188; /* yyvsp95 */
	T6 a189; /* yyvsp96 */
	T6 a190; /* yyvsp97 */
	T6 a191; /* yyvsp98 */
	T6 a192; /* yyvsp99 */
	T6 a193; /* yyvsp100 */
	T6 a194; /* yyvsp101 */
	T6 a195; /* yyvsp102 */
	T6 a196; /* yyvsp103 */
	T6 a197; /* yyvsp104 */
	T6 a198; /* yyvsp105 */
	T6 a199; /* yyvsp106 */
	T6 a200; /* yyvsp107 */
	T6 a201; /* yyvsp108 */
	T6 a202; /* yyvsp109 */
	T6 a203; /* yyvsp110 */
	T6 a204; /* yyvsp111 */
	T6 a205; /* yyvsp112 */
	T6 a206; /* yyvsp113 */
	T6 a207; /* yyvsp114 */
	T6 a208; /* yyvsp115 */
	T6 a209; /* yyvsp116 */
	T6 a210; /* yyvsc1 */
	T0* a211; /* yyvs1 */
	T0* a212; /* yyspecial_routines1 */
	T0* a213; /* last_any_value */
	T6 a214; /* yyvsc2 */
	T0* a215; /* yyvs2 */
	T0* a216; /* yyspecial_routines2 */
	T0* a217; /* last_et_keyword_value */
	T6 a218; /* yyvsc3 */
	T0* a219; /* yyvs3 */
	T0* a220; /* yyspecial_routines3 */
	T0* a221; /* last_et_agent_keyword_value */
	T6 a222; /* yyvsc4 */
	T0* a223; /* yyvs4 */
	T0* a224; /* yyspecial_routines4 */
	T0* a225; /* last_et_precursor_keyword_value */
	T6 a226; /* yyvsc5 */
	T0* a227; /* yyvs5 */
	T0* a228; /* yyspecial_routines5 */
	T0* a229; /* last_et_symbol_value */
	T6 a230; /* yyvsc6 */
	T0* a231; /* yyvs6 */
	T0* a232; /* yyspecial_routines6 */
	T0* a233; /* last_et_position_value */
	T6 a234; /* yyvsc7 */
	T0* a235; /* yyvs7 */
	T0* a236; /* yyspecial_routines7 */
	T0* a237; /* last_et_bit_constant_value */
	T6 a238; /* yyvsc8 */
	T0* a239; /* yyvs8 */
	T0* a240; /* yyspecial_routines8 */
	T0* a241; /* last_et_boolean_constant_value */
	T6 a242; /* yyvsc9 */
	T0* a243; /* yyvs9 */
	T0* a244; /* yyspecial_routines9 */
	T0* a245; /* last_et_break_value */
	T6 a246; /* yyvsc10 */
	T0* a247; /* yyvs10 */
	T0* a248; /* yyspecial_routines10 */
	T0* a249; /* last_et_character_constant_value */
	T6 a250; /* yyvsc11 */
	T0* a251; /* yyvs11 */
	T0* a252; /* yyspecial_routines11 */
	T0* a253; /* last_et_current_value */
	T6 a254; /* yyvsc12 */
	T0* a255; /* yyvs12 */
	T0* a256; /* yyspecial_routines12 */
	T0* a257; /* last_et_free_operator_value */
	T6 a258; /* yyvsc13 */
	T0* a259; /* yyvs13 */
	T0* a260; /* yyspecial_routines13 */
	T0* a261; /* last_et_identifier_value */
	T6 a262; /* yyvsc14 */
	T0* a263; /* yyvs14 */
	T0* a264; /* yyspecial_routines14 */
	T0* a265; /* last_et_integer_constant_value */
	T6 a266; /* yyvsc15 */
	T0* a267; /* yyvs15 */
	T0* a268; /* yyspecial_routines15 */
	T0* a269; /* last_et_keyword_operator_value */
	T6 a270; /* yyvsc16 */
	T0* a271; /* yyvs16 */
	T0* a272; /* yyspecial_routines16 */
	T0* a273; /* last_et_manifest_string_value */
	T6 a274; /* yyvsc17 */
	T0* a275; /* yyvs17 */
	T0* a276; /* yyspecial_routines17 */
	T0* a277; /* last_et_real_constant_value */
	T6 a278; /* yyvsc18 */
	T0* a279; /* yyvs18 */
	T0* a280; /* yyspecial_routines18 */
	T0* a281; /* last_et_result_value */
	T6 a282; /* yyvsc19 */
	T0* a283; /* yyvs19 */
	T0* a284; /* yyspecial_routines19 */
	T0* a285; /* last_et_retry_instruction_value */
	T6 a286; /* yyvsc20 */
	T0* a287; /* yyvs20 */
	T0* a288; /* yyspecial_routines20 */
	T0* a289; /* last_et_symbol_operator_value */
	T6 a290; /* yyvsc21 */
	T0* a291; /* yyvs21 */
	T0* a292; /* yyspecial_routines21 */
	T0* a293; /* last_et_void_value */
	T6 a294; /* yyvsc22 */
	T0* a295; /* yyvs22 */
	T0* a296; /* yyspecial_routines22 */
	T0* a297; /* last_et_semicolon_symbol_value */
	T6 a298; /* yyvsc23 */
	T0* a299; /* yyvs23 */
	T0* a300; /* yyspecial_routines23 */
	T0* a301; /* last_et_bracket_symbol_value */
	T6 a302; /* yyvsc24 */
	T0* a303; /* yyvs24 */
	T0* a304; /* yyspecial_routines24 */
	T0* a305; /* last_et_question_mark_symbol_value */
	T6 a306; /* last_break_end */
	T6 a307; /* last_comment_end */
	T6 a308; /* ms_column */
	T6 a309; /* ms_line */
	T6 a310; /* break_kind */
	T0* a311; /* yyvs42 */
	T0* a312; /* yyvs78 */
	T0* a313; /* yyvs97 */
	T0* a314; /* yyvs101 */
	T0* a315; /* yyvs56 */
	T0* a316; /* yyvs53 */
	T0* a317; /* yyvs67 */
	T0* a318; /* yyvs86 */
	T6 a319; /* yyvsc78 */
	T0* a320; /* yyspecial_routines78 */
	T0* a321; /* yyvs79 */
	T0* a322; /* yyvs82 */
	T6 a323; /* yyvsc79 */
	T0* a324; /* yyspecial_routines79 */
	T0* a325; /* yyvs80 */
	T6 a326; /* yyvsc82 */
	T0* a327; /* yyspecial_routines82 */
	T0* a328; /* yyvs81 */
	T6 a329; /* yyvsc80 */
	T0* a330; /* yyspecial_routines80 */
	T0* a331; /* yyvs54 */
	T0* a332; /* yyvs96 */
	T6 a333; /* yyvsc81 */
	T0* a334; /* yyspecial_routines81 */
	T6 a335; /* yyvsc42 */
	T0* a336; /* yyspecial_routines42 */
	T6 a337; /* yyvsc76 */
	T0* a338; /* yyvs76 */
	T0* a339; /* yyspecial_routines76 */
	T0* a340; /* yyvs74 */
	T0* a341; /* yyvs75 */
	T6 a342; /* yyvsc75 */
	T0* a343; /* yyspecial_routines75 */
	T6 a344; /* yyvsc74 */
	T0* a345; /* yyspecial_routines74 */
	T0* a346; /* yyvs50 */
	T0* a347; /* yyvs49 */
	T6 a348; /* yyvsc49 */
	T0* a349; /* yyspecial_routines49 */
	T0* a350; /* yyvs70 */
	T0* a351; /* yyvs48 */
	T6 a352; /* yyvsc50 */
	T0* a353; /* yyspecial_routines50 */
	T0* a354; /* yyvs88 */
	T6 a355; /* yyvsc48 */
	T0* a356; /* yyspecial_routines48 */
	T0* a357; /* yyvs47 */
	T6 a358; /* yyvsc47 */
	T0* a359; /* yyspecial_routines47 */
	T6 a360; /* yyvsc97 */
	T0* a361; /* yyspecial_routines97 */
	T6 a362; /* yyvsc101 */
	T0* a363; /* yyspecial_routines101 */
	T0* a364; /* yyvs27 */
	T6 a365; /* yyvsc99 */
	T0* a366; /* yyvs99 */
	T0* a367; /* yyspecial_routines99 */
	T0* a368; /* yyvs107 */
	T0* a369; /* yyvs61 */
	T0* a370; /* yyvs87 */
	T0* a371; /* yyvs100 */
	T6 a372; /* yyvsc100 */
	T0* a373; /* yyspecial_routines100 */
	T6 a374; /* yyvsc107 */
	T0* a375; /* yyspecial_routines107 */
	T0* a376; /* yyvs106 */
	T0* a377; /* yyvs69 */
	T0* a378; /* yyvs64 */
	T6 a379; /* yyvsc106 */
	T0* a380; /* yyspecial_routines106 */
	T6 a381; /* yyvsc61 */
	T0* a382; /* yyspecial_routines61 */
	T0* a383; /* yyvs60 */
	T0* a384; /* yyvs44 */
	T6 a385; /* yyvsc60 */
	T0* a386; /* yyspecial_routines60 */
	T0* a387; /* yyvs68 */
	T6 a388; /* yyvsc68 */
	T0* a389; /* yyspecial_routines68 */
	T6 a390; /* yyvsc44 */
	T0* a391; /* yyspecial_routines44 */
	T0* a392; /* yyvs43 */
	T6 a393; /* yyvsc43 */
	T0* a394; /* yyspecial_routines43 */
	T6 a395; /* yyvsc87 */
	T0* a396; /* yyspecial_routines87 */
	T6 a397; /* yyvsc70 */
	T0* a398; /* yyspecial_routines70 */
	T6 a399; /* yyvsc56 */
	T0* a400; /* yyspecial_routines56 */
	T0* a401; /* yyvs55 */
	T6 a402; /* yyvsc55 */
	T0* a403; /* yyspecial_routines55 */
	T6 a404; /* yyvsc53 */
	T0* a405; /* yyspecial_routines53 */
	T0* a406; /* yyvs51 */
	T0* a407; /* yyvs52 */
	T6 a408; /* yyvsc52 */
	T0* a409; /* yyspecial_routines52 */
	T0* a410; /* yyvs112 */
	T6 a411; /* yyvsc51 */
	T0* a412; /* yyspecial_routines51 */
	T6 a413; /* yyvsc112 */
	T0* a414; /* yyspecial_routines112 */
	T0* a415; /* yyvs110 */
	T0* a416; /* yyvs111 */
	T6 a417; /* yyvsc111 */
	T0* a418; /* yyspecial_routines111 */
	T6 a419; /* yyvsc67 */
	T0* a420; /* yyspecial_routines67 */
	T0* a421; /* yyvs66 */
	T6 a422; /* yyvsc66 */
	T0* a423; /* yyspecial_routines66 */
	T0* a424; /* yyvs105 */
	T0* a425; /* yyvs104 */
	T0* a426; /* yyvs33 */
	T6 a427; /* yyvsc105 */
	T0* a428; /* yyspecial_routines105 */
	T0* a429; /* yyvs46 */
	T0* a430; /* yyvs103 */
	T0* a431; /* yyvs91 */
	T0* a432; /* yyvs45 */
	T0* a433; /* yyvs102 */
	T0* a434; /* yyvs73 */
	T0* a435; /* yyvs65 */
	T6 a436; /* yyvsc104 */
	T0* a437; /* yyspecial_routines104 */
	T6 a438; /* yyvsc65 */
	T0* a439; /* yyspecial_routines65 */
	T6 a440; /* yyvsc33 */
	T0* a441; /* yyspecial_routines33 */
	T6 a442; /* yyvsc69 */
	T0* a443; /* yyspecial_routines69 */
	T6 a444; /* yyvsc64 */
	T0* a445; /* yyspecial_routines64 */
	T0* a446; /* yyvs32 */
	T6 a447; /* yyvsc32 */
	T0* a448; /* yyspecial_routines32 */
	T6 a449; /* yyvsc73 */
	T0* a450; /* yyspecial_routines73 */
	T0* a451; /* yyvs72 */
	T0* a452; /* yyvs71 */
	T6 a453; /* yyvsc71 */
	T0* a454; /* yyspecial_routines71 */
	T6 a455; /* yyvsc72 */
	T0* a456; /* yyspecial_routines72 */
	T6 a457; /* yyvsc91 */
	T0* a458; /* yyspecial_routines91 */
	T0* a459; /* yyvs90 */
	T0* a460; /* yyvs89 */
	T6 a461; /* yyvsc89 */
	T0* a462; /* yyspecial_routines89 */
	T6 a463; /* yyvsc90 */
	T0* a464; /* yyspecial_routines90 */
	T0* a465; /* yyvs62 */
	T6 a466; /* yyvsc103 */
	T0* a467; /* yyspecial_routines103 */
	T6 a468; /* yyvsc102 */
	T0* a469; /* yyspecial_routines102 */
	T6 a470; /* yyvsc86 */
	T0* a471; /* yyspecial_routines86 */
	T6 a472; /* yyvsc92 */
	T0* a473; /* yyvs92 */
	T0* a474; /* yyspecial_routines92 */
	T6 a475; /* yyvsc113 */
	T0* a476; /* yyvs113 */
	T0* a477; /* yyspecial_routines113 */
	T6 a478; /* yyvsc45 */
	T0* a479; /* yyspecial_routines45 */
	T6 a480; /* yyvsc110 */
	T0* a481; /* yyspecial_routines110 */
	T6 a482; /* yyvsc27 */
	T0* a483; /* yyspecial_routines27 */
	T0* a484; /* yyvs26 */
	T6 a485; /* yyvsc26 */
	T0* a486; /* yyspecial_routines26 */
	T6 a487; /* yyvsc88 */
	T0* a488; /* yyspecial_routines88 */
	T0* a489; /* yyvs85 */
	T0* a490; /* yyvs37 */
	T6 a491; /* yyvsc85 */
	T0* a492; /* yyspecial_routines85 */
	T0* a493; /* yyvs35 */
	T0* a494; /* yyvs116 */
	T0* a495; /* yyvs77 */
	T0* a496; /* yyvs84 */
	T0* a497; /* yyvs57 */
	T0* a498; /* yyvs25 */
	T6 a499; /* yyvsc54 */
	T0* a500; /* yyspecial_routines54 */
	T6 a501; /* yyvsc77 */
	T0* a502; /* yyspecial_routines77 */
	T0* a503; /* yyvs59 */
	T0* a504; /* yyvs58 */
	T6 a505; /* yyvsc59 */
	T0* a506; /* yyspecial_routines59 */
	T6 a507; /* yyvsc58 */
	T0* a508; /* yyspecial_routines58 */
	T0* a509; /* yyvs115 */
	T6 a510; /* yyvsc84 */
	T0* a511; /* yyspecial_routines84 */
	T6 a512; /* yyvsc115 */
	T0* a513; /* yyspecial_routines115 */
	T0* a514; /* yyvs114 */
	T0* a515; /* yyvs41 */
	T6 a516; /* yyvsc114 */
	T0* a517; /* yyspecial_routines114 */
	T6 a518; /* yyvsc41 */
	T0* a519; /* yyspecial_routines41 */
	T0* a520; /* yyvs38 */
	T0* a521; /* yyvs40 */
	T6 a522; /* yyvsc40 */
	T0* a523; /* yyspecial_routines40 */
	T0* a524; /* yyvs39 */
	T6 a525; /* yyvsc38 */
	T0* a526; /* yyspecial_routines38 */
	T6 a527; /* yyvsc39 */
	T0* a528; /* yyspecial_routines39 */
	T0* a529; /* yyvs108 */
	T0* a530; /* yyvs95 */
	T6 a531; /* yyvsc57 */
	T0* a532; /* yyspecial_routines57 */
	T6 a533; /* yyvsc95 */
	T0* a534; /* yyspecial_routines95 */
	T0* a535; /* yyvs94 */
	T6 a536; /* yyvsc94 */
	T0* a537; /* yyspecial_routines94 */
	T6 a538; /* yyvsc62 */
	T0* a539; /* yyspecial_routines62 */
	T6 a540; /* yyvsc37 */
	T0* a541; /* yyspecial_routines37 */
	T6 a542; /* yyvsc108 */
	T0* a543; /* yyspecial_routines108 */
	T0* a544; /* yyvs98 */
	T6 a545; /* yyvsc25 */
	T0* a546; /* yyspecial_routines25 */
	T0* a547; /* yyvs63 */
	T6 a548; /* yyvsc63 */
	T0* a549; /* yyspecial_routines63 */
	T6 a550; /* yyvsc116 */
	T0* a551; /* yyspecial_routines116 */
	T0* a552; /* yyvs36 */
	T0* a553; /* yyvs83 */
	T0* a554; /* yyvs93 */
	T0* a555; /* yyvs109 */
	T0* a556; /* yyvs34 */
	T6 a557; /* yyvsc35 */
	T0* a558; /* yyspecial_routines35 */
	T6 a559; /* yyvsc34 */
	T0* a560; /* yyspecial_routines34 */
	T6 a561; /* yyvsc98 */
	T0* a562; /* yyspecial_routines98 */
	T6 a563; /* yyvsc93 */
	T0* a564; /* yyspecial_routines93 */
	T6 a565; /* yyvsc96 */
	T0* a566; /* yyspecial_routines96 */
	T6 a567; /* yyvsc109 */
	T0* a568; /* yyspecial_routines109 */
	T6 a569; /* yyvsc46 */
	T0* a570; /* yyspecial_routines46 */
	T0* a571; /* yyvs30 */
	T6 a572; /* yyvsc36 */
	T0* a573; /* yyspecial_routines36 */
	T0* a574; /* yyvs31 */
	T6 a575; /* yyvsc83 */
	T0* a576; /* yyspecial_routines83 */
	T6 a577; /* yyvsc31 */
	T0* a578; /* yyspecial_routines31 */
	T6 a579; /* yyvsc30 */
	T0* a580; /* yyspecial_routines30 */
	T0* a581; /* yyvs28 */
	T0* a582; /* yyvs29 */
	T6 a583; /* yyvsc29 */
	T0* a584; /* yyspecial_routines29 */
	T6 a585; /* yyvsc28 */
	T0* a586; /* yyspecial_routines28 */
};

/* Struct for type ET_CLASS_TYPE */
struct S172 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* eiffel_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S173 {
	int id;
	T0* a1; /* left_bracket */
	T0* a2; /* right_bracket */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S174 {
	int id;
	T0* a1; /* eiffel_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* name */
	T0* a5; /* unresolved_type */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S176 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a3; /* arguments */
	T0* a4; /* extended_name */
	T0* a5; /* declared_type */
	T6 a6; /* hash_code */
	T0* a7; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_feature */
	T6 a10; /* builtin_code */
	T0* a11; /* is_keyword */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* postconditions */
	T0* a16; /* alias_clause */
	T0* a17; /* first_indexing */
	T6 a18; /* first_seed */
	T1 a19; /* implementation_checked */
	T1 a20; /* has_implementation_error */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* other_seeds */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T0* a27; /* first_precursor */
	T0* a28; /* other_precursors */
	T0* a29; /* synonym */
	T1 a30; /* assertions_checked */
	T1 a31; /* has_assertions_error */
};

/* Struct for type ET_KEYWORD */
struct S179 {
	int id;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_TUPLE_TYPE */
struct S181 {
	int id;
	T0* a1; /* actual_parameters */
	T0* a2; /* tuple_keyword */
};

/* Struct for type ET_TYPE_CHECKER */
struct S182 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* universe */
	T1 a5; /* has_fatal_error */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S183 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S184 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S185 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S186 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S187 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_LIST */
struct S188 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S189 {
	int id;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S190 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S191 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S192 {
	int id;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* free_slot */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_keys */
	T6 a14; /* found_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* key_storage */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S193 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S194 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S195 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S196 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S198 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S199 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S200 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S203 {
	int id;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type DS_ARRAYED_LIST [ET_CALL_EXPRESSION] */
struct S204 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S205 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S206 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S207 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S208 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T6 a13; /* found_position */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_INLINE_CONSTANT] */
struct S209 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S210 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S211 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S212 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S213 {
	int id;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T0* a4; /* offset_vector */
	T6 a5; /* offset_vector_count */
	T6 a6; /* brastart_capacity */
	T0* a7; /* brastart_vector */
	T6 a8; /* brastart_lower */
	T6 a9; /* brastart_count */
	T6 a10; /* eptr_capacity */
	T0* a11; /* eptr_vector */
	T6 a12; /* eptr_lower */
	T6 a13; /* eptr_upper */
	T0* a14; /* byte_code */
	T0* a15; /* pattern */
	T6 a16; /* subexpression_count */
	T6 a17; /* pattern_count */
	T6 a18; /* pattern_position */
	T6 a19; /* code_index */
	T6 a20; /* maxbackrefs */
	T6 a21; /* optchanged */
	T6 a22; /* first_character */
	T6 a23; /* required_character */
	T6 a24; /* regexp_countlits */
	T0* a25; /* start_bits */
	T0* a26; /* error_message */
	T1 a27; /* is_anchored */
	T0* a28; /* character_case_mapping */
	T0* a29; /* word_set */
	T6 a30; /* subject_next_start */
	T6 a31; /* match_count */
	T6 a32; /* error_code */
	T6 a33; /* error_position */
	T1 a34; /* is_startline */
	T1 a35; /* is_caseless */
	T1 a36; /* is_multiline */
	T1 a37; /* is_dotall */
	T1 a38; /* is_extended */
	T1 a39; /* is_empty_allowed */
	T1 a40; /* is_dollar_endonly */
	T1 a41; /* is_bol */
	T1 a42; /* is_eol */
	T1 a43; /* is_greedy */
	T1 a44; /* is_strict */
	T1 a45; /* is_ichanged */
	T6 a46; /* first_matched_index */
	T6 a47; /* eptr */
	T6 a48; /* offset_top */
	T1 a49; /* is_matching_caseless */
	T1 a50; /* is_matching_multiline */
	T1 a51; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S214 {
	int id;
	T0* a1; /* name */
	T6 a2; /* mode */
	T0* a3; /* string_name */
	T14 a4; /* file_pointer */
	T1 a5; /* descriptor_available */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S215 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* base_class */
	T0* a8; /* item_type_sets */
	T1 a9; /* has_reference_attributes */
	T1 a10; /* has_generic_expanded_attributes */
	T0* a11; /* conforming_dynamic_types */
	T0* a12; /* next_type */
	T0* a13; /* meta_type */
	T0* a14; /* query_calls */
	T0* a15; /* all_conforming_dynamic_types */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S216 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S217 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S218 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S219 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S220 {
	int id;
	T1 a1; /* is_generated */
	T0* a2; /* target_type */
	T0* a3; /* static_feature */
	T0* a4; /* dynamic_type_sets */
	T0* a5; /* current_feature */
	T6 a6; /* id */
	T1 a7; /* is_regular */
	T1 a8; /* is_static */
	T1 a9; /* is_creation */
	T0* a10; /* result_type_set */
	T6 a11; /* builtin_code */
	T0* a12; /* first_precursor */
	T0* a13; /* other_precursors */
	T1 a14; /* is_built */
	T0* a15; /* parent_type */
	T1 a16; /* is_current_type_needed */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S221 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S222 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S223 {
	int id;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S227 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S229 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* base_class */
	T0* a8; /* item_type_set */
	T1 a9; /* has_reference_attributes */
	T1 a10; /* has_generic_expanded_attributes */
	T0* a11; /* conforming_dynamic_types */
	T0* a12; /* next_type */
	T0* a13; /* meta_type */
	T0* a14; /* query_calls */
	T0* a15; /* all_conforming_dynamic_types */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S233 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* base_class */
	T0* a8; /* result_type_set */
	T0* a9; /* open_operand_type_sets */
	T0* a10; /* conforming_dynamic_types */
	T0* a11; /* next_type */
	T0* a12; /* meta_type */
	T0* a13; /* query_calls */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S234 {
	int id;
	T6 a1; /* id */
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* base_class */
	T0* a8; /* open_operand_type_sets */
	T0* a9; /* conforming_dynamic_types */
	T0* a10; /* next_type */
	T0* a11; /* meta_type */
	T0* a12; /* query_calls */
	T1 a13; /* has_reference_attributes */
	T1 a14; /* has_generic_expanded_attributes */
	T0* a15; /* all_conforming_dynamic_types */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S236 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S239 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S242 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type TUPLE */
struct S246 {
	int id;
};

/* Struct for type PROCEDURE [ET_C_GENERATOR, TUPLE] */
struct S247 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*);
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S248 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S250 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S251 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S255 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S256 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S257 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S258 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a3; /* declared_type */
	T0* a4; /* is_keyword */
	T0* a5; /* constant */
	T0* a6; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* assigner */
	T6 a10; /* first_seed */
	T1 a11; /* implementation_checked */
	T1 a12; /* has_implementation_error */
	T0* a13; /* other_seeds */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* frozen_keyword */
	T6 a18; /* id */
	T6 a19; /* version */
	T0* a20; /* first_precursor */
	T0* a21; /* other_precursors */
	T0* a22; /* synonym */
	T1 a23; /* assertions_checked */
	T1 a24; /* has_assertions_error */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S260 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a3; /* declared_type */
	T0* a4; /* is_keyword */
	T0* a5; /* unique_keyword */
	T0* a6; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* assigner */
	T6 a10; /* first_seed */
	T6 a11; /* id */
	T1 a12; /* implementation_checked */
	T1 a13; /* has_implementation_error */
	T0* a14; /* other_seeds */
	T0* a15; /* semicolon */
	T0* a16; /* feature_clause */
	T0* a17; /* first_indexing */
	T0* a18; /* frozen_keyword */
	T6 a19; /* version */
	T0* a20; /* first_precursor */
	T0* a21; /* other_precursors */
	T0* a22; /* synonym */
	T1 a23; /* assertions_checked */
	T1 a24; /* has_assertions_error */
};

/* Struct for type ET_ATTRIBUTE */
struct S261 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a3; /* declared_type */
	T0* a4; /* clients */
	T0* a5; /* implementation_class */
	T0* a6; /* implementation_feature */
	T0* a7; /* assigner */
	T6 a8; /* first_seed */
	T1 a9; /* implementation_checked */
	T1 a10; /* has_implementation_error */
	T0* a11; /* other_seeds */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* frozen_keyword */
	T6 a16; /* id */
	T6 a17; /* version */
	T0* a18; /* first_precursor */
	T0* a19; /* other_precursors */
	T0* a20; /* synonym */
	T1 a21; /* assertions_checked */
	T1 a22; /* has_assertions_error */
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S263 {
	int id;
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S264 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S266 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S267 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S268 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S269 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* internal_cursor */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S270 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S271 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S272 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S273 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type UNIX_FILE_INFO */
struct S275 {
	int id;
	T0* a1; /* buffered_file_info */
	T0* a2; /* file_name */
};

/* Struct for type ET_AST_FACTORY */
struct S277 {
	int id;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S278 {
	int id;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_OPTIONS */
struct S279 {
	int id;
	T0* a1; /* declared_console_application */
	T0* a2; /* declared_exception_trace */
	T0* a3; /* declared_trace */
	T0* a4; /* declared_c_compiler_options */
	T0* a5; /* declared_header */
	T0* a6; /* declared_link */
	T0* a7; /* declared_abstract */
	T0* a8; /* declared_recursive */
	T0* a9; /* declared_read_only */
	T6 a10; /* declared_fst_expansion_factor */
	T6 a11; /* declared_heap_size */
	T6 a12; /* declared_inlining_size */
	T6 a13; /* declared_msil_classes_per_module */
	T6 a14; /* declared_stack_size */
	T0* a15; /* declared_address_expression */
	T0* a16; /* declared_arguments */
	T0* a17; /* declared_array_optimization */
	T0* a18; /* declared_assembly */
	T0* a19; /* declared_assertion */
	T0* a20; /* declared_automatic_backup */
	T0* a21; /* declared_callback */
	T0* a22; /* declared_case_insensitive */
	T0* a23; /* declared_check_vape */
	T0* a24; /* declared_clean */
	T0* a25; /* declared_cls_compliant */
	T0* a26; /* declared_component */
	T0* a27; /* declared_create_keyword_extension */
	T0* a28; /* declared_culture */
	T0* a29; /* declared_dead_code_removal */
	T0* a30; /* declared_debug_option */
	T0* a31; /* declared_debug_tag */
	T0* a32; /* declared_debugger */
	T0* a33; /* declared_document */
	T0* a34; /* declared_dotnet_naming_convention */
	T0* a35; /* declared_dynamic_runtime */
	T0* a36; /* declared_ecf_library */
	T0* a37; /* declared_enforce_unique_class_names */
	T0* a38; /* declared_exclude */
	T0* a39; /* declared_export_option */
	T0* a40; /* declared_external_runtime */
	T0* a41; /* declared_finalize_option */
	T0* a42; /* declared_flat_fst_optimization */
	T0* a43; /* declared_force_32bits */
	T0* a44; /* declared_fst_optimization */
	T0* a45; /* declared_full_class_checking */
	T0* a46; /* declared_garbage_collector */
	T0* a47; /* declared_gc_info */
	T0* a48; /* declared_high_memory_compiler */
	T0* a49; /* declared_il_verifiable */
	T0* a50; /* declared_include */
	T0* a51; /* declared_inlining */
	T0* a52; /* declared_jumps_optimization */
	T0* a53; /* declared_layout */
	T0* a54; /* declared_layout_optimization */
	T0* a55; /* declared_leaves_optimization */
	T0* a56; /* declared_line_generation */
	T0* a57; /* declared_linker */
	T0* a58; /* declared_linux_fpu_double_precision */
	T0* a59; /* declared_manifest_string_trace */
	T0* a60; /* declared_map */
	T0* a61; /* declared_metadata_cache_path */
	T0* a62; /* declared_msil_assembly_compatibility */
	T0* a63; /* declared_msil_clr_version */
	T0* a64; /* declared_msil_culture */
	T0* a65; /* declared_msil_generation */
	T0* a66; /* declared_msil_generation_version */
	T0* a67; /* declared_msil_key_file_name */
	T0* a68; /* declared_msil_use_optimized_precompile */
	T0* a69; /* declared_multithreaded */
	T0* a70; /* declared_namespace */
	T0* a71; /* declared_no_default_lib */
	T0* a72; /* declared_old_verbatim_strings */
	T0* a73; /* declared_override_cluster */
	T0* a74; /* declared_portable_code_generation */
	T0* a75; /* declared_precompiled */
	T0* a76; /* declared_prefix_option */
	T0* a77; /* declared_profile */
	T0* a78; /* declared_public_key_token */
	T0* a79; /* declared_reloads_optimization */
	T0* a80; /* declared_shared_library_definition */
	T0* a81; /* declared_split */
	T0* a82; /* declared_storable_filename */
	T0* a83; /* declared_strip_option */
	T0* a84; /* declared_target */
	T0* a85; /* declared_use_cluster_name_as_namespace */
	T0* a86; /* declared_use_full_cluster_name_as_namespace */
	T0* a87; /* declared_verbose */
	T0* a88; /* declared_version */
	T0* a89; /* declared_visible_filename */
	T0* a90; /* declared_warning */
	T0* a91; /* declared_wedit */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S280 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_CLUSTER */
struct S283 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* library_prefix */
	T0* a5; /* cluster_prefix */
	T0* a6; /* class_options */
	T1 a7; /* is_abstract */
	T1 a8; /* is_recursive */
	T1 a9; /* is_read_only */
	T0* a10; /* options */
	T0* a11; /* subclusters */
	T0* a12; /* libraries */
	T1 a13; /* overridden_constraint_enabled */
	T1 a14; /* is_override */
	T0* a15; /* parent */
	T1 a16; /* is_implicit */
	T0* a17; /* provider_constraint */
	T0* a18; /* dependant_constraint */
	T1 a19; /* is_mounted */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S284 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library */
	T0* a3; /* position */
	T0* a4; /* library_prefix */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S285 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S286 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_ATTRIBUTE */
struct S287 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_NODE] */
struct S288 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type ET_XACE_LIBRARY */
struct S290 {
	int id;
	T0* a1; /* library_prefix */
	T0* a2; /* name */
	T0* a3; /* options */
	T0* a4; /* clusters */
	T0* a5; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S291 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_storage */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* free_slot */
	T6 a8; /* last_position */
	T6 a9; /* count */
	T6 a10; /* capacity */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S294 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S295 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S296 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S297 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S298 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S299 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S301 {
	int id;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S303 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S304 {
	int id;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_names */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* anchored_type_checker */
	T0* a11; /* signature_checker */
	T0* a12; /* parent_checker */
	T0* a13; /* formal_parameter_checker */
	T0* a14; /* precursor_checker */
	T0* a15; /* universe */
	T0* a16; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S305 {
	int id;
	T0* a1; /* parent_checker3 */
	T0* a2; /* universe */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S306 {
	int id;
	T0* a1; /* feature_checker */
	T0* a2; /* precursor_procedures */
	T0* a3; /* precursor_queries */
	T0* a4; /* supplier_builder */
	T0* a5; /* current_class */
	T0* a6; /* no_suppliers */
	T1 a7; /* flat_mode */
	T1 a8; /* flat_dbc_mode */
	T1 a9; /* suppliers_enabled */
	T0* a10; /* universe */
	T1 a11; /* short_mode */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S307 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S308 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* universe */
	T0* a7; /* current_class */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S312 {
	int id;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S313 {
	int id;
	T1 a1; /* overriding_class_added */
	T1 a2; /* use_assign_keyword */
	T1 a3; /* use_attribute_keyword */
	T1 a4; /* use_convert_keyword */
	T1 a5; /* use_create_keyword */
	T1 a6; /* use_recast_keyword */
	T1 a7; /* use_reference_keyword */
	T1 a8; /* use_void_keyword */
	T6 a9; /* last_text_count */
	T6 a10; /* last_literal_start */
	T0* a11; /* filename */
	T0* a12; /* universe */
	T0* a13; /* ast_factory */
	T0* a14; /* error_handler */
	T0* a15; /* input_buffer */
	T0* a16; /* last_classname */
	T6 a17; /* yy_start_state */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T6 a21; /* line */
	T6 a22; /* column */
	T6 a23; /* position */
	T0* a24; /* yy_state_stack */
	T6 a25; /* yy_end */
	T6 a26; /* yy_start */
	T6 a27; /* last_token */
	T1 a28; /* yy_more_flag */
	T6 a29; /* yy_more_len */
	T6 a30; /* yy_state_count */
	T0* a31; /* yy_ec */
	T0* a32; /* yy_content_area */
	T0* a33; /* yy_content */
	T0* a34; /* yy_accept */
	T6 a35; /* yy_last_accepting_state */
	T6 a36; /* yy_last_accepting_cpos */
	T0* a37; /* yy_chk */
	T0* a38; /* yy_base */
	T0* a39; /* yy_def */
	T0* a40; /* yy_meta */
	T0* a41; /* yy_nxt */
	T6 a42; /* yy_lp */
	T0* a43; /* yy_acclist */
	T6 a44; /* yy_looking_for_trail_begin */
	T6 a45; /* yy_full_match */
	T6 a46; /* yy_full_state */
	T6 a47; /* yy_full_lp */
	T1 a48; /* yy_rejected */
	T1 a49; /* class_keyword_found */
	T6 a50; /* last_literal_end */
	T0* a51; /* verbatim_marker */
	T0* a52; /* verbatim_open_white_characters */
	T0* a53; /* verbatim_close_white_characters */
	T6 a54; /* ms_column */
	T6 a55; /* ms_line */
	T6 a56; /* last_break_end */
	T6 a57; /* last_comment_end */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S314 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S315 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_NONE_GROUP */
struct S316 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_PARENT */
struct S317 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a8; /* end_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S318 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S319 {
	int id;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S320 {
	int id;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S321 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* inherit_keyword */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S323 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S324 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S325 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type UT_CONFIG_PARSER */
struct S326 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T6 a7; /* line_nb */
	T0* a8; /* yyss */
	T0* a9; /* input_buffer */
	T6 a10; /* yy_end */
	T6 a11; /* yy_position */
	T6 a12; /* yy_line */
	T6 a13; /* yy_column */
	T6 a14; /* yy_parsing_status */
	T6 a15; /* yy_suspended_yystacksize */
	T6 a16; /* yy_suspended_yystate */
	T6 a17; /* yy_suspended_yyn */
	T6 a18; /* yy_suspended_yychar1 */
	T6 a19; /* yy_suspended_index */
	T6 a20; /* yy_suspended_yyss_top */
	T6 a21; /* yy_suspended_yy_goto */
	T6 a22; /* error_count */
	T1 a23; /* yy_lookahead_needed */
	T6 a24; /* yyerrstatus */
	T6 a25; /* yyssp */
	T0* a26; /* yypact */
	T6 a27; /* last_token */
	T0* a28; /* yytranslate */
	T0* a29; /* yycheck */
	T0* a30; /* yytable */
	T0* a31; /* yydefact */
	T0* a32; /* yyr1 */
	T0* a33; /* yypgoto */
	T0* a34; /* yydefgoto */
	T0* a35; /* yytypes1 */
	T0* a36; /* yytypes2 */
	T6 a37; /* yy_start */
	T6 a38; /* yyvsp1 */
	T6 a39; /* yyvsp2 */
	T6 a40; /* yyvsp3 */
	T1 a41; /* yy_more_flag */
	T6 a42; /* yy_more_len */
	T6 a43; /* line */
	T6 a44; /* column */
	T6 a45; /* position */
	T6 a46; /* yy_start_state */
	T0* a47; /* yy_state_stack */
	T6 a48; /* yy_state_count */
	T0* a49; /* yy_ec */
	T0* a50; /* yy_content_area */
	T0* a51; /* yy_content */
	T0* a52; /* yy_accept */
	T6 a53; /* yy_last_accepting_state */
	T6 a54; /* yy_last_accepting_cpos */
	T0* a55; /* yy_chk */
	T0* a56; /* yy_base */
	T0* a57; /* yy_def */
	T0* a58; /* yy_meta */
	T0* a59; /* yy_nxt */
	T6 a60; /* yy_lp */
	T0* a61; /* yy_acclist */
	T6 a62; /* yy_looking_for_trail_begin */
	T6 a63; /* yy_full_match */
	T6 a64; /* yy_full_state */
	T6 a65; /* yy_full_lp */
	T1 a66; /* yy_rejected */
	T6 a67; /* yyvsc1 */
	T0* a68; /* yyvs1 */
	T0* a69; /* yyspecial_routines1 */
	T0* a70; /* last_any_value */
	T6 a71; /* yyvsc2 */
	T0* a72; /* yyvs2 */
	T0* a73; /* yyspecial_routines2 */
	T0* a74; /* last_string_value */
	T6 a75; /* if_level */
	T0* a76; /* yyvs3 */
	T6 a77; /* ignored_level */
	T6 a78; /* yyvsc3 */
	T0* a79; /* yyspecial_routines3 */
};

/* Struct for type ET_DO_PROCEDURE */
struct S327 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a2; /* arguments */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a5; /* end_keyword */
	T0* a6; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* is_keyword */
	T0* a9; /* obsolete_message */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* first_indexing */
	T6 a16; /* first_seed */
	T1 a17; /* implementation_checked */
	T1 a18; /* has_implementation_error */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* other_seeds */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T1 a27; /* has_assertions_error */
	T1 a28; /* assertions_checked */
	T0* a29; /* synonym */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S329 {
	int id;
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S332 {
	int id;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T0* a3; /* dynamic_types */
	T1 a4; /* is_dynamic_types_readonly */
	T6 a5; /* count */
	T0* a6; /* targets */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S333 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a2; /* arguments */
	T0* a3; /* extended_name */
	T0* a4; /* deferred_keyword */
	T6 a5; /* hash_code */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T0* a9; /* is_keyword */
	T0* a10; /* obsolete_message */
	T0* a11; /* preconditions */
	T0* a12; /* postconditions */
	T0* a13; /* first_indexing */
	T6 a14; /* first_seed */
	T1 a15; /* implementation_checked */
	T1 a16; /* has_implementation_error */
	T0* a17; /* first_precursor */
	T0* a18; /* other_precursors */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* other_seeds */
	T0* a22; /* frozen_keyword */
	T6 a23; /* id */
	T6 a24; /* version */
	T1 a25; /* has_assertions_error */
	T1 a26; /* assertions_checked */
	T0* a27; /* synonym */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S334 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S336 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S337 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S338 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S339 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S340 {
	int id;
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S341 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKABLE [BOOLEAN] */
struct S342 {
	int id;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S343 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S344 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S345 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S346 {
	int id;
	T0* a1; /* next */
	T0* a2; /* context */
	T0* a3; /* element_prefix */
	T0* a4; /* element_local_part */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S347 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S348 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S349 {
	int id;
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S350 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8] */
struct S353 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8] */
struct S355 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY] */
struct S356 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
struct S357 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S358 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_ec */
	T0* a23; /* yy_content_area */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* last_error */
	T0* a41; /* start_conditions */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S359 {
	int id;
	T0* a1; /* source_name */
	T6 a2; /* row */
	T6 a3; /* column */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S361 {
	int id;
	T0* a1; /* first_cell */
	T0* a2; /* internal_cursor */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S362 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S363 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* equality_tester */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S365 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S366 {
	int id;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S367 {
	int id;
	T0* a1; /* version */
	T0* a2; /* encoding */
	T1 a3; /* stand_alone */
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S368 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S369 {
	int id;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* item_storage */
	T0* a15; /* special_item_routines */
	T0* a16; /* hash_function */
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S370 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S371 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S372 {
	int id;
	T0* a1; /* name */
	T2 a2; /* type */
	T1 a3; /* is_list_type */
	T0* a4; /* enumeration_list */
	T2 a5; /* value */
	T0* a6; /* default_value */
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S373 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
	T0* a5; /* equality_tester */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S374 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S375 {
	int id;
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S376 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S377 {
	int id;
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S378 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S379 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S380 {
	int id;
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S381 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S382 {
	int id;
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S383 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S384 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S386 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S388 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S389 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S390 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S391 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S392 {
	int id;
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S393 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* input_buffer */
	T1 a7; /* in_use */
	T0* a8; /* input_name */
	T0* a9; /* last_error */
	T0* a10; /* start_conditions */
	T6 a11; /* yy_start_state */
	T6 a12; /* yy_line */
	T6 a13; /* yy_column */
	T6 a14; /* yy_position */
	T6 a15; /* line */
	T6 a16; /* column */
	T6 a17; /* position */
	T1 a18; /* yy_more_flag */
	T6 a19; /* yy_more_len */
	T6 a20; /* yy_last_accepting_state */
	T6 a21; /* yy_last_accepting_cpos */
	T1 a22; /* yy_rejected */
	T6 a23; /* yy_state_count */
	T6 a24; /* yy_full_match */
	T6 a25; /* yy_lp */
	T6 a26; /* yy_looking_for_trail_begin */
	T6 a27; /* yy_full_lp */
	T6 a28; /* yy_full_state */
	T0* a29; /* yy_state_stack */
	T6 a30; /* yy_end */
	T6 a31; /* yy_start */
	T0* a32; /* yy_nxt */
	T0* a33; /* yy_chk */
	T0* a34; /* yy_base */
	T0* a35; /* yy_def */
	T0* a36; /* yy_ec */
	T0* a37; /* yy_meta */
	T0* a38; /* yy_accept */
	T0* a39; /* yy_content */
	T0* a40; /* yy_content_area */
	T6 a41; /* last_token */
	T0* a42; /* last_value */
	T0* a43; /* input_filter */
	T0* a44; /* input_stream */
	T0* a45; /* input_resolver */
	T0* a46; /* yy_acclist */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S394 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S396 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S397 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_ec */
	T0* a25; /* yy_content_area */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* last_error */
	T0* a43; /* start_conditions */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S399 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* input_buffer */
	T1 a7; /* in_use */
	T0* a8; /* input_name */
	T0* a9; /* last_error */
	T0* a10; /* start_conditions */
	T6 a11; /* yy_start_state */
	T6 a12; /* yy_line */
	T6 a13; /* yy_column */
	T6 a14; /* yy_position */
	T6 a15; /* line */
	T6 a16; /* column */
	T6 a17; /* position */
	T1 a18; /* yy_more_flag */
	T6 a19; /* yy_more_len */
	T6 a20; /* yy_last_accepting_state */
	T6 a21; /* yy_last_accepting_cpos */
	T1 a22; /* yy_rejected */
	T6 a23; /* yy_state_count */
	T6 a24; /* yy_full_match */
	T6 a25; /* yy_lp */
	T6 a26; /* yy_looking_for_trail_begin */
	T6 a27; /* yy_full_lp */
	T6 a28; /* yy_full_state */
	T0* a29; /* yy_state_stack */
	T6 a30; /* yy_end */
	T6 a31; /* yy_start */
	T1 a32; /* pre_sent */
	T1 a33; /* post_sent */
	T0* a34; /* yy_nxt */
	T0* a35; /* yy_chk */
	T0* a36; /* yy_base */
	T0* a37; /* yy_def */
	T0* a38; /* yy_ec */
	T0* a39; /* yy_meta */
	T0* a40; /* yy_accept */
	T0* a41; /* yy_content */
	T0* a42; /* yy_content_area */
	T6 a43; /* last_token */
	T0* a44; /* last_value */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
struct S400 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [INTEGER_32] */
struct S401 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [STRING_8] */
struct S402 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S403 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S405 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S407 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S409 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S410 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S411 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S412 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S413 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
struct S414 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTERS] */
struct S415 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S416 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_EXCLUDE] */
struct S417 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S418 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S419 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S421 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S423 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S424 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S425 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S426 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S427 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S428 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S429 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S430 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type MANAGED_POINTER */
struct S432 {
	int id;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S433 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S434 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S435 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S436 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S437 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S438 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S439 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S440 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S442 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_DIRECTORY */
struct S444 {
	int id;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T6 a3; /* mode */
	T0* a4; /* name */
	T0* a5; /* string_name */
	T0* a6; /* entry_buffer */
	T0* a7; /* lastentry */
	T14 a8; /* directory_pointer */
};

/* Struct for type KL_EIFFEL_COMPILER */
struct S445 {
	int id;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S446 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type ET_CLASS_NAME_LIST */
struct S448 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENTS */
struct S449 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S450 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S452 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S453 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S454 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S455 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S456 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S457 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S458 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S459 {
	int id;
};

/* Struct for type ET_SYMBOL */
struct S460 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S461 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S462 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S463 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S464 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S465 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S466 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S467 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S469 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S470 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S472 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S473 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S475 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S476 {
	int id;
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S477 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S478 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S479 {
	int id;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* free_operator_name */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S480 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S481 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S483 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S484 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S485 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S486 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S487 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S488 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S489 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S491 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S492 {
	int id;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S493 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S494 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S495 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S496 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S497 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S498 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S499 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S500 {
	int id;
};

/* Struct for type ET_VOID */
struct S501 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S502 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S503 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S504 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S505 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S506 {
	int id;
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S507 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S508 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S509 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S510 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S511 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S512 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S513 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a3; /* compressed_position */
	T6 a4; /* index */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S514 {
	int id;
	T0* a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S515 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a7; /* compressed_position */
	T6 a8; /* index */
	T0* a9; /* cast_type */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S516 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a3; /* compressed_position */
	T6 a4; /* index */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S517 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T6 a5; /* index */
	T0* a6; /* sign */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S518 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T6 a5; /* index */
	T0* a6; /* sign */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S519 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T6 a5; /* index */
	T0* a6; /* sign */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S520 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* sign */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S521 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* sign */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S523 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S524 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* index */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S525 {
	int id;
	T2 a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S526 {
	int id;
	T2 a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S528 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S530 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S531 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATOR_LIST */
struct S532 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S533 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S534 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S535 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S536 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S537 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INVARIANTS */
struct S538 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T1 a5; /* assertions_checked */
	T1 a6; /* implementation_checked */
	T1 a7; /* has_assertions_error */
	T1 a8; /* has_implementation_error */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S539 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S540 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S542 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S544 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S546 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S550 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S551 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S553 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S554 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S555 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S556 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S557 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S558 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S559 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S560 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S561 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S562 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S563 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S565 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S566 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S568 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S569 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S570 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T0* a5; /* name */
	T6 a6; /* index */
	T0* a7; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S571 {
	int id;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S572 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S573 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S575 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S576 {
	int id;
	T0* a1; /* left_bracket */
	T0* a2; /* right_bracket */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S577 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S578 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S579 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S581 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S582 {
	int id;
	T0* a1; /* constant */
	T6 a2; /* size */
	T0* a3; /* bit_keyword */
};

/* Struct for type ET_BIT_FEATURE */
struct S583 {
	int id;
	T0* a1; /* bit_keyword */
	T0* a2; /* name */
	T6 a3; /* size */
	T0* a4; /* constant */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S584 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S586 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S588 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S589 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S590 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S591 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S592 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S593 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S594 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S595 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S596 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S597 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S598 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S599 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S600 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S601 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S603 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S604 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S605 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_RENAME */
struct S606 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S607 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S608 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S610 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S611 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S612 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S613 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S614 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S615 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S617 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S618 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_ITEM] */
struct S620 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
struct S621 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S622 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S623 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S624 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S625 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S626 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S627 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S628 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S630 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S632 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S633 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S635 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S636 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S637 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S638 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S639 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S640 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S642 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S643 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S644 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S645 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S646 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S647 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S648 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S651 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S652 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S653 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_PRECONDITIONS */
struct S655 {
	int id;
	T0* a1; /* require_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S656 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S657 {
	int id;
	T0* a1; /* local_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S658 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_COMPOUND */
struct S659 {
	int id;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S660 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S661 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S662 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S663 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a3; /* arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* is_keyword */
	T0* a10; /* assigner */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* first_indexing */
	T6 a18; /* first_seed */
	T1 a19; /* implementation_checked */
	T1 a20; /* has_implementation_error */
	T0* a21; /* first_precursor */
	T0* a22; /* other_precursors */
	T0* a23; /* other_seeds */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* frozen_keyword */
	T6 a27; /* id */
	T6 a28; /* version */
	T1 a29; /* has_assertions_error */
	T1 a30; /* assertions_checked */
	T0* a31; /* synonym */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S664 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S665 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a3; /* arguments */
	T0* a4; /* declared_type */
	T0* a5; /* end_keyword */
	T0* a6; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* is_keyword */
	T0* a10; /* assigner */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* first_indexing */
	T6 a18; /* first_seed */
	T1 a19; /* implementation_checked */
	T1 a20; /* has_implementation_error */
	T0* a21; /* first_precursor */
	T0* a22; /* other_precursors */
	T0* a23; /* other_seeds */
	T0* a24; /* semicolon */
	T0* a25; /* feature_clause */
	T0* a26; /* frozen_keyword */
	T6 a27; /* id */
	T6 a28; /* version */
	T1 a29; /* has_assertions_error */
	T1 a30; /* assertions_checked */
	T0* a31; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S666 {
	int id;
	T0* a1; /* deferred_keyword */
	T0* a2; /* extended_name */
	T6 a3; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T0* a9; /* implementation_feature */
	T0* a10; /* is_keyword */
	T0* a11; /* assigner */
	T0* a12; /* obsolete_message */
	T0* a13; /* preconditions */
	T0* a14; /* postconditions */
	T0* a15; /* first_indexing */
	T6 a16; /* first_seed */
	T1 a17; /* implementation_checked */
	T1 a18; /* has_implementation_error */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T0* a21; /* other_seeds */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T1 a27; /* has_assertions_error */
	T1 a28; /* assertions_checked */
	T0* a29; /* synonym */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S669 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S670 {
	int id;
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S671 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a3; /* arguments */
	T0* a4; /* end_keyword */
	T0* a5; /* clients */
	T0* a6; /* implementation_class */
	T0* a7; /* implementation_feature */
	T0* a8; /* is_keyword */
	T0* a9; /* obsolete_message */
	T0* a10; /* preconditions */
	T0* a11; /* locals */
	T0* a12; /* compound */
	T0* a13; /* postconditions */
	T0* a14; /* rescue_clause */
	T0* a15; /* first_indexing */
	T6 a16; /* first_seed */
	T1 a17; /* implementation_checked */
	T1 a18; /* has_implementation_error */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T0* a21; /* other_seeds */
	T0* a22; /* semicolon */
	T0* a23; /* feature_clause */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T1 a27; /* has_assertions_error */
	T1 a28; /* assertions_checked */
	T0* a29; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S672 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a3; /* arguments */
	T0* a4; /* extended_name */
	T6 a5; /* hash_code */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_feature */
	T6 a9; /* builtin_code */
	T0* a10; /* is_keyword */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* postconditions */
	T0* a14; /* alias_clause */
	T0* a15; /* first_indexing */
	T6 a16; /* first_seed */
	T1 a17; /* implementation_checked */
	T1 a18; /* has_implementation_error */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T0* a21; /* other_seeds */
	T0* a22; /* frozen_keyword */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T6 a25; /* id */
	T6 a26; /* version */
	T1 a27; /* has_assertions_error */
	T1 a28; /* assertions_checked */
	T0* a29; /* synonym */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S673 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S674 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S675 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S676 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S677 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S678 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S679 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S680 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S681 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S682 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S683 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S684 {
	int id;
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S685 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S686 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S688 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S689 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S691 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S692 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S693 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S695 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S696 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S697 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S699 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S700 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S701 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S702 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S703 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S704 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S705 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S706 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S707 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S708 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S709 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S710 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S711 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S712 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S713 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S714 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S716 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S717 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S719 {
	int id;
	T0* a1; /* like_keyword */
	T0* a2; /* name */
	T6 a3; /* seed */
	T1 a4; /* is_procedure */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S720 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S721 {
	int id;
	T0* a1; /* like_keyword */
	T0* a2; /* current_keyword */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S723 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S724 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S725 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S727 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S728 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S729 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S730 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S731 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S732 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S733 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S734 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S735 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S736 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S738 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S739 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S740 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S741 {
	int id;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S743 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S744 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S745 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S747 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S748 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S749 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S750 {
	int id;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S751 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S752 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S753 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S754 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S755 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S756 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S757 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S758 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S759 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S760 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S761 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S762 {
	int id;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S763 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S764 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S765 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S767 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S769 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S770 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S772 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S773 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S774 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S775 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S776 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S777 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S778 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S779 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S780 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S781 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S783 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S784 {
	int id;
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S785 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S787 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S788 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S789 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S790 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S791 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T6 a5; /* index */
	T0* a6; /* parent_type */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S792 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* expression */
	T0* a3; /* right_parenthesis */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S793 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S794 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S795 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S796 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S797 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* name */
	T6 a3; /* index */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S798 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* current_keyword */
	T6 a3; /* index */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S799 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* result_keyword */
	T6 a3; /* index */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S800 {
	int id;
	T0* a1; /* dollar */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S801 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S802 {
	int id;
	T0* a1; /* left */
	T0* a2; /* name */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S804 {
	int id;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S805 {
	int id;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S806 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S807 {
	int id;
	T0* a1; /* name */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S808 {
	int id;
	T0* a1; /* old_keyword */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type ET_CALL_AGENT */
struct S809 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* target */
	T6 a5; /* index */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S810 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S812 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S813 {
	int id;
	T0* a1; /* once_keyword */
	T0* a2; /* manifest_string */
	T6 a3; /* id */
	T6 a4; /* index */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S814 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S815 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S816 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a2; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a6; /* index */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S817 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S818 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S819 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S820 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S821 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S822 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S823 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S824 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S825 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S826 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S827 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S828 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S829 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S830 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S831 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S832 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S833 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a4; /* implicit_result */
	T0* a5; /* agent_keyword */
	T0* a6; /* preconditions */
	T0* a7; /* locals */
	T0* a8; /* compound */
	T0* a9; /* postconditions */
	T0* a10; /* rescue_clause */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
	T6 a13; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S834 {
	int id;
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S835 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a4; /* implicit_result */
	T0* a5; /* agent_keyword */
	T0* a6; /* preconditions */
	T0* a7; /* locals */
	T0* a8; /* compound */
	T0* a9; /* postconditions */
	T0* a10; /* rescue_clause */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
	T6 a13; /* index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S836 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a9; /* implicit_result */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S837 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a3; /* agent_keyword */
	T0* a4; /* preconditions */
	T0* a5; /* locals */
	T0* a6; /* compound */
	T0* a7; /* postconditions */
	T0* a8; /* rescue_clause */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
	T6 a11; /* index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S838 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a3; /* agent_keyword */
	T0* a4; /* preconditions */
	T0* a5; /* locals */
	T0* a6; /* compound */
	T0* a7; /* postconditions */
	T0* a8; /* rescue_clause */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
	T6 a11; /* index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S839 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* end_keyword */
	T0* a8; /* target */
	T0* a9; /* actual_arguments */
	T6 a10; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S840 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S841 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S842 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S844 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S845 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S846 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S847 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S849 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S854 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S855 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S856 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S857 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S859 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S860 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S862 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S864 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S865 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S866 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S867 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S869 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S871 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S872 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S873 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CALL_EXPRESSION] */
struct S875 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S876 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S877 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S878 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S879 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S881 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S882 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S883 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
struct S885 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT] */
struct S887 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S888 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S889 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S890 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S891 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S892 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S893 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8] */
struct S895 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type RX_BYTE_CODE */
struct S898 {
	int id;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CASE_MAPPING */
struct S899 {
	int id;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type RX_CHARACTER_SET */
struct S900 {
	int id;
	T0* a1; /* set */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S902 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S903 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S904 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_keys */
	T0* a14; /* slots */
	T0* a15; /* clashes */
	T0* a16; /* special_item_routines */
	T0* a17; /* key_storage */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
struct S905 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S906 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S907 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S908 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S909 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S910 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S911 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S912 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S913 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S914 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S915 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S916 {
	int id;
	T0* a1; /* container */
	T0* a2; /* next_cursor */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S917 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S918 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S919 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S920 {
	int id;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type C_STRING */
struct S923 {
	int id;
	T6 a1; /* count */
	T0* a2; /* managed_data */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S924 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S925 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S926 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* se_reported */
	T1 a3; /* ve_reported */
	T1 a4; /* ge_reported */
	T0* a5; /* default_template */
	T0* a6; /* parameters */
	T0* a7; /* current_class */
	T0* a8; /* class_impl */
	T0* a9; /* position */
	T0* a10; /* code */
	T0* a11; /* etl_code */
	T1 a12; /* ise_fatal */
	T1 a13; /* se_fatal */
	T1 a14; /* ve_fatal */
	T1 a15; /* ge_fatal */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S927 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S928 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* se_reported */
	T1 a10; /* se_fatal */
	T1 a11; /* ve_reported */
	T1 a12; /* ve_fatal */
	T1 a13; /* ge_reported */
	T1 a14; /* ge_fatal */
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S929 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S930 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* first_cell */
	T0* a4; /* last_cell */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S931 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S932 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S933 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S934 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S935 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S936 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S937 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S938 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S941 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S944 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* agent_type */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T1 a5; /* is_dynamic_types_readonly */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S946 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S947 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S948 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S949 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S950 {
	int id;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S951 {
	int id;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S954 {
	int id;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S955 {
	int id;
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S957 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FILE_POSITION */
struct S959 {
	int id;
	T0* a1; /* filename */
	T6 a2; /* compressed_position */
};

/* Struct for type KL_STDIN_FILE */
struct S960 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* name */
	T2 a3; /* last_character */
	T0* a4; /* character_buffer */
	T14 a5; /* file_pointer */
	T6 a6; /* mode */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S961 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S962 {
	int id;
};

/* Struct for type ARRAY [ET_TYPE] */
struct S963 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S969 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S970 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S971 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S972 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S973 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type UT_TRISTATE */
struct S975 {
	int id;
	T2 a1; /* value */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S976 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S977 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S978 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S979 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
struct S980 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S982 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S984 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* position */
	T6 a4; /* found_position */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* modulus */
	T6 a11; /* slots_position */
	T6 a12; /* clashes_previous_position */
	T0* a13; /* equality_tester */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S985 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S987 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* position */
	T6 a6; /* last_position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* free_slot */
	T0* a11; /* equality_tester */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T0* a16; /* key_storage */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S988 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
struct S990 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS_NAME] */
struct S991 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* equality_tester */
	T0* a8; /* special_item_routines */
	T0* a9; /* item_storage */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* count */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S992 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* rename_table */
	T0* a5; /* export_table */
	T0* a6; /* undefine_table */
	T0* a7; /* redefine_table */
	T0* a8; /* select_table */
	T0* a9; /* replicable_features */
	T0* a10; /* free_parent_feature */
	T0* a11; /* parent_feature_list */
	T0* a12; /* free_inherited_feature */
	T0* a13; /* inherited_feature_list */
	T0* a14; /* free_redeclared_feature */
	T0* a15; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S993 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* dotnet_features */
	T0* a5; /* other_dotnet_features */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S994 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
	T0* a4; /* current_feature */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S995 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* universe */
	T0* a4; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S996 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* parent_context */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S997 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S998 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S999 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* current_class */
	T0* a4; /* current_feature */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1000 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* classes_to_be_processed */
	T0* a4; /* universe */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S1001 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* type_checker */
	T0* a3; /* current_class */
	T0* a4; /* current_type */
	T0* a5; /* current_feature */
	T0* a6; /* current_feature_impl */
	T0* a7; /* current_class_impl */
	T0* a8; /* enclosing_inline_agents */
	T0* a9; /* overloaded_procedures */
	T0* a10; /* unused_overloaded_procedures_list */
	T0* a11; /* overloaded_queries */
	T0* a12; /* unused_overloaded_queries_list */
	T0* a13; /* best_overloaded_features */
	T0* a14; /* unused_contexts */
	T0* a15; /* current_context */
	T0* a16; /* current_target_type */
	T1 a17; /* has_fatal_error */
	T1 a18; /* in_assertion */
	T1 a19; /* in_invariant */
	T0* a20; /* precursor_queries */
	T1 a21; /* in_precondition */
	T1 a22; /* in_postcondition */
	T0* a23; /* precursor_procedures */
	T1 a24; /* in_precursor */
	T0* a25; /* current_inline_agent */
	T1 a26; /* in_rescue */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S1002 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T6 a12; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S1003 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T6 a12; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S1004 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* supplier_classes */
	T0* a4; /* type_checker */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1005 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32] */
struct S1006 {
	int id;
	T6 a1; /* count */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1007 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* universe */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1008 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* formal_parameter_sorter */
	T0* a4; /* direct_formal_parameter_sorter */
	T0* a5; /* universe */
	T0* a6; /* current_formal */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1009 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32] */
struct S1010 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S1015 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S1016 {
	int id;
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1017 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1018 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1019 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type TO_SPECIAL [AP_OPTION] */
struct S1020 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1021 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1022 {
	int id;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1024 {
	int id;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING_8] */
struct S1025 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_XACE_LIBRARY] */
struct S1026 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1027 {
	int id;
	T6 a1; /* code */
};

/* Struct for type DS_LINKED_STACK [INTEGER_32] */
struct S1028 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S1029 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1030 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1031 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1032 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1033 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1035 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1037 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1038 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1039 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1040 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1041 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1042 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1043 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING_8] */
struct S1044 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S1045 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_DECLARATION] */
struct S1046 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S1047 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S1048 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S1049 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S1050 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1051 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S1052 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S1053 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S1055 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1056 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
struct S1057 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S1058 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S1059 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S1060 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE] */
struct S1061 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S1062 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1063 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1064 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1065 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S1066 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1067 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1068 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1069 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1070 {
	int id;
	T0* a1; /* container */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S1072 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S1073 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S1074 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S1075 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S1076 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S1077 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S1078 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S1079 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S1080 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S1081 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S1082 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S1083 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S1084 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S1085 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S1086 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S1088 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S1089 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S1090 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S1091 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S1092 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S1093 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S1095 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S1096 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S1097 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S1098 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S1099 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S1100 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1101 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S1102 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S1103 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S1105 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1106 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1107 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S1108 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S1109 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S1110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S1111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S1112 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S1113 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S1114 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S1115 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S1116 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S1117 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_ITEM] */
struct S1118 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1119 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1120 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S1121 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S1122 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S1123 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1124 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S1125 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S1126 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S1127 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S1128 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S1129 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S1130 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S1135 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S1136 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S1137 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S1138 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S1139 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S1140 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S1141 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S1142 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1143 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S1144 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S1145 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1146 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S1147 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S1148 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S1149 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S1150 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S1151 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S1152 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S1153 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S1154 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1155 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S1156 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S1157 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S1158 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S1159 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S1160 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S1161 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S1162 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S1163 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S1165 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S1166 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S1167 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S1168 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S1169 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S1171 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S1172 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1173 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S1174 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S1175 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S1176 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1177 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S1178 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S1179 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1180 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* index */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S1181 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S1182 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S1183 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S1184 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S1185 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S1186 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S1187 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S1189 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S1190 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S1191 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1192 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1193 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1194 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1195 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S1196 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1197 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S1198 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_AGENT] */
struct S1199 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1200 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S1201 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1202 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_INLINE_CONSTANT] */
struct S1203 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1204 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8] */
struct S1205 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1206 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1208 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1209 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
struct S1210 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
struct S1211 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1213 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1214 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1215 {
	int id;
	T0* a1; /* area */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1216 {
	int id;
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1217 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
struct S1219 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1223 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent */
	T0* a3; /* precursor_feature */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1224 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1225 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1226 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1228 {
	int id;
	T0* a1; /* next */
	T0* a2; /* flattened_feature */
	T0* a3; /* parent_feature */
	T6 a4; /* first_seed */
	T0* a5; /* other_seeds */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type ET_FEATURE_LIST */
struct S1229 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type ET_FEATURE_IDS */
struct S1230 {
	int id;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1238 {
	int id;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1239 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1240 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1243 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1244 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1245 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1246 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S1247 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
struct S1248 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1249 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1250 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1252 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1254 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1255 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1257 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
struct S1258 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_LIST] */
struct S1259 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
struct S1260 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
struct S1261 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1262 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T0* a13; /* equality_tester */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1263 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1264 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1265 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1267 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1268 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1269 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1270 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1271 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* internal_cursor */
	T0* a9; /* equality_tester */
	T6 a10; /* count */
	T6 a11; /* slots_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1273 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T6 a10; /* slots_position */
	T0* a11; /* equality_tester */
	T0* a12; /* internal_cursor */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1275 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
struct S1276 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
struct S1277 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1278 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1279 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1280 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1281 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1282 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_keys */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32] */
struct S1284 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1286 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1287 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1288 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S1289 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1290 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1291 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1293 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1294 {
	int id;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1296 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1297 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1298 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1299 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S1302 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_XACE_CLUSTER] */
struct S1303 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1310 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1311 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1312 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_SEARCHER */
struct S1313 {
	int id;
	T0* a1; /* deltas */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1315 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* free_slot */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* hash_function */
};

/* Struct for type XM_COMMENT */
struct S1316 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1317 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1318 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type XM_NAMESPACE */
struct S1319 {
	int id;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1320 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1323 {
	int id;
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1329 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CONVERT_EXPRESSION */
struct S1334 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1335 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1338 {
	int id;
	T6 a1; /* compressed_position */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1340 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1347 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1348 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
struct S1349 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
struct S1350 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
struct S1351 {
	int id;
	T0* a1; /* container */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1352 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type DS_LINKABLE [CHARACTER_8] */
struct S1353 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1355 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S1356 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1357 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_LIST] */
struct S1358 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1359 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1360 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S1362 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1364 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1365 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1366 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S1367 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1369 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1370 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1372 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1374 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1375 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1376 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1377 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1378 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1379 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1380 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1381 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1382 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1383 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1385 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1387 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1388 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1389 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1390 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1391 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T0* a13; /* internal_cursor */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1392 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
struct S1393 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
struct S1394 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
struct S1395 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1397 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32] */
struct S1398 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1399 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1400 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [YY_BUFFER] */
struct S1401 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1402 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1405 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S1406 {
	int id;
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1407 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1408 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type STD_FILES */
struct S1416 {
	int id;
	T0* a1; /* default_output */
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1417 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type PLATFORM */
struct S1418 {
	int id;
};

/* Struct for type DS_LINKABLE [XM_NODE] */
struct S1420 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type XM_NODE_TYPER */
struct S1421 {
	int id;
	T0* a1; /* element */
	T0* a2; /* xml_attribute */
	T0* a3; /* composite */
	T0* a4; /* document */
	T0* a5; /* character_data */
	T0* a6; /* processing_instruction */
	T0* a7; /* comment */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1428 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1429 {
	int id;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1430 {
	int id;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* string */
	T6 a4; /* location */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1434 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1442 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1443 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1449 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1450 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1451 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1452 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1453 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1454 {
	int id;
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
struct S1455 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1458 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1459 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1460 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1461 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1462 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_FEATURE] */
struct S1463 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1464 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1465 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1466 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1468 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1470 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1471 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
struct S1472 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1475 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1477 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S1478 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1486 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1487 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1488 {
	int id;
};

/* Struct for type TO_SPECIAL [XM_NAMESPACE] */
struct S1489 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TARGET] */
struct S1490 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1495 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1497 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type CONSOLE */
struct S1498 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1499 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1502 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

typedef struct {
	int id;
	EIF_INTEGER type_id;
	EIF_BOOLEAN is_special;
} EIF_TYPE;


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T17 GE_default17;
extern T21 GE_default21;
extern T22 GE_default22;
extern T23 GE_default23;
extern T24 GE_default24;
extern T26 GE_default26;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T35 GE_default35;
extern T36 GE_default36;
extern T37 GE_default37;
extern T41 GE_default41;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T48 GE_default48;
extern T49 GE_default49;
extern T50 GE_default50;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T56 GE_default56;
extern T57 GE_default57;
extern T58 GE_default58;
extern T60 GE_default60;
extern T61 GE_default61;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T66 GE_default66;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T72 GE_default72;
extern T74 GE_default74;
extern T75 GE_default75;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T84 GE_default84;
extern T85 GE_default85;
extern T86 GE_default86;
extern T88 GE_default88;
extern T89 GE_default89;
extern T93 GE_default93;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T101 GE_default101;
extern T103 GE_default103;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T114 GE_default114;
extern T115 GE_default115;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T126 GE_default126;
extern T127 GE_default127;
extern T128 GE_default128;
extern T129 GE_default129;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T148 GE_default148;
extern T149 GE_default149;
extern T150 GE_default150;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T159 GE_default159;
extern T161 GE_default161;
extern T163 GE_default163;
extern T164 GE_default164;
extern T165 GE_default165;
extern T166 GE_default166;
extern T170 GE_default170;
extern T171 GE_default171;
extern T172 GE_default172;
extern T173 GE_default173;
extern T174 GE_default174;
extern T176 GE_default176;
extern T179 GE_default179;
extern T181 GE_default181;
extern T182 GE_default182;
extern T183 GE_default183;
extern T184 GE_default184;
extern T185 GE_default185;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T190 GE_default190;
extern T191 GE_default191;
extern T192 GE_default192;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T198 GE_default198;
extern T199 GE_default199;
extern T200 GE_default200;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T206 GE_default206;
extern T207 GE_default207;
extern T208 GE_default208;
extern T209 GE_default209;
extern T210 GE_default210;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T227 GE_default227;
extern T229 GE_default229;
extern T233 GE_default233;
extern T234 GE_default234;
extern T236 GE_default236;
extern T239 GE_default239;
extern T242 GE_default242;
extern T246 GE_default246;
extern T247 GE_default247;
extern T248 GE_default248;
extern T250 GE_default250;
extern T251 GE_default251;
extern T255 GE_default255;
extern T256 GE_default256;
extern T257 GE_default257;
extern T258 GE_default258;
extern T260 GE_default260;
extern T261 GE_default261;
extern T263 GE_default263;
extern T264 GE_default264;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T271 GE_default271;
extern T272 GE_default272;
extern T273 GE_default273;
extern T275 GE_default275;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T283 GE_default283;
extern T284 GE_default284;
extern T285 GE_default285;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T290 GE_default290;
extern T291 GE_default291;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T301 GE_default301;
extern T303 GE_default303;
extern T304 GE_default304;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T308 GE_default308;
extern T312 GE_default312;
extern T313 GE_default313;
extern T314 GE_default314;
extern T315 GE_default315;
extern T316 GE_default316;
extern T317 GE_default317;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T323 GE_default323;
extern T324 GE_default324;
extern T325 GE_default325;
extern T326 GE_default326;
extern T327 GE_default327;
extern T329 GE_default329;
extern T332 GE_default332;
extern T333 GE_default333;
extern T334 GE_default334;
extern T336 GE_default336;
extern T337 GE_default337;
extern T338 GE_default338;
extern T339 GE_default339;
extern T340 GE_default340;
extern T341 GE_default341;
extern T342 GE_default342;
extern T343 GE_default343;
extern T344 GE_default344;
extern T345 GE_default345;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T349 GE_default349;
extern T350 GE_default350;
extern T353 GE_default353;
extern T355 GE_default355;
extern T356 GE_default356;
extern T357 GE_default357;
extern T358 GE_default358;
extern T359 GE_default359;
extern T361 GE_default361;
extern T362 GE_default362;
extern T363 GE_default363;
extern T365 GE_default365;
extern T366 GE_default366;
extern T367 GE_default367;
extern T368 GE_default368;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T372 GE_default372;
extern T373 GE_default373;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T386 GE_default386;
extern T388 GE_default388;
extern T389 GE_default389;
extern T390 GE_default390;
extern T391 GE_default391;
extern T392 GE_default392;
extern T393 GE_default393;
extern T394 GE_default394;
extern T396 GE_default396;
extern T397 GE_default397;
extern T399 GE_default399;
extern T400 GE_default400;
extern T401 GE_default401;
extern T402 GE_default402;
extern T403 GE_default403;
extern T405 GE_default405;
extern T407 GE_default407;
extern T409 GE_default409;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T415 GE_default415;
extern T416 GE_default416;
extern T417 GE_default417;
extern T418 GE_default418;
extern T419 GE_default419;
extern T421 GE_default421;
extern T423 GE_default423;
extern T424 GE_default424;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T428 GE_default428;
extern T429 GE_default429;
extern T430 GE_default430;
extern T432 GE_default432;
extern T433 GE_default433;
extern T434 GE_default434;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T440 GE_default440;
extern T442 GE_default442;
extern T444 GE_default444;
extern T445 GE_default445;
extern T446 GE_default446;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T455 GE_default455;
extern T456 GE_default456;
extern T457 GE_default457;
extern T458 GE_default458;
extern T459 GE_default459;
extern T460 GE_default460;
extern T461 GE_default461;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T465 GE_default465;
extern T466 GE_default466;
extern T467 GE_default467;
extern T469 GE_default469;
extern T470 GE_default470;
extern T472 GE_default472;
extern T473 GE_default473;
extern T475 GE_default475;
extern T476 GE_default476;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T481 GE_default481;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T486 GE_default486;
extern T487 GE_default487;
extern T488 GE_default488;
extern T489 GE_default489;
extern T491 GE_default491;
extern T492 GE_default492;
extern T493 GE_default493;
extern T494 GE_default494;
extern T495 GE_default495;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T500 GE_default500;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T509 GE_default509;
extern T510 GE_default510;
extern T511 GE_default511;
extern T512 GE_default512;
extern T513 GE_default513;
extern T514 GE_default514;
extern T515 GE_default515;
extern T516 GE_default516;
extern T517 GE_default517;
extern T518 GE_default518;
extern T519 GE_default519;
extern T520 GE_default520;
extern T521 GE_default521;
extern T523 GE_default523;
extern T524 GE_default524;
extern T525 GE_default525;
extern T526 GE_default526;
extern T528 GE_default528;
extern T530 GE_default530;
extern T531 GE_default531;
extern T532 GE_default532;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T536 GE_default536;
extern T537 GE_default537;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T542 GE_default542;
extern T544 GE_default544;
extern T546 GE_default546;
extern T550 GE_default550;
extern T551 GE_default551;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T558 GE_default558;
extern T559 GE_default559;
extern T560 GE_default560;
extern T561 GE_default561;
extern T562 GE_default562;
extern T563 GE_default563;
extern T565 GE_default565;
extern T566 GE_default566;
extern T568 GE_default568;
extern T569 GE_default569;
extern T570 GE_default570;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T575 GE_default575;
extern T576 GE_default576;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T581 GE_default581;
extern T582 GE_default582;
extern T583 GE_default583;
extern T584 GE_default584;
extern T586 GE_default586;
extern T588 GE_default588;
extern T589 GE_default589;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T597 GE_default597;
extern T598 GE_default598;
extern T599 GE_default599;
extern T600 GE_default600;
extern T601 GE_default601;
extern T603 GE_default603;
extern T604 GE_default604;
extern T605 GE_default605;
extern T606 GE_default606;
extern T607 GE_default607;
extern T608 GE_default608;
extern T610 GE_default610;
extern T611 GE_default611;
extern T612 GE_default612;
extern T613 GE_default613;
extern T614 GE_default614;
extern T615 GE_default615;
extern T617 GE_default617;
extern T618 GE_default618;
extern T620 GE_default620;
extern T621 GE_default621;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T630 GE_default630;
extern T632 GE_default632;
extern T633 GE_default633;
extern T635 GE_default635;
extern T636 GE_default636;
extern T637 GE_default637;
extern T638 GE_default638;
extern T639 GE_default639;
extern T640 GE_default640;
extern T642 GE_default642;
extern T643 GE_default643;
extern T644 GE_default644;
extern T645 GE_default645;
extern T646 GE_default646;
extern T647 GE_default647;
extern T648 GE_default648;
extern T651 GE_default651;
extern T652 GE_default652;
extern T653 GE_default653;
extern T655 GE_default655;
extern T656 GE_default656;
extern T657 GE_default657;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T661 GE_default661;
extern T662 GE_default662;
extern T663 GE_default663;
extern T664 GE_default664;
extern T665 GE_default665;
extern T666 GE_default666;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T676 GE_default676;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T684 GE_default684;
extern T685 GE_default685;
extern T686 GE_default686;
extern T688 GE_default688;
extern T689 GE_default689;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T699 GE_default699;
extern T700 GE_default700;
extern T701 GE_default701;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T708 GE_default708;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T713 GE_default713;
extern T714 GE_default714;
extern T716 GE_default716;
extern T717 GE_default717;
extern T719 GE_default719;
extern T720 GE_default720;
extern T721 GE_default721;
extern T723 GE_default723;
extern T724 GE_default724;
extern T725 GE_default725;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T732 GE_default732;
extern T733 GE_default733;
extern T734 GE_default734;
extern T735 GE_default735;
extern T736 GE_default736;
extern T738 GE_default738;
extern T739 GE_default739;
extern T740 GE_default740;
extern T741 GE_default741;
extern T743 GE_default743;
extern T744 GE_default744;
extern T745 GE_default745;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T755 GE_default755;
extern T756 GE_default756;
extern T757 GE_default757;
extern T758 GE_default758;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T765 GE_default765;
extern T767 GE_default767;
extern T769 GE_default769;
extern T770 GE_default770;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T776 GE_default776;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T787 GE_default787;
extern T788 GE_default788;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T792 GE_default792;
extern T793 GE_default793;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T799 GE_default799;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T804 GE_default804;
extern T805 GE_default805;
extern T806 GE_default806;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T812 GE_default812;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T818 GE_default818;
extern T819 GE_default819;
extern T820 GE_default820;
extern T821 GE_default821;
extern T822 GE_default822;
extern T823 GE_default823;
extern T824 GE_default824;
extern T825 GE_default825;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T829 GE_default829;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T835 GE_default835;
extern T836 GE_default836;
extern T837 GE_default837;
extern T838 GE_default838;
extern T839 GE_default839;
extern T840 GE_default840;
extern T841 GE_default841;
extern T842 GE_default842;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T849 GE_default849;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T859 GE_default859;
extern T860 GE_default860;
extern T862 GE_default862;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T867 GE_default867;
extern T869 GE_default869;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T878 GE_default878;
extern T879 GE_default879;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T885 GE_default885;
extern T887 GE_default887;
extern T888 GE_default888;
extern T889 GE_default889;
extern T890 GE_default890;
extern T891 GE_default891;
extern T892 GE_default892;
extern T893 GE_default893;
extern T895 GE_default895;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T910 GE_default910;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T915 GE_default915;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T919 GE_default919;
extern T920 GE_default920;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T941 GE_default941;
extern T944 GE_default944;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T954 GE_default954;
extern T955 GE_default955;
extern T957 GE_default957;
extern T959 GE_default959;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T979 GE_default979;
extern T980 GE_default980;
extern T982 GE_default982;
extern T984 GE_default984;
extern T985 GE_default985;
extern T987 GE_default987;
extern T988 GE_default988;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1001 GE_default1001;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1007 GE_default1007;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1019 GE_default1019;
extern T1020 GE_default1020;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1030 GE_default1030;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1035 GE_default1035;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1046 GE_default1046;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1057 GE_default1057;
extern T1058 GE_default1058;
extern T1059 GE_default1059;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1077 GE_default1077;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1109 GE_default1109;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1119 GE_default1119;
extern T1120 GE_default1120;
extern T1121 GE_default1121;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1129 GE_default1129;
extern T1130 GE_default1130;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1137 GE_default1137;
extern T1138 GE_default1138;
extern T1139 GE_default1139;
extern T1140 GE_default1140;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1146 GE_default1146;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1219 GE_default1219;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1252 GE_default1252;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1273 GE_default1273;
extern T1275 GE_default1275;
extern T1276 GE_default1276;
extern T1277 GE_default1277;
extern T1278 GE_default1278;
extern T1279 GE_default1279;
extern T1280 GE_default1280;
extern T1281 GE_default1281;
extern T1282 GE_default1282;
extern T1284 GE_default1284;
extern T1286 GE_default1286;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1289 GE_default1289;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1293 GE_default1293;
extern T1294 GE_default1294;
extern T1296 GE_default1296;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1312 GE_default1312;
extern T1313 GE_default1313;
extern T1315 GE_default1315;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1320 GE_default1320;
extern T1323 GE_default1323;
extern T1329 GE_default1329;
extern T1331 GE_default1331;
extern T1334 GE_default1334;
extern T1335 GE_default1335;
extern T1338 GE_default1338;
extern T1340 GE_default1340;
extern T1347 GE_default1347;
extern T1348 GE_default1348;
extern T1349 GE_default1349;
extern T1350 GE_default1350;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1355 GE_default1355;
extern T1356 GE_default1356;
extern T1357 GE_default1357;
extern T1358 GE_default1358;
extern T1359 GE_default1359;
extern T1360 GE_default1360;
extern T1362 GE_default1362;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1367 GE_default1367;
extern T1369 GE_default1369;
extern T1370 GE_default1370;
extern T1372 GE_default1372;
extern T1374 GE_default1374;
extern T1375 GE_default1375;
extern T1376 GE_default1376;
extern T1377 GE_default1377;
extern T1378 GE_default1378;
extern T1379 GE_default1379;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1382 GE_default1382;
extern T1383 GE_default1383;
extern T1385 GE_default1385;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1389 GE_default1389;
extern T1390 GE_default1390;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1399 GE_default1399;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1402 GE_default1402;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1407 GE_default1407;
extern T1408 GE_default1408;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1420 GE_default1420;
extern T1421 GE_default1421;
extern T1428 GE_default1428;
extern T1429 GE_default1429;
extern T1430 GE_default1430;
extern T1434 GE_default1434;
extern T1442 GE_default1442;
extern T1443 GE_default1443;
extern T1449 GE_default1449;
extern T1450 GE_default1450;
extern T1451 GE_default1451;
extern T1452 GE_default1452;
extern T1453 GE_default1453;
extern T1454 GE_default1454;
extern T1455 GE_default1455;
extern T1458 GE_default1458;
extern T1459 GE_default1459;
extern T1460 GE_default1460;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1463 GE_default1463;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1466 GE_default1466;
extern T1468 GE_default1468;
extern T1470 GE_default1470;
extern T1471 GE_default1471;
extern T1472 GE_default1472;
extern T1475 GE_default1475;
extern T1477 GE_default1477;
extern T1478 GE_default1478;
extern T1486 GE_default1486;
extern T1487 GE_default1487;
extern T1488 GE_default1488;
extern T1489 GE_default1489;
extern T1490 GE_default1490;
extern T1495 GE_default1495;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1502 GE_default1502;

extern T0* GE_ms(char* s, T6 c);
/* Call to ANY.is_equal */
extern T1 T19x29T0(T0* C, T0* a1);
/* Call to ANY.same_type */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T27x1800(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T27x1789T0T6T6(T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T27x1795(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T27x1798(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T27x1801(T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T38x3727(T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T38x3722(T0* C);
/* Call to AP_OPTION.has_long_form */
extern T1 T38x3729(T0* C);
/* Call to AP_OPTION.description */
extern T0* T38x3720(T0* C);
/* Call to AP_OPTION.names */
extern T0* T38x3724(T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T38x3731(T0* C);
/* Call to AP_OPTION.example */
extern T0* T38x3721(T0* C);
/* Call to AP_OPTION.name */
extern T0* T38x3723(T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T38x3733(T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T38x3730(T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T38x3728(T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T38x3726(T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T38x3725(T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T38x3735(T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T38x3732(T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T42x4011(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T157x12420T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T157x12399(T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T157x12395T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T157x12390(T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T157x12400(T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T157x12417T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T157x12418T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T157x12415(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T157x12437(T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T157x12407(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T157x12391(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T157x12422T0T6T0(T0* C, T0* a1, T6 a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T157x12401(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_generic_expanded_attributes */
extern T1 T157x12414(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T157x12389(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T157x12419T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T157x12413(T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T157x23(T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T157x12431(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T157x12425(T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T157x12424(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T157x12416(T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T157x12411(T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T157x12441(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T157x12385(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T157x12392(T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T158x6443(T0* C);
/* Call to ET_BASE_TYPE.direct_base_class */
extern T0* T158x6387T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T158x6393T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T158x6329(T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T158x6391T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_bit_type */
extern T1 T158x6508T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_tuple_type */
extern T1 T158x6511T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_class_type */
extern T1 T158x6509T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type */
extern T0* T158x6486T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_conforms_from_tuple_type */
extern T1 T158x6517T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_bit_type */
extern T1 T158x6514T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T158x6516T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_class_type */
extern T1 T158x6515T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_to_type */
extern T1 T158x6512T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_is_type_reference */
extern T1 T158x6496T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_base_type_index_of_label */
extern T6 T158x6489T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T158x6429T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T158x6322(T0* C);
/* Call to ET_BASE_TYPE.reference_conforms_to_type */
extern T1 T158x6434T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_generic */
extern T1 T158x6330(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_context */
extern T1 T158x6513T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.resolved_formal_parameters */
extern T0* T158x6481T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T158x6383(T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T158x6382(T0* C);
/* Call to ET_BASE_TYPE.context_same_named_bit_type */
extern T1 T158x6504T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_tuple_type */
extern T1 T158x6507T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_class_type */
extern T1 T158x6505T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_class */
extern T0* T158x6485T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_formal_parameter_type */
extern T1 T158x6506T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type_actual */
extern T0* T158x6487T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type_actual_count */
extern T6 T158x6491T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_named_type */
extern T0* T158x6490T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_type */
extern T1 T158x6501T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T158x6445(T0* C);
/* Call to ET_BASE_TYPE.position */
extern T0* T158x6449(T0* C);
/* Call to ET_BASE_TYPE.same_syntactical_type */
extern T1 T158x6412T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T158x6333(T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T158x6414T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_QUERY.hash_code */
extern T6 T160x23(T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T160x12767(T0* C);
/* Call to ET_QUERY.type */
extern T0* T160x12847(T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T160x12849(T0* C);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T160x12772(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T160x12768(T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T160x12771(T0* C);
/* Call to ET_QUERY.name */
extern T0* T160x12846(T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T160x12848(T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T160x12809T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.arguments_count */
extern T6 T160x12808(T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T160x12797(T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T160x12928(T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T160x12844T6(T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T160x12860(T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T160x12799(T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T160x12798(T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T160x12859(T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T160x12802(T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T160x12803(T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T160x12804(T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T160x12805(T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T160x12794(T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T160x12795(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T160x12831T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T162x12809T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T162x12849(T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T162x12808(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T162x23(T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T162x12772(T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T162x12768(T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T162x12771(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T162x12846(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T162x12848(T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T162x12811T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T162x12844T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T162x12794(T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T162x12795(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T162x12831T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type */
extern T1 T167x6413T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.position */
extern T0* T167x6449(T0* C);
/* Call to ET_TYPE.base_class */
extern T0* T167x6388T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.to_text */
extern T0* T167x6443(T0* C);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T167x6393T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.last_leaf */
extern T0* T167x6453(T0* C);
/* Call to ET_TYPE.same_base_bit_type */
extern T1 T167x6425T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_tuple_type */
extern T1 T167x6428T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_class_type */
extern T1 T167x6426T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type */
extern T0* T167x6389T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.conforms_from_tuple_type */
extern T1 T167x6433T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_bit_type */
extern T1 T167x6430T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_formal_parameter_type */
extern T1 T167x6432T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_class_type */
extern T1 T167x6431T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T167x6429T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T167x6404T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_to_type */
extern T1 T167x6434T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T167x6481T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T167x6403T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_named_type */
extern T1 T167x6401(T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T167x6402(T0* C);
/* Call to ET_TYPE.named_type */
extern T0* T167x6394T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_like_current */
extern T1 T167x6400(T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T167x6395T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T167x6437T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_bit_type */
extern T1 T167x6435T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_actual */
extern T0* T167x6391T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T167x6399T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_from_tuple_type */
extern T1 T167x6438T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_type */
extern T1 T167x6414T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_class_type */
extern T1 T167x6436T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_bit_type */
extern T1 T167x6421T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_tuple_type */
extern T1 T167x6424T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_class_type */
extern T1 T167x6422T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_formal_parameter_type */
extern T1 T167x6423T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.direct_base_class */
extern T0* T167x6387T0(T0* C, T0* a1);
/* Call to ET_TYPE.has_formal_types */
extern T1 T167x6407T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T167x6405T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T167x6412T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T167x6390T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T167x6417T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T167x6418T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T167x6419T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T167x6415T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T167x6420T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T167x6416T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.unaliased_to_text */
extern T0* T167x6445(T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T168x6490T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T168x6483(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T168x6487T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T168x6491T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T168x6489T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T168x6485T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_bit_type */
extern T1 T168x6519T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_formal_parameter_type */
extern T1 T168x6521T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_tuple_type */
extern T1 T168x6522T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_type */
extern T1 T168x6503T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_class_type */
extern T1 T168x6520T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_to_type */
extern T1 T168x6518T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type */
extern T1 T168x6508T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T168x6514T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type */
extern T1 T168x6504T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T168x6506T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T168x6516T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T168x6507T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_class_type */
extern T1 T168x6505T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T168x6517T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T168x6511T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_class_type */
extern T1 T168x6509T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_to_type */
extern T1 T168x6512T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T168x6515T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_type */
extern T1 T168x6501T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type */
extern T0* T168x6486T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.name */
extern T0* T169x11916(T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T169x6453(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T169x11914T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T169x11918(T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T169x11923(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T169x11917(T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T169x6449(T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T169x6452(T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T169x11921(T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T169x11922(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T169x23(T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T169x11954(T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T169x11955(T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T169x11944(T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T169x11924(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T172x6322(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T172x6330(T0* C);
/* Call to ET_CLASS_TYPE.direct_base_class */
extern T0* T172x6387T0(T0* C, T0* a1);
/* Call to ET_CLASS_TYPE.to_text */
extern T0* T172x6443(T0* C);
/* Call to ET_CLASS_TYPE.name */
extern T0* T172x6382(T0* C);
/* Call to ET_CLASS_TYPE.upper_name */
extern T0* T172x6383(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T172x6333(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T172x6300(T0* C);
/* Call to ET_CLASS_TYPE.is_named_type */
extern T1 T172x6401(T0* C);
/* Call to ET_CLASS_TYPE.position */
extern T0* T172x6449(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T175x12441(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T175x12438(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T175x12450T6(T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T175x12452(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T175x12456(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T175x12437(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T175x12453(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T175x12451(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T175x12446(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T175x12454T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T177x6468(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T177x6467(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T177x6470T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T177x6466(T0* C);
/* Call to ET_AST_PROCESSOR.universe */
extern T0* T180x7567(T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T197x6453(T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T197x6449(T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T197x11978(T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T197x11996(T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T201x12767(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T201x12846(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T201x12844T6(T0* C, T6 a1);
/* Call to ET_FEATURE.extended_name */
extern T0* T201x12769(T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T201x12768(T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T201x12861(T0* C);
/* Call to ET_FEATURE.version */
extern T6 T201x12779(T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T201x12795(T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T201x12849(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T201x12848(T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T201x12802(T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T201x12809T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T201x12860(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T201x12859(T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T201x12850(T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T201x12801(T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T201x12799(T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T201x12798(T0* C);
/* Call to ET_FEATURE.type */
extern T0* T201x12847(T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T201x12797(T0* C);
/* Call to ET_FEATURE.id */
extern T6 T201x12778(T0* C);
/* Call to ET_FEATURE.has_implementation_error */
extern T1 T201x12863(T0* C);
/* Call to ET_FEATURE.implementation_checked */
extern T1 T201x12862(T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T201x12781(T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T201x12858(T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T201x12775(T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T201x12774(T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T201x12794(T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T201x12803(T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T201x12804(T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T201x12805(T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T201x12832T0(T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T201x12833T0(T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T201x12815T0(T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T201x12843(T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T201x23(T0* C);
/* Call to ET_FEATURE.arguments_count */
extern T6 T201x12808(T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T201x12800(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T202x6453(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.position */
extern T0* T202x6449(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T202x11961(T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T224x12049(T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T224x12048(T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T224x6449(T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T224x12051(T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T225x11918(T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T225x11917(T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T225x6449(T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T225x11923(T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T225x11952T0(T0* C, T0* a1);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T225x11953(T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T225x11951(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T225x11948(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T225x11946(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T225x11945(T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T225x11943(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T225x11942(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T225x11941(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T225x11940(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T225x11939(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T225x11938(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T225x11937(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T225x11936(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T225x11935(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T225x11934(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T225x11933(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T225x11932(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T225x11931(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T225x11930(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T225x11928(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T225x11927(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T225x11926(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T225x11925(T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T225x11949(T0* C);
/* Call to ET_AGENT.target */
extern T0* T228x18059(T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T228x18060(T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T228x18065(T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T228x18069(T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T228x18061(T0* C);
/* Call to ET_AGENT.is_procedure */
extern T1 T228x18063(T0* C);
/* Call to ET_AGENT.position */
extern T0* T228x6449(T0* C);
/* Call to ET_AGENT.index */
extern T6 T228x11996(T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T228x18062(T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T231x18089(T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T231x18088(T0* C);
/* Call to ET_CONSTANT.is_real_constant */
extern T1 T231x18087(T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T231x18086(T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T231x18085(T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T231x18084(T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T231x11996(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T232x11991(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T232x11990T6(T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T232x11988(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T235x11990T6(T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T235x11991(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T235x11988(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T238x11980(T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T238x6449(T0* C);
/* Call to ET_OPERAND.index */
extern T6 T241x11996(T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T241x11995(T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T243x11996(T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T243x6449(T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T243x11995(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T245x11995(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T245x11996(T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T254x12450T6(T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T254x12452(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T259x6449(T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T259x11996(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T259x18196(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_implementation_error */
extern T1 T265x12863(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T265x12860(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_assertions_error */
extern T1 T265x12865(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T265x12859(T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T265x12876(T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T265x12875(T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T265x12872(T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T265x12856(T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T265x12874(T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T265x12858(T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T265x12861(T0* C);
/* Call to ET_STANDALONE_CLOSURE.assertions_checked */
extern T1 T265x12864(T0* C);
/* Call to ET_POSITION.column */
extern T6 T274x12033(T0* C);
/* Call to ET_POSITION.line */
extern T6 T274x12032(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T274x12034(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T274x12038(T0* C);
/* Call to XM_NODE.parent */
extern T0* T289x10528(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T328x11959(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T328x11958(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T328x6449(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T328x11960T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T358x5573(T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T358x20289T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T358x5578(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T358x20300(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T358x5569(T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T358x20298(T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T474x11996(T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T2 T474x21542(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T482x21892(T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T482x11996(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T482x21884(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T482x21894(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T482x21883(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T482x6449(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T482x21885(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T567x6478T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T574x11958(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T574x6449(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T585x6476T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T585x6474(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T585x6475(T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T629x19800(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T629x19798(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T629x19799(T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T641x6448(T0* C);
/* Call to ET_DECLARED_TYPE.resolved_formal_parameters */
extern T0* T649x6481T0(T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T649x6480(T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T650x11963(T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T654x6451(T0* C);
/* Call to ET_AST_LEAF.position */
extern T0* T654x6449(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T667x18207(T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T668x18208(T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T681x22984T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T681x11935(T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T681x11939(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T681x11945(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T681x11946(T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T681x11952T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.lower_name */
extern T0* T681x11917(T0* C);
/* Call to ET_ALIAS_NAME.position */
extern T0* T681x6449(T0* C);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T681x23(T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T681x11924(T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T681x22970(T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T681x22969(T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T681x11949(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T681x11944(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T715x6462T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T715x6467(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.name */
extern T0* T726x12048(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T726x12047(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T726x12046(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T726x12049(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.index */
extern T6 T726x11996(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T726x12051(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T737x11981(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T746x6449(T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T746x6453(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T746x6482(T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T766x12009(T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T766x12007(T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T766x12008(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T768x12011(T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T771x6449(T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T803x6449(T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T803x11923(T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T811x18061(T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T811x12875(T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T811x18060(T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T811x18059(T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T811x12876(T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T811x12874(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T843x11999(T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T848x6449(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T848x11985(T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T850x11983(T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T852x12876(T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T852x12875(T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T852x12874(T0* C);
/* Call to ET_GROUP.is_override */
extern T1 T942x12163(T0* C);
/* Call to ET_GROUP.dotnet_assembly */
extern T0* T942x12175(T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T942x12171T2(T0* C, T2 a1);
/* Call to ET_GROUP.full_pathname */
extern T0* T942x12172(T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T942x12174(T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T942x12160(T0* C);
/* Call to ET_GROUP.is_dotnet_assembly */
extern T1 T942x12161(T0* C);
/* Call to ET_GROUP.is_none */
extern T1 T942x12162(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T961x22507(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T961x6404T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T964x6393T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T964x6443(T0* C);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T964x6391T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_base_type */
extern T1 T964x6414T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_bit_type */
extern T1 T964x6435T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T964x6437T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_tuple_type */
extern T1 T964x6438T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_class_type */
extern T1 T964x6436T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_to_type */
extern T1 T964x6434T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T964x6418T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T964x6419T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_bit_type */
extern T1 T964x6421T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T964x6415T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_tuple_type */
extern T1 T964x6424T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_class_type */
extern T1 T964x6422T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T964x6420T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T964x6416T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_bit_type */
extern T1 T964x6425T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type */
extern T1 T964x6430T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T964x6388T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.is_type_reference */
extern T1 T964x6404T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T964x6417T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type */
extern T1 T964x6423T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type */
extern T1 T964x6432T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type */
extern T1 T964x6433T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_tuple_type */
extern T1 T964x6428T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T964x6407T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_anchored_type */
extern T1 T964x6405T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_base_class_type */
extern T1 T964x6426T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_class_type */
extern T1 T964x6431T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_to_type */
extern T1 T964x6429T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_type */
extern T1 T964x6413T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_expanded */
extern T1 T964x6403T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T964x6412T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1222x12855(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1222x12842(T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1222x12851(T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1222x12853(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1222x12840(T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1222x12854(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1222x12841(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1222x12839(T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1222x12852(T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1266x26343(T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1266x26342(T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1266x26341(T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1266x26344(T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1328x12860(T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1333x21570(T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1333x23(T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1333x11929(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.compound */
extern T0* T1414x24206(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.locals */
extern T0* T1414x12876(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1414x18061(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.rescue_clause */
extern T0* T1414x24208(T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1415x20090(T0* C);
/* Call to ET_INTERNAL_ROUTINE.locals */
extern T0* T1415x12876(T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1415x20092(T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1415x12848(T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1415x12860(T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1415x12802(T0* C);
/* Call to ET_ADDRESS_EXPRESSION.index */
extern T6 T1439x11996(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1440x12874(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1440x12875(T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1441x12875(T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1447x6449(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T27x1802(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T27x1792(T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T38x3746T0(T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T38x3747(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T65x9364(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T65x9374T2(T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T65x9366T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T65x9368T6(T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T65x9375T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T65x9363T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T112x10812T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T113x10868T0T0T1(T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T113x10869T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T113x10874(T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T113x10867(T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T113x10873T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T113x10875T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T113x10872T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T113x10876T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T113x10870T0T0(T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T113x10871T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T113x10866(T0* C);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T157x12426T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T157x12427T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T157x12396(T0* C);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T157x12398T1(T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T157x12443T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T157x12409T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T157x12432T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T157x12410T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.reset */
extern void T158x6386(T0* C);
/* Call to ET_BASE_TYPE.process */
extern void T158x6458T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_assertions_checked */
extern void T160x12871(T0* C);
/* Call to ET_QUERY.reset_implementation_checked */
extern void T160x12868(T0* C);
/* Call to ET_QUERY.reset */
extern void T160x12764(T0* C);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T160x12826T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_assertions_checked */
extern void T162x12871(T0* C);
/* Call to ET_PROCEDURE.reset_implementation_checked */
extern void T162x12868(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T162x12764(T0* C);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T162x12826T0(T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T167x6458T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T167x6386(T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T167x6444T0(T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T167x6446T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T169x11919T6(T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T169x11915(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T175x12443T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T175x12440(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T175x12449T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T180x7623T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T180x7737T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_instruction */
extern void T180x7604T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T180x7680T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_expression */
extern void T180x7618T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T180x7741T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T180x7722T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T180x7625T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T180x7589T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T180x7605T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T180x7631T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T180x7702T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T180x7686T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T180x7674T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T180x7587T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T180x7586T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T180x7585T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T180x7616T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T180x7664T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T180x7667T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T180x7653T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T180x7714T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T180x7637T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T180x7651T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T180x7711T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T180x7635T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T180x7708T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T180x7742T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T180x7704T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T180x7712T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T180x7602T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T180x7709T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T180x7724T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T180x7645T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T180x7682T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T180x7647T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T180x7736T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T180x7629T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T180x7655T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T180x7717T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T180x7721T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T180x7740T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T180x7597T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T180x7696T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T180x7697T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T180x7652T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T180x7713T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T180x7632T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T180x7710T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T180x7634T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T180x7591T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T180x7592T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T180x7624T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T180x7600T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T180x7599T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T180x7654T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T180x7747T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T180x7751T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T180x7731T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T180x7670T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T180x7750T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T180x7729T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T180x7739T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T180x7754T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T180x7730T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T180x7601T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T180x7755T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T180x7590T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T180x7633T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T180x7636T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T180x7588T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T180x7752T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T180x7615T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T180x7707T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T180x7748T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T180x7650T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T180x7669T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T180x7611T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T180x7609T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T180x7735T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_expression */
extern void T180x7603T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T180x7628T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T180x7671T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.process */
extern void T197x6458T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T197x11982(T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T197x11997T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_implementation_error */
extern void T201x12867(T0* C);
/* Call to ET_FEATURE.set_implementation_checked */
extern void T201x12866(T0* C);
/* Call to ET_FEATURE.process */
extern void T201x6458T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_assertions_error */
extern void T201x12870(T0* C);
/* Call to ET_FEATURE.set_assertions_checked */
extern void T201x12869(T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T201x12823T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T201x12822T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T201x12814T0(T0* C, T0* a1);
/* Call to ET_FEATURE.resolve_inherited_signature */
extern void T201x12834T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T201x12819T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T201x12825T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T201x12824T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T201x12830(T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T201x12829(T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T201x12820T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T201x12821T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T201x12816T6(T0* C, T6 a1);
/* Call to ET_CALL_NAME.set_seed */
extern void T225x11919T6(T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T228x18068T0(T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T228x6458T0(T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T231x11997T6(T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T231x6458T0(T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T241x11997T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T243x6458T0(T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T243x11997T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T243x11994(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T245x6458T0(T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T245x11994(T0* C);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T259x11997T6(T0* C, T6 a1);
/* Call to XM_NODE.node_set_parent */
extern void T289x10536T0(T0* C, T0* a1);
/* Call to XM_NODE.process */
extern void T289x10538T0(T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T328x11957(T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T358x20285(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T358x20284T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T358x20290T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T358x20281(T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T358x5584(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T358x20283T0(T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T474x11997T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T482x11997T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T482x21898(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T482x21897T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T482x21895T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T482x21896T0(T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T650x11962(T0* C);
/* Call to ET_ALIAS_NAME.reset */
extern void T681x11915(T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T681x22982(T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T681x22981(T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T722x6458T0(T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T722x12052(T0* C);
/* Call to ET_CHOICE.reset */
extern void T766x12006(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T771x12006(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T803x11915(T0* C);
/* Call to ET_ASSERTION.process */
extern void T850x6458T0(T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T850x11982(T0* C);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T1305x12447T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T1305x12449T0(T0* C, T0* a1);
/* Call to ET_ADDRESS_EXPRESSION.set_index */
extern void T1439x11997T6(T0* C, T6 a1);
/* GEC.execute */
extern T0* T21c33(void);
/* GEC.report_cannot_read_error */
extern void T21f39(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T24f8(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T24f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T76f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T76f14(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T76f11(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T76f15(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T76f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T26f6(T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T950f42(T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T950f30(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T949f3(T0* C, T2 a1);
/* CHARACTER_8.infix "<=" */
extern T1 T2f7(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f5(T2* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge338os10214;
extern T0* ge338ov10214;
extern T0* T950f37(T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T949c36(void);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T152f1(T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge274os2932;
extern T0* ge274ov2932;
extern T0* T950f29(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T152c6(void);
/* INTEGER_32.infix "<=" */
extern T1 T6f13(T6* C, T6 a1);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge408os12268;
extern T6 ge408ov12268;
extern T6 T151f1(T0* C);
/* KL_PLATFORM.old_maximum_character_code */
extern T6 T151f2(T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge328os1805;
extern T0* ge328ov1805;
extern T0* T950f28(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T151c5(void);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T950f26(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T949f6(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T949f4(T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f39(T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f40(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f3(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f12(T6* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f5(T0* C);
/* INTEGER_32.max */
extern T6 T6f15(T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f4(T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T950f24(T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T950f40(T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T950f68(T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T950f78(T0* C);
/* STRING_8.make */
extern void T17f36(T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c36(T6 a1);
/* STRING_8.make_area */
extern void T17f38(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c8(T6 a1);
/* STRING_8.string */
extern T0* T17f14(T0* C);
/* STRING_8.append */
extern void T17f44(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f9(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f12(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.as_string */
extern T0* T950f11(T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T950f32(T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T79f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge269os1804;
extern T0* ge269ov1804;
extern T0* T26f2(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T79c5(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge277os1729;
extern T0* ge277ov1729;
extern T0* T76f5(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T26c19(void);
/* UT_ERROR_HANDLER.message */
extern T0* T24f5(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T68c7(T0* a1);
/* ARRAY [STRING_8].put */
extern void T86f8(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make */
extern T0* T86c7(T6 a1, T6 a2);
/* ARRAY [STRING_8].make_area */
extern void T86f9(T0* C, T6 a1);
/* SPECIAL [STRING_8].make */
extern T0* T85c6(T6 a1);
/* GEC.process_universe */
extern void T21f38(T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T62f13(T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge327os1724;
extern T0* ge327ov1724;
extern T0* T62f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T66c7(void);
/* KL_SHELL_COMMAND.system */
extern void T62f14(T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T62f9(T0* C, T14 a1);
/* UC_UTF8_STRING.to_c */
extern T0* T950f9(T0* C);
/* STRING_8.to_c */
extern T0* T17f6(T0* C);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge2228os5124;
extern T0* ge2228ov5124;
extern T0* T62f8(T0* C);
/* KL_SHELL_COMMAND.get */
extern T0* T62f10(T0* C, T0* a1);
/* STRING_8.make_from_c */
extern T0* T17c46(T14 a1);
/* STRING_8.from_c */
extern void T17f49(T0* C, T14 a1);
/* C_STRING.read_string_into */
extern void T923f6(T0* C, T0* a1);
/* C_STRING.read_substring_into */
extern void T923f8(T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.put_code */
extern void T17f59(T0* C, T10 a1, T6 a2);
/* NATURAL_8.to_natural_32 */
extern T10 T8f1(T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T432f5(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1331f2(T1331* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1331f3(T1331* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.share_from_pointer */
extern void T923f5(T0* C, T14 a1);
/* C_STRING.share_from_pointer_and_count */
extern void T923f7(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T432f10(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T432c9(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T923f3(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge2109os1257;
extern T0* ge2109ov1257;
extern T0* T17f22(T0* C);
/* C_STRING.make_empty */
extern T0* T923c4(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T432c8(T6 a1);
/* EXCEPTIONS.raise */
extern void T1062f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T1062f4(T0* C, T14 a1, T6 a2);
/* EXCEPTIONS.default_create */
extern T0* T1062c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T432f4(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f6(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f7(T14* C, T6 a1, T6 a2);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T62f11(T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T950f10(T0* C);
/* STRING_8.is_empty */
extern T1 T17f17(T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T62c12(T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T62f7(T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T71f1(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T71f7(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T26f8(T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f41(T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T26f10(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T950f17(T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T950f60(T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T950c60(T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T950f72(T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T950f48(T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T950f48p1(T0* C);
/* UC_UTF8_STRING.make */
extern void T950f60p1(T0* C, T6 a1);
/* UC_UTF8_STRING.make_area */
extern void T950f79(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T949f22(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T949f24(T0* C, T6 a1);
/* UC_UTF8_STRING.item_code */
extern T6 T950f23(T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f7(T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T950f52(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T950f25(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge350os25471;
extern T0* ge350ov25471;
extern T0* T949f27(T0* C);
/* UC_STRING.make_empty */
extern T0* T78c8(void);
/* UC_STRING.make */
extern void T78f9(T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T78f12(T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T78f11(T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T78f7(T0* C);
/* UC_STRING.capacity */
extern T6 T78f7p1(T0* C);
/* UC_STRING.make */
extern void T78f9p1(T0* C, T6 a1);
/* UC_STRING.make_area */
extern void T78f13(T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T78f10(T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T949f23(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T949f25(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T950f57(T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge421os10152;
extern T0* ge421ov10152;
extern T0* T950f49(T0* C);
/* UC_UTF8_STRING.append_substring */
extern void T950f59(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T950f77(T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T950f85(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T950f76(T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T950f86(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T950f75(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T950f74(T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T950f87(T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T950f39(T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T950f15(T0* C);
/* UC_UTF8_STRING.copy */
extern void T950f67(T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T950f67p1(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f4(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T950f57p1(T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T950f73(T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T950f51(T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1242s1(T1 a1);
/* UC_UTF8_STRING.any_ */
extern T0* T950f46(T0* C);
/* UC_UTF8_STRING.append_character */
extern void T950f58(T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T950f7(T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T950f31(T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f10(T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T26f9(T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f24(T0* C);
/* STRING_8.copy */
extern void T17f54(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T71f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T71f6(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T123f2(T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge389os9419;
extern T0* ge389ov9419;
extern T0* T71f12(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T123c4(void);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T71f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T70f16(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T70f10(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T70f13(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T70f9(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T70f8(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T70f7(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T70f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T70f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T70f5(T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge306os1725;
extern T0* ge306ov1725;
extern T0* T21f29(T0* C);
/* GEC.unix_file_system */
extern unsigned char ge306os1728;
extern T0* ge306ov1728;
extern T0* T21f32(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T71c16(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge405os9387;
extern T1 ge405ov9387;
extern T1 T66f2(T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T66f4(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge405os9391;
extern T0* ge405ov9391;
extern T0* T66f5(T0* C);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T66f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T123f1(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T123f3(T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge306os1726;
extern T0* ge306ov1726;
extern T0* T21f31(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T70c20(void);
/* UC_UTF8_STRING.infix "+" */
extern T0* T950f16(T0* C, T0* a1);
/* STRING_8.infix "+" */
extern T0* T17f9(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f13(T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge405os9386;
extern T1 ge405ov9386;
extern T1 T66f1(T0* C);
/* GEC.operating_system */
extern T0* T21f28(T0* C);
/* GEC.no_c_compile */
extern T1 T21f27(T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T36f15(T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T93f7(T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T77f12(T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T77f11(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_character */
extern void T77f16(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T77f20(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T77f21(T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.put_string */
extern void T77f10(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T77f15(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T77f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T77f6(T0* C);
/* ET_C_GENERATOR.generate */
extern void T61f405(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T45f73(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T45f81(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T45f80(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T45f79(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T45f78(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T45f57(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T45f77(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T118f15(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T118f14(T0* C, T6 a1);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T61f409(T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T61f411(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T57f163(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T57f192(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T57f192p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T57f17(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T28f163(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T28f17(T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T61f89(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T217c7(T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T61f410(T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T214f26(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T214f34(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T214f38(T0* C, T14 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T118f13(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T45f89(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T45f85(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T45f84(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T45f25(T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T216f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T45f48(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T45f49(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T45f58(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T45f28(T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T950f13(T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T950f13p1(T0* C);
/* INTEGER_32.infix "|<<" */
extern T6 T6f16(T6* C, T6 a1);
/* STRING_8.hash_code */
extern T6 T17f15(T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T89f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T48f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T48f2(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T45f24(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T45f22(T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T26f20(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T26f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T950f18(T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T216f2(T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1053os8055;
extern T0* ge1053ov8055;
extern T0* T61f88(T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T216c3(void);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T118f5(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T45f38(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T45f40(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T118f4(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_before */
extern T1 T45f46(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T118f12(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T45f88(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T45f42(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T45f30(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T214f6(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T214f16(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T214f21(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T214f14(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T214f18(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T214f31(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T214f17(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T214f31p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T214f19(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T214c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T214f30(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T214f12(T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T61f85(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T118f11(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T45f83(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T118f8(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T45f39(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_first */
extern T1 T118f7(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_first */
extern T1 T45f47(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T118f6(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T45f37(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T118f10(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T45f82(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T45f26(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T118c9(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T45f45(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T45f87(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T45f63(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T45f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T45f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T45f60(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T45f68(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].resize */
extern T0* T119f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T117f4(T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T117f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].move_data */
extern void T117f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T117f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T117f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].make */
extern T0* T117c7(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern unsigned char ge275os5065;
extern T0* ge275ov5065;
extern T0* T45f27(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T119c4(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T45f67(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].resize */
extern T0* T120f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].resized_area */
extern T0* T85f3(T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T85f8(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].move_data */
extern void T85f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T85f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T85f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T45f66(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T45f65(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T45f29(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T45f23(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T45f59(T0* C, T0* a1, T6 a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T50f4(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T50f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge387os5120;
extern T0* ge387ov5120;
extern T0* T50f2(T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T50f3(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T213f226(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T213f301(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T213f312(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T213f327(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T213f146(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T213f228(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T213f292(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T213f291(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1173os17056;
extern T6 ge1173ov17056;
extern T6 T213f55(T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge408os12270;
extern T6 ge408ov12270;
extern T6 T151f3(T0* C);
/* KL_PLATFORM.old_maximum_integer */
extern T6 T151f4(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T213f184(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T213f290(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T898f8(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T213f289(T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T898f10(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T213f288(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T213f294(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1179os17223;
extern T0* ge1179ov17223;
extern T0* T213f147(T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T900c4(T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T900f10(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T900f9(T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T900f5(T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T900c5(void);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T380f1(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T1047c2(T6 a1);
/* SPECIAL [BOOLEAN].make */
extern T0* T378c4(T6 a1);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge275os5063;
extern T0* ge275ov5063;
extern T0* T900f3(T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T380c3(void);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1179os17215;
extern T0* ge1179ov17215;
extern T0* T213f163(T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T900f2(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T213f325(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T213f81(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T213f80(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T213f79(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T213f334(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T213f333(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T213f287(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T898f11(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T213f285(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T213f266(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T898f7(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T213f225(T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T899f4(T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T899f3(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T213f223(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T213f313(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T213f328(T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T213f144(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T213f78(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T213f227(T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge326os1722;
extern T0* ge326ov1722;
extern T0* T61f84(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T50c5(void);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T26f7(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T950f66(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T950f82(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T950f66p1(T0* C);
/* STRING_8.wipe_out */
extern void T17f51(T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T61f83(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T213f300(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T80f7(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T213f299(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T213f299p1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T213f311(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T213f77(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T213f202(T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T213f76(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T213f310(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T213f75(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T213f73(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T213f127(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T213f125(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T213f123(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T213f309(T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T898f18(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T213f60(T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T898f17(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T213f326(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1179os17224;
extern T0* ge1179ov17224;
extern T0* T213f143(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1173os17057;
extern T6 ge1173ov17057;
extern T6 T213f142(T0* C);
/* RX_BYTE_CODE.append_character */
extern void T898f19(T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T898f25(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T898f24(T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T898f9(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T213f137(T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T213f218(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1179os17217;
extern T0* ge1179ov17217;
extern T0* T213f240(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T213f217(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T213f213(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T213f130(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T213f324(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T213f128(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T213f126(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T213f124(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T213f105(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T213f331(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T898f23(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T898f22(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T898f21(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T213f332(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T213f330(T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T898f20(T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T898f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].resize */
extern T0* T380f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].resized_area */
extern T0* T378f3(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].copy_data */
extern void T378f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [BOOLEAN].move_data */
extern void T378f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].overlapping_move */
extern void T378f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].non_overlapping_move */
extern void T378f9(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T898f12(T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T900f8(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T900f7(T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T903f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1179os17226;
extern T0* ge1179ov17226;
extern T0* T213f155(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1179os17211;
extern T0* ge1179ov17211;
extern T0* T213f74(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1179os17221;
extern T0* ge1179ov17221;
extern T0* T213f239(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1179os17220;
extern T0* ge1179ov17220;
extern T0* T213f238(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1179os17219;
extern T0* ge1179ov17219;
extern T0* T213f237(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1179os17218;
extern T0* ge1179ov17218;
extern T0* T213f236(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1179os17222;
extern T0* ge1179ov17222;
extern T0* T213f235(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1179os17216;
extern T0* ge1179ov17216;
extern T0* T213f234(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1179os17212;
extern T0* ge1179ov17212;
extern T0* T213f233(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1179os17213;
extern T0* ge1179ov17213;
extern T0* T213f232(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1179os17214;
extern T0* ge1179ov17214;
extern T0* T213f230(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T213f153(T0* C, T6 a1, T6 a2);
/* ARRAY [STRING_8].item */
extern T0* T86f5(T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T86f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1179os17225;
extern T0* ge1179ov17225;
extern T0* T213f231(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T213f151(T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T900f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1173os17055;
extern T0* ge1173ov17055;
extern T0* T213f148(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T213f83(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T213f329(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T213f57(T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T898f16(T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T898f15(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T213f308(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T213f307(T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T898f14(T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T26f21(T0* C, T0* a1);
/* UC_UTF8_STRING.old_clear_all */
extern void T950f65(T0* C);
/* STRING_8.clear_all */
extern void T17f50(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T213f306(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T213f306p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T213c298(void);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T119f2(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER_32].make_area */
extern T0* T401c2(T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T213f298p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T213f305(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T213f323(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T213f322(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T213f321(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T213f320(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T213f319(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T213f318(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T213f317(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T213f316(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T213f315(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T213f314(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T213f304(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T213f303(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1179os17210;
extern T0* ge1179ov17210;
extern T0* T213f68(T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T899c6(T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T899f8(T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T899f7(T0* C);
/* RX_CASE_MAPPING.clear */
extern void T899f9(T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T899f5(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T213f302(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T213f302p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern */
extern unsigned char ge1173os17054;
extern T0* ge1173ov17054;
extern T0* T213f53(T0* C);
/* STRING_8.put */
extern void T17f53(T0* C, T2 a1, T6 a2);
/* RX_BYTE_CODE.make */
extern T0* T898c13(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].twin */
extern T0* T45f44(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T45f90(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T45f90p1(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_clashes */
extern void T45f95(T0* C);
/* SPECIAL [INTEGER_32].twin */
extern T0* T117f5(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_slots */
extern void T45f94(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_key_storage */
extern void T45f93(T0* C);
/* SPECIAL [STRING_8].twin */
extern T0* T85f4(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_item_storage */
extern void T45f92(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].valid_cursor */
extern T1 T45f51(T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T61f82(T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T61f695(T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse_file */
extern void T326f177(T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T326f181(T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T326f194(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T326f193(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T132f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].resized_area */
extern T0* T131f2(T0* C, T6 a1);
/* SPECIAL [ANY].copy_data */
extern void T131f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ANY].move_data */
extern void T131f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].overlapping_move */
extern void T131f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].non_overlapping_move */
extern void T131f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].make */
extern T0* T131c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T132f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T411c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T132c3(void);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T326f192(T0* C, T6 a1);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T326f132(T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T326f205(T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1019c7(T6 a1);
/* INTEGER_32.out */
extern T0* T6f3(T6* C);
/* STRING_8.append_integer */
extern void T17f37(T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1017f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T433f13(T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T326f160(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1017f5(T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T326f204(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T45f96(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T45f97(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T45f99(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors */
extern void T45f101(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_after */
extern void T45f100(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T45f98(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].internal_set_equality_tester */
extern void T115f6(T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T326f128(T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T326f191(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T120f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING_8].make_area */
extern T0* T402c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T120c3(void);
/* UT_CONFIG_PARSER.accept */
extern void T326f190(T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T326f188(T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T326f203(T0* C, T0* a1);
/* UT_SYNTAX_ERROR.make */
extern T0* T1018c7(T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T326f202(T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T326f187(T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T326f201(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T326f210(T0* C);
/* YY_BUFFER.set_beginning_of_line */
extern void T127f17(T0* C, T1 a1);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T126f27(T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T326f159(T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T326f153(T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T954f6(T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T326f152(T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T326f148(T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T326f147(T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T326f208(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T326f200(T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T326f209(T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T326f115(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1017f10(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T433f10(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T433f5(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1017f7(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1017f6(T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T326f199(T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T326f197(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T954f4(T0* C);
/* YY_BUFFER.fill */
extern void T127f15(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T126f20(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T954f5(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T954f11(T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T126f22(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T954f12(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f61(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T126f24(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T954f13(T0* C, T6 a1);
/* STRING_8.set_count */
extern void T17f48(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge149os11867;
extern T6 ge149ov11867;
extern T6 T126f13(T0* C);
/* YY_BUFFER.set_index */
extern void T127f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.set_index */
extern void T126f18(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T326f114(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T326f113(T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T326f198(T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T114c7(T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T954f3(T0* C, T6 a1);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T326f126(T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T326f186(T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T326f195(T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T326f206(T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T326f211(T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T326f212(T0* C);
/* SPECIAL [BOOLEAN].clear_all */
extern void T378f6(T0* C);
/* SPECIAL [STRING_8].clear_all */
extern void T85f7(T0* C);
/* SPECIAL [ANY].clear_all */
extern void T131f6(T0* C);
/* UT_CONFIG_PARSER.abort */
extern void T326f189(T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T326f180(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T326f185(T0* C);
/* YY_BUFFER.set_position */
extern void T127f14(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.set_position */
extern void T126f19(T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T326f89(T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T126c17(T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T126f21(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T126f23(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T126f25(T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T126f15(T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T954c10(T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge405os9388;
extern T1 ge405ov9388;
extern T1 T66f6(T0* C);
/* PLATFORM.default_create */
extern T0* T1418c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T954f7(T0* C);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T61f326(T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T326f176(T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T326c175(T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T433c8(T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1017c8(T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1291f1(T0* C, T6 a1);
/* TO_SPECIAL [YY_BUFFER].make_area */
extern T0* T1401c2(T6 a1);
/* SPECIAL [YY_BUFFER].make */
extern T0* T1290c2(T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1291c2(void);
/* UT_CONFIG_PARSER.string_equality_tester */
extern unsigned char ge278os3471;
extern T0* ge278ov3471;
extern T0* T326f95(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T89c2(void);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T326f179(T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T326f184(T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern unsigned char ge244os19968;
extern T0* ge244ov19968;
extern T0* T326f121(T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T326f171(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T119f3(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern unsigned char ge244os19967;
extern T0* ge244ov19967;
extern T0* T326f120(T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern unsigned char ge244os19966;
extern T0* ge244ov19966;
extern T0* T326f119(T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern unsigned char ge244os19965;
extern T0* ge244ov19965;
extern T0* T326f116(T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern unsigned char ge244os19964;
extern T0* ge244ov19964;
extern T0* T326f110(T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern unsigned char ge244os19963;
extern T0* ge244ov19963;
extern T0* T326f109(T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern unsigned char ge244os19962;
extern T0* ge244ov19962;
extern T0* T326f108(T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern unsigned char ge244os19961;
extern T0* ge244ov19961;
extern T0* T326f103(T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern unsigned char ge244os19960;
extern T0* ge244ov19960;
extern T0* T326f100(T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern unsigned char ge244os19959;
extern T0* ge244ov19959;
extern T0* T326f98(T0* C);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T326f183(T0* C);
/* UT_CONFIG_PARSER.make_scanner */
extern void T326f178(T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T326f182(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T326f196(T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T326f207(T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern unsigned char ge245os20017;
extern T0* ge245ov20017;
extern T0* T326f167(T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T326f174(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern unsigned char ge245os20016;
extern T0* ge245ov20016;
extern T0* T326f166(T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern unsigned char ge245os20015;
extern T0* ge245ov20015;
extern T0* T326f165(T0* C);
/* UT_CONFIG_PARSER.yy_def_template */
extern unsigned char ge245os20014;
extern T0* ge245ov20014;
extern T0* T326f164(T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern unsigned char ge245os20013;
extern T0* ge245ov20013;
extern T0* T326f163(T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern unsigned char ge245os20012;
extern T0* ge245ov20012;
extern T0* T326f162(T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern unsigned char ge245os20011;
extern T0* ge245ov20011;
extern T0* T326f161(T0* C);
/* UT_CONFIG_PARSER.empty_buffer */
extern unsigned char ge154os5599;
extern T0* ge154ov5599;
extern T0* T326f91(T0* C);
/* YY_BUFFER.make */
extern T0* T127c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T127f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T954f14(T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T127f11(T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T71f4(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T70f4(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T45f86(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T45f54(T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T61f117(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T45f53(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T45c53(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T45f56(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].make */
extern T0* T115c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].new_cursor */
extern T0* T115f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8].make */
extern T0* T400c3(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T45f64(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T45f72(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T45f71(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T45f70(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T45f69(T0* C, T6 a1);
/* KL_STRING_ROUTINES.right_adjust */
extern void T26f23(T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T950f64(T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f47(T0* C, T6 a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T26f22(T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T950f63(T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T950f83(T0* C, T6 a1);
/* UC_UTF8_STRING.move_bytes_left */
extern void T950f80(T0* C, T6 a1, T6 a2);
/* STRING_8.remove_head */
extern void T17f52(T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f56(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T22f47(T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T22f50(T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T72f4(T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T72c3(T2 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T71f3(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T70f3(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T61f116(T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T61f329(T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T61f328(T0* C);
/* ET_C_GENERATOR.generate_c_code */
extern void T61f408(T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge959os7249;
extern T0* ge959ov7249;
extern T0* T61f92(T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T163c48(T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T970f5(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T129f53(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T242f5(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T184f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T970f4(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T242f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T236f7(T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T970f6(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T242f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T236f11(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T184c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T855f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET].make_area */
extern T0* T1195c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make */
extern T0* T854c4(T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge947os16648;
extern T0* ge947ov16648;
extern T0* T184f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T855c3(void);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge912os13019;
extern T0* ge912ov13019;
extern T0* T163f19(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T184c13(void);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T155f7(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T64f235(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T332c13(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T332f15(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.force_last */
extern void T188f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].resize */
extern T0* T428f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].resized_area */
extern T0* T427f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].copy_data */
extern void T427f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE].move_data */
extern void T427f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].overlapping_move */
extern void T427f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].non_overlapping_move */
extern void T427f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].make */
extern T0* T427c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T428f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE].make_area */
extern T0* T1061c2(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.fixed_array */
extern unsigned char ge944os16648;
extern T0* ge944ov16648;
extern T0* T188f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T428c3(void);
/* ET_DYNAMIC_TYPE_LIST.capacity */
extern T6 T188f4(T0* C);
/* ET_DYNAMIC_TYPE_LIST.put_last */
extern void T188f11(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.append_last */
extern void T188f9(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.make_with_capacity */
extern T0* T188c8(T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T155f8(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_identified_feature */
extern T6 T163f18(T0* C, T6 a1);
/* ET_SYSTEM.dynamic_type */
extern T0* T58f44(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T60f165(T0* C, T6 a1);
/* ET_SYSTEM.set_fatal_error */
extern void T58f69(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T156f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T156f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T156f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T156f8(T0* C, T6 a1);
/* ET_SYSTEM.new_dynamic_type */
extern T0* T58f48(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.make */
extern T0* T157c63(T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T189f13(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.has_type */
extern T1 T188f5(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T189c11(T0* a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern unsigned char ge941os12436;
extern T0* ge941ov12436;
extern T0* T157f19(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T218c11(void);
/* ET_SYSTEM.new_predicate_type */
extern T0* T58f56(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T233c66(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T233f73(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T233f48(T0* C);
/* ET_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge948os6094;
extern T0* ge948ov6094;
extern T0* T58f57(T0* C);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T430f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T430f5(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T173f7(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T173f12(T0* C, T6 a1);
/* ET_SYSTEM.new_function_type */
extern T0* T58f55(T0* C, T0* a1);
/* ET_SYSTEM.new_procedure_type */
extern T0* T58f54(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T234c66(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T234f73(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T234f48(T0* C);
/* ET_SYSTEM.new_type_type */
extern T0* T58f53(T0* C, T0* a1);
/* ET_SYSTEM.new_typed_pointer_type */
extern T0* T58f52(T0* C, T0* a1);
/* ET_SYSTEM.new_array_type */
extern T0* T58f51(T0* C, T0* a1);
/* ET_SYSTEM.new_tuple_type */
extern T0* T58f50(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T215c65(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T184f4(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T215f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T215f46(T0* C);
/* ET_SYSTEM.new_special_type */
extern T0* T58f49(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T229c65(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T229f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T229f46(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T156f6(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T170f24(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge777os13900;
extern T0* ge777ov13900;
extern T0* T170f23(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T170f22(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge777os13844;
extern T0* ge777ov13844;
extern T0* T170f21(T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern unsigned char ge772os2852;
extern T0* ge772ov2852;
extern T0* T163f22(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T170c921(void);
/* ET_DO_PROCEDURE.make */
extern T0* T327c69(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.any_clients */
extern unsigned char ge777os14394;
extern T0* ge777ov14394;
extern T0* T170f740(T0* C);
/* ET_CLASS_NAME_LIST.put_first */
extern void T448f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge777os13756;
extern T0* ge777ov13756;
extern T0* T170f54(T0* C);
/* ET_CLASS_NAME_LIST.make_with_capacity */
extern T0* T448c13(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].make */
extern T0* T621f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_ITEM].make_area */
extern T0* T1118c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].make */
extern T0* T620c4(T6 a1);
/* ET_CLASS_NAME_LIST.fixed_array */
extern unsigned char ge792os6602;
extern T0* ge792ov6602;
extern T0* T448f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].default_create */
extern T0* T621c3(void);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge777os14010;
extern T0* ge777ov14010;
extern T0* T170f119(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T179c23(void);
/* ET_KEYWORD.make_token */
extern void T179f24(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T179f25(T0* C);
/* ET_KEYWORD.tokens */
extern T0* T179f4(T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T327f31(T0* C);
/* ET_IDENTIFIER.make */
extern T0* T129c96(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T129f106(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T129c106(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T129f107(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T129f12(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.bit_or */
extern T6 T152f3(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.integer_ */
extern T0* T129f27(T0* C);
/* KL_CHARACTER_ROUTINES.as_upper */
extern T2 T955f1(T0* C, T2 a1);
/* CHARACTER_8.upper */
extern T2 T2f8(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f11(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f3(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f2(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge37os93;
extern T0* ge37ov93;
extern T0* T2f17(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f4(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T1312c2(T6 a1);
/* ET_IDENTIFIER.character_ */
extern unsigned char ge272os2931;
extern T0* ge272ov2931;
extern T0* T129f26(T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T955c3(void);
/* ET_C_GENERATOR.close_cpp_file */
extern void T61f436(T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T61f435(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].wipe_out */
extern void T209f38(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_wipe_out */
extern void T209f50(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T209f49(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T209f48(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T209f47(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].unset_found_item */
extern void T209f45(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T209f46(T0* C);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].set_next_cursor */
extern void T887f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].set_position */
extern void T887f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T208f43(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T208f53(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T208f52(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T208f51(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T208f50(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T208f49(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T208f48(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T883f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T883f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T207f33(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T207f44(T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T207f43(T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T207f42(T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T207f41(T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T207f39(T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T207f40(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T879f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T879f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T212f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T212f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T212f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T212f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T212f58(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T212f57(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T212f56(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T893f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T893f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T211f43(T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T211f56(T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T211f55(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T211f54(T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T211f53(T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T211f49(T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T211f52(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T314f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T314f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T212f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T212f55(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T212f69(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T212f68(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T212f27(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T212f36(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T212f21(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T212f31(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T212f22(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T212f44(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T212f29(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T212f42(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T212f43(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T212f47(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T212f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T212f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T212f32(T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T211f42(T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T211f51(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T211f63(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T211f62(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T211f23(T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T61f434(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T61f494(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T211f17(T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T211f26(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T211f34(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T211f18(T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T211f21(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].start */
extern void T211f41(T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T211f50(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T211f31(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T211f30(T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T61f433(T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T61f432(T0* C);
/* ET_C_GENERATOR.dedent */
extern void T61f483(T0* C);
/* ET_C_GENERATOR.print_creation_expression */
extern void T61f493(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T191f14(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].clear_items */
extern void T191f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T191f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T859f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_position */
extern void T859f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T61f538(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T61f499(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T61f511(T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T61f482(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T61f477(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T61f507(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T61f551(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T61f539(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T61f497(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T61f510(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T187f18(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].clear_items */
extern void T187f23(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T187f22(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T857f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_position */
extern void T857f5(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T45f55(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T45f35(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T45f34(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T45f76(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T187f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T187f17(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T239f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T239f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T239f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T324f12(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].auto_resize */
extern void T324f14(T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T117f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].capacity */
extern T6 T324f7(T0* C);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T117f3(T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_area */
extern void T324f13(T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T324f6(T0* C);
/* INTEGER_32.min */
extern T6 T6f19(T6* C, T6 a1);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T324f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T187f24(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T187f21(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T329f1(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T324f4(T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T324f11(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make */
extern T0* T324c10(T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern unsigned char ge959os7213;
extern T0* ge959ov7213;
extern T0* T61f149(T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T239c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T329c2(void);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T187f6(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T187f20(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T187f19(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_tilde_feature */
extern T1 T220f18(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.equal_objects_feature_name */
extern unsigned char ge777os13861;
extern T0* ge777ov13861;
extern T0* T170f20(T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T129f31(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T26f14(T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f9(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f12(T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1216f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge357os26164;
extern T0* ge357ov26164;
extern T0* T1216f4(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge357os26163;
extern T0* ge357ov26163;
extern T0* T1216f12(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge357os26152;
extern T0* ge357ov26152;
extern T0* T1216f22(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T152f5(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1216f47(T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make */
extern T0* T1347c2(T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge357os26162;
extern T0* ge357ov26162;
extern T0* T1216f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge357os26161;
extern T0* ge357ov26161;
extern T0* T1216f30(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge357os26160;
extern T0* ge357ov26160;
extern T0* T1216f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge357os26159;
extern T0* ge357ov26159;
extern T0* T1216f29(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge357os26158;
extern T0* ge357ov26158;
extern T0* T1216f28(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge357os26157;
extern T0* ge357ov26157;
extern T0* T1216f27(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge357os26156;
extern T0* ge357ov26156;
extern T0* T1216f26(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge357os26155;
extern T0* ge357ov26155;
extern T0* T1216f25(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge357os26154;
extern T0* ge357ov26154;
extern T0* T1216f24(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge357os26153;
extern T0* ge357ov26153;
extern T0* T1216f23(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge357os26151;
extern T0* ge357ov26151;
extern T0* T1216f21(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge357os26150;
extern T0* ge357ov26150;
extern T0* T1216f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge357os26149;
extern T0* ge357ov26149;
extern T0* T1216f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge357os26148;
extern T0* ge357ov26148;
extern T0* T1216f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge357os26147;
extern T0* ge357ov26147;
extern T0* T1216f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge357os26146;
extern T0* ge357ov26146;
extern T0* T1216f16(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make */
extern T0* T1348c2(T6 a1);
/* KL_STRING_ROUTINES.unicode */
extern unsigned char ge335os2933;
extern T0* ge335ov2933;
extern T0* T26f15(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1216c48(void);
/* ET_IDENTIFIER.string_ */
extern T0* T129f45(T0* C);
/* ET_TOKEN_CONSTANTS.kl_any_routines_class_name */
extern unsigned char ge777os13773;
extern T0* ge777ov13773;
extern T0* T170f19(T0* C);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T220f27(T0* C);
/* ET_DYNAMIC_FEATURE.is_tilde_feature */
extern T1 T163f24(T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T61f165(T0* C, T6 a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T57f158(T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T57f190(T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge309os9654;
extern T0* ge309ov9654;
extern T0* T75f1(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T76c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T76f13(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T76f18(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T76f6(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T76f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern unsigned char ge307os1723;
extern T0* ge307ov1723;
extern T0* T57f18(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T75c4(void);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T925c12(void);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T28f158(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T28f190(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T28f18(T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T220f34(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T163f21(T0* C, T6 a1);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T61f156(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T193f4(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T193f3(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T184f3(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge777os14004;
extern T0* ge777ov14004;
extern T0* T170f11(T0* C);
/* ET_CURRENT.make */
extern T0* T198c26(void);
/* ET_CURRENT.make_token */
extern void T198f28(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T198f29(T0* C);
/* ET_CURRENT.tokens */
extern T0* T198f5(T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T61f146(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T191f6(T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T61f537(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T61f160(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T187f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T187f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T187f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T186f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T186f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T134f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].resized_area */
extern T0* T133f2(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].copy_data */
extern void T133f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IDENTIFIER].move_data */
extern void T133f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].overlapping_move */
extern void T133f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].non_overlapping_move */
extern void T133f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T133c4(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T186f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T186f8(T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T129f103(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T186f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T156f14(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T61f327(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T61f536(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T61f481(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T61f502(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_local_variable */
extern void T61f550(T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T61f556(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.in_target */
extern T1 T61f175(T0* C);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T61f549(T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T129f20(T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T61f548(T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T61f516(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T190f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T190f11(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T788f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].resized_area */
extern T0* T701f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].copy_data */
extern void T701f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION].move_data */
extern void T701f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].overlapping_move */
extern void T701f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].non_overlapping_move */
extern void T701f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T701c4(T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T190f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T190f6(T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T61f535(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T190f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].clear_items */
extern void T190f12(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T61f531(T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T61f172(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T190f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T191f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T191f17(T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T61f534(T0* C, T0* a1);
/* ET_C_GENERATOR.print_show_console_call */
extern void T61f492(T0* C);
/* ET_C_GENERATOR.print_temp_name */
extern void T61f476(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge959os7233;
extern T0* ge959ov7233;
extern T0* T61f96(T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T61f472(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T61f437(T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T61f474(T0* C);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T61f112(T0* C);
/* ET_C_GENERATOR.indent */
extern void T61f473(T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T61f431(T0* C);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T61f430(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T45f75(T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T950f19(T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T950f38(T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f27(T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T45f33(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T45f32(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T45f31(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T45f74(T0* C);
/* ET_C_GENERATOR.print_const_init_function */
extern void T61f429(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].forth */
extern void T209f40(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_forth */
extern void T209f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T209f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T209f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_item */
extern T6 T209f25(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T813f12(T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T61f490(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T209f17(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_item */
extern T0* T209f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_item */
extern T0* T209f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].after */
extern T1 T209f18(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_after */
extern T1 T209f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].start */
extern void T209f39(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_start */
extern void T209f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_off */
extern T1 T209f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].is_empty */
extern T1 T209f23(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T208f45(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T208f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T208f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T208f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T208f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T208f25(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T208f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T208f23(T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T61f489(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T61f491(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T207f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T207f34(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T207f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T207f17(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T207f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T207f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T207f26(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T207f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T208f24(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T208f28(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T208f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T208f26(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T208f27(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T208f44(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T208f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T208f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T208f30(T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T61f428(T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T61f427(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].wipe_out */
extern void T195f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T195f56(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T195f55(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T195f54(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T195f53(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T195f52(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T195f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T867f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T867f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T195f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T195f50(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T195f65(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T195f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T195f27(T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T61f488(T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T61f520(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T61f508(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T192f46(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T192f61(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T192f60(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T192f59(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T192f58(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T192f49(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T192f57(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T860f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_position */
extern void T860f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T61f533(T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T61f532(T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T61f532ac1(T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T61f547(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T61f555(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T61f541(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T192f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T192f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T192f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T192f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T192f32(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f17(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f21(T6* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T192f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T192f39(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T61f478(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T61f501(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T192f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T192f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T192f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T192f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T192f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T192f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T192f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T192f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T192f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T192f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T192f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T192f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T192f50(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T61f515(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T195f32(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T195f33(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T195f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T195f31(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T195f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T195f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T195f49(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T195f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T195f25(T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T61f487(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f487ac1(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f487ac2(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f487ac3(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f487ac4(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f487ac5(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f487ac6(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T61f486(T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T61f505(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T61f529(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T61f525(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T156f13(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].clear_items */
extern void T156f17(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T156f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T429f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T429f5(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T218f4(T0* C, T6 a1);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T61f530(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T61f546(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T189f16(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].force_last */
extern void T195f47(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T195f62(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T195f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T195f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T195f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T195f40(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T195f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T195f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T195f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T195f68(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T195f67(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern T0* T865f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].resized_area */
extern T0* T864f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].copy_data */
extern void T864f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].move_data */
extern void T864f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].overlapping_move */
extern void T864f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].non_overlapping_move */
extern void T864f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T864c4(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T195f35(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T195f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T195f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T195f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T195f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T195f57(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T193f10(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T865f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_area */
extern T0* T1197c2(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern unsigned char ge935os16648;
extern T0* ge935ov16648;
extern T0* T193f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T865c3(void);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T193f6(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T189f12(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.wipe_out */
extern void T188f12(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T195f24(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T195f34(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T195f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T194f41(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T194f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T194f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T194f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T194f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T194f56(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T194f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T194f25(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T194f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T194f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T194f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T194f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T194f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T194f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T194f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T194f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T194f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T194f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T194f33(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T194f46(T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T61f480(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T61f504(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge777os14040;
extern T0* ge777ov14040;
extern T0* T170f12(T0* C);
/* ET_RESULT.make */
extern T0* T222c25(void);
/* ET_RESULT.make_token */
extern void T222f27(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T222f28(T0* C);
/* ET_RESULT.tokens */
extern T0* T222f5(T0* C);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T61f479(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T61f503(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T61f475(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T194f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T206f40(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T206f52(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T206f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T206f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T206f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T206f45(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T206f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T876f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T876f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T206f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T206f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T206f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T206f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T206f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T61f426(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T206f17(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T206f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T206f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T206f18(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T206f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T206f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T206f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T206f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T206f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T194f40(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T194f53(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T194f52(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T194f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T194f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T194f49(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T866f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T866f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T194f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T194f48(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T194f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T194f59(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T61f425(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T218f3(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T194f35(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T194f32(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T194f24(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T194f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T194f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T194f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T194f28(T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T61f424(T0* C);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T61f484(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T205f26(T0* C);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T61f521(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].forth */
extern void T192f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_forth */
extern void T192f56(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].add_traversing_cursor */
extern void T192f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].remove_traversing_cursor */
extern void T192f67(T0* C, T0* a1);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T61f519(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T61f544(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T61f554(T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T191f7(T0* C);
/* ET_C_GENERATOR.print_routine_name */
extern void T61f545(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T61f553(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T61f569(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T61f593(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_tuple_feature */
extern T6 T61f309(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T61f568(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T61f592(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_procedure_call */
extern void T61f567(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T61f591(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T61f305(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T61f688(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T61f566(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T61f590(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T61f689(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T61f692(T0* C);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T61f694(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T184f10(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T223c13(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CALL_EXPRESSION.set_target */
extern void T203f24(T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T61f323(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].replace */
extern void T204f11(T0* C, T0* a1, T6 a2);
/* ET_CALL_EXPRESSION.make */
extern T0* T203c23(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T203f27(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T129f105(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].item */
extern T0* T204f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].put_last */
extern void T204f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].resize */
extern void T204f9(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T789f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].resized_area */
extern T0* T724f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].copy_data */
extern void T724f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_EXPRESSION].move_data */
extern void T724f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].overlapping_move */
extern void T724f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].non_overlapping_move */
extern void T724f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T724c4(T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T61f691(T0* C);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T61f693(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T184f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].resize */
extern T0* T855f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].resized_area */
extern T0* T854f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].copy_data */
extern void T854f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].move_data */
extern void T854f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].overlapping_move */
extern void T854f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].non_overlapping_move */
extern void T854f8(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T184f6(T0* C);
/* ET_DYNAMIC_TYPE_LIST.resize */
extern void T188f10(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T189f18(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_name */
extern void T61f506(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T220f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T163f25(T0* C);
/* ET_LACE_UNIVERSE.is_ise */
extern T1 T56f152(T0* C);
/* ET_XACE_UNIVERSE.is_ise */
extern T1 T53f153(T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_procedure_call */
extern void T61f565(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T61f589(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T61f307(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_sized_integer_procedure_call */
extern void T61f564(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T61f588(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_identified_procedure_call */
extern void T61f563(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_free_call */
extern void T61f587(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_procedure_call */
extern void T61f562(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T61f586(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_boolean_procedure_call */
extern void T61f561(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T61f585(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T61f304(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T61f560(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T61f584(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_info_message_call */
extern void T61f687(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T61f690(T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T263f2(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge238os8056;
extern T0* ge238ov8056;
extern T0* T61f324(T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T263c1(void);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T61f583(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T220f20(T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T163f23(T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T61f543(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T61f518(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T61f518ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T61f542(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T61f542ac1(T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T61f552(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T61f559(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T61f558(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T61f582(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T61f686(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_name_call */
extern void T61f685(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T61f684(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T61f581(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T61f683(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T61f682(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T61f580(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T61f681(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T61f680(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T61f679(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_query_call */
extern void T61f579(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T61f678(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T61f677(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T61f676(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T61f675(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T61f674(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T61f673(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T61f672(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T61f671(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T61f670(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T61f669(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T61f668(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T61f667(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T61f666(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T61f665(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T61f664(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T61f663(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T61f662(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T61f578(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T61f661(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T61f660(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T61f659(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T61f658(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T61f577(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T61f657(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T61f656(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T61f655(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T61f654(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T61f653(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T61f652(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T61f651(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T61f650(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T61f649(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T61f648(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T61f647(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_query_call */
extern void T61f576(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T61f646(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T61f645(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T61f644(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T61f643(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T61f642(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T61f641(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T61f640(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T61f639(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T61f638(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T61f637(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T61f636(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T61f635(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T61f634(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T61f633(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T61f632(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T61f631(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T61f630(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T61f629(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T61f628(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T61f627(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T61f626(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T61f625(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T61f624(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T61f623(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T61f622(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T61f621(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T61f620(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T61f619(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T61f618(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T61f617(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T61f616(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_identified_query_call */
extern void T61f575(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_call */
extern void T61f615(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_id_object_call */
extern void T61f614(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T61f574(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T61f613(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_query_call */
extern void T61f573(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T61f612(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T61f611(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T61f610(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T61f609(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T61f608(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T61f572(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T61f607(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T61f606(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T61f605(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T61f604(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T61f603(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T61f602(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T61f601(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T61f600(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_query_call */
extern void T61f571(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_argument_count_call */
extern void T61f599(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T61f570(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T61f598(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T61f597(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T61f596(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T61f595(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T61f594(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T61f557(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T208f46(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T208f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T208f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T208f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T208f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T208f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T208f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T208f68(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T208f38(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T208f67(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].resize */
extern T0* T881f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].resized_area */
extern T0* T882f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].copy_data */
extern void T882f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE].move_data */
extern void T882f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].overlapping_move */
extern void T882f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].non_overlapping_move */
extern void T882f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].make */
extern T0* T882c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T208f66(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T827f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].resized_area */
extern T0* T653f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].copy_data */
extern void T653f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTANT].move_data */
extern void T653f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].overlapping_move */
extern void T653f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].non_overlapping_move */
extern void T653f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T653c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T208f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T208f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T208f40(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T208f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T208f56(T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T61f517(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_equal_in_tilde_feature */
extern T1 T227f8(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern unsigned char ge777os13895;
extern T0* ge777ov13895;
extern T0* T170f872(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.tokens */
extern T0* T227f11(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_equal_in_tilde_feature */
extern T1 T223f8(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.tokens */
extern T0* T223f12(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T189f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T193f9(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T193f8(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T227f6(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_for_iteration */
extern T0* T192f26(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_item */
extern T0* T192f21(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].after */
extern T1 T192f40(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_after */
extern T1 T192f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].start */
extern void T192f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_start */
extern void T192f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_off */
extern T1 T192f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].is_empty */
extern T1 T192f34(T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T61f151(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T220f22(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T163f27(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T205f9(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T205f12(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T61f514(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T61f513(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T26f11(T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T26f12(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_STRING_ROUTINES.platform */
extern T0* T26f13(T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T950f21(T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f29(T0* C, T0* a1, T6 a2);
/* STRING_SEARCHER.substring_index */
extern T6 T1313f2(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_SEARCHER.substring_index_with_deltas */
extern T6 T1313f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* NATURAL_32.to_integer_32 */
extern T6 T10f7(T10* C);
/* STRING_8.code */
extern T10 T17f31(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f27(T6* C);
/* STRING_SEARCHER.internal_initialize_deltas */
extern void T1313f6(T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern unsigned char ge2109os1256;
extern T0* ge2109ov1256;
extern T0* T17f33(T0* C);
/* STRING_SEARCHER.make */
extern T0* T1313c5(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T192f28(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T191f16(T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T205f24(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T205f23(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T796f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].resized_area */
extern T0* T795f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].copy_data */
extern void T795f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION_ITEM].move_data */
extern void T795f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].overlapping_move */
extern void T795f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].non_overlapping_move */
extern void T795f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T795c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T796f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T1178c2(T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern unsigned char ge642os6602;
extern T0* ge642ov6602;
extern T0* T205f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T796c3(void);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T205f7(T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T61f512(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T227f7(T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T60f68(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T161f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T223f9(T0* C);
/* ET_CLASS.seeded_query */
extern T0* T60f72(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T159f5(T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T61f148(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T186f13(T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T129f104(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T191f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T191f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T191f9(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T223f14(T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T61f102(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T223f7(T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T61f423(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T196f12(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].clear_items */
extern void T196f14(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T196f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T873f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_position */
extern void T873f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T61f485(T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T61f528(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_access */
extern void T61f527(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T61f526(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T61f524(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T199f15(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T199f14(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T199f9(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T199f8(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T199f13(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T61f523(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T61f522(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T181c89(T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge777os14046;
extern T0* ge777ov14046;
extern T0* T170f684(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T181f13(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T173f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T173c23(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T173f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T716f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1155c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T714c4(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge830os6602;
extern T0* ge830ov6602;
extern T0* T173f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T716c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge777os13986;
extern T0* ge777ov13986;
extern T0* T170f683(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T460c58(void);
/* ET_SYMBOL.make_leaf */
extern void T460f57(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T460f7(T0* C);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge777os13981;
extern T0* ge777ov13981;
extern T0* T170f682(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T507c82(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T507f84(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T507f7(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T173f5(T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T129f100(T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T129f97(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T196f6(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T220f24(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T163f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T210f14(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T210f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T892f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T892f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T210f6(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T210f7(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T210f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T210f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].resize */
extern T0* T891f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].resized_area */
extern T0* T890f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].copy_data */
extern void T890f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_FEATURE].move_data */
extern void T890f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].overlapping_move */
extern void T890f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].non_overlapping_move */
extern void T890f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].make */
extern T0* T890c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T210f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T210f9(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T220f51(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T163f50(T0* C, T1 a1);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T61f422(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T227f15(T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T61f421(T0* C);
/* ET_C_GENERATOR.print_manifest_string_function */
extern void T61f420(T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T61f419(T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T61f471(T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T61f509(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T61f540(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T61f418(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T214f27(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T214f35(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T214f35p1(T0* C);
/* ET_C_GENERATOR.print_types */
extern void T61f417(T0* C, T0* a1);
/* ET_C_GENERATOR.print_eif_type_struct */
extern void T61f470(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T61f469(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T61f500(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T61f468(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_struct_name */
extern void T61f495(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T221f8(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T156f11(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T221f15(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T906f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T906f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T906c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T906f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T156f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].replace */
extern void T905f15(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].item */
extern T0* T905f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T156c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T156f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T429c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T905f7(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T905f6(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].copy */
extern void T905f16(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1209f4(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T905f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1211c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T905f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T905f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1211f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_position */
extern void T1211f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T187f12(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T187f13(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T187f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T187f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T857c4(T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T187f14(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T221f19(T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T61f467(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T61f466(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T61f465(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T61f498(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T61f496(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T221f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T221f18(T0* C, T6 a1, T6 a2);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T344f4(T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T344c3(T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T221f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T221f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T904f34(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T904f31(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T904f30(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T904f39(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T904f40(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T904f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T904f28(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T904f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T904f29(T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T61f464(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T61f463(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_double_type_definition */
extern void T61f462(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_type_definition */
extern void T61f461(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T61f460(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T61f459(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_type_definition */
extern void T61f458(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T61f457(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T61f456(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T61f455(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T61f454(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_type_definition */
extern void T61f453(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T61f452(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T61f451(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T61f450(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T61f449(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_wide_character_type_definition */
extern void T61f448(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_type_definition */
extern void T61f447(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T61f446(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T61f445(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T61f444(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T221f13(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T221f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].put_last */
extern void T905f14(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].put */
extern void T904f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T904f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T904f44(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T904f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T904f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T904f42(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].resize */
extern void T905f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].resize */
extern T0* T1210f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1209f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1209f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].move_data */
extern void T1209f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1209f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1209f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1209c5(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T904f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T904f48(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T904f27(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T904f47(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T904f46(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T904f43(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T904f21(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T221f7(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has */
extern T1 T221f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].has */
extern T1 T904f22(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T221c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T221f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].make */
extern T0* T905c12(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1210f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]].make_area */
extern T0* T1311c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1210c3(void);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T187c15(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T904c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T904f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1206c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T1206f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1310c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T904f33(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1208c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T904f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T904f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T904f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T904f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T904f52(T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T61f443(T0* C, T0* a1);
/* ET_IDENTIFIER.upper_name */
extern T0* T129f18(T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T950f20(T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T950f69(T0* C);
/* UC_UTF8_STRING.move_bytes_right */
extern void T950f81(T0* C, T6 a1, T6 a2);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1216f3(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge359os26187;
extern T0* ge359ov26187;
extern T0* T1216f9(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge359os26186;
extern T0* ge359ov26186;
extern T0* T1216f15(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge359os26174;
extern T0* ge359ov26174;
extern T0* T1216f37(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge359os26185;
extern T0* ge359ov26185;
extern T0* T1216f14(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge359os26184;
extern T0* ge359ov26184;
extern T0* T1216f46(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge359os26183;
extern T0* ge359ov26183;
extern T0* T1216f13(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge359os26182;
extern T0* ge359ov26182;
extern T0* T1216f45(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge359os26181;
extern T0* ge359ov26181;
extern T0* T1216f44(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge359os26180;
extern T0* ge359ov26180;
extern T0* T1216f43(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge359os26179;
extern T0* ge359ov26179;
extern T0* T1216f42(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge359os26178;
extern T0* ge359ov26178;
extern T0* T1216f41(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge359os26177;
extern T0* ge359ov26177;
extern T0* T1216f40(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge359os26176;
extern T0* ge359ov26176;
extern T0* T1216f39(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern unsigned char ge359os26175;
extern T0* ge359ov26175;
extern T0* T1216f38(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge359os26173;
extern T0* ge359ov26173;
extern T0* T1216f36(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge359os26172;
extern T0* ge359ov26172;
extern T0* T1216f35(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge359os26171;
extern T0* ge359ov26171;
extern T0* T1216f34(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge359os26170;
extern T0* ge359ov26170;
extern T0* T1216f33(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge359os26169;
extern T0* ge359ov26169;
extern T0* T1216f32(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge359os26168;
extern T0* ge359ov26168;
extern T0* T1216f31(T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T950f50(T0* C);
/* STRING_8.as_upper */
extern T0* T17f25(T0* C);
/* STRING_8.to_upper */
extern void T17f55(T0* C);
/* CHARACTER_8.infix ">=" */
extern T1 T2f4(T2* C, T2 a1);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge777os13764;
extern T0* ge777ov13764;
extern T0* T170f18(T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T61f442(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge777os13785;
extern T0* ge777ov13785;
extern T0* T170f17(T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T61f441(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge777os13775;
extern T0* ge777ov13775;
extern T0* T170f16(T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T61f440(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge777os13768;
extern T0* ge777ov13768;
extern T0* T170f15(T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T61f439(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge777os13798;
extern T0* ge777ov13798;
extern T0* T170f14(T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T61f438(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge777os13761;
extern T0* ge777ov13761;
extern T0* T170f13(T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T61f416(T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T61f415(T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T212f51(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T212f62(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T212f52(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T212f24(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T49f1(T0* C, T0* a1, T0* a2);
/* KL_ANY_ROUTINES.equal_objects */
extern T1 T79f2(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [STRING_8].any_ */
extern T0* T49f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T212f28(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T212f38(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force */
extern void T212f50(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T212f66(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T212f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T212f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T212f63(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T212f73(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T212f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T212f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T212f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T212f70(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T212f39(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T212f23(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].force */
extern void T211f44(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T211f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T211f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T211f24(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T211f20(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T211f59(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T211f67(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T211f27(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T211f66(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T211f65(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T211f36(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T211f64(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T211f25(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T211f19(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T211f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T211f57(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T211f35(T0* C);
/* STRING_8.same_string */
extern T1 T17f8(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T212f37(T0* C, T0* a1);
/* ET_C_GENERATOR.trace_mode */
extern T1 T61f164(T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T61f414(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T219f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T220f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T163f53(T0* C, T6 a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T61f413(T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T61f412(T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T61f404(T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T61f403(T0* C, T1 a1);
/* GEC.no_split */
extern T1 T21f26(T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T61f402(T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T21f25(T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T61f401(T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T21f24(T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T35f16(T0* C);
/* DS_ARRAYED_LIST [STRING_8].last */
extern T0* T80f21(T0* C);
/* ET_C_GENERATOR.make */
extern T0* T61c400(T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T61f407(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T212f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].internal_set_equality_tester */
extern void T895f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T212c45(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T212f53(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].make */
extern T0* T895c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].new_cursor */
extern T0* T895f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T1205c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T212f40(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T893c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T212f67(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T212f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T212f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T212f75(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T212f74(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T49c3(void);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T211f40(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T211c39(T6 a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T211f37(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T314c6(T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T211f48(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T211f47(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T211f46(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T211f45(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T210c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T210f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T892c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T891f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_FEATURE].make_area */
extern T0* T1204c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T891c3(void);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make */
extern T0* T209c37(T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_cursor */
extern T0* T209f36(T0* C);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].make */
extern T0* T887c4(T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_slots */
extern void T209f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].special_integer_ */
extern T0* T209f20(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_modulus */
extern T6 T209f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_clashes */
extern void T209f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_key_storage */
extern void T209f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_item_storage */
extern void T209f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T889f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_CONSTANT].make_area */
extern T0* T1203c2(T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make */
extern T0* T888c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T889c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T208c42(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T208f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].make */
extern T0* T885c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T885f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1202c3(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T208f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T883c4(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T208f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T208f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T208f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T208f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T881f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T1201c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T881c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T208f69(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T827f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T1187c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T827c3(void);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T207c32(T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T207f19(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T879c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T207f38(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T207f22(T0* C);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T207f24(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T207f37(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T207f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T207f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T206c37(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T206f36(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T876c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T206f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T206f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T206f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T206f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T206f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T206f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T878f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_area */
extern T0* T1200c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T877c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T878c3(void);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T205c22(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T205f22p1(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T205f8(T0* C);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].make */
extern T0* T204c8(T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].new_cursor */
extern T0* T204f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CALL_EXPRESSION].make */
extern T0* T875c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T789f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T1175c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T789c3(void);
/* ET_CALL_INSTRUCTION.make */
extern T0* T200c9(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T200f10(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T199c12(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T199f12p1(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge777os13987;
extern T0* ge777ov13987;
extern T0* T170f687(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T460c60(void);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge777os13982;
extern T0* ge777ov13982;
extern T0* T170f686(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T460c59(void);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T199f7(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T196c11(T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T196f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T873c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T872f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT].make_area */
extern T0* T1199c2(T6 a1);
/* SPECIAL [ET_AGENT].make */
extern T0* T871c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T872c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern T0* T195c42(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T195f48(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T869c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T869f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T1198c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T195f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T867c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T195f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T195f73(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T195f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T195f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T195f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T194c37(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T194f18(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T866c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T194f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T194f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T194f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T194f42(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T193c7(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T192c42(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T192f48(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T862c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T862f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T1196c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T192f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T860c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T192f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T192f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T192f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T192f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T192f69(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T191c13(T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T191f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T859c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T788f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T1174c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T788c3(void);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T190c8(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T186c10(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T186f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T856c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T134f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T412c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T134c3(void);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T185c4(T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge308os2589;
extern T0* ge308ov2589;
extern T0* T61f118(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T183c3(T0* a1);
/* ET_TYPE_CHECKER.make */
extern T0* T182c13(T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge898os16606;
extern T0* ge898ov16606;
extern T0* T182f7(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T333c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge777os14006;
extern T0* ge777ov14006;
extern T0* T170f732(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T179c69(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T333f30(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T333f68p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.current_class */
extern T0* T182f6(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T182f13p1(T0* C, T0* a1);
/* ET_C_GENERATOR.make_processor */
extern void T61f406(T0* C, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T60f52(T0* C);
/* ET_SYSTEM.compile */
extern void T58f62(T0* C);
/* ET_SYSTEM.compile_system */
extern void T58f65(T0* C);
/* ET_SYSTEM.build_dynamic_type_sets */
extern void T58f68(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T155f15(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T64f248(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T64f251(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T64f256(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T64f257(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T227f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T223f11(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T64f258(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T57f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T57f193(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T77f13(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T28f164(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T28f193(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T64f259(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T227f9(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T223f10(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T64f242(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge943os8459;
extern T0* ge943ov8459;
extern T0* T64f241(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T64f239(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T64f255(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T64f250(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T184f12(T0* C);
/* DS_CELL [INTEGER_32].put */
extern void T264f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T220f57(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T163f55(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T64f254(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T64f253(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T163f32(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T220f55(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T163f54(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T220f56(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T163f51(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T155f12(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T64f245(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T155f11(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T64f244(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T155f14(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T64f247(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T155f13(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T64f246(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T220f52(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T163f49(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T220f53(T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T60f51(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T532f4(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T625f7(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T625f10(T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T449f7(T0* C, T0* a1);
/* ET_CLIENTS.has_class_name */
extern T1 T449f8(T0* C, T0* a1);
/* ET_IDENTIFIER.class_name */
extern T0* T129f54(T0* C);
/* ET_CLASS_NAME_LIST.has_class */
extern T1 T448f5(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.has_class_name */
extern T1 T448f4(T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T625f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T57f157(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T57f189(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge309os9653;
extern T0* ge309ov9653;
extern T0* T75f2(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T77c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T77f14(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T77f18(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T77f4(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T77f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T57f195(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T924c31(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T57f28(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T28f157(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T28f189(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T28f195(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T28f28(T0* C);
/* ET_CLASS.named_query */
extern T0* T60f48(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T159f6(T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T60f49(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T161f6(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T57f156(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T924c30(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T57f26(T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T28f156(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T28f26(T0* C);
/* ET_LACE_UNIVERSE.eiffel_parser */
extern T0* T56f157(T0* C);
/* ET_EIFFEL_PARSER.set_providers_enabled */
extern void T171f907(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_void_keyword */
extern void T171f906(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_reference_keyword */
extern void T171f905(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_recast_keyword */
extern void T171f904(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_create_keyword */
extern void T171f903(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_convert_keyword */
extern void T171f902(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_attribute_keyword */
extern void T171f901(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_assign_keyword */
extern void T171f900(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_error_handler */
extern void T171f899(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_ast_factory */
extern void T171f898(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_universe */
extern void T171f897(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_factory */
extern T0* T171c896(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T171f911(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T171f915(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge965os15186;
extern T0* ge965ov15186;
extern T0* T171f627(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T171f863(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T171f1751(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T171f1768(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T962f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T324f15(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge270os2847;
extern T0* ge270ov2847;
extern T0* T171f883(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T962c2(void);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T171f1750(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T171f1749(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T171f1748(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T171f1747(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T171f1746(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge965os15179;
extern T0* ge965ov15179;
extern T0* T171f625(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T171f1745(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T171f1744(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T171f1743(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T171f1742(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T171f1741(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T171f1740(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge965os15178;
extern T0* ge965ov15178;
extern T0* T171f615(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge965os15175;
extern T0* ge965ov15175;
extern T0* T171f855(T0* C);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T171f1767(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T171f1766(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge965os15174;
extern T0* ge965ov15174;
extern T0* T171f853(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge965os15171;
extern T0* ge965ov15171;
extern T0* T171f846(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T171f1765(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T171f1764(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge965os15170;
extern T0* ge965ov15170;
extern T0* T171f842(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge965os15167;
extern T0* ge965ov15167;
extern T0* T171f838(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T171f1763(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T171f1762(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge965os15166;
extern T0* ge965ov15166;
extern T0* T171f831(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge965os15165;
extern T0* ge965ov15165;
extern T0* T171f829(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T171f914(T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T171f629(T0* C);
/* ET_EIFFEL_PARSER.make_class_processor */
extern void T171f910(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_class */
extern T0* T171f626(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner_with_factory */
extern void T171f909(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T171f913(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T171f920(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T171f924(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T171f919(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T171f923(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge969os16056;
extern T0* ge969ov16056;
extern T0* T171f850(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T171f879(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge969os16055;
extern T0* ge969ov16055;
extern T0* T171f848(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge969os16054;
extern T0* ge969ov16054;
extern T0* T171f845(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge969os16053;
extern T0* ge969ov16053;
extern T0* T171f843(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge969os16052;
extern T0* ge969ov16052;
extern T0* T171f841(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge969os16051;
extern T0* ge969ov16051;
extern T0* T171f839(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge969os16047;
extern T0* ge969ov16047;
extern T0* T171f837(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T171f1761(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T171f1760(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T171f1759(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge969os16043;
extern T0* ge969ov16043;
extern T0* T171f833(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T171f1758(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T171f1757(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T171f1756(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T171f844(T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T440c38(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T440f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1067c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T440f48(T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T440f47(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T440f24(T0* C);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T440f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T440f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T440f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T440f44(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T425f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T1059c2(T6 a1);
/* SPECIAL [ET_CLASS].make */
extern T0* T423c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T425c3(void);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T439c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T439f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T1066c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T579f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T1105c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T569c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T579c3(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T267c18(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T267f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T908c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T670f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T1135c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T648c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T670c3(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T269c18(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T269f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T912c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T652f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T1130c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T647c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T652c3(void);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T438c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T438f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1065c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1064f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T1302c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T1063c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1064c3(void);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T437c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T462f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T1075c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T461c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T462c3(void);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T436c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T453f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T1072c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T452c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T453c3(void);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T435c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T693f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T1144c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T658c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T693c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T434c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T686f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T1141c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T664c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T686c3(void);
/* ET_XACE_UNIVERSE.eiffel_parser */
extern T0* T53f156(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T57f155(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T924c29(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T57f25(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T28f155(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T28f25(T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T60f73(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T57f154(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T924c28(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T57f24(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T28f154(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T28f24(T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge777os13856;
extern T0* ge777ov13856;
extern T0* T170f1(T0* C);
/* ET_SYSTEM.tokens */
extern T0* T58f45(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T57f153(T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T924c27(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T57f23(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T28f153(T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T28f23(T0* C);
/* ET_SYSTEM.compile_kernel */
extern void T58f67(T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern unsigned char ge777os13850;
extern T0* ge777ov13850;
extern T0* T170f10(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T170f9(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge777os13952;
extern T0* ge777ov13952;
extern T0* T170f7(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge777os13914;
extern T0* ge777ov13914;
extern T0* T170f6(T0* C);
/* UT_VERSION.infix "<" */
extern T1 T63f5(T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T63f13(T0* C);
/* UT_VERSION.has_build */
extern T1 T63f12(T0* C);
/* UT_VERSION.revision */
extern T6 T63f11(T0* C);
/* UT_VERSION.has_revision */
extern T1 T63f10(T0* C);
/* UT_VERSION.minor */
extern T6 T63f9(T0* C);
/* UT_VERSION.has_minor */
extern T1 T63f8(T0* C);
/* UT_VERSION.major */
extern T6 T63f7(T0* C);
/* UT_VERSION.has_major */
extern T1 T63f6(T0* C);
/* ET_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge252os1740;
extern T0* ge252ov1740;
extern T0* T58f46(T0* C);
/* UT_VERSION.make */
extern T0* T63c17(T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge777os13960;
extern T0* ge777ov13960;
extern T0* T170f5(T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge777os13903;
extern T0* ge777ov13903;
extern T0* T170f4(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge777os13854;
extern T0* ge777ov13854;
extern T0* T170f3(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T57f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T57f191(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T926c614(T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T926f630(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T926f22(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T60f75(T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T926f21(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T926f17(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge951os25330;
extern T0* ge951ov25330;
extern T0* T926f61(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1338c8(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T57f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T28f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T28f191(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T28f16(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T57f161(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T926c613(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T57f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T28f161(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T28f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T57f160(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T926c612(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T57f14(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T28f160(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T28f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge777os13825;
extern T0* ge777ov13825;
extern T0* T170f2(T0* C);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T174c95(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T57f159(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T924c32(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T57f30(T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T28f159(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T28f30(T0* C);
/* ET_LACE_UNIVERSE.print_time */
extern void T56f164(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T312f9(T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T312f18(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T312f23(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T152f7(T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T312f14(T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T312f22(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T312f17(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T312f21(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T312f16(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T312c16(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T312f20(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T312f19(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T165f43(T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T165f45(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T165f38(T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T165f42(T0* C);
/* DT_DATE_TIME.infix "<" */
extern T1 T165f41(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T165f40(T0* C);
/* DT_DATE_TIME.day */
extern T6 T165f10(T0* C);
/* DT_DATE_TIME.month */
extern T6 T165f9(T0* C);
/* DT_DATE_TIME.year */
extern T6 T165f8(T0* C);
/* DT_DATE_TIME.add_duration */
extern void T165f62(T0* C, T0* a1);
/* DT_DATE_TIME.add_years_months_days */
extern void T165f65(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T165f67(T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge365os13439;
extern T6 ge365ov13439;
extern T6 T165f47(T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T165f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge365os13438;
extern T6 ge365ov13438;
extern T6 T165f24(T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T165f23(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge365os13437;
extern T6 ge365ov13437;
extern T6 T165f22(T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T152f4(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T165f21(T0* C);
/* DT_DATE_TIME.set_year_month_day */
extern void T165f57(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_day */
extern void T165f66(T0* C, T6 a1);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T312f15(T0* C);
/* DT_DATE_TIME.set_time */
extern void T165f61(T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T165f60(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1132os13634;
extern T0* ge1132ov13634;
extern T0* T312f8(T0* C);
/* DT_DATE_TIME.make */
extern T0* T165c59(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T165f64(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T165f63(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.infix "-" */
extern T0* T165f12(T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T165f16(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T165f7(T0* C);
/* DT_DATE_TIME.second */
extern T6 T165f6(T0* C);
/* DT_DATE_TIME.minute */
extern T6 T165f5(T0* C);
/* DT_DATE_TIME.hour */
extern T6 T165f4(T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T165f3(T0* C);
/* ET_XACE_UNIVERSE.print_time */
extern void T53f168(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.preparse_single */
extern void T56f167(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T941f4(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T150f15(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T941f7(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T57f280(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T57f315(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1405c13(T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T150f7(T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T150f8(T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T950f22(T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T950f70(T0* C);
/* STRING_8.as_lower */
extern T0* T17f30(T0* C);
/* STRING_8.to_lower */
extern void T17f62(T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.name */
extern T0* T150f9(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T139f4(T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T139f5(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.name */
extern T0* T139f6(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T57f72(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T28f280(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T28f315(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T28f72(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T941f2(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T139f9(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T941f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.assembly */
extern T0* T138f4(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].item */
extern T0* T414f9(T0* C, T6 a1);
/* ET_LACE_DOTNET_ASSEMBLIES.count */
extern T6 T138f3(T0* C);
/* ET_LACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T56f153(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T941c3(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters_single */
extern void T313f131(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_single */
extern void T313f140(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T313f144(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T283f54(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T280f13(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T136f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T135f9(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T446c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T80c40(T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T121f9(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T88f23(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T88f24(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T121f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T88f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T121f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T121f6(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T121f8(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T88f22(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T88f14(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T88f12(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T121c7(T0* a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T80f23(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T80c23(T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T80f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T315c7(T0* a1);
/* ST_SPLITTER.split */
extern T0* T46f6(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T46f8(T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T88f18(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T341f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T341c3(T0* a1);
/* DS_LINKED_LIST [STRING_8].is_empty */
extern T1 T88f10(T0* C);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T122f24(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T122f32(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T122f22(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T122f19(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T122f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T122f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T122f17(T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T122f25(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T46f5(T0* C);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T88c17(void);
/* ST_SPLITTER.set_separators */
extern void T46f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T122f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T122f40(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T122f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T122f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T122f37(T0* C);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T122c30(T6 a1);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T122f20(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T403c3(T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T122f36(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T122f23(T0* C);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T122f28(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T122f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T122f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T122f33(T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T46c9(void);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T22f49(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T22f28(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T22f34(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f5(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T22f27(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T22f33(T0* C, T14 a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T313f143(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T283f53(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T280f12(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T136f46(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T135f8(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T57f166(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T57f194(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T927c17(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T57f20(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T28f166(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T28f194(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T28f20(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T444f28(T0* C);
/* KL_DIRECTORY.old_close */
extern void T444f32(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T444f20(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T444f33(T0* C, T14 a1);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T283f52(T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T283f60(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T283f57(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.put_last */
extern void T280f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T442f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T442f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].resize */
extern T0* T1069f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].resized_area */
extern T0* T1068f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].copy_data */
extern void T1068f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_CLUSTER].move_data */
extern void T1068f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].overlapping_move */
extern void T1068f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].non_overlapping_move */
extern void T1068f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].make */
extern T0* T1068c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T442f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T442f8(T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T283f49(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T280f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T280c3(void);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T442c10(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T442f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1070c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1069f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_CLUSTER].make_area */
extern T0* T1303c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1069c3(void);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T283f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T283f47(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_override */
extern void T283f62(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T283f61(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_recursive */
extern void T283f46(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_options */
extern void T283f48(T0* C, T0* a1);
/* ET_XACE_CLUSTER.make */
extern T0* T283c41(T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_overridden_constraint_enabled */
extern void T283f51(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T280f9(T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T283f30(T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T136f48(T0* C, T0* a1);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T136f44(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T136f45(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T135f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T413f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T413f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T145f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].resized_area */
extern T0* T143f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].copy_data */
extern void T143f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTER].move_data */
extern void T143f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].overlapping_move */
extern void T143f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].non_overlapping_move */
extern void T143f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T143c4(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T413f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T413f7(T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T136f41(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T135f5(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T135c7(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T413c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T413f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1056c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T145f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T416c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T145c3(void);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T136f35(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T136f40(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T136f39(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_override */
extern void T136f43(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T136f49(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T136f38(T0* C, T1 a1);
/* ET_LACE_CLUSTER.make */
extern T0* T136c36(T0* a1, T0* a2);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T136f42(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T135f6(T0* C, T1 a1);
/* ET_IDENTIFIER.set_position */
extern void T129f101(T0* C, T6 a1, T6 a2);
/* ET_LACE_CLUSTER.name */
extern T0* T136f20(T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T136f30(T0* C);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T71f13(T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T444f21(T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T444f11(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T444f22(T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge389os9417;
extern T0* ge389ov9417;
extern T0* T71f14(T0* C);
/* KL_DIRECTORY.make */
extern void T444f24(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T444c24(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T444f29(T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T444f16(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T70f17(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T70f18(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T283f24(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T211f38(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T283f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T314f10(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].go_after */
extern void T314f11(T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T211f73(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T314f4(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T314f5(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T314f9(T0* C);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T283f26(T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T279f131(T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1014os19257;
extern T0* ge1014ov19257;
extern T0* T279f132(T0* C);
/* ET_XACE_OPTIONS.string_equality_tester */
extern unsigned char ge340os1730;
extern T0* ge340ov1730;
extern T0* T279f98(T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T48c3(void);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T279f130(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T283f24p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T136f26(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T137f4(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T137f5(T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T137f3(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T136f15(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T136f26p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T57f165(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T927c16(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T57f19(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T28f165(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T28f19(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_single */
extern void T313f142(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T57f183(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T928c21(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T928f22(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T28f183(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T313f75(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T959c11(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T959f13(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T959f15(T0* C, T6 a1, T6 a2);
/* ET_CLASS.add_overridden_class */
extern void T60f183(T0* C, T0* a1);
/* ET_CLASS.reset_after_parsed */
extern void T60f190(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T534f10(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T638f10(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T969f12(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T636f9(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T638f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T636f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T532f11(T0* C);
/* ET_CREATOR.reset */
extern void T625f19(T0* C);
/* ET_INVARIANTS.reset */
extern void T538f25(T0* C);
/* ET_INVARIANTS.reset_implementation_checked */
extern void T538f27(T0* C);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T538f26(T0* C);
/* ET_INVARIANTS.reset */
extern void T538f25p1(T0* C);
/* ET_PARENT_LIST.reset */
extern void T321f12(T0* C);
/* ET_PARENT.reset */
extern void T317f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T320f10(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T319f9(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T614f13(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T612f8(T0* C);
/* ET_RENAME_LIST.reset */
extern void T318f10(T0* C);
/* ET_RENAME.reset */
extern void T606f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T606f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T173f29(T0* C);
/* ET_PARENT.parent */
extern T0* T317f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T430f29(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T161f11(T0* C);
/* ET_QUERY_LIST.reset */
extern void T159f11(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T60f197(T0* C);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge777os14391;
extern T0* ge777ov14391;
extern T0* T170f115(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T325c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T1016f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T1289c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T1015c4(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge832os16648;
extern T0* ge832ov16648;
extern T0* T325f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T1016c3(void);
/* ET_CLASS.tokens */
extern T0* T60f64(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T60f196(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T60f195(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T60f194(T0* C);
/* ET_CLASS.reset_flat_implementation_checked */
extern void T60f193(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0h_error */
extern void T57f198(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T926c622(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T57f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T28f198(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T28f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0j_error */
extern void T57f203(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T926c627(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T28f203(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T57f202(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T926c626(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T28f202(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0f_error */
extern void T57f199(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T926c623(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T28f199(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T60f50(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T57f201(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T926c625(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T28f201(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T60f76(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T57f200(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T926c624(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T28f200(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_overridden_class */
extern void T60f176(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T60f192(T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T60f179(T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T60f181(T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T60f178(T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T60f177(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T60f199(T0* C);
/* ET_CLASS.reset_parsed */
extern void T60f198(T0* C);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge777os14393;
extern T0* ge777ov14393;
extern T0* T170f117(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T161c8(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge716os6602;
extern T0* ge716ov6602;
extern T0* T161f4(T0* C);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge777os14392;
extern T0* ge777ov14392;
extern T0* T170f116(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T159c8(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge718os6602;
extern T0* ge718ov6602;
extern T0* T159f4(T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge777os14000;
extern T0* ge777ov14000;
extern T0* T170f118(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T179c22(void);
/* ET_CLASS.cloned_class */
extern T0* T60f71(T0* C);
/* ET_CLASS.copy */
extern void T60f191(T0* C, T0* a1);
/* ET_CLASS.make_unknown */
extern T0* T60c162(T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge777os13799;
extern T0* ge777ov13799;
extern T0* T170f90(T0* C);
/* ET_LACE_UNIVERSE.eiffel_class */
extern T0* T56f151(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T154f43(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T154f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T154f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T154f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T154f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T154f28(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T154f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T154f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T154f29(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T154f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T426f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].resized_area */
extern T0* T424f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].copy_data */
extern void T424f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME].move_data */
extern void T424f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].overlapping_move */
extern void T424f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].non_overlapping_move */
extern void T424f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T424c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T154f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T425f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].resized_area */
extern T0* T423f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].copy_data */
extern void T423f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS].move_data */
extern void T423f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].overlapping_move */
extern void T423f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].non_overlapping_move */
extern void T423f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T154f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T154f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T154f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T154f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T154f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T154f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T154f49(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T301f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T154f48(T0* C);
/* ET_AST_FACTORY.new_class */
extern T0* T277f312(T0* C, T0* a1, T6 a2);
/* ET_CLASS.make */
extern T0* T60c184(T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T154f33(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T154f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T154f25(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T154f44(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.eiffel_class */
extern T0* T53f159(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T313f147(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T313f154(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T57f182(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T28f182(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T57f181(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T28f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T57f168(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T28f168(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T57f179(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T28f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T57f178(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T28f178(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T313f160(T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T313f101(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T313f126(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T313f155(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T313f158(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T313f98(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T291f42(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T291f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T291f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T291f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T291f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T291f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T291f30(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T291f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T291f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T291f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T291f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T291f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T291f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T291f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T291f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T291f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T291f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T291f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T291f34(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T291f36(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T291f39(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T291f44(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.strings */
extern unsigned char ge970os15862;
extern T0* ge970ov15862;
extern T0* T313f125(T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T313f128(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T291f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].internal_set_equality_tester */
extern void T980f6(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T313f127(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T291c38(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T291f43(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].make */
extern T0* T980c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].new_cursor */
extern T0* T980f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1248c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T291f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T982c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T291f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T291f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T291f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T291f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T291f56(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T313f165(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T954f15(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T954f8(T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T313f124(T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern unsigned char ge970os15863;
extern T0* ge970ov15863;
extern T0* T313f123(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T57f173(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T28f173(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T57f172(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T28f172(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T57f171(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T28f171(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T57f170(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T28f170(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T313f157(T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T313f96(T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T277f55(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T313f95(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T291f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T291f25(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T291f23(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T171f888(T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T171f872(T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T171f860(T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T171f882(T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T171f1752(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T171f871(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T171f870(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T313f159(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T313f153(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T57f167(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T28f167(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T313f156(T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T313f73(T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T313f152(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T313f150(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T313f76(T0* C);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T313f72(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T313f71(T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T313f151(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T313f146(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_buffer */
extern unsigned char ge972os16038;
extern T0* ge972ov16038;
extern T0* T313f67(T0* C);
/* KL_STANDARD_FILES.input */
extern unsigned char ge309os9652;
extern T0* ge309ov9652;
extern T0* T75f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T960c19(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T960f22(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T960f25(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T960f14(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T960f24(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T313f113(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T313f148(T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T126f26(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T313f148p1(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T313f148p0(T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T22f31(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T22f38(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T275f6(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T275f7(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge2092os2052;
extern T0* ge2092ov2052;
extern T0* T22f22(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T275c8(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T275f10(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T275f4(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T22f46(T0* C);
/* UNIX_FILE_INFO.update */
extern void T275f9(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T275f11(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T22f13(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T22f21(T0* C, T14 a1);
/* KL_EIFFEL_COMPILER.is_se */
extern unsigned char ge386os21050;
extern T1 ge386ov21050;
extern T1 T445f1(T0* C);
/* KL_EIFFEL_COMPILER.vendor */
extern unsigned char ge386os21041;
extern T0* ge386ov21041;
extern T0* T445f2(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_compiler */
extern unsigned char ge324os16032;
extern T0* ge324ov16032;
extern T0* T313f64(T0* C);
/* KL_EIFFEL_COMPILER.default_create */
extern T0* T445c5(void);
/* KL_TEXT_INPUT_FILE.reset */
extern void T22f52(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T313f79(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T22f15(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T22f23(T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern unsigned char ge970os15893;
extern T0* ge970ov15893;
extern T0* T313f120(T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T313f78(T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T313f119(T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T313f118(T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T313f117(T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T283f36(T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T283f36p1(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T283f28(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T136f21(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T136f21p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T136f29(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T444f27(T0* C);
/* KL_DIRECTORY.readentry */
extern void T444f31(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T444f19(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T444f15(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T444f9(T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T444f13(T0* C);
/* KL_DIRECTORY.open_read */
extern void T444f26(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T444f30(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T444f17(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T444f12(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T444f23(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T444f25(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T313f77(T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge968os19719;
extern T0* ge968ov19719;
extern T0* T313f115(T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T313f68(T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T57f207(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T28f207(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T413f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T442f6(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.eiffel_preparser */
extern T0* T56f150(T0* C);
/* ET_EIFFEL_PREPARSER.set_use_void_keyword */
extern void T313f138(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_reference_keyword */
extern void T313f137(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_recast_keyword */
extern void T313f136(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_create_keyword */
extern void T313f135(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_convert_keyword */
extern void T313f134(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_attribute_keyword */
extern void T313f133(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_assign_keyword */
extern void T313f132(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.make_with_factory */
extern T0* T313c130(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner_with_factory */
extern void T313f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T313f141(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T313f145(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T313f149(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge967os19675;
extern T0* ge967ov19675;
extern T0* T313f87(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T313f121(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge967os19674;
extern T0* ge967ov19674;
extern T0* T313f86(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge967os19673;
extern T0* ge967ov19673;
extern T0* T313f85(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge967os19672;
extern T0* ge967ov19672;
extern T0* T313f84(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge967os19671;
extern T0* ge967ov19671;
extern T0* T313f83(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge967os19670;
extern T0* ge967ov19670;
extern T0* T313f82(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge967os19667;
extern T0* ge967ov19667;
extern T0* T313f81(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T313f164(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T313f166(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T313f129(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T313f163(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge967os19664;
extern T0* ge967ov19664;
extern T0* T313f80(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T313f162(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T313f161(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T313f66(T0* C);
/* ET_XACE_UNIVERSE.preparse_single */
extern void T53f171(T0* C);
/* ET_XACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T53f154(T0* C);
/* ET_XACE_UNIVERSE.eiffel_preparser */
extern T0* T53f152(T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T166f10(T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T166f31(T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T165f58(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T166f32(T0* C);
/* DT_SYSTEM_CLOCK.second_now */
extern T6 T166f16(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_sec */
extern T6 T166f29(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.minute_now */
extern T6 T166f15(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_min */
extern T6 T166f28(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.hour_now */
extern T6 T166f14(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_hour */
extern T6 T166f27(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.day_now */
extern T6 T166f13(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mday */
extern T6 T166f26(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.month_now */
extern T6 T166f12(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mon */
extern T6 T166f25(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.year_now */
extern T6 T166f11(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_year */
extern T6 T166f24(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.update */
extern void T166f33(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f4(T14* C);
/* POINTER.c_free */
extern void T14f9(T14* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_millitm */
extern T6 T166f23(T0* C, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T432c7(T14 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f11(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f12(T14* C, T14 a1, T14 a2, T6 a3);
/* DT_SYSTEM_CLOCK.tm_structure_size */
extern T6 T166f22(T0* C);
/* DT_SYSTEM_CLOCK.localtime */
extern T14 T166f20(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.gmtime */
extern T14 T166f19(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_time */
extern void T166f35(T0* C, T14 a1, T14 a2);
/* DT_SYSTEM_CLOCK.ftime */
extern void T166f34(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.time_t_structure_size */
extern T6 T166f18(T0* C);
/* POINTER.memory_alloc */
extern T14 T14f1(T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f2(T14* C, T6 a1);
/* DT_SYSTEM_CLOCK.timeb_structure_size */
extern T6 T166f17(T0* C);
/* DT_DATE_TIME.make_from_storage */
extern T0* T165c56(T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1124os13318;
extern T0* ge1124ov13318;
extern T0* T164f1(T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T166c30(void);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T164c2(void);
/* ET_SYSTEM.error_handler */
extern T0* T58f47(T0* C);
/* ET_SYSTEM.activate_dynamic_type_set_builder */
extern void T58f66(T0* C);
/* ET_LACE_UNIVERSE.activate_processors */
extern void T56f162(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T306f16(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T306c15(T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T1004f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T1004c6(T0* a1);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge896os25993;
extern T0* ge896ov25993;
extern T0* T1004f5(T0* C);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T1003c37(T6 a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T1003f22(T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1281c4(T0* a1);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T1003f42(T0* C);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T1003f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T1003f30(T0* C);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T1003f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T1003f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T1003f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T1003f38(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T1002c37(T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T1002f22(T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1280c4(T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T1002f42(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T1002f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T1002f30(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T1002f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T1002f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T1002f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T1002f38(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.make */
extern T0* T1001c35(T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T1001f36(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T273f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T273f36(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T272f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T272f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T918f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].resized_area */
extern T0* T917f3(T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].copy_data */
extern void T917f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].move_data */
extern void T917f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].overlapping_move */
extern void T917f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].non_overlapping_move */
extern void T917f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T917c4(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T272f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T272f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T1001f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T272f14(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T272f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T919f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T919f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T272f6(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T273c33(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T273f35(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T712f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T1153c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T640c4(T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge861os16648;
extern T0* ge861ov16648;
extern T0* T273f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T712c3(void);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T272f7(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T272c12(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T272f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T919c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T918f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T1215c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T918c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T271c13(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T271f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T916c4(T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T270c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T270f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T915c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T913f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_area */
extern T0* T1214c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T914c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T913c3(void);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T268c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T268f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T911c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T909f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_area */
extern T0* T1213c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T910c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T909c3(void);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T266c13(T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T266f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T907c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T834f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T1190c2(T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T812c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T834c3(void);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge880os9043;
extern T0* ge880ov9043;
extern T0* T1001f29(T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T306f19(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.unknown_class */
extern T0* T306f14(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T305c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T1000c6(T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1009c18(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1009f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1288c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1000f6p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern void T305f7p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.unknown_class */
extern T0* T305f4(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T304c26(T0* a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T999c7(T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge893os25904;
extern T0* ge893ov25904;
extern T0* T999f5(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1228c27(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1223f10(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1223f9(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1223c22(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T998c6(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T998f6p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern T0* T997c6(T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T997f6p1(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T996c6(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T995c6(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make_default */
extern T0* T1276c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make */
extern void T1276f15(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_map */
extern T0* T1391c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_with_equality_testers */
extern void T1391f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1468c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1468f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1495c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1391f33(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1470c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_sparse_container */
extern void T1391f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].unset_found_item */
extern void T1391f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_slots */
extern void T1391f61(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].special_integer_ */
extern T0* T1391f29(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_modulus */
extern T6 T1391f22(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_clashes */
extern void T1391f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_key_storage */
extern void T1391f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].make */
extern T0* T1393f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_IDENTIFIER].make_area */
extern T0* T1471c2(T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].make */
extern T0* T1392c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].default_create */
extern T0* T1393c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_item_storage */
extern void T1391f58(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].make */
extern T0* T1277c14(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1277f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].make */
extern T0* T1394c7(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T995f6p1(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T994c6(T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern void T994f6p1(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T993c16(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1273f37(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T1385f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1273c36(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1273f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1385c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1385f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1465c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1273f30(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1387c4(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1273f54(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1273f43(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1273f62(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1273f31(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1273f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1273f61(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1273f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1382f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1464c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T1380c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1382c3(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1273f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1388f2(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1466c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1383c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1388c3(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1271f34(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1270c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1271c33(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1271f27(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1381c4(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1271f43(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1271f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1271f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1271f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1271f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1271f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1271f39(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T992c21(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1265c45(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1265f52(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1372c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1372f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1461c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1265f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1369c4(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1265f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1265f56(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1265f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1265f41(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1265f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1265f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1265f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1265f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1374f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1462c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T1370c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1374c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1264f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1367f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1264c45(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1264f54(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1367c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1367f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1460c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1264f43(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1366c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1264f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1264f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1264f78(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1264f40(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1264f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1264f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1264f76(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T675f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T1138c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T604c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T675c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1264f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1263f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1263c39(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1263f21(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1365c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1263f52(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1263f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1263f31(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1263f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1263f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1263f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1263f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1262f43(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1362f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge823os6523;
extern T0* ge823ov6523;
extern T0* T992f16(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T985c2(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1262c42(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1262f51(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1362c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1362f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1458c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1262f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1359c4(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1262f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1262f54(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1262f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1262f37(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1262f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1262f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1262f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1262f75(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1364f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1459c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T1360c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1364c3(void);
/* DS_HASH_SET [ET_CLASS_NAME].set_equality_tester */
extern void T991f41(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.class_name_tester */
extern unsigned char ge822os2851;
extern T0* ge822ov2851;
extern T0* T304f18(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T301c2(void);
/* DS_HASH_SET [ET_CLASS_NAME].make */
extern T0* T991c40(T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_cursor */
extern T0* T991f39(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].make */
extern T0* T1261c4(T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].unset_found_item */
extern void T991f46(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].make_slots */
extern void T991f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].special_integer_ */
extern T0* T991f29(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].new_modulus */
extern T6 T991f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_clashes */
extern void T991f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_key_storage */
extern void T991f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_item_storage */
extern void T991f42(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T426f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T1060c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T426c3(void);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].make */
extern T0* T990c13(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_cursor */
extern T0* T990f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].make */
extern T0* T1260c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].make */
extern T0* T1258f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_LIST].make_area */
extern T0* T1358c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].make */
extern T0* T1259c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].default_create */
extern T0* T1258c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T987f37(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T1255f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge821os19571;
extern T0* ge821ov19571;
extern T0* T304f17(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T988c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T987c36(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T987f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1255c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1255f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1357c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T987f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1257c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T987f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T987f43(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T987f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T987f31(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T987f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T987f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T987f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T684f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T1140c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T682c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T684c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T987f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1254f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T1356c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T1250c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1254c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T984f47(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1252f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T304f19(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T984c46(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T984f56(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1252c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1252f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1355c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T984f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1249c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T984f68(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T984f63(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T984f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T984f43(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T984f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T984f73(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T984f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T984f71(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T304f26p1(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.unknown_class */
extern T0* T304f20(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T308c11(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1008c8(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1286c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1286f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1399c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1399f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1475c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1475f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1497c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1399f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1477c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1399f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1399f42(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1399f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1399f26(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1399f22(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1399f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1399f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T568f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T1102c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T563c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T568c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1399f57(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1287c15(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1287f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1400c7(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1008f8p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T1007c6(T0* a1);
/* ET_PARENT_CHECKER1.make */
extern void T1007f6p1(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_map */
extern T0* T1006c41(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_with_equality_testers */
extern void T1006f45(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1284c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER_32].new_cursor */
extern T0* T1284f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1398c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_cursor */
extern T0* T1006f38(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].make */
extern T0* T1010c6(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_sparse_container */
extern void T1006f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].unset_found_item */
extern void T1006f47(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_slots */
extern void T1006f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].special_integer_ */
extern T0* T1006f32(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_modulus */
extern T6 T1006f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_clashes */
extern void T1006f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_key_storage */
extern void T1006f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].make_item_storage */
extern void T1006f63(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1005c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1005f17(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1282c37(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1282f43(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].make */
extern T0* T1395c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1395f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1472c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1282f34(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1397c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1282f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1282f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1282f62(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1282f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1282f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1282f61(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1282f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1282f59(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T308f11p1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.unknown_class */
extern T0* T308f8(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T307c4(T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern void T307f4p1(T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.unknown_class */
extern T0* T307f3(T0* C);
/* ET_XACE_UNIVERSE.activate_processors */
extern void T53f166(T0* C);
/* ET_SYSTEM.compile_all */
extern void T58f64(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T153f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T154f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T154f72(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T153f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T154f71(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T153f9(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T161f7(T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T159f7(T0* C, T6 a1);
/* ET_CLASS.is_deferred */
extern T1 T60f81(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T60f80(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T179f13(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T153f4(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T154f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T153f5(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T154f34(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T153f7(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T154f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T154f40(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T154f39(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T154f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T153c6(T0* a1);
/* ET_LACE_UNIVERSE.compile_degree_3 */
extern void T56f166(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T306f18(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T306f17(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.compile_degree_3 */
extern void T53f170(T0* C);
/* ET_LACE_UNIVERSE.compile_degree_4 */
extern void T56f165(T0* C);
/* ET_XACE_UNIVERSE.compile_degree_4 */
extern void T53f169(T0* C);
/* ET_LACE_UNIVERSE.parse_all */
extern void T56f163(T0* C);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T171f908(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T171f912(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T171f918(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T171f917(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T171f916(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T171f921(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T171f933(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T171f932(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T171f931(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T171f950(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T171f1714(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T171f1723(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T433f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T433f15(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T433f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T433f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T171f1713(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T171f1712(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T171f1711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T171f1710(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T521f36(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T520f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T277f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T171f1709(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T521f35(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T520f35(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T171f1708(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T171f1707(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T171f1706(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T171f1705(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T171f1704(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T171f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T171f1702(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T171f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T171f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T171f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T171f1698(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T171f1697(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T171f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T171f1695(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T171f1694(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T476f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].resized_area */
extern T0* T475f2(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].copy_data */
extern void T475f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHARACTER_CONSTANT].move_data */
extern void T475f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].overlapping_move */
extern void T475f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].non_overlapping_move */
extern void T475f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T475c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T476f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T1080c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T476c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T171f1693(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T171f1692(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T489f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].resized_area */
extern T0* T488f2(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].copy_data */
extern void T488f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING].move_data */
extern void T488f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].overlapping_move */
extern void T488f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].non_overlapping_move */
extern void T488f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T488c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T489f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T1085c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T489c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T171f1691(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T171f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T171f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T171f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T171f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T171f1686(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T171f1685(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T171f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T171f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T171f1682(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T171f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T171f1680(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T171f1679(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T171f1678(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T171f1677(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T171f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T171f1675(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T171f1674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T171f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T171f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T171f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T171f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T171f1669(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T846f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].resized_area */
extern T0* T842f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].copy_data */
extern void T842f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].move_data */
extern void T842f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].overlapping_move */
extern void T842f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].non_overlapping_move */
extern void T842f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T842c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T846f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T1194c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T846c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T277f309(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T847c9(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge777os13983;
extern T0* ge777ov13983;
extern T0* T170f871(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T510c11(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T510f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T510f7(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge777os13985;
extern T0* ge777ov13985;
extern T0* T170f695(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T460c66(void);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge777os13980;
extern T0* ge777ov13980;
extern T0* T170f694(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T460c65(void);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T847f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T171f1668(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T171f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T171f1666(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T845f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].resized_area */
extern T0* T844f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].copy_data */
extern void T844f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].move_data */
extern void T844f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].overlapping_move */
extern void T844f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].non_overlapping_move */
extern void T844f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T844c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T845f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T1193c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T845c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T171f1724(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T433f12(T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T277f308(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T171f1665(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T828f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T171f1664(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T841f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].resized_area */
extern T0* T829f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].copy_data */
extern void T829f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].move_data */
extern void T829f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].overlapping_move */
extern void T829f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].non_overlapping_move */
extern void T829f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T829c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T841f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T1192c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T841c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T277f307(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T828c11(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T828f11p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge508os6602;
extern T0* ge508ov6602;
extern T0* T828f6(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T828f5(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T171f836(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T171f858(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T437f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T171f1663(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T171f1662(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T171f1727(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T437f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T437f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T462f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].resized_area */
extern T0* T461f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].copy_data */
extern void T461f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL].move_data */
extern void T461f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].overlapping_move */
extern void T461f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].non_overlapping_move */
extern void T461f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T437f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T437f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T171f1661(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T171f1721(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T171f1726(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T437f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T171f1660(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T171f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T171f1658(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T840f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].resized_area */
extern T0* T831f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].copy_data */
extern void T831f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_TARGET].move_data */
extern void T831f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].overlapping_move */
extern void T831f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].non_overlapping_move */
extern void T831f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T831c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T840f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T1191c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T840c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T277f300(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T832c8(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T832f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T171f1657(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T171f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T171f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T171f1654(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T171f847(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T129f109(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T657f6(T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T129f35(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T971f5(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T696f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T971f6(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T696f6(T0* C);
/* ET_EIFFEL_PARSER.last_local_variables */
extern T0* T171f877(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T435f6(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T435f5(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T236f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_formal_arguments */
extern T0* T171f876(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T434f6(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T434f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T171f1653(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T834f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].resized_area */
extern T0* T812f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].copy_data */
extern void T812f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_AGENT].move_data */
extern void T812f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].overlapping_move */
extern void T812f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].non_overlapping_move */
extern void T812f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T434f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T171f1652(T0* C);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T277f306(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T839f33(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T839f32(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T839f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T839f30(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T839c29(T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T839f34(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T839f11(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T839f35(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1180c5(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge777os13991;
extern T0* ge777ov13991;
extern T0* T170f868(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T454c13(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T454f15(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T454f16(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T454f7(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T277f168(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T171f1651(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T171f1650(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T435f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T171f1649(T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T277f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T838f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T838f35(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T838f34(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T838f33(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T838f32(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T838f31(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T838c30(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T838f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T838f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T171f1648(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T171f1647(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T171f1646(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T171f1645(T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T277f304(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T837f36(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T837f35(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T837f34(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T837f33(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T837f32(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T837f31(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T837c30(T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T837f12(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T837f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T171f1644(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T171f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T171f1642(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T171f1641(T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T277f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T836f34(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T836f33(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T836f32(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T836f31(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T836c30(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T836f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T836f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T836f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T277f161(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T171f1640(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T171f1639(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T171f1638(T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T277f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T835f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T835f36(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T835f35(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T835f34(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T835f33(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T835f32(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T835c31(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T835f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T835f38(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T171f1637(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T171f1636(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T171f1635(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T171f1634(T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T277f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T833f37(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T833f36(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T833f35(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T833f34(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T833f33(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T833f32(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T833c31(T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T833f14(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T833f38(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T171f1633(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T171f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T171f1631(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T830f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].resized_area */
extern T0* T810f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].copy_data */
extern void T810f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_AGENT].move_data */
extern void T810f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].overlapping_move */
extern void T810f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].non_overlapping_move */
extern void T810f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T810c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T830f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T1189c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T830c3(void);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T277f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T809f27(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T809c26(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T809f9(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T809c25(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T171f1630(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T171f1629(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T171f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T171f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T171f1626(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T171f1625(T0* C);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T277f251(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T171f1624(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T171f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T171f1622(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T171f1621(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T171f1620(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T171f1619(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T171f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T171f1617(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T816f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T171f1616(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T826f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].resized_area */
extern T0* T817f3(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].copy_data */
extern void T817f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STRIP_EXPRESSION].move_data */
extern void T817f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].overlapping_move */
extern void T817f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].non_overlapping_move */
extern void T817f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T817c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T826f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T1186c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T826c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T277f298(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T816f24(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T816c22(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T816f22p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T623f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T1120c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T575c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge800os6602;
extern T0* ge800ov6602;
extern T0* T816f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T623c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge777os14043;
extern T0* ge777ov14043;
extern T0* T170f870(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T179c31(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T816f8(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T171f835(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T436f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T171f1615(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T171f1614(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T171f1722(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T436f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T436f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T453f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].resized_area */
extern T0* T452f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].copy_data */
extern void T452f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD].move_data */
extern void T452f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].overlapping_move */
extern void T452f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].non_overlapping_move */
extern void T452f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T436f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T436f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T171f1613(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T171f1720(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T436f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T171f1612(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T171f1611(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T171f1610(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T825f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].resized_area */
extern T0* T558f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].copy_data */
extern void T558f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_TUPLE].move_data */
extern void T558f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].overlapping_move */
extern void T558f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].non_overlapping_move */
extern void T558f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T558c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T825f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T1185c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T825c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T277f297(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T205f27(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T171f1609(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T171f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T171f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T171f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T171f1605(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T814f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T171f1604(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T824f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].resized_area */
extern T0* T815f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].copy_data */
extern void T815f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_ARRAY].move_data */
extern void T815f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].overlapping_move */
extern void T815f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].non_overlapping_move */
extern void T815f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T815c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T824f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T1184c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T824c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T277f296(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T814f23(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T814c21(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T814f21p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T814f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge777os13984;
extern T0* ge777ov13984;
extern T0* T170f697(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T460c68(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge777os13979;
extern T0* ge777ov13979;
extern T0* T170f869(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T460c56(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T814f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T171f1603(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T171f1602(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T171f1601(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T171f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T171f1599(T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T277f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T823c16(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T823f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T171f1598(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T822f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].resized_area */
extern T0* T793f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].copy_data */
extern void T793f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].move_data */
extern void T793f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].overlapping_move */
extern void T793f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].non_overlapping_move */
extern void T793f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T793c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T822f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T1183c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T822c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T277f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T792f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T792c16(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T792f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T171f1597(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T818f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T171f1596(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T821f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].resized_area */
extern T0* T819f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].copy_data */
extern void T819f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].move_data */
extern void T819f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].overlapping_move */
extern void T819f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].non_overlapping_move */
extern void T819f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T819c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T821f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T1182c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T821c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T277f293(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T818c11(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T818f5(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T818f11p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T818f11p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T818f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T171f1595(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T171f1594(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T820f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].resized_area */
extern T0* T729f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].copy_data */
extern void T729f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_EXPRESSION].move_data */
extern void T729f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].overlapping_move */
extern void T729f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].non_overlapping_move */
extern void T729f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T729c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T820f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T1181c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T820c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T171f1593(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T277f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T728c17(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T171f1592(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T171f1591(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T171f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T171f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T171f1588(T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T171f825(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.register_inline_constant */
extern void T56f195(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T813f20(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.register_inline_constant */
extern void T53f203(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T277f331(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T813f19(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T813c18(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge777os14030;
extern T0* ge777ov14030;
extern T0* T170f741(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T179c26(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T813f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T171f1587(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T171f1586(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T171f1585(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T171f1584(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T171f1583(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T171f1582(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T171f1581(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T171f1580(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T171f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T171f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T171f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T171f1576(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T171f1575(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T171f1574(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T171f1573(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T171f1572(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T171f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T171f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T171f1569(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T277f291(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T808f16(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T808c15(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge777os14029;
extern T0* ge777ov14029;
extern T0* T170f867(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T179c29(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T808f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T171f1568(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T277f289(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T807c17(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T277f290(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T479f52(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T479f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T171f1567(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T171f949(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T171f1566(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T171f822(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T277f330(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T498f74(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T498f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T171f1565(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T171f821(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T277f329(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T498f73(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T171f1564(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T171f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T171f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T171f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T171f1560(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T277f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T806c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T171f1559(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T171f1558(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T277f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T802c16(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T171f1557(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T277f287(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T805f33(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T805c32(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge777os14008;
extern T0* ge777ov14008;
extern T0* T170f706(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T179c43(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge777os14031;
extern T0* ge777ov14031;
extern T0* T170f866(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T485c47(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T485f53(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T485f54(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T485f7(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T805f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T171f1556(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T277f286(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T804f33(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T804c32(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge777os14044;
extern T0* ge777ov14044;
extern T0* T170f709(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T179c46(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge777os13992;
extern T0* ge777ov13992;
extern T0* T170f865(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T485c49(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T804f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T171f1555(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T171f1554(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T171f1553(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T171f1552(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T171f1551(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T171f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T171f1549(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T171f1548(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T171f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T171f1546(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T171f1545(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T171f1544(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T171f1543(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T277f285(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T498f72(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T171f1542(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T277f284(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T498f71(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T171f1541(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T277f282(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T479f51(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T171f1540(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T171f1539(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T171f1538(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T801f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].resized_area */
extern T0* T730f3(T0* C, T6 a1);
/* SPECIAL [ET_WRITABLE].copy_data */
extern void T730f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WRITABLE].move_data */
extern void T730f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].overlapping_move */
extern void T730f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].non_overlapping_move */
extern void T730f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T730c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T801f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T1179c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T801c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T171f1537(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T171f818(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T971f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T696f8(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T657f7(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T657f10(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T171f1536(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T277f281(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T800f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T800c15(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge777os13976;
extern T0* ge777ov13976;
extern T0* T170f864(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T460c54(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T800f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T171f1535(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T277f280(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T799f16(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T799c15(void);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T799f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T171f1534(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T277f279(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T798f16(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T798c15(void);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T798f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T171f1533(T0* C);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T277f278(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T797f16(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T797c15(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T797f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T171f1532(T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T277f277(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T171f1531(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T171f1530(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T794f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].resized_area */
extern T0* T745f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].copy_data */
extern void T745f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].move_data */
extern void T745f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].overlapping_move */
extern void T745f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].non_overlapping_move */
extern void T745f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T745c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T794f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T1177c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T794c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T277f276(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T171f1529(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T171f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T171f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T171f1526(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T171f1525(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T171f1524(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T277f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T171f1523(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T171f1522(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T171f1735(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge252os1735;
extern T0* ge252ov1735;
extern T0* T171f681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T171f1521(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T171f1520(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T171f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T171f1518(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T171f1517(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T171f805(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T970f10(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T242f9(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T171f1516(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T277f275(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T791f20(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T791f19(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T791c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge777os14032;
extern T0* ge777ov14032;
extern T0* T170f863(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T457c18(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T457f20(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T457f21(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T457f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T791f10(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T277f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T171f1515(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T171f1514(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T790f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].resized_area */
extern T0* T777f3(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].copy_data */
extern void T777f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].move_data */
extern void T777f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].overlapping_move */
extern void T777f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].non_overlapping_move */
extern void T777f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T777c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T790f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T1176c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T790c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T277f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T776f24(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T776c23(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T776f25(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T171f1513(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T171f1512(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T171f1511(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T171f1510(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T171f1509(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T727f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].resized_area */
extern T0* T723f3(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].copy_data */
extern void T723f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSTRUCTION].move_data */
extern void T723f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].overlapping_move */
extern void T723f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].non_overlapping_move */
extern void T723f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T723c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T727f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T1157c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T727c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T277f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T787f9(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T787c8(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T787f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T171f1508(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T171f1507(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T277f270(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T785f10(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T785f9(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T785c8(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T785f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T171f1506(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T171f1505(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T277f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T171f1504(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T171f804(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T129f108(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T171f1503(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T784f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].resized_area */
extern T0* T783f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].copy_data */
extern void T783f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].move_data */
extern void T783f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].overlapping_move */
extern void T783f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].non_overlapping_move */
extern void T783f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T783c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T784f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T1173c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T784c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T277f268(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T171f1502(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T778f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T171f1501(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T781f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].resized_area */
extern T0* T779f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].copy_data */
extern void T779f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_LIST].move_data */
extern void T779f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].overlapping_move */
extern void T779f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].non_overlapping_move */
extern void T779f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T779c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T781f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T1172c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T781c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T277f267(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T778c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T778f5(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T778f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge652os6602;
extern T0* ge652ov6602;
extern T0* T778f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T171f1500(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T171f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T171f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T171f1497(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T171f1496(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T780f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].resized_area */
extern T0* T740f3(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].copy_data */
extern void T740f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DEBUG_INSTRUCTION].move_data */
extern void T740f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].overlapping_move */
extern void T740f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].non_overlapping_move */
extern void T740f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T740c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T780f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T1171c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T780c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T277f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T739c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T739f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T277f265(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge777os14005;
extern T0* ge777ov14005;
extern T0* T170f713(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T179c50(void);
/* ET_AST_FACTORY.tokens */
extern T0* T277f332(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T659f9(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T659c10(void);
/* ET_COMPOUND.make */
extern void T659f10p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge777os14007;
extern T0* ge777ov14007;
extern T0* T170f703(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T179c40(void);
/* ET_COMPOUND.tokens */
extern T0* T659f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T171f1495(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T277f236(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T659c7(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T659f7p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge739os6602;
extern T0* ge739ov6602;
extern T0* T659f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T171f1494(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T775f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].resized_area */
extern T0* T772f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].copy_data */
extern void T772f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_CONSTANT].move_data */
extern void T772f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].overlapping_move */
extern void T772f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].non_overlapping_move */
extern void T772f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T772c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T775f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T1169c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T775c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T171f1493(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T171f1492(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T171f1491(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T171f1490(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T171f1489(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T773f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].resized_area */
extern T0* T767f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].copy_data */
extern void T767f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE].move_data */
extern void T767f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].overlapping_move */
extern void T767f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].non_overlapping_move */
extern void T767f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].make */
extern T0* T767c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T773f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T1168c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T773c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T277f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T774c7(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge777os13978;
extern T0* ge777ov13978;
extern T0* T170f699(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T460c70(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T774f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T171f1488(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T171f1487(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T770f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].resized_area */
extern T0* T769f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].copy_data */
extern void T769f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_ITEM].move_data */
extern void T769f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].overlapping_move */
extern void T769f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].non_overlapping_move */
extern void T769f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T769c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T770f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T1167c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T770c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T277f263(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T171f1486(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T762f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T171f1485(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T765f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].resized_area */
extern T0* T763f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].copy_data */
extern void T763f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_LIST].move_data */
extern void T763f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].overlapping_move */
extern void T763f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].non_overlapping_move */
extern void T763f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T763c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T765f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T1166c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T765c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T277f262(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T762f10(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T762c8(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T762f8p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge737os6602;
extern T0* ge737ov6602;
extern T0* T762f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge777os14052;
extern T0* ge777ov14052;
extern T0* T170f710(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T179c47(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T762f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T171f1484(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T171f1483(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T171f1482(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T171f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T171f1480(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T764f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].resized_area */
extern T0* T761f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].copy_data */
extern void T761f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART].move_data */
extern void T761f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].overlapping_move */
extern void T761f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].non_overlapping_move */
extern void T761f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T761c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T764f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T1165c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T764c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T277f261(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T760c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T171f1479(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T756f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T171f1478(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T759f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].resized_area */
extern T0* T757f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].copy_data */
extern void T757f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART_LIST].move_data */
extern void T757f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].overlapping_move */
extern void T757f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].non_overlapping_move */
extern void T757f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T757c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T759f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T1163c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T759c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T277f260(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T756c5(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge760os6602;
extern T0* ge760ov6602;
extern T0* T756f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T171f1477(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T171f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T171f1475(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T758f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].resized_area */
extern T0* T736f3(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].copy_data */
extern void T736f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSPECT_INSTRUCTION].move_data */
extern void T736f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].overlapping_move */
extern void T736f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].non_overlapping_move */
extern void T736f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T736c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T758f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T1162c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T758c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T277f259(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T735f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T735c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T735f5(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T277f247(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T973c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T179f12(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T179f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T171f1474(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T171f1473(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T755f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].resized_area */
extern T0* T753f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].copy_data */
extern void T753f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART].move_data */
extern void T753f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].overlapping_move */
extern void T753f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].non_overlapping_move */
extern void T753f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T753c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T755f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T1161c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T755c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T277f258(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T752c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T171f1472(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T749f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T171f1471(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T754f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].resized_area */
extern T0* T751f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].copy_data */
extern void T751f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART_LIST].move_data */
extern void T751f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].overlapping_move */
extern void T751f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].non_overlapping_move */
extern void T751f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T751c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T754f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T1160c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T754c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T277f257(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T749c5(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge744os6602;
extern T0* ge744ov6602;
extern T0* T749f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T171f1470(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T171f1469(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T750f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].resized_area */
extern T0* T734f3(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].copy_data */
extern void T734f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IF_INSTRUCTION].move_data */
extern void T734f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].overlapping_move */
extern void T734f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].non_overlapping_move */
extern void T734f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T734c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T750f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T1159c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T750c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T277f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T733f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T733f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T733c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T733f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T171f1468(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T171f1467(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T171f1466(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T171f1465(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T748f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].resized_area */
extern T0* T556f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].copy_data */
extern void T556f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATE_EXPRESSION].move_data */
extern void T556f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].overlapping_move */
extern void T556f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].non_overlapping_move */
extern void T556f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T556c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T748f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T1158c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T748c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T277f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T555f19(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T555c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge777os14002;
extern T0* ge777ov14002;
extern T0* T170f718(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T179c55(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T555f5(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T277f252(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T744c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T171f1464(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T171f1463(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T277f254(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T747f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T747c11(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T747f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T171f1462(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T171f1461(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T171f1460(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T171f1459(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T277f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T743f12(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T743c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge777os13973;
extern T0* ge777ov13973;
extern T0* T170f693(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T460c64(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T743f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T171f1458(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T171f1457(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T171f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T171f1455(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T277f249(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T171f1454(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T171f1453(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T171f763(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T438f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T438f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T438f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1065f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T1065f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T741f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T438f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T277f328(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T741f11(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T741c9(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T741f9p1(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge532os6602;
extern T0* ge532ov6602;
extern T0* T741f6(T0* C);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge777os13999;
extern T0* ge777ov13999;
extern T0* T170f712(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T179c49(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T741f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T171f1452(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T171f1451(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T171f1450(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T277f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T738f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T738f10(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T738c9(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T738f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T171f1449(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T171f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T171f1447(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T277f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T732c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge777os13972;
extern T0* ge777ov13972;
extern T0* T170f701(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T460c72(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T732f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T171f1446(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T277f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T731c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge777os13971;
extern T0* ge777ov13971;
extern T0* T170f700(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T460c71(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T731f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T171f1445(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T277f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T725c14(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge727os23635;
extern T0* ge727ov23635;
extern T0* T725f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T725f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T171f1444(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T171f1443(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T171f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T171f1441(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T171f1440(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T711f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].resized_area */
extern T0* T660f3(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].copy_data */
extern void T660f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_COMPOUND].move_data */
extern void T660f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].overlapping_move */
extern void T660f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].non_overlapping_move */
extern void T660f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T660c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T711f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T1152c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T711c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T171f1439(T0* C);
/* ET_COMPOUND.put_first */
extern void T659f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T171f1438(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T171f1437(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T277f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge777os14027;
extern T0* ge777ov14027;
extern T0* T170f708(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T179c45(void);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T171f1436(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T171f1435(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T277f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge777os14016;
extern T0* ge777ov14016;
extern T0* T170f707(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T179c44(void);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T171f1434(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T171f1433(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T277f241(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge777os14039;
extern T0* ge777ov14039;
extern T0* T170f724(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T179c61(void);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T171f1432(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T171f1431(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T277f240(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T171f1430(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T171f1429(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T277f239(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T171f1428(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T171f1427(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T277f238(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T171f1426(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T171f1425(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T277f237(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T171f1424(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T171f1423(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T720f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].resized_area */
extern T0* T581f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].copy_data */
extern void T581f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_TYPE].move_data */
extern void T581f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].overlapping_move */
extern void T581f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].non_overlapping_move */
extern void T581f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T581c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T720f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T1156c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T720c3(void);
/* ET_AST_FACTORY.new_like_current */
extern T0* T277f235(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T721f60(T0* C, T0* a1);
/* ET_LIKE_CURRENT.make */
extern T0* T721c59(void);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge777os14025;
extern T0* ge777ov14025;
extern T0* T170f862(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T179c30(void);
/* ET_LIKE_CURRENT.tokens */
extern T0* T721f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T171f1422(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T277f234(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T719f65(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T719c64(T0* a1);
/* ET_LIKE_FEATURE.tokens */
extern T0* T719f36(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T171f1421(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T716f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T714f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T714f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].move_data */
extern void T714f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T714f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T714f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T277f233(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T277f230(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T717c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T171f1420(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T171f1419(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T171f1738(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T277f232(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T972c8(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T173f15(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T277f231(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T173f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T171f1418(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T171f1417(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T171f1416(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T171f1415(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T171f1414(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T713f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T593f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].copy_data */
extern void T593f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].move_data */
extern void T593f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T593f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T593f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T593c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T713f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1154c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T713c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T277f228(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T173f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T171f1413(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T171f1412(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T171f1411(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T171f1410(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T171f1409(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T171f1408(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T277f229(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T171f1407(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T171f1406(T0* C);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T277f227(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T181f90(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T171f1405(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T171f744(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T277f317(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make */
extern T0* T172c94(T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T277f316(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.set_in_system */
extern void T60f182(T0* C, T1 a1);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T440f43(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T440f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T440f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T440f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T440f21(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T60f79(T0* C);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T440f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T440f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T440f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T440f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T440f33(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T440f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T440f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T440f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T440f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T440f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T440f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T440f32(T0* C);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T277f327(T0* C, T0* a1, T6 a2);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T961c57(T0* a1, T6 a2);
/* ET_CLASS.formal_parameter */
extern T0* T60f70(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T430f16(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T570f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T562f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T171f1404(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T171f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T171f1402(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T171f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T171f1400(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T171f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T171f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T171f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T171f1396(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T712f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].resized_area */
extern T0* T640f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].copy_data */
extern void T640f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE].move_data */
extern void T640f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].overlapping_move */
extern void T640f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].non_overlapping_move */
extern void T640f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T171f1395(T0* C);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T277f128(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T583f98(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T583c97(T0* a1);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge777os13998;
extern T0* ge777ov13998;
extern T0* T170f850(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T583f38(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T171f1394(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T171f602(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T57f197(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_ve_reported */
extern void T926f621(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T926f620(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T926f618(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T926c619(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T57f27(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T28f197(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T28f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T57f196(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T926c617(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T28f196(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T171f1716(T0* C, T0* a1);
/* ET_CLASS.set_syntax_error */
extern void T60f170(T0* C);
/* ET_CLASS.set_parsed */
extern void T60f169(T0* C);
/* ET_BIT_N.has_size_error */
extern T1 T582f5(T0* C);
/* ET_BIT_N.compute_size */
extern void T582f97(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T277f315(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.set_bit_keyword */
extern void T582f98(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T582c96(T0* a1);
/* ET_BIT_N.tokens */
extern T0* T582f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T171f1393(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T171f1392(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T171f1391(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T171f1390(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T171f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T171f1388(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T171f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T171f1386(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T171f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T171f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T171f1383(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T171f1382(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T171f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T171f1380(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T171f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T171f1378(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T171f1377(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T171f1376(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T710f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].resized_area */
extern T0* T709f2(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].copy_data */
extern void T709f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VARIANT].move_data */
extern void T709f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].overlapping_move */
extern void T709f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].non_overlapping_move */
extern void T709f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].make */
extern T0* T709c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T710f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T1151c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T710c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T277f226(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T708f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T708c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge777os14050;
extern T0* ge777ov14050;
extern T0* T170f730(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T179c67(void);
/* ET_VARIANT.tokens */
extern T0* T708f4(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T277f117(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T171f1375(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T171f1374(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T171f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T171f1372(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T707f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].resized_area */
extern T0* T706f2(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].copy_data */
extern void T706f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOOP_INVARIANTS].move_data */
extern void T706f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].overlapping_move */
extern void T706f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].non_overlapping_move */
extern void T706f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T706c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T707f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T1150c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T707c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T171f738(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T705f9(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T277f326(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T705f10(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T705c8(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T705f8p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T705f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge777os14023;
extern T0* ge777ov14023;
extern T0* T170f739(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T179c76(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T705f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T171f1371(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T171f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T171f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T171f1368(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T704f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].resized_area */
extern T0* T539f3(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].copy_data */
extern void T539f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INVARIANTS].move_data */
extern void T539f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].overlapping_move */
extern void T539f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].non_overlapping_move */
extern void T539f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T539c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T704f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T1149c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T704c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T171f734(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T538f22(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T277f325(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T538f23(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T538c21(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T538f24(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T538f10(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T538f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T171f1367(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T171f948(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T171f1366(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T171f1365(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T171f1364(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T703f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].resized_area */
extern T0* T662f3(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].copy_data */
extern void T662f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSTCONDITIONS].move_data */
extern void T662f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].overlapping_move */
extern void T662f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].non_overlapping_move */
extern void T662f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T662c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T703f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T1148c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T703c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T171f731(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T661f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T277f324(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T661f16(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T661f15(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T661c13(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T661f13p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T661f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge777os14011;
extern T0* ge777ov14011;
extern T0* T170f853(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T179c32(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T661f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T171f1363(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T171f1362(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T171f1361(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T171f1360(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T171f1359(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T702f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].resized_area */
extern T0* T656f3(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].copy_data */
extern void T656f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECONDITIONS].move_data */
extern void T656f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].overlapping_move */
extern void T656f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].non_overlapping_move */
extern void T656f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T656c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T702f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T1147c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T702c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T171f728(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T655f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T277f323(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T655f16(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T655f15(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T655c13(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T655f13p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T655f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge777os14038;
extern T0* ge777ov14038;
extern T0* T170f852(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T179c35(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T655f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T171f1358(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T171f1357(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T171f1356(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T171f1355(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T171f1354(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T171f1737(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T438f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T438f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T1064f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].resized_area */
extern T0* T1063f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].copy_data */
extern void T1063f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSERTION_ITEM].move_data */
extern void T1063f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].overlapping_move */
extern void T1063f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].non_overlapping_move */
extern void T1063f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T438f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T438f10(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T277f310(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T277f311(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T849c5(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T171f1353(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T171f1352(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T171f1736(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T438f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T438f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T438f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T849f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T438f8(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T438f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T171f1351(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T171f1350(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T171f1349(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T171f1348(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T171f1347(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T171f1346(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T700f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].resized_area */
extern T0* T695f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].copy_data */
extern void T695f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].move_data */
extern void T695f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].overlapping_move */
extern void T695f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].non_overlapping_move */
extern void T695f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T695c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T700f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T1146c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T700c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T277f225(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T277f224(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T696c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T171f1345(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T171f1344(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T699f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].resized_area */
extern T0* T697f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].copy_data */
extern void T697f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE].move_data */
extern void T697f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].overlapping_move */
extern void T697f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].non_overlapping_move */
extern void T697f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T697c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T699f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T1145c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T699c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T277f223(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T971c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge966os15815;
extern T0* ge966ov15815;
extern T0* T171f711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T171f1343(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T277f222(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T171f1342(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T657f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T171f1341(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T171f1340(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T971f8(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T971f4(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T696f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T657f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T657f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T171f1339(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T171f1338(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T693f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].resized_area */
extern T0* T658f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].copy_data */
extern void T658f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].move_data */
extern void T658f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].overlapping_move */
extern void T658f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].non_overlapping_move */
extern void T658f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T171f718(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T435f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T435f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T435f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T435f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T277f322(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T657f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T657c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T657f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge709os6602;
extern T0* ge709ov6602;
extern T0* T657f5(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge777os14026;
extern T0* ge777ov14026;
extern T0* T170f715(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T179c52(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T657f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T171f1337(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T171f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T171f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T171f1334(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T171f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T171f1332(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T692f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].resized_area */
extern T0* T688f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].copy_data */
extern void T688f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].move_data */
extern void T688f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].overlapping_move */
extern void T688f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].non_overlapping_move */
extern void T688f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T688c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T692f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T1143c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T692c3(void);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T277f221(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T277f220(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T242c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T171f1331(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T171f1330(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T691f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].resized_area */
extern T0* T689f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].copy_data */
extern void T689f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT].move_data */
extern void T689f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].overlapping_move */
extern void T689f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].non_overlapping_move */
extern void T689f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T689c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T691f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T1142c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T691c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T277f219(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T970c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T171f1329(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T277f218(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T171f1328(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T236f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T171f1327(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T171f1326(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T970f9(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T236f10(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T236f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T171f1325(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T171f1324(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T686f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].resized_area */
extern T0* T664f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].copy_data */
extern void T664f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].move_data */
extern void T664f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].overlapping_move */
extern void T664f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].non_overlapping_move */
extern void T664f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T171f706(T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T434f12(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T434f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T434f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T434f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T277f321(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T236c13(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T236f13p1(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge698os6602;
extern T0* ge698ov6602;
extern T0* T236f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T236f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T171f1323(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T171f1322(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T171f1321(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T171f1320(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T171f1319(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T684f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].resized_area */
extern T0* T682f3(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].copy_data */
extern void T682f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ALIAS_NAME].move_data */
extern void T682f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].overlapping_move */
extern void T682f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].non_overlapping_move */
extern void T682f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T171f705(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T171f875(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T277f216(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T685f45(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T685c44(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T26f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T685f7(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T685f37(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge782os22986;
extern T0* ge782ov22986;
extern T0* T685f6(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge777os13993;
extern T0* ge777ov13993;
extern T0* T170f711(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T179c48(void);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T171f1318(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T277f217(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T681f62(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T681c81(T0* a1);
/* ET_ALIAS_NAME.tokens */
extern T0* T681f5(T0* C);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T681f59(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T171f1317(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T171f1316(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T277f215(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T681c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T171f1315(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T277f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T681c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T171f1314(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T277f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T681c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T171f1313(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T277f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T681c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T171f1312(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T277f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T681c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T171f1311(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T277f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T681c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T171f1310(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T277f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T681c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T171f1309(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T277f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T681c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T171f1308(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T277f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T681c72(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T171f1307(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T277f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T681c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T171f1306(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T277f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T681c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T171f1305(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T277f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T681c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T171f1304(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T277f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T681c68(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T171f1303(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T277f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T681c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T171f1302(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T277f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T681c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T171f1301(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T277f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T681c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T171f1300(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T277f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T681c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T171f1299(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T277f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T681c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T171f1298(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T277f197(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T681c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T171f1297(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T680f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].resized_area */
extern T0* T605f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].copy_data */
extern void T605f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].move_data */
extern void T605f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].overlapping_move */
extern void T605f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].non_overlapping_move */
extern void T605f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T605c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T680f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T1139c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T680c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T277f196(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T683c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T171f1296(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T171f1295(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T675f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].resized_area */
extern T0* T604f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].copy_data */
extern void T604f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME].move_data */
extern void T604f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].overlapping_move */
extern void T604f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].non_overlapping_move */
extern void T604f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T171f699(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T171f874(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T277f195(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T679f61(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T679c60(T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T679f7(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T679f33(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge809os22986;
extern T0* ge809ov22986;
extern T0* T679f6(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge777os14020;
extern T0* ge777ov14020;
extern T0* T170f714(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T179c51(void);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T171f1294(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T171f1293(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T171f698(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T171f873(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T277f177(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T677f61(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T677c60(T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T677f7(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T677f17(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge819os22986;
extern T0* ge819ov22986;
extern T0* T677f6(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge777os14033;
extern T0* ge777ov14033;
extern T0* T170f721(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T179c58(void);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T171f1292(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T171f1291(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T171f1290(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T171f1289(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T171f1288(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T171f1287(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T171f1286(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T171f1285(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T171f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T171f1283(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T171f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T171f1281(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T171f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T171f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T171f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T171f1277(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T171f1276(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T277f194(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T678f74(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T678c90(T0* a1);
/* ET_INFIX_NAME.tokens */
extern T0* T678f5(T0* C);
/* ET_INFIX_NAME.default_keyword */
extern T0* T678f17(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T171f1275(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T277f193(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T678c89(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T171f1274(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T277f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T678c88(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T171f1273(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T277f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T678c87(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T171f1272(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T277f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T678c86(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T171f1271(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T277f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T678c85(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T171f1270(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T277f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T678c84(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T171f1269(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T277f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T678c83(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T171f1268(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T277f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T678c82(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T171f1267(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T277f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T678c81(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T171f1266(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T277f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T678c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T171f1265(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T277f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T678c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T171f1264(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T277f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T678c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T171f1263(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T277f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T678c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T171f1262(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T277f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T678c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T171f1261(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T277f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T678c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T171f1260(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T277f178(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T678c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T171f1259(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T171f1258(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T277f176(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T676f60(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T676c62(T0* a1);
/* ET_PREFIX_NAME.tokens */
extern T0* T676f5(T0* C);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T676f14(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T171f1257(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T277f175(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T676c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T171f1256(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T277f174(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T676c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T171f1255(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T171f1254(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T674f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].resized_area */
extern T0* T651f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].copy_data */
extern void T651f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSIGNER].move_data */
extern void T651f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].overlapping_move */
extern void T651f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].non_overlapping_move */
extern void T651f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T651c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T674f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T1137c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T674c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T277f173(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T171f1253(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T171f1252(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T673f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].resized_area */
extern T0* T669f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].copy_data */
extern void T669f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTERNAL_ALIAS].move_data */
extern void T669f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].overlapping_move */
extern void T669f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].non_overlapping_move */
extern void T669f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T669c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T673f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T1136c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T673c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T277f172(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T171f1251(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T171f1250(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T171f1249(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T506f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].resized_area */
extern T0* T505f2(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].copy_data */
extern void T505f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SEMICOLON_SYMBOL].move_data */
extern void T505f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].overlapping_move */
extern void T505f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].non_overlapping_move */
extern void T505f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T505c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T506f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T1091c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T506c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T171f1248(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T171f1247(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T171f1246(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T670f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].resized_area */
extern T0* T648f3(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].copy_data */
extern void T648f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PROCEDURE].move_data */
extern void T648f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].overlapping_move */
extern void T648f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].non_overlapping_move */
extern void T648f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T171f691(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T171f1755(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T57f205(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T926c628(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T57f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T28f205(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T28f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T672f73(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T171f1806(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge777os13912;
extern T0* ge777ov13912;
extern T0* T170f491(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge777os13863;
extern T0* ge777ov13863;
extern T0* T170f679(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge777os13862;
extern T0* ge777ov13862;
extern T0* T170f677(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge777os13846;
extern T0* ge777ov13846;
extern T0* T170f675(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge777os13845;
extern T0* ge777ov13845;
extern T0* T170f673(T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge777os13949;
extern T0* ge777ov13949;
extern T0* T170f624(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge777os13957;
extern T0* ge777ov13957;
extern T0* T170f670(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge777os13956;
extern T0* ge777ov13956;
extern T0* T170f668(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge777os13955;
extern T0* ge777ov13955;
extern T0* T170f666(T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge777os13878;
extern T0* ge777ov13878;
extern T0* T170f614(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T514c31(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T514f33(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge777os13917;
extern T0* ge777ov13917;
extern T0* T170f654(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge777os13915;
extern T0* ge777ov13915;
extern T0* T170f612(T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge777os13884;
extern T0* ge777ov13884;
extern T0* T170f610(T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge777os13873;
extern T0* ge777ov13873;
extern T0* T170f604(T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge777os13885;
extern T0* ge777ov13885;
extern T0* T170f602(T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge777os13879;
extern T0* ge777ov13879;
extern T0* T170f600(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T57f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T926c629(T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [ET_TYPE].item */
extern T0* T963f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T57f32(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T28f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T28f32(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge777os13963;
extern T0* ge777ov13963;
extern T0* T170f413(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T170f458(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge777os13883;
extern T0* ge777ov13883;
extern T0* T170f487(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T171f1805(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge777os13939;
extern T0* ge777ov13939;
extern T0* T170f459(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T171f1804(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge777os13837;
extern T0* ge777ov13837;
extern T0* T170f652(T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge777os13841;
extern T0* ge777ov13841;
extern T0* T170f650(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge777os13840;
extern T0* ge777ov13840;
extern T0* T170f648(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge777os13839;
extern T0* ge777ov13839;
extern T0* T170f646(T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge777os13836;
extern T0* ge777ov13836;
extern T0* T170f644(T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge777os13838;
extern T0* ge777ov13838;
extern T0* T170f642(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge777os13835;
extern T0* ge777ov13835;
extern T0* T170f640(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge777os13834;
extern T0* ge777ov13834;
extern T0* T170f638(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge777os13833;
extern T0* ge777ov13833;
extern T0* T170f636(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge777os13832;
extern T0* ge777ov13832;
extern T0* T170f634(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge777os13831;
extern T0* ge777ov13831;
extern T0* T170f632(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge777os13830;
extern T0* ge777ov13830;
extern T0* T170f630(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge777os13829;
extern T0* ge777ov13829;
extern T0* T170f628(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge777os13828;
extern T0* ge777ov13828;
extern T0* T170f626(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge777os13954;
extern T0* ge777ov13954;
extern T0* T170f622(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge777os13953;
extern T0* ge777ov13953;
extern T0* T170f620(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge777os13951;
extern T0* ge777ov13951;
extern T0* T170f618(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge777os13948;
extern T0* ge777ov13948;
extern T0* T170f467(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge777os13947;
extern T0* ge777ov13947;
extern T0* T170f465(T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge777os13880;
extern T0* ge777ov13880;
extern T0* T170f608(T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge777os13872;
extern T0* ge777ov13872;
extern T0* T170f606(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T171f1803(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_tuple_procedure */
extern void T171f1802(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge777os13937;
extern T0* ge777ov13937;
extern T0* T170f50(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern unsigned char ge777os13935;
extern T0* ge777ov13935;
extern T0* T170f563(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern unsigned char ge777os13934;
extern T0* ge777ov13934;
extern T0* T170f561(T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern unsigned char ge777os13911;
extern T0* ge777ov13911;
extern T0* T170f558(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern unsigned char ge777os13910;
extern T0* ge777ov13910;
extern T0* T170f556(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern unsigned char ge777os13909;
extern T0* ge777ov13909;
extern T0* T170f554(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern unsigned char ge777os13907;
extern T0* ge777ov13907;
extern T0* T170f552(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern unsigned char ge777os13906;
extern T0* ge777ov13906;
extern T0* T170f550(T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern unsigned char ge777os13901;
extern T0* ge777ov13901;
extern T0* T170f548(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern unsigned char ge777os13890;
extern T0* ge777ov13890;
extern T0* T170f546(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern unsigned char ge777os13889;
extern T0* ge777ov13889;
extern T0* T170f544(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern unsigned char ge777os13888;
extern T0* ge777ov13888;
extern T0* T170f542(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern unsigned char ge777os13887;
extern T0* ge777ov13887;
extern T0* T170f540(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern unsigned char ge777os13848;
extern T0* ge777ov13848;
extern T0* T170f537(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern unsigned char ge777os13847;
extern T0* ge777ov13847;
extern T0* T170f535(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern unsigned char ge777os13843;
extern T0* ge777ov13843;
extern T0* T170f532(T0* C);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern unsigned char ge777os13940;
extern T0* ge777ov13940;
extern T0* T170f595(T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge777os13933;
extern T0* ge777ov13933;
extern T0* T170f48(T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern unsigned char ge777os13932;
extern T0* ge777ov13932;
extern T0* T170f592(T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern unsigned char ge777os13931;
extern T0* ge777ov13931;
extern T0* T170f590(T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern unsigned char ge777os13930;
extern T0* ge777ov13930;
extern T0* T170f588(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern unsigned char ge777os13929;
extern T0* ge777ov13929;
extern T0* T170f586(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern unsigned char ge777os13928;
extern T0* ge777ov13928;
extern T0* T170f584(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern unsigned char ge777os13927;
extern T0* ge777ov13927;
extern T0* T170f582(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern unsigned char ge777os13926;
extern T0* ge777ov13926;
extern T0* T170f580(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern unsigned char ge777os13925;
extern T0* ge777ov13925;
extern T0* T170f578(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern unsigned char ge777os13924;
extern T0* ge777ov13924;
extern T0* T170f576(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern unsigned char ge777os13923;
extern T0* ge777ov13923;
extern T0* T170f574(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern unsigned char ge777os13922;
extern T0* ge777ov13922;
extern T0* T170f572(T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern unsigned char ge777os13921;
extern T0* ge777ov13921;
extern T0* T170f570(T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern unsigned char ge777os13920;
extern T0* ge777ov13920;
extern T0* T170f568(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_tuple_feature */
extern T6 T170f534(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern unsigned char ge777os13919;
extern T0* ge777ov13919;
extern T0* T170f566(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T171f1801(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T171f1800(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge777os13966;
extern T0* ge777ov13966;
extern T0* T170f530(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter */
extern T0* T170f745(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1219f11(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1219f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1219f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1219f9(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].resize */
extern T0* T1350f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].resized_area */
extern T0* T1349f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].copy_data */
extern void T1349f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].move_data */
extern void T1349f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].overlapping_move */
extern void T1349f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].non_overlapping_move */
extern void T1349f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1349c4(T6 a1);
/* ET_TOKEN_CONSTANTS.formal_parameters */
extern unsigned char ge777os13968;
extern T0* ge777ov13968;
extern T0* T170f753(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1219c8(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1219f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1351c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1350f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE].make_area */
extern T0* T1455c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1350c3(void);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T171f1799(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge777os13962;
extern T0* ge777ov13962;
extern T0* T170f528(T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge777os13896;
extern T0* ge777ov13896;
extern T0* T170f526(T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge777os13936;
extern T0* ge777ov13936;
extern T0* T170f524(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge777os13913;
extern T0* ge777ov13913;
extern T0* T170f522(T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge777os13891;
extern T0* ge777ov13891;
extern T0* T170f520(T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge777os13849;
extern T0* ge777ov13849;
extern T0* T170f518(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge777os13842;
extern T0* ge777ov13842;
extern T0* T170f516(T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge777os13899;
extern T0* ge777ov13899;
extern T0* T170f514(T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge777os13898;
extern T0* ge777ov13898;
extern T0* T170f512(T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge777os13897;
extern T0* ge777ov13897;
extern T0* T170f510(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T170f509(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge777os13894;
extern T0* ge777ov13894;
extern T0* T170f507(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_identified_routines_procedure */
extern void T171f1798(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern unsigned char ge777os13858;
extern T0* ge777ov13858;
extern T0* T170f503(T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern unsigned char ge777os13857;
extern T0* ge777ov13857;
extern T0* T170f500(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_identified_feature */
extern T6 T170f502(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern unsigned char ge777os13859;
extern T0* ge777ov13859;
extern T0* T170f505(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T171f1797(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge777os13827;
extern T0* ge777ov13827;
extern T0* T170f498(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T170f497(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge777os13826;
extern T0* ge777ov13826;
extern T0* T170f495(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T171f1796(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge777os13868;
extern T0* ge777ov13868;
extern T0* T170f493(T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge777os13950;
extern T0* ge777ov13950;
extern T0* T170f489(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T171f1795(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T171f1794(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge777os13886;
extern T0* ge777ov13886;
extern T0* T170f484(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge777os13916;
extern T0* ge777ov13916;
extern T0* T170f480(T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge777os13876;
extern T0* ge777ov13876;
extern T0* T170f482(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge777os13882;
extern T0* ge777ov13882;
extern T0* T170f478(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge777os13881;
extern T0* ge777ov13881;
extern T0* T170f476(T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge777os13870;
extern T0* ge777ov13870;
extern T0* T170f474(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T170f470(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge777os13869;
extern T0* ge777ov13869;
extern T0* T170f472(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T171f1793(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T171f1792(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge777os13908;
extern T0* ge777ov13908;
extern T0* T170f463(T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge777os13851;
extern T0* ge777ov13851;
extern T0* T170f461(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T171f1791(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T171f1790(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge777os13824;
extern T0* ge777ov13824;
extern T0* T170f452(T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge777os13860;
extern T0* ge777ov13860;
extern T0* T170f450(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge777os13965;
extern T0* ge777ov13965;
extern T0* T170f448(T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge777os13918;
extern T0* ge777ov13918;
extern T0* T170f47(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T170f447(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge777os13904;
extern T0* ge777ov13904;
extern T0* T170f454(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_type_procedure */
extern void T171f1789(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern unsigned char ge777os13959;
extern T0* ge777ov13959;
extern T0* T170f444(T0* C);
/* ET_TOKEN_CONSTANTS.name_feature_name */
extern unsigned char ge777os13905;
extern T0* ge777ov13905;
extern T0* T170f442(T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern unsigned char ge777os13867;
extern T0* ge777ov13867;
extern T0* T170f440(T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_feature_name */
extern unsigned char ge777os13866;
extern T0* ge777ov13866;
extern T0* T170f438(T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge777os13796;
extern T0* ge777ov13796;
extern T0* T170f80(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T170f437(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge777os13864;
extern T0* ge777ov13864;
extern T0* T170f422(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T171f1788(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge777os13855;
extern T0* ge777ov13855;
extern T0* T170f431(T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge777os13893;
extern T0* ge777ov13893;
extern T0* T170f429(T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge777os13944;
extern T0* ge777ov13944;
extern T0* T170f427(T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge777os13945;
extern T0* ge777ov13945;
extern T0* T170f425(T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge777os13865;
extern T0* ge777ov13865;
extern T0* T170f420(T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge777os13852;
extern T0* ge777ov13852;
extern T0* T170f418(T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge777os13938;
extern T0* ge777ov13938;
extern T0* T170f416(T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge777os13943;
extern T0* ge777ov13943;
extern T0* T170f414(T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge777os13958;
extern T0* ge777ov13958;
extern T0* T170f410(T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge777os13853;
extern T0* ge777ov13853;
extern T0* T170f185(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T170f412(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge777os13942;
extern T0* ge777ov13942;
extern T0* T170f433(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T277f320(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T672f80(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T672f78(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T672f77(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T672f76(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T672f75(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T672f74(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge777os14024;
extern T0* ge777ov14024;
extern T0* T170f705(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T179c42(void);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T672c72(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T672f32(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T171f1245(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T171f1244(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T277f171(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T333f74(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T333f72(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T333f71(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T333f70(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T333f69(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T171f1243(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T171f1242(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T277f170(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T671f78(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T671f76(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T671f75(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T671f74(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T671f73(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T671f72(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T671f71(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T671f70(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T671c69(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T671f31(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T171f1241(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T171f1240(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T277f169(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T327f78(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T327f76(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T327f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T327f74(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T327f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T327f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T327f71(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T327f70(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T171f1239(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T171f1238(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T652f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].resized_area */
extern T0* T647f3(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].copy_data */
extern void T647f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUERY].move_data */
extern void T647f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].overlapping_move */
extern void T647f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].non_overlapping_move */
extern void T647f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T171f688(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T171f1754(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T176f74(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T171f1787(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T171f1786(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T171f1785(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T171f1784(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_tuple_function */
extern void T171f1783(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T171f1782(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge777os13967;
extern T0* ge777ov13967;
extern T0* T170f531(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T171f1781(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T171f1780(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_identified_routines_function */
extern void T171f1779(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T171f1778(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T171f1777(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T171f1776(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T171f1775(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T171f1774(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T171f1773(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T171f1772(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T171f1771(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_type_function */
extern void T171f1770(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T171f1769(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function */
extern T0* T277f319(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T176f82(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T176f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T176f79(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T176f78(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T176f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T176f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T176f75(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T176c73(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T176f47(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T171f1237(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T171f1236(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T171f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T171f1234(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T277f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T666f76(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T666f74(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T666f73(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T666f72(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T666f71(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T666f70(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T666c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T666f37(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T666f69p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T171f1233(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T171f1232(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T171f1231(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T171f1230(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T277f166(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T665f80(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T665f78(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T665f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T665f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T665f75(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T665f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T665f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T665f72(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T665f71(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T665c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T665f47(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T171f1229(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T171f1228(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T171f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T171f1226(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T277f165(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T663f80(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T663f78(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T663f77(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T663f76(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T663f75(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T663f74(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T663f73(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T663f72(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T663f71(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T663c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T663f47(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T171f1225(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T171f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T171f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T171f1222(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T277f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T260f69(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T260c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge777os14048;
extern T0* ge777ov14048;
extern T0* T170f873(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T179c34(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T260f45(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T171f1221(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T171f1220(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T277f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T258f69(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T258c68(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T258f32(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T171f1219(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T171f1218(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T277f162(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T261f67(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T261c66(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T261f30(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T171f1217(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T171f1216(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T171f1734(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T267f24(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T267f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T267f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T908f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T267f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T908f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T267f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T267f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T267f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T267f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T267f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T267f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T908f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T267f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T267f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T267f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T267f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T267f22(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T267f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T267f8(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T267f6(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.register_feature */
extern void T56f182(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.register_feature */
extern void T53f202(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T171f676(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T672f35(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T171f1215(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T277f160(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T171f1214(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T171f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T171f1212(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T171f1733(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T435f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T435f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T434f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T434f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T267f21(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T267f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T908f5(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T267f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T267f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T267f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T171f1211(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T171f1210(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T171f1732(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T269f24(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T269f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T269f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T912f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T269f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T912f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T269f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T269f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T269f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T269f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T269f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T269f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T912f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T269f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T269f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T269f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T269f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T269f22(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T269f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T269f8(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T269f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T171f674(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T176f38(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T171f1209(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T171f1208(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T171f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T171f1206(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T171f1731(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T269f21(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T269f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T912f5(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T269f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T269f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T269f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T171f1205(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T171f1204(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T171f1203(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T171f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T171f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T171f1200(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T646f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].resized_area */
extern T0* T645f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].copy_data */
extern void T645f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE].move_data */
extern void T645f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].overlapping_move */
extern void T645f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].non_overlapping_move */
extern void T645f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T645c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T646f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T1129c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T646c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T277f159(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T450c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge777os14015;
extern T0* ge777ov14015;
extern T0* T170f727(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T179c64(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T450f3(T0* C);
/* ET_AST_FACTORY.new_any_clients */
extern T0* T277f151(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T171f1199(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T171f1198(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T171f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T171f1196(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T536f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T171f1195(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T644f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].resized_area */
extern T0* T537f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].copy_data */
extern void T537f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].move_data */
extern void T537f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].overlapping_move */
extern void T537f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].non_overlapping_move */
extern void T537f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T537c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T644f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T1128c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T644c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T277f158(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T536c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge561os6602;
extern T0* ge561ov6602;
extern T0* T536f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T171f1194(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T171f1730(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T267f19(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T267f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T267f25(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T269f19(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T269f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T269f25(T0* C);
/* ET_CLASS.set_procedures */
extern void T60f174(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T161f10(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T161f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T267f7(T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T60f173(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T159f10(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T159f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T269f7(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T171f1193(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T171f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T171f1191(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T643f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].resized_area */
extern T0* T642f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].copy_data */
extern void T642f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_ITEM].move_data */
extern void T642f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].overlapping_move */
extern void T642f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].non_overlapping_move */
extern void T642f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T642c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T643f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T1127c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T643c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T277f157(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T171f1190(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T969f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T171f1189(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T639f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].resized_area */
extern T0* T635f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].copy_data */
extern void T635f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_LIST].move_data */
extern void T635f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].overlapping_move */
extern void T635f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].non_overlapping_move */
extern void T635f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T635c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T639f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T1126c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T639c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T277f156(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T969f10(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T969c8(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T969f8p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge868os6602;
extern T0* ge868ov6602;
extern T0* T969f6(T0* C);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T969f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T171f1188(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T171f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T171f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T171f1185(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T637f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].resized_area */
extern T0* T630f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].copy_data */
extern void T630f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE].move_data */
extern void T630f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].overlapping_move */
extern void T630f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].non_overlapping_move */
extern void T630f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T630c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T637f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T1125c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T637c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T277f155(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T638c9(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T638f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T171f1184(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T277f154(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T636c8(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge777os13974;
extern T0* ge777ov13974;
extern T0* T170f692(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T460c63(void);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T636f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T171f1183(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T633f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].resized_area */
extern T0* T632f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].copy_data */
extern void T632f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].move_data */
extern void T632f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].overlapping_move */
extern void T632f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].non_overlapping_move */
extern void T632f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T632c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T633f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T1124c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T633c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T277f153(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T171f1182(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T534f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T171f1181(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T628f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].resized_area */
extern T0* T535f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].copy_data */
extern void T535f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].move_data */
extern void T535f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].overlapping_move */
extern void T535f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].non_overlapping_move */
extern void T535f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T535c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T628f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T1123c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T628c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T277f152(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T534c8(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T534f8p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge552os6602;
extern T0* ge552ov6602;
extern T0* T534f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge777os14001;
extern T0* ge777ov14001;
extern T0* T170f726(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T179c63(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T534f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T171f1180(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T171f1179(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T171f1178(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T171f1177(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T171f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T171f1175(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T623f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].resized_area */
extern T0* T575f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].copy_data */
extern void T575f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME_ITEM].move_data */
extern void T575f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].overlapping_move */
extern void T575f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].non_overlapping_move */
extern void T575f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T277f148(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T171f1174(T0* C);
/* ET_CREATOR.put_first */
extern void T625f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T171f1173(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T627f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].resized_area */
extern T0* T626f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].copy_data */
extern void T626f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR].move_data */
extern void T626f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].overlapping_move */
extern void T626f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].non_overlapping_move */
extern void T626f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].make */
extern T0* T626c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T627f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T1122c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T627c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T277f150(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T625c16(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T625f18(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T625f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge777os14003;
extern T0* ge777ov14003;
extern T0* T170f731(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T179c68(void);
/* ET_CREATOR.tokens */
extern T0* T625f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T171f1172(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T171f1171(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T171f1170(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T171f1169(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T171f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T171f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T171f947(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T171f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T171f1165(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T171f1164(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T171f1163(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T171f1162(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T171f1161(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T171f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T171f1159(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T624f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].resized_area */
extern T0* T533f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].copy_data */
extern void T533f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR_LIST].move_data */
extern void T533f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].overlapping_move */
extern void T533f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].non_overlapping_move */
extern void T533f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T533c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T624f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T1121c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T624c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T171f1158(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T532f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T171f1157(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T277f149(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T532c9(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge556os6602;
extern T0* ge556ov6602;
extern T0* T532f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T171f1156(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T171f1155(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T171f1154(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T171f1153(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T171f1152(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T320f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T171f1151(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T622f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].resized_area */
extern T0* T598f3(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].copy_data */
extern void T598f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].move_data */
extern void T598f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].overlapping_move */
extern void T598f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].non_overlapping_move */
extern void T598f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T598c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T622f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T1119c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T622c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T277f147(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T320c8(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T320f8p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T320f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge777os14035;
extern T0* ge777ov14035;
extern T0* T170f736(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T179c73(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T320f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T171f1150(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T171f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T171f1148(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T171f1147(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T171f1146(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T171f1145(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T171f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T171f1143(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T171f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T171f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T171f1140(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T171f1139(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T171f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T171f1137(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T171f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T171f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T171f1134(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].resize */
extern T0* T621f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_ITEM].resized_area */
extern T0* T620f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].copy_data */
extern void T620f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_ITEM].move_data */
extern void T620f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].overlapping_move */
extern void T620f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].non_overlapping_move */
extern void T620f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_class_name_comma */
extern T0* T277f146(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T171f1133(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T171f1132(T0* C);
/* ET_CLIENTS.put_first */
extern void T449f21(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T171f1131(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T171f1130(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T618f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].resized_area */
extern T0* T611f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].copy_data */
extern void T611f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENTS].move_data */
extern void T611f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].overlapping_move */
extern void T611f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].non_overlapping_move */
extern void T611f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T611c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T618f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T1117c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T618c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T277f145(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T449f19(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T449c20(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T449f20p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T449f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T449f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T171f1129(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T171f1128(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T277f144(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T449c18(void);
/* ET_CLIENTS.make */
extern void T449f18p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T171f1127(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T171f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T171f1125(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T614f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T171f1124(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T617f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].resized_area */
extern T0* T615f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].copy_data */
extern void T615f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_EXPORT].move_data */
extern void T615f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].overlapping_move */
extern void T615f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].non_overlapping_move */
extern void T615f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T615c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T617f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T1116c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T617c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T277f142(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T614c10(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T614f12(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T614f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T171f1123(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T171f1122(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T613f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].resized_area */
extern T0* T610f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].copy_data */
extern void T610f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT].move_data */
extern void T610f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].overlapping_move */
extern void T610f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].non_overlapping_move */
extern void T610f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].make */
extern T0* T610c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T613f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T1115c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T613c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T277f143(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T171f1121(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T171f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T171f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T171f1118(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T277f141(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T612c7(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge777os13994;
extern T0* ge777ov13994;
extern T0* T170f851(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T179c28(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T612f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T171f1117(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T608f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].resized_area */
extern T0* T597f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].copy_data */
extern void T597f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT_LIST].move_data */
extern void T597f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].overlapping_move */
extern void T597f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].non_overlapping_move */
extern void T597f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T597c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T608f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T1114c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T608c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T171f1116(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T319f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T171f1115(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T277f140(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T319c7(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T319f7p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge559os6602;
extern T0* ge559ov6602;
extern T0* T319f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge777os14013;
extern T0* ge777ov14013;
extern T0* T170f720(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T179c57(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T319f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T171f1114(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T171f1113(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T171f1112(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T171f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T171f1110(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T171f1109(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T607f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].resized_area */
extern T0* T603f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].copy_data */
extern void T603f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_ITEM].move_data */
extern void T603f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].overlapping_move */
extern void T603f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].non_overlapping_move */
extern void T603f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T603c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T607f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T1113c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T607c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T277f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T606c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge777os13995;
extern T0* ge777ov13995;
extern T0* T170f702(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T179c39(void);
/* ET_RENAME.tokens */
extern T0* T606f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T171f1108(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T277f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T171f1107(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T318f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T171f1106(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T601f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].resized_area */
extern T0* T596f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].copy_data */
extern void T596f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_LIST].move_data */
extern void T596f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].overlapping_move */
extern void T596f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].non_overlapping_move */
extern void T596f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T596c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T601f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T1112c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T601c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T277f137(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T318c8(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T318f8p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge584os6602;
extern T0* ge584ov6602;
extern T0* T318f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge777os14037;
extern T0* ge777ov14037;
extern T0* T170f723(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T179c60(void);
/* ET_RENAME_LIST.tokens */
extern T0* T318f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T171f1105(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T171f1104(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T171f1103(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T171f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T171f1101(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T600f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].resized_area */
extern T0* T599f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].copy_data */
extern void T599f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_ITEM].move_data */
extern void T599f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].overlapping_move */
extern void T599f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].non_overlapping_move */
extern void T599f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T599c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T600f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T1111c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T600c3(void);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T277f136(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T171f1100(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T171f1099(T0* C);
/* ET_PARENT_LIST.put_first */
extern void T321f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T171f1098(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T171f1097(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T171f1096(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T592f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].resized_area */
extern T0* T531f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].copy_data */
extern void T531f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_LIST].move_data */
extern void T531f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].overlapping_move */
extern void T531f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].non_overlapping_move */
extern void T531f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T531c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T592f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T1109c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T592c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T277f135(T0* C, T0* a1, T6 a2);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T321c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T321f10p1(T0* C, T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge579os6602;
extern T0* ge579ov6602;
extern T0* T321f8(T0* C);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge777os14021;
extern T0* ge777ov14021;
extern T0* T170f728(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T179c65(void);
/* ET_PARENT_LIST.tokens */
extern T0* T321f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T171f1095(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T171f1094(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T171f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T171f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T171f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T171f1090(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T595f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].resized_area */
extern T0* T594f2(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].copy_data */
extern void T594f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT].move_data */
extern void T594f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].overlapping_move */
extern void T594f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].non_overlapping_move */
extern void T594f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].make */
extern T0* T594c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T595f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T1110c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T595c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T171f613(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T277f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_PARENT.make */
extern T0* T317c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T317f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T317f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T430f14(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T173f14(T0* C);
/* ET_CLASS.has_formal_parameter */
extern T1 T60f69(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T430f15(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T171f1089(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T171f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T171f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T171f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T171f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T171f1084(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T171f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T171f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T171f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T171f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T171f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T171f1078(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T591f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].resized_area */
extern T0* T530f3(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].copy_data */
extern void T530f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_OBSOLETE].move_data */
extern void T530f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].overlapping_move */
extern void T530f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].non_overlapping_move */
extern void T530f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T530c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T591f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T1108c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T591c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T277f134(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T171f1077(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T171f1076(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T588f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T586f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T586f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].move_data */
extern void T586f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T586f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T586f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T586c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T588f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1107c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T588c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T277f133(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T277f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T589c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T171f1075(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T171f1074(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T171f1729(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T576f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T277f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T590c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T576f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T576f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T171f1073(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T171f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T171f1071(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T171f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T171f1069(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T584f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T577f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].copy_data */
extern void T577f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].move_data */
extern void T577f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T577f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T577f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T577c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T584f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1106c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T584c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T277f129(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T576f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T576c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T576f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge843os6602;
extern T0* ge843ov6602;
extern T0* T576f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T576f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T171f1068(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T171f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T171f1066(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T171f1065(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T171f1064(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T171f1063(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T277f130(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T171f1062(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T171f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T277f314(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T578c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T277f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T957c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T171f1061(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T171f1060(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T171f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T171f1058(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T171f1057(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T171f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T171f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T171f1054(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T579f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].resized_area */
extern T0* T569f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].copy_data */
extern void T569f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_TYPE].move_data */
extern void T569f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].overlapping_move */
extern void T569f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].non_overlapping_move */
extern void T569f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T171f1053(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T171f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T171f1051(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T171f1050(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T171f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T171f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T171f1047(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T171f1046(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T171f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T171f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T171f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T171f1042(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T171f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T171f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T171f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T171f1038(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T571f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T171f1037(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T573f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].resized_area */
extern T0* T572f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].copy_data */
extern void T572f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_CREATOR].move_data */
extern void T572f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].overlapping_move */
extern void T572f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].non_overlapping_move */
extern void T572f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T572c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T573f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T1103c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T573c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T277f127(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T571c12(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T571f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T571f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T571f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T171f1036(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T171f1035(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T171f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T171f1033(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T171f1032(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T568f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].resized_area */
extern T0* T563f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].copy_data */
extern void T563f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER].move_data */
extern void T563f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].overlapping_move */
extern void T563f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].non_overlapping_move */
extern void T563f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T171f1728(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T439f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T439f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T439f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T439f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T277f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T570f68(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T570c67(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T570f69(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge777os13970;
extern T0* ge777ov13970;
extern T0* T170f698(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T460c69(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T570f10(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T171f592(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T171f1031(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T171f1030(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T171f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T171f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T171f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T171f1026(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T277f125(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T562f66(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T562c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T171f1025(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T171f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T171f1023(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T566f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].resized_area */
extern T0* T565f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].copy_data */
extern void T565f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].move_data */
extern void T565f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].overlapping_move */
extern void T565f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].non_overlapping_move */
extern void T565f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T565c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T566f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T1101c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T566c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T277f124(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T171f1022(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T430f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T570f71(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T562f67(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T430f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T430f26p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T171f1021(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T561f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].resized_area */
extern T0* T560f2(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].copy_data */
extern void T560f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].move_data */
extern void T560f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].overlapping_move */
extern void T560f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].non_overlapping_move */
extern void T560f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T560c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T561f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T1100c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T561c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T277f123(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T430f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T430c24(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T430f24p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge566os6602;
extern T0* ge566ov6602;
extern T0* T430f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T430f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T171f1020(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T171f1019(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T171f1725(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T439f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T439f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T439f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1066f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T1066f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T430f25(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T570f70(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T439f7(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T430f7(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T60f172(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T171f1018(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T171f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T171f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T171f1015(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T171f1014(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T171f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T171f1012(T0* C);
/* ET_CLASS.set_external_keyword */
extern void T60f168(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T60f167(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T60f175(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T60f166(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T171f851(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T57f204(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T28f204(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_override_cluster */
extern T1 T60f77(T0* C);
/* ET_CLASS.set_name */
extern void T60f180(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.none_class */
extern T0* T171f881(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T171f1011(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T171f1010(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T171f1009(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T171f1008(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T559f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].resized_area */
extern T0* T553f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].copy_data */
extern void T553f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_ITEM].move_data */
extern void T553f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].overlapping_move */
extern void T553f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].non_overlapping_move */
extern void T553f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T553c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T559f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T1099c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T559c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T277f122(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T171f1007(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T554f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].resized_area */
extern T0* T550f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].copy_data */
extern void T550f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM].move_data */
extern void T550f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].overlapping_move */
extern void T550f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].non_overlapping_move */
extern void T550f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T550c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T554f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T1098c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T554c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T277f121(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T557c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T557f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T171f1006(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T171f1005(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T171f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T171f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T171f1002(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T171f1001(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T171f1000(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T171f999(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T171f998(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T171f997(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T551f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].resized_area */
extern T0* T544f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].copy_data */
extern void T544f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_LIST].move_data */
extern void T544f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].overlapping_move */
extern void T544f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].non_overlapping_move */
extern void T544f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T544c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T551f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T1097c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T551c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T277f120(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T171f996(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T277f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T171f995(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T171f994(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T546f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].resized_area */
extern T0* T542f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].copy_data */
extern void T542f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_ITEM].move_data */
extern void T542f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].overlapping_move */
extern void T542f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].non_overlapping_move */
extern void T542f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T542c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T546f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T1096c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T546c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T277f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T171f993(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T277f116(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T171f992(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T171f991(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T540f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].resized_area */
extern T0* T528f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].copy_data */
extern void T528f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_LIST].move_data */
extern void T528f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].overlapping_move */
extern void T528f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].non_overlapping_move */
extern void T528f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T528c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T540f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T1095c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T540c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T171f990(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T171f989(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T171f988(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T171f987(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T277f115(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T171f986(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T171f985(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T171f984(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T171f983(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T171f982(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T171f981(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T171f980(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T171f1719(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T440f39(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T440f53(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T440f52(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T440f51(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T440f50(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T440f49(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1067f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1067f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T440f42(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T440f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T440f63(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T440f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T440f41(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T440f57(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T440f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T440f64(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T440f18(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T440f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T440f22(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T440f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].start */
extern void T440f40(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T440f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T440f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T440f27(T0* C);
/* ET_CLASS.set_providers */
extern void T60f171(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T171f979(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T171f1718(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T171f1717(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_LACE_UNIVERSE.set_function_item_seed */
extern void T56f181(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_function_item_seed */
extern void T53f201(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.set_routine_call_seed */
extern void T56f180(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_routine_call_seed */
extern void T53f200(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T57f188(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T926c616(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T57f22(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T28f188(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T28f22(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_void_seed */
extern void T56f179(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_void_seed */
extern void T53f199(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.void_feature_name */
extern unsigned char ge777os13961;
extern T0* ge777ov13961;
extern T0* T170f186(T0* C);
/* ET_LACE_UNIVERSE.set_copy_seed */
extern void T56f178(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_copy_seed */
extern void T53f198(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T57f187(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T926c615(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T57f21(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T28f187(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T28f21(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_create_seed */
extern void T56f177(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_default_create_seed */
extern void T53f197(T0* C, T6 a1);
/* ET_CLASS.set_end_keyword */
extern void T60f213(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T60f212(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T60f211(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T60f210(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T60f209(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T60f208(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T60f207(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T60f206(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T317f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T321f9(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T321f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T171f978(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T171f977(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T60f205(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T171f976(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T171f975(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T171f974(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T171f973(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T171f972(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T171f971(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T171f970(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T171f969(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T171f968(T0* C);
/* ET_CLASS.set_leading_break */
extern void T60f204(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T171f967(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T171f930(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T512f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].resized_area */
extern T0* T511f2(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].copy_data */
extern void T511f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].move_data */
extern void T511f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].overlapping_move */
extern void T511f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].non_overlapping_move */
extern void T511f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T511c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T512f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T1093c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T512c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T509f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].resized_area */
extern T0* T508f2(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].copy_data */
extern void T508f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_SYMBOL].move_data */
extern void T508f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].overlapping_move */
extern void T508f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].non_overlapping_move */
extern void T508f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T508c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T509f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T1092c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T509c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T503f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].resized_area */
extern T0* T502f2(T0* C, T6 a1);
/* SPECIAL [ET_VOID].copy_data */
extern void T502f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VOID].move_data */
extern void T502f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].overlapping_move */
extern void T502f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].non_overlapping_move */
extern void T502f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].make */
extern T0* T502c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T503f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T1090c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T503c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T500f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].resized_area */
extern T0* T499f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].copy_data */
extern void T499f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL_OPERATOR].move_data */
extern void T499f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].overlapping_move */
extern void T499f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].non_overlapping_move */
extern void T499f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T499c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T500f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T1089c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T500c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T497f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].resized_area */
extern T0* T496f2(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].copy_data */
extern void T496f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RETRY_INSTRUCTION].move_data */
extern void T496f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].overlapping_move */
extern void T496f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].non_overlapping_move */
extern void T496f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T496c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T497f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T1088c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T497c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T494f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].resized_area */
extern T0* T493f2(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].copy_data */
extern void T493f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RESULT].move_data */
extern void T493f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].overlapping_move */
extern void T493f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].non_overlapping_move */
extern void T493f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].make */
extern T0* T493c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T494f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T1087c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T494c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T492f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].resized_area */
extern T0* T491f2(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].copy_data */
extern void T491f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REAL_CONSTANT].move_data */
extern void T491f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].overlapping_move */
extern void T491f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].non_overlapping_move */
extern void T491f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T491c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T492f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T1086c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T492c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T487f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].resized_area */
extern T0* T486f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].copy_data */
extern void T486f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_OPERATOR].move_data */
extern void T486f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].overlapping_move */
extern void T486f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].non_overlapping_move */
extern void T486f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T486c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T487f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T1084c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T487c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T484f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].resized_area */
extern T0* T483f2(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].copy_data */
extern void T483f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INTEGER_CONSTANT].move_data */
extern void T483f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].overlapping_move */
extern void T483f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].non_overlapping_move */
extern void T483f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T483c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T484f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T1083c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T484c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T481f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].resized_area */
extern T0* T480f2(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].copy_data */
extern void T480f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FREE_OPERATOR].move_data */
extern void T480f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].overlapping_move */
extern void T480f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].non_overlapping_move */
extern void T480f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T480c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T481f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T1082c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T481c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T478f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].resized_area */
extern T0* T477f2(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].copy_data */
extern void T477f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CURRENT].move_data */
extern void T477f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].overlapping_move */
extern void T477f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].non_overlapping_move */
extern void T477f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].make */
extern T0* T477c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T478f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T1081c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T478c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T473f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].resized_area */
extern T0* T472f2(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].copy_data */
extern void T472f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BREAK].move_data */
extern void T472f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].overlapping_move */
extern void T472f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].non_overlapping_move */
extern void T472f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].make */
extern T0* T472c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T473f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T1079c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T473c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T470f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].resized_area */
extern T0* T469f2(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].copy_data */
extern void T469f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BOOLEAN_CONSTANT].move_data */
extern void T469f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].overlapping_move */
extern void T469f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].non_overlapping_move */
extern void T469f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T469c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T470f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T1078c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T470c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T467f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].resized_area */
extern T0* T466f2(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].copy_data */
extern void T466f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BIT_CONSTANT].move_data */
extern void T466f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].overlapping_move */
extern void T466f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].non_overlapping_move */
extern void T466f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T466c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T467f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T1077c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T467c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T464f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].resized_area */
extern T0* T463f2(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].copy_data */
extern void T463f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSITION].move_data */
extern void T463f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].overlapping_move */
extern void T463f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].non_overlapping_move */
extern void T463f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].make */
extern T0* T463c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T464f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T1076c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T464c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T459f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].resized_area */
extern T0* T458f2(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].copy_data */
extern void T458f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECURSOR_KEYWORD].move_data */
extern void T458f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].overlapping_move */
extern void T458f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].non_overlapping_move */
extern void T458f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T458c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T459f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T1074c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T459c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T456f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].resized_area */
extern T0* T455f2(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].copy_data */
extern void T455f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_KEYWORD].move_data */
extern void T455f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].overlapping_move */
extern void T455f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].non_overlapping_move */
extern void T455f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T455c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T456f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T1073c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T456c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T171f929(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T171f927(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T171f946(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T171f952(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T171f956(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T171f630(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T171f945(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T171f966(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T171f944(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T171f943(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T171f942(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T171f941(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T171f940(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T171f939(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T171f926(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T171f938(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T171f965(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T171f954(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T277f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T277f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T277f12(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T521f33(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T521c32(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T521f34(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T171f884(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T277f11(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T520f33(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T520c32(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T520f34(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T277f10(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T519f41(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T519c40(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T519f42(T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T277f9(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T518f42(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T518c41(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T518f43(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T277f8(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T517f42(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T517c41(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T517f43(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T277f7(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T465f29(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T465c28(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T465f30(T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T57f180(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T28f180(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T57f177(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T28f177(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T57f176(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T28f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T57f175(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T28f175(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T57f174(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T28f174(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T277f6(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T516f33(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T171f887(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T516c32(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T516f34(T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T171f890(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T277f5(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T515f37(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T171f886(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T515c36(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T515f38(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T171f655(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T171f653(T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T171f1753(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T171f651(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T171f964(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T277f4(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T514f32(T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T57f169(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T28f169(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T277f3(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T513f36(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T171f885(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T513c35(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T513f37(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T171f963(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T277f114(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T526f35(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T526c34(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T526f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T57f186(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T28f186(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T57f185(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T28f185(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T171f962(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T277f113(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T525f35(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T525c34(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T525f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T57f184(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T28f184(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T277f2(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T479f48(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T479c47(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T479f10(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T479f49(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T479f50(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T171f955(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T171f961(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T171f960(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T277f112(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T179f27(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T179c38(void);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T277f111(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T457f19(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T277f110(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T277f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge777os13997;
extern T0* ge777ov13997;
extern T0* T170f738(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T179c75(void);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T277f108(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge777os14047;
extern T0* ge777ov14047;
extern T0* T170f737(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T179c74(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T277f107(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T179c37(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T277f106(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T277f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge777os14028;
extern T0* ge777ov14028;
extern T0* T170f735(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T179c72(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T277f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge777os14019;
extern T0* ge777ov14019;
extern T0* T170f734(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T179c71(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T277f103(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge777os14014;
extern T0* ge777ov14014;
extern T0* T170f733(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T179c70(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T277f102(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T179c36(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T277f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T277f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T277f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T277f98(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T277f97(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge777os14022;
extern T0* ge777ov14022;
extern T0* T170f729(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T179c66(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T277f96(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T277f95(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T485f48(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T485c52(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T277f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T277f93(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T277f92(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T198f30(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T277f91(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T277f90(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge777os14042;
extern T0* ge777ov14042;
extern T0* T170f725(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T179c62(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T277f89(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T222f29(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T277f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T277f87(T0* C, T0* a1);
/* ET_AST_FACTORY.new_recast_keyword */
extern T0* T277f86(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.recast_keyword */
extern unsigned char ge777os14034;
extern T0* ge777ov14034;
extern T0* T170f722(T0* C);
/* ET_KEYWORD.make_recast */
extern T0* T179c59(void);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T277f85(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T277f84(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T179c33(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T277f83(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T277f82(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T277f81(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge777os14009;
extern T0* ge777ov14009;
extern T0* T170f719(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T179c56(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T277f80(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T277f79(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge777os13996;
extern T0* ge777ov13996;
extern T0* T170f717(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T179c54(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T277f78(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge777os14049;
extern T0* ge777ov14049;
extern T0* T170f716(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T179c53(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T277f77(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T277f76(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T495f13(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T495c12(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T495f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T495f15(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T495f7(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T277f75(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T277f74(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T277f73(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T524f31(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T524c30(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T524f32(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T524f33(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T524f7(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T277f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T277f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T277f70(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T277f69(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T277f68(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T454f14(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T277f67(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T277f66(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T501f25(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T501c24(void);
/* ET_VOID.make_token */
extern void T501f26(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T501f27(T0* C);
/* ET_VOID.tokens */
extern T0* T501f7(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T277f65(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T523f31(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T523c30(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T523f32(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T523f33(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T523f7(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T277f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T277f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T277f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T277f61(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T277f60(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T277f59(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T485c51(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T277f58(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T277f57(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T485c50(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T277f56(T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T277f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T277f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T277f52(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T277f51(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T277f50(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge777os14018;
extern T0* ge777ov14018;
extern T0* T170f704(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T179c41(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T277f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T277f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T277f1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T171f959(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T277f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T277f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T277f45(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T277f44(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T277f43(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T460f53(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T277f42(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T498f59(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T498c69(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T498f70(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T277f41(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T277f40(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T498c68(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T277f39(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T498c67(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T277f38(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T460c55(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T277f37(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T498c66(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T171f638(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T171f958(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T171f957(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T277f36(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.tilde_symbol */
extern unsigned char ge777os13989;
extern T0* ge777ov13989;
extern T0* T170f696(T0* C);
/* ET_SYMBOL.make_tilde */
extern T0* T460c67(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T277f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T277f34(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T277f33(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T507f83(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T277f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T277f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T277f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T277f29(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T277f28(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T510f12(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T277f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T277f26(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T277f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge777os13975;
extern T0* ge777ov13975;
extern T0* T170f691(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T460c62(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T277f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T170f690(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T504c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T504f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T504f3(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T277f23(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge777os13977;
extern T0* ge777ov13977;
extern T0* T170f689(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T460c61(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T277f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T498c65(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T277f21(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T498c64(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T277f20(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T460c52(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T277f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T498c63(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T277f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T498c62(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T277f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T498c61(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T277f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T498c60(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T277f15(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T498c58(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T171f637(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T171f937(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T171f953(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T171f604(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T171f936(T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T171f603(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T171f601(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T171f935(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T171f925(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T171f934(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T171f951(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T171f1715(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T171f1739(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T730f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T757f6(T0* C);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T761f6(T0* C);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T709f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T635f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T642f6(T0* C);
/* SPECIAL [ET_TYPE].clear_all */
extern void T640f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T817f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T777f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T596f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T603f6(T0* C);
/* SPECIAL [ET_QUERY].clear_all */
extern void T647f6(T0* C);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T648f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T656f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T662f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T531f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T599f6(T0* C);
/* SPECIAL [ET_PARENT].clear_all */
extern void T594f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T793f6(T0* C);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T530f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T558f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T779f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T783f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T815f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T706f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T658f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T695f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T697f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T581f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T598f6(T0* C);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T539f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T723f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T736f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T812f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T544f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T553f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T550f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T542f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T528f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T734f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T560f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T565f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T563f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T664f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T688f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T689f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T575f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T604f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T615f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T537f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T645f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T669f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T605f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T795f6(T0* C);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T701f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T597f6(T0* C);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T610f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T751f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T753f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T740f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T533f6(T0* C);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T626f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T556f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T535f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T632f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T630f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T569f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T572f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T577f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T586f6(T0* C);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T653f6(T0* C);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T660f6(T0* C);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T611f6(T0* C);
/* SPECIAL [ET_CLASS_NAME_ITEM].clear_all */
extern void T620f6(T0* C);
/* SPECIAL [ET_CLASS].clear_all */
extern void T423f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T763f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T769f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T772f6(T0* C);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T767f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T724f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T810f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T729f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T819f6(T0* C);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T651f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T682f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T831f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T829f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T844f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T842f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T593f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T714f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T745f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T511f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T508f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T505f6(T0* C);
/* SPECIAL [ET_VOID].clear_all */
extern void T502f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T499f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T496f6(T0* C);
/* SPECIAL [ET_RESULT].clear_all */
extern void T493f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T491f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T488f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T486f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T483f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T133f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T480f6(T0* C);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T477f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T475f6(T0* C);
/* SPECIAL [ET_BREAK].clear_all */
extern void T472f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T469f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T466f6(T0* C);
/* SPECIAL [ET_POSITION].clear_all */
extern void T463f6(T0* C);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T461f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T458f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T455f6(T0* C);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T452f6(T0* C);
/* ET_EIFFEL_PARSER.abort */
extern void T171f928(T0* C);
/* ET_EIFFEL_PARSER.eiffel_buffer */
extern T0* T171f631(T0* C);
/* ET_EIFFEL_PARSER.std */
extern T0* T171f864(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T171f922(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T437f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T437f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T436f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T436f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T433f9(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].clear_items */
extern void T433f14(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.reset */
extern void T171f922p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T171f922p0(T0* C);
/* ET_EIFFEL_PARSER.eiffel_compiler */
extern T0* T171f824(T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T171f823(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T171f878(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T171f640(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T171f869(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T171f868(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T171f867(T0* C);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T171f635(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge966os15817;
extern T0* ge966ov15817;
extern T0* T171f865(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T171f634(T0* C);
/* ET_XACE_UNIVERSE.parse_all */
extern void T53f167(T0* C);
/* ET_SYSTEM.set_dynamic_type_set_builder */
extern void T58f61(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T64c243(T0* a1);
/* DS_CELL [INTEGER_32].make */
extern T0* T264c2(T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge943os8744;
extern T0* ge943ov8744;
extern T0* T64f80(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T64f236(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge943os8743;
extern T0* ge943ov8743;
extern T0* T64f81(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T64f249(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T64f252(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T64f234(T0* C, T0* a1);
/* ET_SYSTEM.set_catcall_warning_mode */
extern void T58f60(T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T21f23(T0* C);
/* ET_SYSTEM.set_catcall_error_mode */
extern void T58f59(T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T21f22(T0* C);
/* ET_SYSTEM.make */
extern T0* T58c58(T0* a1);
/* ET_SYSTEM.make_basic_types */
extern void T58f63(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T155c10(T0* a1);
/* GEC.is_verbose */
extern T1 T21f21(T0* C);
/* ET_LACE_UNIVERSE.set_ise_version */
extern void T56f161(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_keyword_usage */
extern void T56f183(T0* C);
/* ET_LACE_UNIVERSE.set_ecma_version */
extern void T56f194(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T56f193(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge777os13805;
extern T0* ge777ov13805;
extern T0* T170f109(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge777os13820;
extern T0* ge777ov13820;
extern T0* T170f108(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge777os13812;
extern T0* ge777ov13812;
extern T0* T170f105(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge777os13807;
extern T0* ge777ov13807;
extern T0* T170f100(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T323c6(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T969c11(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T969f11p1(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge777os13823;
extern T0* ge777ov13823;
extern T0* T170f95(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge777os13801;
extern T0* ge777ov13801;
extern T0* T170f94(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove */
extern void T154f46(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_position */
extern void T154f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_forth */
extern void T154f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_all_cursors */
extern void T154f68(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_after */
extern void T154f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].internal_set_key_equality_tester */
extern void T154f61(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T421f6(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge777os13790;
extern T0* ge777ov13790;
extern T0* T170f61(T0* C);
/* ET_LACE_UNIVERSE.tokens */
extern T0* T56f154(T0* C);
/* ET_LACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T56f192(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_found_item */
extern void T154f45(T0* C);
/* ET_LACE_UNIVERSE.ise_5_7_60362 */
extern unsigned char ge252os1736;
extern T0* ge252ov1736;
extern T0* T56f148(T0* C);
/* ET_LACE_UNIVERSE.set_use_void_keyword */
extern void T56f191(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_reference_keyword */
extern void T56f190(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_recast_keyword */
extern void T56f189(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_create_keyword */
extern void T56f188(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_convert_keyword */
extern void T56f187(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_attribute_keyword */
extern void T56f186(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_assign_keyword */
extern void T56f185(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_ise_version */
extern void T53f165(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_keyword_usage */
extern void T53f183(T0* C);
/* ET_XACE_UNIVERSE.set_ecma_version */
extern void T53f194(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T53f193(T0* C);
/* ET_XACE_UNIVERSE.tokens */
extern T0* T53f158(T0* C);
/* ET_XACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T53f192(T0* C);
/* ET_XACE_UNIVERSE.ise_5_7_60362 */
extern T0* T53f157(T0* C);
/* ET_XACE_UNIVERSE.set_use_void_keyword */
extern void T53f191(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_reference_keyword */
extern void T53f190(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_recast_keyword */
extern void T53f189(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_create_keyword */
extern void T53f188(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_convert_keyword */
extern void T53f187(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_attribute_keyword */
extern void T53f186(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_assign_keyword */
extern void T53f185(T0* C, T1 a1);
/* GEC.ise_latest */
extern unsigned char ge252os1743;
extern T0* ge252ov1743;
extern T0* T21f20(T0* C);
/* UT_VERSION.make_latest */
extern T0* T63c16(void);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T57f152(T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T28f152(T0* C);
/* ET_LACE_UNIVERSE.set_error_handler */
extern void T56f160(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_error_handler */
extern void T53f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.make_standard */
extern T0* T57c151(void);
/* GEC.is_silent */
extern T1 T21f19(T0* C);
/* GEC.parse_ace_file */
extern void T21f37(T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T54f105(T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T54f223(T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T54f227(T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T54f240(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T54f239(T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T54f238(T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T54f252(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge991os5363;
extern T0* ge991ov5363;
extern T0* T54f200(T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T54f176(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T80f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T80f29(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T80f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T80f18(T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge991os5360;
extern T0* ge991ov5360;
extern T0* T54f199(T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T54f152(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T150f14(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T150f13(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T150f12(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T124f8(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T150c10(T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].resize */
extern T0* T149f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].resized_area */
extern T0* T148f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].copy_data */
extern void T148f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].move_data */
extern void T148f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].overlapping_move */
extern void T148f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].non_overlapping_move */
extern void T148f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T148c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T149f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_area */
extern T0* T419c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T149c3(void);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T150f11(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T139f8(T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T54f149(T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T124f7(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T139c7(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLIES.put_last */
extern void T138f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].force_last */
extern void T414f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].resize */
extern void T414f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_capacity */
extern T6 T414f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].extendible */
extern T1 T414f7(T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T54f148(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T124f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.make */
extern T0* T138c5(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].put_last */
extern void T414f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T414c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_cursor */
extern T0* T414f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T1057c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].resize */
extern T0* T147f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].resized_area */
extern T0* T141f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].copy_data */
extern void T141f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].move_data */
extern void T141f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].overlapping_move */
extern void T141f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].non_overlapping_move */
extern void T141f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T141c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T147f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make_area */
extern T0* T418c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].default_create */
extern T0* T147c3(void);
/* ET_LACE_EXCLUDE.put_last */
extern void T137f7(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T137c6(void);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].resize */
extern T0* T146f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_EXCLUDE].resized_area */
extern T0* T144f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_EXCLUDE].copy_data */
extern void T144f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_EXCLUDE].move_data */
extern void T144f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].overlapping_move */
extern void T144f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].non_overlapping_move */
extern void T144f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].make */
extern T0* T144c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].make */
extern T0* T146f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_EXCLUDE].make_area */
extern T0* T417c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].default_create */
extern T0* T146c3(void);
/* ET_LACE_PARSER.new_cluster */
extern T0* T54f142(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T125f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T125f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T125f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T125f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T125f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T125f22(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T125f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T125f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T125f31(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T125f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T125f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T125f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T125f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T125f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T125f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T125f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T125f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T125f47(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T405f1(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].any_ */
extern T0* T405f2(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T125f42(T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T124f5(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T54f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T54f251(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T55f7(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T55f8(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T55f5(T0* C, T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T54f196(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T125f25(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T125f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T125f32(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T125f38(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T136f37(T0* C, T1 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T54f137(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T124f4(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T135c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T413f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].resize */
extern T0* T142f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTERS].resized_area */
extern T0* T140f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTERS].copy_data */
extern void T140f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTERS].move_data */
extern void T140f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].overlapping_move */
extern void T140f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].non_overlapping_move */
extern void T140f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].make */
extern T0* T140c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].make */
extern T0* T142f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTERS].make_area */
extern T0* T415c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].default_create */
extern T0* T142c3(void);
/* ET_LACE_PARSER.new_default_value */
extern T0* T54f133(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern unsigned char ge991os5365;
extern T0* ge991ov5365;
extern T0* T54f217(T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge991os5361;
extern T0* ge991ov5361;
extern T0* T54f216(T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge991os5362;
extern T0* ge991ov5362;
extern T0* T54f215(T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern unsigned char ge991os5359;
extern T0* ge991ov5359;
extern T0* T54f214(T0* C);
/* ET_LACE_PARSER.no_value */
extern unsigned char ge991os5366;
extern T0* ge991ov5366;
extern T0* T54f213(T0* C);
/* ET_LACE_PARSER.yes_value */
extern unsigned char ge991os5367;
extern T0* ge991ov5367;
extern T0* T54f212(T0* C);
/* ET_LACE_PARSER.console_application_option */
extern unsigned char ge991os5358;
extern T0* ge991ov5358;
extern T0* T54f211(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T128f41(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T128f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T128f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T128f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T128f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T128f56(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T128f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T128f24(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T128f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T128f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T128f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T128f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T128f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T128f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T128f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T128f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T128f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T128f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T128f33(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T128f46(T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge991os5364;
extern T0* ge991ov5364;
extern T0* T54f210(T0* C);
/* ET_LACE_UNIVERSE.set_root_creation */
extern void T56f171(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_root_class */
extern void T56f170(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_system_name */
extern void T56f169(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_dotnet_assemblies */
extern void T56f168(T0* C, T0* a1);
/* ET_LACE_PARSER.new_universe */
extern T0* T54f131(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_trace_mode */
extern void T56f176(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_exception_trace_mode */
extern void T56f175(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_console_application_mode */
extern void T56f174(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_external_object_pathnames */
extern void T56f173(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_external_include_pathnames */
extern void T56f172(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_universe */
extern T0* T124f3(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.make_with_factory */
extern T0* T56c159(T0* a1, T0* a2, T0* a3);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T303c2(T0* a1);
/* ET_LACE_UNIVERSE.make_basic_classes */
extern void T56f184(T0* C);
/* ET_TOKEN_CONSTANTS.hashable_class_name */
extern unsigned char ge777os13806;
extern T0* ge777ov13806;
extern T0* T170f114(T0* C);
/* ET_TOKEN_CONSTANTS.part_comparable_class_name */
extern unsigned char ge777os13818;
extern T0* ge777ov13818;
extern T0* T170f113(T0* C);
/* ET_TOKEN_CONSTANTS.comparable_class_name */
extern unsigned char ge777os13804;
extern T0* ge777ov13804;
extern T0* T170f112(T0* C);
/* ET_TOKEN_CONSTANTS.numeric_class_name */
extern unsigned char ge777os13817;
extern T0* ge777ov13817;
extern T0* T170f111(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge777os13819;
extern T0* ge777ov13819;
extern T0* T170f110(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge777os13822;
extern T0* ge777ov13822;
extern T0* T170f107(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge777os13821;
extern T0* ge777ov13821;
extern T0* T170f106(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge777os13816;
extern T0* ge777ov13816;
extern T0* T170f104(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge777os13815;
extern T0* ge777ov13815;
extern T0* T170f103(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge777os13814;
extern T0* ge777ov13814;
extern T0* T170f102(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge777os13813;
extern T0* ge777ov13813;
extern T0* T170f101(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge777os13811;
extern T0* ge777ov13811;
extern T0* T170f99(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge777os13810;
extern T0* ge777ov13810;
extern T0* T170f98(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge777os13809;
extern T0* ge777ov13809;
extern T0* T170f97(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge777os13808;
extern T0* ge777ov13808;
extern T0* T170f96(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge777os13803;
extern T0* ge777ov13803;
extern T0* T170f93(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge777os13802;
extern T0* ge777ov13802;
extern T0* T170f92(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge777os13800;
extern T0* ge777ov13800;
extern T0* T170f91(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge777os13794;
extern T0* ge777ov13794;
extern T0* T170f89(T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge777os13793;
extern T0* ge777ov13793;
extern T0* T170f88(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge777os13781;
extern T0* ge777ov13781;
extern T0* T170f87(T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern unsigned char ge777os13767;
extern T0* ge777ov13767;
extern T0* T170f86(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge777os13757;
extern T0* ge777ov13757;
extern T0* T170f85(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge777os13765;
extern T0* ge777ov13765;
extern T0* T170f84(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge777os13783;
extern T0* ge777ov13783;
extern T0* T170f83(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge777os13784;
extern T0* ge777ov13784;
extern T0* T170f82(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge777os13788;
extern T0* ge777ov13788;
extern T0* T170f81(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge777os13797;
extern T0* ge777ov13797;
extern T0* T170f79(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge777os13782;
extern T0* ge777ov13782;
extern T0* T170f78(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge777os13787;
extern T0* ge777ov13787;
extern T0* T170f77(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge777os13786;
extern T0* ge777ov13786;
extern T0* T170f76(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge777os13779;
extern T0* ge777ov13779;
extern T0* T170f75(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge777os13778;
extern T0* ge777ov13778;
extern T0* T170f74(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge777os13777;
extern T0* ge777ov13777;
extern T0* T170f73(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge777os13776;
extern T0* ge777ov13776;
extern T0* T170f72(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge777os13772;
extern T0* ge777ov13772;
extern T0* T170f71(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge777os13771;
extern T0* ge777ov13771;
extern T0* T170f70(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge777os13770;
extern T0* ge777ov13770;
extern T0* T170f69(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge777os13769;
extern T0* ge777ov13769;
extern T0* T170f68(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge777os13763;
extern T0* ge777ov13763;
extern T0* T170f67(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge777os13762;
extern T0* ge777ov13762;
extern T0* T170f66(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge777os13760;
extern T0* ge777ov13760;
extern T0* T170f65(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge777os13774;
extern T0* ge777ov13774;
extern T0* T170f64(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge777os13789;
extern T0* ge777ov13789;
extern T0* T170f63(T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge777os13758;
extern T0* ge777ov13758;
extern T0* T170f62(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge777os13792;
extern T0* ge777ov13792;
extern T0* T170f60(T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge777os13791;
extern T0* ge777ov13791;
extern T0* T170f59(T0* C);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge777os13759;
extern T0* ge777ov13759;
extern T0* T170f58(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge777os13795;
extern T0* ge777ov13795;
extern T0* T170f57(T0* C);
/* ET_NONE_GROUP.make */
extern T0* T316c12(void);
/* ET_NONE_GROUP.make_builtin */
extern void T316f13(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge777os13780;
extern T0* ge777ov13780;
extern T0* T170f56(T0* C);
/* ET_TOKEN_CONSTANTS.general_class_name */
extern unsigned char ge777os13766;
extern T0* ge777ov13766;
extern T0* T170f55(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T154f42(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.class_name_tester */
extern T0* T56f149(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T154c41(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T154f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T421c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T421f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T1058c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T154f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T154f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T154f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T154f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T154f63(T0* C, T6 a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T124f10(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T277c333(void);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T124f9(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T28c151(void);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T128f40(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T128f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T128f60(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T410f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T128f59(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T410f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T128f17(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T128f25(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T128f20(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T128f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T128f39(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T128f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T128f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T128f27(T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T54f237(T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T54f236(T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T54f234(T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T54f250(T0* C);
/* ET_LACE_PARSER.read_token */
extern void T54f233(T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T54f249(T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T54f198(T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T54f126(T0* C);
/* ET_LACE_PARSER.platform */
extern T0* T54f195(T0* C);
/* STRING_8.to_integer */
extern T6 T17f16(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T920f13(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T920f17(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T950f45(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T920f23(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T920f15(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1238f7(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge2112os24328;
extern T0* ge2112ov24328;
extern T0* T920f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1238c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f4(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f11(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* SPECIAL [NATURAL_64].make */
extern T0* T1352c2(T6 a1);
/* STRING_8.has */
extern T1 T17f32(T0* C, T2 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f24(T6* C);
/* CHARACTER_8.is_digit */
extern T1 T2f10(T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T920f22(T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge2109os1258;
extern T0* ge2109ov1258;
extern T0* T17f20(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T920f21(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T920f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T920f19(T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c58(T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T920f18(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T920c16(void);
/* ET_LACE_PARSER.set_start_condition */
extern void T54f256(T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T54f192(T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T54f175(T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T54f167(T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T54f248(T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T54f255(T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T54f118(T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T54f247(T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T54f245(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T54f117(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T54f116(T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T54f246(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T76f12(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T76f16(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T76f20(T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T54f164(T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T54f194(T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T54f232(T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T54f241(T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T54f253(T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T54f257(T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T54f259(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].clear_all */
extern void T141f6(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].clear_all */
extern void T148f6(T0* C);
/* SPECIAL [ET_LACE_EXCLUDE].clear_all */
extern void T144f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTERS].clear_all */
extern void T140f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTER].clear_all */
extern void T143f6(T0* C);
/* ET_LACE_PARSER.abort */
extern void T54f235(T0* C);
/* DS_ARRAYED_LIST [STRING_8].wipe_out */
extern void T80f28(T0* C);
/* DS_ARRAYED_LIST [STRING_8].clear_items */
extern void T80f34(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_all_cursors_after */
extern void T80f33(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T315f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T315f8(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T128f38(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T128f51(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T128f50(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T128f49(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T128f48(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T128f47(T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T54f226(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T54f231(T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T54f110(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T125f37(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T125f46(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T125f45(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T125f44(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T125f43(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T125f41(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T409f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_position */
extern void T409f5(T0* C, T6 a1);
/* ET_LACE_PARSER.reset */
extern void T54f225(T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T54f230(T0* C);
/* ET_LACE_PARSER.make */
extern T0* T54c222(T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T54f224(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T54f229(T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T54f244(T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge990os5297;
extern T0* ge990ov5297;
extern T0* T54f163(T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T54f219(T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge990os5296;
extern T0* ge990ov5296;
extern T0* T54f162(T0* C);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge990os5295;
extern T0* ge990ov5295;
extern T0* T54f161(T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge990os5294;
extern T0* ge990ov5294;
extern T0* T54f160(T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge990os5293;
extern T0* ge990ov5293;
extern T0* T54f159(T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge990os5292;
extern T0* ge990ov5292;
extern T0* T54f158(T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge990os5291;
extern T0* ge990ov5291;
extern T0* T54f157(T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge990os5290;
extern T0* ge990ov5290;
extern T0* T54f156(T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge990os5289;
extern T0* ge990ov5289;
extern T0* T54f155(T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge990os5288;
extern T0* ge990ov5288;
extern T0* T54f154(T0* C);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T54f243(T0* C);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T54f228(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T54f242(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T54f254(T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T54f258(T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge992os5742;
extern T0* ge992ov5742;
extern T0* T54f208(T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T54f221(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge992os5741;
extern T0* ge992ov5741;
extern T0* T54f207(T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge992os5740;
extern T0* ge992ov5740;
extern T0* T54f206(T0* C);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge992os5739;
extern T0* ge992ov5739;
extern T0* T54f205(T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge992os5738;
extern T0* ge992ov5738;
extern T0* T54f204(T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge992os5737;
extern T0* ge992ov5737;
extern T0* T54f203(T0* C);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge992os5736;
extern T0* ge992ov5736;
extern T0* T54f202(T0* C);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T54f135(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T128c37(T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T128f36(T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T410c4(T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T128f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T128f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T128f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T128f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T125c36(T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T125f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T407c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T407f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T1055c3(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T125f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T409c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T125f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T125f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T125f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T125f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T125f58(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T405c3(void);
/* ET_LACE_AST_FACTORY.make */
extern T0* T124c11(void);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T55c6(void);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T55f4(T0* C);
/* GEC.parse_ecf_file */
extern void T21f36(T0* C, T0* a1);
/* GEC.parse_xace_file */
extern void T21f35(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T44f5(T0* C);
/* ET_XACE_UNIVERSE_PARSER.parse_file */
extern void T43f255(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T111f89(T0* C);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T111f85(T0* C);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T111f177(T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T111f170(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T111f109(T0* C, T2 a1);
/* STRING_8.make_empty */
extern T0* T17c42(void);
/* XM_EIFFEL_PARSER.position */
extern T0* T111f128(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T361f6(T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T111f91(T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T111f125(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T362f7(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T362f4(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T362f3(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T361f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T1029f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1029f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T1029c4(T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].is_empty */
extern T1 T361f5(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T361c8(void);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T361f7(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1030c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T362f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1031f4(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1031c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T362c5(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T44f9(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T44f10(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T44f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T44f11p1(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T44f7(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T103f8(T0* C);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T106f32(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T44f19(T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T931c7(T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T359f5(T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T359f6(T0* C);
/* XM_POSITION_TABLE.item */
extern T0* T101f2(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T946f10(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T947f11(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T947f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T946f13(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T947f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T946f11(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T946f9(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T947f10(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T946f12(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T947f6(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T946f6(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T946f8(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T947f9(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T947f7(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T946c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_system */
extern void T106f35(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].forth */
extern void T288f11(T0* C);
/* XM_DOCUMENT.cursor_forth */
extern void T99f24(T0* C, T0* a1);
/* XM_DOCUMENT.add_traversing_cursor */
extern void T99f28(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_next_cursor */
extern void T288f16(T0* C, T0* a1);
/* XM_DOCUMENT.remove_traversing_cursor */
extern void T99f29(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set */
extern void T288f17(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_ELEMENT.cursor_forth */
extern void T100f46(T0* C, T0* a1);
/* XM_ELEMENT.add_traversing_cursor */
extern void T100f48(T0* C, T0* a1);
/* XM_ELEMENT.remove_traversing_cursor */
extern void T100f49(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T44f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T933c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T106f38(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T106f42(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1046os4337;
extern T0* ge1046ov4337;
extern T0* T106f29(T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1046os4312;
extern T0* ge1046ov4312;
extern T0* T106f27(T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1046os4335;
extern T0* ge1046ov4335;
extern T0* T106f26(T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1046os4338;
extern T0* ge1046ov4338;
extern T0* T106f25(T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1046os4321;
extern T0* ge1046ov4321;
extern T0* T106f13(T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1046os4334;
extern T0* ge1046ov4334;
extern T0* T106f24(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T44f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T44f17(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T44f18(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T299c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1046os4325;
extern T0* ge1046ov4325;
extern T0* T106f11(T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T106f37(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1046os4333;
extern T0* ge1046ov4333;
extern T0* T106f23(T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1046os4332;
extern T0* ge1046ov4332;
extern T0* T106f22(T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1046os4331;
extern T0* ge1046ov4331;
extern T0* T106f21(T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1046os4330;
extern T0* ge1046ov4330;
extern T0* T106f20(T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1046os4329;
extern T0* ge1046ov4329;
extern T0* T106f19(T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1046os4328;
extern T0* ge1046ov4328;
extern T0* T106f18(T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1046os4327;
extern T0* ge1046ov4327;
extern T0* T106f17(T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1046os4317;
extern T0* ge1046ov4317;
extern T0* T106f16(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T44f25(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T937c8(T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1046os4316;
extern T0* ge1046ov4316;
extern T0* T937f7(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].has */
extern T1 T291f35(T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1015os4528;
extern T0* ge1015ov4528;
extern T0* T350f1(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_new */
extern void T291f41(T0* C, T6 a1, T0* a2);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T350f30(T0* C);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge1002os10947;
extern T0* ge1002ov10947;
extern T0* T106f15(T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T350c217(void);
/* XM_ELEMENT.attribute_by_name */
extern T0* T100f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].go_after */
extern void T288f12(T0* C);
/* XM_DOCUMENT.cursor_go_after */
extern void T99f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_after */
extern void T288f15(T0* C);
/* XM_DOCUMENT.cursor_off */
extern T1 T99f14(T0* C, T0* a1);
/* XM_ELEMENT.cursor_go_after */
extern void T100f47(T0* C, T0* a1);
/* XM_ELEMENT.cursor_off */
extern T1 T100f25(T0* C, T0* a1);
/* XM_ELEMENT.attribute_same_name */
extern T1 T100f9(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T100f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T100f13(T0* C);
/* XM_NODE_TYPER.is_attribute */
extern T1 T1421f9(T0* C);
/* XM_NODE_TYPER.default_create */
extern T0* T1421c10(void);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1046os4324;
extern T0* ge1046ov4324;
extern T0* T106f10(T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T106f36(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T106f41(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T44f24(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T936c7(T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1046os4339;
extern T0* ge1046ov4339;
extern T0* T106f14(T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1046os4320;
extern T0* ge1046ov4320;
extern T0* T106f9(T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T106f39(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T106f43(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T106f44(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T44f23(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T935c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T106f34(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T44f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T296c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1046os4315;
extern T0* ge1046ov4315;
extern T0* T106f5(T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1046os4323;
extern T0* ge1046ov4323;
extern T0* T106f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].item */
extern T0* T288f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].start */
extern void T288f10(T0* C);
/* XM_DOCUMENT.cursor_start */
extern void T99f23(T0* C, T0* a1);
/* XM_ELEMENT.cursor_start */
extern void T100f45(T0* C, T0* a1);
/* XM_ELEMENT.new_cursor */
extern T0* T100f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].make */
extern T0* T288c9(T0* a1);
/* ET_XACE_VALIDATOR.validate_root */
extern void T106f40(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1046os4313;
extern T0* ge1046ov4313;
extern T0* T106f28(T0* C);
/* XM_ELEMENT.element_by_name */
extern T0* T100f21(T0* C, T0* a1);
/* XM_ELEMENT.named_same_name */
extern T1 T100f10(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T100f12(T0* C, T0* a1);
/* XM_ELEMENT.has_namespace */
extern T1 T100f14(T0* C);
/* XM_NODE_TYPER.is_element */
extern T1 T1421f8(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T44f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T934c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_element_by_name */
extern T1 T100f20(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1046os4311;
extern T0* ge1046ov4311;
extern T0* T106f12(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T44f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T932c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T100f18(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T106f7(T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1046os4310;
extern T0* ge1046ov4310;
extern T0* T106f6(T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T106f3(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].wipe_out */
extern void T108f38(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_wipe_out */
extern void T108f46(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_wipe_out */
extern void T108f45(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_wipe_out */
extern void T108f44(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_wipe_out */
extern void T108f43(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].unset_found_item */
extern void T108f42(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].move_all_cursors_after */
extern void T108f41(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8].set_next_cursor */
extern void T355f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8].set_position */
extern void T355f5(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_root_class_name */
extern void T53f172(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_class */
extern void T53f195(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_universe */
extern T0* T43f18(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE.set_trace_mode */
extern void T53f177(T0* C, T1 a1);
/* ET_XACE_OPTIONS.trace */
extern T1 T279f126(T0* C);
/* UT_TRISTATE.is_true */
extern T1 T975f2(T0* C);
/* ET_XACE_OPTIONS.is_trace_declared */
extern T1 T279f106(T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T975f4(T0* C);
/* UT_TRISTATE.is_false */
extern T1 T975f3(T0* C);
/* ET_XACE_UNIVERSE.set_exception_trace_mode */
extern void T53f176(T0* C, T1 a1);
/* ET_XACE_OPTIONS.exception_trace */
extern T1 T279f125(T0* C);
/* ET_XACE_OPTIONS.is_exception_trace_declared */
extern T1 T279f103(T0* C);
/* ET_XACE_UNIVERSE.set_console_application_mode */
extern void T53f175(T0* C, T1 a1);
/* ET_XACE_OPTIONS.console_application */
extern T1 T279f124(T0* C);
/* ET_XACE_OPTIONS.is_console_application_declared */
extern T1 T279f100(T0* C);
/* ET_XACE_UNIVERSE_PARSER.replace_all_characters */
extern T0* T43f17(T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T950f62(T0* C, T2 a1, T6 a2);
/* ET_XACE_UNIVERSE.merge_externals */
extern void T53f174(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T285f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T286f7(T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T280f4(T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T283f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].forth */
extern void T315f11(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T80f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T80f38(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T80f39(T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T278f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].item */
extern T0* T315f5(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T80f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T315f4(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T80f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].start */
extern void T315f10(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T80f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T80f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T315f6(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T80f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].cursor_before */
extern T1 T80f14(T0* C, T0* a1);
/* ET_XACE_OPTIONS.link */
extern T0* T279f129(T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1014os19280;
extern T0* ge1014ov19280;
extern T0* T279f117(T0* C);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T80f41(T0* C, T0* a1);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T279f115(T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T278f6(T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T279f128(T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1014os19269;
extern T0* ge1014ov19269;
extern T0* T279f114(T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T279f112(T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T278f5(T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T279f127(T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1014os19246;
extern T0* ge1014ov19246;
extern T0* T279f111(T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T279f109(T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T278c4(void);
/* ET_XACE_UNIVERSE.mount_libraries */
extern void T53f173(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T285f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T280f11(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T283f58(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T280f10(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T283f59(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T280f14(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.fill_system */
extern void T43f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.set_libraries */
extern void T53f182(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_options */
extern void T53f181(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_creation_procedure_name */
extern void T53f180(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_creation */
extern void T53f196(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_system_name */
extern void T53f179(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_clusters */
extern void T53f178(T0* C, T0* a1);
/* ET_XACE_LIBRARY.merge_libraries */
extern void T290f13(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T285f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T284f10(T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T284f6(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T284f7(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T284f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T44f29(T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T1478c7(T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T285f4(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T285f3(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T285f7(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T286f6(T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T280f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T283f56(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_externals */
extern void T43f259(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_CLUSTER.put_class_option */
extern void T283f44(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T976f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1246f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1246c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].is_empty */
extern T1 T976f5(T0* C);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T976c7(void);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T976f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1245c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_export */
extern T0* T43f146(T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T279f162(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T930f5(T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T294f5(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T930f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1240f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1240c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T930c7(void);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T930f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1239c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_exported_feature */
extern T0* T43f251(T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T98f8(T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T929c3(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_alias */
extern unsigned char ge1046os4336;
extern T0* ge1046ov4336;
extern T0* T43f253(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_feature */
extern T0* T43f250(T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T98f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T294c4(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_export */
extern T0* T43f145(T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T279f173(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force_last */
extern void T211f69(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_include_dir */
extern T0* T43f144(T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T279f184(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_location */
extern T0* T43f143(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_link_library */
extern T0* T43f142(T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T98f3(T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T279c133(void);
/* ET_XACE_UNIVERSE_PARSER.uc_external */
extern T0* T43f31(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_options */
extern T0* T43f30(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_options */
extern void T43f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.uc_debug */
extern T0* T43f141(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_optimize */
extern T0* T43f140(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_check */
extern T0* T43f138(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_loop */
extern T0* T43f135(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_invariant */
extern T0* T43f133(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_ensure */
extern T0* T43f131(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_enable */
extern unsigned char ge1046os4326;
extern T0* ge1046ov4326;
extern T0* T43f129(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_require */
extern T0* T43f128(T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T279f224(T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T975f7(T0* C);
/* UT_TRISTATE.set_true */
extern void T975f6(T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T975c5(void);
/* UT_TRISTATE.set_undefined */
extern void T975f8(T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T279f223(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1014os19135;
extern T0* ge1014ov19135;
extern T0* T279f122(T0* C);
/* DS_HASH_SET [STRING_8].put_last */
extern void T211f68(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T211f70(T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T211f72(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T211f71(T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.options */
extern T0* T279f99(T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T279f222(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T279f221(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T279f220(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T279f219(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T279f218(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T279f217(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T279f216(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1014os19133;
extern T0* ge1014ov19133;
extern T0* T279f120(T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T279f215(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T279f214(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T279f213(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T279f212(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T279f211(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T279f210(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T279f209(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T279f208(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T279f207(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T279f206(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T279f205(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T279f204(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T279f203(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T279f202(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_old_verbatim_strings */
extern void T279f201(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T279f200(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T279f199(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T279f198(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_use_optimized_precompile */
extern void T279f197(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_key_file_name */
extern void T279f196(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T279f195(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T279f194(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_culture */
extern void T279f193(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T279f192(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_classes_per_module */
extern void T279f191(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T279f190(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T279f189(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T279f188(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T279f187(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T279f186(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T279f185(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1014os19132;
extern T0* ge1014ov19132;
extern T0* T279f118(T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T279f183(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T279f182(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T279f181(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T279f180(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1014os19131;
extern T0* ge1014ov19131;
extern T0* T279f116(T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T279f179(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T279f178(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T279f177(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1014os19130;
extern T0* ge1014ov19130;
extern T0* T279f113(T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T279f176(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T279f175(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T279f174(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T279f172(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T279f171(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T279f170(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1014os19129;
extern T0* ge1014ov19129;
extern T0* T279f110(T0* C);
/* ET_XACE_OPTIONS.set_full_class_checking */
extern void T279f169(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T279f168(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T44f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T298c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T279f167(T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T950f36(T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T950f44(T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T950f35(T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T950f43(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T920f12(T0* C);
/* STRING_8.is_integer */
extern T1 T17f23(T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f28(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_force_32bits */
extern void T279f166(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T279f165(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T279f164(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_external_runtime */
extern void T279f163(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T279f161(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T279f160(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_enforce_unique_class_names */
extern void T279f159(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_ecf_library */
extern void T279f158(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T279f157(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T279f156(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T279f155(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T279f154(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T279f153(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T279f152(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T279f151(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1014os19128;
extern T0* ge1014ov19128;
extern T0* T279f107(T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T279f150(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T279f149(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T279f148(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T279f147(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T279f146(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T279f145(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T279f144(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T279f143(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T279f142(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T279f141(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1014os19127;
extern T0* ge1014ov19127;
extern T0* T279f104(T0* C);
/* ET_XACE_OPTIONS.set_automatic_backup */
extern void T279f140(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T44f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T297c7(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T297f4(T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T279f139(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1014os19126;
extern T0* ge1014ov19126;
extern T0* T279f101(T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T279f138(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T279f137(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T279f136(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T279f135(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T44f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T295c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_UNIVERSE_PARSER.is_false */
extern T1 T43f127(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T279f134(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.is_true */
extern T1 T43f126(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.option_codes */
extern T0* T43f33(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_equality_tester */
extern T0* T43f152(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_value */
extern T0* T43f32(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_option */
extern T0* T43f29(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T285f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T286f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T286f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].resize */
extern T0* T978f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].resized_area */
extern T0* T977f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].copy_data */
extern void T977f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].move_data */
extern void T977f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].overlapping_move */
extern void T977f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].non_overlapping_move */
extern void T977f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T977c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T286f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T286f9(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T98f2(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T285c5(void);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T286c11(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T286f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T979c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T978f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_area */
extern T0* T1247c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T978c3(void);
/* ET_XACE_UNIVERSE_PARSER.new_mount */
extern T0* T43f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T284f9(T0* C, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T98f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T284c8(T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T44f27(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.parse_library */
extern void T110f246(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_library */
extern void T110f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY.set_libraries */
extern void T290f12(T0* C, T0* a1);
/* ET_XACE_LIBRARY.set_clusters */
extern void T290f11(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.fill_externals */
extern void T110f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.new_export */
extern T0* T110f136(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_exported_feature */
extern T0* T110f241(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_alias */
extern T0* T110f243(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_feature */
extern T0* T110f240(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_class */
extern T0* T110f139(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_export */
extern T0* T110f135(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_include_dir */
extern T0* T110f134(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_location */
extern T0* T110f133(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_link_library */
extern T0* T110f132(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_external */
extern T0* T110f21(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_options */
extern T0* T110f20(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_options */
extern void T110f248(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_PARSER.uc_debug */
extern T0* T110f131(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_optimize */
extern T0* T110f130(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_check */
extern T0* T110f128(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_loop */
extern T0* T110f125(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_invariant */
extern T0* T110f123(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_ensure */
extern T0* T110f121(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_enable */
extern T0* T110f119(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_require */
extern T0* T110f118(T0* C);
/* ET_XACE_LIBRARY_PARSER.is_false */
extern T1 T110f117(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.is_true */
extern T1 T110f116(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.option_codes */
extern T0* T110f23(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_equality_tester */
extern T0* T110f141(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_value */
extern T0* T110f22(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_option */
extern T0* T110f19(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_mount */
extern T0* T110f18(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.execution_environment */
extern T0* T110f143(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_mount */
extern T0* T110f17(T0* C);
/* ET_XACE_LIBRARY.set_library_prefix */
extern void T290f10(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_prefix */
extern unsigned char ge1046os4322;
extern T0* ge1046ov4322;
extern T0* T110f16(T0* C);
/* ET_XACE_LIBRARY.set_options */
extern void T290f9(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.new_cluster */
extern T0* T110f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_libraries */
extern void T283f50(T0* C, T0* a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T279f97(T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T279f96(T0* C);
/* ET_XACE_OPTIONS.recursive */
extern T1 T279f95(T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T279f94(T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T283f45(T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T279f93(T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T279f92(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_class */
extern T0* T110f140(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_feature */
extern T0* T110f242(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T283f43(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T283f42(T0* C, T1 a1);
/* ET_XACE_LIBRARY_PARSER.uc_relative */
extern unsigned char ge1046os4319;
extern T0* ge1046ov4319;
extern T0* T110f138(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T44f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T938c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.uc_abstract */
extern unsigned char ge1046os4318;
extern T0* ge1046ov4318;
extern T0* T110f137(T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T98f4(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_cluster */
extern T0* T110f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_ */
extern T0* T110f12(T0* C);
/* ET_XACE_LIBRARY.set_name */
extern void T290f8(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_name */
extern T0* T110f142(T0* C);
/* ET_XACE_UNIVERSE_PARSER.execution_environment */
extern T0* T43f153(T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T950f54(T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].force_new */
extern void T108f53(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_put */
extern void T108f59(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_put */
extern void T108f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_put */
extern void T108f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_put */
extern void T108f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_item */
extern T6 T108f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].hash_position */
extern T6 T108f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_item */
extern T6 T108f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].resize */
extern void T108f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].clashes_resize */
extern void T108f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].special_integer_ */
extern T0* T108f22(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_resize */
extern void T108f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_resize */
extern void T108f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].resize */
extern T0* T357f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY].resized_area */
extern T0* T356f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY].copy_data */
extern void T356f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_LIBRARY].move_data */
extern void T356f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].overlapping_move */
extern void T356f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].non_overlapping_move */
extern void T356f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].make */
extern T0* T356c4(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].key_storage_item */
extern T0* T108f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].slots_resize */
extern void T108f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].new_modulus */
extern T6 T108f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].new_capacity */
extern T6 T108f26(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T98f5(T0* C);
/* ET_XACE_LIBRARY.make */
extern T0* T290c7(void);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].found_item */
extern T0* T108f24(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].item_storage_item */
extern T0* T108f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].found */
extern T1 T108f23(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].search */
extern void T108f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].search_position */
extern void T108f54(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_prefix */
extern T0* T43f149(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_mount */
extern T0* T43f27(T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T98f1(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T280c5(T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T442f11(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_cluster */
extern T0* T43f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.new_class */
extern T0* T43f150(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.new_feature */
extern T0* T43f252(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_relative */
extern T0* T43f148(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_abstract */
extern T0* T43f147(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_cluster */
extern T0* T43f24(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_creation */
extern T0* T43f23(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_class */
extern T0* T43f22(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_root */
extern T0* T43f21(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_name */
extern T0* T43f20(T0* C);
/* ET_XACE_UNIVERSE.make_with_factory */
extern T0* T53c163(T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.make_basic_classes */
extern void T53f184(T0* C);
/* ET_XACE_UNIVERSE.class_name_tester */
extern T0* T53f155(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_ast_factory */
extern T0* T43f16(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_error_handler */
extern T0* T43f15(T0* C);
/* XM_ELEMENT.set_name */
extern void T100f30(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_system */
extern T0* T43f14(T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T107f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.remove_at_cursor */
extern void T100f31(T0* C, T0* a1);
/* XM_ELEMENT.move_all_cursors */
extern void T100f38(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_current_cell */
extern void T288f13(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put */
extern void T1420f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put_right */
extern void T1420f4(T0* C, T0* a1);
/* XM_ELEMENT.set_last_cell */
extern void T100f37(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].forget_right */
extern void T1420f5(T0* C);
/* XM_ELEMENT.remove_last */
extern void T100f36(T0* C);
/* XM_ELEMENT.move_last_cursors_after */
extern void T100f43(T0* C);
/* XM_ELEMENT.wipe_out */
extern void T100f41(T0* C);
/* XM_ELEMENT.move_all_cursors_after */
extern void T100f44(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_last */
extern T1 T288f7(T0* C);
/* XM_DOCUMENT.cursor_is_last */
extern T1 T99f11(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_last */
extern T1 T100f23(T0* C, T0* a1);
/* XM_ELEMENT.remove_first */
extern void T100f35(T0* C);
/* XM_ELEMENT.set_first_cell */
extern void T100f42(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_first */
extern T1 T288f6(T0* C);
/* XM_DOCUMENT.cursor_is_first */
extern T1 T99f12(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_first */
extern T1 T100f24(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T107f3(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T44f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1217c7(T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T107f8(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T107f4(T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T107f9(T0* C);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T107f7(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1046os4341;
extern T0* ge1046ov4341;
extern T0* T107f6(T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1046os4340;
extern T0* ge1046ov4340;
extern T0* T107f5(T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T107f12(T0* C, T0* a1);
/* XM_ATTRIBUTE.set_value */
extern void T287f7(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T106f31(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T106f33(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1046os4314;
extern T0* ge1046ov4314;
extern T0* T106f4(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_library */
extern T0* T43f151(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_ */
extern T0* T43f19(T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T103f5(T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T111f121(T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T111f203(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T111f209(T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T111f215(T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T111f214(T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T111f224(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T111f223(T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T111f222(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T111f252(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T396f8(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T368f6(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].resize */
extern T0* T394f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].resized_area */
extern T0* T379f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].copy_data */
extern void T379f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_EXTERNAL_ID].move_data */
extern void T379f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].overlapping_move */
extern void T379f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].non_overlapping_move */
extern void T379f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make */
extern T0* T379c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T394f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_EXTERNAL_ID].make_area */
extern T0* T1053c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T394c3(void);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T368f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T111f169(T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T368c4(void);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T111f251(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force */
extern void T363f40(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T363f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T363f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T363f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T363f31(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T363f28(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T363f25(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T363f51(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T363f59(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T363f32(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T363f58(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T363f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].resize */
extern T0* T1037f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].resized_area */
extern T0* T1032f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].copy_data */
extern void T1032f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].move_data */
extern void T1032f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].overlapping_move */
extern void T1032f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].non_overlapping_move */
extern void T1032f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1032c4(T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T363f22(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T363f56(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T363f29(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T363f23(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T363f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T363f42(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T363f45(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T363f33(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T399c208(T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T399f210(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T365c4(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T399f211(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T399f213(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T399f216(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T399f213p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T399f213p0(T0* C);
/* DS_LINKED_STACK [INTEGER_32].make */
extern T0* T1028c5(void);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T399f213p2(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T399f212(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T399f215(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T399f218(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T399f70(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T399f214(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T399f217(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1300os20248;
extern T0* ge1300ov20248;
extern T0* T399f50(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T399f54(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1300os20247;
extern T0* ge1300ov20247;
extern T0* T399f91(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1300os20246;
extern T0* ge1300ov20246;
extern T0* T399f69(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1300os20245;
extern T0* ge1300ov20245;
extern T0* T399f59(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1300os20244;
extern T0* ge1300ov20244;
extern T0* T399f52(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1300os20237;
extern T0* ge1300ov20237;
extern T0* T399f49(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T399f230(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T399f231(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T399f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T399f229(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T399f228(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T399f227(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T399f226(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T399f225(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1300os20230;
extern T0* ge1300ov20230;
extern T0* T399f65(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T399f224(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T399f223(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T399f222(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T399f221(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T399f220(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T399f219(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T399f58(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1027c8(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T399f209(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T393f51(T0* C);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T111f168(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T393c207(T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T393f208(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T393f210(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T393f210p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T393f210p0(T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T393f209(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T393f212(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T393f214(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T393f57(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T393f211(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T393f213(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T393f48(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T393f53(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T393f88(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T393f67(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T393f58(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T393f50(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T393f47(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T393f226(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T393f227(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T393f54(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T393f225(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T393f224(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T393f223(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T393f222(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T393f221(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T393f64(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T393f220(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T393f219(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T393f218(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T393f217(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T393f216(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T393f215(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T393f49(T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T111f250(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T396f7(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T111f249(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T111f167(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T393c206(T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T372f26(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T372f25(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T372f24(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T372f23(T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].resize */
extern T0* T392f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].resized_area */
extern T0* T391f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].copy_data */
extern void T391f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].move_data */
extern void T391f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].overlapping_move */
extern void T391f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].non_overlapping_move */
extern void T391f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T391c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T392f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [STRING_8]].make_area */
extern T0* T1052c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T392c3(void);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T373f12(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].put_right */
extern void T1044f5(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].attach_left */
extern void T1044f6(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].make */
extern T0* T1044c4(T0* a1);
/* DS_BILINKED_LIST [STRING_8].is_empty */
extern T1 T373f7(T0* C);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T111f162(T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T373f13(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T111f182(T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T373c11(void);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T373f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1043c7(T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T372f22(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T372f27(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1211os20719;
extern T0* ge1211ov20719;
extern T0* T372f7(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T372f21(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T372f20(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T372f19(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T372f18(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T372f17(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T372f16(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T372f15(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T111f160(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T372c12(void);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].resize */
extern T0* T390f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].resized_area */
extern T0* T388f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].copy_data */
extern void T388f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].move_data */
extern void T388f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].overlapping_move */
extern void T388f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].non_overlapping_move */
extern void T388f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T388c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T390f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_area */
extern T0* T1051c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T390c3(void);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T372f14(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T372f11(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T372f10(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T372f9(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T372f8(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T372f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resize */
extern T0* T389f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resized_area */
extern T0* T386f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].copy_data */
extern void T386f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].move_data */
extern void T386f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].overlapping_move */
extern void T386f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].non_overlapping_move */
extern void T386f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T386c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T389f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_area */
extern T0* T1050c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T389c3(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T371f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1042f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1042f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1042c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].is_empty */
extern T1 T371f5(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T111f153(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T371c8(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T371f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1041c7(T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T111f248(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1041f9(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T371f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T371f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1041f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T371f13(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1041f10(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T111f258(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T396f9(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1041f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1041f8(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T371f10(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T371f7(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T370f11(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T370c10(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T370f21(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T370f19(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T370f16(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T370f22(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T370f12(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T370f20(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1040c7(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1040f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1298c3(T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T370c9(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1040f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1299f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1299f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1299c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].is_empty */
extern T1 T1040f5(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T370c8(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1040f8(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T111f147(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T370c15(T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T111f247(T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T370f14(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T370f13(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T370c7(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T370f18(T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].resize */
extern T0* T384f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].resized_area */
extern T0* T383f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].copy_data */
extern void T383f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].move_data */
extern void T383f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].overlapping_move */
extern void T383f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].non_overlapping_move */
extern void T383f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T383c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T384f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT].make_area */
extern T0* T1049c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T384c3(void);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T370c6(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T370f17(T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T111f246(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T396f6(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T111f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T369f30(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T369f34(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T369f22(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T369f24(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T366f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T366f14(T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T373f8(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1038f1(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].any_ */
extern T0* T1038f2(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T369f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T369f29(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T369f17(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T369f25(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resize */
extern T0* T382f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resized_area */
extern T0* T381f2(T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].copy_data */
extern void T381f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].move_data */
extern void T381f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].overlapping_move */
extern void T381f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].non_overlapping_move */
extern void T381f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T381c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T382f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_area */
extern T0* T1048c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T382c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T369f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T369f40(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T369f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T369f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T369f37(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T369f48(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T369f28(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T369f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T369f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T369f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T369f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T369f26(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T369f36(T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T111f134(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T369c32(T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1038c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T369f35(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T369f21(T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1039c3(T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T369f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T369f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T369f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T369f41(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T111f244(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T111f243(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T366f12(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1043f9(T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T373f15(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T373f16(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1043f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T373f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1043f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1043f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1043f8(T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T373f14(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T373f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T366f18(T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T366f17(T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T373f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T366f11(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T366f16(T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T111f242(T0* C);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T111f241(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T365f2(T0* C);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1298os11102;
extern T0* ge1298ov11102;
extern T0* T111f103(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T397c198(void);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T397f205(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T397f198p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T397f207(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T397f207p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T397f206(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T397f217(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T397f218(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T397f184(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T397f216(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T397f221(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T397f192(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T397f195(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T397f191(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T397f190(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T397f189(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T397f188(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T397f187(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T397f233(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T397f234(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T397f197(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T397f232(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T397f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T397f230(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T397f229(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T397f228(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T397f186(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T397f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T397f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T397f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T397f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T397f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T397f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T397f49(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T362f8(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.has_error */
extern T1 T365f1(T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T111f257(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T365f6(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T365f5(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.is_public */
extern T1 T368f3(T0* C);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T111f240(T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T396f5(T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T111f239(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T396f4(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T396c1(void);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T367f9(T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T367f8(T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T367f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].resize */
extern T0* T377f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].resized_area */
extern T0* T376f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].copy_data */
extern void T376f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_DECLARATION].move_data */
extern void T376f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].overlapping_move */
extern void T376f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].non_overlapping_move */
extern void T376f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].make */
extern T0* T376c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T377f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_DECLARATION].make_area */
extern T0* T1046c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T377c3(void);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T367c7(void);
/* XM_EIFFEL_DECLARATION.process */
extern void T367f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T111f261(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T111f238(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T111f237(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T111f236(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T396f3(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T111f235(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T111f234(T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T396f2(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T111f233(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T111f117(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T111f194(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T111f200(T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f60(T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T365f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T951f30(T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T152f2(T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T111f201(T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T951c29(T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1243c6(void);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T365f3(T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T393f62(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T399f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T399f66(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T363f21(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T363f36(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.force_error */
extern void T111f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T111f230(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T111f256(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T111f255(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T111f96(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T111f189(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T111f188(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T111f184(T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T950c55(T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T950f71(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T949f1(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T949f10(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T949f5(T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T949f2(T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T111f187(T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T111f185(T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T111f94(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T111f183(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T111f115(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1298os11170;
extern T0* ge1298ov11170;
extern T0* T111f193(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1298os11171;
extern T0* ge1298ov11171;
extern T0* T111f192(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T111f199(T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T950c56(void);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].resize */
extern T0* T375f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].resized_area */
extern T0* T374f2(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].copy_data */
extern void T374f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].move_data */
extern void T374f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].overlapping_move */
extern void T374f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].non_overlapping_move */
extern void T374f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make */
extern T0* T374c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T375f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME].make_area */
extern T0* T1045c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T375c3(void);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T111f231(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T366f20(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T366f7(T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T366f8(T0* C);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T366f6(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T111f111(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T366f21(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T366c21(void);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T366c19(void);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T111f221(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T111f220(T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T111f218(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T111f229(T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T111f217(T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T111f228(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T111f254(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T393f229(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T399f233(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_error */
extern T1 T393f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.has_error */
extern T1 T399f56(T0* C);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T393f228(T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1430c8(T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T949f35(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T949f37(T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T949f29(T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T393f66(T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T393f236(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T399f232(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T399f68(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T399f240(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity */
extern void T111f227(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T111f226(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T111f113(T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T111f216(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T111f225(T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T111f253(T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T111f259(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T111f260(T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].clear_all */
extern void T376f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].clear_all */
extern void T391f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].clear_all */
extern void T386f6(T0* C);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].clear_all */
extern void T388f6(T0* C);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].clear_all */
extern void T383f6(T0* C);
/* SPECIAL [XM_DTD_EXTERNAL_ID].clear_all */
extern void T379f6(T0* C);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].clear_all */
extern void T381f6(T0* C);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].clear_all */
extern void T374f6(T0* C);
/* XM_EIFFEL_PARSER.abort */
extern void T111f219(T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T111f213(T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T349c1(void);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T111f212(T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T111f208(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T363f39(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T363f49(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T363f48(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T363f47(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T363f46(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T363f44(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1035f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_position */
extern void T1035f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T111f206(T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T358c196(void);
/* XM_EIFFEL_SCANNER.reset */
extern void T358f204(T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T358f204p1(T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T358f203(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T358f212(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T358f213(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T358f182(T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T358f211(T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T358f219(T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T358f190(T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T358f193(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T358f189(T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T358f188(T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T358f187(T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T358f186(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T358f185(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T358f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T358f232(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T358f195(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T358f230(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T358f229(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T358f228(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T358f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T358f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T358f184(T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T358f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T358f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T358f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T358f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T358f221(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T358f220(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T358f42(T0* C);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables */
extern T0* T43c254(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables_and_factory */
extern void T43f256(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T105f10(T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T101c3(void);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T947c8(void);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T111f205(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T103c10(void);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T103f9(T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T348f4(T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T105c9(void);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T103f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T104c4(void);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T103f6(T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T346c25(void);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T111f204(T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T111c202(void);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T111f87(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T363f41(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].internal_set_equality_tester */
extern void T1033f6(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T363c38(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T363f43(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T363f55(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1033c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T1033f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1296c3(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T363f35(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1035c4(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T363f60(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T363f64(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T363f63(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T363f62(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T363f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1037f2(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF].make_area */
extern T0* T1297c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1037c3(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T363f26(T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T111f207(T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T111f211(T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1294os11049;
extern T0* ge1294ov11049;
extern T0* T111f104(T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T111f181(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1294os11048;
extern T0* ge1294ov11048;
extern T0* T111f92(T0* C);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1294os11047;
extern T0* ge1294ov11047;
extern T0* T111f90(T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1294os11046;
extern T0* ge1294ov11046;
extern T0* T111f88(T0* C);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1294os11045;
extern T0* ge1294ov11045;
extern T0* T111f86(T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1294os11044;
extern T0* ge1294ov11044;
extern T0* T111f84(T0* C);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1294os11043;
extern T0* ge1294ov11043;
extern T0* T111f171(T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1294os11042;
extern T0* ge1294ov11042;
extern T0* T111f151(T0* C);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1294os11041;
extern T0* ge1294ov11041;
extern T0* T111f126(T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1294os11040;
extern T0* ge1294ov11040;
extern T0* T111f123(T0* C);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T111f210(T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T109f2(T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T109f1(T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T109c3(void);
/* ET_XACE_VALIDATOR.make */
extern T0* T106c30(T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T107c10(T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.set_parsed_libraries */
extern void T110f245(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.make_with_variables_and_factory */
extern T0* T110c244(T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].set_key_equality_tester */
extern void T108f39(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8].internal_set_equality_tester */
extern void T353f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_map */
extern T0* T108c37(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_with_equality_testers */
extern void T108f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8].make */
extern T0* T353c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING_8].new_cursor */
extern T0* T353f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING_8].make */
extern T0* T1025c3(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].new_cursor */
extern T0* T108f32(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING_8].make */
extern T0* T355c4(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_sparse_container */
extern void T108f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_slots */
extern void T108f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_clashes */
extern void T108f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_key_storage */
extern void T108f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING_8].make_item_storage */
extern void T108f48(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].make */
extern T0* T357f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_LIBRARY].make_area */
extern T0* T1026c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].default_create */
extern T0* T357c3(void);
/* ET_XACE_AST_FACTORY.make */
extern T0* T98c9(void);
/* UC_UTF8_STRING.index_of */
extern T6 T950f12(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T950f33(T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f26(T0* C, T2 a1, T6 a2);
/* GEC.execution_environment */
extern T0* T21f18(T0* C);
/* GEC.string_equality_tester */
extern T0* T21f17(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T44c8(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T44f6(T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T26f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T26f4(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T950f41(T0* C, T0* a1);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T950f34(T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T950f27(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.substring */
extern T0* T950f14(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T950c61(T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f18(T0* C, T6 a1, T6 a2);
/* GEC.string_ */
extern T0* T21f14(T0* C);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T22f10(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T22f19(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f40(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T22f43(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T22f18(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f43p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T22f20(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T22f14(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T275f5(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T275f3(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T22f39(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T22c39(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T22f42(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T22f24(T0* C);
/* GEC.parse_arguments */
extern void T21f34(T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T32c20(T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T37f18(T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T96f7(T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T80f10(T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T24f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T41f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T82f21(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T82f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T338f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T82f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T338f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T82f26(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T41f15(T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T97f5(T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T97f12(T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T97f8(T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T97f4(T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T97f10(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge59os4257;
extern T0* ge59ov4257;
extern T0* T41f25(T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T97f11(T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T97c9(void);
/* STRING_8.make_filled */
extern T0* T17c43(T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f45(T0* C, T2 a1);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f10(T0* C, T2 a1, T6 a2, T6 a3);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T71f2(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge312os9458;
extern T0* ge312ov9458;
extern T0* T71f9(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T71f8(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T70f2(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge314os9458;
extern T0* ge314ov9458;
extern T0* T70f12(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T70f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern unsigned char ge323os1721;
extern T0* ge323ov1721;
extern T0* T41f17(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T23c4(void);
/* KL_ARGUMENTS.argument */
extern T0* T23f2(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T41f16(T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T41f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T41f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T41f9(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T31f16(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T31f18(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T31f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T84f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T31f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T84f7(T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T31f6(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T31f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T31f5(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T31f7(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T31f15(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T31f17(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T31f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T82f8(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T82f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item */
extern T0* T82f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T82f9(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T82f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T82f20(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T82f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T82f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T338f4(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_off */
extern T1 T82f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_before */
extern T1 T82f17(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T41f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T81f23(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T81f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T334f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T81f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T334f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T81f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T81f7(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T81f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T81f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T81f9(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T81f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T81f22(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T81f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T81f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T334f4(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_off */
extern T1 T81f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_before */
extern T1 T81f19(T0* C, T0* a1);
/* GEC.report_version_number */
extern void T21f40(T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T24f9(T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T69c7(T0* a1);
/* AP_PARSER.parse_arguments */
extern void T30f28(T0* C);
/* AP_PARSER.parse_list */
extern void T30f30(T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T30f34(T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge325os1719;
extern T0* ge325ov1719;
extern T0* T30f21(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T29c1(void);
/* AP_ERROR_HANDLER.report_error_message */
extern void T83f10(T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T83f10p1(T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T30f33(T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T32c22(T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T83f9(T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T83f6(T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T32c21(T0* a1);
/* AP_PARSER.parse_argument */
extern void T30f32(T0* C);
/* AP_PARSER.parse_short */
extern void T30f36(T0* C);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T32c24(T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T80f16(T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T32c23(T0* a1);
/* CHARACTER_8.out */
extern T0* T2f1(T2* C);
/* AP_PARSER.parse_long */
extern void T30f35(T0* C);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T32c25(T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T30f23(T0* C);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T80f26(T0* C);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T80f15(T0* C);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T80f8(T0* C);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T80f25(T0* C);
/* AP_PARSER.reset_parser */
extern void T30f31(T0* C);
/* AP_PARSER.all_options */
extern T0* T30f15(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T81f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T81c20(T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T81f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T334c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T337f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_OPTION].make_area */
extern T0* T1020c2(T6 a1);
/* SPECIAL [AP_OPTION].make */
extern T0* T336c4(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T337c3(void);
/* AP_ERROR_HANDLER.reset */
extern void T83f8(T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T80f24(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T80f30(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T80f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T80f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T80f35(T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T30f17(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T82f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T82f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern T0* T340f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].resized_area */
extern T0* T339f3(T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].copy_data */
extern void T339f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].move_data */
extern void T339f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].overlapping_move */
extern void T339f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].non_overlapping_move */
extern void T339f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T339c4(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T82f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T82f12(T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T31c11(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T31f14(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T31f10(T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T84c6(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T31f13(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T31f12(T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T33c20(T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T33f22(T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T33f24(T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T33f21(T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T37f24(T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T37f23(T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T37c22(T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T37f26(T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T37f25(T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T37f25p1(T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T37f25p0(T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T36f27(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T36f26(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T36c25(T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T36f29(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T36f28(T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T36f28p1(T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T36f28p0(T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T35f27(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T35f26(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T35f31(T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T88f21(T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T88f11(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T88f8(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T88f9(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T88f7(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T88f13(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T88f6(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T88f20(T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T35f25(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T35c24(T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T35f29(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28(T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T88f19(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T35f13(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28p1(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28p0(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28p2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T81f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T81f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].resize */
extern T0* T337f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].resized_area */
extern T0* T336f3(T0* C, T6 a1);
/* SPECIAL [AP_OPTION].copy_data */
extern void T336f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_OPTION].move_data */
extern void T336f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].overlapping_move */
extern void T336f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].non_overlapping_move */
extern void T336f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T81f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T81f15(T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T33f19(T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T33c18(T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T30f27(T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T30f26(T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T30c25(void);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T41f37(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T41c36(T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T41f40(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T41f39(T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T41f38(T0* C);
/* AP_PARSER.make_empty */
extern void T30f29(T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T83c7(void);
/* AP_ERROR_HANDLER.std */
extern T0* T83f5(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T82c18(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T82f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T338c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T340f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_area */
extern T0* T1021c2(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T340c3(void);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T24c6(void);
/* UT_ERROR_HANDLER.std */
extern T0* T24f4(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T23f5(T0* C, T0* a1);
/* GEC.arguments */
extern T0* T21f16(T0* C);
/* KL_EXCEPTIONS.die */
extern void T29f2(T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T21f15(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T944f18(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T227f14(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T223f16(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T189f17(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T944f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T155f9(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T155f19(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T944f17p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T332f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1329f3(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T332f18p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T234f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T233f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T229f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T227f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T227f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T944f15(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T220f44(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T220f46(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T163f43(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T163f44(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T220f43(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T220f47(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T163f42(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T163f45(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T163f56(T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T223f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T223f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T223f17p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T215f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T189f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T157f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TAGGED_ASSERTION.reset */
extern void T849f7(T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T849f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T999f96(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T805f34(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T804f34(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T498f75(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T485f55(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T479f53(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T774f8(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T787f11(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T787f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T787f11p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T199f16(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T787f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T785f11(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T747f13(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T744f7(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T744f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T747f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T743f13(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T741f12(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T739f6(T0* C);
/* ET_COMPOUND.reset */
extern void T659f11(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T738f12(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T738f8(T0* C);
/* ET_VARIANT.reset */
extern void T708f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T705f11(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T735f9(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T756f7(T0* C);
/* ET_WHEN_PART.reset */
extern void T760f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T762f11(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T735f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T733f11(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T749f7(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T752f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T752f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T733f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T732f6(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T731f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T725f15(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T495f16(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T200f11(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T200f11p1(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T787f12(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T785f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T747f14(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T743f14(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T741f13(T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T739f7(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T738f13(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T735f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T733f12(T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T732f7(T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T731f7(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T725f16(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T495f17(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.process */
extern void T200f15(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T685f46(T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T681f82(T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T679f64(T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T678f93(T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T677f64(T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T676f65(T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T685f47(T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T681f83(T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T679f65(T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T678f94(T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T677f65(T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T676f66(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T685f48(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T681f84(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T519f45(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T518f46(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T517f46(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T519f44(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T518f45(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T517f45(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T519f50(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T518f51(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T517f51(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T519f43(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T518f44(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T517f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T399f234(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T399f241(T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T126f16(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T399f241p1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T399f71(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T397f199(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T397f208(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T397f208p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T397f54(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T393f230(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T393f237(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T393f237p1(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T393f69(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T358f197(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T358f205(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T358f205p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T358f45(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T399f235(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T399f235p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T399f235p0(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T399f245(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1027f10(T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T26f17(T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1027f7(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1027f3(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1027f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1027f2(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1027f5(T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1216f2(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1027f4(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1027f9(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T399f201(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T399f181(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T399f180(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T399f162(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T399f207(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T399f121(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1302os20307;
extern T0* ge1302ov20307;
extern T0* T399f121p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T399f249(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T399f105(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T399f248(T0* C);
/* DS_LINKED_STACK [INTEGER_32].remove */
extern void T1028f7(T0* C);
/* DS_LINKED_STACK [INTEGER_32].item */
extern T6 T1028f4(T0* C);
/* DS_LINKED_STACK [INTEGER_32].is_empty */
extern T1 T1028f3(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T399f246(T0* C, T6 a1);
/* DS_LINKED_STACK [INTEGER_32].force */
extern void T1028f6(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T399f247(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T399f244(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T399f99(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T399f243(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T399f98(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T399f97(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T399f242(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T397f200(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T397f200p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T397f214(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T397f179(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T397f159(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T397f158(T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T397f140(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T397f194(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T397f102(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T397f220(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T397f76(T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T397f219(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T397f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T397f213(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T397f67(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T397f212(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T397f66(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T397f65(T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T397f211(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T397f210(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T397f209(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T393f231(T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T393f231p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T393f240(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T393f198(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T393f178(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T393f177(T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T393f159(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T393f205(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T393f118(T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T393f118p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T393f245(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T393f102(T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T393f244(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T393f241(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T393f243(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T393f239(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T393f242(T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T393f96(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T393f238(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T393f95(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T393f94(T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T358f198(T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T358f209(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T358f177(T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T358f157(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T358f156(T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T358f138(T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T358f192(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T358f97(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T358f217(T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T358f71(T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T358f216(T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T358f218(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T358f210(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T358f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T358f208(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T358f214(T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T358f62(T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T358f207(T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T358f61(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T358f60(T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T358f206(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T399f237(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T397f202(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T393f233(T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T358f200(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T399f238(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T951f31(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T951f8(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T397f203(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T393f234(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T358f201(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T399f239(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T397f204(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T393f235(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T358f202(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T399f236(T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1430f10(T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1430f5(T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T397f201(T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T393f232(T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T358f199(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T683f7(T0* C);
/* XM_CHARACTER_DATA.process */
extern void T1318f5(T0* C, T0* a1);
/* XM_NODE_TYPER.process_character_data */
extern void T1421f17(T0* C, T0* a1);
/* XM_NODE_TYPER.reset */
extern void T1421f13(T0* C);
/* XM_PROCESSING_INSTRUCTION.process */
extern void T1317f7(T0* C, T0* a1);
/* XM_NODE_TYPER.process_processing_instruction */
extern void T1421f16(T0* C, T0* a1);
/* XM_COMMENT.process */
extern void T1316f6(T0* C, T0* a1);
/* XM_NODE_TYPER.process_comment */
extern void T1421f15(T0* C, T0* a1);
/* XM_ATTRIBUTE.process */
extern void T287f8(T0* C, T0* a1);
/* XM_NODE_TYPER.process_attribute */
extern void T1421f14(T0* C, T0* a1);
/* XM_ELEMENT.process */
extern void T100f40(T0* C, T0* a1);
/* XM_NODE_TYPER.process_element */
extern void T1421f11(T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1318f4(T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1317f6(T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1316f5(T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T287f6(T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T100f32(T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T847f10(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T510f14(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T847f12(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T999f95(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T510f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T999f91(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1180f6(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T832f9(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1180f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T999f90(T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T832f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T999f94(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1443f6(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1434f19(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.set_index */
extern void T1334f16(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1180f7(T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T847f11(T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T832f10(T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T510f15(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T839f39(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T838f41(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T837f41(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T836f40(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T835f42(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T833f42(T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T809f32(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T805f35(T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T804f35(T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T507f86(T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T498f77(T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T485f56(T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T479f54(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T672f81(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T671f79(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T666f77(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T665f81(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T663f81(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T333f75(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T327f79(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T261f69(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T260f71(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T258f71(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T176f83(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T672f100(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T671f98(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T666f97(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T665f100(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T663f100(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T333f95(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T327f98(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T261f88(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T260f92(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T258f91(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T176f102(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T672f101(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T671f99(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T666f98(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T665f101(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T663f101(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T333f96(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T327f99(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T261f89(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T260f93(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T258f92(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T176f103(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T672f98(T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T671f96(T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T666f95(T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T665f98(T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T663f98(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T333f93(T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T327f96(T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T261f86(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T260f90(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T258f89(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T176f100(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T672f99(T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T671f97(T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T666f96(T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T665f99(T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T663f99(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T333f94(T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T327f97(T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T261f87(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T260f91(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T258f90(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T176f101(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T672f102(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T671f100(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T666f99(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T665f102(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T663f102(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T333f97(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T327f100(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T261f90(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T260f94(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T258f93(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T176f104(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T672f103(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T671f101(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T666f100(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T665f103(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T663f103(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T333f98(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T327f101(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T261f91(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T260f95(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T258f94(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T176f105(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T672f96(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T671f94(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T666f93(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T665f96(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T663f96(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T333f91(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T327f94(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T261f80(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T260f84(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T258f83(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T176f94(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.resolve_inherited_signature */
extern void T672f104(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.resolved_formal_parameters */
extern T0* T236f12(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_right_parenthesis */
extern void T236f17(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_left_parenthesis */
extern void T236f16(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.set_declared_type */
extern void T242f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.cloned_argument */
extern T0* T970f7(T0* C);
/* ET_FORMAL_ARGUMENT.cloned_argument */
extern T0* T242f7(T0* C);
/* ET_ONCE_PROCEDURE.resolve_inherited_signature */
extern void T671f102(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.resolve_inherited_signature */
extern void T666f101(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.resolve_inherited_signature */
extern void T665f104(T0* C, T0* a1);
/* ET_DO_FUNCTION.resolve_inherited_signature */
extern void T663f104(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.resolve_inherited_signature */
extern void T333f99(T0* C, T0* a1);
/* ET_DO_PROCEDURE.resolve_inherited_signature */
extern void T327f102(T0* C, T0* a1);
/* ET_ATTRIBUTE.resolve_inherited_signature */
extern void T261f92(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.resolve_inherited_signature */
extern void T260f96(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.resolve_inherited_signature */
extern void T258f95(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.resolve_inherited_signature */
extern void T176f106(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T672f79(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T671f77(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T666f75(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T665f79(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T663f79(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T333f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T327f77(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T261f68(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T260f70(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T258f70(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T176f81(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T672f95(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T671f93(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T666f92(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T665f95(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T663f95(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T333f90(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T327f93(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T261f79(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T260f83(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T258f82(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T176f93(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T672f105(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T671f103(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T666f102(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T665f105(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T663f105(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T333f100(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T327f103(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T261f93(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T260f97(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T258f96(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T176f107(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_assertions_checked */
extern void T672f89(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_checked */
extern void T671f87(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_checked */
extern void T666f85(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_checked */
extern void T665f89(T0* C);
/* ET_DO_FUNCTION.set_assertions_checked */
extern void T663f89(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_checked */
extern void T333f83(T0* C);
/* ET_DO_PROCEDURE.set_assertions_checked */
extern void T327f87(T0* C);
/* ET_ATTRIBUTE.set_assertions_checked */
extern void T261f84(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_checked */
extern void T260f88(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_checked */
extern void T258f87(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_checked */
extern void T176f98(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_assertions_error */
extern void T672f90(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_error */
extern void T671f88(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_error */
extern void T666f86(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_error */
extern void T665f90(T0* C);
/* ET_DO_FUNCTION.set_assertions_error */
extern void T663f90(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_error */
extern void T333f84(T0* C);
/* ET_DO_PROCEDURE.set_assertions_error */
extern void T327f88(T0* C);
/* ET_ATTRIBUTE.set_assertions_error */
extern void T261f85(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_error */
extern void T260f89(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_error */
extern void T258f88(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_error */
extern void T176f99(T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T672f84(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T671f82(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T666f80(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T665f84(T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T663f84(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T333f78(T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T327f82(T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T261f72(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T260f74(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T258f74(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T176f86(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_checked */
extern void T672f85(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_checked */
extern void T671f83(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_checked */
extern void T666f81(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_checked */
extern void T665f85(T0* C);
/* ET_DO_FUNCTION.set_implementation_checked */
extern void T663f85(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_checked */
extern void T333f79(T0* C);
/* ET_DO_PROCEDURE.set_implementation_checked */
extern void T327f83(T0* C);
/* ET_ATTRIBUTE.set_implementation_checked */
extern void T261f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_checked */
extern void T260f75(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_checked */
extern void T258f75(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_checked */
extern void T176f87(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_error */
extern void T672f86(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_error */
extern void T671f84(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_error */
extern void T666f82(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_error */
extern void T665f86(T0* C);
/* ET_DO_FUNCTION.set_implementation_error */
extern void T663f86(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_error */
extern void T333f80(T0* C);
/* ET_DO_PROCEDURE.set_implementation_error */
extern void T327f84(T0* C);
/* ET_ATTRIBUTE.set_implementation_error */
extern void T261f74(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_error */
extern void T260f76(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_error */
extern void T258f76(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_error */
extern void T176f88(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T839f37(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T838f39(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T837f39(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T836f38(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T835f40(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T833f40(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T823f18(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T816f26(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T814f25(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T813f22(T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T809f29(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T808f18(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T807f19(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T806f17(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T802f18(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T800f18(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T799f18(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T798f18(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T797f18(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T792f19(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T791f22(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T776f27(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T728f19(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T555f21(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T526f38(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T525f38(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T524f35(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T523f35(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T521f38(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T520f38(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T519f47(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T518f48(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T517f48(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T516f36(T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T515f40(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T514f35(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T513f39(T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T501f29(T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T465f32(T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T222f30(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T205f25(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.set_index */
extern void T203f25(T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T198f31(T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T129f99(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1434f20(T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1335f14(T0* C);
/* ET_CONVERT_EXPRESSION.reset */
extern void T1334f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T839f38(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T661f17(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T655f17(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T236f15(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T970f11(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T242f10(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T828f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T838f40(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T657f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T971f10(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T696f9(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T838f40p1(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T837f40(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T837f40p1(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T836f39(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T835f41(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T835f41p1(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T833f41(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T833f41p1(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T823f19(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T816f27(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T814f26(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T813f23(T0* C);
/* ET_CALL_AGENT.reset */
extern void T809f30(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T808f19(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T807f20(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T806f18(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T802f19(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T800f19(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T799f19(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T798f19(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T797f19(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T792f20(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T791f23(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T776f28(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T776f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T776f28p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T776f9(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T728f20(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T818f13(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T507f85(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T555f22(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T555f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T526f39(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T525f39(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T524f36(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T523f36(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T521f39(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T520f39(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T519f49(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T518f50(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T517f50(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T516f37(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T515f41(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T514f36(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T513f40(T0* C);
/* ET_VOID.reset */
extern void T501f30(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T465f33(T0* C);
/* ET_RESULT.reset */
extern void T222f31(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T205f29(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T203f28(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T203f28p1(T0* C);
/* ET_CURRENT.reset */
extern void T198f32(T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1434f18(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1335f13(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.process */
extern void T1334f15(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T839f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T838f38(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T837f38(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T836f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T835f39(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T833f39(T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T823f17(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T816f25(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T814f24(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T813f21(T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T809f28(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T808f17(T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T807f18(T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T806f16(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T802f17(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T800f17(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T799f17(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T798f17(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T797f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T792f18(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T791f21(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T776f26(T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T728f18(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T555f20(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T526f37(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T525f37(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T524f34(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T523f34(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T521f37(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T520f37(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T519f46(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T518f47(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T517f47(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T516f35(T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T515f39(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T514f34(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T513f38(T0* C, T0* a1);
/* ET_VOID.process */
extern void T501f28(T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T465f31(T0* C, T0* a1);
/* ET_RESULT.process */
extern void T222f26(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T205f28(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.process */
extern void T203f26(T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T198f27(T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T129f102(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T1001f78(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T1001f137(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T1001f198(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T273f38(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T273f5(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T719f37(T0* C);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T1001f196(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T273f39(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T57f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T926c802(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T57f125(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T28f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T28f125(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T57f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T926c791(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T28f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T57f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T926c801(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T57f131(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T28f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T28f131(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T818f14(T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T199f17(T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T818f8(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T199f5(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T1001f225(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T1001f224(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_EXPRESSION.make */
extern T0* T1334c14(T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T1001f223(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1434c17(T0* a1, T0* a2);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T182f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T562f7(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T562f8(T0* C);
/* ET_LACE_UNIVERSE.is_dotnet */
extern T1 T56f158(T0* C);
/* ET_XACE_UNIVERSE.is_dotnet */
extern T1 T53f162(T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T60f153(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACED_TYPE_LIST.has_named_type */
extern T1 T969f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T534f6(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T534f7(T0* C, T6 a1);
/* ET_CLASS.convert_to_feature */
extern T0* T60f152(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T273f19(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T273f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T57f378(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T926c800(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T57f115(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T28f378(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T28f115(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T57f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T926c790(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T28f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T57f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T926c799(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T28f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T1001f195(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T57f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T926c798(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T57f130(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T28f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T28f130(T0* C, T0* a1);
/* ET_CLIENTS.has_any */
extern T1 T449f10(T0* C);
/* ET_CLASS_NAME_LIST.has_any */
extern T1 T448f7(T0* C);
/* ET_CLASS_NAME_LIST.tokens */
extern T0* T448f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T57f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T926c797(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T28f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LACE_UNIVERSE.has_class */
extern T1 T56f156(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.has_class */
extern T1 T53f160(T0* C, T0* a1);
/* ET_CLIENTS.class_name */
extern T0* T449f9(T0* C, T6 a1);
/* ET_CLIENTS.item */
extern T0* T449f12(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.class_name */
extern T0* T448f6(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.item */
extern T0* T448f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T57f345(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T926c767(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T57f112(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T28f345(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T28f112(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T57f342(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T926c764(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T57f110(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T28f342(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T28f110(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T57f341(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T926c763(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T28f341(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T1001f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_expression_supplier */
extern void T56f199(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T1004f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_expression_supplier */
extern void T53f207(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T57f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T926c760(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T57f108(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T28f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T28f108(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T57f337(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T926c759(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T28f337(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T1001f30(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T57f346(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T926c768(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T57f113(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T28f346(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T28f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T1001f28(T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T1001f32(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T1001f44(T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T129f81(T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T1001f69(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T1001f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T1001f197(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T57f344(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T926c766(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T57f111(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T28f344(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T28f111(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T57f343(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T926c765(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T28f343(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T57f340(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T926c762(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T57f109(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T28f340(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T28f109(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T57f339(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T926c761(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T28f339(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T57f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T926c758(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T57f107(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T28f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T28f107(T0* C, T0* a1);
/* ET_IDENTIFIER.is_instruction */
extern T1 T129f24(T0* C);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T1001f135(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T1001f194(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.resolved_formal_parameters */
extern T0* T1001f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.resolved_formal_parameters */
extern T0* T182f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T182f9(T0* C);
/* ET_CLASS.ancestor */
extern T0* T60f59(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T325f3(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T182f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T57f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T926c757(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T57f106(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T28f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T28f106(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T57f334(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T926c756(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T28f334(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T1001f134(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T1001f193(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T999f30(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T64f473(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T64f489(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T64f508(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T64f443(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T184f14(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T64f571(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T64f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T64f527(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T64f526(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T64f505(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T64f513(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T64f512(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T64f511(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T64f572(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T64f504(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T64f507(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T64f204(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T64f237(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T64f291(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T64f488(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T64f506(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T64f487(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T64f503(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.resolved_formal_parameters */
extern T0* T64f205(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T64f486(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T64f502(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T61f696(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T61f703(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T220f21(T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T163f26(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T191f12(T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T220f19(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T163f31(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T61f702(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T61f701(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T129f23(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T61f700(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T129f22(T0* C);
/* ET_FEATURE_CHECKER.process_current */
extern void T1001f79(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T1001f138(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T1001f199(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T999f38(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T64f528(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T64f581(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T64f625(T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T61f697(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T61f704(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_expression */
extern void T1001f81(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_expression_validity */
extern void T1001f140(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T1001f201(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T273f41(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T273f17(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T273f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T1001f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0d_error */
extern void T57f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0d */
extern T0* T926c819(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0d_error */
extern void T28f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0c_error */
extern void T57f396(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0c */
extern T0* T926c818(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0c_error */
extern void T28f396(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T57f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T926c777(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T57f114(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T28f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T28f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T1001f257(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T1001f33(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T57f354(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T926c776(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T28f354(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T57f353(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T926c775(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T28f353(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T57f352(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T926c774(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T28f352(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T1001f221(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T267f41(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T269f41(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T268f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T268f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern T0* T909f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].resized_area */
extern T0* T910f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].copy_data */
extern void T910f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].move_data */
extern void T910f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].overlapping_move */
extern void T910f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].non_overlapping_move */
extern void T910f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T268f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T268f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T270f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T270f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern T0* T913f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].resized_area */
extern T0* T914f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].copy_data */
extern void T914f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].move_data */
extern void T914f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].overlapping_move */
extern void T914f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].non_overlapping_move */
extern void T914f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T270f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T270f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T267f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T267f38(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T269f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T269f38(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T271f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T267f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T267f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T267f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T267f42(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T267f45(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T271f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T271f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T271f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T916f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T271f20(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T271f23(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T916f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T271f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T271f15(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].clear_items */
extern void T271f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T271f18(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T271f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T271f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T271f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T271f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T268f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T268f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T911f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_position */
extern void T911f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T268f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T268f6(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T267f17(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T270f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T270f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T915f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_position */
extern void T915f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T270f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T270f6(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T269f17(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T269f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T269f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T269f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T269f42(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T269f45(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T269f16(T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T60f221(T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T159f12(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_dotnet */
extern T1 T60f56(T0* C);
/* ET_CALL_EXPRESSION.is_qualified_call */
extern T1 T203f5(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_expression */
extern void T999f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T999f83(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_expression */
extern void T64f530(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_expression_validity */
extern void T64f583(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T64f627(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T64f524(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T64f668(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T64f233(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T64f509(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_call_expression */
extern void T61f698(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_expression */
extern void T61f705(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T61f708(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T61f712(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T61f711(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T61f707(T0* C, T0* a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T61f710(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T61f709(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T1001f80(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T1001f139(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T1001f200(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T57f351(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T926c773(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T28f351(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T57f350(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T926c772(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T28f350(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T57f349(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T926c771(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T28f349(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T57f348(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T926c770(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T28f348(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T57f347(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T926c769(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T28f347(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T999f39(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T64f529(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T64f582(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T64f626(T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T61f699(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T61f706(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1008f28(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1007f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1000f10(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T998f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T997f9(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T996f14(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T995f9(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T994f8(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T308f12(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T308f14(T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T60f188(T0* C);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T308f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T57f211(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T926c634(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1288f4(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_after */
extern T1 T1009f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1288f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1009f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1288f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1009f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1288f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1009f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1288f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1009f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1288f10(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1009f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1009f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1288f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_off */
extern T1 T1009f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_before */
extern T1 T1009f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T57f35(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T28f211(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T28f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1009f9(T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T308f19(T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T321f6(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T321f4(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1005f14(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T905f19(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].clear_items */
extern void T905f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1282f38(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1282f49(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1282f48(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1282f47(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1282f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1282f44(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1397f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_position */
extern void T1397f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1009f21(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].clear_items */
extern void T1009f25(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1009f24(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1005f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has_cycle */
extern T1 T1005f7(T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T308f18(T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1007f7(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T308f17(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1008f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T1008f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T57f307(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T926c730(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1400f5(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_after */
extern T1 T1287f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1400f11(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1287f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1400f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1287f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1400f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1287f24(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T570f31(T0* C);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T562f29(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1400f4(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1287f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1400f10(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1287f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1287f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1400f6(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_off */
extern T1 T1287f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_before */
extern T1 T1287f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1287f10(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T57f90(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T28f307(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T28f90(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1286f13(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1399f37(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1399f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1399f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1399f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1399f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1399f41(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1477f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_position */
extern void T1477f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1287f17(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].clear_items */
extern void T1287f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1287f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1286f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T570f76(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T562f72(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1287f6(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T57f306(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T926c729(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T28f306(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].has_cycle */
extern T1 T1286f8(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1286f12(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1287f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1286f7(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1008f11(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T57f305(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T926c728(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T57f89(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T28f305(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T28f89(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T57f304(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T926c727(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T57f88(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T28f304(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T28f88(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1008f7(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1008f10(T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T308f16(T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T60f189(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].wipe_out */
extern void T1006f42(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_wipe_out */
extern void T1006f51(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_wipe_out */
extern void T1006f50(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T1006f49(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T1006f48(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].move_all_cursors_after */
extern void T1006f46(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].set_next_cursor */
extern void T1010f10(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].set_position */
extern void T1010f9(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].forth */
extern void T1010f8(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_forth */
extern void T1006f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].add_traversing_cursor */
extern void T1006f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].remove_traversing_cursor */
extern void T1006f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_item */
extern T6 T1006f26(T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T325f8(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].item */
extern T0* T1010f4(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_item */
extern T0* T1006f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_item */
extern T0* T1006f23(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].after */
extern T1 T1010f5(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_after */
extern T1 T1006f36(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER_32].start */
extern void T1010f7(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_start */
extern void T1006f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].cursor_off */
extern T1 T1006f40(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].is_empty */
extern T1 T1006f39(T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T308f21(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T325f5(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T273f37(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].force_new */
extern void T1006f44(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_put */
extern void T1006f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_put */
extern void T1006f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_put */
extern void T1006f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_put */
extern void T1006f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_item */
extern T6 T1006f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].hash_position */
extern T6 T1006f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].resize */
extern void T1006f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].clashes_resize */
extern void T1006f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_resize */
extern void T1006f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].item_storage_resize */
extern void T1006f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].resize */
extern T0* T1016f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].resized_area */
extern T0* T1015f3(T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].copy_data */
extern void T1015f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BASE_TYPE].move_data */
extern void T1015f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].overlapping_move */
extern void T1015f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].non_overlapping_move */
extern void T1015f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].key_storage_item */
extern T6 T1006f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].slots_resize */
extern void T1006f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].new_capacity */
extern T6 T1006f24(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T57f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_se_reported */
extern void T926f641(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T926c640(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T57f40(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T28f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T28f40(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].found_item */
extern T0* T1006f34(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].found */
extern T1 T1006f33(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].search */
extern void T1006f43(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER_32].search_position */
extern void T1006f52(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T57f216(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T926c639(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T57f39(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T28f216(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T28f39(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T57f215(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T926c638(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T57f38(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T28f215(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T28f38(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T57f214(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T926c637(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T57f37(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T28f214(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T28f37(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T57f213(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T926c636(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T57f36(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T28f213(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T28f36(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T57f212(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T926c635(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T28f212(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1009f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1005f13(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1009f20(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T308f15(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T308f20(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1005f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1005f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1005f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1005f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1282f33(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1282f25(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1282f23(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1282f41(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1282f42(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1282f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1282f30(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1282f29(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1282f32(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1005f15(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1005f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put */
extern void T1282f40(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1282f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1282f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1282f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1282f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1282f39(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1282f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1282f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1282f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1282f50(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1009f22(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1005f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1005f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1282f21(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T308f10(T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T60f187(T0* C);
/* ET_ANCESTOR_BUILDER.none_class */
extern T0* T308f9(T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T306f20(T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T60f218(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T306f25(T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T60f220(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_fatal_error */
extern void T306f24(T0* C, T0* a1);
/* ET_CLASS.set_flat_implementation_error */
extern void T60f219(T0* C);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T306f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].extend */
extern void T440f71(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T1067f10(T0* C);
/* DS_HASH_SET [ET_CLASS].put */
extern void T440f73(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T1067f5(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T1067f4(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T1067f9(T0* C);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T440f70(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T440f72(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T440f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_after */
extern void T440f76(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T440f74(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T306f27(T0* C, T1 a1, T1 a2);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T1001f37(T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_assertions_error */
extern void T538f29(T0* C);
/* ET_INVARIANTS.set_assertions_checked */
extern void T538f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T57f333(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T926c755(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T57f105(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T28f333(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T28f105(T0* C, T0* a1);
/* ET_INVARIANTS.assertion */
extern T0* T538f11(T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T538f12(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.set_supplier_handler */
extern void T56f198(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_supplier_handler */
extern void T53f206(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T306f26(T0* C, T1 a1, T1 a2);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T306f30(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T1002f45(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T1002f52(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T1002f51(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T1002f50(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T1002f49(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T1002f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1280f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1280f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T1002f44(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T1002f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T1002f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T1002f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T1002f25(T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T306f32(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T1001f43(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T1002f17(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T1002f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T1002f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T1002f36(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T1002f18(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T1002f43(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T1002f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T1002f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T1002f23(T0* C);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T1001f39(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T1001f42(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T306f29(T0* C, T0* a1, T0* a2, T1 a3, T1 a4);
/* ET_FEATURE_LIST.item */
extern T0* T1229f3(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T1001f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.assertion */
extern T0* T661f7(T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T661f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T1001f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.assertion */
extern T0* T655f7(T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T655f8(T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T306f28(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T1003f45(T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T1003f52(T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T1003f51(T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T1003f50(T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T1003f49(T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T1003f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1281f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1281f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T1003f44(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T1003f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T1003f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T1003f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T1003f25(T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T306f31(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T1003f17(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T1003f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T1003f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T1003f36(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T1003f18(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].start */
extern void T1003f43(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T1003f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T1003f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T1003f23(T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T1001f38(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T306f22(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern T0* T306c21(T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T306f13(T0* C);
/* ET_CLASS.set_flat_implementation_checked */
extern void T60f217(T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T60f216(T0* C);
/* ET_IMPLEMENTATION_CHECKER.none_class */
extern T0* T306f12(T0* C);
/* ET_INTERFACE_CHECKER.process_class */
extern void T305f8(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T305f10(T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T60f186(T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T305f9(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T305f12(T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1000f7(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1000f8(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1009f19(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1009f23(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].last */
extern T0* T1009f6(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T305f11(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T305f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T57f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T926c633(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T57f34(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T28f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T28f34(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T57f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T926c632(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T28f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T57f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T926c631(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T57f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T28f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T28f33(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T571f7(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T571f8(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T562f6(T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T305f6(T0* C);
/* ET_CLASS.set_interface_checked */
extern void T60f185(T0* C);
/* ET_INTERFACE_CHECKER.none_class */
extern T0* T305f5(T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T304f27(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T304f29(T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T60f202(T0* C);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T304f28(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T304f32(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T984f53(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T984f67(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T984f66(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T984f65(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T984f64(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T984f62(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1249f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1249f5(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T304f40(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T984f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T984f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T984f21(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T984f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T984f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T984f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T984f29(T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T985f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T984f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T984f25(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T304f39(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T57f251(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T926c675(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T57f57(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T28f251(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T28f57(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T57f250(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T926c674(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T28f250(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T57f249(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T926c673(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T57f56(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T28f249(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T28f56(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T57f248(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T926c672(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T28f248(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T57f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T926c671(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T28f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T625f8(T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T625f11(T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T532f7(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T57f246(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T926c670(T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T625f12(T0* C);
/* ET_CREATOR.first */
extern T0* T625f15(T0* C);
/* ET_CLIENTS.position */
extern T0* T449f13(T0* C);
/* ET_CLIENTS.first */
extern T0* T449f16(T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T449f15(T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T625f14(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T57f55(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T28f246(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T28f55(T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T532f6(T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T532f5(T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T304f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T57f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T926c669(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T57f54(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T28f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T28f54(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T57f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T926c668(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T57f53(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T28f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T28f53(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T57f243(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T926c667(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T57f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T28f243(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T28f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T57f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T926c666(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T57f51(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T28f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T28f51(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T57f241(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T926c665(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T28f241(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T57f237(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T926c661(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T57f47(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T28f237(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T28f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T57f236(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T926c660(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T57f46(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T28f236(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T28f46(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T57f235(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T926c659(T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1226f22(T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1223f11(T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1223f13(T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T28f235(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T984f52(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T984f61(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T984f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T984f33(T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T60f203(T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T987f40(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T987f53(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T987f52(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T987f51(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T987f50(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T987f49(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1257f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_position */
extern void T1257f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T984f51(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T984f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T984f70(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T304f37(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T996f7(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1279f9(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1278f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1278f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1279f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1278f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1279f10(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T996f11(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T57f303(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T926c726(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T57f86(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T28f303(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T28f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T57f302(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T926c725(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T28f302(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T996f5(T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T996f12(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1279f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1279f8(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1278f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1278f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1278f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1279c7(T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1223f15(T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T996f10(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T57f301(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T926c724(T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T57f87(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T28f301(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T28f87(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T57f300(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T926c723(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T28f300(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T57f299(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T926c722(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T28f299(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T996f9(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T57f298(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T926c721(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T57f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T28f298(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T28f66(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T57f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T926c720(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T28f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T57f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T926c719(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T28f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T996f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last */
extern void T987f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T987f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T987f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T987f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T987f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T987f34(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T987f45(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T987f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T987f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T987f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].resize */
extern T0* T1254f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].resized_area */
extern T0* T1250f3(T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].copy_data */
extern void T1250f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FLATTENED_FEATURE].move_data */
extern void T1250f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].overlapping_move */
extern void T1250f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].non_overlapping_move */
extern void T1250f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T987f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T987f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T987f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T987f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T987f44(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T987f42(T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T988f1(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T57f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T926c658(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T57f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T28f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T28f45(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T57f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T926c657(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T28f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T57f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T926c656(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T57f44(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T28f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T28f44(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T57f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T926c655(T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1223f18(T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T28f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T57f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T926c654(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T28f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T57f229(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T926c653(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T28f229(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T57f228(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T926c652(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T28f228(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T57f227(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T926c651(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T28f227(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T57f226(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T926c650(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T28f226(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T987f28(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T987f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T987f32(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T987f38(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T984f37(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T984f27(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T984f50(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T984f59(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T984f32(T0* C);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T304f36(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T995f7(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1276f13(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].wipe_out */
extern void T1391f37(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_wipe_out */
extern void T1391f47(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_wipe_out */
extern void T1391f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_wipe_out */
extern void T1391f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_wipe_out */
extern void T1391f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1391f42(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1470f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_position */
extern void T1470f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1277f16(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].clear_items */
extern void T1277f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1277f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1394f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_position */
extern void T1394f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].reset */
extern void T1276f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T57f295(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T926c718(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].forth */
extern void T1394f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_forth */
extern void T1277f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].add_traversing_cursor */
extern void T1277f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].remove_traversing_cursor */
extern void T1277f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].go_after */
extern void T1394f11(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_go_after */
extern void T1277f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].off */
extern T1 T1394f6(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_off */
extern T1 T1277f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_before */
extern T1 T1277f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_after */
extern T1 T1277f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].item */
extern T0* T1394f5(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_item */
extern T0* T1277f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].item */
extern T0* T1277f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].after */
extern T1 T1394f4(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].start */
extern void T1394f10(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_start */
extern void T1277f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].is_empty */
extern T1 T1277f6(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat_error */
extern T1 T57f85(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T28f295(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat_error */
extern T1 T28f85(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T995f5(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T995f8(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].has_cycle */
extern T1 T1276f7(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].sort */
extern void T1276f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].put_last */
extern void T1277f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T57f225(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T926c649(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T57f43(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T28f225(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T28f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T57f224(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T926c648(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T28f224(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T57f223(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T926c647(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T28f223(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T57f222(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T926c646(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T28f222(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T57f221(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T926c645(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T28f221(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T57f220(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T926c644(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T28f220(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T57f219(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T926c643(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T57f42(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T28f219(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T28f42(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T57f218(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T926c642(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T57f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T28f218(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T28f41(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T304f35(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T57f240(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T926c664(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T57f50(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T28f240(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T28f50(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T984f44(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T984f42(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T57f239(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T926c663(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T57f49(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T28f239(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T28f49(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T994f7(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1225f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1225f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1323f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge881os19570;
extern T0* ge881ov19570;
extern T0* T304f24(T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1225c2(T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1323c2(void);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1224f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1224f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1320f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge881os19569;
extern T0* ge881ov19569;
extern T0* T304f23(T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1224c2(T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1320c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T984f49(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T984f58(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T304f34(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T304f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T57f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T926c682(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T57f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T28f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T28f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T57f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T926c681(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T57f60(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T28f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T28f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T57f256(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T926c680(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T28f256(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T57f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T926c679(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T28f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1226f36(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1226f35(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T304f44(T0* C, T0* a1, T6 a2);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1228f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1226f34(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1228f31(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1226f33(T0* C, T6 a1);
/* ET_FEATURE_IDS.item */
extern T6 T1230f6(T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1230f10(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1230f8(T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1230f4(T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1230f3(T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1230f12(T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T962f1(T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T324f9(T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T324f17(T0* C, T0* a1);
/* ARRAY [INTEGER_32].set_area */
extern void T324f19(T0* C, T0* a1);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1230f5(T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1228f20(T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1226f21(T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T1230c9(T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1230f13(T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize */
extern void T962f4(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].conservative_resize */
extern void T324f16(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.remove */
extern void T1230f11(T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1230f7(T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1223f19(T0* C);
/* ET_FEATURE_LIST.put_first */
extern void T1229f6(T0* C, T0* a1);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T1229c5(T6 a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge694os6602;
extern T0* ge694ov6602;
extern T0* T1229f4(T0* C);
/* ET_CLIENTS.same_class_names */
extern T1 T449f17(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.same_class_names */
extern T1 T448f12(T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1223f17(T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1223f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T57f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T926c678(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T57f59(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T28f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T28f59(T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1223f16(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T304f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T57f269(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T926c693(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T57f64(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T28f269(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T28f64(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1223f14(T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T304f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T57f279(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T926c703(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T57f71(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T28f279(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T28f71(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T57f278(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T926c702(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T28f278(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T304f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T57f277(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T926c701(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T57f70(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T28f277(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T28f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T57f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T926c700(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T28f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T57f275(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T926c699(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T57f69(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T28f275(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T28f69(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T304f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T57f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T926c698(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T57f68(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T28f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T28f68(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T57f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T926c697(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T28f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T57f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T926c696(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T28f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T57f271(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T926c695(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T28f271(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T57f270(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T926c694(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T57f67(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T28f270(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T28f67(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1226f20(T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T304f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].wipe_out */
extern void T990f16(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].clear_items */
extern void T990f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_all_cursors_after */
extern void T990f21(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_next_cursor */
extern void T1260f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_position */
extern void T1260f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].wipe_out */
extern void T991f53(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].slots_wipe_out */
extern void T991f68(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_wipe_out */
extern void T991f67(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_wipe_out */
extern void T991f66(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_wipe_out */
extern void T991f65(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].move_all_cursors_after */
extern void T991f64(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_next_cursor */
extern void T1261f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_position */
extern void T1261f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].back */
extern void T991f52(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_back */
extern void T991f63(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].add_traversing_cursor */
extern void T991f74(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].remove_traversing_cursor */
extern void T991f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_item */
extern T6 T991f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].before */
extern T1 T991f20(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_before */
extern T1 T991f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].finish */
extern void T991f51(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_finish */
extern void T991f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_off */
extern T1 T991f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].is_empty */
extern T1 T991f37(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].forth */
extern void T991f50(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_forth */
extern void T991f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].go_after */
extern void T991f49(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_go_after */
extern void T991f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_for_iteration */
extern T0* T991f19(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_item */
extern T0* T991f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_item */
extern T0* T991f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].after */
extern T1 T991f18(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_after */
extern T1 T991f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].start */
extern void T991f48(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_start */
extern void T991f59(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].is_empty */
extern T1 T990f9(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].force */
extern void T991f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_put */
extern void T991f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_put */
extern void T991f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].slots_item */
extern T6 T991f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].hash_position */
extern T6 T991f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].resize */
extern void T991f56(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_resize */
extern void T991f72(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_resize */
extern void T991f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_resize */
extern void T991f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_item */
extern T0* T991f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_resize */
extern void T991f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_capacity */
extern T6 T991f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_put */
extern void T991f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].search_position */
extern void T991f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_equality_tester */
extern T0* T991f34(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove */
extern void T990f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_left */
extern void T990f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_cursors_left */
extern void T990f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove_last */
extern void T990f18(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_last_cursors_after */
extern void T990f23(T0* C);
/* ET_CLIENTS.is_none */
extern T1 T449f14(T0* C);
/* ET_IDENTIFIER.is_none */
extern T1 T129f94(T0* C);
/* ET_IDENTIFIER.tokens */
extern T0* T129f95(T0* C);
/* ET_CLASS_NAME_LIST.is_none */
extern T1 T448f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].item */
extern T0* T990f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].first */
extern T0* T990f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].force_last */
extern void T990f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].resize */
extern void T990f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].resize */
extern T0* T1258f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_LIST].resized_area */
extern T0* T1259f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].copy_data */
extern void T1259f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_LIST].move_data */
extern void T1259f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].overlapping_move */
extern void T1259f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].non_overlapping_move */
extern void T1259f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_capacity */
extern T6 T990f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].extendible */
extern T1 T990f10(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T614f9(T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T612f6(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T614f8(T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T612f5(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T614f7(T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T319f6(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T304f42(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T304f46(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T999f8(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T57f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T926c677(T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T661f10(T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T661f12(T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T661f11(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T57f58(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T28f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T28f58(T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T661f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T57f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T926c676(T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T655f10(T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T655f12(T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T655f11(T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T28f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T655f9(T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T304f45(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T57f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T926c692(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T28f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T57f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T926c691(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T57f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T28f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T28f65(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T57f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T926c690(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T28f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T57f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T926c689(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T28f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T57f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T926c688(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T28f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T57f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T926c687(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T28f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T57f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T926c686(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T57f63(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T28f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T28f63(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T57f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T926c685(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T57f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T28f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T28f62(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T57f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T926c684(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T28f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T57f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T926c683(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T28f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1228f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T57f238(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T926c662(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T57f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T28f238(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T28f48(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1228f18(T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1223f20(T0* C);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1226f19(T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1228f17(T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1226f18(T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T304f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T984f31(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T984f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T984f23(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T984f24(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T984f48(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T984f57(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T304f33(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T992f22(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T992f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1265f48(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1265f60(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1265f59(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1265f58(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1265f57(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1265f55(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1369f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1369f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1265f47(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1265f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1265f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1265f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1265f24(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T992f33(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T57f294(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T926c717(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1379f4(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_after */
extern T1 T1269f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1379f9(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1269f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1379f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1269f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1379f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1269f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1379f6(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1269f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].item */
extern T0* T1269f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1379f8(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1269f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1269f12(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1379f5(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1269f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_before */
extern T1 T1269f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1269f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1379c7(T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1269f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T57f84(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T28f294(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T28f84(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1228f35(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1278f9(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1502f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1502c3(T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1278f5(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1278c8(void);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1226f39(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1223f21(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1228f34(T0* C);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1226f38(T0* C);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1228f33(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1226f37(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T57f293(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T926c716(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T28f293(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T992f17(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T992f26(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1268f16(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1268f18(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1268f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1375f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1268f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1375f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1269f16(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1228f26(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1226f28(T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1268f8(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1268f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1268f7(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1268f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1268f15(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1268f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1268f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1269c15(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1377f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_FEATURE].make_area */
extern T0* T1463c2(T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make */
extern T0* T1378c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1377c2(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1265f36(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1265f21(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1265f35(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1265f27(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1265f44(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1265f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1265f42(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1265f43(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1265f46(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1265f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1265f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1265f30(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T992f32(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1265f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1265f66(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1265f62(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1265f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1265f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1265f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1265f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1265f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1265f73(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1265f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1265f71(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].resize */
extern T0* T1374f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].resized_area */
extern T0* T1370f3(T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].copy_data */
extern void T1370f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REPLICABLE_FEATURE].move_data */
extern void T1370f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].overlapping_move */
extern void T1370f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].non_overlapping_move */
extern void T1370f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1265f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1265f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1265f50(T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1267c6(T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1268c13(void);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1268f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1375c6(T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1267f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1268f14(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1376f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1376c3(T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].is_empty */
extern T1 T1268f5(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1265f38(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1265f37(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1265f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1265f61(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T992f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T57f286(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T926c709(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T57f77(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T28f286(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T28f77(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T57f285(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T926c708(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T57f76(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T28f285(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T28f76(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1264f51(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1264f64(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1264f63(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1264f62(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1264f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1264f59(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1366f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1366f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1264f50(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1264f58(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1264f74(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1264f73(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1264f27(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T57f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T926c707(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T57f75(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T28f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T28f75(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1264f44(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1264f34(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1264f23(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1264f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1264f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1264f24(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1264f39(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1264f32(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1264f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1264f57(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1264f36(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1264f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1263f45(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1263f61(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1263f60(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1263f59(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1263f58(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1263f57(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1365f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1365f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1263f44(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1263f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1263f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1263f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1263f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T57f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T926c706(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T57f74(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T28f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T28f74(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1263f30(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1263f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1263f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1263f20(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1263f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1263f43(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1263f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1263f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1262f48(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1262f61(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1262f60(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1262f59(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1262f58(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1262f57(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1359f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1359f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1262f47(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1262f56(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1262f74(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1262f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1262f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T57f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T926c705(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T57f73(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T28f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T28f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1262f31(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1262f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1262f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1262f30(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1262f22(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1262f46(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1262f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1262f32(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last */
extern void T984f76(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T984f87(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T984f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T984f81(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T984f86(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T984f88(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T984f85(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T992f20(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1226f31(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1226c29(T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1226f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1228f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1228f21(T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1223f29(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1226f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1226f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T984f77(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T992f19(T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1228f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1228f28(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1223f26(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1223f25(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1264f48(T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1264f56(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1264f26(T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1223f24(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1264f22(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1264f21(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1264f47(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1264f55(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1264f29(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1264f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1263f42(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1263f54(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1263f71(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1263f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1263f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1263f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1263f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors */
extern void T1263f75(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_after */
extern void T1263f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1263f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1263f69(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1263f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1263f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1263f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1263f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1263f18(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1263f41(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1223f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1262f45(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1262f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1262f69(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1262f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1262f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1262f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1262f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors */
extern void T1262f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_after */
extern void T1262f79(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1262f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1262f71(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1262f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1262f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1262f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1262f41(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1262f36(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1262f44(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T992f18(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1223f28(T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1223f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T984f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T984f84(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T984f83(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T984f82(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T984f79(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T992f31(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T57f292(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T926c715(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T57f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T28f292(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T28f83(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1264f53(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1264f71(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1264f66(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1264f67(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T320f6(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T320f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1264f52(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1264f70(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1264f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1264f68(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1264f65(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T992f30(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T57f291(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T926c714(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T57f82(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T28f291(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T28f82(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T992f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T57f290(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T926c713(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T57f81(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T28f290(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T28f81(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1263f34(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T992f28(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T57f289(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T926c712(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T57f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T28f289(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T28f80(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1263f38(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1263f47(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T614f5(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T614f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1263f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1263f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1263f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1263f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1263f62(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T57f288(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T926c711(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T57f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T28f288(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T28f79(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1262f35(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T992f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T57f287(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T926c710(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T57f78(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T28f287(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T28f78(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put */
extern void T1262f50(T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T318f6(T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T318f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1262f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1262f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1262f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1262f65(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].resize */
extern T0* T1364f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].resized_area */
extern T0* T1360f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME].copy_data */
extern void T1360f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME].move_data */
extern void T1360f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].overlapping_move */
extern void T1360f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].non_overlapping_move */
extern void T1360f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1262f62(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T992f23(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T57f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T926c704(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T28f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T993f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1273f38(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1273f47(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1273f46(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1273f45(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1273f44(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1273f42(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1387f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_position */
extern void T1387f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1271f35(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1271f48(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1271f47(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1271f46(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1271f45(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1271f44(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1381f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_position */
extern void T1381f5(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T993f20(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T993f14(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T993f13(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T993f19(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T993f12(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T993f22(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1275f15(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1275f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1275f18(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1389f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1275f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1389f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1275f8(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1275f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1275f7(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1275f9(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1275f14(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1275f16(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1275f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1273f24(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1273f21(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1273f32(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1273f39(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1273f48(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1273f27(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1273f23(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1270f2(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1273f26(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1273f25(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T993f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T993f15(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1271f24(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1271f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1271f25(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1271f37(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1271f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1271f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1271f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1271f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1271f30(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1271f21(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T993f18(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T993f21(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1271f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1271f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1271f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1271f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1271f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last */
extern void T1273f40(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1273f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1273f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1273f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1273f50(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1273f58(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1273f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].resize */
extern T0* T1382f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].resized_area */
extern T0* T1380f3(T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].copy_data */
extern void T1380f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DOTNET_FEATURE].move_data */
extern void T1380f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].overlapping_move */
extern void T1380f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].non_overlapping_move */
extern void T1380f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1273f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resize */
extern T0* T1388f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resized_area */
extern T0* T1383f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].copy_data */
extern void T1383f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].move_data */
extern void T1383f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].overlapping_move */
extern void T1383f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].non_overlapping_move */
extern void T1383f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1273f55(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1273f22(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1273f49(T0* C, T0* a1, T6 a2);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1275c12(void);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1275f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1389c6(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1275f13(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1390f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1390c3(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].is_empty */
extern T1 T1275f5(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last */
extern void T984f78(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T984f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1271f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1271f54(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1271f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1271f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1271f49(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T304f31(T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T997f7(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T304f30(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T998f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T998f8(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T304f22(T0* C);
/* ET_CLASS.set_features_flattened */
extern void T60f201(T0* C);
/* ET_FEATURE_FLATTENER.none_class */
extern T0* T304f21(T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T303f3(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T182f18(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T171f1807(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T941f5(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.preparse */
extern void T56f196(T0* C);
/* ET_LACE_UNIVERSE.preparse_multiple */
extern void T56f197(T0* C);
/* ET_EIFFEL_PREPARSER.preparse_clusters_multiple */
extern void T313f167(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_multiple */
extern void T313f168(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_multiple */
extern void T313f169(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_XACE_UNIVERSE.preparse */
extern void T53f204(T0* C);
/* ET_XACE_UNIVERSE.preparse_multiple */
extern void T53f205(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1008f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1008f18(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T57f311(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T926c734(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T57f93(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T28f311(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T28f93(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T570f40(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T179f20(T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T562f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T57f310(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T926c733(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T28f310(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T570f33(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T179f10(T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T562f31(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T57f309(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T926c732(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T57f92(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T28f309(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T28f92(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T57f308(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T926c731(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T57f91(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T28f308(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T28f91(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1007f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1007f11(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1007f5(T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1007f12(T0* C);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1000f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1000f12(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T57f332(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T926c754(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T57f104(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T28f332(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T28f104(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T57f331(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T926c753(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T28f331(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T571f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1000f5(T0* C);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T571f9(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1009f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1009f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1009f12(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T998f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T998f14(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T57f330(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T926c752(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T57f103(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T28f330(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T28f103(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T998f5(T0* C);
/* UT_VERSION.infix "<=" */
extern T1 T63f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.ise_5_6_latest */
extern unsigned char ge252os1732;
extern T0* ge252ov1732;
extern T0* T998f4(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T63c18(T6 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T998f15(T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T997f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T997f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T997f5(T0* C);
/* ET_PARENT_CHECKER2.ise_5_6_latest */
extern T0* T997f4(T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T997f12(T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T996f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T996f24(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T995f10(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T995f18(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T994f9(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T994f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T994f20(T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T182f17(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T182f28(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_5_6_latest */
extern T0* T182f12(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_generic_class_type */
extern void T1008f25(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_generic_class_type */
extern void T1007f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_generic_class_type */
extern void T1000f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_generic_class_type */
extern void T998f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_generic_class_type */
extern void T997f10(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_generic_class_type */
extern void T996f17(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_generic_class_type */
extern void T995f11(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_generic_class_type */
extern void T994f10(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_generic_class_type */
extern void T182f21(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T1001f52(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T1001f63(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_result_supplier */
extern void T56f200(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T1004f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_result_supplier */
extern void T53f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T1001f71(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T1001f68(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T182f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge252os1741;
extern T0* ge252ov1741;
extern T0* T182f10(T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T430f12(T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T182f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T1001f70(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_argument_supplier */
extern void T56f201(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T1004f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_argument_supplier */
extern void T53f209(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T1001f75(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T999f10(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T64f263(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T64f274(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.print */
extern void T64f287(T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T1416f5(T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1498f8(T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1498f11(T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T1416f2(T0* C);
/* STD_FILES.output */
extern unsigned char ge2106os26647;
extern T0* ge2106ov26647;
extern T0* T1416f3(T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1498c7(T0* a1);
/* CONSOLE.set_write_mode */
extern void T1498f10(T0* C);
/* CONSOLE.console_def */
extern T14 T1498f4(T0* C, T6 a1);
/* CONSOLE.make */
extern void T1498f9(T0* C, T0* a1);
/* STRING_8.out */
extern T0* T17f34(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.io */
extern unsigned char ge1os45;
extern T0* ge1ov45;
extern T0* T64f79(T0* C);
/* STD_FILES.set_output_default */
extern void T1416f6(T0* C);
/* STD_FILES.default_create */
extern T0* T1416c4(void);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T64f286(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.set_string_type_alive */
extern void T58f70(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T64f285(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_type_function_validity */
extern void T64f308(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_type_id */
extern void T64f442(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_name */
extern void T64f441(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_count */
extern void T64f440(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter */
extern void T64f439(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generating_type */
extern void T64f438(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_tuple_function_validity */
extern void T64f307(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T64f437(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_real_64_item */
extern void T64f436(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_real_32_item */
extern void T64f435(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_pointer_item */
extern void T64f434(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_object_comparison */
extern void T64f433(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_64_item */
extern void T64f432(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_32_item */
extern void T64f431(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_16_item */
extern void T64f430(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_8_item */
extern void T64f429(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_item_code */
extern void T64f428(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_64_item */
extern void T64f427(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_32_item */
extern void T64f426(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_16_item */
extern void T64f425(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_8_item */
extern void T64f424(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_count */
extern void T64f423(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_character_32_item */
extern void T64f422(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_character_8_item */
extern void T64f421(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_boolean_item */
extern void T64f420(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_special_function_validity */
extern void T64f306(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T64f419(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_element_size */
extern void T64f418(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_count */
extern void T64f417(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_aliased_resized_area */
extern void T64f416(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_real_function_validity */
extern void T64f305(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_real */
extern void T64f415(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer_64 */
extern void T64f414(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer */
extern void T64f413(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_to_double */
extern void T64f412(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_times */
extern void T64f411(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_power */
extern void T64f410(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_plus */
extern void T64f409(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_out */
extern void T64f408(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_opposite */
extern void T64f407(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_minus */
extern void T64f406(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_lt */
extern void T64f405(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_item */
extern void T64f404(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_identity */
extern void T64f403(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_64 */
extern void T64f402(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_32 */
extern void T64f401(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_divide */
extern void T64f400(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_64 */
extern void T64f399(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_32 */
extern void T64f398(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_pointer_function_validity */
extern void T64f304(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_to_integer_32 */
extern void T64f397(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_plus */
extern void T64f396(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_out */
extern void T64f395(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_item */
extern void T64f394(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_hash_code */
extern void T64f393(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_platform_function_validity */
extern void T64f303(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_wide_character_bytes */
extern void T64f392(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_real_bytes */
extern void T64f391(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_pointer_bytes */
extern void T64f390(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_windows */
extern void T64f389(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_vms */
extern void T64f388(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_unix */
extern void T64f387(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_thread_capable */
extern void T64f386(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_dotnet */
extern void T64f385(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_integer_bytes */
extern void T64f384(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_character_bytes */
extern void T64f383(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_boolean_bytes */
extern void T64f382(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_integer_function_validity */
extern void T64f302(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_64 */
extern void T64f381(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_32 */
extern void T64f380(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real */
extern void T64f379(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_double */
extern void T64f378(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_32 */
extern void T64f377(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_8 */
extern void T64f376(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_times */
extern void T64f375(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_power */
extern void T64f374(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_plus */
extern void T64f373(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_opposite */
extern void T64f372(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_mod */
extern void T64f371(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_minus */
extern void T64f370(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_lt */
extern void T64f369(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_item */
extern void T64f368(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_identity */
extern void T64f367(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_divide */
extern void T64f366(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_div */
extern void T64f365(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_xor */
extern void T64f364(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_right */
extern void T64f363(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_left */
extern void T64f362(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_or */
extern void T64f361(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_not */
extern void T64f360(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_and */
extern void T64f359(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_64 */
extern void T64f358(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_32 */
extern void T64f357(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_16 */
extern void T64f356(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_8 */
extern void T64f355(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_64 */
extern void T64f354(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_32 */
extern void T64f353(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_16 */
extern void T64f352(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_8 */
extern void T64f351(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_identified_function_validity */
extern void T64f301(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_object_id */
extern void T64f350(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_id_object */
extern void T64f349(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_function_validity */
extern void T64f300(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T64f348(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_character_function_validity */
extern void T64f299(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_32 */
extern void T64f347(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_8 */
extern void T64f346(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_natural_32_code */
extern void T64f345(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_item */
extern void T64f344(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_code */
extern void T64f343(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_boolean_function_validity */
extern void T64f298(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_xor */
extern void T64f342(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or_else */
extern void T64f341(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or */
extern void T64f340(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_not */
extern void T64f339(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_item */
extern void T64f338(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_implies */
extern void T64f337(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and_then */
extern void T64f336(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and */
extern void T64f335(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_arguments_function_validity */
extern void T64f297(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument_count */
extern void T64f334(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument */
extern void T64f333(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_any_function_validity */
extern void T64f296(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T64f332(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T64f471(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_twin */
extern void T64f331(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_is_equal */
extern void T64f330(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_same_type */
extern void T64f329(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_is_deep_equal */
extern void T64f328(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generator */
extern void T64f327(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type2 */
extern void T64f326(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_tagged_out */
extern void T64f325(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T64f324(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_deep_twin */
extern void T64f323(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_conforms_to */
extern void T64f322(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T64f274p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T64f290(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T64f289(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T64f288(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T64f309(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T61f713(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T61f764(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T61f820(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T61f842(T0* C);
/* ET_C_GENERATOR.print */
extern void T61f823(T0* C, T0* a1);
/* ET_C_GENERATOR.io */
extern T0* T61f342(T0* C);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T61f841(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T61f840(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T88f16(T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T46c11(T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T61f839(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T61f838(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T61f837(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T61f836(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T61f849(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T61f873(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T61f918(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T61f917(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_typed_item_body */
extern void T61f920(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T61f916(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T61f915(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T61f914(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T61f913(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T61f912(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T61f911(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T61f910(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T61f909(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T61f908(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T61f907(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T61f906(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T61f905(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T61f904(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T61f872(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_real_procedure_body */
extern void T61f871(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_procedure_body */
extern void T61f870(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_character_procedure_body */
extern void T61f869(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T61f868(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_procedure_body */
extern void T61f867(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_procedure_body */
extern void T61f866(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_procedure_body */
extern void T61f865(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T61f864(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T61f848(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T61f863(T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T61f876(T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T61f875(T0* C);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_body */
extern void T61f903(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generating_type_body */
extern void T61f902(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T61f862(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T61f901(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T61f901ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T61f900(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_typed_item_body */
extern void T61f919(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T61f899(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T61f898(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T61f897(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T61f896(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T61f895(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T61f894(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T61f893(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T61f892(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T61f891(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T61f890(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T61f889(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T61f888(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T61f887(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T61f886(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T61f861(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T61f885(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_real_function_body */
extern void T61f860(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T61f884(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_function_body */
extern void T61f859(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_character_function_body */
extern void T61f858(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T61f857(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T61f883(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T61f856(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_function_body */
extern void T61f855(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T61f854(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T61f853(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_function_body */
extern void T61f852(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_arguments_argument_body */
extern void T61f882(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T61f851(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T61f881(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T61f880(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T61f879(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T61f878(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type2_body */
extern void T61f877(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T61f874(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.is_empty */
extern T1 T188f7(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T672f45(T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T61f835(T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T955f2(T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T61f348(T0* C);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T61f834(T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T61f847(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T213f297(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T213f296(T0* C, T6 a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T61f833(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T61f832(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T61f846(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T61f831(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.is_query */
extern T1 T220f26(T0* C);
/* ET_DYNAMIC_FEATURE.is_query */
extern T1 T163f40(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T213f295(T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T61f339(T0* C, T6 a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T61f826(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T61f830(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1008f24(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1008f27(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1007f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1007f20(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T57f416(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T926c838(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T57f146(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T28f416(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T28f146(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1000f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T998f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T998f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T997f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T997f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T996f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T996f25(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T995f12(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T994f11(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T182f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T182f30(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T1001f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T1001f141(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T1001f202(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T999f40(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T64f531(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T64f584(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T64f628(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T61f714(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T61f765(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T206f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T206f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T206f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T206f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T206f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T206f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T206f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T206f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T206f62(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].resize */
extern T0* T878f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].resized_area */
extern T0* T877f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].copy_data */
extern void T877f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].move_data */
extern void T877f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].overlapping_move */
extern void T877f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].non_overlapping_move */
extern void T877f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T206f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T206f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T206f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T206f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T206f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T206f33(T0* C);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T1001f47(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T1001f58(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T57f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T926c743(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T57f99(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T28f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T28f99(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T57f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T926c742(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T57f98(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T28f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T28f98(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T57f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T926c741(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T57f97(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T28f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T28f97(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T521f40(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T520f40(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T57f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T926c740(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T57f96(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T28f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T28f96(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T57f317(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T926c739(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T57f95(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T28f317(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T28f95(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T57f316(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T926c738(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T57f94(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T28f316(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T28f94(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T999f11(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T64f264(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T64f275(T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T61f715(T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T61f766(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T61f821(T0* C, T0* a1, T1 a2);
/* ET_CALL_EXPRESSION.set_arguments */
extern void T203f30(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_name */
extern void T203f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T1001f48(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T1001f59(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T57f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T926c744(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T57f100(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T28f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T28f100(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T999f12(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T64f265(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T64f276(T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T61f716(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T61f767(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T1001f46(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T1001f57(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T999f13(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T64f266(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T64f277(T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T61f717(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T61f768(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T1001f53(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T1001f64(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T1001f74(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T1001f73(T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T659f6(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T1001f72(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_local_supplier */
extern void T56f202(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T1004f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_local_supplier */
extern void T53f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T1001f77(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T1001f76(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T57f325(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T926c747(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T57f102(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T28f325(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T28f102(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T57f324(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T926c746(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T57f101(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T28f324(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T28f101(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T57f323(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T926c745(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T28f323(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T999f14(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T999f20(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T64f267(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T64f278(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T64f294(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T64f293(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T64f292(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T64f311(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T64f310(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T61f718(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T61f769(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T61f822(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine */
extern void T61f843(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_compound */
extern void T61f845(T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T61f850(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T207f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T207f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T207f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T207f47(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T207f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T207f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T207f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T207f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T207f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T207f46(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T1001f55(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T1001f66(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T999f9(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T64f268(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T64f279(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T61f719(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T61f770(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T1001f97(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T1001f156(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T1001f219(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T999f66(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T64f557(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T64f610(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T64f655(T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T61f720(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T61f771(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T1001f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T1001f149(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T1001f216(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T999f58(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T64f549(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T64f602(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T64f652(T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T61f721(T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T61f772(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T1001f93(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T1001f152(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_constant */
extern void T1001f217(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T999f61(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T64f552(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T64f605(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_constant */
extern void T64f653(T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T61f722(T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T61f773(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character */
extern void T61f824(T0* C, T2 a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T1001f94(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T1001f153(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_constant */
extern void T1001f218(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T999f62(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T64f553(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T64f606(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T64f654(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T218f7(T0* C);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T61f723(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T61f774(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T1001f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T1001f154(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T999f63(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T64f554(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T64f607(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T61f724(T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T61f775(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T1001f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T1001f155(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T999f64(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T64f555(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T64f608(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T61f725(T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T61f776(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T1001f85(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T1001f144(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T1001f213(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T1001f212(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T1001f211(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T1001f210(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_constant */
extern void T1001f209(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T1001f208(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T1001f207(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T1001f206(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T1001f205(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_constant */
extern void T1001f204(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T999f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T64f544(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T64f597(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T64f649(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T64f648(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T64f647(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T64f646(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_constant */
extern void T64f645(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T64f644(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T64f643(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T64f642(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T64f641(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_constant */
extern void T64f640(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T61f726(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T61f777(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T1001f86(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T1001f145(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T999f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T64f545(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T64f598(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T61f727(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T61f778(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T1001f87(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T1001f146(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T999f55(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T64f546(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T64f599(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T61f728(T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T61f779(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T1001f88(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T1001f147(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_double_constant */
extern void T1001f215(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_constant */
extern void T1001f214(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T999f56(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T64f547(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T64f600(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_double_constant */
extern void T64f651(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_constant */
extern void T64f650(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T61f729(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T61f780(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T520f19(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T498f9(T0* C);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T1001f89(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T1001f148(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T999f57(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T64f548(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T64f601(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T61f730(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T61f781(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T521f19(T0* C);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T1001f83(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T1001f142(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T1001f203(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T999f51(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T64f542(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T64f595(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T64f639(T0* C, T0* a1);
/* ET_C_GENERATOR.process_true_constant */
extern void T61f731(T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T61f782(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T1001f84(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T1001f143(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T999f52(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T64f543(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T64f596(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T61f732(T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T61f783(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T1001f91(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T1001f150(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T999f59(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T64f550(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T64f603(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T61f733(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T1001f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T1001f151(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T999f60(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T64f551(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T64f604(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T61f734(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T1001f98(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T1001f157(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T1001f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T57f384(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T926c806(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T28f384(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T57f383(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T926c805(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T57f133(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T28f383(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T28f133(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.last_position */
extern T0* T1334f7(T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T555f15(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T57f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T926c804(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T57f132(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T28f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T28f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T1001f258(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_create_supplier */
extern void T56f205(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T1004f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_create_supplier */
extern void T53f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T57f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T926c803(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T28f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T267f16(T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T60f222(T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T161f12(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T1001f234(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T999f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T64f539(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T64f592(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T64f638(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T64f579(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T64f523(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_expression */
extern void T61f735(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T61f784(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T1008f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T1008f19(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T57f312(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T926c735(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T28f312(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T1007f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T1007f21(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T57f418(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T926c840(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T57f148(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T28f418(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T28f148(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T57f417(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T926c839(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T57f147(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T28f417(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T28f147(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T1000f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T998f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T997f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T996f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T996f26(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T995f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T994f12(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T182f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T182f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T1008f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T1008f20(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T57f313(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T926c736(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T28f313(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T1007f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T1007f22(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T57f419(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T926c841(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T28f419(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T1000f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T998f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T997f17(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T996f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T996f27(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T995f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T994f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T994f18(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T57f327(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T926c749(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T28f327(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T57f326(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T926c748(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T28f326(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T994f5(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T994f21(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T583f46(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T583f103(T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T583f104(T0* C, T6 a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T182f24(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T182f32(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T182f34(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T1001f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T1001f60(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T999f15(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T64f269(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T64f280(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T61f736(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T61f785(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T61f825(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T1001f50(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T1001f61(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T999f16(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T64f270(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T64f281(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T61f737(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T61f786(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T1001f51(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T1001f62(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T999f17(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T64f271(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T64f282(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T61f738(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T61f787(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T1001f54(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T1001f65(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T999f18(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T64f272(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T64f283(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T61f739(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T61f788(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T1001f56(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T1001f67(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T999f19(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T64f273(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T64f284(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T64f295(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_tuple_procedure_validity */
extern void T64f321(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_set_object_comparison */
extern void T64f470(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T64f469(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T64f472(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_real_64 */
extern void T64f468(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_real_32 */
extern void T64f467(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_pointer */
extern void T64f466(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_64 */
extern void T64f465(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_32 */
extern void T64f464(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_16 */
extern void T64f463(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_8 */
extern void T64f462(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_64 */
extern void T64f461(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_32 */
extern void T64f460(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_16 */
extern void T64f459(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_8 */
extern void T64f458(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_character_32 */
extern void T64f457(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_character_8 */
extern void T64f456(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_boolean */
extern void T64f455(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_special_procedure_validity */
extern void T64f320(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_put */
extern void T64f454(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_make */
extern void T64f453(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_real_procedure_validity */
extern void T64f319(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_set_item */
extern void T64f452(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_procedure_validity */
extern void T64f318(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure_call */
extern void T64f451(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_pointer_procedure_validity */
extern void T64f317(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_set_item */
extern void T64f450(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_integer_procedure_validity */
extern void T64f316(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_set_item */
extern void T64f449(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_identified_procedure_validity */
extern void T64f315(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_object_id_free */
extern void T64f448(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_character_procedure_validity */
extern void T64f314(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_set_item */
extern void T64f447(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_boolean_procedure_validity */
extern void T64f313(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_set_item */
extern void T64f446(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_any_procedure_validity */
extern void T64f312(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_copy */
extern void T64f445(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_copy */
extern void T64f444(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T64f284p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T61f740(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T61f789(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1008f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1008f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1008f22(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T57f314(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T926c737(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T28f314(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1007f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1007f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1007f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T57f420(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T926c842(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T28f420(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1000f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T998f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T997f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T996f21(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T995f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T995f19(T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T719f39(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force_relation */
extern void T1276f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put_indexed_relation */
extern void T1276f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force */
extern void T1276f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put */
extern void T1276f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].put */
extern void T1391f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_put */
extern void T1391f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_put */
extern void T1391f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_put */
extern void T1391f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_item */
extern T6 T1391f30(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_item */
extern T6 T1391f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_put */
extern void T1391f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search_position */
extern void T1391f54(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].hash_position */
extern T6 T1391f28(T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T719f62(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_item */
extern T0* T1391f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].resize */
extern void T1391f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_resize */
extern void T1391f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_resize */
extern void T1391f52(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].resize */
extern T0* T1393f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_IDENTIFIER].resized_area */
extern T0* T1392f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].copy_data */
extern void T1392f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_IDENTIFIER].move_data */
extern void T1392f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].overlapping_move */
extern void T1392f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].non_overlapping_move */
extern void T1392f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_resize */
extern void T1391f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_resize */
extern void T1391f48(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].resize */
extern void T1277f17(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].capacity */
extern T6 T1276f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].count */
extern T6 T1276f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].index_of */
extern T6 T1276f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found_item */
extern T6 T1391f21(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_item */
extern T6 T1391f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found */
extern T1 T1391f23(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search */
extern void T1391f40(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T994f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T994f19(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T57f329(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T926c751(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T28f329(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T57f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T926c750(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T28f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T719f71(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T719f70(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T182f25(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T182f33(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1008f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1007f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1000f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T998f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T997f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T996f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T995f16(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T994f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T182f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T182f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T1001f100(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T1001f159(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T999f37(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T818f15(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T999f93(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T64f560(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T64f613(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T61f741(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T61f790(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T1001f110(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T1001f169(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T1001f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_static_supplier */
extern void T56f203(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T1004f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_static_supplier */
extern void T53f211(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.arguments_count */
extern T6 T776f16(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T999f68(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T64f559(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T64f612(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T64f657(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T220f58(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T163f57(T0* C, T1 a1);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T61f742(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T61f791(T0* C, T0* a1);
/* ET_C_GENERATOR.resolved_formal_parameters */
extern T0* T61f338(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T1001f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T1001f172(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T1003f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T1003f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T1003f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T1003f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T1003f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T1003f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T1003f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T1003f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T1003f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T1003f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T1003f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T1003f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T1003f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T1003f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T1003f33(T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T1001f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T57f364(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T926c786(T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T785f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T57f123(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T28f364(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T28f123(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T57f363(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T926c785(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T28f363(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T57f366(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T926c788(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T57f122(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T28f366(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T28f122(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T999f41(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T999f84(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T57f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T926c851(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T28f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T57f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T926c850(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T28f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T791f24(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T785f13(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T457f22(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T57f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T926c849(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T28f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T57f427(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T926c848(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T57f150(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T28f427(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T28f150(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T999f6(T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T999f88(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T64f532(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T64f585(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T64f629(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T220f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T163f39(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T219f8(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].resize */
extern T0* T1429f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].resized_area */
extern T0* T1428f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].copy_data */
extern void T1428f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].move_data */
extern void T1428f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].overlapping_move */
extern void T1428f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].non_overlapping_move */
extern void T1428f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1428c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1429f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR].make_area */
extern T0* T1486c2(T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge923os16648;
extern T0* ge923ov16648;
extern T0* T219f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1429c3(void);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T219f5(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T219f7(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T219c6(T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T220c50(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T220f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T220f40(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_identified_feature */
extern T6 T220f39(T0* C, T6 a1);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T61f743(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T61f792(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T1001f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T1001f173(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T999f69(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T64f561(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T64f614(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T61f744(T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T61f793(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T1001f115(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T1001f174(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T57f367(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T926c789(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T57f124(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T28f367(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T28f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T1001f244(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T1001f243(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T1001f242(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T1001f241(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T1001f240(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T999f42(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T64f533(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T64f586(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T64f634(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T64f633(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T64f632(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T64f631(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T64f630(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T61f745(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T61f794(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T1001f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T1001f175(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T999f43(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T64f534(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T64f587(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T61f746(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T61f795(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T1001f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T1001f176(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T999f44(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T64f535(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T64f588(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T61f747(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T61f796(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T1001f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T1001f177(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T273f40(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T273f10(T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_empty */
extern T1 T273f21(T0* C);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T999f45(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T64f536(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T64f589(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T61f748(T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T61f797(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T1001f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T1001f178(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_left */
extern void T802f21(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1335f12(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1335c11(T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T273f23(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T802f20(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T999f46(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T64f537(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T64f590(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T61f749(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T61f798(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T1001f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T1001f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T57f370(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T926c792(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T507f44(T0* C);
/* ET_SYMBOL.text */
extern T0* T460f15(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T57f126(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T28f370(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T28f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T1001f245(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T999f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T64f538(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T64f591(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T64f637(T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T61f750(T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T61f799(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T507f18(T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T460f11(T0* C);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T1001f121(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T1001f180(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T999f49(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T64f540(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T64f593(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T61f751(T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T61f800(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T1001f122(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T1001f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T57f371(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T926c793(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T57f127(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T28f371(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T28f127(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T999f50(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T64f541(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T64f594(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T61f752(T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T61f801(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T1001f123(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T1001f182(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T1001f248(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.is_procedure */
extern T1 T809f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T57f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T926c821(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T57f138(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T28f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T28f138(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T1001f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T1001f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T1001f269(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T1001f280(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T1001f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T57f415(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T926c837(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T57f145(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T28f415(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T28f145(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T57f414(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T926c836(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T28f414(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T57f413(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T926c835(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T57f144(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T28f413(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T28f144(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T57f412(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T926c834(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T28f412(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T828f14(T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T828f8(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T57f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T926c833(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T57f143(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T28f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T28f143(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T57f410(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T926c832(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T28f410(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T173f30(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T173f20(T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T1001f273(T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1442f7(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1443c5(T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1442c6(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1488f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_area */
extern T0* T1499c2(T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1487c2(T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge511os16648;
extern T0* ge511ov16648;
extern T0* T1442f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1488c2(void);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T57f409(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T926c831(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T57f142(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T28f409(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T28f142(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T1001f268(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T1001f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T809f31(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T1001f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T1001f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T1001f266(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T1001f265(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T1001f246(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T57f398(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T926c820(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T28f398(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T1001f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T1001f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T1001f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T1001f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T999f72(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T999f87(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T64f564(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T64f617(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T64f662(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T64f678(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T64f689(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T64f693(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T234f65(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T184f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T64f677(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T64f688(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T64f692(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T64f695(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T227c12(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T64f682(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T64f681(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T64f676(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T64f687(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T64f661(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T64f675(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T64f674(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T64f673(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T64f660(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T64f672(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T64f686(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T64f691(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T64f696(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T64f671(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T64f685(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T61f753(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T61f803(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T61f828(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T196f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T196f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].resize */
extern T0* T872f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].resized_area */
extern T0* T871f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT].copy_data */
extern void T871f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT].move_data */
extern void T871f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].overlapping_move */
extern void T871f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].non_overlapping_move */
extern void T871f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T196f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T196f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T61f802(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T61f827(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T725f7(T0* C);
/* ET_CALL_INSTRUCTION.set_arguments */
extern void T200f14(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_name */
extern void T200f13(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_target */
extern void T200f12(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T1001f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T1001f183(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T999f65(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T64f556(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T64f609(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T61f754(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T61f804(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].force_last */
extern void T209f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_put */
extern void T209f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_put */
extern void T209f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_item */
extern T6 T209f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].hash_position */
extern T6 T209f29(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T813f16(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].resize */
extern void T209f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_resize */
extern void T209f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_resize */
extern void T209f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_resize */
extern void T209f62(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].resize */
extern T0* T889f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].resized_area */
extern T0* T888f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].copy_data */
extern void T888f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_CONSTANT].move_data */
extern void T888f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].overlapping_move */
extern void T888f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].non_overlapping_move */
extern void T888f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_item */
extern T0* T209f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_resize */
extern void T209f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_capacity */
extern T6 T209f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_put */
extern void T209f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].search_position */
extern void T209f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_equality_tester */
extern T0* T209f33(T0* C);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T1001f125(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T1001f184(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T174f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T1001f249(T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T814f13(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T814f15(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T999f70(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T64f562(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T64f615(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T64f658(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T61f755(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T61f805(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T1001f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T1001f185(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T1001f250(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T57f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T926c796(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T57f129(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T28f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T28f129(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T57f373(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T926c795(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T57f128(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T28f373(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T28f128(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T57f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T926c794(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T28f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T816f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T816f16(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T999f71(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T64f563(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T64f616(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T64f659(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T61f756(T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T61f806(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T1001f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T1001f186(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T1001f251(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T999f67(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T64f558(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T64f611(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T64f656(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T61f757(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T61f807(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T1001f128(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T1001f187(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T1001f255(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T1001f275(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T266f15(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T266f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T907f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_position */
extern void T907f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T266f7(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T266f6(T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T1001f254(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T56f207(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T1004f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T53f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T1001f272(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T57f408(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T926c830(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T57f139(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T28f408(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T28f139(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T57f407(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T926c829(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T28f407(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T266f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T57f406(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T926c828(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T57f141(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T28f406(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T28f141(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T57f405(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T926c827(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T57f140(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T28f405(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T28f140(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T57f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T926c826(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T28f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T56f204(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T1004f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T53f212(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T1001f253(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T1001f252(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T56f206(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T1004f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T53f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T1001f271(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T57f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T926c825(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T28f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T57f402(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T926c824(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T28f402(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T57f401(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T926c823(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T28f401(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T57f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T926c822(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T28f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T266f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T266f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T266f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T266f10(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T999f73(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T64f565(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T64f618(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T64f666(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T64f683(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T64f690(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T64f694(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T64f665(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T64f680(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T64f664(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T64f663(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T64f679(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T61f758(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T61f809(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T61f808(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T61f829(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T61f844(T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T1001f129(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T1001f188(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T999f74(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T64f566(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T64f619(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T61f759(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T61f811(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T61f810(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T1001f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T1001f189(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T999f75(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T64f567(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T64f620(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T61f760(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T61f813(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T61f812(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T1001f131(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T1001f190(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T1001f256(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T1001f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T999f76(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T64f568(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T64f621(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T64f667(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T64f684(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T61f761(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T61f815(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T61f814(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T1001f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T1001f191(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T999f77(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T64f569(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T64f622(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T61f762(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T61f817(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T61f816(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T1001f133(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T1001f192(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T999f78(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T64f570(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T64f623(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T61f763(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T61f819(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T61f818(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1008f23(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1008f26(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T57f425(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T926c843(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T961f5(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T28f425(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T57f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T926c846(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T28f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T57f423(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T28f423(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T57f422(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T926c845(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T28f422(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1286f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1286f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1286f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1286f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put */
extern void T1399f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1399f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1399f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1399f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1399f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1399f25(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1399f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1399f53(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1399f29(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T570f65(T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T562f63(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1399f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1399f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1399f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1399f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1399f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1399f47(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1287f20(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1286f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1286f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1399f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1399f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1399f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1399f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T57f421(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T926c844(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T28f421(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1007f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1000f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T998f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T997f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T996f16(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T995f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T994f16(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T182f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1008f29(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1007f24(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1000f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T998f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T997f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T996f22(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T995f20(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T994f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T182f26(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1008f30(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1007f25(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1000f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T998f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T997f21(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T996f23(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T995f21(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T994f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T182f27(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T1001f99(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T1001f158(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T1001f227(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T57f357(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T926c779(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T57f117(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T28f357(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T28f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T1001f226(T0* C, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T725f18(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T57f356(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T926c778(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T57f116(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T28f356(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T28f116(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T725f17(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T1001f222(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T999f21(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T64f474(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T64f490(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T64f515(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T64f514(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T64f573(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T64f510(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T61f921(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T61f933(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T1001f101(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T1001f160(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T57f358(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T926c780(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T57f118(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T28f358(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T28f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T1001f229(T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T731f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T1001f228(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T57f389(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T926c811(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T57f135(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T28f389(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T28f135(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T57f388(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T926c810(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T28f388(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T57f387(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T926c809(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T57f134(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T28f387(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T28f134(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T57f386(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T926c808(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T28f386(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T1001f261(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T57f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T926c807(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T28f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T1001f260(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T1001f259(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T999f22(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T64f475(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T64f491(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T64f517(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T64f577(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T64f516(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T64f576(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T64f575(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T64f574(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T61f922(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T61f934(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T220f42(T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T163f41(T0* C);
/* ET_IDENTIFIER.is_result */
extern T1 T129f85(T0* C);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T1001f102(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T1001f161(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T1001f230(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T57f359(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T926c781(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T57f119(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T28f359(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T28f119(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T273f20(T0* C, T0* a1);
/* UT_VERSION.infix ">=" */
extern T1 T63f15(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge252os1733;
extern T0* ge252ov1733;
extern T0* T1001f34(T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T999f23(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T64f476(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T64f492(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T64f518(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T64f578(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T64f238(T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T61f923(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T61f935(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T1001f103(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T1001f162(T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T749f4(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T999f33(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T999f85(T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T752f6(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T999f92(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T64f477(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T64f493(T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T61f924(T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T61f936(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T1001f104(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T1001f163(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T57f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T926c783(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T57f121(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T28f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T28f121(T0* C, T0* a1);
/* ET_CHOICE_LIST.choice */
extern T0* T762f6(T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T762f7(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T756f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T57f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T926c782(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T57f120(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T28f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T28f120(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T999f34(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T999f86(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T999f89(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T64f478(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T64f494(T0* C, T0* a1);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T61f925(T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T61f937(T0* C, T0* a1);
/* ET_C_GENERATOR.integer_ */
extern T0* T61f397(T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T1001f105(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T1001f164(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T1001f232(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T57f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T926c812(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T57f136(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T28f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T28f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T1001f231(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T705f6(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T705f7(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T999f24(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T999f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T64f479(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T64f495(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T64f520(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T64f520p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T64f519(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T64f519p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T61f926(T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T61f938(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T1001f106(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T1001f165(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T999f35(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T64f480(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T64f496(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T64f496p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T61f927(T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T61f939(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T1001f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T1001f166(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T741f7(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T741f8(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T999f25(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T64f481(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T64f497(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T64f497p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T61f928(T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T61f940(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T1001f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T1001f167(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T1001f233(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T1001f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T57f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T926c817(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T28f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T57f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T926c816(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T28f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T747f7(T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T747f9(T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T744f5(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T199f11(T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T743f7(T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T743f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T57f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T926c815(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T747f10(T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T743f10(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T28f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T57f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T926c814(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T57f137(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T28f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T28f137(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T57f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T926c813(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T28f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_CALL.arguments_count */
extern T6 T744f4(T0* C);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T999f27(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T64f482(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T64f498(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T64f521(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T64f580(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T64f624(T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T747f8(T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T743f8(T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T61f929(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T61f941(T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T61f945(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T1001f109(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T1001f168(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T999f28(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T64f483(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T64f499(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T61f930(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T61f942(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T1001f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T1001f170(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T1002f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T1002f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T1002f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T1002f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T1002f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T1002f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T1002f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T1002f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T1002f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T1002f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T1002f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T1002f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T1002f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T1002f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T1002f33(T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T1001f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T57f362(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T926c784(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T28f362(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T999f31(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T64f484(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T64f500(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T64f522(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T61f931(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T61f943(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T1001f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T1001f171(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T1001f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T57f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T926c787(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T28f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.arguments_count */
extern T6 T787f7(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T999f32(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T64f485(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T64f501(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T64f525(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T61f932(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T61f944(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_expression */
extern void T1001f282(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_expression_validity */
extern void T1001f286(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_expression */
extern void T999f80(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_expression */
extern void T64f635(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_expression_validity */
extern void T64f669(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_expression */
extern void T61f949(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_expression */
extern void T61f954(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T61f955(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T1001f283(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T1001f287(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T999f81(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T64f636(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T64f670(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T61f948(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T61f953(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_instruction */
extern void T1001f284(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_instruction_validity */
extern void T1001f288(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T1001f290(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.arguments_count */
extern T6 T200f7(T0* C);
/* ET_CALL_INSTRUCTION.is_qualified_call */
extern T1 T200f6(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_instruction */
extern void T999f29(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_instruction */
extern void T64f697(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_instruction_validity */
extern void T64f700(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T64f703(T0* C, T0* a1);
/* ET_C_GENERATOR.process_call_instruction */
extern void T61f946(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_instruction */
extern void T61f951(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T61f956(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T1001f285(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T1001f289(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T57f426(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T926c847(T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T495f9(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T57f149(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T28f426(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T28f149(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T999f26(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T64f698(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T64f701(T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T61f947(T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T61f952(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T1001f291(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T1001f292(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T999f79(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T64f699(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T64f702(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T61f950(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T332f17(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T234f76(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T233f76(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T229f75(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T215f75(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T157f72(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T944f14(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T332f14(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T234f70(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T233f70(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T229f69(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T215f69(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T189f14(T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T157f67(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T944f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T332f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1329f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].resize */
extern T0* T1454f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].resized_area */
extern T0* T1453f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].copy_data */
extern void T1453f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TARGET].move_data */
extern void T1453f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].overlapping_move */
extern void T1453f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].non_overlapping_move */
extern void T1453f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].make */
extern T0* T1453c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1454f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TARGET].make_area */
extern T0* T1490c2(T6 a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge938os16648;
extern T0* ge938ov16648;
extern T0* T1329f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1454c3(void);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1329f6(T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1329f4(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1329f8(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1329c7(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T189f19(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.reset */
extern void T679f62(T0* C);
/* ET_INFIX_NAME.reset */
extern void T678f91(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T677f62(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T676f63(T0* C);
/* ET_IDENTIFIER.reset */
extern void T129f110(T0* C);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T679f63(T0* C, T6 a1);
/* ET_INFIX_NAME.set_seed */
extern void T678f92(T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T677f63(T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T676f64(T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T129f98(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T961f59(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T721f61(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T719f69(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_unaliased_to_string */
extern void T583f102(T0* C, T0* a1);
/* ET_BIT_N.append_unaliased_to_string */
extern void T582f102(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T570f72(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T562f68(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T181f91(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T173f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_unaliased_to_string */
extern void T174f97(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T430f28(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T172f95(T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T60f163(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T961f58(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T721f64(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T719f68(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T583f101(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T582f99(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T570f73(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T562f69(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T181f92(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T173f28(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T174f98(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T430f30(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T172f97(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T60f214(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T961f61(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T721f63(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T719f67(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T583f100(T0* C);
/* ET_BIT_N.reset */
extern void T582f101(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T570f74(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T571f14(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T562f70(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T181f94(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T961f60(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T721f62(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T719f66(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T583f99(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T582f100(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T570f75(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T562f71(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T181f93(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T672f82(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T671f80(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T333f76(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T327f80(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T672f83(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T672f97(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T671f81(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T671f95(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T671f95p1(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T333f77(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T333f92(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T327f81(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T327f95(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T327f95p1(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T672f87(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T671f85(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T333f81(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T327f85(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T672f88(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T671f86(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T333f82(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T327f86(T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T666f78(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T665f82(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T663f82(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T261f70(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T260f72(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T258f72(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T176f84(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T666f79(T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T666f79p1(T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T666f94(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T665f83(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T665f83p1(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T665f97(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T665f97p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T663f83(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T663f83p1(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T663f97(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T663f97p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T261f71(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T261f71p1(T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T261f81(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T260f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T260f73p1(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T260f85(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T258f73(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T258f73p1(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T258f84(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T176f85(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T176f85p1(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T176f95(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T666f83(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T665f87(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T663f87(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T261f83(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T260f87(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T258f86(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T176f97(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T666f84(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T665f88(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T663f88(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T261f82(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T260f86(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T258f85(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T176f96(T0* C);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T174f99(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T172f96(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T60f164(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T174f100(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T172f98(T0* C);
/* ET_CLASS.reset_type */
extern void T60f215(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T234f74(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T233f74(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T229f73(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T215f73(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T157f70(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T234f68(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T233f68(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T229f67(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T215f67(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T157f65(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T234f69(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T233f69(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T229f68(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T215f68(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T157f66(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T234f75(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T233f75(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T229f74(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T215f74(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T157f71(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T234f78(T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T233f78(T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T229f77(T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T215f77(T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T157f74(T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T234f67(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T233f67(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T229f66(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T215f66(T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T157f64(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T234f79(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T233f79(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T229f78(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T215f78(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T157f75(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T234f71(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T233f71(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T229f70(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T215f70(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T157f69(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T349f2(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T346f26(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T346f36(T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T346f12(T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1024c6(void);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1022c10(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1293c9(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1293f7(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1294c7(T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T105f12(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1315c32(T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1450c3(void);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1315f35(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1315f23(T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1451c3(T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1315f36(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1315f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1315f29(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1315f20(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1315f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1315f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1315f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1452f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_NAMESPACE].make_area */
extern T0* T1489c2(T6 a1);
/* SPECIAL [XM_NAMESPACE].make */
extern T0* T1449c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1452c3(void);
/* XM_DOCUMENT.make */
extern T0* T99c15(void);
/* XM_DOCUMENT.make_with_root_named */
extern void T99f16(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T99f18(T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T99f18p1(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].make */
extern T0* T1420c3(T0* a1);
/* XM_DOCUMENT.is_empty */
extern T1 T99f13(T0* C);
/* XM_DOCUMENT.before_addition */
extern void T99f19(T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T100f39(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].remove */
extern void T288f14(T0* C);
/* XM_DOCUMENT.remove_at_cursor */
extern void T99f26(T0* C, T0* a1);
/* XM_DOCUMENT.move_all_cursors */
extern void T99f33(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.set_last_cell */
extern void T99f32(T0* C, T0* a1);
/* XM_DOCUMENT.remove_last */
extern void T99f31(T0* C);
/* XM_DOCUMENT.move_last_cursors_after */
extern void T99f36(T0* C);
/* XM_DOCUMENT.wipe_out */
extern void T99f34(T0* C);
/* XM_DOCUMENT.move_all_cursors_after */
extern void T99f37(T0* C);
/* XM_DOCUMENT.remove_first */
extern void T99f30(T0* C);
/* XM_DOCUMENT.set_first_cell */
extern void T99f35(T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T99f21(T0* C, T0* a1);
/* XM_DOCUMENT.new_cursor */
extern T0* T99f9(T0* C);
/* XM_DOCUMENT.list_make */
extern void T99f17(T0* C);
/* XM_ELEMENT.make */
extern T0* T100c29(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.list_make */
extern void T100f33(T0* C);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1253os10537;
extern T0* ge1253ov10537;
extern T0* T99f7(T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1319c9(void);
/* XM_NAMESPACE.make */
extern void T1319f8(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1319c8(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T104f6(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T104f6p1(T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T349f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T346f28(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T105f14(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T105f22(T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T101f4(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T947f14(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1340f4(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1340c3(T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].is_empty */
extern T1 T947f5(T0* C);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T948c3(T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.is_position_table_enabled */
extern T1 T105f8(T0* C);
/* XM_COMMENT.make_last */
extern T0* T1316c4(T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T100f28(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T100f28p1(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T100f28p0(T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T100f34(T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T100f17(T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T100f16(T0* C);
/* XM_COMMENT.make_last_in_document */
extern T0* T1316c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T104f8(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T104f8p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T349f5(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T346f29(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T105f15(T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1317c5(T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1317c4(T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T104f9(T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T104f9p1(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T349f6(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T346f30(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T105f16(T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1318c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T104f10(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T104f10p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T349f9(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T346f33(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1022f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1293f11(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1402f5(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1402f6(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1402c4(T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].is_empty */
extern T1 T1293f6(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1022f8(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T45f103(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1022f9(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T45c102(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T45f52(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T105f17(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_last */
extern T0* T100c27(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T100c26(T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T99f20(T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T99f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T105f7(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1315f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1315f40(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1315f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1315f26(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1315f22(T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1319f5(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1315f38(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1315f48(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1315f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1315f46(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].resize */
extern T0* T1452f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].resized_area */
extern T0* T1449f3(T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].copy_data */
extern void T1449f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_NAMESPACE].move_data */
extern void T1449f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].overlapping_move */
extern void T1449f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].non_overlapping_move */
extern void T1449f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1315f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1315f30(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1315f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1315f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1315f21(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1315f37(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1315f34(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1450f1(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].any_ */
extern T0* T1450f2(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1315f17(T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1319f7(T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1319f3(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1315f24(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1315f27(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T104f11(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T104f11p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T349f8(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T346f32(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1022f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1293f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1293f14(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1402f7(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1293f13(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1294f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1294f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1293f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1293f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1022f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1227os26066;
extern T0* ge1227ov26066;
extern T0* T1022f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T346f32p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1022f2(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1294f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1293f18(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1293f19(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1293f20(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1294f13(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1294f9(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1293f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1294f14(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1293f8(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1294f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1294f8(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1293f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1227os26067;
extern T0* ge1227ov26067;
extern T0* T1022f6(T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T346f9(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T105f19(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T100f15(T0* C);
/* XM_DOCUMENT.process */
extern void T99f22(T0* C, T0* a1);
/* XM_NODE_TYPER.process_document */
extern void T1421f12(T0* C, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T100f22(T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T99f10(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T104f13(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T104f13p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T349f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T346f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1022f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T45f104(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1293f5(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1022f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T346f38(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1024f7(T0* C, T0* a1);
/* DS_LINKED_QUEUE [STRING_8].is_empty */
extern T1 T1024f4(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1022f13(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T346f14(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T346f21(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T346f24(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1194os19411;
extern T0* ge1194ov19411;
extern T0* T346f20(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T105f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T287c5(T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T104f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T104f15p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T349f3(T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T346f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T105f13(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T104f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T104f7p1(T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T349f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T346f31(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T346f31p1(T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T346f11(T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T346f37(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T346f39(T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1024f8(T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1024f9(T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T346f19(T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1194os19410;
extern T0* ge1194ov19410;
extern T0* T346f23(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1194os19418;
extern T0* ge1194ov19418;
extern T0* T346f18(T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1194os19417;
extern T0* ge1194ov19417;
extern T0* T346f17(T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T346f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1194os19412;
extern T0* ge1194ov19412;
extern T0* T346f22(T0* C);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1024f5(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T346f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1022f5(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T105f18(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T104f12(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T104f12p1(T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T349f11(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T346f35(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T105f20(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T104f14(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T104f14p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T349f12(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T346f41(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T105f23(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T104f16(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T346f40(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T105f11(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T104f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T214f24(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T185f6(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T183f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T214f29(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T214f29p1(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T185f10(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T185f10p1(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T183f6(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T183f6p1(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T214f28(T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T185f9(T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T183f8(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T214f22(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T214f32(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T214f36(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T185f8(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T185f3(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T183f9(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T214f23(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T214f33(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T214f37(T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T185f7(T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T183f7(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T214f25(T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T185f5(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T183f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T41f41(T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T37f27(T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T96c8(void);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T96f5(T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T345c3(T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T36f30(T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T93c8(void);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T93f5(T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T343c3(T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T35f30(T0* C);
/* AP_FLAG.reset */
extern void T33f23(T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T41f42(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T41f43(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T41f30(T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T83f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T41f29(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T41f35(T0* C, T0* a1, T6 a2);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1408f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1408f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1408f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T81f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T81f29(T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1407f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T26f18(T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1407f2(T0* C);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1408c2(T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1407c3(void);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T37f28(T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T96f9(T0* C, T6 a1);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T96f6(T0* C);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T36f31(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern unsigned char ge57os4115;
extern T0* ge57ov4115;
extern T0* T36f22(T0* C);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern unsigned char ge278os3472;
extern T0* ge278ov3472;
extern T0* T36f23(T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T1406c3(void);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T93f9(T0* C, T1 a1);
/* DS_LINKABLE [BOOLEAN].put_right */
extern void T342f4(T0* C, T0* a1);
/* DS_LINKABLE [BOOLEAN].make */
extern T0* T342c3(T1 a1);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T93f6(T0* C);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T80f22(T0* C, T0* a1);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T1406f1(T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T1406f2(T0* C);
/* AP_BOOLEAN_OPTION.true_strings */
extern unsigned char ge57os4116;
extern T0* ge57ov4116;
extern T0* T36f21(T0* C);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T35f32(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T88f15(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T35f32p1(T0* C, T0* a1);
/* AP_FLAG.record_occurrence */
extern void T33f25(T0* C, T0* a1);
/* KL_STDIN_FILE.read_character */
extern void T960f20(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T960f23(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T960f15(T0* C, T14 a1);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T960f7(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T960f12(T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T951f32(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1243f7(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1243f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T951f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T951f37(T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T951f38(T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1243f8(T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER_8].put_right */
extern void T1353f4(T0* C, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].is_empty */
extern T1 T1243f4(T0* C);
/* DS_LINKABLE [CHARACTER_8].make */
extern T0* T1353c3(T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T951f24(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1293os25507;
extern T0* ge1293ov25507;
extern T0* T951f27(T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1244f7(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1244f6(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1244f5(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1244f4(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1244f3(T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge336os2934;
extern T0* ge336ov2934;
extern T0* T951f22(T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1244c16(void);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T951f26(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T951f25(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T951f36(T0* C);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1430f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T951f34(T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T949f31(T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T949f30(T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1244f2(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1244f1(T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T22f48(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T22f51(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T22f30(T0* C, T14 a1);
/* KL_STDIN_FILE.close */
extern void T960f21(T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T951f33(T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T22f41(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T22f44(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T22f45(T0* C, T14 a1);
/* ET_KEYWORD.position */
extern T0* T179f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T685f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T677f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T479f36(T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T685f8(T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T679f8(T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T677f8(T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1228f25(T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1226f27(T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1228f22(T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1226f24(T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1267f4(T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1228f23(T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1226f25(T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1267f5(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1268f9(T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1228f24(T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1226f26(T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1228f10(T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1226f11(T0* C);
/* ET_EXTERNAL_PROCEDURE.immediate_feature */
extern T0* T672f53(T0* C);
/* ET_ONCE_PROCEDURE.immediate_feature */
extern T0* T671f51(T0* C);
/* ET_DEFERRED_FUNCTION.immediate_feature */
extern T0* T666f55(T0* C);
/* ET_ONCE_FUNCTION.immediate_feature */
extern T0* T665f56(T0* C);
/* ET_DO_FUNCTION.immediate_feature */
extern T0* T663f56(T0* C);
/* ET_DEFERRED_PROCEDURE.immediate_feature */
extern T0* T333f49(T0* C);
/* ET_DO_PROCEDURE.immediate_feature */
extern T0* T327f51(T0* C);
/* ET_ATTRIBUTE.immediate_feature */
extern T0* T261f51(T0* C);
/* ET_UNIQUE_ATTRIBUTE.immediate_feature */
extern T0* T260f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.immediate_feature */
extern T0* T258f53(T0* C);
/* ET_EXTERNAL_FUNCTION.immediate_feature */
extern T0* T176f59(T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1226f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_redeclared */
extern T1 T672f55(T0* C);
/* ET_ONCE_PROCEDURE.is_redeclared */
extern T1 T671f53(T0* C);
/* ET_DEFERRED_FUNCTION.is_redeclared */
extern T1 T666f57(T0* C);
/* ET_ONCE_FUNCTION.is_redeclared */
extern T1 T665f58(T0* C);
/* ET_DO_FUNCTION.is_redeclared */
extern T1 T663f58(T0* C);
/* ET_DEFERRED_PROCEDURE.is_redeclared */
extern T1 T333f51(T0* C);
/* ET_DO_PROCEDURE.is_redeclared */
extern T1 T327f53(T0* C);
/* ET_ATTRIBUTE.is_redeclared */
extern T1 T261f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_redeclared */
extern T1 T260f55(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_redeclared */
extern T1 T258f55(T0* C);
/* ET_EXTERNAL_FUNCTION.is_redeclared */
extern T1 T176f61(T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1228f13(T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1226f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.redeclared_feature */
extern T0* T672f56(T0* C);
/* ET_ONCE_PROCEDURE.redeclared_feature */
extern T0* T671f54(T0* C);
/* ET_DEFERRED_FUNCTION.redeclared_feature */
extern T0* T666f58(T0* C);
/* ET_ONCE_FUNCTION.redeclared_feature */
extern T0* T665f59(T0* C);
/* ET_DO_FUNCTION.redeclared_feature */
extern T0* T663f59(T0* C);
/* ET_DEFERRED_PROCEDURE.redeclared_feature */
extern T0* T333f52(T0* C);
/* ET_DO_PROCEDURE.redeclared_feature */
extern T0* T327f54(T0* C);
/* ET_ATTRIBUTE.redeclared_feature */
extern T0* T261f54(T0* C);
/* ET_UNIQUE_ATTRIBUTE.redeclared_feature */
extern T0* T260f56(T0* C);
/* ET_CONSTANT_ATTRIBUTE.redeclared_feature */
extern T0* T258f56(T0* C);
/* ET_EXTERNAL_FUNCTION.redeclared_feature */
extern T0* T176f62(T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1228f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inherited */
extern T1 T672f57(T0* C);
/* ET_ONCE_PROCEDURE.is_inherited */
extern T1 T671f55(T0* C);
/* ET_DEFERRED_FUNCTION.is_inherited */
extern T1 T666f59(T0* C);
/* ET_ONCE_FUNCTION.is_inherited */
extern T1 T665f60(T0* C);
/* ET_DO_FUNCTION.is_inherited */
extern T1 T663f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inherited */
extern T1 T333f53(T0* C);
/* ET_DO_PROCEDURE.is_inherited */
extern T1 T327f55(T0* C);
/* ET_ATTRIBUTE.is_inherited */
extern T1 T261f55(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inherited */
extern T1 T260f57(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inherited */
extern T1 T258f57(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inherited */
extern T1 T176f63(T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1228f15(T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1226f16(T0* C);
/* ET_EXTERNAL_PROCEDURE.inherited_feature */
extern T0* T672f58(T0* C);
/* ET_ONCE_PROCEDURE.inherited_feature */
extern T0* T671f56(T0* C);
/* ET_DEFERRED_FUNCTION.inherited_feature */
extern T0* T666f60(T0* C);
/* ET_ONCE_FUNCTION.inherited_feature */
extern T0* T665f61(T0* C);
/* ET_DO_FUNCTION.inherited_feature */
extern T0* T663f61(T0* C);
/* ET_DEFERRED_PROCEDURE.inherited_feature */
extern T0* T333f54(T0* C);
/* ET_DO_PROCEDURE.inherited_feature */
extern T0* T327f56(T0* C);
/* ET_ATTRIBUTE.inherited_feature */
extern T0* T261f56(T0* C);
/* ET_UNIQUE_ATTRIBUTE.inherited_feature */
extern T0* T260f58(T0* C);
/* ET_CONSTANT_ATTRIBUTE.inherited_feature */
extern T0* T258f58(T0* C);
/* ET_EXTERNAL_FUNCTION.inherited_feature */
extern T0* T176f64(T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T672f51(T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T671f49(T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T666f53(T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T665f54(T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T663f54(T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T333f47(T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T327f49(T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T261f49(T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T260f51(T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T258f51(T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T176f57(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_adapted */
extern T1 T672f59(T0* C);
/* ET_ONCE_PROCEDURE.is_adapted */
extern T1 T671f57(T0* C);
/* ET_DEFERRED_FUNCTION.is_adapted */
extern T1 T666f61(T0* C);
/* ET_ONCE_FUNCTION.is_adapted */
extern T1 T665f62(T0* C);
/* ET_DO_FUNCTION.is_adapted */
extern T1 T663f62(T0* C);
/* ET_DEFERRED_PROCEDURE.is_adapted */
extern T1 T333f55(T0* C);
/* ET_DO_PROCEDURE.is_adapted */
extern T1 T327f57(T0* C);
/* ET_ATTRIBUTE.is_adapted */
extern T1 T261f57(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_adapted */
extern T1 T260f59(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_adapted */
extern T1 T258f59(T0* C);
/* ET_EXTERNAL_FUNCTION.is_adapted */
extern T1 T176f65(T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1228f11(T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1226f12(T0* C);
/* ET_EXTERNAL_PROCEDURE.adapted_feature */
extern T0* T672f54(T0* C);
/* ET_ONCE_PROCEDURE.adapted_feature */
extern T0* T671f52(T0* C);
/* ET_DEFERRED_FUNCTION.adapted_feature */
extern T0* T666f56(T0* C);
/* ET_ONCE_FUNCTION.adapted_feature */
extern T0* T665f57(T0* C);
/* ET_DO_FUNCTION.adapted_feature */
extern T0* T663f57(T0* C);
/* ET_DEFERRED_PROCEDURE.adapted_feature */
extern T0* T333f50(T0* C);
/* ET_DO_PROCEDURE.adapted_feature */
extern T0* T327f52(T0* C);
/* ET_ATTRIBUTE.adapted_feature */
extern T0* T261f52(T0* C);
/* ET_UNIQUE_ATTRIBUTE.adapted_feature */
extern T0* T260f54(T0* C);
/* ET_CONSTANT_ATTRIBUTE.adapted_feature */
extern T0* T258f54(T0* C);
/* ET_EXTERNAL_FUNCTION.adapted_feature */
extern T0* T176f60(T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T283f39(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T136f22(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T316f5(T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T283f20(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T136f24(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T316f4(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T316f6(T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T283f21(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T136f25(T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T316f8(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T316f11(T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T283f25(T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T283f33(T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T283f35(T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T283f34(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T136f19(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T136f34(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T136f17(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T136f16(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T136f18(T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T316f7(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T316f10(T0* C);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T283f22(T0* C, T2 a1);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T283f29(T0* C);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T136f27(T0* C, T2 a1);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T136f33(T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T316f9(T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T283f23(T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T136f28(T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T849f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T839f15(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T838f16(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T837f16(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T836f17(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T835f18(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T833f18(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T823f8(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T816f11(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T814f10(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T813f8(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T809f11(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T808f7(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T807f6(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T806f7(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T802f7(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T800f7(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T799f7(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T798f7(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T797f7(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T792f8(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T791f9(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T776f11(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T728f7(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T555f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T526f17(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T525f17(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T524f18(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T523f18(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T521f18(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T520f18(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T519f28(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T518f29(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T517f29(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T516f19(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T515f23(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T514f18(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T513f18(T0* C);
/* ET_VOID.assertion */
extern T0* T501f12(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T465f16(T0* C);
/* ET_RESULT.assertion */
extern T0* T222f12(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T205f15(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T203f12(T0* C);
/* ET_CURRENT.assertion */
extern T0* T198f13(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T129f75(T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T849f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1434f13(T0* C);
/* ET_CONVERT_EXPRESSION.agent_actual_argument */
extern T0* T1334f11(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T847f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T839f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T838f14(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T837f14(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T836f15(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T835f16(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T833f16(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T823f7(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T816f10(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T814f9(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T813f7(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T809f10(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T808f6(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T807f5(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T806f6(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T802f6(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T800f6(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T799f6(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T798f6(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T797f6(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T792f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T791f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T776f10(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T728f6(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T555f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T526f10(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T525f10(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T524f11(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T523f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T521f11(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T520f11(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T519f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T518f22(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T517f22(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T516f12(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T515f16(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T514f11(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T513f11(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T510f8(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T501f11(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T465f9(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T222f11(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T205f14(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T203f11(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T198f12(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T129f74(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T839f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T838f15(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T837f15(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T836f16(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T835f17(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T833f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T839f23(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T836f24(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T776f7(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T774f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T526f9(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T525f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T519f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T518f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T517f21(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T513f10(T0* C);
/* ET_CALL_EXPRESSION.choice */
extern T0* T203f10(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T129f73(T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T776f19(T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T526f29(T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T525f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T519f36(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T518f37(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T517f37(T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T513f30(T0* C);
/* ET_CALL_EXPRESSION.lower */
extern T0* T203f19(T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T129f89(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T776f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T526f30(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T525f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T519f37(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T518f38(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T517f38(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T513f31(T0* C);
/* ET_CALL_EXPRESSION.is_range */
extern T1 T203f20(T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T129f90(T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T776f21(T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T526f31(T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T525f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T519f38(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T518f39(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T517f39(T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T513f32(T0* C);
/* ET_CALL_EXPRESSION.upper */
extern T0* T203f21(T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T129f91(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T570f64(T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T571f11(T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T562f62(T0* C);
/* ET_CLASS.last_leaf */
extern T0* T60f158(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1434f16(T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T807f14(T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T728f13(T0* C);
/* ET_CALL_EXPRESSION.arguments_count */
extern T6 T203f16(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T972f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T961f39(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T721f40(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T719f35(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T717f6(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T583f37(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T582f36(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T570f54(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T562f51(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T181f30(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T174f33(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T172f29(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T60f93(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T685f14(T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T681f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T685f11(T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T681f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T685f12(T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T681f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T685f13(T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T681f10(T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T681f38(T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T685f38(T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T681f56(T0* C);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T685f39(T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T685f40(T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T681f57(T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T681f58(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T685f9(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T681f6(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T685f42(T0* C, T0* a1);
/* KL_ANY_ROUTINES.to_any */
extern T0* T79f4(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.any_ */
extern T0* T685f43(T0* C);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T681f60(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T679f58(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T679f44(T0* C);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T678f69(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T677f58(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T677f31(T0* C);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T676f55(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T516f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T515f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T514f7(T0* C);
/* ET_SYMBOL.position */
extern T0* T460f8(T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T454f9(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T526f33(T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T1338c9(T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T1338f10(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T525f33(T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T524f29(T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T523f29(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T521f31(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T520f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T519f35(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T518f36(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T517f36(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T516f31(T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T515f35(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T514f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T513f34(T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T507f81(T0* C);
/* ET_VOID.last_position */
extern T0* T501f23(T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T465f27(T0* C);
/* ET_SYMBOL.last_position */
extern T0* T460f16(T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T457f17(T0* C);
/* ET_RESULT.last_position */
extern T0* T222f24(T0* C);
/* ET_CURRENT.last_position */
extern T0* T198f24(T0* C);
/* ET_KEYWORD.last_position */
extern T0* T179f21(T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T129f87(T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T638f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T323f5(T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T636f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T323f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T957f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T590f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T589f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T578f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T957f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T578f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T957f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T721f54(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T719f58(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T590f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T171f895(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T589f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T171f894(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T583f88(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T582f87(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T578f6(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T957f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T171f892(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T576f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T171f893(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T576f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T576f9(T0* C);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T721f19(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T719f38(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T583f6(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T582f10(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T578f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T171f891(T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T519f31(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T518f32(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T517f32(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T399f57(T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T359c7(T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T397f55(T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T393f56(T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T358f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T399f60(T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T397f61(T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T393f59(T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T358f65(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T399f61(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T951f20(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T951f13(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T397f48(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T393f60(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T358f66(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T399f62(T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T397f50(T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T393f61(T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T358f43(T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T683f4(T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T79f3(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T683f5(T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T679f59(T0* C, T0* a1);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T678f70(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T678f29(T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T677f59(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T676f56(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T676f26(T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T129f93(T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T129f46(T0* C);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T683f3(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T679f10(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T678f7(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T677f10(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T676f7(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T129f51(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T959f10(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T959f12(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T959f14(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T959f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T959f18(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T959f17(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T959f5(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T959f4(T0* C);
/* ET_FILE_POSITION.integer_ */
extern T0* T959f3(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T519f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T519f48(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T519f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T518f15(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T518f49(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T518f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T517f15(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T517f49(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T517f17(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T507f20(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T507f87(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T507f43(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T498f17(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T498f76(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T498f21(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T460f13(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T460f73(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T460f14(T0* C);
/* ET_CURRENT.to_text */
extern T0* T198f17(T0* C);
/* ET_CURRENT.append_to_string */
extern void T198f33(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T198f21(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T179f18(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T179f77(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T179f19(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T129f55(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T129f111(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_null */
extern T1 T526f24(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null */
extern T1 T525f24(T0* C);
/* ET_FALSE_CONSTANT.is_null */
extern T1 T524f24(T0* C);
/* ET_TRUE_CONSTANT.is_null */
extern T1 T523f24(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null */
extern T1 T521f25(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null */
extern T1 T520f25(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T519f19(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T518f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T517f20(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T516f25(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T515f29(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T514f24(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null */
extern T1 T513f25(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T507f9(T0* C);
/* ET_VOID.is_null */
extern T1 T501f18(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T498f20(T0* C);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T485f10(T0* C);
/* ET_FREE_OPERATOR.is_null */
extern T1 T479f43(T0* C);
/* ET_BIT_CONSTANT.is_null */
extern T1 T465f22(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T460f9(T0* C);
/* ET_PRECURSOR_KEYWORD.is_null */
extern T1 T457f15(T0* C);
/* ET_AGENT_KEYWORD.is_null */
extern T1 T454f12(T0* C);
/* ET_RESULT.is_null */
extern T1 T222f19(T0* C);
/* ET_CURRENT.is_null */
extern T1 T198f20(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T179f15(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T129f47(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1338f3(T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T526f22(T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T525f22(T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T524f22(T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T523f22(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T521f23(T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T520f23(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T519f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T518f18(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T517f18(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T516f23(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T515f27(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T514f22(T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T513f23(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T507f10(T0* C);
/* ET_VOID.line */
extern T6 T501f16(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T498f18(T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T495f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T485f11(T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T479f41(T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T465f20(T0* C);
/* ET_SYMBOL.line */
extern T6 T460f10(T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T457f13(T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T454f10(T0* C);
/* ET_RESULT.line */
extern T6 T222f17(T0* C);
/* ET_CURRENT.line */
extern T6 T198f18(T0* C);
/* ET_KEYWORD.line */
extern T6 T179f16(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T129f36(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1338f2(T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T526f23(T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T525f23(T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T524f23(T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T523f23(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T521f24(T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T520f24(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T519f18(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T518f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T517f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T516f24(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T515f28(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T514f23(T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T513f24(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T507f19(T0* C);
/* ET_VOID.column */
extern T6 T501f17(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T498f19(T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T495f11(T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T485f19(T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T479f42(T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T465f21(T0* C);
/* ET_SYMBOL.column */
extern T6 T460f12(T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T457f14(T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T454f11(T0* C);
/* ET_RESULT.column */
extern T6 T222f18(T0* C);
/* ET_CURRENT.column */
extern T6 T198f19(T0* C);
/* ET_KEYWORD.column */
extern T6 T179f17(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T129f37(T0* C);
/* ET_INVARIANTS.clients */
extern unsigned char ge535os12861;
extern T0* ge535ov12861;
extern T0* T538f19(T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T538f18(T0* C);
/* ET_INVARIANTS.type */
extern T0* T538f20(T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T538f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T672f47(T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T671f46(T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T666f50(T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T665f52(T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T663f52(T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T538f15(T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T333f43(T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T327f46(T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T261f46(T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T260f48(T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T258f48(T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T176f54(T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T538f17(T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T672f48(T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T666f51(T0* C);
/* ET_INVARIANTS.locals */
extern T0* T538f16(T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T333f44(T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T261f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T260f49(T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T258f49(T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T176f55(T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T538f13(T0* C);
/* ET_DYNAMIC_TYPE_LIST.dynamic_type */
extern T0* T188f6(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1180f4(T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T832f7(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1434f15(T0* C);
/* ET_CONVERT_EXPRESSION.is_open_operand */
extern T1 T1334f13(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1180f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T839f21(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T838f24(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T837f24(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T836f22(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T835f25(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T833f25(T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T823f12(T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T816f17(T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T814f17(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T813f13(T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T809f17(T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T808f11(T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T807f12(T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T806f11(T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T802f12(T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T800f11(T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T799f11(T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T798f11(T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T797f11(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T792f11(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T791f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T776f15(T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T728f12(T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T555f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T526f26(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T525f26(T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T524f25(T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T523f25(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T521f27(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T520f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T519f32(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T518f33(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T517f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T516f27(T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T515f31(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T514f26(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T513f27(T0* C);
/* ET_VOID.is_open_operand */
extern T1 T501f19(T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T465f23(T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T222f15(T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T205f18(T0* C);
/* ET_CALL_EXPRESSION.is_open_operand */
extern T1 T203f15(T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T198f16(T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T129f80(T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1434f11(T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1335f9(T0* C);
/* ET_CONVERT_EXPRESSION.expression_item */
extern T0* T1334f9(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T839f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T838f13(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T837f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T836f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T835f15(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T833f15(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T823f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T816f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T814f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T813f6(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T809f7(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T808f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T807f4(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T806f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T802f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T800f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T799f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T798f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T797f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T792f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T791f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T776f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T728f5(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T555f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T526f8(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T525f8(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T524f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T523f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T521f9(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T520f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T519f13(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T518f13(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T517f13(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T516f10(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T515f14(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T514f9(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T513f9(T0* C);
/* ET_VOID.expression_item */
extern T0* T501f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T465f8(T0* C);
/* ET_RESULT.expression_item */
extern T0* T222f10(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T205f13(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T203f8(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T198f10(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T129f48(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1442f3(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T828f9(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T725f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T725f11(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1442f4(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T828f7(T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T725f12(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1434f10(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1335f7(T0* C);
/* ET_CONVERT_EXPRESSION.is_empty_actual_argument */
extern T1 T1334f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T839f26(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T838f27(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T837f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T836f27(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T835f28(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T833f28(T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T823f14(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T818f9(T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T816f20(T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T814f19(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T813f15(T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T809f22(T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T808f13(T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T807f15(T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T806f13(T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T802f14(T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T800f13(T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T799f13(T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T798f13(T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T797f13(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T792f14(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T791f16(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T776f18(T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T728f15(T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T555f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T526f28(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T525f28(T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T524f27(T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T523f27(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T521f29(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T520f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T519f34(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T518f35(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T517f35(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T516f29(T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T515f33(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T514f28(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T513f29(T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T501f21(T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T465f25(T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T222f22(T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T205f20(T0* C);
/* ET_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T203f18(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T199f10(T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T198f23(T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T129f86(T0* C);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1434f9(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1335f6(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.actual_argument */
extern T0* T1334f5(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T839f17(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T838f18(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T837f18(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T836f19(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T835f20(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T833f20(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T823f10(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T818f7(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T816f13(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T814f12(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T813f10(T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T809f13(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T808f9(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T807f8(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T806f9(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T802f9(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T800f9(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T799f9(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T798f9(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T797f9(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T792f10(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T791f12(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T776f13(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T728f10(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T555f10(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T526f19(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T525f19(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T524f20(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T523f20(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T521f21(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T520f21(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T519f30(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T518f31(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T517f31(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T516f21(T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T515f25(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T514f20(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T513f20(T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T501f14(T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T465f18(T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T222f14(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T205f11(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.actual_argument */
extern T0* T203f14(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T199f6(T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T198f15(T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T129f79(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T526f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T525f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T521f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T520f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T519f22(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T518f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T517f23(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T516f13(T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T515f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T514f12(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T513f12(T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T465f10(T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T524f13(T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T523f13(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T521f13(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T520f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T519f23(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T518f24(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T517f24(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T516f14(T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T515f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T514f13(T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T465f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T526f13(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T525f13(T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T524f14(T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T523f14(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T521f14(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T520f14(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T516f15(T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T515f19(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T514f14(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T513f14(T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T465f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_real_constant */
extern T1 T526f14(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_real_constant */
extern T1 T525f14(T0* C);
/* ET_FALSE_CONSTANT.is_real_constant */
extern T1 T524f15(T0* C);
/* ET_TRUE_CONSTANT.is_real_constant */
extern T1 T523f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_real_constant */
extern T1 T519f25(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_real_constant */
extern T1 T518f26(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_real_constant */
extern T1 T517f26(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_real_constant */
extern T1 T516f16(T0* C);
/* ET_VERBATIM_STRING.is_real_constant */
extern T1 T515f20(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_real_constant */
extern T1 T514f15(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_real_constant */
extern T1 T513f15(T0* C);
/* ET_BIT_CONSTANT.is_real_constant */
extern T1 T465f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T526f15(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T525f15(T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T524f16(T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T523f16(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T521f16(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T520f16(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T519f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T518f27(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T517f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T513f16(T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T465f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T526f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T525f16(T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T524f17(T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T523f17(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T521f17(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T520f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T519f27(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T518f28(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T517f28(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T516f18(T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T515f22(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T514f17(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T513f17(T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T809f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_procedure */
extern T1 T838f23(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_procedure */
extern T1 T837f23(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_procedure */
extern T1 T835f24(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_procedure */
extern T1 T833f24(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T839f19(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T838f20(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T837f20(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T839f25(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T839f27(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T838f26(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T838f28(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T837f26(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T837f28(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T836f26(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T836f28(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T835f27(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T835f29(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T833f27(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T833f29(T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T809f21(T0* C);
/* ET_CALL_AGENT.is_inline_agent */
extern T1 T809f20(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T805f11(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T804f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T685f10(T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T681f7(T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T679f41(T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T678f26(T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T677f28(T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T676f23(T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T498f22(T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T485f20(T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T479f19(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T129f71(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T805f8(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T804f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T685f16(T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T681f39(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T679f16(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T678f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T677f15(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T676f12(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T507f14(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T498f13(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T485f15(T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T479f14(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T129f42(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T805f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T685f17(T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T681f40(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T679f17(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T678f12(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T677f12(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T676f9(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T507f11(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T498f10(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T485f12(T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T479f11(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T129f39(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T805f12(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T804f12(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T685f18(T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T681f41(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T679f18(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T678f47(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T677f37(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T676f34(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T507f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T498f23(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T485f21(T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T479f20(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T129f59(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T805f13(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T804f13(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T685f19(T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T681f42(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T679f19(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T678f48(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T677f38(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T676f35(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T507f23(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T498f24(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T485f22(T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T479f21(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T129f60(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T805f14(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T804f14(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T685f20(T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T681f43(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T679f20(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T678f49(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T677f39(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T676f36(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T507f24(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T498f25(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T485f23(T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T479f22(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T129f61(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T805f15(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T804f15(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T685f21(T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T681f44(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T679f21(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T678f50(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T677f40(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T676f37(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T507f25(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T498f26(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T485f24(T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T479f23(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T129f62(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T805f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T804f7(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T685f22(T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T681f45(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T679f22(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T678f14(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T677f14(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T676f11(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T507f13(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T498f12(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T485f14(T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T479f13(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T129f41(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T805f16(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T804f16(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T685f23(T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T681f46(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T679f23(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T678f51(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T677f41(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T676f38(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T507f26(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T498f27(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T485f25(T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T479f24(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T129f63(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T805f17(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T804f17(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T685f24(T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T681f47(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T679f24(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T678f52(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T677f42(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T676f39(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T507f27(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T498f28(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T485f26(T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T479f25(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T129f64(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T805f18(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T804f18(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T685f25(T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T681f35(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T679f25(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T678f53(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T677f43(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T676f40(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T507f28(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T498f29(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T485f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T479f26(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T129f65(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T805f19(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T804f19(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T685f26(T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T681f48(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T679f26(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T678f54(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T677f44(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T676f41(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T507f29(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T498f30(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T485f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T479f27(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T129f66(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T805f9(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T804f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T685f27(T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T681f49(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T679f27(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T678f16(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T677f16(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T676f13(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T507f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T498f14(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T485f16(T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T479f15(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T129f43(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T804f6(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T685f28(T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T681f50(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T679f28(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T678f13(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T677f13(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T676f10(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T507f12(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T498f11(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T485f13(T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T479f12(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T129f40(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T805f20(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T804f20(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T685f29(T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T681f34(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T679f29(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T678f55(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T677f45(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T676f42(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T507f30(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T498f31(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T485f29(T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T479f28(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T129f67(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T805f21(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T804f21(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T685f30(T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T681f51(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T679f30(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T678f56(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T677f46(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T676f43(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T507f31(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T498f32(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T485f30(T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T479f29(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T129f68(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T805f22(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T804f22(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T685f31(T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T681f52(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T679f31(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T678f57(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T677f47(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T676f44(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T507f32(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T498f33(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T485f31(T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T479f30(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T129f69(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T805f23(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T804f23(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T685f32(T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T681f53(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T679f32(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T678f58(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T677f48(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T676f45(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T507f33(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T498f34(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T485f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T479f31(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T129f70(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T805f24(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T804f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T685f33(T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T681f54(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T679f49(T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T678f60(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T677f49(T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T676f46(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T507f34(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T498f35(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T485f33(T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T479f32(T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T129f72(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T805f25(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T804f25(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T685f34(T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T681f37(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T679f12(T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T678f9(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T677f25(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T676f30(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T507f35(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T498f36(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T485f34(T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T479f33(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T129f56(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T805f26(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T804f26(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T685f35(T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T681f36(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T679f13(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T678f10(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T677f26(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T676f31(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T507f36(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T498f37(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T485f35(T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T479f34(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T129f57(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T805f27(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T804f27(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T685f36(T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T681f55(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T679f14(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T678f11(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T677f27(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T676f32(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T507f37(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T498f38(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T485f36(T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T479f35(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T129f58(T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T679f54(T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T678f65(T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T677f54(T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T676f51(T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T507f38(T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T498f39(T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T485f37(T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T479f37(T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T457f11(T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T129f83(T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T679f55(T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T678f66(T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T677f55(T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T676f52(T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T507f39(T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T498f40(T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T485f38(T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T479f38(T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T457f12(T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T129f84(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.same_call_name */
extern T1 T805f29(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.same_call_name */
extern T1 T804f29(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T679f36(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T678f20(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T677f20(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T676f17(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.same_call_name */
extern T1 T507f41(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.same_call_name */
extern T1 T498f42(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.same_call_name */
extern T1 T485f40(T0* C, T0* a1);
/* ET_FREE_OPERATOR.same_call_name */
extern T1 T479f40(T0* C, T0* a1);
/* ET_IDENTIFIER.same_call_name */
extern T1 T129f52(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T805f10(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T804f10(T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T507f17(T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T498f16(T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T485f18(T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T479f17(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T805f31(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T804f31(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T507f8(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T498f8(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T485f9(T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T479f18(T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T457f10(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T805f28(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T805f30(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T804f28(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T804f30(T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T507f40(T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T507f42(T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T498f41(T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T498f43(T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T485f39(T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T485f41(T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T479f39(T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T479f44(T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T457f16(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1434f6(T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T809f23(T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T807f10(T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T802f10(T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T728f8(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T725f9(T0* C);
/* ET_CALL_EXPRESSION.is_tuple_label */
extern T1 T203f7(T0* C);
/* ET_CALL_INSTRUCTION.is_tuple_label */
extern T1 T200f5(T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T725f10(T0* C);
/* ET_CALL_INSTRUCTION.position */
extern T0* T200f8(T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1434f5(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T809f8(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T203f6(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T200f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1434f4(T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T807f9(T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T725f8(T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T679f9(T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T678f6(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T677f9(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T676f6(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T129f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T672f63(T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T671f60(T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T666f36(T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T665f38(T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T663f38(T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T333f59(T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T327f60(T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T261f29(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T260f32(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T258f31(T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T176f50(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T672f71(T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T671f68(T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T666f68(T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T665f69(T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T663f69(T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T333f67(T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T327f68(T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T261f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T260f66(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T258f66(T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T176f72(T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T672f65(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T671f62(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T666f65(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T665f66(T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T663f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T333f61(T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T327f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T261f61(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T260f63(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T258f63(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T176f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T672f69(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T333f88(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T333f87(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T333f86(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T671f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T666f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T666f90(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T666f89(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T666f88(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T665f67(T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T663f67(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T333f65(T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T327f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T261f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T261f65(T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T260f64(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T260f67(T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T258f64(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T258f67(T0* C);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T176f70(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T672f70(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T672f93(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T672f92(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T672f91(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T671f67(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T671f91(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T671f90(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T671f89(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T666f67(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T666f87(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T665f68(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T665f93(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T665f92(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T665f91(T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T663f68(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T663f93(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T663f92(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T663f91(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T333f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T333f85(T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T327f67(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T327f91(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T327f90(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T327f89(T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T261f63(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T261f77(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T261f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T261f75(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T260f65(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T260f81(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T260f80(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T260f79(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T260f78(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T260f77(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T258f65(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T258f80(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T258f79(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T258f78(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T258f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T176f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T176f91(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T176f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T176f89(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T672f68(T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T671f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T333f64(T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T327f65(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T672f67(T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T671f64(T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T333f63(T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T327f64(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T672f66(T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T671f63(T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T333f62(T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T327f63(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T261f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T260f43(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T258f43(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T261f42(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T260f44(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T258f44(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T672f33(T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T671f33(T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T333f29(T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T327f39(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T672f36(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T671f35(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T333f31(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T327f40(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T672f34(T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T671f34(T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T333f32(T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T327f32(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T672f37(T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T671f36(T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T333f34(T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T327f33(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T672f44(T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T671f44(T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T666f48(T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T665f50(T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T663f50(T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T333f41(T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T327f44(T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T261f44(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T260f46(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T258f46(T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T176f51(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T672f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T333f56(T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T327f43(T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T672f41(T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T671f32(T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T333f38(T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T327f34(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1434f12(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1335f4(T0* C);
/* ET_CONVERT_EXPRESSION.is_current */
extern T1 T1334f10(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T839f22(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T838f25(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T837f25(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T836f23(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T835f26(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T833f26(T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T823f13(T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T816f18(T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T814f18(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T813f14(T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T809f18(T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T808f12(T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T807f13(T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T806f12(T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T802f13(T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T800f12(T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T799f12(T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T798f12(T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T797f12(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T792f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T791f15(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T776f17(T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T728f14(T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T555f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T526f27(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T525f27(T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T524f26(T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T523f26(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T521f28(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T520f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T519f33(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T518f34(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T517f34(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T516f28(T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T515f32(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T514f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T513f28(T0* C);
/* ET_VOID.is_current */
extern T1 T501f20(T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T465f24(T0* C);
/* ET_RESULT.is_current */
extern T1 T222f20(T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T205f19(T0* C);
/* ET_CALL_EXPRESSION.is_current */
extern T1 T203f17(T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T129f82(T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1434f7(T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1335f8(T0* C);
/* ET_CONVERT_EXPRESSION.position */
extern T0* T1334f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T839f20(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T838f22(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T837f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T836f21(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T835f23(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T833f23(T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T823f11(T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T816f14(T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T816f15(T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T814f14(T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T814f16(T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T813f11(T0* C);
/* ET_CALL_AGENT.position */
extern T0* T809f15(T0* C);
/* ET_CALL_AGENT.use_tilde */
extern T1 T809f16(T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T808f10(T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T807f11(T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T806f10(T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T802f11(T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T800f10(T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T799f10(T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T798f10(T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T797f10(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T792f12(T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T791f13(T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T776f14(T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T728f11(T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T555f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T526f20(T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T525f20(T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T524f21(T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T523f21(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T521f22(T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T520f22(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T519f14(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T518f14(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T517f14(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T516f11(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T515f15(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T514f10(T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T513f21(T0* C);
/* ET_VOID.position */
extern T0* T501f15(T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T465f19(T0* C);
/* ET_RESULT.position */
extern T0* T222f16(T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T205f16(T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T205f17(T0* C);
/* ET_CALL_EXPRESSION.position */
extern T0* T203f9(T0* C);
/* ET_CURRENT.position */
extern T0* T198f11(T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1434f14(T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1335f10(T0* C);
/* ET_CONVERT_EXPRESSION.last_leaf */
extern T0* T1334f12(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T839f28(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T828f10(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T838f29(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T837f29(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T836f29(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T835f30(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T833f30(T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T823f15(T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T816f21(T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T814f20(T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T813f17(T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T809f24(T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T808f14(T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T807f16(T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T806f14(T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T802f15(T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T800f14(T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T799f14(T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T798f14(T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T797f14(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T792f15(T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T791f17(T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T776f22(T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T728f16(T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T507f80(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T818f10(T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T555f17(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T526f32(T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T525f32(T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T524f28(T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T523f28(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T521f30(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T520f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T519f39(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T518f40(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T517f40(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T516f30(T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T515f34(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T514f29(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T513f33(T0* C);
/* ET_VOID.last_leaf */
extern T0* T501f22(T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T465f26(T0* C);
/* ET_RESULT.last_leaf */
extern T0* T222f23(T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T205f21(T0* C);
/* ET_CALL_EXPRESSION.last_leaf */
extern T0* T203f22(T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T198f25(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T972f3(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T961f11(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T721f11(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T719f7(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T717f3(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T583f9(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T582f12(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T570f35(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T562f33(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T181f18(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T174f22(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T172f12(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T60f86(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T972f5(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T961f18(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T721f18(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T719f8(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T717f5(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T583f10(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T582f13(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T570f37(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T562f35(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T181f19(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T174f23(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T172f19(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T60f88(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T972f4(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T961f3(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T721f4(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T719f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T717f4(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T583f8(T0* C);
/* ET_BIT_N.type */
extern T0* T582f11(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T570f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T562f5(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T181f17(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T174f21(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T172f4(T0* C);
/* ET_CLASS.type */
extern T0* T60f47(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T972f7(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T961f56(T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T721f58(T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T719f63(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T717f7(T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T583f96(T0* C);
/* ET_BIT_N.label */
extern T0* T582f95(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T570f66(T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T562f64(T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T181f88(T0* C);
/* ET_GENERIC_CLASS_TYPE.label */
extern T0* T174f94(T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T172f93(T0* C);
/* ET_CLASS.label */
extern T0* T60f161(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T944f7(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T332f11(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T234f61(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T233f62(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T229f60(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T215f61(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T189f6(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T157f18(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T234f62(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T233f63(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T229f62(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T215f62(T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T157f60(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T944f12(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T332f12(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T234f63(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T233f64(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T229f63(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T215f63(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T189f10(T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T157f61(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T944f10(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T332f8(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T234f59(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T233f60(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T229f59(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T215f59(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T189f8(T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T157f17(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T944f11(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T332f10(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T189f9(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T944f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T332f9(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T234f60(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T233f61(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T229f58(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T215f60(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T189f7(T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T157f57(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T234f50(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T233f51(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T229f49(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T215f49(T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T157f30(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T944f8(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T332f7(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T234f51(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T233f52(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T229f50(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T215f50(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T189f5(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T157f56(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T234f52(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T233f53(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T229f51(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T215f51(T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T157f29(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T174f26(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T179f14(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T172f24(T0* C);
/* ET_CLASS.is_separate */
extern T1 T60f94(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T60f95(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T677f24(T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T676f22(T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T129f50(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T679f39(T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T678f24(T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T129f49(T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T679f51(T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T678f62(T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T677f51(T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T676f48(T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T129f76(T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T679f53(T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T678f64(T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T677f53(T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T676f50(T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T129f77(T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T678f21(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T676f18(T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T679f50(T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T678f61(T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T677f50(T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T676f47(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T129f19(T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T679f52(T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T678f63(T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T677f52(T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T676f49(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T129f21(T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T679f57(T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T678f68(T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T677f57(T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T676f54(T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T129f92(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T679f37(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T678f22(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T677f21(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T676f19(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T129f34(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T679f35(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T678f19(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T677f19(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T676f16(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T129f38(T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T679f34(T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T678f18(T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T677f18(T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T676f15(T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T129f25(T0* C);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T679f11(T0* C, T0* a1);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T678f8(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T677f11(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T676f8(T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T129f44(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T679f56(T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T678f67(T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T677f56(T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T676f53(T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T129f88(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T679f38(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T678f23(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T677f22(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T676f20(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type */
extern T0* T273f28(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T273f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T273f11(T0* C);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T273f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T273f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type */
extern T1 T273f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T273f30(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T273f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type */
extern T1 T273f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T273f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T273f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T273f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type */
extern T1 T273f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T273f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type */
extern T1 T273f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_to_type */
extern T1 T583f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_to_type */
extern T1 T582f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_to_type */
extern T1 T181f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T174f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T172f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_to_type */
extern T1 T60f143(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_class_type */
extern T1 T583f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_class_type */
extern T1 T582f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_class_type */
extern T1 T181f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T174f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T172f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_class_type */
extern T1 T60f144(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_type */
extern T1 T583f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_type */
extern T1 T582f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_type */
extern T1 T181f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_type */
extern T1 T174f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_type */
extern T1 T172f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_type */
extern T1 T60f145(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_tuple_type */
extern T1 T583f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_tuple_type */
extern T1 T582f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T181f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T174f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T172f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_tuple_type */
extern T1 T60f146(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_formal_parameter_type */
extern T1 T583f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_formal_parameter_type */
extern T1 T582f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T181f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T174f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T172f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_formal_parameter_type */
extern T1 T60f147(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_bit_type */
extern T1 T583f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_bit_type */
extern T1 T582f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_bit_type */
extern T1 T181f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T174f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T172f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_bit_type */
extern T1 T60f148(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T273f13(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T273f18(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T273f8(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T273f9(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.root_context */
extern T0* T583f43(T0* C);
/* ET_BIT_N.root_context */
extern T0* T582f41(T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T181f35(T0* C);
/* ET_GENERIC_CLASS_TYPE.root_context */
extern T0* T174f41(T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T172f38(T0* C);
/* ET_CLASS.root_context */
extern T0* T60f104(T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T273f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.unaliased_to_text */
extern T0* T961f16(T0* C);
/* ET_LIKE_CURRENT.unaliased_to_text */
extern T0* T721f16(T0* C);
/* ET_LIKE_FEATURE.unaliased_to_text */
extern T0* T719f26(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T570f18(T0* C);
/* ET_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T562f16(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T961f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T721f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T719f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T583f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T582f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T570f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T562f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T181f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T174f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T430f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T173f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T172f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T60f90(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T961f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T721f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T719f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T583f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T582f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T570f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T562f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T181f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T174f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T172f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T60f99(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T961f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T721f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T719f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T583f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T582f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T570f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T562f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T181f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T174f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T172f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T60f109(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T961f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T721f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T719f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T583f71(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T582f70(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T570f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T562f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T181f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T174f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T172f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T60f113(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T961f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T721f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T719f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T583f70(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T582f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T570f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T562f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T181f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T174f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T172f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T60f115(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T961f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T721f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T719f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T583f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T582f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T570f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T562f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T181f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T174f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T172f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T60f108(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T961f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T721f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T719f25(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_base_type */
extern T0* T583f27(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_base_type */
extern T0* T582f27(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T570f17(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T562f15(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T181f27(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_base_type */
extern T0* T174f31(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T172f16(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type */
extern T0* T60f87(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T961f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T721f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T719f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T583f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_type */
extern T1 T582f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T570f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T562f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T181f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T961f21(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T721f22(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T719f19(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T583f21(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_anchored_type */
extern T1 T582f22(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T570f27(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T562f22(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T181f25(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T173f18(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_anchored_type */
extern T1 T174f29(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T430f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T172f21(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_anchored_type */
extern T1 T60f96(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T961f22(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T721f23(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_has_formal_types */
extern T1 T60f121(T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T719f20(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T583f22(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_formal_types */
extern T1 T582f23(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T570f28(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T562f23(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T181f26(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T173f19(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_formal_types */
extern T1 T174f30(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T430f21(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T172f22(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_formal_types */
extern T1 T60f97(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.direct_base_class */
extern T0* T961f13(T0* C, T0* a1);
/* ET_LIKE_CURRENT.direct_base_class */
extern T0* T721f12(T0* C, T0* a1);
/* ET_LIKE_FEATURE.direct_base_class */
extern T0* T719f14(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.direct_base_class */
extern T0* T570f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.direct_base_class */
extern T0* T562f12(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type */
extern T1 T961f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type */
extern T1 T721f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type */
extern T1 T719f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_formal_parameter_type */
extern T1 T583f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_formal_parameter_type */
extern T1 T582f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T570f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T562f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type */
extern T1 T181f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T174f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T172f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type */
extern T1 T60f107(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type */
extern T1 T961f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_class_type */
extern T1 T721f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_class_type */
extern T1 T719f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_class_type */
extern T1 T583f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_class_type */
extern T1 T582f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type */
extern T1 T570f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_class_type */
extern T1 T562f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_class_type */
extern T1 T181f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_class_type */
extern T1 T174f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T430f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T173f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_class_type */
extern T1 T172f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type */
extern T1 T60f91(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type */
extern T1 T961f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_tuple_type */
extern T1 T721f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_tuple_type */
extern T1 T719f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_tuple_type */
extern T1 T583f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_tuple_type */
extern T1 T582f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T570f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T562f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_tuple_type */
extern T1 T181f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_tuple_type */
extern T1 T174f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_tuple_type */
extern T1 T172f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type */
extern T1 T60f100(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type */
extern T1 T961f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_bit_type */
extern T1 T721f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_bit_type */
extern T1 T719f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_bit_type */
extern T1 T583f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_bit_type */
extern T1 T582f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T570f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T562f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_bit_type */
extern T1 T181f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_bit_type */
extern T1 T174f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_bit_type */
extern T1 T172f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_bit_type */
extern T1 T60f110(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_class_type */
extern T1 T961f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_class_type */
extern T1 T721f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_class_type */
extern T1 T719f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_class_type */
extern T1 T583f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_class_type */
extern T1 T582f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T570f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T562f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_class_type */
extern T1 T181f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T174f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T173f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T430f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T172f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_class_type */
extern T1 T60f137(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type */
extern T1 T961f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_formal_parameter_type */
extern T1 T60f149(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_type */
extern T1 T721f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_type */
extern T1 T719f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type */
extern T1 T570f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_type */
extern T1 T562f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_tuple_type */
extern T1 T961f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_tuple_type */
extern T1 T721f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_tuple_type */
extern T1 T719f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_tuple_type */
extern T1 T583f72(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_tuple_type */
extern T1 T582f71(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T570f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T562f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_tuple_type */
extern T1 T181f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T173f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T174f70(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T172f70(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_tuple_type */
extern T1 T60f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T961f48(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T721f49(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T719f53(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T583f49(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_actual_count */
extern T6 T582f47(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T570f60(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T562f58(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T181f62(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T174f67(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T172f63(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_actual_count */
extern T6 T60f135(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T961f49(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T721f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T719f54(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T583f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T570f57(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T562f55(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_bit_type */
extern T1 T961f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_bit_type */
extern T1 T721f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_bit_type */
extern T1 T719f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_bit_type */
extern T1 T583f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_bit_type */
extern T1 T582f74(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T570f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T562f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_bit_type */
extern T1 T181f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T174f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T172f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_bit_type */
extern T1 T60f142(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T961f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_formal_parameter_type */
extern T1 T721f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T719f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T583f74(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_formal_parameter_type */
extern T1 T582f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T570f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T562f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T181f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T174f72(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T172f72(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_formal_parameter_type */
extern T1 T60f141(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T961f43(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T721f43(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T719f42(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_named_type */
extern T0* T583f61(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_named_type */
extern T0* T582f60(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T570f51(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T562f49(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T181f49(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_named_type */
extern T0* T174f59(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T172f53(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type */
extern T0* T60f133(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T961f47(T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T719f52(T0* C);
/* ET_BIT_FEATURE.is_like_current */
extern T1 T583f73(T0* C);
/* ET_BIT_N.is_like_current */
extern T1 T582f72(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T570f52(T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T562f50(T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T181f66(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_like_current */
extern T1 T174f71(T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T172f71(T0* C);
/* ET_CLASS.is_like_current */
extern T1 T60f139(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T961f36(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type */
extern T0* T721f37(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type */
extern T0* T719f34(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.named_type */
extern T0* T583f36(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.named_type */
extern T0* T582f35(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T570f38(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T562f36(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type */
extern T0* T181f29(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T174f32(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type */
extern T0* T172f28(T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type */
extern T0* T60f92(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T961f52(T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T721f53(T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T719f57(T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T583f77(T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T582f76(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T570f61(T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T562f59(T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T181f70(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_base_type */
extern T1 T174f75(T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T172f75(T0* C);
/* ET_CLASS.is_base_type */
extern T1 T60f150(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T961f53(T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T721f55(T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T719f59(T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T583f89(T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T582f88(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T570f62(T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T562f60(T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T181f81(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_named_type */
extern T1 T174f86(T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T172f55(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T961f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T721f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T719f12(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T583f14(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_expanded */
extern T1 T582f16(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T570f12(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T562f10(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T181f10(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_expanded */
extern T1 T174f6(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T172f9(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded */
extern T1 T60f45(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T961f17(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T721f17(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T719f27(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T583f29(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T582f29(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T570f36(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T562f34(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T181f28(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T173f13(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T173f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_to_type */
extern T1 T961f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_to_type */
extern T1 T721f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_to_type */
extern T1 T719f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_to_type */
extern T1 T583f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T570f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T562f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T961f40(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T721f44(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T719f43(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T583f48(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_reference */
extern T1 T582f46(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T570f29(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T562f24(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T181f50(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_reference */
extern T1 T174f60(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T172f54(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference */
extern T1 T60f134(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T961f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T721f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T719f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T570f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T562f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type */
extern T1 T961f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_class_type */
extern T1 T721f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_class_type */
extern T1 T719f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_class_type */
extern T1 T583f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_class_type */
extern T1 T582f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T570f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T562f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_class_type */
extern T1 T181f8(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_class_type */
extern T1 T174f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_7_62488 */
extern unsigned char ge252os1737;
extern T0* ge252ov1737;
extern T0* T174f15(T0* C);
/* ET_GENERIC_CLASS_TYPE.ise_5_6_latest */
extern T0* T174f14(T0* C);
/* ET_CLASS_TYPE.conforms_from_class_type */
extern T1 T172f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_7_62488 */
extern T0* T172f31(T0* C);
/* ET_CLASS_TYPE.ise_5_6_latest */
extern T0* T172f30(T0* C);
/* ET_CLASS.conforms_from_class_type */
extern T1 T60f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_7_62488 */
extern T0* T60f61(T0* C);
/* ET_CLASS.ise_5_6_latest */
extern T0* T60f60(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type */
extern T1 T961f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.ise_5_6_latest */
extern T0* T961f41(T0* C);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type */
extern T1 T721f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type */
extern T1 T719f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type */
extern T1 T583f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.ise_5_6_latest */
extern T0* T583f47(T0* C);
/* ET_BIT_N.conforms_from_formal_parameter_type */
extern T1 T582f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.ise_5_6_latest */
extern T0* T582f45(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T570f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T570f30(T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T562f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T562f28(T0* C);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type */
extern T1 T181f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.ise_5_6_latest */
extern T0* T181f64(T0* C);
/* ET_GENERIC_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T174f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T172f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_formal_parameter_type */
extern T1 T60f106(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type */
extern T1 T961f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_bit_type */
extern T1 T721f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_bit_type */
extern T1 T719f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_bit_type */
extern T1 T583f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_bit_type */
extern T1 T582f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T570f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T562f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_bit_type */
extern T1 T181f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_bit_type */
extern T1 T174f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_bit_type */
extern T1 T172f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_bit_type */
extern T1 T60f111(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type */
extern T1 T961f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_tuple_type */
extern T1 T721f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_tuple_type */
extern T1 T719f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_tuple_type */
extern T1 T583f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_tuple_type */
extern T1 T582f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T570f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T562f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_tuple_type */
extern T1 T181f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T174f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T172f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type */
extern T1 T60f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T961f9(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type */
extern T0* T721f9(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type */
extern T0* T719f13(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type */
extern T0* T583f15(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type */
extern T0* T582f17(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T570f13(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T562f11(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type */
extern T0* T181f3(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T173f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T174f9(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T430f17(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type */
extern T0* T172f10(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type */
extern T0* T60f46(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type */
extern T1 T961f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_class_type */
extern T1 T721f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_class_type */
extern T1 T719f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_class_type */
extern T1 T583f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_class_type */
extern T1 T582f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type */
extern T1 T570f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_class_type */
extern T1 T562f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_class_type */
extern T1 T181f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_class_type */
extern T1 T174f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_class_type */
extern T1 T172f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_class_type */
extern T1 T60f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type */
extern T1 T961f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_tuple_type */
extern T1 T721f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_tuple_type */
extern T1 T719f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_tuple_type */
extern T1 T583f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_tuple_type */
extern T1 T582f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T570f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T562f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_tuple_type */
extern T1 T181f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_tuple_type */
extern T1 T174f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_tuple_type */
extern T1 T172f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_tuple_type */
extern T1 T60f98(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type */
extern T1 T961f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_bit_type */
extern T1 T721f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_bit_type */
extern T1 T719f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_bit_type */
extern T1 T583f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_bit_type */
extern T1 T582f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T570f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T562f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_bit_type */
extern T1 T181f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_bit_type */
extern T1 T174f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_bit_type */
extern T1 T172f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_bit_type */
extern T1 T60f112(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T961f55(T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T721f57(T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T719f61(T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T583f93(T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T582f92(T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T181f85(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T173f21(T0* C);
/* ET_GENERIC_CLASS_TYPE.last_leaf */
extern T0* T174f90(T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T430f23(T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T172f89(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T961f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T721f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T719f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T583f91(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T583f94(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T570f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T562f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T961f4(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T721f5(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T719f5(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T570f58(T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T562f56(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T961f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_class */
extern T0* T721f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_class */
extern T0* T719f11(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_class */
extern T0* T583f13(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_class */
extern T0* T582f15(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T570f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T562f9(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T181f4(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_class */
extern T0* T174f10(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_class */
extern T0* T172f8(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_class */
extern T0* T60f78(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T961f28(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T721f29(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T719f9(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T583f11(T0* C);
/* ET_BIT_N.position */
extern T0* T582f8(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T570f59(T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T562f57(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T181f32(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T961f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T721f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T719f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T583f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_type */
extern T1 T582f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T570f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T562f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T181f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_type */
extern T1 T174f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T172f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_type */
extern T1 T60f85(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T672f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T672f94(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T671f40(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T671f92(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T333f33(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T333f89(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T327f35(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T327f92(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T672f42(T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T671f41(T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T327f41(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T672f30(T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T671f30(T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T333f28(T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T327f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T672f38(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T671f37(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T333f35(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T327f37(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T672f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T60f140(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T532f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T625f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENTS.has_descendant */
extern T1 T449f11(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T60f157(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T325f6(T0* C, T0* a1, T0* a2);
/* ET_CLASS_NAME_LIST.has_descendant */
extern T1 T448f8(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T671f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T333f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T327f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T672f40(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T671f39(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T333f37(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T327f36(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T672f61(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T672f64(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T671f58(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T671f61(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T333f57(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T333f60(T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T327f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T327f61(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T672f39(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T671f38(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T333f36(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T327f38(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T672f62(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T671f59(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T333f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T327f59(T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T672f50(T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T671f48(T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T333f46(T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T327f48(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T672f49(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T671f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T333f45(T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T327f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T666f46(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T666f91(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T665f48(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T665f94(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T663f48(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T663f94(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T261f40(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T261f78(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T260f42(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T260f82(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T258f42(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T258f81(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T176f40(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T176f92(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T665f49(T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T663f49(T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T261f43(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T260f25(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T258f45(T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T176f49(T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T666f30(T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T665f32(T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T663f32(T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T261f23(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T260f26(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T258f25(T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T176f32(T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T666f33(T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T665f35(T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T663f35(T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T261f26(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T260f29(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T258f28(T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T176f35(T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T666f31(T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T665f33(T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T663f33(T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T176f33(T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T666f32(T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T665f34(T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T663f34(T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T261f25(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T260f28(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T258f27(T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T176f34(T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T666f34(T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T663f36(T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T261f27(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T260f30(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T258f29(T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T176f36(T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T666f40(T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T665f42(T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T663f42(T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T261f33(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T260f36(T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T176f43(T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T666f42(T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T665f44(T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T663f44(T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T261f35(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T258f37(T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T176f44(T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T666f43(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T665f45(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T663f45(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T261f37(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T260f40(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T258f39(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T176f45(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T666f39(T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T665f41(T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T663f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T260f34(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T258f34(T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T176f42(T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T666f35(T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T665f37(T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T663f37(T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T261f28(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T260f31(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T258f30(T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T176f37(T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T666f52(T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T665f53(T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T663f53(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T261f48(T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T260f50(T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T258f50(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T176f56(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.arguments */
extern T0* T261f36(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T260f39(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T258f38(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T666f45(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T665f39(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T663f39(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T261f39(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T260f35(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T258f41(T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T176f48(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T666f62(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T666f64(T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T665f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T665f65(T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T663f63(T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T663f65(T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T261f58(T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T261f60(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T260f60(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T260f62(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T258f60(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T258f62(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T176f66(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T176f68(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T666f44(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T665f46(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T663f46(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T261f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T260f41(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T258f40(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T176f46(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T666f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T665f64(T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T663f64(T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T261f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T260f61(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T258f61(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T176f67(T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T666f41(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T665f43(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T663f43(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T261f34(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T260f37(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T258f36(T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T176f41(T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T666f38(T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T665f40(T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T663f40(T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T261f31(T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T260f33(T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T258f33(T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T176f39(T0* C);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T583f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_type */
extern T1 T582f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T181f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_type */
extern T1 T174f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T172f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_type */
extern T1 T60f83(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T174f16(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T172f23(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T60f65(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T60f57(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T174f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T172f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_type */
extern T1 T60f84(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T174f38(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T172f35(T0* C);
/* ET_CLASS.position */
extern T0* T60f101(T0* C);
/* ET_BIT_FEATURE.unaliased_to_text */
extern T0* T583f28(T0* C);
/* ET_BIT_N.unaliased_to_text */
extern T0* T582f28(T0* C);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T181f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.unaliased_to_text */
extern T0* T174f7(T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T172f17(T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T60f62(T0* C);
/* ET_BIT_FEATURE.context_same_named_type */
extern T1 T583f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_type */
extern T1 T582f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_type */
extern T1 T181f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_type */
extern T1 T174f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_type */
extern T1 T172f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_type */
extern T1 T60f117(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_named_type */
extern T0* T583f59(T0* C, T0* a1);
/* ET_BIT_N.context_named_type */
extern T0* T582f58(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type */
extern T0* T181f47(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_named_type */
extern T0* T174f56(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T172f50(T0* C, T0* a1);
/* ET_CLASS.context_named_type */
extern T0* T60f131(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T583f41(T0* C, T0* a1);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T582f39(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T181f33(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual_count */
extern T6 T174f39(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T172f36(T0* C, T0* a1);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T60f102(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T583f42(T0* C, T6 a1, T0* a2);
/* ET_BIT_N.context_base_type_actual */
extern T0* T582f40(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T181f34(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual */
extern T0* T174f40(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T172f37(T0* C, T6 a1, T0* a2);
/* ET_CLASS.context_base_type_actual */
extern T0* T60f103(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type */
extern T1 T583f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_formal_parameter_type */
extern T1 T582f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type */
extern T1 T181f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T174f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T172f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_formal_parameter_type */
extern T1 T60f127(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_class */
extern T0* T583f54(T0* C, T0* a1);
/* ET_BIT_N.context_base_class */
extern T0* T582f53(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_class */
extern T0* T181f42(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_class */
extern T0* T174f50(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_class */
extern T0* T172f45(T0* C, T0* a1);
/* ET_CLASS.context_base_class */
extern T0* T60f114(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_named_class_type */
extern T1 T583f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_class_type */
extern T1 T582f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_class_type */
extern T1 T181f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_class_type */
extern T1 T174f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_class_type */
extern T1 T172f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_class_type */
extern T1 T60f124(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_tuple_type */
extern T1 T583f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_tuple_type */
extern T1 T582f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_tuple_type */
extern T1 T181f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T174f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T172f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_tuple_type */
extern T1 T60f125(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_bit_type */
extern T1 T583f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_bit_type */
extern T1 T582f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_bit_type */
extern T1 T181f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_bit_type */
extern T1 T174f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_bit_type */
extern T1 T172f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_bit_type */
extern T1 T60f128(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.upper_name */
extern T0* T174f57(T0* C);
/* ET_CLASS_TYPE.upper_name */
extern T0* T172f51(T0* C);
/* ET_CLASS.upper_name */
extern T0* T60f67(T0* C);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters */
extern T0* T174f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T430f13(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T172f18(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T60f63(T0* C, T0* a1);
/* ET_BIT_FEATURE.conforms_to_context */
extern T1 T583f95(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.conforms_to_context */
extern T1 T582f94(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_context */
extern T1 T181f86(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.conforms_to_context */
extern T1 T174f91(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.tokens */
extern T0* T174f93(T0* C);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T172f90(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.tokens */
extern T0* T172f92(T0* C);
/* ET_CLASS.conforms_to_context */
extern T1 T60f160(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T174f13(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T172f25(T0* C);
/* ET_CLASS.is_generic */
extern T1 T60f74(T0* C);
/* ET_BIT_N.reference_conforms_to_type */
extern T1 T582f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_to_type */
extern T1 T181f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_to_type */
extern T1 T174f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_to_type */
extern T1 T172f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_to_type */
extern T1 T60f132(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T583f39(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T582f37(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T172f5(T0* C);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T583f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_to_type */
extern T1 T582f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T181f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_to_type */
extern T1 T174f8(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T172f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T60f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_base_type_index_of_label */
extern T6 T583f90(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_base_type_index_of_label */
extern T6 T582f89(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.index_of_label */
extern T6 T582f93(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_index_of_label */
extern T6 T181f82(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T181f87(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T173f22(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T174f87(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.index_of_label */
extern T6 T174f92(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T430f22(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T172f86(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T172f91(T0* C, T0* a1);
/* ET_CLASS.context_base_type_index_of_label */
extern T6 T60f154(T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T60f159(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_is_type_reference */
extern T1 T583f92(T0* C, T0* a1);
/* ET_BIT_N.context_is_type_reference */
extern T1 T582f91(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_reference */
extern T1 T181f84(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_is_type_reference */
extern T1 T174f89(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference */
extern T1 T172f88(T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference */
extern T1 T60f156(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type */
extern T1 T583f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_to_type */
extern T1 T582f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_to_type */
extern T1 T181f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_to_type */
extern T1 T174f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_to_type */
extern T1 T172f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_to_type */
extern T1 T60f119(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_class_type */
extern T1 T583f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_class_type */
extern T1 T582f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_class_type */
extern T1 T181f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T174f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T172f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_class_type */
extern T1 T60f118(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type */
extern T1 T583f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_formal_parameter_type */
extern T1 T582f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T181f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T174f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T172f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_formal_parameter_type */
extern T1 T60f126(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_bit_type */
extern T1 T583f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_bit_type */
extern T1 T582f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type */
extern T1 T181f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T174f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T172f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_bit_type */
extern T1 T60f129(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type */
extern T1 T583f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_tuple_type */
extern T1 T582f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type */
extern T1 T181f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T174f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T172f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_tuple_type */
extern T1 T60f123(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_type */
extern T0* T583f55(T0* C, T0* a1);
/* ET_BIT_N.context_base_type */
extern T0* T582f54(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type */
extern T0* T181f43(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type */
extern T0* T174f52(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type */
extern T0* T172f46(T0* C, T0* a1);
/* ET_CLASS.context_base_type */
extern T0* T60f116(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_base_class_type */
extern T1 T583f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_class_type */
extern T1 T582f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_class_type */
extern T1 T181f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_class_type */
extern T1 T174f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_class_type */
extern T1 T172f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_class_type */
extern T1 T60f120(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_tuple_type */
extern T1 T583f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_tuple_type */
extern T1 T582f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_tuple_type */
extern T1 T181f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T174f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T172f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_tuple_type */
extern T1 T60f122(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_bit_type */
extern T1 T583f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_bit_type */
extern T1 T582f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_bit_type */
extern T1 T181f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_bit_type */
extern T1 T174f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_bit_type */
extern T1 T172f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_bit_type */
extern T1 T60f130(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.base_type_actual */
extern T0* T582f48(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T181f63(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T174f68(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T172f64(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_actual */
extern T0* T60f136(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T583f52(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T582f51(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T181f11(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T174f69(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T172f65(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T60f105(T0* C);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T582f90(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T181f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_index_of_label */
extern T6 T174f88(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T172f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_index_of_label */
extern T6 T60f155(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.direct_base_class */
extern T0* T583f16(T0* C, T0* a1);
/* ET_BIT_N.direct_base_class */
extern T0* T582f18(T0* C, T0* a1);
/* ET_TUPLE_TYPE.direct_base_class */
extern T0* T181f7(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.direct_base_class */
extern T0* T174f11(T0* C, T0* a1);
/* ET_CLASS_TYPE.direct_base_class */
extern T0* T172f14(T0* C, T0* a1);
/* ET_CLASS.direct_base_class */
extern T0* T60f53(T0* C, T0* a1);
/* ET_BIT_FEATURE.to_text */
extern T0* T583f7(T0* C);
/* ET_BIT_N.to_text */
extern T0* T582f9(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T181f15(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T174f19(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T172f6(T0* C);
/* ET_CLASS.to_text */
extern T0* T60f82(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T234f45(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T233f45(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T229f43(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T215f43(T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T157f28(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T234f54(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T233f55(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T229f53(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T215f53(T0* C);
/* ET_DYNAMIC_TYPE.hash_code */
extern T6 T157f55(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T234f58(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T233f59(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T229f61(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T215f58(T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T157f59(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T234f44(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T218f10(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge913os16648;
extern T0* ge913ov16648;
extern T0* T218f5(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T218f6(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T218f9(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T234f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T218f12(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T234f55(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T218c8(T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T233f44(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T233f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T233f54(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T163f52(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T155f18(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T64f262(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T944c13(T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T233f56(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T233f54p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T229f56(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T229f71(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T229f52(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T229f54(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T229f52p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T215f56(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T215f71(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T215f52(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T155f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T64f261(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge777os13871;
extern T0* ge777ov13871;
extern T0* T170f49(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T215f54(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T215f52p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T157f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T157f68(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T157f20(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T234f43(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T233f43(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T229f42(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T215f42(T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T157f25(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T234f19(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T233f19(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T229f19(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T215f18(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T157f31(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T234f56(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T233f57(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T215f55(T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T157f58(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T234f49(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T233f49(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T229f47(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T215f47(T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T157f21(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T234f47(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T234f53(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T234f18(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T234f53p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T233f47(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T233f50(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T233f50p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T229f45(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T229f48(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T229f48p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T215f45(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T215f48(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T155f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T64f260(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T215f48p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T157f26(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T157f22(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T234f42(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T233f20(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T229f18(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T215f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T157f27(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T229f64(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T215f64(T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T157f62(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T234f46(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T233f46(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T229f44(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T215f44(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T157f23(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T234f57(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T233f58(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T229f57(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T215f57(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T157f32(T0* C, T6 a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T1478f5(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T1478f3(T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T1478f6(T0* C);
/* ARRAY [STRING_8].valid_index */
extern T1 T86f4(T0* C, T6 a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T1478f4(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1405f12(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1405f7(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1405f6(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1405f9(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1217f5(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1217f3(T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1217f6(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1217f4(T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1019f5(T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1019f3(T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1019f6(T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1019f4(T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1018f5(T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1018f3(T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1018f6(T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1018f4(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T938f5(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T938f3(T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T938f6(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T938f4(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T937f5(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T937f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T937f6(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T937f4(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T936f5(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T936f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T936f6(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T936f4(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T935f5(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T935f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T935f6(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T935f4(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T934f5(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T934f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T934f6(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T934f4(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T933f5(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T933f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T933f6(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T933f4(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T932f5(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T932f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T932f6(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T932f4(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T931f5(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T931f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T931f6(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T931f4(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T928f17(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T928f19(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T928f18(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T928f15(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T927f12(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T927f7(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T927f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T927f9(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T926f60(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T926f18(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T926f62(T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T926f59(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T925f5(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T925f7(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T925f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T925f9(T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T924f5(T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T924f7(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T924f6(T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T924f9(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T299f5(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T299f3(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T299f6(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T299f4(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T298f5(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T298f3(T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T298f6(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T298f4(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T297f5(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T297f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T297f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T296f5(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T296f3(T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T296f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T296f4(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T295f5(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T295f3(T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T295f6(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T295f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T217f2(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T217f4(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T217f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T217f5(T0* C);
/* UT_MESSAGE.default_message */
extern T0* T114f5(T0* C);
/* UT_MESSAGE.message */
extern T0* T114f3(T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T114f6(T0* C);
/* UT_MESSAGE.string_ */
extern T0* T114f4(T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T69f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T69f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T69f6(T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T69f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T68f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T68f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T68f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T68f5(T0* C);
/* AP_ERROR.default_message */
extern T0* T32f16(T0* C);
/* AP_ERROR.message */
extern T0* T32f17(T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T32f19(T0* C);
/* AP_ERROR.string_ */
extern T0* T32f18(T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T41f24(T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T37f12(T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T36f14(T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T35f18(T0* C);
/* AP_FLAG.was_found */
extern T1 T33f9(T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T37f11(T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T36f10(T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T35f17(T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T41f21(T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T37f16(T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T36f13(T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T35f15(T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T33f12(T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T41f19(T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T37f15(T0* C);
/* AP_BOOLEAN_OPTION.needs_parameter */
extern T1 T36f12(T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T33f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T41f20(T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T37f10(T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T36f16(T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T35f12(T0* C);
/* AP_FLAG.name */
extern T0* T33f13(T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T41f26(T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T37f19(T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T36f17(T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T35f19(T0* C);
/* AP_FLAG.example */
extern T0* T33f14(T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T41f34(T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T37f21(T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T37f21p1(T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T36f24(T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T36f24p1(T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T35f23(T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T35f23p1(T0* C);
/* AP_FLAG.names */
extern T0* T33f17(T0* C);
/* AP_DISPLAY_HELP_FLAG.has_long_form */
extern T1 T41f18(T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T37f13(T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T36f11(T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T35f14(T0* C);
/* AP_FLAG.has_long_form */
extern T1 T33f10(T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T951f6(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1243f5(T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T951f21(T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T22f25(T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T960f16(T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T951f7(T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T22f32(T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T960f11(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T960f10(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T960f13(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T960f8(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T951f28(T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T951f28p1(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1430f7(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T22f29(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge399os1825;
extern T0* ge399ov1825;
extern T0* T22f37(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T22f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T951f5(T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge310os1800;
extern T0* ge310ov1800;
extern T0* T1430f6(T0* C);
/* XM_NAMESPACE.is_equal */
extern T1 T1319f4(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T366f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T366f15(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T129f33(T0* C, T0* a1);
/* STRING_8.is_equal */
extern T1 T17f19(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f21(T0* C, T0* a1, T0* a2, T6 a3);
extern T0* GE_ma903(T6 c, ...);
extern T0* GE_ma86(T6 c, ...);
extern T0* GE_ma324(T6 c, ...);
extern T0* GE_ma963(T6 c, ...);
extern T0* GE_ma348(T6 c, ...);
extern T0* ge411ov9365;
extern T0* ge415ov2927;
extern T0* ge350ov25470;
extern T0* ge421ov10151;
extern T0* ge413ov9365;
extern T0* ge959ov7371;
extern T0* ge959ov7376;
extern T0* ge388ov1844;
extern T0* ge1174ov17169;
extern T0* ge1174ov17154;
extern T0* ge1174ov17147;
extern T0* ge1174ov17132;
extern T0* ge1174ov17157;
extern T0* ge1174ov17150;
extern T0* ge1174ov17158;
extern T0* ge1174ov17167;
extern T0* ge1174ov17160;
extern T0* ge1174ov17156;
extern T0* ge1174ov17144;
extern T0* ge1174ov17145;
extern T0* ge1174ov17159;
extern T0* ge1174ov17146;
extern T0* ge1174ov17133;
extern T0* ge1174ov17134;
extern T0* ge1174ov17135;
extern T0* ge1174ov17141;
extern T0* ge1174ov17143;
extern T0* ge1174ov17138;
extern T0* ge1174ov17163;
extern T0* ge1174ov17162;
extern T0* ge1174ov17139;
extern T0* ge1174ov17140;
extern T0* ge1174ov17137;
extern T0* ge1174ov17136;
extern T0* ge1170ov16927;
extern T0* ge959ov7373;
extern T0* ge959ov7375;
extern T0* ge959ov7267;
extern T0* ge959ov7297;
extern T0* ge959ov7271;
extern T0* ge959ov7348;
extern T0* ge777ov14154;
extern T0* ge777ov14117;
extern T0* ge777ov14053;
extern T0* ge777ov14239;
extern T0* ge959ov7347;
extern T0* ge959ov7302;
extern T0* ge959ov7304;
extern T0* ge959ov7357;
extern T0* ge959ov7320;
extern T0* ge959ov7314;
extern T0* ge959ov7262;
extern T0* ge959ov7343;
extern T0* ge959ov7312;
extern T0* ge777ov14134;
extern T0* ge777ov14070;
extern T0* ge954ov24430;
extern T0* ge954ov24429;
extern T0* ge954ov24428;
extern T0* ge777ov14213;
extern T0* ge959ov7341;
extern T0* ge959ov7305;
extern T0* ge959ov7299;
extern T0* ge959ov7342;
extern T0* ge959ov7276;
extern T0* ge959ov7298;
extern T0* ge959ov7349;
extern T0* ge959ov7368;
extern T0* ge959ov7316;
extern T0* ge959ov7318;
extern T0* ge959ov7317;
extern T0* ge959ov7361;
extern T0* ge959ov7264;
extern T0* ge959ov7319;
extern T0* ge959ov7346;
extern T0* ge959ov7303;
extern T0* ge959ov7345;
extern T0* ge959ov7309;
extern T0* ge959ov7358;
extern T0* ge959ov7356;
extern T0* ge959ov7307;
extern T0* ge777ov14216;
extern T0* ge959ov7329;
extern T0* ge959ov7327;
extern T0* ge959ov7313;
extern T0* ge959ov7261;
extern T0* ge959ov7263;
extern T0* ge959ov7266;
extern T0* ge959ov7335;
extern T0* ge959ov7308;
extern T0* ge959ov7359;
extern T0* ge959ov7364;
extern T0* ge959ov7328;
extern T0* ge959ov7336;
extern T0* ge959ov7268;
extern T0* ge959ov7321;
extern T0* ge959ov7315;
extern T0* ge959ov7265;
extern T0* ge959ov7301;
extern T0* ge959ov7292;
extern T0* ge959ov7291;
extern T0* ge959ov7284;
extern T0* ge959ov7283;
extern T0* ge959ov7282;
extern T0* ge959ov7277;
extern T0* ge959ov7272;
extern T0* ge959ov7270;
extern T0* ge959ov7334;
extern T0* ge959ov7322;
extern T0* ge959ov7310;
extern T0* ge959ov7355;
extern T0* ge777ov14149;
extern T0* ge777ov14092;
extern T0* ge959ov7300;
extern T0* ge959ov7372;
extern T0* ge959ov7269;
extern T0* ge959ov7365;
extern T0* ge959ov7360;
extern T0* ge959ov7354;
extern T0* ge959ov7294;
extern T0* ge959ov7293;
extern T0* ge959ov7285;
extern T0* ge959ov7289;
extern T0* ge959ov7288;
extern T0* ge959ov7287;
extern T0* ge959ov7286;
extern T0* ge959ov7281;
extern T0* ge959ov7280;
extern T0* ge959ov7279;
extern T0* ge959ov7278;
extern T0* ge959ov7274;
extern T0* ge959ov7273;
extern T0* ge959ov7275;
extern T0* ge777ov14061;
extern T0* ge777ov14082;
extern T0* ge777ov14072;
extern T0* ge777ov14065;
extern T0* ge777ov14095;
extern T0* ge777ov14058;
extern T0* ge777ov14235;
extern T0* ge957ov24418;
extern T0* ge957ov24412;
extern T0* ge957ov24406;
extern T0* ge957ov24414;
extern T0* ge957ov24408;
extern T0* ge957ov24402;
extern T0* ge957ov24417;
extern T0* ge957ov24411;
extern T0* ge957ov24405;
extern T0* ge957ov24419;
extern T0* ge957ov24413;
extern T0* ge957ov24407;
extern T0* ge777ov14129;
extern T0* ge957ov24416;
extern T0* ge957ov24410;
extern T0* ge957ov24404;
extern T0* ge777ov14123;
extern T0* ge777ov14202;
extern T0* ge777ov14168;
extern T0* ge777ov14211;
extern T0* ge777ov14157;
extern T0* ge777ov14127;
extern T0* ge958ov25292;
extern T0* ge958ov25050;
extern T0* ge958ov24914;
extern T0* ge958ov25290;
extern T0* ge958ov25048;
extern T0* ge958ov24912;
extern T0* ge958ov25291;
extern T0* ge958ov25049;
extern T0* ge958ov24913;
extern T0* ge777ov14098;
extern T0* ge957ov24415;
extern T0* ge957ov24409;
extern T0* ge957ov24403;
extern T0* ge950ov26637;
extern T0* ge950ov26635;
extern T0* ge950ov26633;
extern T0* ge1088ov5098;
extern T0* ge949ov25345;
extern T0* ge949ov25341;
extern T0* ge949ov25337;
extern T0* ge1005ov19355;
extern T0* ge389ov9418;
extern T0* ge587ov12158;
extern T0* ge587ov12159;
extern T0* ge949ov25346;
extern T0* ge949ov25342;
extern T0* ge949ov25338;
extern T0* ge956ov25354;
extern T0* ge956ov25353;
extern T0* ge958ov25247;
extern T0* ge958ov25021;
extern T0* ge958ov24869;
extern T0* ge958ov25249;
extern T0* ge958ov24871;
extern T0* ge958ov25242;
extern T0* ge958ov24864;
extern T0* ge958ov25245;
extern T0* ge958ov24867;
extern T0* ge958ov25241;
extern T0* ge958ov24863;
extern T0* ge958ov25240;
extern T0* ge958ov24862;
extern T0* ge777ov14229;
extern T0* ge777ov14096;
extern T0* ge777ov14322;
extern T0* ge777ov14323;
extern T0* ge777ov14324;
extern T0* ge777ov14325;
extern T0* ge777ov14326;
extern T0* ge777ov14327;
extern T0* ge777ov14328;
extern T0* ge777ov14329;
extern T0* ge777ov14330;
extern T0* ge777ov14331;
extern T0* ge777ov14332;
extern T0* ge777ov14333;
extern T0* ge777ov14334;
extern T0* ge777ov14335;
extern T0* ge777ov14336;
extern T0* ge777ov14337;
extern T0* ge777ov14338;
extern T0* ge777ov14339;
extern T0* ge777ov14340;
extern T0* ge777ov14341;
extern T0* ge777ov14342;
extern T0* ge777ov14343;
extern T0* ge777ov14344;
extern T0* ge777ov14345;
extern T0* ge777ov14387;
extern T0* ge777ov14388;
extern T0* ge777ov14389;
extern T0* ge777ov14054;
extern T0* ge777ov14055;
extern T0* ge777ov14056;
extern T0* ge777ov14057;
extern T0* ge777ov14059;
extern T0* ge777ov14060;
extern T0* ge777ov14062;
extern T0* ge777ov14063;
extern T0* ge777ov14064;
extern T0* ge777ov14066;
extern T0* ge777ov14067;
extern T0* ge777ov14068;
extern T0* ge777ov14069;
extern T0* ge777ov14071;
extern T0* ge777ov14073;
extern T0* ge777ov14074;
extern T0* ge777ov14075;
extern T0* ge777ov14076;
extern T0* ge777ov14077;
extern T0* ge777ov14078;
extern T0* ge777ov14079;
extern T0* ge777ov14080;
extern T0* ge777ov14081;
extern T0* ge777ov14083;
extern T0* ge777ov14084;
extern T0* ge777ov14085;
extern T0* ge777ov14086;
extern T0* ge777ov14087;
extern T0* ge777ov14088;
extern T0* ge777ov14089;
extern T0* ge777ov14090;
extern T0* ge777ov14091;
extern T0* ge777ov14093;
extern T0* ge777ov14094;
extern T0* ge777ov14097;
extern T0* ge777ov14099;
extern T0* ge777ov14100;
extern T0* ge777ov14105;
extern T0* ge777ov14106;
extern T0* ge777ov14107;
extern T0* ge777ov14108;
extern T0* ge777ov14101;
extern T0* ge777ov14102;
extern T0* ge777ov14103;
extern T0* ge777ov14104;
extern T0* ge777ov14109;
extern T0* ge777ov14110;
extern T0* ge777ov14111;
extern T0* ge777ov14112;
extern T0* ge777ov14113;
extern T0* ge777ov14114;
extern T0* ge777ov14115;
extern T0* ge777ov14116;
extern T0* ge777ov14118;
extern T0* ge777ov14119;
extern T0* ge777ov14120;
extern T0* ge777ov14121;
extern T0* ge777ov14122;
extern T0* ge777ov14124;
extern T0* ge777ov14125;
extern T0* ge777ov14126;
extern T0* ge777ov14128;
extern T0* ge777ov14130;
extern T0* ge777ov14131;
extern T0* ge777ov14132;
extern T0* ge777ov14133;
extern T0* ge777ov14135;
extern T0* ge777ov14136;
extern T0* ge777ov14137;
extern T0* ge777ov14138;
extern T0* ge777ov14139;
extern T0* ge777ov14140;
extern T0* ge777ov14141;
extern T0* ge777ov14142;
extern T0* ge777ov14143;
extern T0* ge777ov14144;
extern T0* ge777ov14145;
extern T0* ge777ov14146;
extern T0* ge777ov14147;
extern T0* ge777ov14148;
extern T0* ge777ov14150;
extern T0* ge777ov14151;
extern T0* ge777ov14152;
extern T0* ge777ov14153;
extern T0* ge777ov14155;
extern T0* ge777ov14156;
extern T0* ge777ov14158;
extern T0* ge777ov14159;
extern T0* ge777ov14160;
extern T0* ge777ov14161;
extern T0* ge777ov14162;
extern T0* ge777ov14163;
extern T0* ge777ov14164;
extern T0* ge777ov14165;
extern T0* ge777ov14166;
extern T0* ge777ov14167;
extern T0* ge777ov14169;
extern T0* ge777ov14170;
extern T0* ge777ov14171;
extern T0* ge777ov14172;
extern T0* ge777ov14173;
extern T0* ge777ov14174;
extern T0* ge777ov14175;
extern T0* ge777ov14176;
extern T0* ge777ov14177;
extern T0* ge777ov14178;
extern T0* ge777ov14179;
extern T0* ge777ov14180;
extern T0* ge777ov14181;
extern T0* ge777ov14182;
extern T0* ge777ov14183;
extern T0* ge777ov14184;
extern T0* ge777ov14185;
extern T0* ge777ov14186;
extern T0* ge777ov14187;
extern T0* ge777ov14188;
extern T0* ge777ov14189;
extern T0* ge777ov14190;
extern T0* ge777ov14191;
extern T0* ge777ov14192;
extern T0* ge777ov14193;
extern T0* ge777ov14194;
extern T0* ge777ov14195;
extern T0* ge777ov14196;
extern T0* ge777ov14197;
extern T0* ge777ov14198;
extern T0* ge777ov14199;
extern T0* ge777ov14200;
extern T0* ge777ov14201;
extern T0* ge777ov14203;
extern T0* ge777ov14204;
extern T0* ge777ov14205;
extern T0* ge777ov14206;
extern T0* ge777ov14207;
extern T0* ge777ov14208;
extern T0* ge777ov14209;
extern T0* ge777ov14210;
extern T0* ge777ov14212;
extern T0* ge777ov14214;
extern T0* ge777ov14215;
extern T0* ge777ov14217;
extern T0* ge777ov14218;
extern T0* ge777ov14219;
extern T0* ge777ov14220;
extern T0* ge777ov14221;
extern T0* ge777ov14222;
extern T0* ge777ov14223;
extern T0* ge777ov14225;
extern T0* ge777ov14226;
extern T0* ge777ov14227;
extern T0* ge777ov14228;
extern T0* ge777ov14230;
extern T0* ge777ov14231;
extern T0* ge777ov14232;
extern T0* ge777ov14233;
extern T0* ge777ov14234;
extern T0* ge777ov14236;
extern T0* ge777ov14237;
extern T0* ge777ov14238;
extern T0* ge777ov14240;
extern T0* ge777ov14241;
extern T0* ge777ov14242;
extern T0* ge777ov14243;
extern T0* ge777ov14244;
extern T0* ge777ov14245;
extern T0* ge777ov14246;
extern T0* ge777ov14247;
extern T0* ge777ov14248;
extern T0* ge777ov14249;
extern T0* ge777ov14250;
extern T0* ge777ov14251;
extern T0* ge777ov14252;
extern T0* ge777ov14253;
extern T0* ge777ov14254;
extern T0* ge777ov14255;
extern T0* ge777ov14256;
extern T0* ge777ov14257;
extern T0* ge777ov14258;
extern T0* ge777ov14259;
extern T0* ge777ov14260;
extern T0* ge777ov14261;
extern T0* ge777ov14262;
extern T0* ge777ov14263;
extern T0* ge777ov14265;
extern T0* ge777ov14266;
extern T0* ge777ov14267;
extern T0* ge777ov14268;
extern T0* ge777ov14269;
extern T0* ge777ov14270;
extern T0* ge777ov14271;
extern T0* ge777ov14272;
extern T0* ge777ov14273;
extern T0* ge777ov14274;
extern T0* ge777ov14275;
extern T0* ge777ov14276;
extern T0* ge777ov14277;
extern T0* ge777ov14278;
extern T0* ge777ov14279;
extern T0* ge777ov14280;
extern T0* ge777ov14281;
extern T0* ge777ov14282;
extern T0* ge777ov14283;
extern T0* ge777ov14284;
extern T0* ge777ov14285;
extern T0* ge777ov14286;
extern T0* ge777ov14287;
extern T0* ge777ov14288;
extern T0* ge777ov14289;
extern T0* ge777ov14290;
extern T0* ge777ov14291;
extern T0* ge777ov14292;
extern T0* ge777ov14293;
extern T0* ge777ov14294;
extern T0* ge777ov14295;
extern T0* ge777ov14296;
extern T0* ge777ov14297;
extern T0* ge777ov14298;
extern T0* ge777ov14299;
extern T0* ge777ov14300;
extern T0* ge777ov14301;
extern T0* ge777ov14302;
extern T0* ge777ov14303;
extern T0* ge777ov14304;
extern T0* ge777ov14305;
extern T0* ge777ov14306;
extern T0* ge777ov14307;
extern T0* ge777ov14308;
extern T0* ge777ov14309;
extern T0* ge777ov14310;
extern T0* ge777ov14311;
extern T0* ge777ov14312;
extern T0* ge777ov14313;
extern T0* ge777ov14314;
extern T0* ge777ov14315;
extern T0* ge777ov14316;
extern T0* ge777ov14317;
extern T0* ge777ov14318;
extern T0* ge777ov14319;
extern T0* ge777ov14320;
extern T0* ge286ov12084;
extern T0* ge386ov21045;
extern T0* ge386ov21042;
extern T0* ge970ov15894;
extern T0* ge384ov20937;
extern T0* ge958ov25258;
extern T0* ge958ov25024;
extern T0* ge958ov24880;
extern T0* ge958ov25257;
extern T0* ge958ov24879;
extern T0* ge958ov25289;
extern T0* ge958ov25047;
extern T0* ge958ov24911;
extern T0* ge958ov25288;
extern T0* ge958ov25046;
extern T0* ge958ov24910;
extern T0* ge777ov14264;
extern T0* ge777ov14224;
extern T0* ge958ov25294;
extern T0* ge958ov25052;
extern T0* ge958ov24916;
extern T0* ge958ov25293;
extern T0* ge958ov25051;
extern T0* ge958ov24915;
extern T0* ge1288ov10793;
extern T0* ge1288ov10792;
extern T0* ge1015ov4342;
extern T0* ge1015ov4343;
extern T0* ge1015ov4344;
extern T0* ge1015ov4345;
extern T0* ge1015ov4346;
extern T0* ge1015ov4347;
extern T0* ge1015ov4348;
extern T0* ge1015ov4349;
extern T0* ge1015ov4350;
extern T0* ge1015ov4351;
extern T0* ge1015ov4352;
extern T0* ge1015ov4353;
extern T0* ge1015ov4354;
extern T0* ge1015ov4355;
extern T0* ge1015ov4356;
extern T0* ge1015ov4357;
extern T0* ge1015ov4358;
extern T0* ge1015ov4359;
extern T0* ge1015ov4360;
extern T0* ge1015ov4361;
extern T0* ge1015ov4362;
extern T0* ge1015ov4363;
extern T0* ge1015ov4364;
extern T0* ge1015ov4365;
extern T0* ge1015ov4366;
extern T0* ge1015ov4367;
extern T0* ge1015ov4368;
extern T0* ge1015ov4369;
extern T0* ge1015ov4370;
extern T0* ge1015ov4371;
extern T0* ge1015ov4372;
extern T0* ge1015ov4373;
extern T0* ge1015ov4374;
extern T0* ge1015ov4375;
extern T0* ge1015ov4376;
extern T0* ge1015ov4377;
extern T0* ge1015ov4378;
extern T0* ge1015ov4379;
extern T0* ge1015ov4380;
extern T0* ge1015ov4381;
extern T0* ge1015ov4382;
extern T0* ge1015ov4383;
extern T0* ge1015ov4384;
extern T0* ge1015ov4385;
extern T0* ge1015ov4386;
extern T0* ge1015ov4387;
extern T0* ge1015ov4388;
extern T0* ge1015ov4389;
extern T0* ge1015ov4390;
extern T0* ge1015ov4391;
extern T0* ge1015ov4392;
extern T0* ge1015ov4393;
extern T0* ge1015ov4394;
extern T0* ge1015ov4395;
extern T0* ge1015ov4396;
extern T0* ge1015ov4397;
extern T0* ge1015ov4398;
extern T0* ge1015ov4399;
extern T0* ge1015ov4400;
extern T0* ge1015ov4401;
extern T0* ge1015ov4402;
extern T0* ge1015ov4403;
extern T0* ge1015ov4404;
extern T0* ge1015ov4405;
extern T0* ge1015ov4406;
extern T0* ge1015ov4407;
extern T0* ge1015ov4408;
extern T0* ge1015ov4409;
extern T0* ge1015ov4410;
extern T0* ge1015ov4411;
extern T0* ge1015ov4412;
extern T0* ge1015ov4413;
extern T0* ge1015ov4414;
extern T0* ge1015ov4415;
extern T0* ge1015ov4416;
extern T0* ge1015ov4417;
extern T0* ge1015ov4418;
extern T0* ge1015ov4419;
extern T0* ge1015ov4420;
extern T0* ge1015ov4421;
extern T0* ge1015ov4422;
extern T0* ge1015ov4423;
extern T0* ge1015ov4424;
extern T0* ge1015ov4425;
extern T0* ge1015ov4426;
extern T0* ge1015ov4427;
extern T0* ge1015ov4428;
extern T0* ge1015ov4429;
extern T0* ge1015ov4430;
extern T0* ge1015ov4431;
extern T0* ge1015ov4432;
extern T0* ge1015ov4433;
extern T0* ge1015ov4434;
extern T0* ge1049ov4309;
extern T0* ge1015ov4552;
extern T0* ge1015ov4539;
extern T0* ge1015ov4544;
extern T0* ge1015ov4545;
extern T0* ge1015ov4546;
extern T0* ge1015ov4533;
extern T0* ge1015ov4550;
extern T0* ge1015ov4554;
extern T0* ge1015ov4537;
extern T0* ge1015ov4529;
extern T0* ge1015ov4540;
extern T0* ge1015ov4538;
extern T0* ge1015ov4535;
extern T0* ge1015ov4549;
extern T0* ge1015ov4548;
extern T0* ge1015ov4531;
extern T0* ge1015ov4553;
extern T0* ge1015ov4530;
extern T0* ge1015ov4536;
extern T0* ge1015ov4551;
extern T0* ge1015ov4543;
extern T0* ge1015ov4532;
extern T0* ge1015ov4547;
extern T0* ge1015ov4541;
extern T0* ge1015ov4534;
extern T0* ge1015ov4557;
extern T0* ge1015ov4542;
extern T0* ge1015ov4555;
extern T0* ge1049ov4308;
extern T0* ge1049ov4307;
extern T0* ge1011ov18408;
extern T0* ge1295ov11330;
extern T0* ge1295ov11292;
extern T0* ge1295ov11290;
extern T0* ge1295ov11331;
extern T0* ge1295ov11303;
extern T0* ge1295ov11302;
extern T0* ge1295ov11313;
extern T0* ge1295ov11307;
extern T0* ge1295ov11306;
extern T0* ge1295ov11305;
extern T0* ge1295ov11311;
extern T0* ge1295ov11310;
extern T0* ge1295ov11312;
extern T0* ge1295ov11289;
extern T0* ge1295ov11315;
extern T0* ge1295ov11324;
extern T0* ge1298ov11145;
extern T0* ge1298ov11143;
extern T0* ge1298ov11144;
extern T0* ge1295ov11325;
extern T0* ge1295ov11326;
extern T0* ge1295ov11329;
extern T0* ge1295ov11327;
extern T0* ge1295ov11328;
extern T0* ge1295ov11322;
extern T0* ge1291ov20599;
extern T0* ge1291ov20600;
extern T0* ge1295ov11295;
extern T0* ge1295ov11318;
extern T0* ge1295ov11338;
extern T0* ge1295ov11339;
extern T0* ge1295ov11340;
extern T0* ge1295ov11333;
extern T0* ge1295ov11316;
extern T0* ge1295ov11317;
extern T0* ge1295ov11319;
extern T0* ge1295ov11323;
extern T0* ge61ov3996;
extern T0* ge61ov4003;
extern T0* ge59ov4244;
extern T0* ge320ov1718;
extern T0* ge58ov3479;
extern T0* ge61ov3999;
extern T0* ge61ov4006;
extern T0* ge61ov3997;
extern T0* ge61ov4004;
extern T0* ge61ov3998;
extern T0* ge61ov4005;
extern T0* ge61ov4000;
extern T0* ge61ov4007;
extern T0* ge61ov4001;
extern T0* ge61ov4008;
extern T0* ge58ov3474;
extern T0* ge58ov3473;
extern T0* ge58ov3481;
extern T0* ge58ov3480;
extern T0* ge1302ov20309;
extern T0* ge1302ov20310;
extern T0* ge1293ov25478;
extern T0* ge1293ov25480;
extern T0* ge958ov25272;
extern T0* ge958ov25032;
extern T0* ge958ov24894;
extern T0* ge958ov25271;
extern T0* ge958ov24893;
extern T0* ge958ov25095;
extern T0* ge958ov24944;
extern T0* ge958ov24717;
extern T0* ge958ov25269;
extern T0* ge958ov25031;
extern T0* ge958ov24891;
extern T0* ge958ov25268;
extern T0* ge958ov24890;
extern T0* ge958ov25094;
extern T0* ge958ov24943;
extern T0* ge958ov24716;
extern T0* ge958ov25062;
extern T0* ge958ov24929;
extern T0* ge958ov24684;
extern T0* ge958ov25061;
extern T0* ge958ov24683;
extern T0* ge958ov25274;
extern T0* ge958ov25034;
extern T0* ge958ov24896;
extern T0* ge958ov25299;
extern T0* ge958ov25055;
extern T0* ge958ov24921;
extern T0* ge958ov25300;
extern T0* ge958ov24922;
extern T0* ge958ov25297;
extern T0* ge958ov25054;
extern T0* ge958ov24919;
extern T0* ge958ov25298;
extern T0* ge958ov24920;
extern T0* ge958ov25190;
extern T0* ge958ov24989;
extern T0* ge958ov24812;
extern T0* ge958ov25303;
extern T0* ge958ov25057;
extern T0* ge958ov24925;
extern T0* ge958ov25304;
extern T0* ge958ov24926;
extern T0* ge958ov25301;
extern T0* ge958ov25056;
extern T0* ge958ov24923;
extern T0* ge958ov25302;
extern T0* ge958ov24924;
extern T0* ge958ov25188;
extern T0* ge958ov24988;
extern T0* ge958ov24810;
extern T0* ge958ov25126;
extern T0* ge958ov24960;
extern T0* ge958ov24748;
extern T0* ge958ov25128;
extern T0* ge958ov24750;
extern T0* ge958ov25064;
extern T0* ge958ov24686;
extern T0* ge958ov25063;
extern T0* ge958ov24685;
extern T0* ge958ov25276;
extern T0* ge958ov25035;
extern T0* ge958ov24898;
extern T0* ge958ov25270;
extern T0* ge958ov24892;
extern T0* ge958ov25275;
extern T0* ge958ov24897;
extern T0* ge958ov25189;
extern T0* ge958ov24811;
extern T0* ge958ov25124;
extern T0* ge958ov24746;
extern T0* ge958ov25130;
extern T0* ge958ov24752;
extern T0* ge958ov25127;
extern T0* ge958ov24749;
extern T0* ge958ov25125;
extern T0* ge958ov24747;
extern T0* ge958ov25170;
extern T0* ge958ov24971;
extern T0* ge958ov24792;
extern T0* ge958ov25080;
extern T0* ge958ov24937;
extern T0* ge958ov24702;
extern T0* ge958ov25078;
extern T0* ge958ov24700;
extern T0* ge958ov25072;
extern T0* ge958ov24936;
extern T0* ge958ov24694;
extern T0* ge958ov25071;
extern T0* ge958ov24935;
extern T0* ge958ov24693;
extern T0* ge958ov25283;
extern T0* ge958ov25041;
extern T0* ge958ov24905;
extern T0* ge958ov25287;
extern T0* ge958ov25045;
extern T0* ge958ov24909;
extern T0* ge958ov25262;
extern T0* ge958ov25027;
extern T0* ge958ov24884;
extern T0* ge958ov25286;
extern T0* ge958ov25044;
extern T0* ge958ov24908;
extern T0* ge958ov25169;
extern T0* ge958ov24979;
extern T0* ge958ov24791;
extern T0* ge958ov25171;
extern T0* ge958ov24793;
extern T0* ge958ov25277;
extern T0* ge958ov25036;
extern T0* ge958ov24899;
extern T0* ge958ov25264;
extern T0* ge958ov25028;
extern T0* ge958ov24886;
extern T0* ge958ov25265;
extern T0* ge958ov24887;
extern T0* ge958ov25168;
extern T0* ge958ov24978;
extern T0* ge958ov24790;
extern T0* ge958ov25164;
extern T0* ge958ov24977;
extern T0* ge958ov24786;
extern T0* ge958ov25165;
extern T0* ge958ov24787;
extern T0* ge958ov25156;
extern T0* ge958ov24974;
extern T0* ge958ov24778;
extern T0* ge958ov25167;
extern T0* ge958ov24789;
extern T0* ge958ov25166;
extern T0* ge958ov24788;
extern T0* ge958ov25163;
extern T0* ge958ov24976;
extern T0* ge958ov24785;
extern T0* ge958ov25135;
extern T0* ge958ov24964;
extern T0* ge958ov24757;
extern T0* ge958ov25134;
extern T0* ge958ov24963;
extern T0* ge958ov24756;
extern T0* ge958ov25133;
extern T0* ge958ov24962;
extern T0* ge958ov24755;
extern T0* ge958ov25132;
extern T0* ge958ov24961;
extern T0* ge958ov24754;
extern T0* ge958ov25131;
extern T0* ge958ov24753;
extern T0* ge958ov25070;
extern T0* ge958ov24934;
extern T0* ge958ov24692;
extern T0* ge958ov25068;
extern T0* ge958ov24933;
extern T0* ge958ov24690;
extern T0* ge958ov25098;
extern T0* ge958ov24945;
extern T0* ge958ov24720;
extern T0* ge958ov25099;
extern T0* ge958ov24721;
extern T0* ge958ov25082;
extern T0* ge958ov24938;
extern T0* ge958ov24704;
extern T0* ge958ov25081;
extern T0* ge958ov24703;
extern T0* ge958ov25083;
extern T0* ge958ov24705;
extern T0* ge958ov25107;
extern T0* ge958ov24949;
extern T0* ge958ov24729;
extern T0* ge958ov25096;
extern T0* ge958ov24718;
extern T0* ge958ov25097;
extern T0* ge958ov24719;
extern T0* ge958ov25141;
extern T0* ge958ov24965;
extern T0* ge958ov24763;
extern T0* ge958ov25138;
extern T0* ge958ov24760;
extern T0* ge958ov25145;
extern T0* ge958ov24966;
extern T0* ge958ov24767;
extern T0* ge958ov25142;
extern T0* ge958ov24764;
extern T0* ge958ov25139;
extern T0* ge958ov24761;
extern T0* ge958ov25146;
extern T0* ge958ov24768;
extern T0* ge958ov25143;
extern T0* ge958ov24765;
extern T0* ge958ov25140;
extern T0* ge958ov24762;
extern T0* ge958ov25147;
extern T0* ge958ov24769;
extern T0* ge958ov25254;
extern T0* ge958ov25023;
extern T0* ge958ov24876;
extern T0* ge958ov25152;
extern T0* ge958ov24970;
extern T0* ge958ov24774;
extern T0* ge958ov25151;
extern T0* ge958ov24773;
extern T0* ge958ov25137;
extern T0* ge958ov24759;
extern T0* ge958ov25136;
extern T0* ge958ov24758;
extern T0* ge958ov25144;
extern T0* ge958ov24766;
extern T0* ge958ov25150;
extern T0* ge958ov24969;
extern T0* ge958ov24772;
extern T0* ge958ov25149;
extern T0* ge958ov24968;
extern T0* ge958ov24771;
extern T0* ge958ov25148;
extern T0* ge958ov24967;
extern T0* ge958ov24770;
extern T0* ge958ov25232;
extern T0* ge958ov25016;
extern T0* ge958ov24854;
extern T0* ge958ov25230;
extern T0* ge958ov25015;
extern T0* ge958ov24852;
extern T0* ge958ov25085;
extern T0* ge958ov24939;
extern T0* ge958ov24707;
extern T0* ge958ov25198;
extern T0* ge958ov24994;
extern T0* ge958ov24820;
extern T0* ge958ov25084;
extern T0* ge958ov24706;
extern T0* ge958ov25197;
extern T0* ge958ov24819;
extern T0* ge958ov25196;
extern T0* ge958ov24993;
extern T0* ge958ov24818;
extern T0* ge958ov25115;
extern T0* ge958ov24954;
extern T0* ge958ov24737;
extern T0* ge958ov25113;
extern T0* ge958ov24952;
extern T0* ge958ov24735;
extern T0* ge958ov25112;
extern T0* ge958ov24734;
extern T0* ge958ov25119;
extern T0* ge958ov24956;
extern T0* ge958ov24741;
extern T0* ge958ov25118;
extern T0* ge958ov24740;
extern T0* ge958ov25120;
extern T0* ge958ov24957;
extern T0* ge958ov24742;
extern T0* ge958ov25180;
extern T0* ge958ov24983;
extern T0* ge958ov24802;
extern T0* ge958ov25179;
extern T0* ge958ov24801;
extern T0* ge958ov25178;
extern T0* ge958ov24800;
extern T0* ge958ov25177;
extern T0* ge958ov24799;
extern T0* ge958ov25181;
extern T0* ge958ov24984;
extern T0* ge958ov24803;
extern T0* ge958ov25101;
extern T0* ge958ov24946;
extern T0* ge958ov24723;
extern T0* ge958ov25100;
extern T0* ge958ov24722;
extern T0* ge958ov25106;
extern T0* ge958ov24728;
extern T0* ge958ov25103;
extern T0* ge958ov24947;
extern T0* ge958ov24725;
extern T0* ge958ov25104;
extern T0* ge958ov24726;
extern T0* ge958ov25195;
extern T0* ge958ov24817;
extern T0* ge958ov25102;
extern T0* ge958ov24724;
extern T0* ge958ov25116;
extern T0* ge958ov24738;
extern T0* ge958ov25105;
extern T0* ge958ov24948;
extern T0* ge958ov24727;
extern T0* ge958ov25110;
extern T0* ge958ov24950;
extern T0* ge958ov24732;
extern T0* ge958ov25108;
extern T0* ge958ov24730;
extern T0* ge958ov25109;
extern T0* ge958ov24731;
extern T0* ge958ov25203;
extern T0* ge958ov24998;
extern T0* ge958ov24825;
extern T0* ge958ov25199;
extern T0* ge958ov24995;
extern T0* ge958ov24821;
extern T0* ge958ov25201;
extern T0* ge958ov24996;
extern T0* ge958ov24823;
extern T0* ge958ov25111;
extern T0* ge958ov24951;
extern T0* ge958ov24733;
extern T0* ge958ov25117;
extern T0* ge958ov24955;
extern T0* ge958ov24739;
extern T0* ge958ov25192;
extern T0* ge958ov24991;
extern T0* ge958ov24814;
extern T0* ge958ov25175;
extern T0* ge958ov24981;
extern T0* ge958ov24797;
extern T0* ge958ov25202;
extern T0* ge958ov24997;
extern T0* ge958ov24824;
extern T0* ge958ov25114;
extern T0* ge958ov24953;
extern T0* ge958ov24736;
extern T0* ge958ov25121;
extern T0* ge958ov24958;
extern T0* ge958ov24743;
extern T0* ge958ov25193;
extern T0* ge958ov24992;
extern T0* ge958ov24815;
extern T0* ge958ov25191;
extern T0* ge958ov24990;
extern T0* ge958ov24813;
extern T0* ge958ov25176;
extern T0* ge958ov24982;
extern T0* ge958ov24798;
extern T0* ge958ov25194;
extern T0* ge958ov24816;
extern T0* ge958ov25295;
extern T0* ge958ov25053;
extern T0* ge958ov24917;
extern T0* ge958ov25296;
extern T0* ge958ov24918;
extern T0* ge958ov25267;
extern T0* ge958ov25030;
extern T0* ge958ov24889;
extern T0* ge958ov25266;
extern T0* ge958ov25029;
extern T0* ge958ov24888;
extern T0* ge958ov25260;
extern T0* ge958ov25026;
extern T0* ge958ov24882;
extern T0* ge958ov25261;
extern T0* ge958ov24883;
extern T0* ge958ov25259;
extern T0* ge958ov25025;
extern T0* ge958ov24881;
extern T0* ge959ov7362;
extern T0* ge959ov7363;
extern T0* ge959ov7374;
extern T0* ge959ov7296;
extern T0* ge959ov7311;
extern T0* ge959ov7366;
extern T0* ge958ov25285;
extern T0* ge958ov25043;
extern T0* ge958ov24907;
extern T0* ge958ov25224;
extern T0* ge958ov25012;
extern T0* ge958ov24846;
extern T0* ge958ov25223;
extern T0* ge958ov25011;
extern T0* ge958ov24845;
extern T0* ge958ov25222;
extern T0* ge958ov25010;
extern T0* ge958ov24844;
extern T0* ge958ov25221;
extern T0* ge958ov25009;
extern T0* ge958ov24843;
extern T0* ge958ov25220;
extern T0* ge958ov25008;
extern T0* ge958ov24842;
extern T0* ge958ov25219;
extern T0* ge958ov25007;
extern T0* ge958ov24841;
extern T0* ge958ov25225;
extern T0* ge958ov25013;
extern T0* ge958ov24847;
extern T0* ge958ov25234;
extern T0* ge958ov25017;
extern T0* ge958ov24856;
extern T0* ge958ov25235;
extern T0* ge958ov25018;
extern T0* ge958ov24857;
extern T0* ge958ov25231;
extern T0* ge958ov24853;
extern T0* ge959ov7367;
extern T0* ge959ov7338;
extern T0* ge959ov7340;
extern T0* ge959ov7337;
extern T0* ge959ov7339;
extern T0* ge959ov7323;
extern T0* ge959ov7324;
extern T0* ge959ov7325;
extern T0* ge959ov7326;
extern T0* ge959ov7330;
extern T0* ge959ov7331;
extern T0* ge959ov7332;
extern T0* ge959ov7333;
extern T0* ge958ov25158;
extern T0* ge958ov24780;
extern T0* ge958ov25161;
extern T0* ge958ov24975;
extern T0* ge958ov24783;
extern T0* ge958ov25154;
extern T0* ge958ov24973;
extern T0* ge958ov24776;
extern T0* ge958ov25157;
extern T0* ge958ov24779;
extern T0* ge958ov25074;
extern T0* ge958ov24696;
extern T0* ge958ov25173;
extern T0* ge958ov24980;
extern T0* ge958ov24795;
extern T0* ge958ov25284;
extern T0* ge958ov25042;
extern T0* ge958ov24906;
extern T0* ge958ov25073;
extern T0* ge958ov24695;
extern T0* ge958ov25172;
extern T0* ge958ov24794;
extern T0* ge958ov25256;
extern T0* ge958ov24878;
extern T0* ge958ov25255;
extern T0* ge958ov24877;
extern T0* ge958ov25075;
extern T0* ge958ov24697;
extern T0* ge958ov25174;
extern T0* ge958ov24796;
extern T0* ge958ov25252;
extern T0* ge958ov25022;
extern T0* ge958ov24874;
extern T0* ge958ov25253;
extern T0* ge958ov24875;
extern T0* ge958ov25092;
extern T0* ge958ov24942;
extern T0* ge958ov24714;
extern T0* ge958ov25087;
extern T0* ge958ov24940;
extern T0* ge958ov24709;
extern T0* ge958ov25090;
extern T0* ge958ov24712;
extern T0* ge958ov25089;
extern T0* ge958ov24711;
extern T0* ge958ov25088;
extern T0* ge958ov24941;
extern T0* ge958ov24710;
extern T0* ge958ov25273;
extern T0* ge958ov25033;
extern T0* ge958ov24895;
extern T0* ge958ov25278;
extern T0* ge958ov25037;
extern T0* ge958ov24900;
extern T0* ge777ov14321;
extern T0* ge958ov25060;
extern T0* ge958ov24928;
extern T0* ge958ov24682;
extern T0* ge958ov25207;
extern T0* ge958ov25001;
extern T0* ge958ov24829;
extern T0* ge958ov25214;
extern T0* ge958ov25005;
extern T0* ge958ov24836;
extern T0* ge958ov25213;
extern T0* ge958ov24835;
extern T0* ge958ov25212;
extern T0* ge958ov25004;
extern T0* ge958ov24834;
extern T0* ge958ov25211;
extern T0* ge958ov24833;
extern T0* ge958ov25210;
extern T0* ge958ov25003;
extern T0* ge958ov24832;
extern T0* ge958ov25209;
extern T0* ge958ov24831;
extern T0* ge958ov25208;
extern T0* ge958ov25002;
extern T0* ge958ov24830;
extern T0* ge958ov25206;
extern T0* ge958ov24828;
extern T0* ge958ov25281;
extern T0* ge958ov25039;
extern T0* ge958ov24903;
extern T0* ge958ov25279;
extern T0* ge958ov25038;
extern T0* ge958ov24901;
extern T0* ge958ov25218;
extern T0* ge958ov25006;
extern T0* ge958ov24840;
extern T0* ge958ov25217;
extern T0* ge958ov24839;
extern T0* ge958ov25237;
extern T0* ge958ov25019;
extern T0* ge958ov24859;
extern T0* ge958ov25239;
extern T0* ge958ov25020;
extern T0* ge958ov24861;
extern T0* ge958ov25229;
extern T0* ge958ov25014;
extern T0* ge958ov24851;
extern T0* ge958ov25216;
extern T0* ge958ov24838;
extern T0* ge958ov25215;
extern T0* ge958ov24837;
extern T0* ge958ov25233;
extern T0* ge958ov24855;
extern T0* ge958ov25228;
extern T0* ge958ov24850;
extern T0* ge958ov25263;
extern T0* ge958ov24885;
extern T0* ge958ov25079;
extern T0* ge958ov24701;
extern T0* ge958ov25077;
extern T0* ge958ov24699;
extern T0* ge958ov25076;
extern T0* ge958ov24698;
extern T0* ge958ov25067;
extern T0* ge958ov24932;
extern T0* ge958ov24689;
extern T0* ge958ov25066;
extern T0* ge958ov24931;
extern T0* ge958ov24688;
extern T0* ge958ov25182;
extern T0* ge958ov24985;
extern T0* ge958ov24804;
extern T0* ge958ov25122;
extern T0* ge958ov24959;
extern T0* ge958ov24744;
extern T0* ge958ov25123;
extern T0* ge958ov24745;
extern T0* ge958ov25184;
extern T0* ge958ov24986;
extern T0* ge958ov24806;
extern T0* ge958ov25185;
extern T0* ge958ov24807;
extern T0* ge958ov25183;
extern T0* ge958ov24805;
extern T0* ge958ov25186;
extern T0* ge958ov24987;
extern T0* ge958ov24808;
extern T0* ge958ov25205;
extern T0* ge958ov25000;
extern T0* ge958ov24827;
extern T0* ge958ov25204;
extern T0* ge958ov24999;
extern T0* ge958ov24826;
extern T0* ge958ov25065;
extern T0* ge958ov24930;
extern T0* ge958ov24687;
extern T0* ge959ov7369;
extern T0* ge958ov25160;
extern T0* ge958ov24782;
extern T0* ge958ov25162;
extern T0* ge958ov24784;
extern T0* ge958ov25155;
extern T0* ge958ov24777;
extern T0* ge958ov25153;
extern T0* ge958ov24972;
extern T0* ge958ov24775;
extern T0* ge958ov25159;
extern T0* ge958ov24781;
extern T0* ge958ov25086;
extern T0* ge958ov24708;
extern T0* ge958ov25187;
extern T0* ge958ov24809;
extern T0* ge958ov25282;
extern T0* ge958ov25040;
extern T0* ge958ov24904;
extern T0* ge959ov7344;
extern T0* ge863ov16446;
extern T0* ge856ov23616;
extern T0* ge859ov22640;
extern T0* ge835ov22672;
extern T0* ge1245ov10503;
extern T0* ge1226ov20157;
extern T0* ge1226ov20156;
extern T0* ge418ov9365;
extern T0* ge311ov9365;
extern T0* ge302ov9365;
extern T0* ge59ov4245;
extern T0* ge59ov4246;
extern T0* ge59ov4247;
extern T0* ge781ov23338;
extern T0* ge777ov14386;
extern T0* ge777ov14367;
extern T0* ge777ov14383;
extern T0* ge777ov14371;
extern T0* ge777ov14372;
extern T0* ge777ov14373;
extern T0* ge777ov14374;
extern T0* ge777ov14368;
extern T0* ge777ov14375;
extern T0* ge777ov14376;
extern T0* ge777ov14377;
extern T0* ge777ov14378;
extern T0* ge777ov14369;
extern T0* ge777ov14384;
extern T0* ge777ov14379;
extern T0* ge777ov14380;
extern T0* ge777ov14381;
extern T0* ge777ov14370;
extern T0* ge777ov14382;
extern T0* ge777ov14385;
extern T0* ge1293ov25477;
extern T0* ge1293ov25479;
extern T0* ge777ov14363;
extern T0* ge777ov14362;
extern T0* ge777ov14350;
extern T0* ge777ov14351;
extern T0* ge777ov14352;
extern T0* ge777ov14353;
extern T0* ge777ov14354;
extern T0* ge777ov14355;
extern T0* ge777ov14356;
extern T0* ge777ov14357;
extern T0* ge777ov14358;
extern T0* ge777ov14359;
extern T0* ge777ov14360;
extern T0* ge777ov14361;
extern T0* ge777ov14365;
extern T0* ge777ov14366;
extern T0* ge777ov14346;
extern T0* ge777ov14347;
extern T0* ge777ov14348;
extern T0* ge777ov14349;
extern T0* ge777ov14364;
extern T0* ge803ov21567;
extern T0* ge803ov21566;
extern T0* ge808ov23431;
extern T0* ge818ov23323;
extern T0* ge1026ov4012;
extern T0* ge1023ov4012;
extern T0* ge230ov4012;
extern T0* ge229ov4012;
extern T0* ge1017ov4012;
extern T0* ge1033ov4012;
extern T0* ge1030ov4012;
extern T0* ge1029ov4012;
extern T0* ge1025ov4012;
extern T0* ge1032ov4012;
extern T0* ge1024ov4012;
extern T0* ge1036ov4012;
extern T0* ge1020ov4012;
extern T0* ge1031ov4012;
extern T0* ge1035ov4012;
extern T0* ge1027ov4012;
extern T0* ge1018ov4012;
extern T0* ge224ov4012;
extern T0* ge227ov4012;
extern T0* ge234ov4012;
extern T0* ge223ov4012;
extern T0* ge412ov25556;
extern T0* ge399ov1824;
extern T0* geic3;
extern T0* geic4;
extern T0* geic5;
extern void GE_const_init(void);
extern EIF_TYPE GE_types[];

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#ifdef EIF_WINDOWS
/* Needed to compile some code at AXAR */
extern void set_windows_exception_filter();
#endif

/* Raises an Eiffel exception of the given code with no associated tag. */
extern void xraise(int code);
/* Raise 'Operating system error' exception. */
extern void esys(void);
/* As a special case, an I/O error is raised when a system call which is I/O bound fails. */
extern void eise_io(char *tag);

/*
 * Predefined exception numbers. Value cannot start at 0 because this may need
 * a propagation via longjmp and USG implementations turn out a 0 to be 1.
 */
#define EN_VOID		1			/* Feature applied to void reference */
#define EN_MEM		2			/* No more memory */
#define EN_PRE		3			/* Pre-condition violated */
#define EN_POST		4			/* Post-condition violated */
#define EN_FLOAT	5			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		6			/* Class invariant violated */
#define EN_CHECK	7			/* Assertion violated */
#define EN_FAIL		8			/* Routine failure */
#define EN_WHEN		9			/* Unmatched inspect value */
#define EN_VAR		10			/* Non-decreasing loop variant */
#define EN_LINV		11			/* Loop invariant violated */
#define EN_SIG		12			/* Operating system signal */
#define EN_BYE		13			/* Eiffel run-time panic */
#define EN_RESC		14			/* Exception in rescue clause */
#define EN_OMEM		15			/* Out of memory (cannot be ignored) */
#define EN_RES		16			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		17			/* Create on deferred */
#define EN_EXT		18			/* External event */
#define EN_VEXP		19			/* Void assigned to expanded */
#define EN_HDLR		20			/* Exception in signal handler */
#define EN_IO		21			/* I/O error */
#define EN_SYS		22			/* Operating system error */
#define EN_RETR		23			/* Retrieval error */
#define EN_PROG		24			/* Developer exception */
#define EN_FATAL	25			/* Eiffel run-time fatal error */
#define EN_DOL		26			/* $ applied to melted feature */
#define EN_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		28			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Create directory `dirname'.
 */
extern void file_mkdir(char* dirname);

/*
 * Rename file `from' into `to'.
 */
extern void file_rename(char* from, char* to);

/*
 * Link file `from' into `to'.
 */
extern void file_link(char *from, char *to);

/*
 * Delete file or directory `name'.
 */
extern void file_unlink(char *name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER file_open(char *name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);

/*
 * Close the file.
 */
extern void file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void file_touch(char *name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void file_utime(char *name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern void file_stat(char *path, struct stat *buf);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void file_perm(char *name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void file_chmod(char *path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void file_chown(char *name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void file_chgrp(char *name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN file_exists(char *name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN file_path_exists(char *name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER file_info(struct stat *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER file_binary_open(char* name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)name)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) ((struct timeval*)(p))->tv_usec
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"C functions used to implement the main function"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MAIN_H
#define EIF_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/*
	Used in WEL.
*/
extern HINSTANCE eif_hInstance;

#endif

/*
	Used by the ISE runtime to figure out whether the application
	was launched from EiffelStudio in workbench mode or not.
*/
extern int debug_mode;

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
