/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER) || \
	defined(__MINGW32__))
#define WIN32 1
#endif
#ifdef WIN32
#define EIF_WINDOWS 1
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif
/* MAC definition */
#ifdef EIF_MAC
#define EIF_IS_MAC EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_MAC EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_ANY;
#define EIF_REFERENCE EIF_ANY*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define GE_int8(x) x
#define GE_nat8(x) x
#define GE_int16(x) x
#define GE_nat16(x) x
#define GE_int32(x) x##L
#define GE_nat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define GE_int64(x) x##i64
#define GE_nat64(x) x##ui64
#else /* ISO C 99 */
#define GE_int64(x) x##LL
#define GE_nat64(x) x##ULL
#endif 
#endif 

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

/*
	Interoperability with ISE.
*/
#define RTI64C(x) GE_int64(x)
#define EIF_PROCEDURE EIF_POINTER
#define EIF_OBJECT EIF_REFERENCE
#define EIF_OBJ EIF_OBJECT
/* Function pointer call to make sure all arguments are correctly pushed onto stack. */
/* FUNCTION_CAST is for standard C calls. */
/* FUNCTION_CAST_TYPE is for non-standard C calls. */
#define FUNCTION_CAST(r_type,arg_types) (r_type (*) arg_types)
#define FUNCTION_CAST_TYPE(r_type,call_type,arg_types) (r_type (call_type *) arg_types)

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int GE_argc;
extern char** GE_argv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define GE_jmp_buf sigjmp_buf
#define GE_setjmp(x) sigsetjmp((x),1)
#define GE_longjmp(x,y) siglongjmp((x),(y))
#else
#define GE_jmp_buf jmp_buf
#define GE_setjmp(x) setjmp((x))
#define GE_longjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Information about the feature being executed.
*/
typedef struct GE_call_struct GE_call;
struct GE_call_struct {
	char* feature_name;
	char* type_name;
	GE_call* caller; /* previous feature in the call chain */
};

/*
	Context of features containing a rescue clause.
*/
typedef struct GE_rescue_struct GE_rescue;
struct GE_rescue_struct {
	GE_jmp_buf jb;
	GE_rescue* previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern GE_rescue* GE_last_rescue;

/*
	Raise an exception with code 'code'.
*/
extern void GE_raise(int code);

/*
	Check whether the type id of 'obj' is not in 'type_ids'.
	If it is, then raise a CAT-call exception. Don't do anything if 'obj' is Void.
	'nb' is the number of ids in 'type_ids' and is expected to be >0.
	'type_ids' is sorted in increasing order.
	Return 'obj'.
*/
#define GE_catcall(obj,type_ids,nb) GE_check_catcall((obj),(type_ids),(nb))
EIF_REFERENCE GE_check_catcall(EIF_REFERENCE obj, int type_ids[], int nb);

/*
	Check whether 'obj' is Void.
	If it is, then raise a call-on-void-target exception.
	Return 'obj'
*/
#define GE_void(obj) (!(obj)?GE_check_void(obj):(obj))
extern EIF_REFERENCE GE_check_void(EIF_REFERENCE obj);

/*
	Check whether 'ptr' is a null pointer.
	If it is, then raise a no-more-memory exception.
	Return 'ptr'
*/
#define GE_null(ptr) GE_check_null(ptr)
extern void* GE_check_null(void* ptr);

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_CONSOLE_H
#define GE_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

/*
	Create a new DOS console if needed (i.e. in case of a Windows application).
*/
extern void GE_show_console(void);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement the program initialization"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_MAIN_H
#define GE_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/*
	Main entry point when compiling a Windows application.
	See:
		http://en.wikipedia.org/wiki/WinMain
		http://msdn2.microsoft.com/en-us/library/ms633559.aspx
*/
extern int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow);

#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to access garbage collector facilities"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007-2008, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_GC_H
#define GE_GC_H

#ifdef EIF_BOEHM_GC

/*
	Use the Boehm garbage collector.
	See:
		http://en.wikipedia.org/wiki/Boehm_GC
		http://www.hpl.hp.com/personal/Hans_Boehm/gc/
*/

#include "gc.h"

/*
	GC initialization.
*/
#define GE_init_gc() GC_INIT(); GC_enable_incremental()

/*
	Memory allocation.
*/

/*
 * GE_alloc allocates memory that can contain pointers to collectable objects.
 */
#define GE_alloc(x) GE_null(GC_MALLOC(x))

/*
 * When defined, GE_alloc_cleared means that GE_alloc makes sure that the allocated memory is zeroed.
 */
#define GE_alloc_cleared

/*
 * GE_alloc_atomic allocates memory that does not contain pointers to collectable objects.
 */
#define GE_alloc_atomic(x) GE_null(GC_MALLOC_ATOMIC(x))

/*
 * When defined, GE_alloc_atomic_cleared means that GE_alloc_atomic makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_atomic_cleared */

/*
	Dispose
*/

/*
 * Call dispose routine `disp' on object `C'.
 */
extern void GE_boehm_dispose(void*, void*);

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#define GE_register_dispose(obj, disp) GC_REGISTER_FINALIZER((void*)(obj), (void (*) (void*, void*)) &GE_boehm_dispose, NULL, NULL, NULL)

#else

/*
	No garbage collector.
*/

/*
	GC initialization.
*/
#define GE_init_gc() /* do nothing */

/*
	Memory allocation.
*/

/*
 * GE_alloc allocates memory that can contain pointers to collectable objects.
 */
#define GE_alloc(x) GE_null(malloc(x))

/*
 * When defined, GE_alloc_cleared means that GE_alloc makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_cleared */

/*
 * GE_alloc_atomic allocates memory that does not contain pointers to collectable objects.
 */
#define GE_alloc_atomic(x) GE_null(malloc(x))

/*
 * When defined, GE_alloc_atomic_cleared means that GE_alloc_atomic makes sure that the allocated memory is zeroed.
 */
/* #define GE_alloc_atomic_cleared */

/*
	Dispose
*/

/*
 * Register dispose routine `disp' to be called on object `obj' when it will be collected.
 */
#define GE_register_dispose(obj, disp) /* do nothing */

#endif


/*
	Access to objects, useful with GCs which move objects in memory.
	This is not the case here, since the Boehm GC is not a moving GC.
*/

/* Access object through hector */
#define eif_access(obj) (obj)
/* Freeze memory address */
#define eif_freeze(obj) (obj)
/* The C side adopts an object */
#define eif_adopt(obj) (obj)
/* The C side protects an object */
#define eif_protect(obj) (obj)
/* The C side weans adopted object */
#define eif_wean(obj) (obj)
/* Forget a frozen memory address */
#define eif_unfreeze(obj)
/* Always frozen since they do not move */
#define eif_frozen(obj) 1
/* Always frozen since they do not move */
#define spfrozen(obj) 1

#endif

#ifdef __cplusplus
extern "C" {
#endif

#define T0 EIF_ANY

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* GE_boxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* GE_boxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* GE_boxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* GE_boxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* GE_boxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* GE_boxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* GE_boxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* GE_boxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* GE_boxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* GE_boxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* GE_boxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* GE_boxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* GE_boxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* GE_boxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GEC */
typedef struct S21 T21;

/* KL_TEXT_INPUT_FILE */
typedef struct S22 T22;

/* KL_ARGUMENTS */
typedef struct S23 T23;

/* UT_ERROR_HANDLER */
typedef struct S24 T24;

/* ET_SYSTEM */
typedef struct S25 T25;

/* KL_STRING_ROUTINES */
typedef struct S26 T26;

/* ET_ERROR_HANDLER */
typedef struct S28 T28;

/* KL_EXCEPTIONS */
typedef struct S29 T29;

/* AP_PARSER */
typedef struct S30 T30;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S31 T31;

/* AP_ERROR */
typedef struct S32 T32;

/* AP_FLAG */
typedef struct S33 T33;

/* AP_ENUMERATION_OPTION */
typedef struct S35 T35;

/* AP_BOOLEAN_OPTION */
typedef struct S36 T36;

/* AP_INTEGER_OPTION */
typedef struct S37 T37;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S41 T41;

/* ET_XACE_SYSTEM_PARSER */
typedef struct S43 T43;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S44 T44;

/* DS_HASH_TABLE [STRING_8, STRING_8] */
typedef struct S45 T45;

/* ST_SPLITTER */
typedef struct S46 T46;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S48 T48;

/* KL_EQUALITY_TESTER [STRING_8] */
typedef struct S49 T49;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S50 T50;

/* ET_XACE_SYSTEM */
typedef struct S53 T53;

/* ET_LACE_PARSER */
typedef struct S54 T54;

/* ET_LACE_ERROR_HANDLER */
typedef struct S55 T55;

/* ET_LACE_SYSTEM */
typedef struct S56 T56;

/* ET_NULL_ERROR_HANDLER */
typedef struct S57 T57;

/* ET_DYNAMIC_SYSTEM */
typedef struct S58 T58;

/* ET_CLASS */
typedef struct S60 T60;

/* ET_C_GENERATOR */
typedef struct S61 T61;

/* KL_SHELL_COMMAND */
typedef struct S62 T62;

/* UT_VERSION */
typedef struct S63 T63;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S64 T64;

/* KL_OPERATING_SYSTEM */
typedef struct S66 T66;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S68 T68;

/* UT_VERSION_NUMBER */
typedef struct S69 T69;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S70 T70;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S71 T71;

/* KL_LINKABLE [CHARACTER_8] */
typedef struct S72 T72;

/* TYPED_POINTER [ANY] */
typedef struct S74 T74;

/* KL_STANDARD_FILES */
typedef struct S75 T75;

/* KL_STDERR_FILE */
typedef struct S76 T76;

/* KL_STDOUT_FILE */
typedef struct S77 T77;

/* UC_STRING */
typedef struct S78 T78;

/* KL_ANY_ROUTINES */
typedef struct S79 T79;

/* DS_ARRAYED_LIST [STRING_8] */
typedef struct S80 T80;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S81 T81;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S82 T82;

/* AP_ERROR_HANDLER */
typedef struct S83 T83;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S84 T84;

/* SPECIAL [STRING_8] */
typedef struct S85 T85;

/* ARRAY [STRING_8] */
typedef struct S86 T86;

/* DS_LINKED_LIST [STRING_8] */
typedef struct S88 T88;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S89 T89;

/* DS_LINKED_LIST [BOOLEAN] */
typedef struct S93 T93;

/* DS_LINKED_LIST [INTEGER_32] */
typedef struct S96 T96;

/* ST_WORD_WRAPPER */
typedef struct S97 T97;

/* ET_XACE_AST_FACTORY */
typedef struct S98 T98;

/* XM_DOCUMENT */
typedef struct S99 T99;

/* XM_ELEMENT */
typedef struct S100 T100;

/* XM_POSITION_TABLE */
typedef struct S101 T101;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S103 T103;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S104 T104;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S105 T105;

/* ET_XACE_VALIDATOR */
typedef struct S106 T106;

/* ET_XACE_PREPROCESSOR */
typedef struct S107 T107;

/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S108 T108;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S109 T109;

/* ET_XACE_LIBRARY_CONFIG_PARSER */
typedef struct S110 T110;

/* XM_EIFFEL_PARSER */
typedef struct S111 T111;

/* UT_MESSAGE */
typedef struct S114 T114;

/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
typedef struct S115 T115;

/* SPECIAL [INTEGER_32] */
typedef struct S117 T117;

/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
typedef struct S118 T118;

/* KL_SPECIAL_ROUTINES [INTEGER_32] */
typedef struct S119 T119;

/* KL_SPECIAL_ROUTINES [STRING_8] */
typedef struct S120 T120;

/* DS_LINKED_LIST_CURSOR [STRING_8] */
typedef struct S121 T121;

/* DS_HASH_SET [INTEGER_32] */
typedef struct S122 T122;

/* EXECUTION_ENVIRONMENT */
typedef struct S123 T123;

/* ET_LACE_AST_FACTORY */
typedef struct S124 T124;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S125 T125;

/* YY_FILE_BUFFER */
typedef struct S126 T126;

/* YY_BUFFER */
typedef struct S127 T127;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S128 T128;

/* ET_IDENTIFIER */
typedef struct S129 T129;

/* SPECIAL [ANY] */
typedef struct S131 T131;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S132 T132;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S133 T133;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S134 T134;

/* ET_LACE_CLUSTERS */
typedef struct S135 T135;

/* ET_LACE_CLUSTER */
typedef struct S136 T136;

/* ET_LACE_EXCLUDE */
typedef struct S137 T137;

/* ET_LACE_DOTNET_ASSEMBLIES */
typedef struct S138 T138;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S139 T139;

/* SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S140 T140;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S141 T141;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
typedef struct S142 T142;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S143 T143;

/* SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S144 T144;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S145 T145;

/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
typedef struct S146 T146;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S147 T147;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S148 T148;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S149 T149;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S150 T150;

/* KL_PLATFORM */
typedef struct S151 T151;

/* KL_INTEGER_ROUTINES */
typedef struct S152 T152;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S153 T153;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S154 T154;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S155 T155;

/* TUPLE [ET_CLASS] */
typedef struct S156 T156;

/* TUPLE */
typedef struct S157 T157;

/* PROCEDURE [ET_CLASS, TUPLE [ET_CLASS]] */
typedef struct S158 T158;

/* TUPLE [INTEGER_32] */
typedef struct S159 T159;

/* ET_TOKEN_CONSTANTS */
typedef struct S160 T160;

/* ET_DYNAMIC_TYPE */
typedef struct S161 T161;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S163 T163;

/* DT_DATE_TIME */
typedef struct S164 T164;

/* DT_SYSTEM_CLOCK */
typedef struct S165 T165;

/* PROCEDURE [ET_DYNAMIC_SYSTEM, TUPLE [ET_CLASS]] */
typedef struct S166 T166;

/* TUPLE [ET_DYNAMIC_SYSTEM] */
typedef struct S167 T167;

/* ET_DYNAMIC_FEATURE */
typedef struct S174 T174;

/* ET_CLASS_TYPE */
typedef struct S175 T175;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S176 T176;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S177 T177;

/* ET_EXTERNAL_FUNCTION */
typedef struct S179 T179;

/* ET_KEYWORD */
typedef struct S182 T182;

/* ET_TUPLE_TYPE */
typedef struct S184 T184;

/* ET_QUERY_LIST */
typedef struct S185 T185;

/* ET_PROCEDURE_LIST */
typedef struct S186 T186;

/* ET_TYPE_CHECKER */
typedef struct S187 T187;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S188 T188;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S189 T189;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S190 T190;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S191 T191;

/* DS_ARRAYED_LIST [INTEGER_32] */
typedef struct S192 T192;

/* ET_DYNAMIC_TYPE_LIST */
typedef struct S193 T193;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S194 T194;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S195 T195;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S196 T196;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S197 T197;

/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
typedef struct S198 T198;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S199 T199;

/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S200 T200;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S201 T201;

/* ET_CURRENT */
typedef struct S203 T203;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S204 T204;

/* ET_CALL_INSTRUCTION */
typedef struct S205 T205;

/* ET_CALL_EXPRESSION */
typedef struct S208 T208;

/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION] */
typedef struct S209 T209;

/* ET_MANIFEST_TUPLE */
typedef struct S210 T210;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S211 T211;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S212 T212;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S213 T213;

/* DS_HASH_SET [ET_INLINE_CONSTANT] */
typedef struct S214 T214;

/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S215 T215;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S216 T216;

/* DS_HASH_SET [STRING_8] */
typedef struct S217 T217;

/* DS_HASH_TABLE [BOOLEAN, STRING_8] */
typedef struct S218 T218;

/* ET_IDENTIFIER_TESTER */
typedef struct S219 T219;

/* KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S220 T220;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S221 T221;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S222 T222;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S223 T223;

/* UT_TEMPLATE_EXPANDER */
typedef struct S224 T224;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S225 T225;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S226 T226;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S227 T227;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S228 T228;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
typedef struct S229 T229;

/* ET_RESULT */
typedef struct S230 T230;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S231 T231;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S235 T235;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S237 T237;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S242 T242;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S243 T243;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S245 T245;

/* DS_QUICK_SORTER [INTEGER_32] */
typedef struct S248 T248;

/* ET_FORMAL_ARGUMENT */
typedef struct S251 T251;

/* PROCEDURE [ET_C_GENERATOR, TUPLE] */
typedef struct S255 T255;

/* TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S256 T256;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S258 T258;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S259 T259;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S263 T263;

/* ET_COMPOUND */
typedef struct S265 T265;

/* TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
typedef struct S266 T266;

/* TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
typedef struct S267 T267;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S268 T268;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S269 T269;

/* ET_ATTRIBUTE */
typedef struct S270 T270;

/* UT_INTEGER_FORMATTER */
typedef struct S272 T272;

/* DS_CELL [INTEGER_32] */
typedef struct S273 T273;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S275 T275;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S276 T276;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S277 T277;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S278 T278;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S279 T279;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S280 T280;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S281 T281;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S282 T282;

/* UNIX_FILE_INFO */
typedef struct S284 T284;

/* ET_AST_FACTORY */
typedef struct S286 T286;

/* ET_XACE_EXTERNALS */
typedef struct S287 T287;

/* ET_XACE_OPTIONS */
typedef struct S288 T288;

/* ET_XACE_OPTION_NAMES */
typedef struct S291 T291;

/* ET_XACE_CLUSTER */
typedef struct S293 T293;

/* ET_XACE_CLUSTERS */
typedef struct S294 T294;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S295 T295;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S296 T296;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S297 T297;

/* XM_ATTRIBUTE */
typedef struct S298 T298;

/* DS_LINKED_LIST_CURSOR [XM_NODE] */
typedef struct S299 T299;

/* ET_XACE_LIBRARY_CONFIG */
typedef struct S301 T301;

/* DS_HASH_TABLE [INTEGER_32, STRING_8] */
typedef struct S302 T302;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S305 T305;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S306 T306;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S307 T307;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S308 T308;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S309 T309;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S310 T310;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S311 T311;

/* ET_AST_NULL_PROCESSOR */
typedef struct S313 T313;

/* ET_ADAPTED_LIBRARIES */
typedef struct S314 T314;

/* TUPLE [ET_LIBRARY] */
typedef struct S316 T316;

/* PROCEDURE [ET_LIBRARY, TUPLE [ET_LIBRARY]] */
typedef struct S317 T317;

/* TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
typedef struct S318 T318;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S319 T319;

/* ET_EIFFEL_PREPARSER */
typedef struct S320 T320;

/* ET_EIFFEL_PARSER */
typedef struct S321 T321;

/* ET_PROVIDER_CHECKER */
typedef struct S322 T322;

/* ET_ANCESTOR_BUILDER */
typedef struct S323 T323;

/* ET_FEATURE_FLATTENER */
typedef struct S324 T324;

/* ET_INTERFACE_CHECKER */
typedef struct S325 T325;

/* DT_DATE_TIME_DURATION */
typedef struct S326 T326;

/* PROCEDURE [ET_XACE_SYSTEM, TUPLE [ET_CLASS]] */
typedef struct S327 T327;

/* TUPLE [ET_XACE_SYSTEM] */
typedef struct S328 T328;

/* DS_HASH_SET_CURSOR [STRING_8] */
typedef struct S329 T329;

/* DS_ARRAYED_LIST_CURSOR [STRING_8] */
typedef struct S330 T330;

/* ET_CLASS_NAME_TESTER */
typedef struct S332 T332;

/* ET_NONE_GROUP */
typedef struct S334 T334;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S335 T335;

/* PROCEDURE [ET_CLUSTER, TUPLE [ET_CLUSTER]] */
typedef struct S339 T339;

/* TUPLE [ET_AST_PROCESSOR] */
typedef struct S340 T340;

/* TUPLE [ET_ADAPTED_LIBRARY] */
typedef struct S343 T343;

/* PROCEDURE [ET_ADAPTED_LIBRARY, TUPLE [ET_ADAPTED_LIBRARY]] */
typedef struct S344 T344;

/* ET_CLIENT */
typedef struct S346 T346;

/* ET_PARENT */
typedef struct S347 T347;

/* ET_RENAME_LIST */
typedef struct S348 T348;

/* ET_EXPORT_LIST */
typedef struct S349 T349;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S350 T350;

/* ET_PARENT_LIST */
typedef struct S351 T351;

/* ET_CLIENT_LIST */
typedef struct S353 T353;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S355 T355;

/* ET_ANCESTORS_STATUS_CHECKER */
typedef struct S358 T358;

/* ET_FLATTENING_STATUS_CHECKER */
typedef struct S359 T359;

/* ET_INTERFACE_STATUS_CHECKER */
typedef struct S360 T360;

/* ET_IMPLEMENTATION_STATUS_CHECKER */
typedef struct S361 T361;

/* ARRAY [INTEGER_32] */
typedef struct S362 T362;

/* UT_CONFIG_PARSER */
typedef struct S363 T363;

/* KL_COMPARABLE_COMPARATOR [INTEGER_32] */
typedef struct S364 T364;

/* ET_DO_PROCEDURE */
typedef struct S366 T366;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S369 T369;

/* ET_DEFERRED_PROCEDURE */
typedef struct S370 T370;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S371 T371;

/* SPECIAL [AP_OPTION] */
typedef struct S373 T373;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S374 T374;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S375 T375;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S376 T376;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S377 T377;

/* DS_LINKABLE [STRING_8] */
typedef struct S378 T378;

/* DS_LINKABLE [BOOLEAN] */
typedef struct S379 T379;

/* DS_LINKED_LIST_CURSOR [BOOLEAN] */
typedef struct S380 T380;

/* DS_LINKABLE [INTEGER_32] */
typedef struct S381 T381;

/* DS_LINKED_LIST_CURSOR [INTEGER_32] */
typedef struct S382 T382;

/* XM_NAMESPACE_RESOLVER */
typedef struct S383 T383;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S384 T384;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S385 T385;

/* XM_CALLBACKS_NULL */
typedef struct S386 T386;

/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S389 T389;

/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S391 T391;

/* SPECIAL [ET_XACE_LIBRARY_CONFIG] */
typedef struct S392 T392;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
typedef struct S393 T393;

/* XM_EIFFEL_SCANNER */
typedef struct S394 T394;

/* XM_DEFAULT_POSITION */
typedef struct S395 T395;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S397 T397;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S398 T398;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S399 T399;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S401 T401;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S402 T402;

/* XM_EIFFEL_DECLARATION */
typedef struct S403 T403;

/* XM_DTD_EXTERNAL_ID */
typedef struct S404 T404;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S405 T405;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S406 T406;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S407 T407;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S408 T408;

/* DS_BILINKED_LIST [STRING_8] */
typedef struct S409 T409;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S410 T410;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S411 T411;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S412 T412;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S413 T413;

/* SPECIAL [BOOLEAN] */
typedef struct S414 T414;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S415 T415;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S416 T416;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S417 T417;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S418 T418;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S419 T419;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S420 T420;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S422 T422;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S424 T424;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S425 T425;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S426 T426;

/* SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S427 T427;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
typedef struct S428 T428;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S429 T429;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S430 T430;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S432 T432;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S433 T433;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S435 T435;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
typedef struct S436 T436;

/* TO_SPECIAL [INTEGER_32] */
typedef struct S437 T437;

/* TO_SPECIAL [STRING_8] */
typedef struct S438 T438;

/* DS_HASH_SET_CURSOR [INTEGER_32] */
typedef struct S439 T439;

/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S442 T442;

/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S444 T444;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S445 T445;

/* TO_SPECIAL [ANY] */
typedef struct S446 T446;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S447 T447;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S448 T448;

/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S449 T449;

/* TO_SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S450 T450;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S451 T451;

/* TO_SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S452 T452;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S453 T453;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S454 T454;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S456 T456;

/* SPECIAL [ET_CLASS] */
typedef struct S458 T458;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S459 T459;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S460 T460;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S461 T461;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S462 T462;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S463 T463;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S464 T464;

/* ET_UNKNOWN_GROUP */
typedef struct S465 T465;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S466 T466;

/* MANAGED_POINTER */
typedef struct S467 T467;

/* ET_SYMBOL */
typedef struct S469 T469;

/* ET_BRACKET_SYMBOL */
typedef struct S470 T470;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S472 T472;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S473 T473;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S477 T477;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S478 T478;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S479 T479;

/* DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
typedef struct S480 T480;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S482 T482;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S483 T483;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S484 T484;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S485 T485;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S487 T487;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S489 T489;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S490 T490;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S491 T491;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S492 T492;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S494 T494;

/* SPECIAL [ET_AGENT] */
typedef struct S496 T496;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S497 T497;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S498 T498;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S499 T499;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S501 T501;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S502 T502;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S503 T503;

/* DS_ARRAYED_LIST_CURSOR [ET_CALL_EXPRESSION] */
typedef struct S504 T504;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S505 T505;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S506 T506;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S507 T507;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S508 T508;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S510 T510;

/* SPECIAL [ET_FEATURE] */
typedef struct S511 T511;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S512 T512;

/* SPECIAL [ET_CONSTANT] */
typedef struct S513 T513;

/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
typedef struct S515 T515;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S517 T517;

/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT] */
typedef struct S518 T518;

/* SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S519 T519;

/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
typedef struct S520 T520;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S521 T521;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S523 T523;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S525 T525;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S526 T526;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S527 T527;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
typedef struct S528 T528;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8] */
typedef struct S530 T530;

/* RX_BYTE_CODE */
typedef struct S533 T533;

/* RX_CASE_MAPPING */
typedef struct S534 T534;

/* RX_CHARACTER_SET */
typedef struct S535 T535;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S537 T537;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S538 T538;

/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S539 T539;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
typedef struct S540 T540;

/* ARRAY [BOOLEAN] */
typedef struct S541 T541;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S542 T542;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S544 T544;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S545 T545;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S546 T546;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S547 T547;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S548 T548;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S549 T549;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S550 T550;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S551 T551;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S552 T552;

/* SPECIAL [ET_QUERY] */
typedef struct S553 T553;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S554 T554;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S555 T555;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S556 T556;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S557 T557;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S558 T558;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S559 T559;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S560 T560;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S561 T561;

/* SPECIAL [ET_TYPE] */
typedef struct S562 T562;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S563 T563;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S564 T564;

/* C_STRING */
typedef struct S567 T567;

/* ET_CLUSTERS */
typedef struct S568 T568;

/* ET_SYSTEM_ERROR */
typedef struct S569 T569;

/* ET_INTERNAL_ERROR */
typedef struct S570 T570;

/* ET_VALIDITY_ERROR */
typedef struct S571 T571;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S572 T572;

/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S573 T573;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S574 T574;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S575 T575;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S576 T576;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S577 T577;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S578 T578;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S579 T579;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S580 T580;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S581 T581;

/* PROCEDURE [ET_LACE_SYSTEM, TUPLE [ET_CLASS]] */
typedef struct S584 T584;

/* TUPLE [ET_LACE_SYSTEM] */
typedef struct S585 T585;

/* ET_CREATOR_LIST */
typedef struct S586 T586;

/* ET_BASE_TYPE_LIST */
typedef struct S587 T587;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S590 T590;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S591 T591;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S592 T592;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S593 T593;

/* UC_UTF8_ROUTINES */
typedef struct S594 T594;

/* UC_UTF8_STRING */
typedef struct S595 T595;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S596 T596;

/* KL_CHARACTER_BUFFER */
typedef struct S599 T599;

/* KL_CHARACTER_ROUTINES */
typedef struct S600 T600;

/* TUPLE [ET_LACE_CLUSTER] */
typedef struct S601 T601;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S603 T603;

/* ET_INFIX_FREE_NAME */
typedef struct S604 T604;

/* TYPED_POINTER [SPECIAL [CHARACTER_8]] */
typedef struct S610 T610;

/* UT_TRISTATE */
typedef struct S611 T611;

/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S612 T612;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S613 T613;

/* TUPLE [ET_XACE_CLUSTER] */
typedef struct S614 T614;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S615 T615;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S616 T616;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S617 T617;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
typedef struct S618 T618;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
typedef struct S620 T620;

/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
typedef struct S622 T622;

/* DS_HASH_SET [ET_LIBRARY] */
typedef struct S623 T623;

/* TUPLE [DS_HASH_SET [ET_LIBRARY]] */
typedef struct S624 T624;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY] */
typedef struct S625 T625;

/* TUPLE [DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY], NONE] */
typedef struct S626 T626;

/* DS_ARRAYED_LIST [ET_LIBRARY] */
typedef struct S627 T627;

/* ET_FEATURE_CHECKER */
typedef struct S628 T628;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S629 T629;

/* DS_HASH_SET [ET_PROCEDURE] */
typedef struct S630 T630;

/* DS_HASH_SET [ET_QUERY] */
typedef struct S631 T631;

/* ET_SUPPLIER_BUILDER */
typedef struct S632 T632;

/* DS_ARRAYED_STACK [INTEGER_32] */
typedef struct S634 T634;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S635 T635;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S636 T636;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S637 T637;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S638 T638;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S639 T639;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S640 T640;

/* KL_EIFFEL_COMPILER */
typedef struct S641 T641;

/* ET_CLIENTS */
typedef struct S644 T644;

/* ET_FEATURE_CLAUSE */
typedef struct S645 T645;

/* SPECIAL [ET_KEYWORD] */
typedef struct S647 T647;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S648 T648;

/* ET_AGENT_KEYWORD */
typedef struct S649 T649;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S650 T650;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S651 T651;

/* ET_PRECURSOR_KEYWORD */
typedef struct S652 T652;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S653 T653;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S654 T654;

/* SPECIAL [ET_SYMBOL] */
typedef struct S655 T655;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S656 T656;

/* SPECIAL [ET_POSITION] */
typedef struct S657 T657;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S658 T658;

/* ET_BIT_CONSTANT */
typedef struct S659 T659;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S660 T660;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S661 T661;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S663 T663;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S664 T664;

/* SPECIAL [ET_BREAK] */
typedef struct S666 T666;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S667 T667;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S669 T669;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S670 T670;

/* SPECIAL [ET_CURRENT] */
typedef struct S671 T671;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S672 T672;

/* ET_FREE_OPERATOR */
typedef struct S673 T673;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S674 T674;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S675 T675;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S677 T677;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S678 T678;

/* ET_KEYWORD_OPERATOR */
typedef struct S679 T679;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S680 T680;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S681 T681;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S682 T682;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S683 T683;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S685 T685;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S686 T686;

/* SPECIAL [ET_RESULT] */
typedef struct S687 T687;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S688 T688;

/* ET_RETRY_INSTRUCTION */
typedef struct S689 T689;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S690 T690;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S691 T691;

/* ET_SYMBOL_OPERATOR */
typedef struct S692 T692;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S693 T693;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S694 T694;

/* ET_VOID */
typedef struct S695 T695;

/* SPECIAL [ET_VOID] */
typedef struct S696 T696;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S697 T697;

/* ET_SEMICOLON_SYMBOL */
typedef struct S698 T698;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S699 T699;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S700 T700;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S701 T701;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S702 T702;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S703 T703;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S704 T704;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S705 T705;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S706 T706;

/* ET_VERBATIM_STRING */
typedef struct S707 T707;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S708 T708;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S709 T709;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S710 T710;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S711 T711;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S712 T712;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S713 T713;

/* ET_TRUE_CONSTANT */
typedef struct S715 T715;

/* ET_FALSE_CONSTANT */
typedef struct S716 T716;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S717 T717;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S718 T718;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S720 T720;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S722 T722;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S723 T723;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S724 T724;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S725 T725;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S726 T726;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S727 T727;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S728 T728;

/* ET_INVARIANTS */
typedef struct S729 T729;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S730 T730;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S731 T731;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S733 T733;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S735 T735;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S737 T737;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S741 T741;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S742 T742;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S744 T744;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S745 T745;

/* ET_CREATE_EXPRESSION */
typedef struct S746 T746;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S747 T747;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S748 T748;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S749 T749;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S750 T750;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S751 T751;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S752 T752;

/* ET_FORMAL_PARAMETER */
typedef struct S753 T753;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S754 T754;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S756 T756;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S757 T757;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S759 T759;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S760 T760;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S761 T761;

/* ET_CONSTRAINT_CREATOR */
typedef struct S762 T762;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S763 T763;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S764 T764;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S766 T766;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S767 T767;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S768 T768;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S769 T769;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S770 T770;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S772 T772;

/* ET_BIT_N */
typedef struct S773 T773;

/* ET_BIT_FEATURE */
typedef struct S774 T774;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S775 T775;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S777 T777;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S778 T778;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S779 T779;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S780 T780;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S781 T781;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S782 T782;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S783 T783;

/* SPECIAL [ET_PARENT] */
typedef struct S784 T784;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S785 T785;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S786 T786;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S787 T787;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S788 T788;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S789 T789;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S790 T790;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S791 T791;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S793 T793;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S794 T794;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S795 T795;

/* ET_RENAME */
typedef struct S796 T796;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S797 T797;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S798 T798;

/* SPECIAL [ET_EXPORT] */
typedef struct S800 T800;

/* SPECIAL [ET_CLIENTS] */
typedef struct S801 T801;

/* ET_ALL_EXPORT */
typedef struct S802 T802;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S803 T803;

/* ET_FEATURE_EXPORT */
typedef struct S804 T804;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S805 T805;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S807 T807;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S808 T808;

/* SPECIAL [ET_CLIENT_ITEM] */
typedef struct S809 T809;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
typedef struct S810 T810;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S811 T811;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S812 T812;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S813 T813;

/* ET_CREATOR */
typedef struct S814 T814;

/* SPECIAL [ET_CREATOR] */
typedef struct S815 T815;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S816 T816;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S817 T817;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S819 T819;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S821 T821;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S822 T822;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S824 T824;

/* ET_CONVERT_FUNCTION */
typedef struct S825 T825;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S826 T826;

/* ET_CONVERT_PROCEDURE */
typedef struct S827 T827;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S828 T828;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S830 T830;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S831 T831;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S832 T832;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S833 T833;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S834 T834;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S837 T837;

/* ET_PRECONDITIONS */
typedef struct S838 T838;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S839 T839;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S840 T840;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S841 T841;

/* SPECIAL [ET_COMPOUND] */
typedef struct S842 T842;

/* ET_POSTCONDITIONS */
typedef struct S843 T843;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S844 T844;

/* ET_DO_FUNCTION */
typedef struct S845 T845;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S846 T846;

/* ET_ONCE_FUNCTION */
typedef struct S847 T847;

/* ET_DEFERRED_FUNCTION */
typedef struct S848 T848;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S851 T851;

/* ET_ONCE_PROCEDURE */
typedef struct S852 T852;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S853 T853;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S854 T854;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S855 T855;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S856 T856;

/* ET_PREFIX_NAME */
typedef struct S857 T857;

/* ET_PREFIX_FREE_NAME */
typedef struct S858 T858;

/* ET_INFIX_NAME */
typedef struct S859 T859;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S860 T860;

/* ET_ALIAS_NAME */
typedef struct S861 T861;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S862 T862;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S863 T863;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S864 T864;

/* ET_ALIAS_FREE_NAME */
typedef struct S865 T865;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S866 T866;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S868 T868;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S869 T869;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S871 T871;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S872 T872;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S873 T873;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S875 T875;

/* ET_LOCAL_VARIABLE */
typedef struct S876 T876;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S877 T877;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S879 T879;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S880 T880;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S881 T881;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S882 T882;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S883 T883;

/* ET_LOOP_INVARIANTS */
typedef struct S884 T884;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S885 T885;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S886 T886;

/* ET_VARIANT */
typedef struct S887 T887;

/* SPECIAL [ET_VARIANT] */
typedef struct S888 T888;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S889 T889;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S890 T890;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S891 T891;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S892 T892;

/* ET_LIKE_FEATURE */
typedef struct S894 T894;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S895 T895;

/* ET_LIKE_CURRENT */
typedef struct S896 T896;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S898 T898;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S899 T899;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S900 T900;

/* ET_BRACKET_EXPRESSION */
typedef struct S901 T901;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S902 T902;

/* SPECIAL [ET_WRITABLE] */
typedef struct S903 T903;

/* ET_ASSIGNMENT */
typedef struct S904 T904;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S905 T905;

/* ET_IF_INSTRUCTION */
typedef struct S906 T906;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S907 T907;

/* ET_INSPECT_INSTRUCTION */
typedef struct S908 T908;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S909 T909;

/* ET_LOOP_INSTRUCTION */
typedef struct S911 T911;

/* ET_DEBUG_INSTRUCTION */
typedef struct S912 T912;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S913 T913;

/* ET_CHECK_INSTRUCTION */
typedef struct S914 T914;

/* ET_BANG_INSTRUCTION */
typedef struct S916 T916;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S917 T917;

/* ET_QUALIFIED_CALL */
typedef struct S918 T918;

/* ET_CREATE_INSTRUCTION */
typedef struct S920 T920;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S921 T921;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S922 T922;

/* ET_ELSEIF_PART_LIST */
typedef struct S923 T923;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S924 T924;

/* ET_ELSEIF_PART */
typedef struct S925 T925;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S926 T926;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S927 T927;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S928 T928;

/* ET_WHEN_PART_LIST */
typedef struct S929 T929;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S930 T930;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S931 T931;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S932 T932;

/* ET_WHEN_PART */
typedef struct S933 T933;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S934 T934;

/* ET_CHOICE_LIST */
typedef struct S935 T935;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S936 T936;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S937 T937;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S938 T938;

/* SPECIAL [ET_CHOICE] */
typedef struct S940 T940;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S942 T942;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S943 T943;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S945 T945;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S946 T946;

/* ET_CHOICE_RANGE */
typedef struct S947 T947;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S948 T948;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S949 T949;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S950 T950;

/* ET_MANIFEST_STRING_LIST */
typedef struct S951 T951;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S952 T952;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S953 T953;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S954 T954;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S956 T956;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S957 T957;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S958 T958;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S960 T960;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S961 T961;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S962 T962;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S963 T963;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S964 T964;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S965 T965;

/* ET_FEATURE_ADDRESS */
typedef struct S966 T966;

/* ET_CURRENT_ADDRESS */
typedef struct S967 T967;

/* ET_RESULT_ADDRESS */
typedef struct S968 T968;

/* ET_EXPRESSION_ADDRESS */
typedef struct S969 T969;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S970 T970;

/* ET_INFIX_EXPRESSION */
typedef struct S971 T971;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S972 T972;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S973 T973;

/* ET_EQUALITY_EXPRESSION */
typedef struct S974 T974;

/* ET_PREFIX_EXPRESSION */
typedef struct S975 T975;

/* ET_OLD_EXPRESSION */
typedef struct S976 T976;

/* ET_CALL_AGENT */
typedef struct S977 T977;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S978 T978;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S979 T979;

/* ET_MANIFEST_ARRAY */
typedef struct S980 T980;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S981 T981;

/* ET_STRIP_EXPRESSION */
typedef struct S982 T982;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S983 T983;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S984 T984;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S985 T985;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S986 T986;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S987 T987;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S988 T988;

/* ET_MANIFEST_TYPE */
typedef struct S989 T989;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S990 T990;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S991 T991;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S992 T992;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S993 T993;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S994 T994;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S995 T995;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S996 T996;

/* ET_AGENT_OPEN_TARGET */
typedef struct S997 T997;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S998 T998;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S999 T999;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S1000 T1000;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S1001 T1001;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S1002 T1002;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S1003 T1003;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S1004 T1004;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1005 T1005;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1006 T1006;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1008 T1008;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1009 T1009;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1010 T1010;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S1011 T1011;

/* ET_TAGGED_ASSERTION */
typedef struct S1013 T1013;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S1014 T1014;

/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1015 T1015;

/* ET_PARENT_CHECKER1 */
typedef struct S1016 T1016;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S1017 T1017;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1018 T1018;

/* ET_FEATURE_NAME_TESTER */
typedef struct S1019 T1019;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1021 T1021;

/* ET_ALIAS_NAME_TESTER */
typedef struct S1022 T1022;

/* DS_ARRAYED_LIST [ET_CLIENT_LIST] */
typedef struct S1024 T1024;

/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
typedef struct S1025 T1025;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1026 T1026;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S1027 T1027;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S1028 T1028;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S1029 T1029;

/* ET_SIGNATURE_CHECKER */
typedef struct S1030 T1030;

/* ET_PARENT_CHECKER2 */
typedef struct S1031 T1031;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S1032 T1032;

/* ET_PRECURSOR_CHECKER */
typedef struct S1033 T1033;

/* ET_PARENT_CHECKER3 */
typedef struct S1034 T1034;

/* ET_BRACED_TYPE_LIST */
typedef struct S1036 T1036;

/* ET_CLASS_TYPE_CHECKER1 */
typedef struct S1037 T1037;

/* ET_CLASS_TYPE_CHECKER2 */
typedef struct S1038 T1038;

/* ET_CLASS_TYPE_CHECKER3 */
typedef struct S1039 T1039;

/* DS_ARRAYED_STACK [YY_BUFFER] */
typedef struct S1040 T1040;

/* UT_SYNTAX_ERROR */
typedef struct S1041 T1041;

/* UT_TOO_MANY_INCLUDES_ERROR */
typedef struct S1042 T1042;

/* TO_SPECIAL [AP_OPTION] */
typedef struct S1043 T1043;

/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S1044 T1044;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S1045 T1045;

/* DS_LINKED_QUEUE [STRING_8] */
typedef struct S1047 T1047;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
typedef struct S1048 T1048;

/* TO_SPECIAL [ET_XACE_LIBRARY_CONFIG] */
typedef struct S1049 T1049;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S1050 T1050;

/* DS_LINKED_STACK [INTEGER_32] */
typedef struct S1051 T1051;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S1052 T1052;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S1053 T1053;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S1054 T1054;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1055 T1055;

/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1056 T1056;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1058 T1058;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1060 T1060;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S1061 T1061;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S1062 T1062;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1063 T1063;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1064 T1064;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1065 T1065;

/* DS_BILINKED_LIST_CURSOR [STRING_8] */
typedef struct S1066 T1066;

/* DS_BILINKABLE [STRING_8] */
typedef struct S1067 T1067;

/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S1068 T1068;

/* TO_SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S1069 T1069;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S1070 T1070;

/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S1071 T1071;

/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1072 T1072;

/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S1073 T1073;

/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S1074 T1074;

/* TO_SPECIAL [DS_BILINKED_LIST [STRING_8]] */
typedef struct S1075 T1075;

/* TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S1076 T1076;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S1078 T1078;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S1079 T1079;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S1080 T1080;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S1081 T1081;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S1082 T1082;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S1083 T1083;

/* TO_SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S1084 T1084;

/* EXCEPTIONS */
typedef struct S1085 T1085;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1087 T1087;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S1088 T1088;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
typedef struct S1089 T1089;

/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1090 T1090;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
typedef struct S1091 T1091;

/* TO_SPECIAL [ET_AGENT] */
typedef struct S1092 T1092;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1093 T1093;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S1094 T1094;

/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1095 T1095;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S1096 T1096;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1097 T1097;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S1098 T1098;

/* TO_SPECIAL [ET_INLINE_CONSTANT] */
typedef struct S1099 T1099;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
typedef struct S1100 T1100;

/* TO_SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S1101 T1101;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8] */
typedef struct S1102 T1102;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1103 T1103;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1105 T1105;

/* SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1106 T1106;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
typedef struct S1107 T1107;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
typedef struct S1108 T1108;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S1110 T1110;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S1111 T1111;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1112 T1112;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S1113 T1113;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1114 T1114;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1115 T1115;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S1116 T1116;

/* UC_UNICODE_ROUTINES */
typedef struct S1117 T1117;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1118 T1118;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S1120 T1120;

/* KL_DIRECTORY */
typedef struct S1122 T1122;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1123 T1123;

/* KL_ARRAY_ROUTINES [INTEGER_32] */
typedef struct S1124 T1124;

/* DS_ARRAYED_LIST [ET_CLUSTER] */
typedef struct S1125 T1125;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S1126 T1126;

/* KL_STDIN_FILE */
typedef struct S1127 T1127;

/* ET_FILE_POSITION */
typedef struct S1128 T1128;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S1133 T1133;

/* ARRAY [ET_TYPE] */
typedef struct S1135 T1135;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1136 T1136;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1141 T1141;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1142 T1142;

/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1143 T1143;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S1144 T1144;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S1145 T1145;

/* DS_LINKED_QUEUE [CHARACTER_8] */
typedef struct S1147 T1147;

/* UC_UTF16_ROUTINES */
typedef struct S1148 T1148;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1149 T1149;

/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1150 T1150;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1151 T1151;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1152 T1152;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1153 T1153;

/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1154 T1154;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
typedef struct S1155 T1155;

/* SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1156 T1156;

/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
typedef struct S1157 T1157;

/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
typedef struct S1158 T1158;

/* DS_HASH_SET_CURSOR [ET_LIBRARY] */
typedef struct S1159 T1159;

/* KL_SPECIAL_ROUTINES [ET_LIBRARY] */
typedef struct S1160 T1160;

/* SPECIAL [ET_LIBRARY] */
typedef struct S1161 T1161;

/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY] */
typedef struct S1162 T1162;

/* DS_ARRAYED_LIST_CURSOR [ET_LIBRARY] */
typedef struct S1163 T1163;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1164 T1164;

/* DS_HASH_SET_CURSOR [ET_PROCEDURE] */
typedef struct S1165 T1165;

/* DS_HASH_SET_CURSOR [ET_QUERY] */
typedef struct S1166 T1166;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1167 T1167;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1168 T1168;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1169 T1169;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S1170 T1170;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S1171 T1171;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S1172 T1172;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S1173 T1173;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S1174 T1174;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S1175 T1175;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S1176 T1176;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S1177 T1177;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S1178 T1178;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S1179 T1179;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S1180 T1180;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S1181 T1181;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S1182 T1182;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S1183 T1183;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S1184 T1184;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S1185 T1185;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S1186 T1186;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S1187 T1187;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S1188 T1188;

/* TO_SPECIAL [ET_VOID] */
typedef struct S1189 T1189;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S1190 T1190;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S1191 T1191;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S1192 T1192;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S1193 T1193;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S1194 T1194;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S1195 T1195;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S1196 T1196;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S1197 T1197;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S1198 T1198;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1199 T1199;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S1200 T1200;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S1201 T1201;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S1202 T1202;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1203 T1203;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1204 T1204;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S1205 T1205;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S1206 T1206;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S1207 T1207;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S1208 T1208;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S1209 T1209;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S1210 T1210;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S1211 T1211;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S1212 T1212;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S1213 T1213;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S1214 T1214;

/* TO_SPECIAL [ET_CLIENT_ITEM] */
typedef struct S1215 T1215;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1216 T1216;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1217 T1217;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S1218 T1218;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S1219 T1219;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S1220 T1220;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1221 T1221;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S1222 T1222;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S1223 T1223;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S1224 T1224;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S1225 T1225;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1226 T1226;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S1227 T1227;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S1228 T1228;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S1229 T1229;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S1230 T1230;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S1231 T1231;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1232 T1232;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S1233 T1233;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1234 T1234;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S1235 T1235;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S1236 T1236;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1237 T1237;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S1238 T1238;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S1239 T1239;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S1240 T1240;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S1241 T1241;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S1242 T1242;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S1243 T1243;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1244 T1244;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S1245 T1245;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S1246 T1246;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S1247 T1247;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S1248 T1248;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S1249 T1249;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S1250 T1250;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S1251 T1251;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S1252 T1252;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S1253 T1253;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S1254 T1254;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1255 T1255;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S1256 T1256;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S1257 T1257;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S1258 T1258;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S1259 T1259;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1260 T1260;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S1261 T1261;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1262 T1262;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S1263 T1263;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S1264 T1264;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S1265 T1265;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1266 T1266;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S1267 T1267;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S1268 T1268;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S1269 T1269;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S1270 T1270;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S1271 T1271;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1272 T1272;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1273 T1273;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1274 T1274;

/* DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
typedef struct S1275 T1275;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1277 T1277;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1279 T1279;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1280 T1280;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1282 T1282;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1284 T1284;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1285 T1285;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1287 T1287;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1288 T1288;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1290 T1290;

/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
typedef struct S1291 T1291;

/* SPECIAL [ET_CLIENT_LIST] */
typedef struct S1292 T1292;

/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
typedef struct S1293 T1293;

/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
typedef struct S1295 T1295;

/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1297 T1297;

/* KL_SPECIAL_ROUTINES [ET_CLIENT] */
typedef struct S1298 T1298;

/* SPECIAL [ET_CLIENT] */
typedef struct S1299 T1299;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1300 T1300;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1301 T1301;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1302 T1302;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1303 T1303;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1304 T1304;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1305 T1305;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1307 T1307;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
typedef struct S1308 T1308;

/* ET_REDECLARED_FEATURE */
typedef struct S1309 T1309;

/* SPECIAL [YY_BUFFER] */
typedef struct S1310 T1310;

/* KL_SPECIAL_ROUTINES [YY_BUFFER] */
typedef struct S1311 T1311;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1313 T1313;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1314 T1314;

/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
typedef struct S1316 T1316;

/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1317 T1317;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1318 T1318;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1319 T1319;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
typedef struct S1328 T1328;

/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
typedef struct S1329 T1329;

/* SPECIAL [NATURAL_8] */
typedef struct S1330 T1330;

/* STRING_SEARCHER */
typedef struct S1331 T1331;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S1332 T1332;

/* ET_CLUSTER_ERROR */
typedef struct S1333 T1333;

/* ET_SYNTAX_ERROR */
typedef struct S1334 T1334;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S1336 T1336;

/* XM_COMMENT */
typedef struct S1337 T1337;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1338 T1338;

/* XM_CHARACTER_DATA */
typedef struct S1339 T1339;

/* XM_NAMESPACE */
typedef struct S1340 T1340;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1341 T1341;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S1342 T1342;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S1343 T1343;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S1344 T1344;

/* ET_KEYWORD_EXPRESSION */
typedef struct S1345 T1345;

/* ET_FEATURE_LIST */
typedef struct S1349 T1349;

/* ET_PARENT_FEATURE */
typedef struct S1351 T1351;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1352 T1352;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1353 T1353;

/* ET_INHERITED_FEATURE */
typedef struct S1354 T1354;

/* ET_FEATURE_IDS */
typedef struct S1356 T1356;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1362 T1362;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1364 T1364;

/* ET_COMPRESSED_POSITION */
typedef struct S1365 T1365;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1366 T1366;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1376 T1376;

/* ET_REPLICATED_FEATURE */
typedef struct S1380 T1380;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1381 T1381;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1382 T1382;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1384 T1384;

/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
typedef struct S1385 T1385;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1386 T1386;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1387 T1387;

/* SPECIAL [ARRAY [INTEGER_32]] */
typedef struct S1388 T1388;

/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
typedef struct S1389 T1389;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1391 T1391;

/* KL_SPECIAL_ROUTINES [ET_CLUSTER] */
typedef struct S1392 T1392;

/* SPECIAL [ET_CLUSTER] */
typedef struct S1393 T1393;

/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
typedef struct S1394 T1394;

/* SPECIAL [NATURAL_64] */
typedef struct S1395 T1395;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S1396 T1396;

/* DS_LINKABLE [CHARACTER_8] */
typedef struct S1397 T1397;

/* TO_SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1398 T1398;

/* TO_SPECIAL [ET_ADAPTED_LIBRARY] */
typedef struct S1400 T1400;

/* TO_SPECIAL [ET_LIBRARY] */
typedef struct S1401 T1401;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY] */
typedef struct S1403 T1403;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY] */
typedef struct S1405 T1405;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1406 T1406;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
typedef struct S1408 T1408;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1410 T1410;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS] */
typedef struct S1411 T1411;

/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1412 T1412;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1413 T1413;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1414 T1414;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1415 T1415;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1416 T1416;

/* TO_SPECIAL [ET_CLIENT_LIST] */
typedef struct S1417 T1417;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
typedef struct S1418 T1418;

/* TO_SPECIAL [ET_CLIENT] */
typedef struct S1419 T1419;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1420 T1420;

/* SPECIAL [ET_RENAME] */
typedef struct S1421 T1421;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1423 T1423;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1425 T1425;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1426 T1426;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1427 T1427;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1428 T1428;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1430 T1430;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1431 T1431;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1433 T1433;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1435 T1435;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1436 T1436;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1437 T1437;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1438 T1438;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1439 T1439;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1441 T1441;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1443 T1443;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1444 T1444;

/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1446 T1446;

/* TO_SPECIAL [YY_BUFFER] */
typedef struct S1447 T1447;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
typedef struct S1448 T1448;

/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
typedef struct S1451 T1451;

/* AP_OPTION_COMPARATOR */
typedef struct S1452 T1452;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1453 T1453;

/* STD_FILES */
typedef struct S1459 T1459;

/* TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
typedef struct S1461 T1461;

/* PLATFORM */
typedef struct S1462 T1462;

/* DS_LINKABLE [XM_NODE] */
typedef struct S1464 T1464;

/* XM_NODE_TYPER */
typedef struct S1465 T1465;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1471 T1471;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1472 T1472;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1475 T1475;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1478 T1478;

/* KL_STRING_INPUT_STREAM */
typedef struct S1481 T1481;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1491 T1491;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1492 T1492;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1493 T1493;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1494 T1494;

/* SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1495 T1495;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1496 T1496;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1497 T1497;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1498 T1498;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1499 T1499;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1501 T1501;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1502 T1502;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1503 T1503;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1504 T1504;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1505 T1505;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1506 T1506;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1507 T1507;

/* SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1508 T1508;

/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
typedef struct S1509 T1509;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
typedef struct S1510 T1510;

/* TO_SPECIAL [ET_CLUSTER] */
typedef struct S1511 T1511;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY] */
typedef struct S1512 T1512;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
typedef struct S1513 T1513;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1516 T1516;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1518 T1518;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1522 T1522;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1523 T1523;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1524 T1524;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
typedef struct S1525 T1525;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1526 T1526;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1527 T1527;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1528 T1528;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1529 T1529;

/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1531 T1531;

/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1533 T1533;

/* ET_CONVERT_EXPRESSION */
typedef struct S1539 T1539;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1540 T1540;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1544 T1544;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1548 T1548;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1549 T1549;

/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1555 T1555;

/* TO_SPECIAL [XM_NAMESPACE] */
typedef struct S1556 T1556;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
typedef struct S1557 T1557;

/* TO_SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1558 T1558;

/* TO_SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1559 T1559;

/* TO_SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1560 T1560;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
typedef struct S1563 T1563;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
typedef struct S1568 T1568;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1569 T1569;

/* CONSOLE */
typedef struct S1575 T1575;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1576 T1576;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1577 T1577;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1581 T1581;

/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1582 T1582;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S74 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER_8]] */
struct S610 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1364 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a3; /* internal_hash_code */
};

/* Struct for type GEC */
struct S21 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ace_filename */
	T0* a3; /* last_system */
	T0* a4; /* finalize_flag */
	T0* a5; /* catcall_option */
	T0* a6; /* c_compile_option */
	T0* a7; /* split_option */
	T0* a8; /* split_size_option */
	T0* a9; /* gc_option */
	T0* a10; /* silent_flag */
	T0* a11; /* verbose_flag */
	T0* a12; /* version_flag */
	T6 a13; /* split_size */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S22 {
	int id;
	T6 a1; /* mode */
	T0* a2; /* name */
	T0* a3; /* string_name */
	T0* a4; /* character_buffer */
	T1 a5; /* end_of_file */
	T14 a6; /* file_pointer */
	T1 a7; /* descriptor_available */
	T0* a8; /* last_string */
	T2 a9; /* last_character */
};

/* Struct for type KL_ARGUMENTS */
struct S23 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type UT_ERROR_HANDLER */
struct S24 {
	int id;
	T0* a1; /* info_file */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
};

/* Struct for type ET_SYSTEM */
struct S25 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* current_system */
	T0* a4; /* external_include_pathnames */
	T0* a5; /* external_object_pathnames */
	T0* a6; /* external_library_pathnames */
	T1 a7; /* console_application_mode */
	T1 a8; /* unknown_builtin_reported */
	T0* a9; /* null_processor */
	T0* a10; /* eiffel_preparser */
	T0* a11; /* eiffel_parser */
	T0* a12; /* provider_checker */
	T0* a13; /* ancestor_builder */
	T0* a14; /* feature_flattener */
	T0* a15; /* interface_checker */
	T0* a16; /* implementation_checker */
	T0* a17; /* flat_implementation_checker */
	T0* a18; /* libraries */
	T0* a19; /* clusters */
	T0* a20; /* classes */
	T0* a21; /* mapped_classes */
	T1 a22; /* preparse_shallow_mode */
	T1 a23; /* preparse_single_mode */
	T1 a24; /* preparse_multiple_mode */
	T0* a25; /* array_class */
	T0* a26; /* arguments_class */
	T0* a27; /* bit_class */
	T0* a28; /* boolean_class */
	T0* a29; /* boolean_ref_class */
	T0* a30; /* character_8_ref_class */
	T0* a31; /* character_32_ref_class */
	T0* a32; /* disposable_class */
	T0* a33; /* function_class */
	T0* a34; /* identified_routines_class */
	T0* a35; /* integer_8_ref_class */
	T0* a36; /* integer_16_ref_class */
	T0* a37; /* integer_32_ref_class */
	T0* a38; /* integer_64_ref_class */
	T0* a39; /* native_array_class */
	T0* a40; /* natural_8_ref_class */
	T0* a41; /* natural_16_ref_class */
	T0* a42; /* natural_32_ref_class */
	T0* a43; /* natural_64_ref_class */
	T0* a44; /* platform_class */
	T0* a45; /* pointer_class */
	T0* a46; /* pointer_ref_class */
	T0* a47; /* predicate_class */
	T0* a48; /* procedure_class */
	T0* a49; /* real_32_ref_class */
	T0* a50; /* real_64_ref_class */
	T0* a51; /* routine_class */
	T0* a52; /* special_class */
	T0* a53; /* system_string_class */
	T0* a54; /* tuple_class */
	T0* a55; /* tuple_type */
	T0* a56; /* type_class */
	T0* a57; /* typed_pointer_class */
	T0* a58; /* character_class */
	T0* a59; /* character_8_class */
	T0* a60; /* character_type */
	T0* a61; /* character_ref_class */
	T0* a62; /* double_class */
	T0* a63; /* real_64_class */
	T0* a64; /* double_type */
	T0* a65; /* double_ref_class */
	T0* a66; /* integer_class */
	T0* a67; /* integer_32_class */
	T0* a68; /* integer_type */
	T0* a69; /* integer_ref_class */
	T0* a70; /* natural_class */
	T0* a71; /* natural_32_class */
	T0* a72; /* natural_type */
	T0* a73; /* natural_ref_class */
	T0* a74; /* real_class */
	T0* a75; /* real_32_class */
	T0* a76; /* real_type */
	T0* a77; /* real_ref_class */
	T0* a78; /* string_class */
	T0* a79; /* string_8_class */
	T0* a80; /* string_type */
	T0* a81; /* wide_character_class */
	T0* a82; /* character_32_class */
	T0* a83; /* wide_character_ref_class */
	T1 a84; /* use_attribute_keyword */
	T1 a85; /* use_reference_keyword */
	T6 a86; /* class_count */
	T0* a87; /* any_class */
	T0* a88; /* any_type */
	T0* a89; /* any_parent */
	T0* a90; /* any_parents */
	T0* a91; /* any_clients */
	T0* a92; /* array_any_type */
	T0* a93; /* character_8_convert_feature */
	T0* a94; /* character_32_convert_feature */
	T0* a95; /* integer_8_class */
	T0* a96; /* integer_8_convert_feature */
	T0* a97; /* integer_16_class */
	T0* a98; /* integer_16_convert_feature */
	T0* a99; /* integer_32_convert_feature */
	T0* a100; /* integer_64_class */
	T0* a101; /* integer_64_convert_feature */
	T0* a102; /* natural_8_class */
	T0* a103; /* natural_8_convert_feature */
	T0* a104; /* natural_16_class */
	T0* a105; /* natural_16_convert_feature */
	T0* a106; /* natural_32_convert_feature */
	T0* a107; /* natural_64_class */
	T0* a108; /* natural_64_convert_feature */
	T0* a109; /* none_class */
	T0* a110; /* none_type */
	T0* a111; /* real_32_convert_feature */
	T0* a112; /* real_64_convert_feature */
	T0* a113; /* string_8_convert_feature */
	T0* a114; /* string_32_class */
	T0* a115; /* string_32_convert_feature */
	T0* a116; /* system_object_class */
	T0* a117; /* system_object_parents */
	T6 a118; /* dispose_seed */
	T0* a119; /* ise_version */
	T1 a120; /* providers_enabled */
	T1 a121; /* preparse_readonly_mode */
	T1 a122; /* preparse_override_mode */
	T1 a123; /* cluster_dependence_enabled */
	T0* a124; /* internal_dotnet_assembly_consumer */
	T6 a125; /* default_create_seed */
	T6 a126; /* copy_seed */
	T6 a127; /* routine_call_seed */
	T6 a128; /* function_item_seed */
	T6 a129; /* feature_count */
	T6 a130; /* inline_constant_count */
	T1 a131; /* classes_modified */
	T1 a132; /* classes_added */
	T0* a133; /* dotnet_assemblies */
};

/* Struct for type KL_STRING_ROUTINES */
struct S26 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S28 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T1 a3; /* benchmark_shown */
	T0* a4; /* error_file */
	T0* a5; /* warning_file */
	T1 a6; /* is_ise */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_internal_error */
	T1 a9; /* is_se */
	T1 a10; /* is_ve */
	T1 a11; /* is_ge */
	T1 a12; /* is_pedantic */
	T1 a13; /* is_verbose */
};

/* Struct for type KL_EXCEPTIONS */
struct S29 {
	int id;
};

/* Struct for type AP_PARSER */
struct S30 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a5; /* application_description */
	T0* a6; /* parameters_description */
	T0* a7; /* error_handler */
	T0* a8; /* argument_list */
	T0* a9; /* current_options */
	T1 a10; /* is_first_option */
	T0* a11; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S31 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type AP_ERROR */
struct S32 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a3; /* code */
};

/* Struct for type AP_FLAG */
struct S33 {
	int id;
	T6 a1; /* occurrences */
	T0* a2; /* description */
	T0* a3; /* long_form */
	T2 a4; /* short_form */
	T1 a5; /* has_short_form */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* is_hidden */
};

/* Struct for type AP_ENUMERATION_OPTION */
struct S35 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* description */
	T0* a3; /* possible_values */
	T0* a4; /* parameter_description */
	T1 a5; /* needs_parameter */
	T0* a6; /* long_form */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
	T1 a9; /* has_short_form */
	T2 a10; /* short_form */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_BOOLEAN_OPTION */
struct S36 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* description */
	T0* a3; /* parameter_description */
	T0* a4; /* long_form */
	T1 a5; /* is_mandatory */
	T6 a6; /* maximum_occurrences */
	T1 a7; /* has_short_form */
	T2 a8; /* short_form */
	T1 a9; /* is_hidden */
};

/* Struct for type AP_INTEGER_OPTION */
struct S37 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* long_form */
	T2 a3; /* short_form */
	T0* a4; /* description */
	T0* a5; /* parameter_description */
	T1 a6; /* is_mandatory */
	T6 a7; /* maximum_occurrences */
	T1 a8; /* has_short_form */
	T1 a9; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S41 {
	int id;
	T0* a1; /* description */
	T2 a2; /* short_form */
	T1 a3; /* has_short_form */
	T0* a4; /* long_form */
	T6 a5; /* occurrences */
	T1 a6; /* is_hidden */
	T1 a7; /* is_mandatory */
	T6 a8; /* maximum_occurrences */
};

/* Struct for type ET_XACE_SYSTEM_PARSER */
struct S43 {
	int id;
	T0* a1; /* last_system */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a5; /* xml_validator */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* parsed_libraries */
	T0* a8; /* error_handler */
	T0* a9; /* library_parser */
	T0* a10; /* eiffel_ast_factory */
	T0* a11; /* eiffel_error_handler */
	T1 a12; /* is_shallow */
	T1 a13; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S44 {
	int id;
	T6 a1; /* error_count */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING_8, STRING_8] */
struct S45 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T6 a9; /* found_position */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* key_storage */
	T6 a16; /* free_slot */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ST_SPLITTER */
struct S46 {
	int id;
	T1 a1; /* has_escape_character */
	T2 a2; /* escape_character */
	T0* a3; /* separator_codes */
	T0* a4; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S48 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING_8] */
struct S49 {
	int id;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S50 {
	int id;
};

/* Struct for type ET_XACE_SYSTEM */
struct S53 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* classes */
	T0* a3; /* root_class */
	T0* a4; /* none_class */
	T0* a5; /* any_class */
	T0* a6; /* root_creation */
	T0* a7; /* eiffel_parser */
	T6 a8; /* default_create_seed */
	T0* a9; /* boolean_class */
	T0* a10; /* character_8_class */
	T0* a11; /* character_32_class */
	T0* a12; /* integer_8_class */
	T0* a13; /* integer_16_class */
	T0* a14; /* integer_32_class */
	T0* a15; /* integer_64_class */
	T0* a16; /* natural_8_class */
	T0* a17; /* natural_16_class */
	T0* a18; /* natural_32_class */
	T0* a19; /* natural_64_class */
	T0* a20; /* real_32_class */
	T0* a21; /* real_64_class */
	T0* a22; /* pointer_class */
	T0* a23; /* special_class */
	T0* a24; /* string_8_class */
	T0* a25; /* string_32_class */
	T0* a26; /* array_class */
	T0* a27; /* interface_checker */
	T0* a28; /* typed_pointer_class */
	T0* a29; /* ise_version */
	T0* a30; /* routine_class */
	T0* a31; /* tuple_type */
	T0* a32; /* system_name */
	T0* a33; /* external_include_pathnames */
	T0* a34; /* external_library_pathnames */
	T0* a35; /* options */
	T0* a36; /* ast_factory */
	T0* a37; /* current_system */
	T0* a38; /* external_object_pathnames */
	T1 a39; /* console_application_mode */
	T1 a40; /* unknown_builtin_reported */
	T0* a41; /* null_processor */
	T0* a42; /* eiffel_preparser */
	T0* a43; /* provider_checker */
	T0* a44; /* ancestor_builder */
	T0* a45; /* feature_flattener */
	T0* a46; /* implementation_checker */
	T0* a47; /* flat_implementation_checker */
	T0* a48; /* ecma_version */
	T0* a49; /* libraries */
	T6 a50; /* class_count */
	T6 a51; /* feature_count */
	T0* a52; /* root_class_name */
	T0* a53; /* mounted_libraries */
	T0* a54; /* clusters */
	T1 a55; /* exception_trace_mode */
	T1 a56; /* trace_mode */
	T1 a57; /* use_boehm_gc */
	T0* a58; /* creation_procedure_name */
	T0* a59; /* mapped_classes */
	T1 a60; /* preparse_shallow_mode */
	T1 a61; /* preparse_single_mode */
	T1 a62; /* preparse_multiple_mode */
	T0* a63; /* arguments_class */
	T0* a64; /* bit_class */
	T0* a65; /* boolean_ref_class */
	T0* a66; /* character_8_ref_class */
	T0* a67; /* character_32_ref_class */
	T0* a68; /* disposable_class */
	T0* a69; /* function_class */
	T0* a70; /* identified_routines_class */
	T0* a71; /* integer_8_ref_class */
	T0* a72; /* integer_16_ref_class */
	T0* a73; /* integer_32_ref_class */
	T0* a74; /* integer_64_ref_class */
	T0* a75; /* native_array_class */
	T0* a76; /* natural_8_ref_class */
	T0* a77; /* natural_16_ref_class */
	T0* a78; /* natural_32_ref_class */
	T0* a79; /* natural_64_ref_class */
	T0* a80; /* platform_class */
	T0* a81; /* pointer_ref_class */
	T0* a82; /* predicate_class */
	T0* a83; /* procedure_class */
	T0* a84; /* real_32_ref_class */
	T0* a85; /* real_64_ref_class */
	T0* a86; /* system_string_class */
	T0* a87; /* tuple_class */
	T0* a88; /* type_class */
	T0* a89; /* character_class */
	T0* a90; /* character_type */
	T0* a91; /* character_ref_class */
	T0* a92; /* double_class */
	T0* a93; /* double_type */
	T0* a94; /* double_ref_class */
	T0* a95; /* integer_class */
	T0* a96; /* integer_type */
	T0* a97; /* integer_ref_class */
	T0* a98; /* natural_class */
	T0* a99; /* natural_type */
	T0* a100; /* natural_ref_class */
	T0* a101; /* real_class */
	T0* a102; /* real_type */
	T0* a103; /* real_ref_class */
	T0* a104; /* string_class */
	T0* a105; /* string_type */
	T0* a106; /* wide_character_class */
	T0* a107; /* wide_character_ref_class */
	T1 a108; /* use_attribute_keyword */
	T1 a109; /* use_reference_keyword */
	T1 a110; /* classes_modified */
	T1 a111; /* classes_added */
	T1 a112; /* is_preparsed */
	T1 a113; /* flat_mode */
	T1 a114; /* flat_dbc_mode */
	T1 a115; /* suppliers_enabled */
	T0* a116; /* any_type */
	T0* a117; /* any_parent */
	T0* a118; /* any_parents */
	T0* a119; /* any_clients */
	T0* a120; /* array_any_type */
	T0* a121; /* character_8_convert_feature */
	T0* a122; /* character_32_convert_feature */
	T0* a123; /* integer_8_convert_feature */
	T0* a124; /* integer_16_convert_feature */
	T0* a125; /* integer_32_convert_feature */
	T0* a126; /* integer_64_convert_feature */
	T0* a127; /* natural_8_convert_feature */
	T0* a128; /* natural_16_convert_feature */
	T0* a129; /* natural_32_convert_feature */
	T0* a130; /* natural_64_convert_feature */
	T0* a131; /* none_type */
	T0* a132; /* real_32_convert_feature */
	T0* a133; /* real_64_convert_feature */
	T0* a134; /* string_8_convert_feature */
	T0* a135; /* string_32_convert_feature */
	T0* a136; /* system_object_class */
	T0* a137; /* system_object_parents */
	T0* a138; /* dotnet_assemblies */
	T1 a139; /* preparse_override_mode */
	T1 a140; /* preparse_readonly_mode */
	T6 a141; /* routine_call_seed */
	T6 a142; /* function_item_seed */
	T6 a143; /* dispose_seed */
	T1 a144; /* providers_enabled */
	T1 a145; /* cluster_dependence_enabled */
	T0* a146; /* internal_dotnet_assembly_consumer */
	T6 a147; /* copy_seed */
	T6 a148; /* inline_constant_count */
};

/* Struct for type ET_LACE_PARSER */
struct S54 {
	int id;
	T0* a1; /* last_system */
	T6 a2; /* yy_parsing_status */
	T0* a3; /* named_clusters */
	T0* a4; /* override_cluster_names */
	T0* a5; /* external_include_pathnames */
	T0* a6; /* external_object_pathnames */
	T0* a7; /* metadata_cache_path_value */
	T0* a8; /* msil_clr_version_value */
	T1 a9; /* console_application_value */
	T1 a10; /* exception_trace_value */
	T1 a11; /* trace_value */
	T0* a12; /* ast_factory */
	T6 a13; /* eif_lineno */
	T0* a14; /* eif_buffer */
	T0* a15; /* input_buffer */
	T6 a16; /* yy_end */
	T6 a17; /* yy_position */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T0* a27; /* yyr1 */
	T0* a28; /* yyss */
	T6 a29; /* yyssp */
	T0* a30; /* yypgoto */
	T0* a31; /* yycheck */
	T0* a32; /* yytable */
	T0* a33; /* yydefgoto */
	T6 a34; /* error_count */
	T1 a35; /* yy_lookahead_needed */
	T6 a36; /* yyerrstatus */
	T0* a37; /* yypact */
	T6 a38; /* last_token */
	T0* a39; /* yytranslate */
	T0* a40; /* yydefact */
	T0* a41; /* filename */
	T0* a42; /* error_handler */
	T6 a43; /* yy_start_state */
	T6 a44; /* line */
	T6 a45; /* column */
	T6 a46; /* position */
	T1 a47; /* yy_more_flag */
	T6 a48; /* yy_more_len */
	T6 a49; /* yy_last_accepting_state */
	T6 a50; /* yy_last_accepting_cpos */
	T1 a51; /* yy_rejected */
	T6 a52; /* yy_state_count */
	T6 a53; /* yy_full_match */
	T6 a54; /* yy_lp */
	T6 a55; /* yy_looking_for_trail_begin */
	T6 a56; /* yy_full_lp */
	T6 a57; /* yy_full_state */
	T6 a58; /* yy_start */
	T6 a59; /* yyvsp1 */
	T6 a60; /* yyvsp2 */
	T6 a61; /* yyvsp3 */
	T6 a62; /* yyvsp4 */
	T6 a63; /* yyvsp5 */
	T6 a64; /* yyvsp6 */
	T6 a65; /* yyvsp7 */
	T0* a66; /* yy_state_stack */
	T0* a67; /* yy_ec */
	T0* a68; /* yy_content_area */
	T0* a69; /* yy_content */
	T0* a70; /* yy_accept */
	T0* a71; /* yy_chk */
	T0* a72; /* yy_base */
	T0* a73; /* yy_def */
	T0* a74; /* yy_meta */
	T0* a75; /* yy_nxt */
	T0* a76; /* yy_acclist */
	T0* a77; /* yytypes2 */
	T6 a78; /* yyvsc1 */
	T0* a79; /* yyvs1 */
	T0* a80; /* yyspecial_routines1 */
	T0* a81; /* last_any_value */
	T6 a82; /* yyvsc2 */
	T0* a83; /* yyvs2 */
	T0* a84; /* yyspecial_routines2 */
	T0* a85; /* last_et_identifier_value */
	T0* a86; /* yyvs4 */
	T0* a87; /* yyvs7 */
	T6 a88; /* yyvsc4 */
	T0* a89; /* yyspecial_routines4 */
	T0* a90; /* yyvs3 */
	T0* a91; /* yyvs5 */
	T6 a92; /* yyvsc3 */
	T0* a93; /* yyspecial_routines3 */
	T6 a94; /* yyvsc5 */
	T0* a95; /* yyspecial_routines5 */
	T6 a96; /* yyvsc7 */
	T0* a97; /* yyspecial_routines7 */
	T0* a98; /* yyvs6 */
	T6 a99; /* yyvsc6 */
	T0* a100; /* yyspecial_routines6 */
	T0* a101; /* yytypes1 */
	T6 a102; /* code_ */
	T0* a103; /* str_ */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S55 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
};

/* Struct for type ET_LACE_SYSTEM */
struct S56 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* classes */
	T0* a3; /* root_class */
	T0* a4; /* none_class */
	T0* a5; /* any_class */
	T0* a6; /* root_creation */
	T0* a7; /* eiffel_parser */
	T6 a8; /* default_create_seed */
	T0* a9; /* boolean_class */
	T0* a10; /* character_8_class */
	T0* a11; /* character_32_class */
	T0* a12; /* integer_8_class */
	T0* a13; /* integer_16_class */
	T0* a14; /* integer_32_class */
	T0* a15; /* integer_64_class */
	T0* a16; /* natural_8_class */
	T0* a17; /* natural_16_class */
	T0* a18; /* natural_32_class */
	T0* a19; /* natural_64_class */
	T0* a20; /* real_32_class */
	T0* a21; /* real_64_class */
	T0* a22; /* pointer_class */
	T0* a23; /* special_class */
	T0* a24; /* string_8_class */
	T0* a25; /* string_32_class */
	T0* a26; /* array_class */
	T0* a27; /* interface_checker */
	T0* a28; /* typed_pointer_class */
	T0* a29; /* ise_version */
	T0* a30; /* routine_class */
	T0* a31; /* tuple_type */
	T0* a32; /* tuple_class */
	T0* a33; /* type_class */
	T0* a34; /* procedure_class */
	T0* a35; /* function_class */
	T0* a36; /* predicate_class */
	T1 a37; /* use_boehm_gc */
	T0* a38; /* external_include_pathnames */
	T0* a39; /* external_library_pathnames */
	T0* a40; /* external_object_pathnames */
	T6 a41; /* routine_call_seed */
	T6 a42; /* function_item_seed */
	T0* a43; /* any_type */
	T6 a44; /* dispose_seed */
	T6 a45; /* feature_count */
	T1 a46; /* trace_mode */
	T1 a47; /* exception_trace_mode */
	T1 a48; /* console_application_mode */
	T0* a49; /* system_name */
	T0* a50; /* ast_factory */
	T0* a51; /* current_system */
	T1 a52; /* unknown_builtin_reported */
	T0* a53; /* null_processor */
	T0* a54; /* eiffel_preparser */
	T0* a55; /* provider_checker */
	T0* a56; /* ancestor_builder */
	T0* a57; /* feature_flattener */
	T0* a58; /* implementation_checker */
	T0* a59; /* flat_implementation_checker */
	T0* a60; /* ecma_version */
	T0* a61; /* libraries */
	T6 a62; /* class_count */
	T0* a63; /* clusters */
	T0* a64; /* dotnet_assemblies */
	T0* a65; /* mapped_classes */
	T1 a66; /* preparse_shallow_mode */
	T1 a67; /* preparse_single_mode */
	T1 a68; /* preparse_multiple_mode */
	T0* a69; /* arguments_class */
	T0* a70; /* bit_class */
	T0* a71; /* boolean_ref_class */
	T0* a72; /* character_8_ref_class */
	T0* a73; /* character_32_ref_class */
	T0* a74; /* disposable_class */
	T0* a75; /* identified_routines_class */
	T0* a76; /* integer_8_ref_class */
	T0* a77; /* integer_16_ref_class */
	T0* a78; /* integer_32_ref_class */
	T0* a79; /* integer_64_ref_class */
	T0* a80; /* native_array_class */
	T0* a81; /* natural_8_ref_class */
	T0* a82; /* natural_16_ref_class */
	T0* a83; /* natural_32_ref_class */
	T0* a84; /* natural_64_ref_class */
	T0* a85; /* platform_class */
	T0* a86; /* pointer_ref_class */
	T0* a87; /* real_32_ref_class */
	T0* a88; /* real_64_ref_class */
	T0* a89; /* system_string_class */
	T0* a90; /* character_class */
	T0* a91; /* character_type */
	T0* a92; /* character_ref_class */
	T0* a93; /* double_class */
	T0* a94; /* double_type */
	T0* a95; /* double_ref_class */
	T0* a96; /* integer_class */
	T0* a97; /* integer_type */
	T0* a98; /* integer_ref_class */
	T0* a99; /* natural_class */
	T0* a100; /* natural_type */
	T0* a101; /* natural_ref_class */
	T0* a102; /* real_class */
	T0* a103; /* real_type */
	T0* a104; /* real_ref_class */
	T0* a105; /* string_class */
	T0* a106; /* string_type */
	T0* a107; /* wide_character_class */
	T0* a108; /* wide_character_ref_class */
	T1 a109; /* use_attribute_keyword */
	T1 a110; /* use_reference_keyword */
	T1 a111; /* classes_modified */
	T1 a112; /* classes_added */
	T1 a113; /* is_preparsed */
	T1 a114; /* flat_mode */
	T1 a115; /* flat_dbc_mode */
	T1 a116; /* suppliers_enabled */
	T0* a117; /* any_parent */
	T0* a118; /* any_parents */
	T0* a119; /* any_clients */
	T0* a120; /* array_any_type */
	T0* a121; /* character_8_convert_feature */
	T0* a122; /* character_32_convert_feature */
	T0* a123; /* integer_8_convert_feature */
	T0* a124; /* integer_16_convert_feature */
	T0* a125; /* integer_32_convert_feature */
	T0* a126; /* integer_64_convert_feature */
	T0* a127; /* natural_8_convert_feature */
	T0* a128; /* natural_16_convert_feature */
	T0* a129; /* natural_32_convert_feature */
	T0* a130; /* natural_64_convert_feature */
	T0* a131; /* none_type */
	T0* a132; /* real_32_convert_feature */
	T0* a133; /* real_64_convert_feature */
	T0* a134; /* string_8_convert_feature */
	T0* a135; /* string_32_convert_feature */
	T0* a136; /* system_object_class */
	T0* a137; /* system_object_parents */
	T1 a138; /* preparse_override_mode */
	T1 a139; /* preparse_readonly_mode */
	T1 a140; /* providers_enabled */
	T1 a141; /* cluster_dependence_enabled */
	T0* a142; /* internal_dotnet_assembly_consumer */
	T6 a143; /* copy_seed */
	T6 a144; /* inline_constant_count */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S57 {
	int id;
	T0* a1; /* error_file */
	T0* a2; /* warning_file */
	T0* a3; /* info_file */
	T1 a4; /* has_error */
	T1 a5; /* benchmark_shown */
	T1 a6; /* is_ise */
	T1 a7; /* has_eiffel_error */
	T1 a8; /* has_internal_error */
	T1 a9; /* is_se */
	T1 a10; /* is_ve */
	T1 a11; /* is_ge */
	T1 a12; /* is_pedantic */
	T1 a13; /* is_verbose */
};

/* Struct for type ET_DYNAMIC_SYSTEM */
struct S58 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* catcall_error_mode */
	T0* a3; /* current_system */
	T0* a4; /* null_dynamic_type_set_builder */
	T0* a5; /* dynamic_types */
	T1 a6; /* catcall_warning_mode */
	T0* a7; /* dynamic_type_set_builder */
	T0* a8; /* unknown_type */
	T0* a9; /* boolean_type */
	T0* a10; /* character_8_type */
	T0* a11; /* character_32_type */
	T0* a12; /* integer_8_type */
	T0* a13; /* integer_16_type */
	T0* a14; /* integer_32_type */
	T0* a15; /* integer_64_type */
	T0* a16; /* natural_8_type */
	T0* a17; /* natural_16_type */
	T0* a18; /* natural_32_type */
	T0* a19; /* natural_64_type */
	T0* a20; /* real_32_type */
	T0* a21; /* real_64_type */
	T0* a22; /* pointer_type */
	T0* a23; /* string_8_type */
	T0* a24; /* string_32_type */
	T0* a25; /* special_character_8_type */
	T0* a26; /* special_character_32_type */
	T0* a27; /* any_type */
	T0* a28; /* none_type */
	T0* a29; /* root_type */
	T0* a30; /* root_creation_procedure */
	T0* a31; /* array_area_feature */
	T0* a32; /* array_lower_feature */
	T0* a33; /* array_upper_feature */
	T0* a34; /* typed_pointer_to_pointer_feature */
	T0* a35; /* routine_closed_operands_feature */
};

/* Struct for type ET_CLASS */
struct S60 {
	int id;
	T1 a1; /* interface_checked */
	T1 a2; /* has_interface_error */
	T0* a3; /* formal_parameters */
	T0* a4; /* queries */
	T0* a5; /* procedures */
	T1 a6; /* is_parsed */
	T1 a7; /* has_syntax_error */
	T0* a8; /* name */
	T0* a9; /* group */
	T0* a10; /* base_class */
	T0* a11; /* class_mark */
	T0* a12; /* creators */
	T6 a13; /* id */
	T0* a14; /* ancestors */
	T0* a15; /* class_keyword */
	T0* a16; /* end_keyword */
	T6 a17; /* index */
	T0* a18; /* master_class */
	T6 a19; /* time_stamp */
	T1 a20; /* in_system */
	T0* a21; /* filename */
	T1 a22; /* features_flattened */
	T1 a23; /* has_flattening_error */
	T0* a24; /* parents */
	T1 a25; /* has_implementation_error */
	T1 a26; /* implementation_checked */
	T0* a27; /* suppliers */
	T1 a28; /* has_deferred_features */
	T1 a29; /* has_ancestors_error */
	T1 a30; /* ancestors_built */
	T0* a31; /* external_keyword */
	T0* a32; /* frozen_keyword */
	T0* a33; /* convert_features */
	T0* a34; /* feature_clauses */
	T0* a35; /* first_indexing */
	T0* a36; /* second_indexing */
	T0* a37; /* invariants */
	T0* a38; /* obsolete_message */
	T0* a39; /* leading_break */
	T0* a40; /* providers */
	T1 a41; /* is_interface */
	T0* a42; /* overridden_class */
};

/* Struct for type ET_C_GENERATOR */
struct S61 {
	int id;
	T6 a1; /* never_void_target_count */
	T6 a2; /* can_be_void_target_count */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_dynamic_system */
	T1 a5; /* short_names */
	T1 a6; /* split_mode */
	T6 a7; /* split_threshold */
	T1 a8; /* use_boehm_gc */
	T0* a9; /* system_name */
	T0* a10; /* type_checker */
	T0* a11; /* current_file */
	T0* a12; /* header_file */
	T0* a13; /* current_type */
	T0* a14; /* current_feature */
	T0* a15; /* extra_dynamic_type_sets */
	T0* a16; /* current_dynamic_type_sets */
	T0* a17; /* current_function_header_buffer */
	T0* a18; /* current_function_body_buffer */
	T0* a19; /* temp_variables */
	T0* a20; /* used_temp_variables */
	T0* a21; /* free_temp_variables */
	T0* a22; /* frozen_temp_variables */
	T0* a23; /* conforming_types */
	T0* a24; /* conforming_type_set */
	T0* a25; /* non_conforming_types */
	T0* a26; /* current_call_info */
	T0* a27; /* operand_stack */
	T0* a28; /* call_operands */
	T0* a29; /* attachment_dynamic_type_ids */
	T0* a30; /* target_dynamic_type_ids */
	T0* a31; /* target_dynamic_types */
	T0* a32; /* standalone_type_sets */
	T0* a33; /* deep_twin_types */
	T0* a34; /* deep_equal_types */
	T0* a35; /* deep_feature_target_type_sets */
	T0* a36; /* current_agents */
	T0* a37; /* agent_open_operands */
	T0* a38; /* agent_closed_operands */
	T0* a39; /* agent_target */
	T0* a40; /* agent_arguments */
	T0* a41; /* agent_instruction */
	T0* a42; /* agent_expression */
	T0* a43; /* agent_closed_operands_type */
	T0* a44; /* wrapper_expression */
	T0* a45; /* agent_tuple_item_expressions */
	T0* a46; /* agent_manifest_tuple */
	T0* a47; /* formal_arguments */
	T0* a48; /* manifest_array_types */
	T0* a49; /* big_manifest_array_types */
	T0* a50; /* manifest_tuple_types */
	T0* a51; /* once_features */
	T0* a52; /* constant_features */
	T0* a53; /* inline_constants */
	T0* a54; /* dispose_procedures */
	T0* a55; /* dynamic_type_id_set_names */
	T0* a56; /* called_features */
	T0* a57; /* included_header_filenames */
	T0* a58; /* included_runtime_header_files */
	T0* a59; /* included_runtime_c_files */
	T0* a60; /* c_filenames */
	T1 a61; /* finalize_mode */
	T0* a62; /* locals_written_in_body */
	T0* a63; /* locals_written_in_rescue */
	T0* a64; /* locals_written */
	T0* a65; /* locals_read_in_body */
	T0* a66; /* locals_read_in_rescue */
	T0* a67; /* locals_read */
	T0* a68; /* external_c_regexp */
	T0* a69; /* external_c_macro_regexp */
	T0* a70; /* external_c_struct_regexp */
	T0* a71; /* external_c_inline_regexp */
	T0* a72; /* old_external_c_regexp */
	T0* a73; /* old_external_c_macro_regexp */
	T0* a74; /* old_external_c_struct_regexp */
	T0* a75; /* external_cpp_regexp */
	T0* a76; /* external_cpp_inline_regexp */
	T0* a77; /* external_dllwin_regexp */
	T0* a78; /* c_file */
	T6 a79; /* c_file_size */
	T0* a80; /* cpp_file */
	T6 a81; /* cpp_file_size */
	T6 a82; /* indentation */
	T0* a83; /* assignment_target */
	T1 a84; /* in_operand */
	T0* a85; /* call_target_type */
	T0* a86; /* current_agent */
	T1 a87; /* result_written */
	T1 a88; /* result_read */
	T1 a89; /* call_target_check_void */
	T1 a90; /* has_retry */
};

/* Struct for type KL_SHELL_COMMAND */
struct S62 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a3; /* command */
	T6 a4; /* return_code */
	T1 a5; /* is_system_code */
};

/* Struct for type UT_VERSION */
struct S63 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S64 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T0* a3; /* current_dynamic_type */
	T0* a4; /* current_dynamic_feature */
	T0* a5; /* dynamic_type_sets */
	T0* a6; /* object_id_dynamic_type_set */
	T0* a7; /* current_index */
	T0* a8; /* result_index */
	T0* a9; /* character_8_index */
	T0* a10; /* character_32_index */
	T0* a11; /* boolean_index */
	T0* a12; /* real_32_index */
	T0* a13; /* real_64_index */
	T0* a14; /* integer_8_index */
	T0* a15; /* integer_16_index */
	T0* a16; /* integer_32_index */
	T0* a17; /* integer_64_index */
	T0* a18; /* natural_8_index */
	T0* a19; /* natural_16_index */
	T0* a20; /* natural_32_index */
	T0* a21; /* natural_64_index */
	T0* a22; /* pointer_index */
	T0* a23; /* none_index */
	T0* a24; /* string_8_index */
	T0* a25; /* string_32_index */
	T1 a26; /* catcall_error_mode */
	T1 a27; /* catcall_warning_mode */
	T1 a28; /* no_debug */
	T1 a29; /* no_assertion */
	T1 a30; /* is_built */
	T0* a31; /* type_checker */
	T0* a32; /* current_class */
	T0* a33; /* current_type */
	T0* a34; /* current_feature */
	T0* a35; /* current_feature_impl */
	T0* a36; /* current_class_impl */
	T0* a37; /* enclosing_inline_agents */
	T0* a38; /* overloaded_procedures */
	T0* a39; /* unused_overloaded_procedures_list */
	T0* a40; /* overloaded_queries */
	T0* a41; /* unused_overloaded_queries_list */
	T0* a42; /* best_overloaded_features */
	T0* a43; /* unused_contexts */
	T0* a44; /* current_context */
	T0* a45; /* current_target_type */
	T1 a46; /* in_precursor */
	T1 a47; /* in_rescue */
	T0* a48; /* current_inline_agent */
	T0* a49; /* supplier_handler */
	T1 a50; /* in_invariant */
	T1 a51; /* in_precondition */
	T1 a52; /* in_postcondition */
	T0* a53; /* precursor_procedures */
	T1 a54; /* in_assertion */
	T0* a55; /* precursor_queries */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S66 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S68 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S69 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S70 {
	int id;
	T2 a1; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S71 {
	int id;
};

/* Struct for type KL_LINKABLE [CHARACTER_8] */
struct S72 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_STANDARD_FILES */
struct S75 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S76 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type KL_STDOUT_FILE */
struct S77 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type UC_STRING */
struct S78 {
	int id;
	T6 a1; /* count */
	T6 a2; /* byte_count */
	T6 a3; /* internal_hash_code */
	T6 a4; /* last_byte_index_input */
	T6 a5; /* last_byte_index_result */
	T0* a6; /* area */
};

/* Struct for type KL_ANY_ROUTINES */
struct S79 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING_8] */
struct S80 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S81 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* equality_tester */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S82 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T6 a5; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S83 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S84 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type SPECIAL [STRING_8] */
struct S85 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [STRING_8] */
struct S86 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKED_LIST [STRING_8] */
struct S88 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* last_cell */
	T0* a3; /* first_cell */
	T6 a4; /* count */
	T0* a5; /* equality_tester */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S89 {
	int id;
};

/* Struct for type DS_LINKED_LIST [BOOLEAN] */
struct S93 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_LINKED_LIST [INTEGER_32] */
struct S96 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type ST_WORD_WRAPPER */
struct S97 {
	int id;
	T6 a1; /* new_line_indentation */
	T6 a2; /* broken_words */
	T6 a3; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S98 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S99 {
	int id;
	T0* a1; /* root_element */
	T0* a2; /* internal_cursor */
	T0* a3; /* first_cell */
	T0* a4; /* last_cell */
	T6 a5; /* count */
	T0* a6; /* parent */
};

/* Struct for type XM_ELEMENT */
struct S100 {
	int id;
	T0* a1; /* parent */
	T0* a2; /* name */
	T0* a3; /* namespace */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
	T0* a7; /* internal_cursor */
};

/* Struct for type XM_POSITION_TABLE */
struct S101 {
	int id;
	T0* a1; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S103 {
	int id;
	T0* a1; /* error */
	T0* a2; /* tree */
	T0* a3; /* start */
	T0* a4; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S104 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S105 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* next */
	T0* a4; /* source_parser */
	T0* a5; /* current_element */
	T0* a6; /* namespace_cache */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S106 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S107 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S108 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T0* a7; /* equality_tester */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S109 {
	int id;
};

/* Struct for type ET_XACE_LIBRARY_CONFIG_PARSER */
struct S110 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a4; /* library_parser */
	T0* a5; /* xml_preprocessor */
	T0* a6; /* xml_validator */
	T0* a7; /* xml_parser */
	T0* a8; /* tree_pipe */
	T0* a9; /* last_library */
	T1 a10; /* is_shallow */
	T1 a11; /* is_ve */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S111 {
	int id;
	T0* a1; /* internal_last_error_description */
	T0* a2; /* scanner */
	T0* a3; /* error_positions */
	T0* a4; /* scanners */
	T1 a5; /* in_external_dtd */
	T0* a6; /* callbacks */
	T0* a7; /* entities */
	T0* a8; /* pe_entities */
	T0* a9; /* dtd_resolver */
	T0* a10; /* entity_resolver */
	T1 a11; /* use_namespaces */
	T6 a12; /* string_mode */
	T0* a13; /* yyss */
	T0* a14; /* yytranslate */
	T0* a15; /* yyr1 */
	T0* a16; /* yytypes1 */
	T0* a17; /* yytypes2 */
	T0* a18; /* yydefact */
	T0* a19; /* yydefgoto */
	T0* a20; /* yypact */
	T0* a21; /* yypgoto */
	T0* a22; /* yytable */
	T0* a23; /* yycheck */
	T6 a24; /* yy_parsing_status */
	T6 a25; /* yy_suspended_yystacksize */
	T6 a26; /* yy_suspended_yystate */
	T6 a27; /* yy_suspended_yyn */
	T6 a28; /* yy_suspended_yychar1 */
	T6 a29; /* yy_suspended_index */
	T6 a30; /* yy_suspended_yyss_top */
	T6 a31; /* yy_suspended_yy_goto */
	T6 a32; /* yyssp */
	T6 a33; /* error_count */
	T1 a34; /* yy_lookahead_needed */
	T6 a35; /* yyerrstatus */
	T6 a36; /* last_token */
	T6 a37; /* yyvsp1 */
	T6 a38; /* yyvsp2 */
	T6 a39; /* yyvsp3 */
	T6 a40; /* yyvsp4 */
	T6 a41; /* yyvsp5 */
	T6 a42; /* yyvsp6 */
	T6 a43; /* yyvsp7 */
	T6 a44; /* yyvsp8 */
	T6 a45; /* yyvsp9 */
	T6 a46; /* yyvsp10 */
	T6 a47; /* yyvsp11 */
	T0* a48; /* last_string_value */
	T6 a49; /* yyvsc1 */
	T0* a50; /* yyvs1 */
	T0* a51; /* yyspecial_routines1 */
	T0* a52; /* last_any_value */
	T6 a53; /* yyvsc4 */
	T0* a54; /* yyvs4 */
	T0* a55; /* yyspecial_routines4 */
	T6 a56; /* yyvsc2 */
	T0* a57; /* yyvs2 */
	T0* a58; /* yyspecial_routines2 */
	T0* a59; /* yyvs11 */
	T6 a60; /* yyvsc11 */
	T0* a61; /* yyspecial_routines11 */
	T0* a62; /* yyvs10 */
	T0* a63; /* yyvs5 */
	T6 a64; /* yyvsc10 */
	T0* a65; /* yyspecial_routines10 */
	T6 a66; /* yyvsc3 */
	T0* a67; /* yyvs3 */
	T0* a68; /* yyspecial_routines3 */
	T0* a69; /* yyvs6 */
	T6 a70; /* yyvsc6 */
	T0* a71; /* yyspecial_routines6 */
	T0* a72; /* yyvs8 */
	T0* a73; /* yyvs7 */
	T6 a74; /* yyvsc8 */
	T0* a75; /* yyspecial_routines8 */
	T6 a76; /* yyvsc7 */
	T0* a77; /* yyspecial_routines7 */
	T0* a78; /* yyvs9 */
	T6 a79; /* yyvsc9 */
	T0* a80; /* yyspecial_routines9 */
	T6 a81; /* yyvsc5 */
	T0* a82; /* yyspecial_routines5 */
	T0* a83; /* dtd_callbacks */
};

/* Struct for type UT_MESSAGE */
struct S114 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
struct S115 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [INTEGER_32] */
struct S117 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
struct S118 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER_32] */
struct S119 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING_8] */
struct S120 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING_8] */
struct S121 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T1 a3; /* before */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_HASH_SET [INTEGER_32] */
struct S122 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T0* a6; /* internal_cursor */
	T6 a7; /* slots_position */
	T6 a8; /* count */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S123 {
	int id;
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S124 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S125 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* internal_keys */
	T0* a12; /* internal_cursor */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type YY_FILE_BUFFER */
struct S126 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a10; /* end_of_file */
	T6 a11; /* capacity */
	T1 a12; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S127 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a9; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S128 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* count */
	T0* a9; /* equality_tester */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* found_position */
	T0* a16; /* hash_function */
};

/* Struct for type ET_IDENTIFIER */
struct S129 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a3; /* status_code */
	T6 a4; /* compressed_position */
	T6 a5; /* hash_code */
	T0* a6; /* name */
};

/* Struct for type SPECIAL [ANY] */
struct S131 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S132 {
	int id;
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S133 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S134 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S135 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S136 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T1 a5; /* is_abstract */
	T1 a6; /* is_recursive */
	T1 a7; /* is_read_only */
	T0* a8; /* exclude */
	T0* a9; /* subclusters */
	T1 a10; /* overridden_constraint_enabled */
	T0* a11; /* parent */
	T1 a12; /* is_override */
	T0* a13; /* provider_constraint */
	T0* a14; /* dependant_constraint */
	T1 a15; /* is_preparsed */
	T1 a16; /* is_implicit */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S137 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLIES */
struct S138 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S139 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTERS] */
struct S140 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S141 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
struct S142 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S143 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_EXCLUDE] */
struct S144 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S145 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
struct S146 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
struct S147 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S148 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S149 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S150 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
};

/* Struct for type KL_PLATFORM */
struct S151 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S152 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S153 {
	int id;
	T6 a1; /* capacity */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S154 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_dynamic_system */
	T1 a3; /* catcall_error_mode */
	T1 a4; /* catcall_warning_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S155 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_CLASS] */
struct S156 {
	int id;
	T0* z1;
};

/* Struct for type TUPLE */
struct S157 {
	int id;
};

/* Struct for type PROCEDURE [ET_CLASS, TUPLE [ET_CLASS]] */
struct S158 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [INTEGER_32] */
struct S159 {
	int id;
	T6 z1;
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S160 {
	int id;
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S161 {
	int id;
	T0* a1; /* base_type */
	T1 a2; /* is_alive */
	T6 a3; /* id */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* base_class */
	T0* a7; /* procedures */
	T0* a8; /* conforming_dynamic_types */
	T0* a9; /* all_conforming_dynamic_types */
	T0* a10; /* next_type */
	T0* a11; /* meta_type */
	T1 a12; /* has_reference_attributes */
	T1 a13; /* has_generic_expanded_attributes */
	T0* a14; /* query_calls */
	T1 a15; /* has_static */
	T0* a16; /* procedure_calls */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S163 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S164 {
	int id;
	T6 a1; /* time_storage */
	T6 a2; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S165 {
	int id;
	T6 a1; /* second */
	T6 a2; /* year */
	T6 a3; /* month */
	T6 a4; /* day */
	T6 a5; /* hour */
	T6 a6; /* minute */
	T6 a7; /* millisecond */
	T1 a8; /* is_utc */
	T0* a9; /* internal_item */
};

/* Struct for type PROCEDURE [ET_DYNAMIC_SYSTEM, TUPLE [ET_CLASS]] */
struct S166 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_DYNAMIC_SYSTEM] */
struct S167 {
	int id;
	T0* z1;
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S174 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a3; /* id */
	T0* a4; /* result_type_set */
	T1 a5; /* is_generated */
	T0* a6; /* target_type */
	T6 a7; /* builtin_code */
	T1 a8; /* is_creation */
	T0* a9; /* first_precursor */
	T1 a10; /* is_regular */
	T0* a11; /* other_precursors */
	T1 a12; /* is_built */
	T1 a13; /* is_current_type_needed */
	T1 a14; /* is_static */
};

/* Struct for type ET_CLASS_TYPE */
struct S175 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* base_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S176 {
	int id;
	T0* a1; /* left_bracket */
	T0* a2; /* right_bracket */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S177 {
	int id;
	T0* a1; /* base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* type_mark */
	T0* a4; /* name */
	T0* a5; /* unresolved_type */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S179 {
	int id;
	T6 a1; /* hash_code */
	T0* a2; /* implementation_feature */
	T0* a3; /* implementation_class */
	T6 a4; /* builtin_code */
	T0* a5; /* arguments */
	T6 a6; /* first_seed */
	T0* a7; /* language */
	T0* a8; /* preconditions */
	T0* a9; /* postconditions */
	T0* a10; /* first_precursor */
	T0* a11; /* other_precursors */
	T0* a12; /* assigner */
	T0* a13; /* declared_type */
	T0* a14; /* obsolete_message */
	T0* a15; /* alias_clause */
	T0* a16; /* clients */
	T0* a17; /* is_keyword */
	T0* a18; /* end_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* frozen_keyword */
	T0* a23; /* extended_name */
	T0* a24; /* other_seeds */
	T1 a25; /* implementation_checked */
	T1 a26; /* has_implementation_error */
	T1 a27; /* assertions_checked */
	T1 a28; /* has_assertions_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_KEYWORD */
struct S182 {
	int id;
	T2 a1; /* code */
	T0* a2; /* text */
	T6 a3; /* compressed_position */
};

/* Struct for type ET_TUPLE_TYPE */
struct S184 {
	int id;
	T0* a1; /* base_class */
	T0* a2; /* actual_parameters */
	T0* a3; /* tuple_keyword */
};

/* Struct for type ET_QUERY_LIST */
struct S185 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a3; /* declared_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S186 {
	int id;
	T6 a1; /* count */
	T6 a2; /* declared_count */
	T0* a3; /* storage */
};

/* Struct for type ET_TYPE_CHECKER */
struct S187 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a4; /* current_class */
	T1 a5; /* has_fatal_error */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S188 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S189 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S190 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S191 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER_32] */
struct S192 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_LIST */
struct S193 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S194 {
	int id;
	T0* a1; /* static_type */
	T6 a2; /* count */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S195 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S196 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S197 {
	int id;
	T6 a1; /* position */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* free_slot */
	T6 a9; /* modulus */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_keys */
	T6 a14; /* found_position */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* key_storage */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
struct S198 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S199 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* count */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S200 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T6 a3; /* found_position */
	T0* a4; /* item_storage */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S201 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S203 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S204 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_symbol */
	T0* a4; /* right_symbol */
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S205 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S208 {
	int id;
	T0* a1; /* target */
	T6 a2; /* index */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type DS_ARRAYED_LIST [ET_CALL_EXPRESSION] */
struct S209 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S210 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S211 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S212 {
	int id;
	T6 a1; /* position */
	T6 a2; /* capacity */
	T6 a3; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T0* a6; /* internal_cursor */
	T6 a7; /* count */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T0* a15; /* equality_tester */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S213 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* key_storage */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T6 a13; /* found_position */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_INLINE_CONSTANT] */
struct S214 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T6 a8; /* count */
	T0* a9; /* special_item_routines */
	T0* a10; /* clashes */
	T0* a11; /* slots */
	T6 a12; /* found_position */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S215 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T6 a8; /* slots_position */
	T0* a9; /* equality_tester */
	T0* a10; /* key_equality_tester */
	T0* a11; /* internal_keys */
	T0* a12; /* internal_cursor */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S216 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [STRING_8] */
struct S217 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* item_storage */
	T6 a3; /* capacity */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* equality_tester */
	T6 a9; /* count */
	T6 a10; /* slots_position */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* found_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING_8] */
struct S218 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T0* a5; /* key_equality_tester */
	T0* a6; /* internal_keys */
	T6 a7; /* count */
	T6 a8; /* last_position */
	T6 a9; /* free_slot */
	T6 a10; /* capacity */
	T6 a11; /* slots_position */
	T6 a12; /* modulus */
	T6 a13; /* clashes_previous_position */
	T0* a14; /* equality_tester */
	T6 a15; /* found_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_IDENTIFIER_TESTER */
struct S219 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S220 {
	int id;
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S221 {
	int id;
	T0* a1; /* subject */
	T6 a2; /* subject_end */
	T6 a3; /* subject_start */
	T0* a4; /* offset_vector */
	T6 a5; /* offset_vector_count */
	T6 a6; /* brastart_capacity */
	T0* a7; /* brastart_vector */
	T6 a8; /* brastart_lower */
	T6 a9; /* brastart_count */
	T6 a10; /* eptr_capacity */
	T0* a11; /* eptr_vector */
	T6 a12; /* eptr_lower */
	T6 a13; /* eptr_upper */
	T0* a14; /* byte_code */
	T0* a15; /* pattern */
	T6 a16; /* subexpression_count */
	T6 a17; /* pattern_count */
	T6 a18; /* pattern_position */
	T6 a19; /* code_index */
	T6 a20; /* maxbackrefs */
	T6 a21; /* optchanged */
	T6 a22; /* first_character */
	T6 a23; /* required_character */
	T6 a24; /* regexp_countlits */
	T0* a25; /* start_bits */
	T0* a26; /* error_message */
	T1 a27; /* is_anchored */
	T0* a28; /* character_case_mapping */
	T0* a29; /* word_set */
	T6 a30; /* subject_next_start */
	T6 a31; /* match_count */
	T6 a32; /* error_code */
	T6 a33; /* error_position */
	T1 a34; /* is_startline */
	T1 a35; /* is_caseless */
	T1 a36; /* is_multiline */
	T1 a37; /* is_dotall */
	T1 a38; /* is_extended */
	T1 a39; /* is_empty_allowed */
	T1 a40; /* is_dollar_endonly */
	T1 a41; /* is_bol */
	T1 a42; /* is_eol */
	T1 a43; /* is_greedy */
	T1 a44; /* is_strict */
	T1 a45; /* is_ichanged */
	T6 a46; /* first_matched_index */
	T6 a47; /* eptr */
	T6 a48; /* offset_top */
	T1 a49; /* is_matching_caseless */
	T1 a50; /* is_matching_multiline */
	T1 a51; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S222 {
	int id;
	T0* a1; /* name */
	T6 a2; /* mode */
	T0* a3; /* string_name */
	T14 a4; /* file_pointer */
	T1 a5; /* descriptor_available */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S223 {
	int id;
	T1 a1; /* is_alive */
	T6 a2; /* id */
	T0* a3; /* base_type */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* base_class */
	T0* a7; /* procedures */
	T0* a8; /* item_type_sets */
	T1 a9; /* has_reference_attributes */
	T1 a10; /* has_generic_expanded_attributes */
	T0* a11; /* conforming_dynamic_types */
	T0* a12; /* next_type */
	T0* a13; /* meta_type */
	T0* a14; /* query_calls */
	T0* a15; /* all_conforming_dynamic_types */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S224 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S225 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S226 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S227 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S228 {
	int id;
	T1 a1; /* is_generated */
	T0* a2; /* current_feature */
	T6 a3; /* id */
	T0* a4; /* target_type */
	T0* a5; /* static_feature */
	T0* a6; /* dynamic_type_sets */
	T1 a7; /* is_regular */
	T1 a8; /* is_creation */
	T1 a9; /* is_static */
	T0* a10; /* result_type_set */
	T6 a11; /* builtin_code */
	T0* a12; /* first_precursor */
	T0* a13; /* other_precursors */
	T1 a14; /* is_built */
	T0* a15; /* parent_type */
	T1 a16; /* is_current_type_needed */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
struct S229 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* items */
	T0* a5; /* counts */
	T0* a6; /* successors */
};

/* Struct for type ET_RESULT */
struct S230 {
	int id;
	T6 a1; /* index */
	T2 a2; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S231 {
	int id;
	T0* a1; /* static_call */
	T0* a2; /* target_type_set */
	T0* a3; /* result_type_set */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
	T0* a6; /* next */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S235 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a5; /* current_type */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S237 {
	int id;
	T1 a1; /* is_alive */
	T6 a2; /* id */
	T0* a3; /* base_type */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* base_class */
	T0* a7; /* procedures */
	T0* a8; /* item_type_set */
	T1 a9; /* has_reference_attributes */
	T1 a10; /* has_generic_expanded_attributes */
	T0* a11; /* conforming_dynamic_types */
	T0* a12; /* next_type */
	T0* a13; /* meta_type */
	T0* a14; /* query_calls */
	T0* a15; /* all_conforming_dynamic_types */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S242 {
	int id;
	T1 a1; /* is_alive */
	T6 a2; /* id */
	T0* a3; /* base_type */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* base_class */
	T0* a7; /* procedures */
	T0* a8; /* result_type_set */
	T0* a9; /* open_operand_type_sets */
	T0* a10; /* conforming_dynamic_types */
	T0* a11; /* next_type */
	T0* a12; /* meta_type */
	T0* a13; /* query_calls */
	T1 a14; /* has_reference_attributes */
	T1 a15; /* has_generic_expanded_attributes */
	T0* a16; /* all_conforming_dynamic_types */
	T1 a17; /* has_static */
	T0* a18; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S243 {
	int id;
	T1 a1; /* is_alive */
	T6 a2; /* id */
	T0* a3; /* base_type */
	T6 a4; /* attribute_count */
	T0* a5; /* queries */
	T0* a6; /* base_class */
	T0* a7; /* procedures */
	T0* a8; /* open_operand_type_sets */
	T0* a9; /* conforming_dynamic_types */
	T0* a10; /* next_type */
	T0* a11; /* meta_type */
	T0* a12; /* query_calls */
	T1 a13; /* has_reference_attributes */
	T1 a14; /* has_generic_expanded_attributes */
	T0* a15; /* all_conforming_dynamic_types */
	T1 a16; /* has_static */
	T0* a17; /* procedure_calls */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S245 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type DS_QUICK_SORTER [INTEGER_32] */
struct S248 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S251 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type PROCEDURE [ET_C_GENERATOR, TUPLE] */
struct S255 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*);
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S256 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S258 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S259 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S263 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type ET_COMPOUND */
struct S265 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* keyword */
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
struct S266 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
};

/* Struct for type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
struct S267 {
	int id;
	T0* z1;
	T0* z2;
	T0* z3;
	T1 z4;
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S268 {
	int id;
	T6 a1; /* hash_code */
	T0* a2; /* implementation_feature */
	T0* a3; /* constant */
	T0* a4; /* implementation_class */
	T6 a5; /* first_seed */
	T0* a6; /* first_precursor */
	T0* a7; /* other_precursors */
	T0* a8; /* assigner */
	T0* a9; /* other_seeds */
	T0* a10; /* declared_type */
	T0* a11; /* extended_name */
	T0* a12; /* clients */
	T0* a13; /* is_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* frozen_keyword */
	T1 a18; /* implementation_checked */
	T1 a19; /* has_implementation_error */
	T1 a20; /* assertions_checked */
	T1 a21; /* has_assertions_error */
	T6 a22; /* id */
	T6 a23; /* version */
	T0* a24; /* synonym */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S269 {
	int id;
	T6 a1; /* hash_code */
	T0* a2; /* implementation_feature */
	T0* a3; /* implementation_class */
	T6 a4; /* first_seed */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* assigner */
	T0* a8; /* extended_name */
	T0* a9; /* other_seeds */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* is_keyword */
	T0* a13; /* unique_keyword */
	T0* a14; /* semicolon */
	T0* a15; /* feature_clause */
	T0* a16; /* first_indexing */
	T0* a17; /* frozen_keyword */
	T6 a18; /* id */
	T1 a19; /* implementation_checked */
	T1 a20; /* has_implementation_error */
	T1 a21; /* assertions_checked */
	T1 a22; /* has_assertions_error */
	T6 a23; /* version */
	T0* a24; /* synonym */
};

/* Struct for type ET_ATTRIBUTE */
struct S270 {
	int id;
	T6 a1; /* hash_code */
	T0* a2; /* implementation_feature */
	T0* a3; /* implementation_class */
	T6 a4; /* first_seed */
	T0* a5; /* first_precursor */
	T0* a6; /* other_precursors */
	T0* a7; /* assigner */
	T0* a8; /* extended_name */
	T0* a9; /* other_seeds */
	T0* a10; /* declared_type */
	T0* a11; /* clients */
	T0* a12; /* semicolon */
	T0* a13; /* feature_clause */
	T0* a14; /* first_indexing */
	T0* a15; /* frozen_keyword */
	T1 a16; /* implementation_checked */
	T1 a17; /* has_implementation_error */
	T1 a18; /* assertions_checked */
	T1 a19; /* has_assertions_error */
	T6 a20; /* id */
	T6 a21; /* version */
	T0* a22; /* synonym */
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S272 {
	int id;
};

/* Struct for type DS_CELL [INTEGER_32] */
struct S273 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S275 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S276 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S277 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S278 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S279 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S280 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
	T0* a6; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S281 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S282 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type UNIX_FILE_INFO */
struct S284 {
	int id;
	T0* a1; /* buffered_file_info */
	T0* a2; /* file_name */
};

/* Struct for type ET_AST_FACTORY */
struct S286 {
	int id;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S287 {
	int id;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_OPTIONS */
struct S288 {
	int id;
	T0* a1; /* declared_console_application */
	T0* a2; /* declared_exception_trace */
	T0* a3; /* declared_trace */
	T0* a4; /* declared_garbage_collector */
	T0* a5; /* declared_c_compiler_options */
	T0* a6; /* declared_header */
	T0* a7; /* declared_link */
	T0* a8; /* declared_abstract */
	T0* a9; /* declared_recursive */
	T0* a10; /* declared_read_only */
	T6 a11; /* declared_fst_expansion_factor */
	T6 a12; /* declared_heap_size */
	T6 a13; /* declared_inlining_size */
	T6 a14; /* declared_msil_classes_per_module */
	T6 a15; /* declared_stack_size */
	T0* a16; /* declared_address_expression */
	T0* a17; /* declared_arguments */
	T0* a18; /* declared_array_optimization */
	T0* a19; /* declared_assembly */
	T0* a20; /* declared_assertion */
	T0* a21; /* declared_automatic_backup */
	T0* a22; /* declared_callback */
	T0* a23; /* declared_case_insensitive */
	T0* a24; /* declared_check_vape */
	T0* a25; /* declared_clean */
	T0* a26; /* declared_cls_compliant */
	T0* a27; /* declared_component */
	T0* a28; /* declared_create_keyword_extension */
	T0* a29; /* declared_culture */
	T0* a30; /* declared_dead_code_removal */
	T0* a31; /* declared_debug_option */
	T0* a32; /* declared_debug_tag */
	T0* a33; /* declared_debugger */
	T0* a34; /* declared_document */
	T0* a35; /* declared_dotnet_naming_convention */
	T0* a36; /* declared_dynamic_runtime */
	T0* a37; /* declared_ecf_library */
	T0* a38; /* declared_enforce_unique_class_names */
	T0* a39; /* declared_exclude */
	T0* a40; /* declared_export_option */
	T0* a41; /* declared_external_runtime */
	T0* a42; /* declared_finalize_option */
	T0* a43; /* declared_flat_fst_optimization */
	T0* a44; /* declared_force_32bits */
	T0* a45; /* declared_fst_optimization */
	T0* a46; /* declared_full_class_checking */
	T0* a47; /* declared_gc_info */
	T0* a48; /* declared_high_memory_compiler */
	T0* a49; /* declared_il_verifiable */
	T0* a50; /* declared_include */
	T0* a51; /* declared_inlining */
	T0* a52; /* declared_jumps_optimization */
	T0* a53; /* declared_layout */
	T0* a54; /* declared_layout_optimization */
	T0* a55; /* declared_leaves_optimization */
	T0* a56; /* declared_line_generation */
	T0* a57; /* declared_linker */
	T0* a58; /* declared_linux_fpu_double_precision */
	T0* a59; /* declared_manifest_string_trace */
	T0* a60; /* declared_map */
	T0* a61; /* declared_metadata_cache_path */
	T0* a62; /* declared_msil_assembly_compatibility */
	T0* a63; /* declared_msil_clr_version */
	T0* a64; /* declared_msil_culture */
	T0* a65; /* declared_msil_generation */
	T0* a66; /* declared_msil_generation_version */
	T0* a67; /* declared_msil_key_file_name */
	T0* a68; /* declared_msil_use_optimized_precompile */
	T0* a69; /* declared_multithreaded */
	T0* a70; /* declared_namespace */
	T0* a71; /* declared_no_default_lib */
	T0* a72; /* declared_old_verbatim_strings */
	T0* a73; /* declared_override_cluster */
	T0* a74; /* declared_portable_code_generation */
	T0* a75; /* declared_precompiled */
	T0* a76; /* declared_prefix_option */
	T0* a77; /* declared_profile */
	T0* a78; /* declared_public_key_token */
	T0* a79; /* declared_reloads_optimization */
	T0* a80; /* declared_shared_library_definition */
	T0* a81; /* declared_split */
	T0* a82; /* declared_storable_filename */
	T0* a83; /* declared_strip_option */
	T0* a84; /* declared_target */
	T0* a85; /* declared_use_cluster_name_as_namespace */
	T0* a86; /* declared_use_full_cluster_name_as_namespace */
	T0* a87; /* declared_verbose */
	T0* a88; /* declared_version */
	T0* a89; /* declared_visible_filename */
	T0* a90; /* declared_warning */
	T0* a91; /* declared_wedit */
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S291 {
	int id;
};

/* Struct for type ET_XACE_CLUSTER */
struct S293 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* universe */
	T0* a5; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a15; /* is_override */
	T1 a16; /* is_preparsed */
	T0* a17; /* parent */
	T1 a18; /* is_implicit */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a21; /* is_mounted */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S294 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S295 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library_prefix */
	T0* a3; /* library */
	T0* a4; /* position */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S296 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S297 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type XM_ATTRIBUTE */
struct S298 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_NODE] */
struct S299 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* before */
};

/* Struct for type ET_XACE_LIBRARY_CONFIG */
struct S301 {
	int id;
	T0* a1; /* library_prefix */
	T0* a2; /* name */
	T0* a3; /* options */
	T0* a4; /* clusters */
	T0* a5; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, STRING_8] */
struct S302 {
	int id;
	T6 a1; /* found_position */
	T6 a2; /* position */
	T0* a3; /* item_storage */
	T0* a4; /* key_equality_tester */
	T0* a5; /* internal_keys */
	T6 a6; /* free_slot */
	T6 a7; /* last_position */
	T6 a8; /* count */
	T6 a9; /* modulus */
	T6 a10; /* slots_position */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* equality_tester */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* key_storage */
	T6 a16; /* capacity */
	T0* a17; /* internal_cursor */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S305 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S306 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S307 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S308 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S309 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S310 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S311 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S313 {
	int id;
};

/* Struct for type ET_ADAPTED_LIBRARIES */
struct S314 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type TUPLE [ET_LIBRARY] */
struct S316 {
	int id;
	T0* z1;
};

/* Struct for type PROCEDURE [ET_LIBRARY, TUPLE [ET_LIBRARY]] */
struct S317 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
struct S318 {
	int id;
	T0* z1;
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S319 {
	int id;
	T1 a1; /* flat_mode */
	T1 a2; /* flat_dbc_mode */
	T1 a3; /* suppliers_enabled */
	T0* a4; /* feature_checker */
	T0* a5; /* precursor_procedures */
	T0* a6; /* precursor_queries */
	T0* a7; /* supplier_builder */
	T0* a8; /* current_class */
	T0* a9; /* no_suppliers */
	T1 a10; /* short_mode */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S320 {
	int id;
	T6 a1; /* last_text_count */
	T6 a2; /* last_literal_start */
	T0* a3; /* filename */
	T0* a4; /* group */
	T0* a5; /* input_buffer */
	T6 a6; /* yy_start_state */
	T6 a7; /* yy_line */
	T6 a8; /* yy_column */
	T6 a9; /* yy_position */
	T6 a10; /* line */
	T6 a11; /* column */
	T6 a12; /* position */
	T0* a13; /* yy_state_stack */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T0* a16; /* yy_nxt */
	T0* a17; /* yy_chk */
	T0* a18; /* yy_base */
	T0* a19; /* yy_def */
	T0* a20; /* yy_ec */
	T0* a21; /* yy_meta */
	T0* a22; /* yy_accept */
	T0* a23; /* yy_acclist */
	T0* a24; /* yy_content */
	T0* a25; /* yy_content_area */
	T0* a26; /* last_classname */
	T1 a27; /* class_keyword_found */
	T6 a28; /* last_token */
	T1 a29; /* yy_more_flag */
	T6 a30; /* yy_more_len */
	T6 a31; /* yy_state_count */
	T6 a32; /* yy_last_accepting_state */
	T6 a33; /* yy_last_accepting_cpos */
	T6 a34; /* yy_lp */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T6 a40; /* last_literal_end */
	T0* a41; /* verbatim_marker */
	T0* a42; /* verbatim_open_white_characters */
	T0* a43; /* verbatim_close_white_characters */
	T6 a44; /* ms_column */
	T6 a45; /* ms_line */
	T6 a46; /* last_break_end */
	T6 a47; /* last_comment_end */
};

/* Struct for type ET_EIFFEL_PARSER */
struct S321 {
	int id;
	T0* a1; /* counters */
	T0* a2; /* last_formal_arguments_stack */
	T0* a3; /* last_local_variables_stack */
	T0* a4; /* last_keywords */
	T0* a5; /* last_symbols */
	T0* a6; /* assertions */
	T0* a7; /* queries */
	T0* a8; /* procedures */
	T0* a9; /* constraints */
	T0* a10; /* providers */
	T0* a11; /* current_class */
	T0* a12; /* group */
	T6 a13; /* last_text_count */
	T6 a14; /* last_literal_start */
	T0* a15; /* filename */
	T0* a16; /* yyss */
	T6 a17; /* time_stamp */
	T0* a18; /* input_buffer */
	T0* a19; /* yytranslate */
	T0* a20; /* yyr1 */
	T0* a21; /* yytypes1 */
	T0* a22; /* yytypes2 */
	T0* a23; /* yydefact */
	T0* a24; /* yydefgoto */
	T0* a25; /* yypact */
	T0* a26; /* yypgoto */
	T0* a27; /* yytable */
	T0* a28; /* yycheck */
	T6 a29; /* yy_end */
	T6 a30; /* yy_start */
	T6 a31; /* yy_line */
	T6 a32; /* yy_column */
	T6 a33; /* yy_position */
	T6 a34; /* yy_parsing_status */
	T6 a35; /* yy_suspended_yystacksize */
	T6 a36; /* yy_suspended_yystate */
	T6 a37; /* yy_suspended_yyn */
	T6 a38; /* yy_suspended_yychar1 */
	T6 a39; /* yy_suspended_index */
	T6 a40; /* yy_suspended_yyss_top */
	T6 a41; /* yy_suspended_yy_goto */
	T6 a42; /* yyssp */
	T6 a43; /* error_count */
	T1 a44; /* yy_lookahead_needed */
	T6 a45; /* yyerrstatus */
	T6 a46; /* last_token */
	T0* a47; /* last_class */
	T0* a48; /* last_clients */
	T0* a49; /* last_export_clients */
	T0* a50; /* last_feature_clause */
	T6 a51; /* last_literal_end */
	T0* a52; /* verbatim_marker */
	T0* a53; /* verbatim_open_white_characters */
	T0* a54; /* verbatim_close_white_characters */
	T6 a55; /* yy_start_state */
	T6 a56; /* line */
	T6 a57; /* column */
	T6 a58; /* position */
	T1 a59; /* yy_more_flag */
	T6 a60; /* yy_more_len */
	T6 a61; /* yy_last_accepting_state */
	T6 a62; /* yy_last_accepting_cpos */
	T1 a63; /* yy_rejected */
	T6 a64; /* yy_state_count */
	T6 a65; /* yy_full_match */
	T6 a66; /* yy_lp */
	T6 a67; /* yy_looking_for_trail_begin */
	T6 a68; /* yy_full_lp */
	T6 a69; /* yy_full_state */
	T0* a70; /* yy_state_stack */
	T0* a71; /* yy_content */
	T0* a72; /* yy_content_area */
	T6 a73; /* yyvsp1 */
	T6 a74; /* yyvsp2 */
	T6 a75; /* yyvsp3 */
	T6 a76; /* yyvsp4 */
	T6 a77; /* yyvsp5 */
	T6 a78; /* yyvsp6 */
	T6 a79; /* yyvsp7 */
	T6 a80; /* yyvsp8 */
	T6 a81; /* yyvsp9 */
	T6 a82; /* yyvsp10 */
	T6 a83; /* yyvsp11 */
	T6 a84; /* yyvsp12 */
	T6 a85; /* yyvsp13 */
	T6 a86; /* yyvsp14 */
	T6 a87; /* yyvsp15 */
	T6 a88; /* yyvsp16 */
	T6 a89; /* yyvsp17 */
	T6 a90; /* yyvsp18 */
	T6 a91; /* yyvsp19 */
	T6 a92; /* yyvsp20 */
	T6 a93; /* yyvsp21 */
	T6 a94; /* yyvsp22 */
	T6 a95; /* yyvsp23 */
	T6 a96; /* yyvsp24 */
	T6 a97; /* yyvsp25 */
	T6 a98; /* yyvsp26 */
	T6 a99; /* yyvsp27 */
	T6 a100; /* yyvsp28 */
	T6 a101; /* yyvsp29 */
	T6 a102; /* yyvsp30 */
	T6 a103; /* yyvsp31 */
	T6 a104; /* yyvsp32 */
	T6 a105; /* yyvsp33 */
	T6 a106; /* yyvsp34 */
	T6 a107; /* yyvsp35 */
	T6 a108; /* yyvsp36 */
	T6 a109; /* yyvsp37 */
	T6 a110; /* yyvsp38 */
	T6 a111; /* yyvsp39 */
	T6 a112; /* yyvsp40 */
	T6 a113; /* yyvsp41 */
	T6 a114; /* yyvsp42 */
	T6 a115; /* yyvsp43 */
	T6 a116; /* yyvsp44 */
	T6 a117; /* yyvsp45 */
	T6 a118; /* yyvsp46 */
	T6 a119; /* yyvsp47 */
	T6 a120; /* yyvsp48 */
	T6 a121; /* yyvsp49 */
	T6 a122; /* yyvsp50 */
	T6 a123; /* yyvsp51 */
	T6 a124; /* yyvsp52 */
	T6 a125; /* yyvsp53 */
	T6 a126; /* yyvsp54 */
	T6 a127; /* yyvsp55 */
	T6 a128; /* yyvsp56 */
	T6 a129; /* yyvsp57 */
	T6 a130; /* yyvsp58 */
	T6 a131; /* yyvsp59 */
	T6 a132; /* yyvsp60 */
	T6 a133; /* yyvsp61 */
	T6 a134; /* yyvsp62 */
	T6 a135; /* yyvsp63 */
	T6 a136; /* yyvsp64 */
	T6 a137; /* yyvsp65 */
	T6 a138; /* yyvsp66 */
	T6 a139; /* yyvsp67 */
	T6 a140; /* yyvsp68 */
	T6 a141; /* yyvsp69 */
	T6 a142; /* yyvsp70 */
	T6 a143; /* yyvsp71 */
	T6 a144; /* yyvsp72 */
	T6 a145; /* yyvsp73 */
	T6 a146; /* yyvsp74 */
	T6 a147; /* yyvsp75 */
	T6 a148; /* yyvsp76 */
	T6 a149; /* yyvsp77 */
	T6 a150; /* yyvsp78 */
	T6 a151; /* yyvsp79 */
	T6 a152; /* yyvsp80 */
	T6 a153; /* yyvsp81 */
	T6 a154; /* yyvsp82 */
	T6 a155; /* yyvsp83 */
	T6 a156; /* yyvsp84 */
	T6 a157; /* yyvsp85 */
	T6 a158; /* yyvsp86 */
	T6 a159; /* yyvsp87 */
	T6 a160; /* yyvsp88 */
	T6 a161; /* yyvsp89 */
	T6 a162; /* yyvsp90 */
	T6 a163; /* yyvsp91 */
	T6 a164; /* yyvsp92 */
	T6 a165; /* yyvsp93 */
	T6 a166; /* yyvsp94 */
	T6 a167; /* yyvsp95 */
	T6 a168; /* yyvsp96 */
	T6 a169; /* yyvsp97 */
	T6 a170; /* yyvsp98 */
	T6 a171; /* yyvsp99 */
	T6 a172; /* yyvsp100 */
	T6 a173; /* yyvsp101 */
	T6 a174; /* yyvsp102 */
	T6 a175; /* yyvsp103 */
	T6 a176; /* yyvsp104 */
	T6 a177; /* yyvsp105 */
	T6 a178; /* yyvsp106 */
	T6 a179; /* yyvsp107 */
	T6 a180; /* yyvsp108 */
	T6 a181; /* yyvsp109 */
	T6 a182; /* yyvsp110 */
	T6 a183; /* yyvsp111 */
	T6 a184; /* yyvsp112 */
	T6 a185; /* yyvsp113 */
	T6 a186; /* yyvsp114 */
	T6 a187; /* yyvsp115 */
	T6 a188; /* yyvsp116 */
	T0* a189; /* yy_ec */
	T0* a190; /* yy_accept */
	T0* a191; /* yy_chk */
	T0* a192; /* yy_base */
	T0* a193; /* yy_def */
	T0* a194; /* yy_meta */
	T0* a195; /* yy_nxt */
	T0* a196; /* yy_acclist */
	T6 a197; /* yyvsc1 */
	T0* a198; /* yyvs1 */
	T0* a199; /* yyspecial_routines1 */
	T0* a200; /* last_any_value */
	T6 a201; /* yyvsc2 */
	T0* a202; /* yyvs2 */
	T0* a203; /* yyspecial_routines2 */
	T0* a204; /* last_et_keyword_value */
	T6 a205; /* yyvsc3 */
	T0* a206; /* yyvs3 */
	T0* a207; /* yyspecial_routines3 */
	T0* a208; /* last_et_agent_keyword_value */
	T6 a209; /* yyvsc4 */
	T0* a210; /* yyvs4 */
	T0* a211; /* yyspecial_routines4 */
	T0* a212; /* last_et_precursor_keyword_value */
	T6 a213; /* yyvsc5 */
	T0* a214; /* yyvs5 */
	T0* a215; /* yyspecial_routines5 */
	T0* a216; /* last_et_symbol_value */
	T6 a217; /* yyvsc6 */
	T0* a218; /* yyvs6 */
	T0* a219; /* yyspecial_routines6 */
	T0* a220; /* last_et_position_value */
	T6 a221; /* yyvsc7 */
	T0* a222; /* yyvs7 */
	T0* a223; /* yyspecial_routines7 */
	T0* a224; /* last_et_bit_constant_value */
	T6 a225; /* yyvsc8 */
	T0* a226; /* yyvs8 */
	T0* a227; /* yyspecial_routines8 */
	T0* a228; /* last_et_boolean_constant_value */
	T6 a229; /* yyvsc9 */
	T0* a230; /* yyvs9 */
	T0* a231; /* yyspecial_routines9 */
	T0* a232; /* last_et_break_value */
	T6 a233; /* yyvsc10 */
	T0* a234; /* yyvs10 */
	T0* a235; /* yyspecial_routines10 */
	T0* a236; /* last_et_character_constant_value */
	T6 a237; /* yyvsc11 */
	T0* a238; /* yyvs11 */
	T0* a239; /* yyspecial_routines11 */
	T0* a240; /* last_et_current_value */
	T6 a241; /* yyvsc12 */
	T0* a242; /* yyvs12 */
	T0* a243; /* yyspecial_routines12 */
	T0* a244; /* last_et_free_operator_value */
	T6 a245; /* yyvsc13 */
	T0* a246; /* yyvs13 */
	T0* a247; /* yyspecial_routines13 */
	T0* a248; /* last_et_identifier_value */
	T6 a249; /* yyvsc14 */
	T0* a250; /* yyvs14 */
	T0* a251; /* yyspecial_routines14 */
	T0* a252; /* last_et_integer_constant_value */
	T6 a253; /* yyvsc15 */
	T0* a254; /* yyvs15 */
	T0* a255; /* yyspecial_routines15 */
	T0* a256; /* last_et_keyword_operator_value */
	T6 a257; /* yyvsc16 */
	T0* a258; /* yyvs16 */
	T0* a259; /* yyspecial_routines16 */
	T0* a260; /* last_et_manifest_string_value */
	T6 a261; /* yyvsc17 */
	T0* a262; /* yyvs17 */
	T0* a263; /* yyspecial_routines17 */
	T0* a264; /* last_et_real_constant_value */
	T6 a265; /* yyvsc18 */
	T0* a266; /* yyvs18 */
	T0* a267; /* yyspecial_routines18 */
	T0* a268; /* last_et_result_value */
	T6 a269; /* yyvsc19 */
	T0* a270; /* yyvs19 */
	T0* a271; /* yyspecial_routines19 */
	T0* a272; /* last_et_retry_instruction_value */
	T6 a273; /* yyvsc20 */
	T0* a274; /* yyvs20 */
	T0* a275; /* yyspecial_routines20 */
	T0* a276; /* last_et_symbol_operator_value */
	T6 a277; /* yyvsc21 */
	T0* a278; /* yyvs21 */
	T0* a279; /* yyspecial_routines21 */
	T0* a280; /* last_et_void_value */
	T6 a281; /* yyvsc22 */
	T0* a282; /* yyvs22 */
	T0* a283; /* yyspecial_routines22 */
	T0* a284; /* last_et_semicolon_symbol_value */
	T6 a285; /* yyvsc23 */
	T0* a286; /* yyvs23 */
	T0* a287; /* yyspecial_routines23 */
	T0* a288; /* last_et_bracket_symbol_value */
	T6 a289; /* yyvsc24 */
	T0* a290; /* yyvs24 */
	T0* a291; /* yyspecial_routines24 */
	T0* a292; /* last_et_question_mark_symbol_value */
	T6 a293; /* last_break_end */
	T6 a294; /* last_comment_end */
	T6 a295; /* ms_column */
	T6 a296; /* ms_line */
	T6 a297; /* break_kind */
	T0* a298; /* yyvs42 */
	T0* a299; /* yyvs78 */
	T0* a300; /* yyvs97 */
	T0* a301; /* yyvs101 */
	T0* a302; /* yyvs56 */
	T0* a303; /* yyvs53 */
	T0* a304; /* yyvs67 */
	T0* a305; /* yyvs86 */
	T6 a306; /* yyvsc42 */
	T0* a307; /* yyspecial_routines42 */
	T6 a308; /* yyvsc78 */
	T0* a309; /* yyspecial_routines78 */
	T0* a310; /* yyvs79 */
	T0* a311; /* yyvs82 */
	T6 a312; /* yyvsc79 */
	T0* a313; /* yyspecial_routines79 */
	T0* a314; /* yyvs80 */
	T6 a315; /* yyvsc82 */
	T0* a316; /* yyspecial_routines82 */
	T0* a317; /* yyvs81 */
	T6 a318; /* yyvsc80 */
	T0* a319; /* yyspecial_routines80 */
	T0* a320; /* yyvs54 */
	T0* a321; /* yyvs96 */
	T6 a322; /* yyvsc81 */
	T0* a323; /* yyspecial_routines81 */
	T6 a324; /* yyvsc76 */
	T0* a325; /* yyvs76 */
	T0* a326; /* yyspecial_routines76 */
	T0* a327; /* yyvs74 */
	T0* a328; /* yyvs75 */
	T6 a329; /* yyvsc75 */
	T0* a330; /* yyspecial_routines75 */
	T6 a331; /* yyvsc74 */
	T0* a332; /* yyspecial_routines74 */
	T0* a333; /* yyvs50 */
	T0* a334; /* yyvs49 */
	T6 a335; /* yyvsc49 */
	T0* a336; /* yyspecial_routines49 */
	T0* a337; /* yyvs70 */
	T0* a338; /* yyvs48 */
	T6 a339; /* yyvsc50 */
	T0* a340; /* yyspecial_routines50 */
	T0* a341; /* yyvs88 */
	T6 a342; /* yyvsc48 */
	T0* a343; /* yyspecial_routines48 */
	T0* a344; /* yyvs47 */
	T6 a345; /* yyvsc47 */
	T0* a346; /* yyspecial_routines47 */
	T6 a347; /* yyvsc97 */
	T0* a348; /* yyspecial_routines97 */
	T6 a349; /* yyvsc101 */
	T0* a350; /* yyspecial_routines101 */
	T0* a351; /* yyvs27 */
	T6 a352; /* yyvsc99 */
	T0* a353; /* yyvs99 */
	T0* a354; /* yyspecial_routines99 */
	T0* a355; /* yyvs107 */
	T0* a356; /* yyvs61 */
	T0* a357; /* yyvs87 */
	T0* a358; /* yyvs100 */
	T6 a359; /* yyvsc100 */
	T0* a360; /* yyspecial_routines100 */
	T6 a361; /* yyvsc107 */
	T0* a362; /* yyspecial_routines107 */
	T0* a363; /* yyvs106 */
	T0* a364; /* yyvs69 */
	T0* a365; /* yyvs64 */
	T6 a366; /* yyvsc106 */
	T0* a367; /* yyspecial_routines106 */
	T6 a368; /* yyvsc61 */
	T0* a369; /* yyspecial_routines61 */
	T0* a370; /* yyvs60 */
	T0* a371; /* yyvs44 */
	T6 a372; /* yyvsc60 */
	T0* a373; /* yyspecial_routines60 */
	T0* a374; /* yyvs68 */
	T6 a375; /* yyvsc68 */
	T0* a376; /* yyspecial_routines68 */
	T6 a377; /* yyvsc44 */
	T0* a378; /* yyspecial_routines44 */
	T0* a379; /* yyvs43 */
	T6 a380; /* yyvsc43 */
	T0* a381; /* yyspecial_routines43 */
	T6 a382; /* yyvsc87 */
	T0* a383; /* yyspecial_routines87 */
	T6 a384; /* yyvsc70 */
	T0* a385; /* yyspecial_routines70 */
	T6 a386; /* yyvsc56 */
	T0* a387; /* yyspecial_routines56 */
	T0* a388; /* yyvs55 */
	T6 a389; /* yyvsc55 */
	T0* a390; /* yyspecial_routines55 */
	T6 a391; /* yyvsc53 */
	T0* a392; /* yyspecial_routines53 */
	T0* a393; /* yyvs51 */
	T0* a394; /* yyvs52 */
	T6 a395; /* yyvsc52 */
	T0* a396; /* yyspecial_routines52 */
	T0* a397; /* yyvs112 */
	T6 a398; /* yyvsc51 */
	T0* a399; /* yyspecial_routines51 */
	T6 a400; /* yyvsc112 */
	T0* a401; /* yyspecial_routines112 */
	T0* a402; /* yyvs110 */
	T0* a403; /* yyvs111 */
	T6 a404; /* yyvsc111 */
	T0* a405; /* yyspecial_routines111 */
	T6 a406; /* yyvsc67 */
	T0* a407; /* yyspecial_routines67 */
	T0* a408; /* yyvs66 */
	T6 a409; /* yyvsc66 */
	T0* a410; /* yyspecial_routines66 */
	T0* a411; /* yyvs105 */
	T0* a412; /* yyvs104 */
	T0* a413; /* yyvs33 */
	T6 a414; /* yyvsc105 */
	T0* a415; /* yyspecial_routines105 */
	T0* a416; /* yyvs46 */
	T0* a417; /* yyvs103 */
	T0* a418; /* yyvs91 */
	T0* a419; /* yyvs45 */
	T0* a420; /* yyvs102 */
	T0* a421; /* yyvs73 */
	T0* a422; /* yyvs65 */
	T6 a423; /* yyvsc104 */
	T0* a424; /* yyspecial_routines104 */
	T6 a425; /* yyvsc65 */
	T0* a426; /* yyspecial_routines65 */
	T6 a427; /* yyvsc33 */
	T0* a428; /* yyspecial_routines33 */
	T6 a429; /* yyvsc69 */
	T0* a430; /* yyspecial_routines69 */
	T6 a431; /* yyvsc64 */
	T0* a432; /* yyspecial_routines64 */
	T0* a433; /* yyvs32 */
	T6 a434; /* yyvsc32 */
	T0* a435; /* yyspecial_routines32 */
	T6 a436; /* yyvsc73 */
	T0* a437; /* yyspecial_routines73 */
	T0* a438; /* yyvs72 */
	T0* a439; /* yyvs71 */
	T6 a440; /* yyvsc71 */
	T0* a441; /* yyspecial_routines71 */
	T6 a442; /* yyvsc72 */
	T0* a443; /* yyspecial_routines72 */
	T6 a444; /* yyvsc91 */
	T0* a445; /* yyspecial_routines91 */
	T0* a446; /* yyvs90 */
	T0* a447; /* yyvs89 */
	T6 a448; /* yyvsc89 */
	T0* a449; /* yyspecial_routines89 */
	T6 a450; /* yyvsc90 */
	T0* a451; /* yyspecial_routines90 */
	T0* a452; /* yyvs62 */
	T6 a453; /* yyvsc103 */
	T0* a454; /* yyspecial_routines103 */
	T6 a455; /* yyvsc102 */
	T0* a456; /* yyspecial_routines102 */
	T6 a457; /* yyvsc86 */
	T0* a458; /* yyspecial_routines86 */
	T6 a459; /* yyvsc92 */
	T0* a460; /* yyvs92 */
	T0* a461; /* yyspecial_routines92 */
	T6 a462; /* yyvsc113 */
	T0* a463; /* yyvs113 */
	T0* a464; /* yyspecial_routines113 */
	T6 a465; /* yyvsc45 */
	T0* a466; /* yyspecial_routines45 */
	T6 a467; /* yyvsc110 */
	T0* a468; /* yyspecial_routines110 */
	T6 a469; /* yyvsc27 */
	T0* a470; /* yyspecial_routines27 */
	T0* a471; /* yyvs26 */
	T6 a472; /* yyvsc26 */
	T0* a473; /* yyspecial_routines26 */
	T6 a474; /* yyvsc88 */
	T0* a475; /* yyspecial_routines88 */
	T0* a476; /* yyvs85 */
	T0* a477; /* yyvs37 */
	T6 a478; /* yyvsc85 */
	T0* a479; /* yyspecial_routines85 */
	T0* a480; /* yyvs35 */
	T0* a481; /* yyvs116 */
	T0* a482; /* yyvs77 */
	T0* a483; /* yyvs84 */
	T0* a484; /* yyvs57 */
	T0* a485; /* yyvs25 */
	T6 a486; /* yyvsc54 */
	T0* a487; /* yyspecial_routines54 */
	T6 a488; /* yyvsc77 */
	T0* a489; /* yyspecial_routines77 */
	T0* a490; /* yyvs59 */
	T0* a491; /* yyvs58 */
	T6 a492; /* yyvsc59 */
	T0* a493; /* yyspecial_routines59 */
	T6 a494; /* yyvsc58 */
	T0* a495; /* yyspecial_routines58 */
	T0* a496; /* yyvs115 */
	T6 a497; /* yyvsc84 */
	T0* a498; /* yyspecial_routines84 */
	T6 a499; /* yyvsc115 */
	T0* a500; /* yyspecial_routines115 */
	T0* a501; /* yyvs114 */
	T0* a502; /* yyvs41 */
	T6 a503; /* yyvsc114 */
	T0* a504; /* yyspecial_routines114 */
	T6 a505; /* yyvsc41 */
	T0* a506; /* yyspecial_routines41 */
	T0* a507; /* yyvs38 */
	T0* a508; /* yyvs40 */
	T6 a509; /* yyvsc40 */
	T0* a510; /* yyspecial_routines40 */
	T0* a511; /* yyvs39 */
	T6 a512; /* yyvsc38 */
	T0* a513; /* yyspecial_routines38 */
	T6 a514; /* yyvsc39 */
	T0* a515; /* yyspecial_routines39 */
	T0* a516; /* yyvs108 */
	T0* a517; /* yyvs95 */
	T6 a518; /* yyvsc57 */
	T0* a519; /* yyspecial_routines57 */
	T6 a520; /* yyvsc95 */
	T0* a521; /* yyspecial_routines95 */
	T0* a522; /* yyvs94 */
	T6 a523; /* yyvsc94 */
	T0* a524; /* yyspecial_routines94 */
	T6 a525; /* yyvsc62 */
	T0* a526; /* yyspecial_routines62 */
	T6 a527; /* yyvsc37 */
	T0* a528; /* yyspecial_routines37 */
	T6 a529; /* yyvsc108 */
	T0* a530; /* yyspecial_routines108 */
	T0* a531; /* yyvs98 */
	T6 a532; /* yyvsc25 */
	T0* a533; /* yyspecial_routines25 */
	T0* a534; /* yyvs63 */
	T6 a535; /* yyvsc63 */
	T0* a536; /* yyspecial_routines63 */
	T6 a537; /* yyvsc116 */
	T0* a538; /* yyspecial_routines116 */
	T0* a539; /* yyvs36 */
	T0* a540; /* yyvs83 */
	T0* a541; /* yyvs93 */
	T0* a542; /* yyvs109 */
	T0* a543; /* yyvs34 */
	T6 a544; /* yyvsc35 */
	T0* a545; /* yyspecial_routines35 */
	T6 a546; /* yyvsc34 */
	T0* a547; /* yyspecial_routines34 */
	T6 a548; /* yyvsc98 */
	T0* a549; /* yyspecial_routines98 */
	T6 a550; /* yyvsc93 */
	T0* a551; /* yyspecial_routines93 */
	T6 a552; /* yyvsc96 */
	T0* a553; /* yyspecial_routines96 */
	T6 a554; /* yyvsc109 */
	T0* a555; /* yyspecial_routines109 */
	T6 a556; /* yyvsc46 */
	T0* a557; /* yyspecial_routines46 */
	T0* a558; /* yyvs30 */
	T6 a559; /* yyvsc36 */
	T0* a560; /* yyspecial_routines36 */
	T0* a561; /* yyvs31 */
	T6 a562; /* yyvsc83 */
	T0* a563; /* yyspecial_routines83 */
	T6 a564; /* yyvsc31 */
	T0* a565; /* yyspecial_routines31 */
	T6 a566; /* yyvsc30 */
	T0* a567; /* yyspecial_routines30 */
	T0* a568; /* yyvs28 */
	T0* a569; /* yyvs29 */
	T6 a570; /* yyvsc29 */
	T0* a571; /* yyspecial_routines29 */
	T6 a572; /* yyvsc28 */
	T0* a573; /* yyspecial_routines28 */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S322 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S323 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* current_class */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S324 {
	int id;
	T0* a1; /* named_features */
	T0* a2; /* queries */
	T0* a3; /* procedures */
	T0* a4; /* aliased_features */
	T0* a5; /* clients_list */
	T0* a6; /* client_classes */
	T0* a7; /* feature_adaptation_resolver */
	T0* a8; /* dotnet_feature_adaptation_resolver */
	T0* a9; /* identifier_type_resolver */
	T0* a10; /* anchored_type_checker */
	T0* a11; /* signature_checker */
	T0* a12; /* parent_checker */
	T0* a13; /* formal_parameter_checker */
	T0* a14; /* precursor_checker */
	T0* a15; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S325 {
	int id;
	T0* a1; /* parent_checker3 */
	T0* a2; /* current_class */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S326 {
	int id;
	T6 a1; /* year */
	T6 a2; /* month */
	T6 a3; /* day */
	T6 a4; /* hour */
	T6 a5; /* minute */
	T6 a6; /* second */
	T6 a7; /* millisecond */
};

/* Struct for type PROCEDURE [ET_XACE_SYSTEM, TUPLE [ET_CLASS]] */
struct S327 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_XACE_SYSTEM] */
struct S328 {
	int id;
	T0* z1;
};

/* Struct for type DS_HASH_SET_CURSOR [STRING_8] */
struct S329 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING_8] */
struct S330 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S332 {
	int id;
};

/* Struct for type ET_NONE_GROUP */
struct S334 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* name */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S335 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type PROCEDURE [ET_CLUSTER, TUPLE [ET_CLUSTER]] */
struct S339 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_AST_PROCESSOR] */
struct S340 {
	int id;
	T0* z1;
};

/* Struct for type TUPLE [ET_ADAPTED_LIBRARY] */
struct S343 {
	int id;
	T0* z1;
};

/* Struct for type PROCEDURE [ET_ADAPTED_LIBRARY, TUPLE [ET_ADAPTED_LIBRARY]] */
struct S344 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*, T0*);
};

/* Struct for type ET_CLIENT */
struct S346 {
	int id;
	T0* a1; /* name */
	T0* a2; /* base_class */
};

/* Struct for type ET_PARENT */
struct S347 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a8; /* end_keyword */
};

/* Struct for type ET_RENAME_LIST */
struct S348 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S349 {
	int id;
	T0* a1; /* export_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S350 {
	int id;
	T0* a1; /* keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S351 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_CLIENT_LIST */
struct S353 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S355 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ET_ANCESTORS_STATUS_CHECKER */
struct S358 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_FLATTENING_STATUS_CHECKER */
struct S359 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_INTERFACE_STATUS_CHECKER */
struct S360 {
	int id;
	T0* a1; /* class_type_checker */
	T0* a2; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_STATUS_CHECKER */
struct S361 {
	int id;
	T0* a1; /* current_class */
};

/* Struct for type ARRAY [INTEGER_32] */
struct S362 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type UT_CONFIG_PARSER */
struct S363 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* config_values */
	T0* a3; /* error_handler */
	T0* a4; /* defined_values */
	T0* a5; /* include_stack */
	T0* a6; /* line_nb_stack */
	T6 a7; /* line_nb */
	T0* a8; /* yyss */
	T0* a9; /* input_buffer */
	T6 a10; /* yy_end */
	T6 a11; /* yy_position */
	T6 a12; /* yy_line */
	T6 a13; /* yy_column */
	T6 a14; /* yy_parsing_status */
	T6 a15; /* yy_suspended_yystacksize */
	T6 a16; /* yy_suspended_yystate */
	T6 a17; /* yy_suspended_yyn */
	T6 a18; /* yy_suspended_yychar1 */
	T6 a19; /* yy_suspended_index */
	T6 a20; /* yy_suspended_yyss_top */
	T6 a21; /* yy_suspended_yy_goto */
	T0* a22; /* yyr1 */
	T6 a23; /* yyssp */
	T0* a24; /* yypgoto */
	T0* a25; /* yycheck */
	T0* a26; /* yytable */
	T0* a27; /* yydefgoto */
	T6 a28; /* error_count */
	T1 a29; /* yy_lookahead_needed */
	T6 a30; /* yyerrstatus */
	T0* a31; /* yypact */
	T6 a32; /* last_token */
	T0* a33; /* yytranslate */
	T0* a34; /* yydefact */
	T0* a35; /* yytypes1 */
	T0* a36; /* yytypes2 */
	T6 a37; /* yy_start */
	T6 a38; /* yyvsp1 */
	T6 a39; /* yyvsp2 */
	T6 a40; /* yyvsp3 */
	T1 a41; /* yy_more_flag */
	T6 a42; /* yy_more_len */
	T6 a43; /* line */
	T6 a44; /* column */
	T6 a45; /* position */
	T6 a46; /* yy_start_state */
	T0* a47; /* yy_state_stack */
	T6 a48; /* yy_state_count */
	T0* a49; /* yy_ec */
	T0* a50; /* yy_content_area */
	T0* a51; /* yy_content */
	T0* a52; /* yy_accept */
	T6 a53; /* yy_last_accepting_state */
	T6 a54; /* yy_last_accepting_cpos */
	T0* a55; /* yy_chk */
	T0* a56; /* yy_base */
	T0* a57; /* yy_def */
	T0* a58; /* yy_meta */
	T0* a59; /* yy_nxt */
	T6 a60; /* yy_lp */
	T0* a61; /* yy_acclist */
	T6 a62; /* yy_looking_for_trail_begin */
	T6 a63; /* yy_full_match */
	T6 a64; /* yy_full_state */
	T6 a65; /* yy_full_lp */
	T1 a66; /* yy_rejected */
	T6 a67; /* yyvsc1 */
	T0* a68; /* yyvs1 */
	T0* a69; /* yyspecial_routines1 */
	T0* a70; /* last_any_value */
	T6 a71; /* yyvsc2 */
	T0* a72; /* yyvs2 */
	T0* a73; /* yyspecial_routines2 */
	T0* a74; /* last_string_value */
	T6 a75; /* if_level */
	T0* a76; /* yyvs3 */
	T6 a77; /* ignored_level */
	T6 a78; /* yyvsc3 */
	T0* a79; /* yyspecial_routines3 */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
struct S364 {
	int id;
};

/* Struct for type ET_DO_PROCEDURE */
struct S366 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a2; /* arguments */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a5; /* end_keyword */
	T0* a6; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* compound */
	T1 a9; /* implementation_checked */
	T1 a10; /* has_implementation_error */
	T6 a11; /* first_seed */
	T0* a12; /* preconditions */
	T0* a13; /* postconditions */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T0* a16; /* other_seeds */
	T0* a17; /* obsolete_message */
	T0* a18; /* locals */
	T0* a19; /* rescue_clause */
	T0* a20; /* is_keyword */
	T0* a21; /* semicolon */
	T0* a22; /* feature_clause */
	T0* a23; /* first_indexing */
	T0* a24; /* frozen_keyword */
	T6 a25; /* id */
	T6 a26; /* version */
	T1 a27; /* assertions_checked */
	T1 a28; /* has_assertions_error */
	T0* a29; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S369 {
	int id;
	T0* a1; /* static_type */
	T1 a2; /* is_never_void */
	T0* a3; /* dynamic_types */
	T1 a4; /* is_dynamic_types_readonly */
	T6 a5; /* count */
	T0* a6; /* targets */
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S370 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a2; /* arguments */
	T0* a3; /* extended_name */
	T0* a4; /* deferred_keyword */
	T6 a5; /* hash_code */
	T0* a6; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T1 a9; /* implementation_checked */
	T1 a10; /* has_implementation_error */
	T6 a11; /* first_seed */
	T0* a12; /* preconditions */
	T0* a13; /* postconditions */
	T0* a14; /* first_precursor */
	T0* a15; /* other_precursors */
	T0* a16; /* other_seeds */
	T0* a17; /* obsolete_message */
	T0* a18; /* is_keyword */
	T0* a19; /* semicolon */
	T0* a20; /* feature_clause */
	T0* a21; /* first_indexing */
	T0* a22; /* frozen_keyword */
	T6 a23; /* id */
	T6 a24; /* version */
	T1 a25; /* assertions_checked */
	T1 a26; /* has_assertions_error */
	T0* a27; /* synonym */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S371 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S373 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S374 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S375 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S376 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S377 {
	int id;
};

/* Struct for type DS_LINKABLE [STRING_8] */
struct S378 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKABLE [BOOLEAN] */
struct S379 {
	int id;
	T1 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [BOOLEAN] */
struct S380 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [INTEGER_32] */
struct S381 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_LIST_CURSOR [INTEGER_32] */
struct S382 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S383 {
	int id;
	T0* a1; /* next */
	T0* a2; /* context */
	T0* a3; /* element_prefix */
	T0* a4; /* element_local_part */
	T1 a5; /* forward_xmlns */
	T0* a6; /* attributes_prefix */
	T0* a7; /* attributes_local_part */
	T0* a8; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S384 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S385 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S386 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S389 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S391 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
struct S392 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
struct S393 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S394 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* yy_more_flag */
	T6 a13; /* yy_more_len */
	T6 a14; /* yy_end */
	T6 a15; /* yy_start */
	T6 a16; /* yy_line */
	T6 a17; /* yy_column */
	T6 a18; /* yy_position */
	T0* a19; /* input_buffer */
	T0* a20; /* yy_state_stack */
	T6 a21; /* yy_state_count */
	T0* a22; /* yy_ec */
	T0* a23; /* yy_content_area */
	T0* a24; /* yy_content */
	T0* a25; /* yy_accept */
	T6 a26; /* yy_last_accepting_state */
	T6 a27; /* yy_last_accepting_cpos */
	T0* a28; /* yy_chk */
	T0* a29; /* yy_base */
	T0* a30; /* yy_def */
	T0* a31; /* yy_meta */
	T0* a32; /* yy_nxt */
	T6 a33; /* yy_lp */
	T0* a34; /* yy_acclist */
	T6 a35; /* yy_looking_for_trail_begin */
	T6 a36; /* yy_full_match */
	T6 a37; /* yy_full_state */
	T6 a38; /* yy_full_lp */
	T1 a39; /* yy_rejected */
	T0* a40; /* last_error */
	T0* a41; /* start_conditions */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S395 {
	int id;
	T0* a1; /* source_name */
	T6 a2; /* row */
	T6 a3; /* column */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S397 {
	int id;
	T0* a1; /* first_cell */
	T0* a2; /* internal_cursor */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S398 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S399 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T6 a3; /* count */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T0* a8; /* key_equality_tester */
	T0* a9; /* internal_keys */
	T6 a10; /* modulus */
	T6 a11; /* clashes_previous_position */
	T0* a12; /* internal_cursor */
	T6 a13; /* found_position */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* equality_tester */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S401 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S402 {
	int id;
	T1 a1; /* use_namespaces */
	T6 a2; /* count */
	T0* a3; /* first */
	T0* a4; /* second */
	T0* a5; /* tail */
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S403 {
	int id;
	T0* a1; /* version */
	T0* a2; /* encoding */
	T1 a3; /* stand_alone */
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S404 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S405 {
	int id;
	T6 a1; /* position */
	T0* a2; /* equality_tester */
	T6 a3; /* count */
	T6 a4; /* capacity */
	T6 a5; /* free_slot */
	T6 a6; /* last_position */
	T6 a7; /* modulus */
	T6 a8; /* slots_position */
	T6 a9; /* clashes_previous_position */
	T0* a10; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T0* a14; /* item_storage */
	T0* a15; /* special_item_routines */
	T0* a16; /* hash_function */
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S406 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S407 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S408 {
	int id;
	T0* a1; /* name */
	T2 a2; /* type */
	T1 a3; /* is_list_type */
	T0* a4; /* enumeration_list */
	T2 a5; /* value */
	T0* a6; /* default_value */
};

/* Struct for type DS_BILINKED_LIST [STRING_8] */
struct S409 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
	T0* a5; /* equality_tester */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S410 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S411 {
	int id;
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S412 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S413 {
	int id;
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S414 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S415 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S416 {
	int id;
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S417 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S418 {
	int id;
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S419 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S420 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S422 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S424 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S425 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S426 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S427 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
struct S428 {
	int id;
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S429 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a6; /* input_buffer */
	T1 a7; /* in_use */
	T0* a8; /* input_name */
	T0* a9; /* last_error */
	T0* a10; /* start_conditions */
	T6 a11; /* yy_start_state */
	T6 a12; /* yy_line */
	T6 a13; /* yy_column */
	T6 a14; /* yy_position */
	T6 a15; /* line */
	T6 a16; /* column */
	T6 a17; /* position */
	T1 a18; /* yy_more_flag */
	T6 a19; /* yy_more_len */
	T6 a20; /* yy_last_accepting_state */
	T6 a21; /* yy_last_accepting_cpos */
	T1 a22; /* yy_rejected */
	T6 a23; /* yy_state_count */
	T6 a24; /* yy_full_match */
	T6 a25; /* yy_lp */
	T6 a26; /* yy_looking_for_trail_begin */
	T6 a27; /* yy_full_lp */
	T6 a28; /* yy_full_state */
	T0* a29; /* yy_state_stack */
	T6 a30; /* yy_end */
	T6 a31; /* yy_start */
	T0* a32; /* yy_nxt */
	T0* a33; /* yy_chk */
	T0* a34; /* yy_base */
	T0* a35; /* yy_def */
	T0* a36; /* yy_ec */
	T0* a37; /* yy_meta */
	T0* a38; /* yy_accept */
	T0* a39; /* yy_content */
	T0* a40; /* yy_content_area */
	T6 a41; /* last_token */
	T0* a42; /* last_value */
	T0* a43; /* input_filter */
	T0* a44; /* input_stream */
	T0* a45; /* input_resolver */
	T0* a46; /* yy_acclist */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S430 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S432 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S433 {
	int id;
	T6 a1; /* last_token */
	T0* a2; /* last_value */
	T0* a3; /* input_name */
	T6 a4; /* position */
	T6 a5; /* column */
	T6 a6; /* line */
	T0* a7; /* input_filter */
	T6 a8; /* yy_start_state */
	T0* a9; /* character_entity */
	T0* a10; /* input_stream */
	T0* a11; /* input_resolver */
	T1 a12; /* decl_start_sent */
	T1 a13; /* decl_end_sent */
	T1 a14; /* yy_more_flag */
	T6 a15; /* yy_more_len */
	T6 a16; /* yy_end */
	T6 a17; /* yy_start */
	T6 a18; /* yy_line */
	T6 a19; /* yy_column */
	T6 a20; /* yy_position */
	T0* a21; /* input_buffer */
	T0* a22; /* yy_state_stack */
	T6 a23; /* yy_state_count */
	T0* a24; /* yy_ec */
	T0* a25; /* yy_content_area */
	T0* a26; /* yy_content */
	T0* a27; /* yy_accept */
	T6 a28; /* yy_last_accepting_state */
	T6 a29; /* yy_last_accepting_cpos */
	T0* a30; /* yy_chk */
	T0* a31; /* yy_base */
	T0* a32; /* yy_def */
	T0* a33; /* yy_meta */
	T0* a34; /* yy_nxt */
	T6 a35; /* yy_lp */
	T0* a36; /* yy_acclist */
	T6 a37; /* yy_looking_for_trail_begin */
	T6 a38; /* yy_full_match */
	T6 a39; /* yy_full_state */
	T6 a40; /* yy_full_lp */
	T1 a41; /* yy_rejected */
	T0* a42; /* last_error */
	T0* a43; /* start_conditions */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S435 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a6; /* input_buffer */
	T1 a7; /* in_use */
	T0* a8; /* input_name */
	T0* a9; /* last_error */
	T0* a10; /* start_conditions */
	T6 a11; /* yy_start_state */
	T6 a12; /* yy_line */
	T6 a13; /* yy_column */
	T6 a14; /* yy_position */
	T6 a15; /* line */
	T6 a16; /* column */
	T6 a17; /* position */
	T1 a18; /* yy_more_flag */
	T6 a19; /* yy_more_len */
	T6 a20; /* yy_last_accepting_state */
	T6 a21; /* yy_last_accepting_cpos */
	T1 a22; /* yy_rejected */
	T6 a23; /* yy_state_count */
	T6 a24; /* yy_full_match */
	T6 a25; /* yy_lp */
	T6 a26; /* yy_looking_for_trail_begin */
	T6 a27; /* yy_full_lp */
	T6 a28; /* yy_full_state */
	T0* a29; /* yy_state_stack */
	T6 a30; /* yy_end */
	T6 a31; /* yy_start */
	T1 a32; /* pre_sent */
	T1 a33; /* post_sent */
	T0* a34; /* yy_nxt */
	T0* a35; /* yy_chk */
	T0* a36; /* yy_base */
	T0* a37; /* yy_def */
	T0* a38; /* yy_ec */
	T0* a39; /* yy_meta */
	T0* a40; /* yy_accept */
	T0* a41; /* yy_content */
	T0* a42; /* yy_content_area */
	T6 a43; /* last_token */
	T0* a44; /* last_value */
	T0* a45; /* input_filter */
	T0* a46; /* input_stream */
	T0* a47; /* input_resolver */
	T0* a48; /* yy_acclist */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
struct S436 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [INTEGER_32] */
struct S437 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [STRING_8] */
struct S438 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER_32] */
struct S439 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S442 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S444 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S445 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S446 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S447 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S448 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
struct S449 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTERS] */
struct S450 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S451 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_EXCLUDE] */
struct S452 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S453 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S454 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S456 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S458 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S459 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S460 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S461 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S462 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S463 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S464 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_UNKNOWN_GROUP */
struct S465 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S466 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* left_bracket */
	T0* a4; /* right_bracket */
};

/* Struct for type MANAGED_POINTER */
struct S467 {
	int id;
	T14 a1; /* item */
	T6 a2; /* count */
	T1 a3; /* is_shared */
};

/* Struct for type ET_SYMBOL */
struct S469 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S470 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S472 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S473 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S477 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S478 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S479 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
struct S480 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S482 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S483 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S484 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S485 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S487 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S489 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S490 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S491 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S492 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S494 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S496 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S497 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S498 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S499 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S501 {
	int id;
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S502 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S503 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CALL_EXPRESSION] */
struct S504 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S505 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S506 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S507 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S508 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S510 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S511 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S512 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S513 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
struct S515 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S517 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT] */
struct S518 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_INLINE_CONSTANT] */
struct S519 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
struct S520 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S521 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S523 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S525 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S526 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S527 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
struct S528 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8] */
struct S530 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type RX_BYTE_CODE */
struct S533 {
	int id;
	T6 a1; /* count */
	T0* a2; /* byte_code */
	T0* a3; /* character_sets */
	T6 a4; /* capacity */
	T6 a5; /* character_sets_count */
	T6 a6; /* character_sets_capacity */
};

/* Struct for type RX_CASE_MAPPING */
struct S534 {
	int id;
	T0* a1; /* lower_table */
	T0* a2; /* flip_table */
};

/* Struct for type RX_CHARACTER_SET */
struct S535 {
	int id;
	T0* a1; /* set */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S537 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S538 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S539 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a7; /* free_slot */
	T6 a8; /* slots_position */
	T6 a9; /* count */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_keys */
	T0* a14; /* slots */
	T0* a15; /* clashes */
	T0* a16; /* special_item_routines */
	T0* a17; /* key_storage */
	T0* a18; /* special_key_routines */
	T0* a19; /* internal_cursor */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
struct S540 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S541 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S542 {
	int id;
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S544 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S545 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S546 {
	int id;
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S547 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S548 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S549 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S550 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S551 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S552 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S553 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S554 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S555 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S556 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S557 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S558 {
	int id;
	T0* a1; /* container */
	T0* a2; /* next_cursor */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S559 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S560 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S561 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S562 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S563 {
	int id;
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S564 {
	int id;
	T6 a1; /* sign */
	T11 a2; /* part1 */
	T11 a3; /* part2 */
	T6 a4; /* last_state */
	T1 a5; /* internal_overflowed */
	T0* a6; /* leading_separators */
	T0* a7; /* trailing_separators */
	T1 a8; /* leading_separators_acceptable */
	T1 a9; /* trailing_separators_acceptable */
	T6 a10; /* conversion_type */
};

/* Struct for type C_STRING */
struct S567 {
	int id;
	T6 a1; /* count */
	T0* a2; /* managed_data */
};

/* Struct for type ET_CLUSTERS */
struct S568 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S569 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S570 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S571 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* se_reported */
	T1 a3; /* ve_reported */
	T1 a4; /* ge_reported */
	T0* a5; /* default_template */
	T0* a6; /* parameters */
	T0* a7; /* current_class */
	T0* a8; /* class_impl */
	T0* a9; /* position */
	T0* a10; /* code */
	T0* a11; /* etl_code */
	T1 a12; /* ise_fatal */
	T1 a13; /* se_fatal */
	T1 a14; /* ve_fatal */
	T1 a15; /* ge_fatal */
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S572 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S573 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* first_cell */
	T0* a4; /* last_cell */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S574 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S575 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S576 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S577 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S578 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S579 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S580 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S581 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type PROCEDURE [ET_LACE_SYSTEM, TUPLE [ET_CLASS]] */
struct S584 {
	int id;
	T0* a1; /* closed_operands */
	void (*f)(T0*, T0*);
};

/* Struct for type TUPLE [ET_LACE_SYSTEM] */
struct S585 {
	int id;
	T0* z1;
};

/* Struct for type ET_CREATOR_LIST */
struct S586 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S587 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S590 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* agent_type */
	T1 a3; /* is_never_void */
	T0* a4; /* dynamic_types */
	T1 a5; /* is_dynamic_types_readonly */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S591 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S592 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S593 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S594 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S595 {
	int id;
	T6 a1; /* count */
	T0* a2; /* area */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S596 {
	int id;
	T0* a1; /* last_string */
	T6 a2; /* encoding */
	T0* a3; /* utf_queue */
	T0* a4; /* impl */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S599 {
	int id;
	T0* a1; /* as_special */
	T0* a2; /* area */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S600 {
	int id;
};

/* Struct for type TUPLE [ET_LACE_CLUSTER] */
struct S601 {
	int id;
	T0* z1;
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S603 {
	int id;
	T0* a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S604 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type UT_TRISTATE */
struct S611 {
	int id;
	T2 a1; /* value */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S612 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S613 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type TUPLE [ET_XACE_CLUSTER] */
struct S614 {
	int id;
	T0* z1;
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S615 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S616 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S617 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
struct S618 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
struct S620 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
struct S622 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [ET_LIBRARY] */
struct S623 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
};

/* Struct for type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
struct S624 {
	int id;
	T0* z1;
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY] */
struct S625 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* items */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* cycle */
};

/* Struct for type TUPLE [DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY], NONE] */
struct S626 {
	int id;
	T0* z1;
	T0* z2;
};

/* Struct for type DS_ARRAYED_LIST [ET_LIBRARY] */
struct S627 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S628 {
	int id;
	T0* a1; /* type_checker */
	T0* a2; /* current_class */
	T0* a3; /* current_type */
	T0* a4; /* current_feature */
	T0* a5; /* current_feature_impl */
	T0* a6; /* current_class_impl */
	T0* a7; /* enclosing_inline_agents */
	T0* a8; /* overloaded_procedures */
	T0* a9; /* unused_overloaded_procedures_list */
	T0* a10; /* overloaded_queries */
	T0* a11; /* unused_overloaded_queries_list */
	T0* a12; /* best_overloaded_features */
	T0* a13; /* unused_contexts */
	T0* a14; /* current_context */
	T0* a15; /* current_target_type */
	T0* a16; /* supplier_handler */
	T1 a17; /* has_fatal_error */
	T1 a18; /* in_assertion */
	T1 a19; /* in_invariant */
	T0* a20; /* precursor_queries */
	T0* a21; /* precursor_procedures */
	T1 a22; /* in_precondition */
	T1 a23; /* in_postcondition */
	T1 a24; /* in_precursor */
	T1 a25; /* in_rescue */
	T0* a26; /* current_inline_agent */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S629 {
	int id;
	T6 a1; /* count */
	T0* a2; /* internal_cursor */
	T0* a3; /* item_storage */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* slots_position */
	T0* a10; /* special_item_routines */
	T0* a11; /* clashes */
	T0* a12; /* slots */
	T6 a13; /* found_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_PROCEDURE] */
struct S630 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T6 a12; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_QUERY] */
struct S631 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a3; /* last_position */
	T6 a4; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* internal_cursor */
	T0* a7; /* special_item_routines */
	T0* a8; /* item_storage */
	T0* a9; /* clashes */
	T0* a10; /* slots */
	T6 a11; /* found_position */
	T6 a12; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* hash_function */
	T0* a16; /* equality_tester */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S632 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* supplier_classes */
	T0* a3; /* type_checker */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER_32] */
struct S634 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S635 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S636 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S637 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S638 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S639 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S640 {
	int id;
	T0* a1; /* storage */
	T0* a2; /* special_routines */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type KL_EIFFEL_COMPILER */
struct S641 {
	int id;
};

/* Struct for type ET_CLIENTS */
struct S644 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S645 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a2; /* clients */
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S647 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S648 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S649 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S650 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S651 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S652 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* name */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S653 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S654 {
	int id;
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S655 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S656 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S657 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S658 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S659 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S660 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S661 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S663 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S664 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S666 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S667 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S669 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S670 {
	int id;
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S671 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S672 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S673 {
	int id;
	T2 a1; /* code */
	T6 a2; /* hash_code */
	T6 a3; /* compressed_position */
	T0* a4; /* free_operator_name */
	T6 a5; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S674 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S675 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S677 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S678 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S679 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S680 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S681 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S682 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S683 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S685 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S686 {
	int id;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S687 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S688 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S689 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S690 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S691 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S692 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S693 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S694 {
	int id;
};

/* Struct for type ET_VOID */
struct S695 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S696 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S697 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S698 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S699 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S700 {
	int id;
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S701 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S702 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S703 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S704 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S705 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S706 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a3; /* compressed_position */
	T6 a4; /* index */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S707 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a7; /* compressed_position */
	T6 a8; /* index */
	T0* a9; /* cast_type */
	T0* a10; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S708 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a3; /* compressed_position */
	T6 a4; /* index */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S709 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T6 a5; /* index */
	T0* a6; /* sign */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S710 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T6 a5; /* index */
	T0* a6; /* sign */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S711 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T1 a3; /* has_value_error */
	T6 a4; /* value */
	T6 a5; /* index */
	T0* a6; /* sign */
	T0* a7; /* cast_type */
	T0* a8; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S712 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* sign */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S713 {
	int id;
	T0* a1; /* literal */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* sign */
	T0* a5; /* cast_type */
	T0* a6; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S715 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S716 {
	int id;
	T2 a1; /* code */
	T6 a2; /* compressed_position */
	T0* a3; /* text */
	T6 a4; /* index */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S717 {
	int id;
	T2 a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S718 {
	int id;
	T2 a1; /* value */
	T6 a2; /* compressed_position */
	T6 a3; /* index */
	T0* a4; /* cast_type */
	T0* a5; /* type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S720 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S722 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S723 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S724 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S725 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S726 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S727 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S728 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INVARIANTS */
struct S729 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a3; /* storage */
	T6 a4; /* count */
	T1 a5; /* assertions_checked */
	T1 a6; /* has_assertions_error */
	T1 a7; /* implementation_checked */
	T1 a8; /* has_implementation_error */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S730 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S731 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S733 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S735 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S737 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S741 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S742 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S744 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S745 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S746 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S747 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S748 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S749 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S750 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S751 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S752 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S753 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S754 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S756 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S757 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S759 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S760 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S761 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a2; /* constraint */
	T0* a3; /* creation_procedures */
	T0* a4; /* type_mark */
	T0* a5; /* name */
	T6 a6; /* index */
	T0* a7; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S762 {
	int id;
	T0* a1; /* create_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S763 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S764 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S766 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S767 {
	int id;
	T0* a1; /* left_bracket */
	T0* a2; /* right_bracket */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S768 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S769 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S770 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S772 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S773 {
	int id;
	T0* a1; /* constant */
	T6 a2; /* size */
	T0* a3; /* bit_keyword */
	T0* a4; /* base_class */
};

/* Struct for type ET_BIT_FEATURE */
struct S774 {
	int id;
	T0* a1; /* base_class */
	T6 a2; /* size */
	T0* a3; /* constant */
	T0* a4; /* bit_keyword */
	T0* a5; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S775 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S777 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S778 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S779 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S780 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S781 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S782 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S783 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S784 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S785 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S786 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S787 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S788 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S789 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S790 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S791 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S793 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S794 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S795 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_RENAME */
struct S796 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a3; /* new_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S797 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S798 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S800 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S801 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S802 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S803 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S804 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S805 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S807 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S808 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT_ITEM] */
struct S809 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
struct S810 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S811 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S812 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S813 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S814 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a2; /* clients */
	T0* a3; /* storage */
	T6 a4; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S815 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S816 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S817 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S819 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S821 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S822 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S824 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S825 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S826 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S827 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S828 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S830 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S831 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S832 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S833 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S834 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S837 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_PRECONDITIONS */
struct S838 {
	int id;
	T0* a1; /* require_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S839 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S840 {
	int id;
	T0* a1; /* local_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S841 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S842 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S843 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
	T0* a4; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S844 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S845 {
	int id;
	T6 a1; /* hash_code */
	T0* a2; /* implementation_feature */
	T0* a3; /* implementation_class */
	T0* a4; /* arguments */
	T6 a5; /* first_seed */
	T0* a6; /* preconditions */
	T0* a7; /* postconditions */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* assigner */
	T0* a11; /* extended_name */
	T0* a12; /* declared_type */
	T0* a13; /* obsolete_message */
	T0* a14; /* locals */
	T0* a15; /* compound */
	T0* a16; /* rescue_clause */
	T0* a17; /* clients */
	T0* a18; /* is_keyword */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* other_seeds */
	T0* a24; /* frozen_keyword */
	T1 a25; /* implementation_checked */
	T1 a26; /* has_implementation_error */
	T1 a27; /* assertions_checked */
	T1 a28; /* has_assertions_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S846 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S847 {
	int id;
	T6 a1; /* hash_code */
	T0* a2; /* implementation_feature */
	T0* a3; /* implementation_class */
	T0* a4; /* arguments */
	T6 a5; /* first_seed */
	T0* a6; /* preconditions */
	T0* a7; /* postconditions */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* assigner */
	T0* a11; /* extended_name */
	T0* a12; /* declared_type */
	T0* a13; /* obsolete_message */
	T0* a14; /* locals */
	T0* a15; /* compound */
	T0* a16; /* rescue_clause */
	T0* a17; /* clients */
	T0* a18; /* is_keyword */
	T0* a19; /* end_keyword */
	T0* a20; /* semicolon */
	T0* a21; /* feature_clause */
	T0* a22; /* first_indexing */
	T0* a23; /* other_seeds */
	T0* a24; /* frozen_keyword */
	T1 a25; /* implementation_checked */
	T1 a26; /* has_implementation_error */
	T1 a27; /* assertions_checked */
	T1 a28; /* has_assertions_error */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S848 {
	int id;
	T6 a1; /* hash_code */
	T0* a2; /* implementation_feature */
	T0* a3; /* implementation_class */
	T0* a4; /* arguments */
	T6 a5; /* first_seed */
	T0* a6; /* preconditions */
	T0* a7; /* postconditions */
	T0* a8; /* first_precursor */
	T0* a9; /* other_precursors */
	T0* a10; /* assigner */
	T0* a11; /* extended_name */
	T0* a12; /* declared_type */
	T0* a13; /* obsolete_message */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* deferred_keyword */
	T0* a17; /* end_keyword */
	T0* a18; /* semicolon */
	T0* a19; /* feature_clause */
	T0* a20; /* first_indexing */
	T0* a21; /* frozen_keyword */
	T0* a22; /* other_seeds */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T1 a25; /* assertions_checked */
	T1 a26; /* has_assertions_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S851 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S852 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_feature */
	T0* a3; /* compound */
	T0* a4; /* implementation_class */
	T0* a5; /* arguments */
	T6 a6; /* hash_code */
	T0* a7; /* preconditions */
	T0* a8; /* postconditions */
	T0* a9; /* first_precursor */
	T0* a10; /* other_precursors */
	T0* a11; /* obsolete_message */
	T0* a12; /* locals */
	T0* a13; /* rescue_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* frozen_keyword */
	T0* a21; /* extended_name */
	T0* a22; /* other_seeds */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T1 a25; /* assertions_checked */
	T1 a26; /* has_assertions_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S853 {
	int id;
	T6 a1; /* first_seed */
	T0* a2; /* implementation_feature */
	T0* a3; /* implementation_class */
	T6 a4; /* builtin_code */
	T0* a5; /* arguments */
	T6 a6; /* hash_code */
	T0* a7; /* language */
	T0* a8; /* preconditions */
	T0* a9; /* postconditions */
	T0* a10; /* first_precursor */
	T0* a11; /* other_precursors */
	T0* a12; /* obsolete_message */
	T0* a13; /* alias_clause */
	T0* a14; /* clients */
	T0* a15; /* is_keyword */
	T0* a16; /* end_keyword */
	T0* a17; /* semicolon */
	T0* a18; /* feature_clause */
	T0* a19; /* first_indexing */
	T0* a20; /* frozen_keyword */
	T0* a21; /* extended_name */
	T0* a22; /* other_seeds */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T1 a25; /* assertions_checked */
	T1 a26; /* has_assertions_error */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* synonym */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S854 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S855 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S856 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S857 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S858 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S859 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a2; /* operator_name */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S860 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S861 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S862 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S863 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S864 {
	int id;
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S865 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a2; /* alias_string */
	T2 a3; /* code */
	T6 a4; /* hash_code */
	T6 a5; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S866 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S868 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S869 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S871 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S872 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S873 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S875 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S876 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S877 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S879 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S880 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S881 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S882 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S883 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S884 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S885 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S886 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S887 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a2; /* tag */
	T0* a3; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S888 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S889 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S890 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S891 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S892 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_LIKE_FEATURE */
struct S894 {
	int id;
	T0* a1; /* like_keyword */
	T0* a2; /* name */
	T6 a3; /* seed */
	T1 a4; /* is_procedure */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S895 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S896 {
	int id;
	T0* a1; /* like_keyword */
	T0* a2; /* current_keyword */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S898 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S899 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a4; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S900 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S901 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S902 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S903 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S904 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S905 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S906 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a4; /* elseif_parts */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S907 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S908 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a4; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S909 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S911 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a5; /* invariant_part */
	T0* a6; /* variant_part */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S912 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S913 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S914 {
	int id;
	T0* a1; /* check_keyword */
	T0* a2; /* end_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S916 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a5; /* right_bang */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S917 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S918 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S920 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S921 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S922 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S923 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S924 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S925 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S926 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S927 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S928 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S929 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S930 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S931 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S932 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S933 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S934 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S935 {
	int id;
	T0* a1; /* when_keyword */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S936 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S937 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S938 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S940 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S942 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S943 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S945 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S946 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S947 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S948 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S949 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S950 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S951 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S952 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S953 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S954 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S956 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S957 {
	int id;
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S958 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a4; /* is_parent_prefixed */
	T0* a5; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S960 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S961 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S962 {
	int id;
	T6 a1; /* index */
	T0* a2; /* parent_name */
	T0* a3; /* arguments */
	T0* a4; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parent_type */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S963 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* expression */
	T0* a3; /* right_parenthesis */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S964 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S965 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S966 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* name */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S967 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* current_keyword */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S968 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* result_keyword */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S969 {
	int id;
	T6 a1; /* index */
	T0* a2; /* dollar */
	T0* a3; /* expression */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S970 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S971 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* name */
	T0* a4; /* right */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S972 {
	int id;
	T0* a1; /* and_keyword */
	T0* a2; /* then_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S973 {
	int id;
	T0* a1; /* or_keyword */
	T0* a2; /* else_keyword */
	T6 a3; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S974 {
	int id;
	T6 a1; /* index */
	T0* a2; /* left */
	T0* a3; /* operator */
	T0* a4; /* right */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S975 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
	T0* a3; /* expression */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S976 {
	int id;
	T6 a1; /* index */
	T0* a2; /* old_keyword */
	T0* a3; /* expression */
};

/* Struct for type ET_CALL_AGENT */
struct S977 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T0* a4; /* target */
	T6 a5; /* index */
	T0* a6; /* implicit_result */
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S978 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S979 {
	int id;
	T6 a1; /* index */
	T0* a2; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* id */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S980 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S981 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S982 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a2; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a6; /* index */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S983 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S984 {
	int id;
	T0* a1; /* left_symbol */
	T0* a2; /* right_symbol */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S985 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S986 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S987 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S988 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S989 {
	int id;
	T6 a1; /* index */
	T0* a2; /* type */
	T0* a3; /* left_brace */
	T0* a4; /* right_brace */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S990 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S991 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S992 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S993 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a2; /* right_parenthesis */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S994 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S995 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S996 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S997 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* index */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S998 {
	int id;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S999 {
	int id;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* declared_type */
	T0* a4; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S1000 {
	int id;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* agent_keyword */
	T0* a4; /* preconditions */
	T0* a5; /* alias_clause */
	T0* a6; /* postconditions */
	T0* a7; /* formal_arguments */
	T0* a8; /* declared_type */
	T0* a9; /* end_keyword */
	T0* a10; /* implicit_result */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S1001 {
	int id;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S1002 {
	int id;
	T6 a1; /* index */
	T0* a2; /* formal_arguments */
	T0* a3; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S1003 {
	int id;
	T6 a1; /* index */
	T0* a2; /* language */
	T0* a3; /* agent_keyword */
	T0* a4; /* preconditions */
	T0* a5; /* alias_clause */
	T0* a6; /* postconditions */
	T0* a7; /* formal_arguments */
	T0* a8; /* end_keyword */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S1004 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1005 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1006 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1008 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1009 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S1010 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S1011 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a3; /* right_brace */
	T0* a4; /* question_mark */
	T6 a5; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S1013 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S1014 {
	int id;
	T0* a1; /* sorted_items */
	T0* a2; /* cycle */
	T0* a3; /* indexes */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* items */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
struct S1015 {
	int id;
	T6 a1; /* count */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a6; /* position */
	T6 a7; /* capacity */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* internal_cursor */
	T0* a12; /* key_storage */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S1016 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S1017 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* current_class */
	T0* a5; /* current_formal */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1018 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S1019 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1021 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a17; /* slots_position */
	T6 a18; /* count */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S1022 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
struct S1024 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
struct S1025 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a17; /* count */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S1026 {
	int id;
	T0* a1; /* rename_table */
	T0* a2; /* export_table */
	T0* a3; /* undefine_table */
	T0* a4; /* redefine_table */
	T0* a5; /* select_table */
	T0* a6; /* replicable_features */
	T0* a7; /* current_class */
	T1 a8; /* has_fatal_error */
	T0* a9; /* free_parent_feature */
	T0* a10; /* parent_feature_list */
	T0* a11; /* free_inherited_feature */
	T0* a12; /* inherited_feature_list */
	T0* a13; /* free_redeclared_feature */
	T0* a14; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S1027 {
	int id;
	T0* a1; /* dotnet_features */
	T0* a2; /* other_dotnet_features */
	T0* a3; /* current_class */
	T1 a4; /* has_fatal_error */
	T0* a5; /* free_parent_feature */
	T0* a6; /* parent_feature_list */
	T0* a7; /* free_inherited_feature */
	T0* a8; /* inherited_feature_list */
	T0* a9; /* free_redeclared_feature */
	T0* a10; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S1028 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
	T0* a3; /* current_feature */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S1029 {
	int id;
	T0* a1; /* anchored_type_sorter */
	T0* a2; /* current_class */
	T0* a3; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S1030 {
	int id;
	T0* a1; /* parent_context */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S1031 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S1032 {
	int id;
	T0* a1; /* current_class */
	T1 a2; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S1033 {
	int id;
	T0* a1; /* current_feature */
	T0* a2; /* current_class */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S1034 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* classes_to_be_processed */
	T0* a3; /* current_class */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S1036 {
	int id;
	T0* a1; /* left_brace */
	T0* a2; /* right_brace */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_CLASS_TYPE_CHECKER1 */
struct S1037 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_CHECKER2 */
struct S1038 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type ET_CLASS_TYPE_CHECKER3 */
struct S1039 {
	int id;
	T1 a1; /* has_fatal_error */
};

/* Struct for type DS_ARRAYED_STACK [YY_BUFFER] */
struct S1040 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
};

/* Struct for type UT_SYNTAX_ERROR */
struct S1041 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_TOO_MANY_INCLUDES_ERROR */
struct S1042 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type TO_SPECIAL [AP_OPTION] */
struct S1043 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S1044 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S1045 {
	int id;
	T0* a1; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING_8] */
struct S1047 {
	int id;
	T0* a1; /* first_cell */
	T6 a2; /* count */
	T0* a3; /* last_cell */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
struct S1048 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_XACE_LIBRARY_CONFIG] */
struct S1049 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S1050 {
	int id;
	T6 a1; /* code */
};

/* Struct for type DS_LINKED_STACK [INTEGER_32] */
struct S1051 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S1052 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S1053 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S1054 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1055 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1056 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1058 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S1060 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S1061 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S1062 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S1063 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1064 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1065 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING_8] */
struct S1066 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING_8] */
struct S1067 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S1068 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_DECLARATION] */
struct S1069 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S1070 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S1071 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S1072 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S1073 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S1074 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [STRING_8]] */
struct S1075 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S1076 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S1078 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S1079 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
struct S1080 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S1081 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S1082 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S1083 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE] */
struct S1084 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S1085 {
	int id;
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1086 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S1088 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
struct S1089 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1090 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
struct S1091 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_AGENT] */
struct S1092 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S1093 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S1094 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1095 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S1096 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1097 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S1098 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INLINE_CONSTANT] */
struct S1099 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
struct S1100 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1101 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8] */
struct S1102 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1103 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1105 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1106 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
struct S1107 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
struct S1108 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S1110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S1111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1112 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S1113 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1114 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1115 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S1116 {
	int id;
	T0* a1; /* area */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1117 {
	int id;
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1118 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S1120 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type KL_DIRECTORY */
struct S1122 {
	int id;
	T1 a1; /* end_of_input */
	T0* a2; /* last_entry */
	T0* a3; /* string_name */
	T6 a4; /* mode */
	T0* a5; /* name */
	T0* a6; /* entry_buffer */
	T0* a7; /* lastentry */
	T14 a8; /* directory_pointer */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1123 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER_32] */
struct S1124 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLUSTER] */
struct S1125 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S1126 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type KL_STDIN_FILE */
struct S1127 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* name */
	T2 a3; /* last_character */
	T0* a4; /* character_buffer */
	T14 a5; /* file_pointer */
	T6 a6; /* mode */
};

/* Struct for type ET_FILE_POSITION */
struct S1128 {
	int id;
	T0* a1; /* filename */
	T6 a2; /* compressed_position */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S1133 {
	int id;
	T6 a1; /* index */
	T0* a2; /* name */
};

/* Struct for type ARRAY [ET_TYPE] */
struct S1135 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1136 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1141 {
	int id;
	T0* a1; /* integer_overflow_state1 */
	T0* a2; /* integer_overflow_state2 */
	T0* a3; /* natural_overflow_state1 */
	T0* a4; /* natural_overflow_state2 */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1142 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1143 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S1144 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S1145 {
	int id;
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER_8] */
struct S1147 {
	int id;
	T6 a1; /* count */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1148 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1149 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1150 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1151 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1152 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1153 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S1154 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
struct S1155 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1156 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
struct S1157 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
struct S1158 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_LIBRARY] */
struct S1159 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
struct S1160 {
	int id;
};

/* Struct for type SPECIAL [ET_LIBRARY] */
struct S1161 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIBRARY] */
struct S1162 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T0* a9; /* internal_cursor */
	T0* a10; /* special_item_routines */
	T0* a11; /* item_storage */
	T0* a12; /* special_key_routines */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIBRARY] */
struct S1163 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1164 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
struct S1165 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_QUERY] */
struct S1166 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1167 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1168 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1169 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S1170 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S1171 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S1172 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S1173 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S1174 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S1175 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S1176 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S1177 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S1178 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S1179 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S1180 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S1181 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S1182 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S1183 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S1184 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S1185 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S1186 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S1187 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S1188 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S1189 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S1190 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S1191 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S1192 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S1193 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S1194 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S1195 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S1196 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S1197 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S1198 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1199 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S1200 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S1201 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S1202 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1203 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1204 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S1205 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S1206 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S1207 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S1208 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S1209 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S1210 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S1211 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S1212 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S1213 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S1214 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENT_ITEM] */
struct S1215 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1216 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1217 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S1218 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S1219 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S1220 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1221 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S1222 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S1223 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S1224 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S1225 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S1226 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S1227 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S1228 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S1229 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S1230 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S1231 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S1232 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S1233 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1234 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S1235 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S1236 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1237 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S1238 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S1239 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S1240 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S1241 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S1242 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S1243 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S1244 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S1245 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S1246 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S1247 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S1248 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S1249 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S1250 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S1251 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S1252 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S1253 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S1254 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S1255 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S1256 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S1257 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S1258 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S1259 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1260 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S1261 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1262 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S1263 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S1264 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S1265 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S1266 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S1267 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S1268 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S1269 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S1270 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S1271 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1272 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1273 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1274 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
struct S1275 {
	int id;
	T6 a1; /* position */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* modulus */
	T6 a8; /* capacity */
	T6 a9; /* slots_position */
	T6 a10; /* clashes_previous_position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* equality_tester */
	T0* a13; /* internal_keys */
	T0* a14; /* internal_cursor */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS] */
struct S1277 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1279 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* sorted_items */
	T0* a3; /* items */
	T0* a4; /* counts */
	T0* a5; /* successors */
	T0* a6; /* indexes */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1280 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1282 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1284 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1285 {
	int id;
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1287 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1288 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1290 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
struct S1291 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT_LIST] */
struct S1292 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
struct S1293 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
struct S1295 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1297 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENT] */
struct S1298 {
	int id;
};

/* Struct for type SPECIAL [ET_CLIENT] */
struct S1299 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1300 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* modulus */
	T6 a12; /* slots_position */
	T0* a13; /* equality_tester */
	T6 a14; /* clashes_previous_position */
	T0* a15; /* key_storage */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1301 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* internal_cursor */
	T6 a4; /* count */
	T0* a5; /* item_storage */
	T6 a6; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a9; /* position */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* clashes */
	T0* a13; /* slots */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1302 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T6 a3; /* found_position */
	T0* a4; /* internal_cursor */
	T0* a5; /* key_storage */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* position */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* modulus */
	T0* a13; /* equality_tester */
	T6 a14; /* slots_position */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* clashes */
	T0* a17; /* slots */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1303 {
	int id;
	T0* a1; /* internal_cursor */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T0* a4; /* key_storage */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T0* a10; /* equality_tester */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T0* a13; /* clashes */
	T6 a14; /* modulus */
	T0* a15; /* slots */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1304 {
	int id;
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1305 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* found_position */
	T0* a3; /* item_storage */
	T6 a4; /* modulus */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* internal_cursor */
	T0* a9; /* equality_tester */
	T6 a10; /* count */
	T6 a11; /* slots_position */
	T0* a12; /* special_item_routines */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T6 a15; /* clashes_previous_position */
	T0* a16; /* hash_function */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1307 {
	int id;
	T6 a1; /* found_position */
	T0* a2; /* item_storage */
	T0* a3; /* key_equality_tester */
	T0* a4; /* internal_keys */
	T6 a5; /* count */
	T6 a6; /* last_position */
	T6 a7; /* free_slot */
	T6 a8; /* position */
	T6 a9; /* capacity */
	T6 a10; /* slots_position */
	T0* a11; /* equality_tester */
	T0* a12; /* internal_cursor */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* special_item_routines */
	T0* a19; /* special_key_routines */
	T0* a20; /* hash_function */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
struct S1308 {
	int id;
	T0* a1; /* cycle */
	T0* a2; /* counts */
	T0* a3; /* successors */
	T0* a4; /* items */
	T0* a5; /* sorted_items */
	T0* a6; /* indexes */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1309 {
	int id;
	T0* a1; /* flattened_feature */
	T0* a2; /* parent_feature */
	T6 a3; /* first_seed */
	T0* a4; /* other_seeds */
	T0* a5; /* next */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type SPECIAL [YY_BUFFER] */
struct S1310 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [YY_BUFFER] */
struct S1311 {
	int id;
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1313 {
	int id;
	T6 a1; /* count */
	T0* a2; /* last_cell */
	T0* a3; /* internal_cursor */
	T0* a4; /* first_cell */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1314 {
	int id;
	T1 a1; /* before */
	T0* a2; /* current_cell */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T1 a5; /* after */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
struct S1316 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1317 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1318 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1319 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
struct S1328 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
struct S1329 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1330 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_SEARCHER */
struct S1331 {
	int id;
	T0* a1; /* deltas */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S1332 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S1333 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S1334 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* filename */
	T0* a6; /* position */
	T1 a7; /* ise_reported */
	T1 a8; /* ise_fatal */
	T1 a9; /* se_reported */
	T1 a10; /* se_fatal */
	T1 a11; /* ve_reported */
	T1 a12; /* ve_fatal */
	T1 a13; /* ge_reported */
	T1 a14; /* ge_fatal */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1336 {
	int id;
	T6 a1; /* position */
	T0* a2; /* item_storage */
	T0* a3; /* equality_tester */
	T6 a4; /* last_position */
	T6 a5; /* capacity */
	T6 a6; /* slots_position */
	T6 a7; /* count */
	T6 a8; /* modulus */
	T6 a9; /* clashes_previous_position */
	T6 a10; /* free_slot */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* clashes */
	T0* a14; /* slots */
	T0* a15; /* special_item_routines */
	T0* a16; /* hash_function */
};

/* Struct for type XM_COMMENT */
struct S1337 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1338 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1339 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type XM_NAMESPACE */
struct S1340 {
	int id;
	T0* a1; /* uri */
	T0* a2; /* ns_prefix */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
struct S1341 {
	int id;
	T6 a1; /* count */
	T6 a2; /* capacity */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T0* a5; /* internal_cursor */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S1342 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a3; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S1343 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* name_item */
	T1 a3; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S1344 {
	int id;
	T0* a1; /* declared_type */
	T0* a2; /* label_item */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S1345 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type ET_FEATURE_LIST */
struct S1349 {
	int id;
	T0* a1; /* storage */
	T6 a2; /* count */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1351 {
	int id;
	T0* a1; /* next */
	T0* a2; /* precursor_feature */
	T0* a3; /* parent */
	T0* a4; /* new_name */
	T0* a5; /* undefine_name */
	T0* a6; /* redefine_name */
	T0* a7; /* select_name */
	T0* a8; /* merged_feature */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1352 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1353 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1354 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_FEATURE_IDS */
struct S1356 {
	int id;
	T6 a1; /* count */
	T0* a2; /* feature_ids */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1362 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1365 {
	int id;
	T6 a1; /* compressed_position */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1366 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1376 {
	int id;
	T6 a1; /* index */
	T0* a2; /* agent_expression */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1380 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1381 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1382 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a5; /* count */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1384 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
struct S1385 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1386 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a2; /* first_cell */
	T0* a3; /* last_cell */
	T6 a4; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1387 {
	int id;
	T1 a1; /* after */
	T0* a2; /* current_cell */
	T0* a3; /* container */
	T1 a4; /* before */
	T0* a5; /* next_cursor */
};

/* Struct for type SPECIAL [ARRAY [INTEGER_32]] */
struct S1388 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
struct S1389 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1391 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
struct S1392 {
	int id;
};

/* Struct for type SPECIAL [ET_CLUSTER] */
struct S1393 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
struct S1394 {
	int id;
	T0* a1; /* container */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1395 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S1396 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [CHARACTER_8] */
struct S1397 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TO_SPECIAL [ET_XACE_CLUSTER] */
struct S1398 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ADAPTED_LIBRARY] */
struct S1400 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIBRARY] */
struct S1401 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY] */
struct S1403 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY] */
struct S1405 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S1406 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
struct S1408 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
struct S1410 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS] */
struct S1411 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1412 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T0* a5; /* equality_tester */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T0* a8; /* internal_cursor */
	T6 a9; /* found_position */
	T0* a10; /* item_storage */
	T0* a11; /* key_storage */
	T0* a12; /* clashes */
	T6 a13; /* modulus */
	T0* a14; /* slots */
	T6 a15; /* capacity */
	T0* a16; /* special_item_routines */
	T0* a17; /* special_key_routines */
	T6 a18; /* slots_position */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1413 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1414 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S1415 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1416 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLIENT_LIST] */
struct S1417 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
struct S1418 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLIENT] */
struct S1419 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1420 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1421 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S1423 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1425 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1426 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1427 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S1428 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1430 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1431 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1433 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1435 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1436 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1437 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1438 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1439 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1441 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1443 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1444 {
	int id;
};

/* Struct for type DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1446 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a4; /* position */
	T6 a5; /* modulus */
	T6 a6; /* capacity */
	T6 a7; /* slots_position */
	T0* a8; /* equality_tester */
	T0* a9; /* key_equality_tester */
	T0* a10; /* internal_keys */
	T0* a11; /* internal_cursor */
	T6 a12; /* found_position */
	T0* a13; /* item_storage */
	T0* a14; /* key_storage */
	T0* a15; /* clashes */
	T0* a16; /* slots */
	T0* a17; /* special_item_routines */
	T0* a18; /* special_key_routines */
	T6 a19; /* clashes_previous_position */
	T0* a20; /* hash_function */
};

/* Struct for type TO_SPECIAL [YY_BUFFER] */
struct S1447 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
struct S1448 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
struct S1451 {
	int id;
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1452 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1453 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type STD_FILES */
struct S1459 {
	int id;
	T0* a1; /* default_output */
};

/* Struct for type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
struct S1461 {
	int id;
	T0* z1;
	T6 z2;
	T0* z3;
	T0* z4;
	T1 z5;
};

/* Struct for type PLATFORM */
struct S1462 {
	int id;
};

/* Struct for type DS_LINKABLE [XM_NODE] */
struct S1464 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type XM_NODE_TYPER */
struct S1465 {
	int id;
	T0* a1; /* element */
	T0* a2; /* xml_attribute */
	T0* a3; /* composite */
	T0* a4; /* document */
	T0* a5; /* character_data */
	T0* a6; /* processing_instruction */
	T0* a7; /* comment */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1471 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1472 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1475 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1478 {
	int id;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1481 {
	int id;
	T1 a1; /* end_of_input */
	T2 a2; /* last_character */
	T0* a3; /* string */
	T6 a4; /* location */
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1491 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1492 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1493 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1494 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
struct S1495 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
struct S1496 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
struct S1497 {
	int id;
	T0* a1; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1498 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1499 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1501 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1502 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1503 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1504 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1505 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1506 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1507 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1508 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
struct S1509 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
struct S1510 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type TO_SPECIAL [ET_CLUSTER] */
struct S1511 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY] */
struct S1512 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
struct S1513 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1516 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1518 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1522 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1523 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1524 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
struct S1525 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1526 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1527 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1528 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1529 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1531 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1533 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_CONVERT_EXPRESSION */
struct S1539 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1540 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1544 {
	int id;
	T6 a1; /* index */
	T0* a2; /* expression */
	T0* a3; /* type */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1548 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1549 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a3; /* index */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1555 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_NAMESPACE] */
struct S1556 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
struct S1557 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TARGET] */
struct S1558 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_FEATURE] */
struct S1559 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1560 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
struct S1563 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
struct S1568 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1569 {
	int id;
	T0* a1; /* default_template */
	T0* a2; /* parameters */
	T0* a3; /* code */
	T0* a4; /* etl_code */
	T0* a5; /* assembly */
};

/* Struct for type CONSOLE */
struct S1575 {
	int id;
	T14 a1; /* file_pointer */
	T0* a2; /* name */
	T6 a3; /* mode */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1576 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1577 {
	int id;
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1581 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1582 {
	int id;
	T0* a1; /* area */
};

typedef struct {
	int id;
	EIF_INTEGER type_id;
	EIF_BOOLEAN is_special;
	void (*dispose) (EIF_REFERENCE);
} EIF_TYPE;


extern T1 GE_default1;
extern T2 GE_default2;
extern T3 GE_default3;
extern T4 GE_default4;
extern T5 GE_default5;
extern T6 GE_default6;
extern T7 GE_default7;
extern T8 GE_default8;
extern T9 GE_default9;
extern T10 GE_default10;
extern T11 GE_default11;
extern T12 GE_default12;
extern T13 GE_default13;
extern T14 GE_default14;
extern T15 GE_default15;
extern T17 GE_default17;
extern T21 GE_default21;
extern T22 GE_default22;
extern T23 GE_default23;
extern T24 GE_default24;
extern T25 GE_default25;
extern T26 GE_default26;
extern T28 GE_default28;
extern T29 GE_default29;
extern T30 GE_default30;
extern T31 GE_default31;
extern T32 GE_default32;
extern T33 GE_default33;
extern T35 GE_default35;
extern T36 GE_default36;
extern T37 GE_default37;
extern T41 GE_default41;
extern T43 GE_default43;
extern T44 GE_default44;
extern T45 GE_default45;
extern T46 GE_default46;
extern T48 GE_default48;
extern T49 GE_default49;
extern T50 GE_default50;
extern T53 GE_default53;
extern T54 GE_default54;
extern T55 GE_default55;
extern T56 GE_default56;
extern T57 GE_default57;
extern T58 GE_default58;
extern T60 GE_default60;
extern T61 GE_default61;
extern T62 GE_default62;
extern T63 GE_default63;
extern T64 GE_default64;
extern T66 GE_default66;
extern T68 GE_default68;
extern T69 GE_default69;
extern T70 GE_default70;
extern T71 GE_default71;
extern T72 GE_default72;
extern T74 GE_default74;
extern T75 GE_default75;
extern T76 GE_default76;
extern T77 GE_default77;
extern T78 GE_default78;
extern T79 GE_default79;
extern T80 GE_default80;
extern T81 GE_default81;
extern T82 GE_default82;
extern T83 GE_default83;
extern T84 GE_default84;
extern T85 GE_default85;
extern T86 GE_default86;
extern T88 GE_default88;
extern T89 GE_default89;
extern T93 GE_default93;
extern T96 GE_default96;
extern T97 GE_default97;
extern T98 GE_default98;
extern T99 GE_default99;
extern T100 GE_default100;
extern T101 GE_default101;
extern T103 GE_default103;
extern T104 GE_default104;
extern T105 GE_default105;
extern T106 GE_default106;
extern T107 GE_default107;
extern T108 GE_default108;
extern T109 GE_default109;
extern T110 GE_default110;
extern T111 GE_default111;
extern T114 GE_default114;
extern T115 GE_default115;
extern T117 GE_default117;
extern T118 GE_default118;
extern T119 GE_default119;
extern T120 GE_default120;
extern T121 GE_default121;
extern T122 GE_default122;
extern T123 GE_default123;
extern T124 GE_default124;
extern T125 GE_default125;
extern T126 GE_default126;
extern T127 GE_default127;
extern T128 GE_default128;
extern T129 GE_default129;
extern T131 GE_default131;
extern T132 GE_default132;
extern T133 GE_default133;
extern T134 GE_default134;
extern T135 GE_default135;
extern T136 GE_default136;
extern T137 GE_default137;
extern T138 GE_default138;
extern T139 GE_default139;
extern T140 GE_default140;
extern T141 GE_default141;
extern T142 GE_default142;
extern T143 GE_default143;
extern T144 GE_default144;
extern T145 GE_default145;
extern T146 GE_default146;
extern T147 GE_default147;
extern T148 GE_default148;
extern T149 GE_default149;
extern T150 GE_default150;
extern T151 GE_default151;
extern T152 GE_default152;
extern T153 GE_default153;
extern T154 GE_default154;
extern T155 GE_default155;
extern T156 GE_default156;
extern T157 GE_default157;
extern T158 GE_default158;
extern T159 GE_default159;
extern T160 GE_default160;
extern T161 GE_default161;
extern T163 GE_default163;
extern T164 GE_default164;
extern T165 GE_default165;
extern T166 GE_default166;
extern T167 GE_default167;
extern T174 GE_default174;
extern T175 GE_default175;
extern T176 GE_default176;
extern T177 GE_default177;
extern T179 GE_default179;
extern T182 GE_default182;
extern T184 GE_default184;
extern T185 GE_default185;
extern T186 GE_default186;
extern T187 GE_default187;
extern T188 GE_default188;
extern T189 GE_default189;
extern T190 GE_default190;
extern T191 GE_default191;
extern T192 GE_default192;
extern T193 GE_default193;
extern T194 GE_default194;
extern T195 GE_default195;
extern T196 GE_default196;
extern T197 GE_default197;
extern T198 GE_default198;
extern T199 GE_default199;
extern T200 GE_default200;
extern T201 GE_default201;
extern T203 GE_default203;
extern T204 GE_default204;
extern T205 GE_default205;
extern T208 GE_default208;
extern T209 GE_default209;
extern T210 GE_default210;
extern T211 GE_default211;
extern T212 GE_default212;
extern T213 GE_default213;
extern T214 GE_default214;
extern T215 GE_default215;
extern T216 GE_default216;
extern T217 GE_default217;
extern T218 GE_default218;
extern T219 GE_default219;
extern T220 GE_default220;
extern T221 GE_default221;
extern T222 GE_default222;
extern T223 GE_default223;
extern T224 GE_default224;
extern T225 GE_default225;
extern T226 GE_default226;
extern T227 GE_default227;
extern T228 GE_default228;
extern T229 GE_default229;
extern T230 GE_default230;
extern T231 GE_default231;
extern T235 GE_default235;
extern T237 GE_default237;
extern T242 GE_default242;
extern T243 GE_default243;
extern T245 GE_default245;
extern T248 GE_default248;
extern T251 GE_default251;
extern T255 GE_default255;
extern T256 GE_default256;
extern T258 GE_default258;
extern T259 GE_default259;
extern T263 GE_default263;
extern T265 GE_default265;
extern T266 GE_default266;
extern T267 GE_default267;
extern T268 GE_default268;
extern T269 GE_default269;
extern T270 GE_default270;
extern T272 GE_default272;
extern T273 GE_default273;
extern T275 GE_default275;
extern T276 GE_default276;
extern T277 GE_default277;
extern T278 GE_default278;
extern T279 GE_default279;
extern T280 GE_default280;
extern T281 GE_default281;
extern T282 GE_default282;
extern T284 GE_default284;
extern T286 GE_default286;
extern T287 GE_default287;
extern T288 GE_default288;
extern T291 GE_default291;
extern T293 GE_default293;
extern T294 GE_default294;
extern T295 GE_default295;
extern T296 GE_default296;
extern T297 GE_default297;
extern T298 GE_default298;
extern T299 GE_default299;
extern T301 GE_default301;
extern T302 GE_default302;
extern T305 GE_default305;
extern T306 GE_default306;
extern T307 GE_default307;
extern T308 GE_default308;
extern T309 GE_default309;
extern T310 GE_default310;
extern T311 GE_default311;
extern T313 GE_default313;
extern T314 GE_default314;
extern T316 GE_default316;
extern T317 GE_default317;
extern T318 GE_default318;
extern T319 GE_default319;
extern T320 GE_default320;
extern T321 GE_default321;
extern T322 GE_default322;
extern T323 GE_default323;
extern T324 GE_default324;
extern T325 GE_default325;
extern T326 GE_default326;
extern T327 GE_default327;
extern T328 GE_default328;
extern T329 GE_default329;
extern T330 GE_default330;
extern T332 GE_default332;
extern T334 GE_default334;
extern T335 GE_default335;
extern T339 GE_default339;
extern T340 GE_default340;
extern T343 GE_default343;
extern T344 GE_default344;
extern T346 GE_default346;
extern T347 GE_default347;
extern T348 GE_default348;
extern T349 GE_default349;
extern T350 GE_default350;
extern T351 GE_default351;
extern T353 GE_default353;
extern T355 GE_default355;
extern T358 GE_default358;
extern T359 GE_default359;
extern T360 GE_default360;
extern T361 GE_default361;
extern T362 GE_default362;
extern T363 GE_default363;
extern T364 GE_default364;
extern T366 GE_default366;
extern T369 GE_default369;
extern T370 GE_default370;
extern T371 GE_default371;
extern T373 GE_default373;
extern T374 GE_default374;
extern T375 GE_default375;
extern T376 GE_default376;
extern T377 GE_default377;
extern T378 GE_default378;
extern T379 GE_default379;
extern T380 GE_default380;
extern T381 GE_default381;
extern T382 GE_default382;
extern T383 GE_default383;
extern T384 GE_default384;
extern T385 GE_default385;
extern T386 GE_default386;
extern T389 GE_default389;
extern T391 GE_default391;
extern T392 GE_default392;
extern T393 GE_default393;
extern T394 GE_default394;
extern T395 GE_default395;
extern T397 GE_default397;
extern T398 GE_default398;
extern T399 GE_default399;
extern T401 GE_default401;
extern T402 GE_default402;
extern T403 GE_default403;
extern T404 GE_default404;
extern T405 GE_default405;
extern T406 GE_default406;
extern T407 GE_default407;
extern T408 GE_default408;
extern T409 GE_default409;
extern T410 GE_default410;
extern T411 GE_default411;
extern T412 GE_default412;
extern T413 GE_default413;
extern T414 GE_default414;
extern T415 GE_default415;
extern T416 GE_default416;
extern T417 GE_default417;
extern T418 GE_default418;
extern T419 GE_default419;
extern T420 GE_default420;
extern T422 GE_default422;
extern T424 GE_default424;
extern T425 GE_default425;
extern T426 GE_default426;
extern T427 GE_default427;
extern T428 GE_default428;
extern T429 GE_default429;
extern T430 GE_default430;
extern T432 GE_default432;
extern T433 GE_default433;
extern T435 GE_default435;
extern T436 GE_default436;
extern T437 GE_default437;
extern T438 GE_default438;
extern T439 GE_default439;
extern T442 GE_default442;
extern T444 GE_default444;
extern T445 GE_default445;
extern T446 GE_default446;
extern T447 GE_default447;
extern T448 GE_default448;
extern T449 GE_default449;
extern T450 GE_default450;
extern T451 GE_default451;
extern T452 GE_default452;
extern T453 GE_default453;
extern T454 GE_default454;
extern T456 GE_default456;
extern T458 GE_default458;
extern T459 GE_default459;
extern T460 GE_default460;
extern T461 GE_default461;
extern T462 GE_default462;
extern T463 GE_default463;
extern T464 GE_default464;
extern T465 GE_default465;
extern T466 GE_default466;
extern T467 GE_default467;
extern T469 GE_default469;
extern T470 GE_default470;
extern T472 GE_default472;
extern T473 GE_default473;
extern T477 GE_default477;
extern T478 GE_default478;
extern T479 GE_default479;
extern T480 GE_default480;
extern T482 GE_default482;
extern T483 GE_default483;
extern T484 GE_default484;
extern T485 GE_default485;
extern T487 GE_default487;
extern T489 GE_default489;
extern T490 GE_default490;
extern T491 GE_default491;
extern T492 GE_default492;
extern T494 GE_default494;
extern T496 GE_default496;
extern T497 GE_default497;
extern T498 GE_default498;
extern T499 GE_default499;
extern T501 GE_default501;
extern T502 GE_default502;
extern T503 GE_default503;
extern T504 GE_default504;
extern T505 GE_default505;
extern T506 GE_default506;
extern T507 GE_default507;
extern T508 GE_default508;
extern T510 GE_default510;
extern T511 GE_default511;
extern T512 GE_default512;
extern T513 GE_default513;
extern T515 GE_default515;
extern T517 GE_default517;
extern T518 GE_default518;
extern T519 GE_default519;
extern T520 GE_default520;
extern T521 GE_default521;
extern T523 GE_default523;
extern T525 GE_default525;
extern T526 GE_default526;
extern T527 GE_default527;
extern T528 GE_default528;
extern T530 GE_default530;
extern T533 GE_default533;
extern T534 GE_default534;
extern T535 GE_default535;
extern T537 GE_default537;
extern T538 GE_default538;
extern T539 GE_default539;
extern T540 GE_default540;
extern T541 GE_default541;
extern T542 GE_default542;
extern T544 GE_default544;
extern T545 GE_default545;
extern T546 GE_default546;
extern T547 GE_default547;
extern T548 GE_default548;
extern T549 GE_default549;
extern T550 GE_default550;
extern T551 GE_default551;
extern T552 GE_default552;
extern T553 GE_default553;
extern T554 GE_default554;
extern T555 GE_default555;
extern T556 GE_default556;
extern T557 GE_default557;
extern T558 GE_default558;
extern T559 GE_default559;
extern T560 GE_default560;
extern T561 GE_default561;
extern T562 GE_default562;
extern T563 GE_default563;
extern T564 GE_default564;
extern T567 GE_default567;
extern T568 GE_default568;
extern T569 GE_default569;
extern T570 GE_default570;
extern T571 GE_default571;
extern T572 GE_default572;
extern T573 GE_default573;
extern T574 GE_default574;
extern T575 GE_default575;
extern T576 GE_default576;
extern T577 GE_default577;
extern T578 GE_default578;
extern T579 GE_default579;
extern T580 GE_default580;
extern T581 GE_default581;
extern T584 GE_default584;
extern T585 GE_default585;
extern T586 GE_default586;
extern T587 GE_default587;
extern T590 GE_default590;
extern T591 GE_default591;
extern T592 GE_default592;
extern T593 GE_default593;
extern T594 GE_default594;
extern T595 GE_default595;
extern T596 GE_default596;
extern T599 GE_default599;
extern T600 GE_default600;
extern T601 GE_default601;
extern T603 GE_default603;
extern T604 GE_default604;
extern T610 GE_default610;
extern T611 GE_default611;
extern T612 GE_default612;
extern T613 GE_default613;
extern T614 GE_default614;
extern T615 GE_default615;
extern T616 GE_default616;
extern T617 GE_default617;
extern T618 GE_default618;
extern T620 GE_default620;
extern T622 GE_default622;
extern T623 GE_default623;
extern T624 GE_default624;
extern T625 GE_default625;
extern T626 GE_default626;
extern T627 GE_default627;
extern T628 GE_default628;
extern T629 GE_default629;
extern T630 GE_default630;
extern T631 GE_default631;
extern T632 GE_default632;
extern T634 GE_default634;
extern T635 GE_default635;
extern T636 GE_default636;
extern T637 GE_default637;
extern T638 GE_default638;
extern T639 GE_default639;
extern T640 GE_default640;
extern T641 GE_default641;
extern T644 GE_default644;
extern T645 GE_default645;
extern T647 GE_default647;
extern T648 GE_default648;
extern T649 GE_default649;
extern T650 GE_default650;
extern T651 GE_default651;
extern T652 GE_default652;
extern T653 GE_default653;
extern T654 GE_default654;
extern T655 GE_default655;
extern T656 GE_default656;
extern T657 GE_default657;
extern T658 GE_default658;
extern T659 GE_default659;
extern T660 GE_default660;
extern T661 GE_default661;
extern T663 GE_default663;
extern T664 GE_default664;
extern T666 GE_default666;
extern T667 GE_default667;
extern T669 GE_default669;
extern T670 GE_default670;
extern T671 GE_default671;
extern T672 GE_default672;
extern T673 GE_default673;
extern T674 GE_default674;
extern T675 GE_default675;
extern T677 GE_default677;
extern T678 GE_default678;
extern T679 GE_default679;
extern T680 GE_default680;
extern T681 GE_default681;
extern T682 GE_default682;
extern T683 GE_default683;
extern T685 GE_default685;
extern T686 GE_default686;
extern T687 GE_default687;
extern T688 GE_default688;
extern T689 GE_default689;
extern T690 GE_default690;
extern T691 GE_default691;
extern T692 GE_default692;
extern T693 GE_default693;
extern T694 GE_default694;
extern T695 GE_default695;
extern T696 GE_default696;
extern T697 GE_default697;
extern T698 GE_default698;
extern T699 GE_default699;
extern T700 GE_default700;
extern T701 GE_default701;
extern T702 GE_default702;
extern T703 GE_default703;
extern T704 GE_default704;
extern T705 GE_default705;
extern T706 GE_default706;
extern T707 GE_default707;
extern T708 GE_default708;
extern T709 GE_default709;
extern T710 GE_default710;
extern T711 GE_default711;
extern T712 GE_default712;
extern T713 GE_default713;
extern T715 GE_default715;
extern T716 GE_default716;
extern T717 GE_default717;
extern T718 GE_default718;
extern T720 GE_default720;
extern T722 GE_default722;
extern T723 GE_default723;
extern T724 GE_default724;
extern T725 GE_default725;
extern T726 GE_default726;
extern T727 GE_default727;
extern T728 GE_default728;
extern T729 GE_default729;
extern T730 GE_default730;
extern T731 GE_default731;
extern T733 GE_default733;
extern T735 GE_default735;
extern T737 GE_default737;
extern T741 GE_default741;
extern T742 GE_default742;
extern T744 GE_default744;
extern T745 GE_default745;
extern T746 GE_default746;
extern T747 GE_default747;
extern T748 GE_default748;
extern T749 GE_default749;
extern T750 GE_default750;
extern T751 GE_default751;
extern T752 GE_default752;
extern T753 GE_default753;
extern T754 GE_default754;
extern T756 GE_default756;
extern T757 GE_default757;
extern T759 GE_default759;
extern T760 GE_default760;
extern T761 GE_default761;
extern T762 GE_default762;
extern T763 GE_default763;
extern T764 GE_default764;
extern T766 GE_default766;
extern T767 GE_default767;
extern T768 GE_default768;
extern T769 GE_default769;
extern T770 GE_default770;
extern T772 GE_default772;
extern T773 GE_default773;
extern T774 GE_default774;
extern T775 GE_default775;
extern T777 GE_default777;
extern T778 GE_default778;
extern T779 GE_default779;
extern T780 GE_default780;
extern T781 GE_default781;
extern T782 GE_default782;
extern T783 GE_default783;
extern T784 GE_default784;
extern T785 GE_default785;
extern T786 GE_default786;
extern T787 GE_default787;
extern T788 GE_default788;
extern T789 GE_default789;
extern T790 GE_default790;
extern T791 GE_default791;
extern T793 GE_default793;
extern T794 GE_default794;
extern T795 GE_default795;
extern T796 GE_default796;
extern T797 GE_default797;
extern T798 GE_default798;
extern T800 GE_default800;
extern T801 GE_default801;
extern T802 GE_default802;
extern T803 GE_default803;
extern T804 GE_default804;
extern T805 GE_default805;
extern T807 GE_default807;
extern T808 GE_default808;
extern T809 GE_default809;
extern T810 GE_default810;
extern T811 GE_default811;
extern T812 GE_default812;
extern T813 GE_default813;
extern T814 GE_default814;
extern T815 GE_default815;
extern T816 GE_default816;
extern T817 GE_default817;
extern T819 GE_default819;
extern T821 GE_default821;
extern T822 GE_default822;
extern T824 GE_default824;
extern T825 GE_default825;
extern T826 GE_default826;
extern T827 GE_default827;
extern T828 GE_default828;
extern T830 GE_default830;
extern T831 GE_default831;
extern T832 GE_default832;
extern T833 GE_default833;
extern T834 GE_default834;
extern T837 GE_default837;
extern T838 GE_default838;
extern T839 GE_default839;
extern T840 GE_default840;
extern T841 GE_default841;
extern T842 GE_default842;
extern T843 GE_default843;
extern T844 GE_default844;
extern T845 GE_default845;
extern T846 GE_default846;
extern T847 GE_default847;
extern T848 GE_default848;
extern T851 GE_default851;
extern T852 GE_default852;
extern T853 GE_default853;
extern T854 GE_default854;
extern T855 GE_default855;
extern T856 GE_default856;
extern T857 GE_default857;
extern T858 GE_default858;
extern T859 GE_default859;
extern T860 GE_default860;
extern T861 GE_default861;
extern T862 GE_default862;
extern T863 GE_default863;
extern T864 GE_default864;
extern T865 GE_default865;
extern T866 GE_default866;
extern T868 GE_default868;
extern T869 GE_default869;
extern T871 GE_default871;
extern T872 GE_default872;
extern T873 GE_default873;
extern T875 GE_default875;
extern T876 GE_default876;
extern T877 GE_default877;
extern T879 GE_default879;
extern T880 GE_default880;
extern T881 GE_default881;
extern T882 GE_default882;
extern T883 GE_default883;
extern T884 GE_default884;
extern T885 GE_default885;
extern T886 GE_default886;
extern T887 GE_default887;
extern T888 GE_default888;
extern T889 GE_default889;
extern T890 GE_default890;
extern T891 GE_default891;
extern T892 GE_default892;
extern T894 GE_default894;
extern T895 GE_default895;
extern T896 GE_default896;
extern T898 GE_default898;
extern T899 GE_default899;
extern T900 GE_default900;
extern T901 GE_default901;
extern T902 GE_default902;
extern T903 GE_default903;
extern T904 GE_default904;
extern T905 GE_default905;
extern T906 GE_default906;
extern T907 GE_default907;
extern T908 GE_default908;
extern T909 GE_default909;
extern T911 GE_default911;
extern T912 GE_default912;
extern T913 GE_default913;
extern T914 GE_default914;
extern T916 GE_default916;
extern T917 GE_default917;
extern T918 GE_default918;
extern T920 GE_default920;
extern T921 GE_default921;
extern T922 GE_default922;
extern T923 GE_default923;
extern T924 GE_default924;
extern T925 GE_default925;
extern T926 GE_default926;
extern T927 GE_default927;
extern T928 GE_default928;
extern T929 GE_default929;
extern T930 GE_default930;
extern T931 GE_default931;
extern T932 GE_default932;
extern T933 GE_default933;
extern T934 GE_default934;
extern T935 GE_default935;
extern T936 GE_default936;
extern T937 GE_default937;
extern T938 GE_default938;
extern T940 GE_default940;
extern T942 GE_default942;
extern T943 GE_default943;
extern T945 GE_default945;
extern T946 GE_default946;
extern T947 GE_default947;
extern T948 GE_default948;
extern T949 GE_default949;
extern T950 GE_default950;
extern T951 GE_default951;
extern T952 GE_default952;
extern T953 GE_default953;
extern T954 GE_default954;
extern T956 GE_default956;
extern T957 GE_default957;
extern T958 GE_default958;
extern T960 GE_default960;
extern T961 GE_default961;
extern T962 GE_default962;
extern T963 GE_default963;
extern T964 GE_default964;
extern T965 GE_default965;
extern T966 GE_default966;
extern T967 GE_default967;
extern T968 GE_default968;
extern T969 GE_default969;
extern T970 GE_default970;
extern T971 GE_default971;
extern T972 GE_default972;
extern T973 GE_default973;
extern T974 GE_default974;
extern T975 GE_default975;
extern T976 GE_default976;
extern T977 GE_default977;
extern T978 GE_default978;
extern T979 GE_default979;
extern T980 GE_default980;
extern T981 GE_default981;
extern T982 GE_default982;
extern T983 GE_default983;
extern T984 GE_default984;
extern T985 GE_default985;
extern T986 GE_default986;
extern T987 GE_default987;
extern T988 GE_default988;
extern T989 GE_default989;
extern T990 GE_default990;
extern T991 GE_default991;
extern T992 GE_default992;
extern T993 GE_default993;
extern T994 GE_default994;
extern T995 GE_default995;
extern T996 GE_default996;
extern T997 GE_default997;
extern T998 GE_default998;
extern T999 GE_default999;
extern T1000 GE_default1000;
extern T1001 GE_default1001;
extern T1002 GE_default1002;
extern T1003 GE_default1003;
extern T1004 GE_default1004;
extern T1005 GE_default1005;
extern T1006 GE_default1006;
extern T1008 GE_default1008;
extern T1009 GE_default1009;
extern T1010 GE_default1010;
extern T1011 GE_default1011;
extern T1013 GE_default1013;
extern T1014 GE_default1014;
extern T1015 GE_default1015;
extern T1016 GE_default1016;
extern T1017 GE_default1017;
extern T1018 GE_default1018;
extern T1019 GE_default1019;
extern T1021 GE_default1021;
extern T1022 GE_default1022;
extern T1024 GE_default1024;
extern T1025 GE_default1025;
extern T1026 GE_default1026;
extern T1027 GE_default1027;
extern T1028 GE_default1028;
extern T1029 GE_default1029;
extern T1030 GE_default1030;
extern T1031 GE_default1031;
extern T1032 GE_default1032;
extern T1033 GE_default1033;
extern T1034 GE_default1034;
extern T1036 GE_default1036;
extern T1037 GE_default1037;
extern T1038 GE_default1038;
extern T1039 GE_default1039;
extern T1040 GE_default1040;
extern T1041 GE_default1041;
extern T1042 GE_default1042;
extern T1043 GE_default1043;
extern T1044 GE_default1044;
extern T1045 GE_default1045;
extern T1047 GE_default1047;
extern T1048 GE_default1048;
extern T1049 GE_default1049;
extern T1050 GE_default1050;
extern T1051 GE_default1051;
extern T1052 GE_default1052;
extern T1053 GE_default1053;
extern T1054 GE_default1054;
extern T1055 GE_default1055;
extern T1056 GE_default1056;
extern T1058 GE_default1058;
extern T1060 GE_default1060;
extern T1061 GE_default1061;
extern T1062 GE_default1062;
extern T1063 GE_default1063;
extern T1064 GE_default1064;
extern T1065 GE_default1065;
extern T1066 GE_default1066;
extern T1067 GE_default1067;
extern T1068 GE_default1068;
extern T1069 GE_default1069;
extern T1070 GE_default1070;
extern T1071 GE_default1071;
extern T1072 GE_default1072;
extern T1073 GE_default1073;
extern T1074 GE_default1074;
extern T1075 GE_default1075;
extern T1076 GE_default1076;
extern T1078 GE_default1078;
extern T1079 GE_default1079;
extern T1080 GE_default1080;
extern T1081 GE_default1081;
extern T1082 GE_default1082;
extern T1083 GE_default1083;
extern T1084 GE_default1084;
extern T1085 GE_default1085;
extern T1086 GE_default1086;
extern T1087 GE_default1087;
extern T1088 GE_default1088;
extern T1089 GE_default1089;
extern T1090 GE_default1090;
extern T1091 GE_default1091;
extern T1092 GE_default1092;
extern T1093 GE_default1093;
extern T1094 GE_default1094;
extern T1095 GE_default1095;
extern T1096 GE_default1096;
extern T1097 GE_default1097;
extern T1098 GE_default1098;
extern T1099 GE_default1099;
extern T1100 GE_default1100;
extern T1101 GE_default1101;
extern T1102 GE_default1102;
extern T1103 GE_default1103;
extern T1105 GE_default1105;
extern T1106 GE_default1106;
extern T1107 GE_default1107;
extern T1108 GE_default1108;
extern T1110 GE_default1110;
extern T1111 GE_default1111;
extern T1112 GE_default1112;
extern T1113 GE_default1113;
extern T1114 GE_default1114;
extern T1115 GE_default1115;
extern T1116 GE_default1116;
extern T1117 GE_default1117;
extern T1118 GE_default1118;
extern T1120 GE_default1120;
extern T1122 GE_default1122;
extern T1123 GE_default1123;
extern T1124 GE_default1124;
extern T1125 GE_default1125;
extern T1126 GE_default1126;
extern T1127 GE_default1127;
extern T1128 GE_default1128;
extern T1133 GE_default1133;
extern T1135 GE_default1135;
extern T1136 GE_default1136;
extern T1141 GE_default1141;
extern T1142 GE_default1142;
extern T1143 GE_default1143;
extern T1144 GE_default1144;
extern T1145 GE_default1145;
extern T1147 GE_default1147;
extern T1148 GE_default1148;
extern T1149 GE_default1149;
extern T1150 GE_default1150;
extern T1151 GE_default1151;
extern T1152 GE_default1152;
extern T1153 GE_default1153;
extern T1154 GE_default1154;
extern T1155 GE_default1155;
extern T1156 GE_default1156;
extern T1157 GE_default1157;
extern T1158 GE_default1158;
extern T1159 GE_default1159;
extern T1160 GE_default1160;
extern T1161 GE_default1161;
extern T1162 GE_default1162;
extern T1163 GE_default1163;
extern T1164 GE_default1164;
extern T1165 GE_default1165;
extern T1166 GE_default1166;
extern T1167 GE_default1167;
extern T1168 GE_default1168;
extern T1169 GE_default1169;
extern T1170 GE_default1170;
extern T1171 GE_default1171;
extern T1172 GE_default1172;
extern T1173 GE_default1173;
extern T1174 GE_default1174;
extern T1175 GE_default1175;
extern T1176 GE_default1176;
extern T1177 GE_default1177;
extern T1178 GE_default1178;
extern T1179 GE_default1179;
extern T1180 GE_default1180;
extern T1181 GE_default1181;
extern T1182 GE_default1182;
extern T1183 GE_default1183;
extern T1184 GE_default1184;
extern T1185 GE_default1185;
extern T1186 GE_default1186;
extern T1187 GE_default1187;
extern T1188 GE_default1188;
extern T1189 GE_default1189;
extern T1190 GE_default1190;
extern T1191 GE_default1191;
extern T1192 GE_default1192;
extern T1193 GE_default1193;
extern T1194 GE_default1194;
extern T1195 GE_default1195;
extern T1196 GE_default1196;
extern T1197 GE_default1197;
extern T1198 GE_default1198;
extern T1199 GE_default1199;
extern T1200 GE_default1200;
extern T1201 GE_default1201;
extern T1202 GE_default1202;
extern T1203 GE_default1203;
extern T1204 GE_default1204;
extern T1205 GE_default1205;
extern T1206 GE_default1206;
extern T1207 GE_default1207;
extern T1208 GE_default1208;
extern T1209 GE_default1209;
extern T1210 GE_default1210;
extern T1211 GE_default1211;
extern T1212 GE_default1212;
extern T1213 GE_default1213;
extern T1214 GE_default1214;
extern T1215 GE_default1215;
extern T1216 GE_default1216;
extern T1217 GE_default1217;
extern T1218 GE_default1218;
extern T1219 GE_default1219;
extern T1220 GE_default1220;
extern T1221 GE_default1221;
extern T1222 GE_default1222;
extern T1223 GE_default1223;
extern T1224 GE_default1224;
extern T1225 GE_default1225;
extern T1226 GE_default1226;
extern T1227 GE_default1227;
extern T1228 GE_default1228;
extern T1229 GE_default1229;
extern T1230 GE_default1230;
extern T1231 GE_default1231;
extern T1232 GE_default1232;
extern T1233 GE_default1233;
extern T1234 GE_default1234;
extern T1235 GE_default1235;
extern T1236 GE_default1236;
extern T1237 GE_default1237;
extern T1238 GE_default1238;
extern T1239 GE_default1239;
extern T1240 GE_default1240;
extern T1241 GE_default1241;
extern T1242 GE_default1242;
extern T1243 GE_default1243;
extern T1244 GE_default1244;
extern T1245 GE_default1245;
extern T1246 GE_default1246;
extern T1247 GE_default1247;
extern T1248 GE_default1248;
extern T1249 GE_default1249;
extern T1250 GE_default1250;
extern T1251 GE_default1251;
extern T1252 GE_default1252;
extern T1253 GE_default1253;
extern T1254 GE_default1254;
extern T1255 GE_default1255;
extern T1256 GE_default1256;
extern T1257 GE_default1257;
extern T1258 GE_default1258;
extern T1259 GE_default1259;
extern T1260 GE_default1260;
extern T1261 GE_default1261;
extern T1262 GE_default1262;
extern T1263 GE_default1263;
extern T1264 GE_default1264;
extern T1265 GE_default1265;
extern T1266 GE_default1266;
extern T1267 GE_default1267;
extern T1268 GE_default1268;
extern T1269 GE_default1269;
extern T1270 GE_default1270;
extern T1271 GE_default1271;
extern T1272 GE_default1272;
extern T1273 GE_default1273;
extern T1274 GE_default1274;
extern T1275 GE_default1275;
extern T1277 GE_default1277;
extern T1279 GE_default1279;
extern T1280 GE_default1280;
extern T1282 GE_default1282;
extern T1284 GE_default1284;
extern T1285 GE_default1285;
extern T1287 GE_default1287;
extern T1288 GE_default1288;
extern T1290 GE_default1290;
extern T1291 GE_default1291;
extern T1292 GE_default1292;
extern T1293 GE_default1293;
extern T1295 GE_default1295;
extern T1297 GE_default1297;
extern T1298 GE_default1298;
extern T1299 GE_default1299;
extern T1300 GE_default1300;
extern T1301 GE_default1301;
extern T1302 GE_default1302;
extern T1303 GE_default1303;
extern T1304 GE_default1304;
extern T1305 GE_default1305;
extern T1307 GE_default1307;
extern T1308 GE_default1308;
extern T1309 GE_default1309;
extern T1310 GE_default1310;
extern T1311 GE_default1311;
extern T1313 GE_default1313;
extern T1314 GE_default1314;
extern T1316 GE_default1316;
extern T1317 GE_default1317;
extern T1318 GE_default1318;
extern T1319 GE_default1319;
extern T1328 GE_default1328;
extern T1329 GE_default1329;
extern T1330 GE_default1330;
extern T1331 GE_default1331;
extern T1332 GE_default1332;
extern T1333 GE_default1333;
extern T1334 GE_default1334;
extern T1336 GE_default1336;
extern T1337 GE_default1337;
extern T1338 GE_default1338;
extern T1339 GE_default1339;
extern T1340 GE_default1340;
extern T1341 GE_default1341;
extern T1342 GE_default1342;
extern T1343 GE_default1343;
extern T1344 GE_default1344;
extern T1345 GE_default1345;
extern T1349 GE_default1349;
extern T1351 GE_default1351;
extern T1352 GE_default1352;
extern T1353 GE_default1353;
extern T1354 GE_default1354;
extern T1356 GE_default1356;
extern T1362 GE_default1362;
extern T1364 GE_default1364;
extern T1365 GE_default1365;
extern T1366 GE_default1366;
extern T1376 GE_default1376;
extern T1380 GE_default1380;
extern T1381 GE_default1381;
extern T1382 GE_default1382;
extern T1384 GE_default1384;
extern T1385 GE_default1385;
extern T1386 GE_default1386;
extern T1387 GE_default1387;
extern T1388 GE_default1388;
extern T1389 GE_default1389;
extern T1391 GE_default1391;
extern T1392 GE_default1392;
extern T1393 GE_default1393;
extern T1394 GE_default1394;
extern T1395 GE_default1395;
extern T1396 GE_default1396;
extern T1397 GE_default1397;
extern T1398 GE_default1398;
extern T1400 GE_default1400;
extern T1401 GE_default1401;
extern T1403 GE_default1403;
extern T1405 GE_default1405;
extern T1406 GE_default1406;
extern T1408 GE_default1408;
extern T1410 GE_default1410;
extern T1411 GE_default1411;
extern T1412 GE_default1412;
extern T1413 GE_default1413;
extern T1414 GE_default1414;
extern T1415 GE_default1415;
extern T1416 GE_default1416;
extern T1417 GE_default1417;
extern T1418 GE_default1418;
extern T1419 GE_default1419;
extern T1420 GE_default1420;
extern T1421 GE_default1421;
extern T1423 GE_default1423;
extern T1425 GE_default1425;
extern T1426 GE_default1426;
extern T1427 GE_default1427;
extern T1428 GE_default1428;
extern T1430 GE_default1430;
extern T1431 GE_default1431;
extern T1433 GE_default1433;
extern T1435 GE_default1435;
extern T1436 GE_default1436;
extern T1437 GE_default1437;
extern T1438 GE_default1438;
extern T1439 GE_default1439;
extern T1441 GE_default1441;
extern T1443 GE_default1443;
extern T1444 GE_default1444;
extern T1446 GE_default1446;
extern T1447 GE_default1447;
extern T1448 GE_default1448;
extern T1451 GE_default1451;
extern T1452 GE_default1452;
extern T1453 GE_default1453;
extern T1459 GE_default1459;
extern T1461 GE_default1461;
extern T1462 GE_default1462;
extern T1464 GE_default1464;
extern T1465 GE_default1465;
extern T1471 GE_default1471;
extern T1472 GE_default1472;
extern T1475 GE_default1475;
extern T1478 GE_default1478;
extern T1481 GE_default1481;
extern T1491 GE_default1491;
extern T1492 GE_default1492;
extern T1493 GE_default1493;
extern T1494 GE_default1494;
extern T1495 GE_default1495;
extern T1496 GE_default1496;
extern T1497 GE_default1497;
extern T1498 GE_default1498;
extern T1499 GE_default1499;
extern T1501 GE_default1501;
extern T1502 GE_default1502;
extern T1503 GE_default1503;
extern T1504 GE_default1504;
extern T1505 GE_default1505;
extern T1506 GE_default1506;
extern T1507 GE_default1507;
extern T1508 GE_default1508;
extern T1509 GE_default1509;
extern T1510 GE_default1510;
extern T1511 GE_default1511;
extern T1512 GE_default1512;
extern T1513 GE_default1513;
extern T1516 GE_default1516;
extern T1518 GE_default1518;
extern T1522 GE_default1522;
extern T1523 GE_default1523;
extern T1524 GE_default1524;
extern T1525 GE_default1525;
extern T1526 GE_default1526;
extern T1527 GE_default1527;
extern T1528 GE_default1528;
extern T1529 GE_default1529;
extern T1531 GE_default1531;
extern T1533 GE_default1533;
extern T1539 GE_default1539;
extern T1540 GE_default1540;
extern T1544 GE_default1544;
extern T1548 GE_default1548;
extern T1549 GE_default1549;
extern T1555 GE_default1555;
extern T1556 GE_default1556;
extern T1557 GE_default1557;
extern T1558 GE_default1558;
extern T1559 GE_default1559;
extern T1560 GE_default1560;
extern T1563 GE_default1563;
extern T1568 GE_default1568;
extern T1569 GE_default1569;
extern T1575 GE_default1575;
extern T1576 GE_default1576;
extern T1577 GE_default1577;
extern T1581 GE_default1581;
extern T1582 GE_default1582;

extern T0* GE_ms8(char* s, T6 c);
/* Call to ANY.is_equal */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to ANY.same_type */
extern T1 T19x27T0(T0* C, T0* a1);
/* Call to ET_SYSTEM.error_handler */
extern T0* T25x2604(T0* C);
/* Call to ET_SYSTEM.interface_checker */
extern T0* T25x2788(T0* C);
/* Call to ET_SYSTEM.any_type */
extern T0* T25x2607(T0* C);
/* Call to ET_SYSTEM.any_class */
extern T0* T25x2606(T0* C);
/* Call to ET_SYSTEM.ancestor_builder */
extern T0* T25x2786(T0* C);
/* Call to ET_SYSTEM.default_create_seed */
extern T6 T25x2698(T0* C);
/* Call to ET_SYSTEM.boolean_class */
extern T0* T25x2616(T0* C);
/* Call to ET_SYSTEM.feature_flattener */
extern T0* T25x2787(T0* C);
/* Call to ET_SYSTEM.character_8_class */
extern T0* T25x2618(T0* C);
/* Call to ET_SYSTEM.character_32_class */
extern T0* T25x2620(T0* C);
/* Call to ET_SYSTEM.integer_32_class */
extern T0* T25x2630(T0* C);
/* Call to ET_SYSTEM.integer_16_class */
extern T0* T25x2628(T0* C);
/* Call to ET_SYSTEM.integer_8_class */
extern T0* T25x2626(T0* C);
/* Call to ET_SYSTEM.integer_64_class */
extern T0* T25x2632(T0* C);
/* Call to ET_SYSTEM.natural_64_class */
extern T0* T25x2641(T0* C);
/* Call to ET_SYSTEM.natural_32_class */
extern T0* T25x2639(T0* C);
/* Call to ET_SYSTEM.natural_16_class */
extern T0* T25x2637(T0* C);
/* Call to ET_SYSTEM.natural_8_class */
extern T0* T25x2635(T0* C);
/* Call to ET_SYSTEM.is_ise */
extern T1 T25x2867(T0* C);
/* Call to ET_SYSTEM.ise_version */
extern T0* T25x2868(T0* C);
/* Call to ET_SYSTEM.is_dotnet */
extern T1 T25x2601(T0* C);
/* Call to ET_SYSTEM.typed_pointer_class */
extern T0* T25x2664(T0* C);
/* Call to ET_SYSTEM.pointer_class */
extern T0* T25x2646(T0* C);
/* Call to ET_SYSTEM.real_64_class */
extern T0* T25x2652(T0* C);
/* Call to ET_SYSTEM.real_32_class */
extern T0* T25x2650(T0* C);
/* Call to ET_SYSTEM.tuple_class */
extern T0* T25x2661(T0* C);
/* Call to ET_SYSTEM.string_32_convert_feature */
extern T0* T25x2697(T0* C);
/* Call to ET_SYSTEM.string_32_class */
extern T0* T25x2657(T0* C);
/* Call to ET_SYSTEM.string_8_convert_feature */
extern T0* T25x2696(T0* C);
/* Call to ET_SYSTEM.string_8_class */
extern T0* T25x2656(T0* C);
/* Call to ET_SYSTEM.system_object_class */
extern T0* T25x2658(T0* C);
/* Call to ET_SYSTEM.eiffel_parser */
extern T0* T25x2783(T0* C);
/* Call to ET_SYSTEM.function_class */
extern T0* T25x2623(T0* C);
/* Call to ET_SYSTEM.predicate_class */
extern T0* T25x2648(T0* C);
/* Call to ET_SYSTEM.procedure_class */
extern T0* T25x2649(T0* C);
/* Call to ET_SYSTEM.tuple_type */
extern T0* T25x2662(T0* C);
/* Call to ET_SYSTEM.array_any_type */
extern T0* T25x2613(T0* C);
/* Call to ET_SYSTEM.array_class */
extern T0* T25x2612(T0* C);
/* Call to ET_SYSTEM.none_type */
extern T0* T25x2644(T0* C);
/* Call to ET_SYSTEM.bit_class */
extern T0* T25x2615(T0* C);
/* Call to ET_SYSTEM.type_class */
extern T0* T25x2663(T0* C);
/* Call to ET_SYSTEM.any_clients */
extern T0* T25x2610(T0* C);
/* Call to ET_SYSTEM.character_32_convert_feature */
extern T0* T25x2685(T0* C);
/* Call to ET_SYSTEM.character_8_convert_feature */
extern T0* T25x2684(T0* C);
/* Call to ET_SYSTEM.real_64_convert_feature */
extern T0* T25x2695(T0* C);
/* Call to ET_SYSTEM.real_32_convert_feature */
extern T0* T25x2694(T0* C);
/* Call to ET_SYSTEM.natural_64_convert_feature */
extern T0* T25x2693(T0* C);
/* Call to ET_SYSTEM.natural_32_convert_feature */
extern T0* T25x2692(T0* C);
/* Call to ET_SYSTEM.natural_16_convert_feature */
extern T0* T25x2691(T0* C);
/* Call to ET_SYSTEM.natural_8_convert_feature */
extern T0* T25x2690(T0* C);
/* Call to ET_SYSTEM.integer_64_convert_feature */
extern T0* T25x2689(T0* C);
/* Call to ET_SYSTEM.integer_32_convert_feature */
extern T0* T25x2688(T0* C);
/* Call to ET_SYSTEM.integer_16_convert_feature */
extern T0* T25x2687(T0* C);
/* Call to ET_SYSTEM.integer_8_convert_feature */
extern T0* T25x2686(T0* C);
/* Call to ET_SYSTEM.none_class */
extern T0* T25x2643(T0* C);
/* Call to ET_SYSTEM.copy_seed */
extern T6 T25x2699(T0* C);
/* Call to ET_SYSTEM.system_string_class */
extern T0* T25x2660(T0* C);
/* Call to ET_SYSTEM.any_parent */
extern T0* T25x2608(T0* C);
/* Call to ET_SYSTEM.system_object_parents */
extern T0* T25x2659(T0* C);
/* Call to ET_SYSTEM.any_parents */
extern T0* T25x2609(T0* C);
/* Call to ET_SYSTEM.unknown_builtin_reported */
extern T1 T25x2737(T0* C);
/* Call to ET_SYSTEM.use_reference_keyword */
extern T1 T25x2736(T0* C);
/* Call to ET_SYSTEM.ast_factory */
extern T0* T25x2605(T0* C);
/* Call to ET_SYSTEM.use_attribute_keyword */
extern T1 T25x2735(T0* C);
/* Call to ET_SYSTEM.flat_implementation_checker */
extern T0* T25x2790(T0* C);
/* Call to ET_SYSTEM.implementation_checker */
extern T0* T25x2789(T0* C);
/* Call to ET_SYSTEM.preparse_override_mode */
extern T1 T25x2744(T0* C);
/* Call to ET_SYSTEM.preparse_readonly_mode */
extern T1 T25x2743(T0* C);
/* Call to ET_SYSTEM.cluster_dependence_enabled */
extern T1 T25x2739(T0* C);
/* Call to ET_SYSTEM.real_64_ref_class */
extern T0* T25x2653(T0* C);
/* Call to ET_SYSTEM.real_32_ref_class */
extern T0* T25x2651(T0* C);
/* Call to ET_SYSTEM.natural_64_ref_class */
extern T0* T25x2642(T0* C);
/* Call to ET_SYSTEM.natural_32_ref_class */
extern T0* T25x2640(T0* C);
/* Call to ET_SYSTEM.natural_16_ref_class */
extern T0* T25x2638(T0* C);
/* Call to ET_SYSTEM.natural_8_ref_class */
extern T0* T25x2636(T0* C);
/* Call to ET_SYSTEM.integer_64_ref_class */
extern T0* T25x2633(T0* C);
/* Call to ET_SYSTEM.integer_32_ref_class */
extern T0* T25x2631(T0* C);
/* Call to ET_SYSTEM.integer_16_ref_class */
extern T0* T25x2629(T0* C);
/* Call to ET_SYSTEM.integer_8_ref_class */
extern T0* T25x2627(T0* C);
/* Call to ET_SYSTEM.platform_class */
extern T0* T25x2645(T0* C);
/* Call to ET_SYSTEM.identified_routines_class */
extern T0* T25x2625(T0* C);
/* Call to ET_SYSTEM.arguments_class */
extern T0* T25x2611(T0* C);
/* Call to ET_SYSTEM.pointer_ref_class */
extern T0* T25x2647(T0* C);
/* Call to ET_SYSTEM.boolean_ref_class */
extern T0* T25x2617(T0* C);
/* Call to ET_SYSTEM.character_32_ref_class */
extern T0* T25x2621(T0* C);
/* Call to ET_SYSTEM.character_8_ref_class */
extern T0* T25x2619(T0* C);
/* Call to ET_SYSTEM.special_class */
extern T0* T25x2655(T0* C);
/* Call to ET_SYSTEM.providers_enabled */
extern T1 T25x2738(T0* C);
/* Call to ET_SYSTEM.preparse_shallow_mode */
extern T1 T25x2740(T0* C);
/* Call to ET_SYSTEM.preparse_multiple_mode */
extern T1 T25x2742(T0* C);
/* Call to ET_SYSTEM.disposable_class */
extern T0* T25x2622(T0* C);
/* Call to ET_SYSTEM.routine_class */
extern T0* T25x2654(T0* C);
/* Call to ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T25x2784(T0* C);
/* Call to ET_SYSTEM.dispose_seed */
extern T6 T25x2700(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T27x1807(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T27x1796T0T6T6(T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.is_closable */
extern T1 T27x1802(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T27x1805(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T27x1808(T0* C);
/* Call to AP_OPTION.short_form */
extern T2 T38x3829(T0* C);
/* Call to AP_OPTION.long_form */
extern T0* T38x3824(T0* C);
/* Call to AP_OPTION.has_long_form */
extern T1 T38x3831(T0* C);
/* Call to AP_OPTION.description */
extern T0* T38x3822(T0* C);
/* Call to AP_OPTION.names */
extern T0* T38x3826(T0* C);
/* Call to AP_OPTION.is_hidden */
extern T1 T38x3833(T0* C);
/* Call to AP_OPTION.example */
extern T0* T38x3823(T0* C);
/* Call to AP_OPTION.name */
extern T0* T38x3825(T0* C);
/* Call to AP_OPTION.needs_parameter */
extern T1 T38x3835(T0* C);
/* Call to AP_OPTION.has_short_form */
extern T1 T38x3832(T0* C);
/* Call to AP_OPTION.allows_parameter */
extern T1 T38x3830(T0* C);
/* Call to AP_OPTION.maximum_occurrences */
extern T6 T38x3828(T0* C);
/* Call to AP_OPTION.occurrences */
extern T6 T38x3827(T0* C);
/* Call to AP_OPTION.was_found */
extern T1 T38x3837(T0* C);
/* Call to AP_OPTION.is_mandatory */
extern T1 T38x3834(T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T42x4113(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T161x13358T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T161x13337(T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T161x13333T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T161x13328(T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T161x13338(T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T161x13355T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T161x13356T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T161x13353(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T161x13375(T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T161x13345(T0* C);
/* Call to ET_DYNAMIC_TYPE.attribute_count */
extern T6 T161x13349(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T161x13329(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T161x13360T0T6T0(T0* C, T0* a1, T6 a2, T0* a3);
/* Call to ET_DYNAMIC_TYPE.meta_type */
extern T0* T161x13339(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_generic_expanded_attributes */
extern T1 T161x13352(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T161x13327(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T161x13357T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T161x13351(T0* C);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T161x22(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T161x13323(T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T161x13369(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T161x13363(T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T161x13362(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T161x13354(T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T161x13379(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T161x13330(T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T162x6550(T0* C);
/* Call to ET_BASE_TYPE.base_class */
extern T0* T162x6592(T0* C);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T162x6505T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.is_generic */
extern T1 T162x6452(T0* C);
/* Call to ET_BASE_TYPE.context_same_base_bit_type */
extern T1 T162x6615T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_base_tuple_type */
extern T1 T162x6618T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_base_class_type */
extern T1 T162x6616T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type */
extern T0* T162x6593(T0* C);
/* Call to ET_BASE_TYPE.context_is_type_reference */
extern T1 T162x6603(T0* C);
/* Call to ET_BASE_TYPE.context_conforms_from_class_type */
extern T1 T162x6622T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_conforms_from_tuple_type */
extern T1 T162x6624T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T162x6623T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_conforms_from_bit_type */
extern T1 T162x6621T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_conforms_to_type */
extern T1 T162x6619T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type_index_of_label */
extern T6 T162x6596T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.conforms_to_context */
extern T1 T162x6620T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T162x6451(T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T162x6503T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T162x6496(T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T162x6495(T0* C);
/* Call to ET_BASE_TYPE.context_same_named_bit_type */
extern T1 T162x6611T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_named_tuple_type */
extern T1 T162x6614T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_named_formal_parameter_type */
extern T1 T162x6613T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_named_class_type */
extern T1 T162x6612T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T162x6444(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T162x6541T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.position */
extern T0* T162x6556(T0* C);
/* Call to ET_BASE_TYPE.context_base_type_actual */
extern T0* T162x6594T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.context_base_type_actual_count */
extern T6 T162x6598(T0* C);
/* Call to ET_BASE_TYPE.context_named_type */
extern T0* T162x6597(T0* C);
/* Call to ET_BASE_TYPE.context_same_named_type */
extern T1 T162x6608T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.unaliased_to_text */
extern T0* T162x6552(T0* C);
/* Call to ET_BASE_TYPE.resolved_formal_parameters */
extern T0* T162x6588T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.same_syntactical_type */
extern T1 T162x6524T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T162x6455(T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T162x6526T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T168x6560(T0* C);
/* Call to ET_FEATURE_NAME.name */
extern T0* T168x12188(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T168x12189(T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T168x6556(T0* C);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T168x12190(T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T168x12195(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T168x12186T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T168x12193(T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T168x12194(T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T168x6559(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T168x22(T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T168x12226(T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T168x12227(T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T168x12216(T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T168x12196(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T169x22(T0* C);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T169x14187T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T169x14227(T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T169x14186(T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T169x14189T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T169x14150(T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T169x14146(T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T169x14149(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T169x14224(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T169x14226(T0* C);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T169x14222T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T169x14172(T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T169x14173(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T169x14209T0(T0* C, T0* a1);
/* Call to ET_QUERY.lower_name */
extern T0* T170x14145(T0* C);
/* Call to ET_QUERY.type */
extern T0* T170x14225(T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T170x14222T6(T0* C, T6 a1);
/* Call to ET_QUERY.hash_code */
extern T6 T170x22(T0* C);
/* Call to ET_QUERY.first_seed */
extern T6 T170x14227(T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T170x14175(T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T170x14282(T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T170x14187T0(T0* C, T0* a1);
/* Call to ET_QUERY.arguments_count */
extern T6 T170x14186(T0* C);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T170x14150(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T170x14146(T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T170x14149(T0* C);
/* Call to ET_QUERY.name */
extern T0* T170x14224(T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T170x14226(T0* C);
/* Call to ET_QUERY.implementation_feature */
extern T0* T170x14238(T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T170x14177(T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T170x14176(T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T170x14237(T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T170x14180(T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T170x14181(T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T170x14182(T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T170x14183(T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T170x14172(T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T170x14173(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T170x14209T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type */
extern T1 T172x6525T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.position */
extern T0* T172x6556(T0* C);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T172x6505T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_like_current */
extern T1 T172x6512(T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T172x6507T0(T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T172x6506T0(T0* C, T0* a1);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T172x6541T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_class */
extern T0* T172x6500T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_base_type */
extern T1 T172x6514(T0* C);
/* Call to ET_TYPE.same_base_bit_type */
extern T1 T172x6537T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_base_tuple_type */
extern T1 T172x6540T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_base_class_type */
extern T1 T172x6538T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type */
extern T0* T172x6501T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_type_reference */
extern T1 T172x6516T0(T0* C, T0* a1);
/* Call to ET_TYPE.conforms_from_class_type */
extern T1 T172x6543T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.conforms_from_tuple_type */
extern T1 T172x6545T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.conforms_from_formal_parameter_type */
extern T1 T172x6544T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.conforms_from_bit_type */
extern T1 T172x6542T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.is_named_type */
extern T1 T172x6513(T0* C);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T172x6524T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_base_type */
extern T1 T172x6526T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.last_leaf */
extern T0* T172x6560(T0* C);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T172x6529T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.to_text */
extern T0* T172x6550(T0* C);
/* Call to ET_TYPE.same_named_bit_type */
extern T1 T172x6533T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_named_tuple_type */
extern T1 T172x6536T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_named_formal_parameter_type */
extern T1 T172x6535T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_named_class_type */
extern T1 T172x6534T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T172x6528T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.has_formal_types */
extern T1 T172x6519T0(T0* C, T0* a1);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T172x6517T0(T0* C, T0* a1);
/* Call to ET_TYPE.shallow_base_type */
extern T0* T172x6502T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T172x6515T0(T0* C, T0* a1);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T172x6588T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T172x6530T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T172x6531T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type_actual */
extern T0* T172x6503T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T172x6511T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T172x6527T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T172x6532T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.unaliased_to_text */
extern T0* T172x6552(T0* C);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T173x6597(T0* C);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T173x6590(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T173x6594T6(T0* C, T6 a1);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T173x6598(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T173x6596T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T173x6592(T0* C);
/* Call to ET_TYPE_CONTEXT.same_base_type */
extern T1 T173x6610T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type */
extern T1 T173x6611T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T173x6614T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T173x6613T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_named_class_type */
extern T1 T173x6612T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T173x6623T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.conforms_to_type */
extern T1 T173x6619T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T173x6621T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T173x6624T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T173x6622T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_named_type */
extern T1 T173x6608T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type */
extern T1 T173x6615T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T173x6618T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.same_base_class_type */
extern T1 T173x6616T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_type */
extern T0* T173x6593(T0* C);
/* Call to ET_CLASS_TYPE.base_class */
extern T0* T175x6592(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T175x6444(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T175x6452(T0* C);
/* Call to ET_CLASS_TYPE.to_text */
extern T0* T175x6550(T0* C);
/* Call to ET_CLASS_TYPE.name */
extern T0* T175x6495(T0* C);
/* Call to ET_CLASS_TYPE.upper_name */
extern T0* T175x6496(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T175x6424(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T175x6455(T0* C);
/* Call to ET_CLASS_TYPE.position */
extern T0* T175x6556(T0* C);
/* Call to ET_CLASS_TYPE.is_named_type */
extern T1 T175x6513(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T178x13379(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_never_void */
extern T1 T178x13376(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_type */
extern T0* T178x13388T6(T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T178x13390(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T178x13394(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T178x13375(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_empty */
extern T1 T178x13391(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T178x13389(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.dynamic_types */
extern T0* T178x13384(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T178x13392T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T180x6575(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T180x6574(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T180x6577T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T180x6573(T0* C);
/* Call to ET_UNIVERSE.eiffel_class */
extern T0* T183x2835T0(T0* C, T0* a1);
/* Call to ET_UNIVERSE.has_class */
extern T1 T183x2833T0(T0* C, T0* a1);
/* Call to ET_UNIVERSE.integer_class */
extern T0* T183x2848(T0* C);
/* Call to ET_UNIVERSE.string_class */
extern T0* T183x2857(T0* C);
/* Call to ET_UNIVERSE.character_class */
extern T0* T183x2842(T0* C);
/* Call to ET_UNIVERSE.string_type */
extern T0* T183x2858(T0* C);
/* Call to ET_UNIVERSE.double_type */
extern T0* T183x2847(T0* C);
/* Call to ET_UNIVERSE.integer_type */
extern T0* T183x2850(T0* C);
/* Call to ET_UNIVERSE.real_type */
extern T0* T183x2856(T0* C);
/* Call to ET_UNIVERSE.double_class */
extern T0* T183x2845(T0* C);
/* Call to ET_UNIVERSE.real_class */
extern T0* T183x2854(T0* C);
/* Call to ET_UNIVERSE.classes_by_group */
extern T0* T183x2837T0(T0* C, T0* a1);
/* Call to ET_UNIVERSE.current_system */
extern T0* T183x2839(T0* C);
/* Call to ET_UNIVERSE.natural_class */
extern T0* T183x2851(T0* C);
/* Call to ET_UNIVERSE.wide_character_class */
extern T0* T183x2859(T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T202x6560(T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T202x12268(T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T202x6556(T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T202x12249(T0* C);
/* Call to ET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T202x12251T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_FEATURE.lower_name */
extern T0* T206x14145(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T206x14224(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T206x14222T6(T0* C, T6 a1);
/* Call to ET_FEATURE.extended_name */
extern T0* T206x14147(T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T206x14239(T0* C);
/* Call to ET_FEATURE.version */
extern T6 T206x14157(T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T206x14227(T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T206x14173(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T206x14226(T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T206x14180(T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T206x14187T0(T0* C, T0* a1);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T206x14238(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T206x14237(T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T206x14146(T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T206x14179(T0* C);
/* Call to ET_FEATURE.type */
extern T0* T206x14225(T0* C);
/* Call to ET_FEATURE.id */
extern T6 T206x14156(T0* C);
/* Call to ET_FEATURE.other_seeds */
extern T0* T206x14228(T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T206x14177(T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T206x14176(T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T206x14175(T0* C);
/* Call to ET_FEATURE.has_implementation_error */
extern T1 T206x14241(T0* C);
/* Call to ET_FEATURE.implementation_checked */
extern T1 T206x14240(T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T206x14172(T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T206x14181(T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T206x14182(T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T206x14183(T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T206x14210T0(T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T206x14211T0(T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T206x14193T0(T0* C, T0* a1);
/* Call to ET_FEATURE.postconditions */
extern T0* T206x14153(T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T206x14152(T0* C);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T206x14221(T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T206x14159(T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T206x14236(T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T206x22(T0* C);
/* Call to ET_FEATURE.arguments_count */
extern T6 T206x14186(T0* C);
/* Call to ET_FEATURE.is_query */
extern T1 T206x14178(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T207x6560(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.position */
extern T0* T207x6556(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T207x12233(T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T232x12321(T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T232x12320(T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T232x6556(T0* C);
/* Call to ET_CALL_COMPONENT.is_tuple_label */
extern T1 T232x12323(T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T233x12189(T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T233x6556(T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T233x12190(T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T233x12195(T0* C);
/* Call to ET_CALL_NAME.same_call_name */
extern T1 T233x12224T0(T0* C, T0* a1);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T233x12225(T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T233x12223(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T233x12220(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T233x12218(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T233x12217(T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T233x12215(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T233x12214(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T233x12213(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T233x12212(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T233x12211(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T233x12210(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T233x12209(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T233x12208(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T233x12207(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T233x12206(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T233x12205(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T233x12204(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T233x12203(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T233x12202(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T233x12200(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T233x12199(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T233x12198(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T233x12197(T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T233x12221(T0* C);
/* Call to ET_AGENT.target */
extern T0* T236x16608(T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T236x16609(T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T236x16614(T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T236x16618(T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T236x16610(T0* C);
/* Call to ET_AGENT.is_procedure */
extern T1 T236x16612(T0* C);
/* Call to ET_AGENT.position */
extern T0* T236x6556(T0* C);
/* Call to ET_AGENT.index */
extern T6 T236x12268(T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T236x16611(T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T239x12268(T0* C);
/* Call to ET_MANIFEST_STRING.cast_type */
extern T0* T239x16637(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T239x6556(T0* C);
/* Call to ET_MANIFEST_STRING.type */
extern T0* T239x16638(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T239x16635(T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T240x16651(T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T240x16650(T0* C);
/* Call to ET_CONSTANT.is_real_constant */
extern T1 T240x16649(T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T240x16648(T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T240x16647(T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T240x16646(T0* C);
/* Call to ET_CONSTANT.index */
extern T6 T240x12268(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T241x12263(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T241x12262T6(T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T241x12260(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T244x12262T6(T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T244x12263(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T244x12260(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T247x12252(T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T247x6556(T0* C);
/* Call to ET_OPERAND.index */
extern T6 T250x12268(T0* C);
/* Call to ET_OPERAND.is_open_operand */
extern T1 T250x12267(T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T252x12268(T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T252x6556(T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T252x12267(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T254x12267(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T254x12268(T0* C);
/* Call to ET_DYNAMIC_TYPES.dynamic_type */
extern T0* T262x13388T6(T0* C, T6 a1);
/* Call to ET_DYNAMIC_TYPES.count */
extern T6 T262x13390(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_implementation_error */
extern T1 T274x14241(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T274x14238(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_assertions_error */
extern T1 T274x14243(T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T274x14250(T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T274x14234(T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T274x14236(T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T274x14254(T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T274x14253(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T274x14237(T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T274x14252(T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T274x14239(T0* C);
/* Call to ET_STANDALONE_CLOSURE.assertions_checked */
extern T1 T274x14242(T0* C);
/* Call to ET_POSITION.column */
extern T6 T283x12305(T0* C);
/* Call to ET_POSITION.line */
extern T6 T283x12304(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T283x12306(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T283x12310(T0* C);
/* Call to XM_NODE.parent */
extern T0* T300x10801(T0* C);
/* Call to ET_GROUP.dotnet_assembly */
extern T0* T357x12455(T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T357x12451T2(T0* C, T2 a1);
/* Call to ET_GROUP.full_pathname */
extern T0* T357x12452(T0* C);
/* Call to ET_GROUP.universe */
extern T0* T357x12444(T0* C);
/* Call to ET_GROUP.current_system */
extern T0* T357x12445(T0* C);
/* Call to ET_GROUP.is_override */
extern T1 T357x12440(T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T357x12436(T0* C);
/* Call to ET_GROUP.is_dotnet_assembly */
extern T1 T357x12437(T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T357x12454(T0* C);
/* Call to ET_GROUP.is_none */
extern T1 T357x12438(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T367x12231(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T367x12230(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T367x6556(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T367x12232T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T394x5684(T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T394x22756T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T394x5689(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T394x22767(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T394x5680(T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T394x22765(T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T475x14254(T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T475x14252(T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T475x14253(T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T543x16610(T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T543x14253(T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T543x16609(T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T543x16608(T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T543x14254(T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T543x14252(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.name */
extern T0* T588x12320(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T588x12319(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T588x12318(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T588x12321(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.index */
extern T6 T588x12268(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.is_tuple_label */
extern T1 T588x12323(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T605x6569T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T605x6574(T0* C);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T606x6550(T0* C);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T606x6505T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_base_type */
extern T1 T606x6526T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T606x6528T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T606x6529T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T606x6530T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T606x6531T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T606x6527T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T606x6503T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T606x6532T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T606x6524T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_named_bit_type */
extern T1 T606x6533T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_named_tuple_type */
extern T1 T606x6536T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type */
extern T1 T606x6535T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_named_class_type */
extern T1 T606x6534T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T606x6519T0(T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.has_anchored_type */
extern T1 T606x6517T0(T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.is_type_reference */
extern T1 T606x6516T0(T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_base_bit_type */
extern T1 T606x6537T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_base_tuple_type */
extern T1 T606x6540T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.same_base_class_type */
extern T1 T606x6538T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.is_type_expanded */
extern T1 T606x6515T0(T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T606x6500T0(T0* C, T0* a1);
/* Call to ET_NAMED_TYPE.same_named_type */
extern T1 T606x6525T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.conforms_to_type */
extern T1 T606x6541T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type */
extern T1 T606x6544T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type */
extern T1 T606x6542T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type */
extern T1 T606x6545T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.conforms_from_class_type */
extern T1 T606x6543T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T668x12268(T0* C);
/* Call to ET_CHARACTER_CONSTANT.cast_type */
extern T0* T668x25731(T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T2 T668x25730(T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T676x12268(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T676x26070(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T676x26078(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T676x26080(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T676x26069(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T676x6556(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T676x26071(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T758x6585T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T765x12230(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T765x6556(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T776x6583T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T776x6581(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T776x6582(T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T818x21635(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T818x21633(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T818x21634(T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T829x6555(T0* C);
/* Call to ET_DECLARED_TYPE.resolved_formal_parameters */
extern T0* T835x6588T0(T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T835x6587(T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T836x12235(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T849x16655(T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T850x16656(T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T861x25171T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T861x12207(T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T861x12211(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T861x12217(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T861x12218(T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T861x12224T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.lower_name */
extern T0* T861x12189(T0* C);
/* Call to ET_ALIAS_NAME.position */
extern T0* T861x6556(T0* C);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T861x22(T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T861x12196(T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T861x25157(T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T861x25156(T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T861x12221(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T861x12216(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T910x12253(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T919x6556(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T919x6589(T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T919x6560(T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T939x12281(T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T939x12279(T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T939x12280(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T941x12283(T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T944x6556(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T1007x12271(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T1012x12257(T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T1012x6556(T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T1130x6558(T0* C);
/* Call to ET_AST_LEAF.position */
extern T0* T1130x6556(T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T1131x6556(T0* C);
/* Call to ET_OPERATOR.is_tuple_label */
extern T1 T1131x12195(T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T1132x12255(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T1133x26637(T0* C);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1286x14233(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1286x14220(T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1286x14229(T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1286x14231(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1286x14218(T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1286x14232(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1286x14219(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1286x14217(T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1286x14230(T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1361x14238(T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1379x30736(T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1379x30735(T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1379x30734(T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1379x30737(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1457x16610(T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1458x14226(T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1458x14238(T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1458x14180(T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.locals */
extern T0* T1460x14254(T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.compound */
extern T0* T1460x16752(T0* C);
/* Call to ET_INTERNAL_ROUTINE_CLOSURE.rescue_clause */
extern T0* T1460x16754(T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1484x25191(T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1484x22(T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1484x12201(T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1500x6556(T0* C);
/* Call to ET_ADDRESS_EXPRESSION.index */
extern T6 T1543x12268(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1545x14252(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1545x14253(T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1546x14253(T0* C);
/* Call to ET_SYSTEM.register_feature */
extern void T25x2710T0(T0* C, T0* a1);
/* Call to ET_SYSTEM.register_inline_constant */
extern void T25x2712T0(T0* C, T0* a1);
/* Call to ET_SYSTEM.set_dispose_seed */
extern void T25x2705T6(T0* C, T6 a1);
/* Call to ET_SYSTEM.set_function_item_seed */
extern void T25x2707T6(T0* C, T6 a1);
/* Call to ET_SYSTEM.set_routine_call_seed */
extern void T25x2706T6(T0* C, T6 a1);
/* Call to ET_SYSTEM.set_copy_seed */
extern void T25x2704T6(T0* C, T6 a1);
/* Call to ET_SYSTEM.set_default_create_seed */
extern void T25x2703T6(T0* C, T6 a1);
/* Call to KI_CHARACTER_INPUT_STREAM.close */
extern void T27x1809(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T27x1799(T0* C);
/* Call to AP_OPTION.record_occurrence */
extern void T38x3848T0(T0* C, T0* a1);
/* Call to AP_OPTION.reset */
extern void T38x3849(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T65x9637(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T65x9647T2(T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T65x9639T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T65x9641T6(T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.append */
extern void T65x9648T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T65x9636T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T112x11085T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T113x11141T0T0T1(T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T113x11142T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T113x11147(T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T113x11140(T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T113x11146T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T113x11148T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T113x11145T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T113x11149T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T113x11143T0T0(T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T113x11144T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T113x11139(T0* C);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T161x13364T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T161x13365T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T161x13381T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T161x13336T1(T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T161x13334(T0* C);
/* Call to ET_DYNAMIC_TYPE.set_meta_type */
extern void T161x13347T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T161x13370T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T161x13348T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.reset */
extern void T162x6499(T0* C);
/* Call to ET_BASE_TYPE.process */
extern void T162x6565T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T168x12191T6(T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T168x12187(T0* C);
/* Call to ET_PROCEDURE.reset_assertions_checked */
extern void T169x14249(T0* C);
/* Call to ET_PROCEDURE.reset_implementation_checked */
extern void T169x14246(T0* C);
/* Call to ET_PROCEDURE.reset_after_features_flattened */
extern void T169x14143(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T169x14142(T0* C);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T169x14204T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_assertions_checked */
extern void T170x14249(T0* C);
/* Call to ET_QUERY.reset_implementation_checked */
extern void T170x14246(T0* C);
/* Call to ET_QUERY.reset_after_features_flattened */
extern void T170x14143(T0* C);
/* Call to ET_QUERY.reset */
extern void T170x14142(T0* C);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T170x14204T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T171x7800T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T171x7743T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_expression */
extern void T171x7738T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_instruction */
extern void T171x7723T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T171x7861T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T171x7842T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T171x7745T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T171x7708T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T171x7724T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T171x7751T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T171x7822T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T171x7806T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T171x7794T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T171x7706T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T171x7705T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T171x7704T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T171x7857T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_cluster */
extern void T171x7878T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T171x7862T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T171x7824T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T171x7721T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T171x7837T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T171x7860T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T171x7716T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T171x7816T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T171x7817T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T171x7710T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T171x7711T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T171x7736T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T171x7784T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T171x7744T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T171x7719T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T171x7718T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T171x7774T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T171x7867T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T171x7871T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T171x7851T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T171x7790T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T171x7870T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T171x7849T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T171x7859T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T171x7874T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T171x7720T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T171x7875T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T171x7709T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T171x7850T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T171x7707T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T171x7872T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T171x7735T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T171x7868T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T171x7770T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T171x7789T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T171x7729T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T171x7787T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T171x7773T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T171x7834T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T171x7757T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T171x7771T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T171x7831T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T171x7755T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T171x7828T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T171x7832T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T171x7829T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T171x7844T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T171x7765T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T171x7802T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T171x7767T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T171x7856T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T171x7749T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T171x7775T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T171x7841T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T171x7772T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T171x7833T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T171x7752T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T171x7830T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T171x7754T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T171x7753T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T171x7756T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T171x7827T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T171x7728T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T171x7855T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_expression */
extern void T171x7722T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T171x7748T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T171x7791T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T172x6499(T0* C);
/* Call to ET_TYPE.process */
extern void T172x6565T0(T0* C, T0* a1);
/* Call to ET_TYPE.append_to_string */
extern void T172x6551T0(T0* C, T0* a1);
/* Call to ET_TYPE.append_unaliased_to_string */
extern void T172x6553T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T178x13381T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE_SET.set_never_void */
extern void T178x13378(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.propagate_can_be_void */
extern void T178x13387T0(T0* C, T0* a1);
/* Call to ET_UNIVERSE.set_classes_added */
extern void T183x2877T1(T0* C, T1 a1);
/* Call to ET_UNIVERSE.set_classes_modified */
extern void T183x2876T1(T0* C, T1 a1);
/* Call to ET_EXPRESSION.process */
extern void T202x6565T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T202x12254(T0* C);
/* Call to ET_EXPRESSION.set_index */
extern void T202x12269T6(T0* C, T6 a1);
/* Call to ET_FEATURE.process */
extern void T206x6565T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_error */
extern void T206x14245(T0* C);
/* Call to ET_FEATURE.set_implementation_checked */
extern void T206x14244(T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T206x14201T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T206x14200T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T206x14192T0(T0* C, T0* a1);
/* Call to ET_FEATURE.resolve_inherited_signature */
extern void T206x14212T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T206x14197T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T206x14203T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T206x14202T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T206x14208(T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T206x14207(T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T206x14198T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T206x14199T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_assertions_error */
extern void T206x14248(T0* C);
/* Call to ET_FEATURE.set_assertions_checked */
extern void T206x14247(T0* C);
/* Call to ET_FEATURE.set_id */
extern void T206x14194T6(T0* C, T6 a1);
/* Call to ET_CALL_NAME.set_seed */
extern void T233x12191T6(T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T236x16617T0(T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T236x6565T0(T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T239x12269T6(T0* C, T6 a1);
/* Call to ET_MANIFEST_STRING.set_type */
extern void T239x16644T0(T0* C, T0* a1);
/* Call to ET_CONSTANT.set_index */
extern void T240x12269T6(T0* C, T6 a1);
/* Call to ET_CONSTANT.process */
extern void T240x6565T0(T0* C, T0* a1);
/* Call to ET_OPERAND.set_index */
extern void T250x12269T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T252x6565T0(T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T252x12269T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T252x12266(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T254x6565T0(T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T254x12266(T0* C);
/* Call to PROCEDURE [ANY, TUPLE [ET_CLASS]].call with a manifest tuple argument of type TUPLE [ET_CLASS] */
extern void T289xmt1556T156(T0* C, T0* a1);
/* Call to XM_NODE.node_set_parent */
extern void T300x10809T0(T0* C, T0* a1);
/* Call to XM_NODE.process */
extern void T300x10811T0(T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T367x12229(T0* C);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T394x22752(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T394x22751T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T394x22757T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T394x22748(T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T394x5695(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T394x22750T0(T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T668x12269T6(T0* C, T6 a1);
/* Call to ET_CHARACTER_CONSTANT.set_type */
extern void T668x25737T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T676x12269T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T676x26084(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T676x26083T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T676x26081T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T676x26082T0(T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T836x12234(T0* C);
/* Call to ET_ALIAS_NAME.reset */
extern void T861x12187(T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T861x25169(T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T861x25168(T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T897x6565T0(T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T897x12324(T0* C);
/* Call to ET_CHOICE.reset */
extern void T939x12278(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T944x12278(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T1131x12187(T0* C);
/* Call to ET_ASSERTION.process */
extern void T1132x6565T0(T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T1132x12254(T0* C);
/* Call to ET_DYNAMIC_TARGET.put_type_from_type_set */
extern void T1322x13385T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_DYNAMIC_TARGET.propagate_can_be_void */
extern void T1322x13387T0(T0* C, T0* a1);
/* Call to ET_ADDRESS_EXPRESSION.set_index */
extern void T1543x12269T6(T0* C, T6 a1);
/* New instance of type SPECIAL [CHARACTER_8] */
extern T0* GE_new15(T6 a1, T1 initialize);
/* New instance of type STRING_8 */
extern T0* GE_new17(T1 initialize);
/* New instance of type GEC */
extern T0* GE_new21(T1 initialize);
/* New instance of type KL_TEXT_INPUT_FILE */
extern T0* GE_new22(T1 initialize);
/* New instance of type KL_ARGUMENTS */
extern T0* GE_new23(T1 initialize);
/* New instance of type UT_ERROR_HANDLER */
extern T0* GE_new24(T1 initialize);
/* New instance of type ET_SYSTEM */
extern T0* GE_new25(T1 initialize);
/* New instance of type KL_STRING_ROUTINES */
extern T0* GE_new26(T1 initialize);
/* New instance of type ET_ERROR_HANDLER */
extern T0* GE_new28(T1 initialize);
/* New instance of type KL_EXCEPTIONS */
extern T0* GE_new29(T1 initialize);
/* New instance of type AP_PARSER */
extern T0* GE_new30(T1 initialize);
/* New instance of type AP_ALTERNATIVE_OPTIONS_LIST */
extern T0* GE_new31(T1 initialize);
/* New instance of type AP_ERROR */
extern T0* GE_new32(T1 initialize);
/* New instance of type AP_FLAG */
extern T0* GE_new33(T1 initialize);
/* New instance of type AP_ENUMERATION_OPTION */
extern T0* GE_new35(T1 initialize);
/* New instance of type AP_BOOLEAN_OPTION */
extern T0* GE_new36(T1 initialize);
/* New instance of type AP_INTEGER_OPTION */
extern T0* GE_new37(T1 initialize);
/* New instance of type AP_DISPLAY_HELP_FLAG */
extern T0* GE_new41(T1 initialize);
/* New instance of type ET_XACE_SYSTEM_PARSER */
extern T0* GE_new43(T1 initialize);
/* New instance of type ET_XACE_DEFAULT_ERROR_HANDLER */
extern T0* GE_new44(T1 initialize);
/* New instance of type DS_HASH_TABLE [STRING_8, STRING_8] */
extern T0* GE_new45(T1 initialize);
/* New instance of type ST_SPLITTER */
extern T0* GE_new46(T1 initialize);
/* New instance of type UC_STRING_EQUALITY_TESTER */
extern T0* GE_new48(T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [STRING_8] */
extern T0* GE_new49(T1 initialize);
/* New instance of type KL_EXECUTION_ENVIRONMENT */
extern T0* GE_new50(T1 initialize);
/* New instance of type ET_XACE_SYSTEM */
extern T0* GE_new53(T1 initialize);
/* New instance of type ET_LACE_PARSER */
extern T0* GE_new54(T1 initialize);
/* New instance of type ET_LACE_ERROR_HANDLER */
extern T0* GE_new55(T1 initialize);
/* New instance of type ET_LACE_SYSTEM */
extern T0* GE_new56(T1 initialize);
/* New instance of type ET_NULL_ERROR_HANDLER */
extern T0* GE_new57(T1 initialize);
/* New instance of type ET_DYNAMIC_SYSTEM */
extern T0* GE_new58(T1 initialize);
/* New instance of type ET_CLASS */
extern T0* GE_new60(T1 initialize);
/* New instance of type ET_C_GENERATOR */
extern T0* GE_new61(T1 initialize);
/* New instance of type KL_SHELL_COMMAND */
extern T0* GE_new62(T1 initialize);
/* New instance of type UT_VERSION */
extern T0* GE_new63(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
extern T0* GE_new64(T1 initialize);
/* New instance of type KL_OPERATING_SYSTEM */
extern T0* GE_new66(T1 initialize);
/* New instance of type UT_CANNOT_READ_FILE_ERROR */
extern T0* GE_new68(T1 initialize);
/* New instance of type UT_VERSION_NUMBER */
extern T0* GE_new69(T1 initialize);
/* New instance of type KL_WINDOWS_FILE_SYSTEM */
extern T0* GE_new70(T1 initialize);
/* New instance of type KL_UNIX_FILE_SYSTEM */
extern T0* GE_new71(T1 initialize);
/* New instance of type KL_LINKABLE [CHARACTER_8] */
extern T0* GE_new72(T1 initialize);
/* New instance of type KL_STANDARD_FILES */
extern T0* GE_new75(T1 initialize);
/* New instance of type KL_STDERR_FILE */
extern T0* GE_new76(T1 initialize);
/* New instance of type KL_STDOUT_FILE */
extern T0* GE_new77(T1 initialize);
/* New instance of type UC_STRING */
extern T0* GE_new78(T1 initialize);
/* New instance of type KL_ANY_ROUTINES */
extern T0* GE_new79(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [STRING_8] */
extern T0* GE_new80(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_OPTION] */
extern T0* GE_new81(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new82(T1 initialize);
/* New instance of type AP_ERROR_HANDLER */
extern T0* GE_new83(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new84(T1 initialize);
/* New instance of type SPECIAL [STRING_8] */
extern T0* GE_new85(T6 a1, T1 initialize);
/* New instance of type ARRAY [STRING_8] */
extern T0* GE_new86(T1 initialize);
/* New instance of type DS_LINKED_LIST [STRING_8] */
extern T0* GE_new88(T1 initialize);
/* New instance of type KL_STRING_EQUALITY_TESTER */
extern T0* GE_new89(T1 initialize);
/* New instance of type DS_LINKED_LIST [BOOLEAN] */
extern T0* GE_new93(T1 initialize);
/* New instance of type DS_LINKED_LIST [INTEGER_32] */
extern T0* GE_new96(T1 initialize);
/* New instance of type ST_WORD_WRAPPER */
extern T0* GE_new97(T1 initialize);
/* New instance of type ET_XACE_AST_FACTORY */
extern T0* GE_new98(T1 initialize);
/* New instance of type XM_DOCUMENT */
extern T0* GE_new99(T1 initialize);
/* New instance of type XM_ELEMENT */
extern T0* GE_new100(T1 initialize);
/* New instance of type XM_POSITION_TABLE */
extern T0* GE_new101(T1 initialize);
/* New instance of type XM_TREE_CALLBACKS_PIPE */
extern T0* GE_new103(T1 initialize);
/* New instance of type XM_STOP_ON_ERROR_FILTER */
extern T0* GE_new104(T1 initialize);
/* New instance of type XM_CALLBACKS_TO_TREE_FILTER */
extern T0* GE_new105(T1 initialize);
/* New instance of type ET_XACE_VALIDATOR */
extern T0* GE_new106(T1 initialize);
/* New instance of type ET_XACE_PREPROCESSOR */
extern T0* GE_new107(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new108(T1 initialize);
/* New instance of type XM_EXPAT_PARSER_FACTORY */
extern T0* GE_new109(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG_PARSER */
extern T0* GE_new110(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER */
extern T0* GE_new111(T1 initialize);
/* New instance of type UT_MESSAGE */
extern T0* GE_new114(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8] */
extern T0* GE_new115(T1 initialize);
/* New instance of type SPECIAL [INTEGER_32] */
extern T0* GE_new117(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new118(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [INTEGER_32] */
extern T0* GE_new119(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [STRING_8] */
extern T0* GE_new120(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new121(T1 initialize);
/* New instance of type DS_HASH_SET [INTEGER_32] */
extern T0* GE_new122(T1 initialize);
/* New instance of type EXECUTION_ENVIRONMENT */
extern T0* GE_new123(T1 initialize);
/* New instance of type ET_LACE_AST_FACTORY */
extern T0* GE_new124(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new125(T1 initialize);
/* New instance of type YY_FILE_BUFFER */
extern T0* GE_new126(T1 initialize);
/* New instance of type YY_BUFFER */
extern T0* GE_new127(T1 initialize);
/* New instance of type DS_HASH_SET [ET_IDENTIFIER] */
extern T0* GE_new128(T1 initialize);
/* New instance of type ET_IDENTIFIER */
extern T0* GE_new129(T1 initialize);
/* New instance of type SPECIAL [ANY] */
extern T0* GE_new131(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ANY] */
extern T0* GE_new132(T1 initialize);
/* New instance of type SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new133(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
extern T0* GE_new134(T1 initialize);
/* New instance of type ET_LACE_CLUSTERS */
extern T0* GE_new135(T1 initialize);
/* New instance of type ET_LACE_CLUSTER */
extern T0* GE_new136(T1 initialize);
/* New instance of type ET_LACE_EXCLUDE */
extern T0* GE_new137(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLIES */
extern T0* GE_new138(T1 initialize);
/* New instance of type ET_LACE_DOTNET_ASSEMBLY */
extern T0* GE_new139(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_CLUSTERS] */
extern T0* GE_new140(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
extern T0* GE_new141(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
extern T0* GE_new142(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new143(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_LACE_EXCLUDE] */
extern T0* GE_new144(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
extern T0* GE_new145(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
extern T0* GE_new146(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
extern T0* GE_new147(T1 initialize);
/* New instance of type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new148(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new149(T1 initialize);
/* New instance of type ET_LACE_DOTNET_GAC_ASSEMBLY */
extern T0* GE_new150(T1 initialize);
/* New instance of type KL_PLATFORM */
extern T0* GE_new151(T1 initialize);
/* New instance of type KL_INTEGER_ROUTINES */
extern T0* GE_new152(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new153(T1 initialize);
/* New instance of type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
extern T0* GE_new154(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
extern T0* GE_new155(T1 initialize);
/* New instance of type TUPLE [ET_CLASS] */
extern T0* GE_new156(T1 initialize);
/* New instance of type TUPLE */
extern T0* GE_new157(T1 initialize);
/* New instance of type PROCEDURE [ET_CLASS, TUPLE [ET_CLASS]] */
extern T0* GE_new158(T1 initialize);
/* New instance of type TUPLE [INTEGER_32] */
extern T0* GE_new159(T1 initialize);
/* New instance of type ET_TOKEN_CONSTANTS */
extern T0* GE_new160(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE */
extern T0* GE_new161(T1 initialize);
/* New instance of type DT_SHARED_SYSTEM_CLOCK */
extern T0* GE_new163(T1 initialize);
/* New instance of type DT_DATE_TIME */
extern T0* GE_new164(T1 initialize);
/* New instance of type DT_SYSTEM_CLOCK */
extern T0* GE_new165(T1 initialize);
/* New instance of type PROCEDURE [ET_DYNAMIC_SYSTEM, TUPLE [ET_CLASS]] */
extern T0* GE_new166(T1 initialize);
/* New instance of type TUPLE [ET_DYNAMIC_SYSTEM] */
extern T0* GE_new167(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE */
extern T0* GE_new174(T1 initialize);
/* New instance of type ET_CLASS_TYPE */
extern T0* GE_new175(T1 initialize);
/* New instance of type ET_ACTUAL_PARAMETER_LIST */
extern T0* GE_new176(T1 initialize);
/* New instance of type ET_GENERIC_CLASS_TYPE */
extern T0* GE_new177(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION */
extern T0* GE_new179(T1 initialize);
/* New instance of type ET_KEYWORD */
extern T0* GE_new182(T1 initialize);
/* New instance of type ET_TUPLE_TYPE */
extern T0* GE_new184(T1 initialize);
/* New instance of type ET_QUERY_LIST */
extern T0* GE_new185(T1 initialize);
/* New instance of type ET_PROCEDURE_LIST */
extern T0* GE_new186(T1 initialize);
/* New instance of type ET_TYPE_CHECKER */
extern T0* GE_new187(T1 initialize);
/* New instance of type KL_NULL_TEXT_OUTPUT_STREAM */
extern T0* GE_new188(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_SET_LIST */
extern T0* GE_new189(T1 initialize);
/* New instance of type KL_STRING_OUTPUT_STREAM */
extern T0* GE_new190(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_IDENTIFIER] */
extern T0* GE_new191(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [INTEGER_32] */
extern T0* GE_new192(T1 initialize);
/* New instance of type ET_DYNAMIC_TYPE_LIST */
extern T0* GE_new193(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET */
extern T0* GE_new194(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_EXPRESSION] */
extern T0* GE_new195(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_EXPRESSION] */
extern T0* GE_new196(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new197(T1 initialize);
/* New instance of type ET_DYNAMIC_STANDALONE_TYPE_SET_LIST */
extern T0* GE_new198(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TYPE] */
extern T0* GE_new199(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new200(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_AGENT] */
extern T0* GE_new201(T1 initialize);
/* New instance of type ET_CURRENT */
extern T0* GE_new203(T1 initialize);
/* New instance of type ET_ACTUAL_ARGUMENT_LIST */
extern T0* GE_new204(T1 initialize);
/* New instance of type ET_CALL_INSTRUCTION */
extern T0* GE_new205(T1 initialize);
/* New instance of type ET_CALL_EXPRESSION */
extern T0* GE_new208(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CALL_EXPRESSION] */
extern T0* GE_new209(T1 initialize);
/* New instance of type ET_MANIFEST_TUPLE */
extern T0* GE_new210(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new211(T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE] */
extern T0* GE_new212(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new213(T1 initialize);
/* New instance of type DS_HASH_SET [ET_INLINE_CONSTANT] */
extern T0* GE_new214(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new215(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
extern T0* GE_new216(T1 initialize);
/* New instance of type DS_HASH_SET [STRING_8] */
extern T0* GE_new217(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, STRING_8] */
extern T0* GE_new218(T1 initialize);
/* New instance of type ET_IDENTIFIER_TESTER */
extern T0* GE_new219(T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
extern T0* GE_new220(T1 initialize);
/* New instance of type RX_PCRE_REGULAR_EXPRESSION */
extern T0* GE_new221(T1 initialize);
/* New instance of type KL_TEXT_OUTPUT_FILE */
extern T0* GE_new222(T1 initialize);
/* New instance of type ET_DYNAMIC_TUPLE_TYPE */
extern T0* GE_new223(T1 initialize);
/* New instance of type UT_TEMPLATE_EXPANDER */
extern T0* GE_new224(T1 initialize);
/* New instance of type UT_CANNOT_WRITE_TO_FILE_ERROR */
extern T0* GE_new225(T1 initialize);
/* New instance of type ET_DYNAMIC_FEATURE_LIST */
extern T0* GE_new226(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR_LIST */
extern T0* GE_new227(T1 initialize);
/* New instance of type ET_DYNAMIC_PRECURSOR */
extern T0* GE_new228(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE] */
extern T0* GE_new229(T1 initialize);
/* New instance of type ET_RESULT */
extern T0* GE_new230(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
extern T0* GE_new231(T1 initialize);
/* New instance of type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
extern T0* GE_new235(T1 initialize);
/* New instance of type ET_DYNAMIC_SPECIAL_TYPE */
extern T0* GE_new237(T1 initialize);
/* New instance of type ET_DYNAMIC_FUNCTION_TYPE */
extern T0* GE_new242(T1 initialize);
/* New instance of type ET_DYNAMIC_PROCEDURE_TYPE */
extern T0* GE_new243(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT_LIST */
extern T0* GE_new245(T1 initialize);
/* New instance of type DS_QUICK_SORTER [INTEGER_32] */
extern T0* GE_new248(T1 initialize);
/* New instance of type ET_FORMAL_ARGUMENT */
extern T0* GE_new251(T1 initialize);
/* New instance of type PROCEDURE [ET_C_GENERATOR, TUPLE] */
extern T0* GE_new255(T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_IDENTIFIER, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new256(T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new258(T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_RESULT, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new259(T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_EXPRESSION, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new263(T1 initialize);
/* New instance of type ET_COMPOUND */
extern T0* GE_new265(T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_EXPRESSION, ET_DYNAMIC_TYPE] */
extern T0* GE_new266(T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE, BOOLEAN] */
extern T0* GE_new267(T1 initialize);
/* New instance of type ET_CONSTANT_ATTRIBUTE */
extern T0* GE_new268(T1 initialize);
/* New instance of type ET_UNIQUE_ATTRIBUTE */
extern T0* GE_new269(T1 initialize);
/* New instance of type ET_ATTRIBUTE */
extern T0* GE_new270(T1 initialize);
/* New instance of type UT_INTEGER_FORMATTER */
extern T0* GE_new272(T1 initialize);
/* New instance of type DS_CELL [INTEGER_32] */
extern T0* GE_new273(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
extern T0* GE_new275(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PROCEDURE] */
extern T0* GE_new276(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new277(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_QUERY] */
extern T0* GE_new278(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new279(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FEATURE] */
extern T0* GE_new280(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new281(T1 initialize);
/* New instance of type ET_NESTED_TYPE_CONTEXT */
extern T0* GE_new282(T1 initialize);
/* New instance of type UNIX_FILE_INFO */
extern T0* GE_new284(T1 initialize);
/* New instance of type ET_AST_FACTORY */
extern T0* GE_new286(T1 initialize);
/* New instance of type ET_XACE_EXTERNALS */
extern T0* GE_new287(T1 initialize);
/* New instance of type ET_XACE_OPTIONS */
extern T0* GE_new288(T1 initialize);
/* New instance of type ET_XACE_OPTION_NAMES */
extern T0* GE_new291(T1 initialize);
/* New instance of type ET_XACE_CLUSTER */
extern T0* GE_new293(T1 initialize);
/* New instance of type ET_XACE_CLUSTERS */
extern T0* GE_new294(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARY */
extern T0* GE_new295(T1 initialize);
/* New instance of type ET_XACE_MOUNTED_LIBRARIES */
extern T0* GE_new296(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new297(T1 initialize);
/* New instance of type XM_ATTRIBUTE */
extern T0* GE_new298(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [XM_NODE] */
extern T0* GE_new299(T1 initialize);
/* New instance of type ET_XACE_LIBRARY_CONFIG */
extern T0* GE_new301(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, STRING_8] */
extern T0* GE_new302(T1 initialize);
/* New instance of type ET_XACE_CLASS_OPTIONS */
extern T0* GE_new305(T1 initialize);
/* New instance of type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
extern T0* GE_new306(T1 initialize);
/* New instance of type ET_XACE_BOOLEAN_EXPECTED_ERROR */
extern T0* GE_new307(T1 initialize);
/* New instance of type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
extern T0* GE_new308(T1 initialize);
/* New instance of type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
extern T0* GE_new309(T1 initialize);
/* New instance of type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
extern T0* GE_new310(T1 initialize);
/* New instance of type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new311(T1 initialize);
/* New instance of type ET_AST_NULL_PROCESSOR */
extern T0* GE_new313(T1 initialize);
/* New instance of type ET_ADAPTED_LIBRARIES */
extern T0* GE_new314(T1 initialize);
/* New instance of type TUPLE [ET_LIBRARY] */
extern T0* GE_new316(T1 initialize);
/* New instance of type PROCEDURE [ET_LIBRARY, TUPLE [ET_LIBRARY]] */
extern T0* GE_new317(T1 initialize);
/* New instance of type TUPLE [PROCEDURE [ANY, TUPLE [ET_CLASS]]] */
extern T0* GE_new318(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_CHECKER */
extern T0* GE_new319(T1 initialize);
/* New instance of type ET_EIFFEL_PREPARSER */
extern T0* GE_new320(T1 initialize);
/* New instance of type ET_EIFFEL_PARSER */
extern T0* GE_new321(T1 initialize);
/* New instance of type ET_PROVIDER_CHECKER */
extern T0* GE_new322(T1 initialize);
/* New instance of type ET_ANCESTOR_BUILDER */
extern T0* GE_new323(T1 initialize);
/* New instance of type ET_FEATURE_FLATTENER */
extern T0* GE_new324(T1 initialize);
/* New instance of type ET_INTERFACE_CHECKER */
extern T0* GE_new325(T1 initialize);
/* New instance of type DT_DATE_TIME_DURATION */
extern T0* GE_new326(T1 initialize);
/* New instance of type PROCEDURE [ET_XACE_SYSTEM, TUPLE [ET_CLASS]] */
extern T0* GE_new327(T1 initialize);
/* New instance of type TUPLE [ET_XACE_SYSTEM] */
extern T0* GE_new328(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [STRING_8] */
extern T0* GE_new329(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [STRING_8] */
extern T0* GE_new330(T1 initialize);
/* New instance of type ET_CLASS_NAME_TESTER */
extern T0* GE_new332(T1 initialize);
/* New instance of type ET_NONE_GROUP */
extern T0* GE_new334(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new335(T1 initialize);
/* New instance of type PROCEDURE [ET_CLUSTER, TUPLE [ET_CLUSTER]] */
extern T0* GE_new339(T1 initialize);
/* New instance of type TUPLE [ET_AST_PROCESSOR] */
extern T0* GE_new340(T1 initialize);
/* New instance of type TUPLE [ET_ADAPTED_LIBRARY] */
extern T0* GE_new343(T1 initialize);
/* New instance of type PROCEDURE [ET_ADAPTED_LIBRARY, TUPLE [ET_ADAPTED_LIBRARY]] */
extern T0* GE_new344(T1 initialize);
/* New instance of type ET_CLIENT */
extern T0* GE_new346(T1 initialize);
/* New instance of type ET_PARENT */
extern T0* GE_new347(T1 initialize);
/* New instance of type ET_RENAME_LIST */
extern T0* GE_new348(T1 initialize);
/* New instance of type ET_EXPORT_LIST */
extern T0* GE_new349(T1 initialize);
/* New instance of type ET_KEYWORD_FEATURE_NAME_LIST */
extern T0* GE_new350(T1 initialize);
/* New instance of type ET_PARENT_LIST */
extern T0* GE_new351(T1 initialize);
/* New instance of type ET_CLIENT_LIST */
extern T0* GE_new353(T1 initialize);
/* New instance of type ET_BUILTIN_CONVERT_FEATURE */
extern T0* GE_new355(T1 initialize);
/* New instance of type ET_ANCESTORS_STATUS_CHECKER */
extern T0* GE_new358(T1 initialize);
/* New instance of type ET_FLATTENING_STATUS_CHECKER */
extern T0* GE_new359(T1 initialize);
/* New instance of type ET_INTERFACE_STATUS_CHECKER */
extern T0* GE_new360(T1 initialize);
/* New instance of type ET_IMPLEMENTATION_STATUS_CHECKER */
extern T0* GE_new361(T1 initialize);
/* New instance of type ARRAY [INTEGER_32] */
extern T0* GE_new362(T1 initialize);
/* New instance of type UT_CONFIG_PARSER */
extern T0* GE_new363(T1 initialize);
/* New instance of type KL_COMPARABLE_COMPARATOR [INTEGER_32] */
extern T0* GE_new364(T1 initialize);
/* New instance of type ET_DO_PROCEDURE */
extern T0* GE_new366(T1 initialize);
/* New instance of type ET_DYNAMIC_PUSH_TYPE_SET */
extern T0* GE_new369(T1 initialize);
/* New instance of type ET_DEFERRED_PROCEDURE */
extern T0* GE_new370(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
extern T0* GE_new371(T1 initialize);
/* New instance of type SPECIAL [AP_OPTION] */
extern T0* GE_new373(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_OPTION] */
extern T0* GE_new374(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new375(T1 initialize);
/* New instance of type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new376(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new377(T1 initialize);
/* New instance of type DS_LINKABLE [STRING_8] */
extern T0* GE_new378(T1 initialize);
/* New instance of type DS_LINKABLE [BOOLEAN] */
extern T0* GE_new379(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [BOOLEAN] */
extern T0* GE_new380(T1 initialize);
/* New instance of type DS_LINKABLE [INTEGER_32] */
extern T0* GE_new381(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new382(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER */
extern T0* GE_new383(T1 initialize);
/* New instance of type SPECIAL [XM_CALLBACKS_FILTER] */
extern T0* GE_new384(T6 a1, T1 initialize);
/* New instance of type ARRAY [XM_CALLBACKS_FILTER] */
extern T0* GE_new385(T1 initialize);
/* New instance of type XM_CALLBACKS_NULL */
extern T0* GE_new386(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new389(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new391(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new392(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new393(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER */
extern T0* GE_new394(T1 initialize);
/* New instance of type XM_DEFAULT_POSITION */
extern T0* GE_new395(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_POSITION] */
extern T0* GE_new397(T1 initialize);
/* New instance of type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
extern T0* GE_new398(T1 initialize);
/* New instance of type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new399(T1 initialize);
/* New instance of type XM_NULL_EXTERNAL_RESOLVER */
extern T0* GE_new401(T1 initialize);
/* New instance of type XM_EIFFEL_PARSER_NAME */
extern T0* GE_new402(T1 initialize);
/* New instance of type XM_EIFFEL_DECLARATION */
extern T0* GE_new403(T1 initialize);
/* New instance of type XM_DTD_EXTERNAL_ID */
extern T0* GE_new404(T1 initialize);
/* New instance of type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new405(T1 initialize);
/* New instance of type XM_DTD_ELEMENT_CONTENT */
extern T0* GE_new406(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new407(T1 initialize);
/* New instance of type XM_DTD_ATTRIBUTE_CONTENT */
extern T0* GE_new408(T1 initialize);
/* New instance of type DS_BILINKED_LIST [STRING_8] */
extern T0* GE_new409(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new410(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new411(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new412(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
extern T0* GE_new413(T1 initialize);
/* New instance of type SPECIAL [BOOLEAN] */
extern T0* GE_new414(T6 a1, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new415(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [BOOLEAN] */
extern T0* GE_new416(T1 initialize);
/* New instance of type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new417(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new418(T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new419(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new420(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new422(T6 a1, T1 initialize);
/* New instance of type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new424(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new425(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new426(T1 initialize);
/* New instance of type SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new427(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new428(T1 initialize);
/* New instance of type XM_EIFFEL_ENTITY_DEF */
extern T0* GE_new429(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new430(T1 initialize);
/* New instance of type XM_DTD_CALLBACKS_NULL */
extern T0* GE_new432(T1 initialize);
/* New instance of type XM_EIFFEL_SCANNER_DTD */
extern T0* GE_new433(T1 initialize);
/* New instance of type XM_EIFFEL_PE_ENTITY_DEF */
extern T0* GE_new435(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8] */
extern T0* GE_new436(T1 initialize);
/* New instance of type TO_SPECIAL [INTEGER_32] */
extern T0* GE_new437(T1 initialize);
/* New instance of type TO_SPECIAL [STRING_8] */
extern T0* GE_new438(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [INTEGER_32] */
extern T0* GE_new439(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new442(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new444(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new445(T1 initialize);
/* New instance of type TO_SPECIAL [ANY] */
extern T0* GE_new446(T1 initialize);
/* New instance of type TO_SPECIAL [ET_IDENTIFIER] */
extern T0* GE_new447(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
extern T0* GE_new448(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new449(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LACE_CLUSTERS] */
extern T0* GE_new450(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LACE_CLUSTER] */
extern T0* GE_new451(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LACE_EXCLUDE] */
extern T0* GE_new452(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
extern T0* GE_new453(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new454(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new456(T1 initialize);
/* New instance of type SPECIAL [ET_CLASS] */
extern T0* GE_new458(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new459(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS] */
extern T0* GE_new460(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
extern T0* GE_new461(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new462(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
extern T0* GE_new463(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new464(T1 initialize);
/* New instance of type ET_UNKNOWN_GROUP */
extern T0* GE_new465(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_LIST */
extern T0* GE_new466(T1 initialize);
/* New instance of type MANAGED_POINTER */
extern T0* GE_new467(T1 initialize);
/* New instance of type ET_SYMBOL */
extern T0* GE_new469(T1 initialize);
/* New instance of type ET_BRACKET_SYMBOL */
extern T0* GE_new470(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new472(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new473(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new477(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new478(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
extern T0* GE_new479(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [INTEGER_32] */
extern T0* GE_new480(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION] */
extern T0* GE_new482(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
extern T0* GE_new483(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
extern T0* GE_new484(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new485(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new487(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new489(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new490(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
extern T0* GE_new491(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new492(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new494(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT] */
extern T0* GE_new496(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT] */
extern T0* GE_new497(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
extern T0* GE_new498(T1 initialize);
/* New instance of type SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new499(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
extern T0* GE_new501(T1 initialize);
/* New instance of type SPECIAL [ET_CALL_EXPRESSION] */
extern T0* GE_new502(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
extern T0* GE_new503(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CALL_EXPRESSION] */
extern T0* GE_new504(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new505(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new506(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new507(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE] */
extern T0* GE_new508(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE] */
extern T0* GE_new510(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE] */
extern T0* GE_new511(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new512(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTANT] */
extern T0* GE_new513(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new515(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
extern T0* GE_new517(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT] */
extern T0* GE_new518(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new519(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT] */
extern T0* GE_new520(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_FEATURE] */
extern T0* GE_new521(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new523(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new525(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
extern T0* GE_new526(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
extern T0* GE_new527(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new528(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8] */
extern T0* GE_new530(T1 initialize);
/* New instance of type RX_BYTE_CODE */
extern T0* GE_new533(T1 initialize);
/* New instance of type RX_CASE_MAPPING */
extern T0* GE_new534(T1 initialize);
/* New instance of type RX_CHARACTER_SET */
extern T0* GE_new535(T1 initialize);
/* New instance of type SPECIAL [RX_CHARACTER_SET] */
extern T0* GE_new537(T6 a1, T1 initialize);
/* New instance of type ARRAY [RX_CHARACTER_SET] */
extern T0* GE_new538(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new539(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new540(T1 initialize);
/* New instance of type ARRAY [BOOLEAN] */
extern T0* GE_new541(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
extern T0* GE_new542(T1 initialize);
/* New instance of type SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new544(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
extern T0* GE_new545(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
extern T0* GE_new546(T1 initialize);
/* New instance of type SPECIAL [ET_PROCEDURE] */
extern T0* GE_new547(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
extern T0* GE_new548(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new549(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new550(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new551(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUERY] */
extern T0* GE_new552(T1 initialize);
/* New instance of type SPECIAL [ET_QUERY] */
extern T0* GE_new553(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
extern T0* GE_new554(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new555(T1 initialize);
/* New instance of type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new556(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new557(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
extern T0* GE_new558(T1 initialize);
/* New instance of type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new559(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new560(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new561(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE] */
extern T0* GE_new562(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE] */
extern T0* GE_new563(T1 initialize);
/* New instance of type STRING_TO_INTEGER_CONVERTOR */
extern T0* GE_new564(T1 initialize);
/* New instance of type C_STRING */
extern T0* GE_new567(T1 initialize);
/* New instance of type ET_CLUSTERS */
extern T0* GE_new568(T1 initialize);
/* New instance of type ET_SYSTEM_ERROR */
extern T0* GE_new569(T1 initialize);
/* New instance of type ET_INTERNAL_ERROR */
extern T0* GE_new570(T1 initialize);
/* New instance of type ET_VALIDITY_ERROR */
extern T0* GE_new571(T1 initialize);
/* New instance of type ET_XACE_FEATURE_OPTIONS */
extern T0* GE_new572(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new573(T1 initialize);
/* New instance of type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
extern T0* GE_new574(T1 initialize);
/* New instance of type ET_XACE_MISSING_ATTRIBUTE_ERROR */
extern T0* GE_new575(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_ELEMENT_ERROR */
extern T0* GE_new576(T1 initialize);
/* New instance of type ET_XACE_MISSING_ELEMENT_ERROR */
extern T0* GE_new577(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
extern T0* GE_new578(T1 initialize);
/* New instance of type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
extern T0* GE_new579(T1 initialize);
/* New instance of type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
extern T0* GE_new580(T1 initialize);
/* New instance of type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
extern T0* GE_new581(T1 initialize);
/* New instance of type PROCEDURE [ET_LACE_SYSTEM, TUPLE [ET_CLASS]] */
extern T0* GE_new584(T1 initialize);
/* New instance of type TUPLE [ET_LACE_SYSTEM] */
extern T0* GE_new585(T1 initialize);
/* New instance of type ET_CREATOR_LIST */
extern T0* GE_new586(T1 initialize);
/* New instance of type ET_BASE_TYPE_LIST */
extern T0* GE_new587(T1 initialize);
/* New instance of type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
extern T0* GE_new590(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new591(T1 initialize);
/* New instance of type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new592(T1 initialize);
/* New instance of type DS_PAIR [XM_POSITION, XM_NODE] */
extern T0* GE_new593(T1 initialize);
/* New instance of type UC_UTF8_ROUTINES */
extern T0* GE_new594(T1 initialize);
/* New instance of type UC_UTF8_STRING */
extern T0* GE_new595(T1 initialize);
/* New instance of type XM_EIFFEL_INPUT_STREAM */
extern T0* GE_new596(T1 initialize);
/* New instance of type KL_CHARACTER_BUFFER */
extern T0* GE_new599(T1 initialize);
/* New instance of type KL_CHARACTER_ROUTINES */
extern T0* GE_new600(T1 initialize);
/* New instance of type TUPLE [ET_LACE_CLUSTER] */
extern T0* GE_new601(T1 initialize);
/* New instance of type ET_REGULAR_MANIFEST_STRING */
extern T0* GE_new603(T1 initialize);
/* New instance of type ET_INFIX_FREE_NAME */
extern T0* GE_new604(T1 initialize);
/* New instance of type UT_TRISTATE */
extern T0* GE_new611(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new612(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
extern T0* GE_new613(T1 initialize);
/* New instance of type TUPLE [ET_XACE_CLUSTER] */
extern T0* GE_new614(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new615(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new616(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new617(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8] */
extern T0* GE_new618(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new620(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY] */
extern T0* GE_new622(T1 initialize);
/* New instance of type DS_HASH_SET [ET_LIBRARY] */
extern T0* GE_new623(T1 initialize);
/* New instance of type TUPLE [DS_HASH_SET [ET_LIBRARY]] */
extern T0* GE_new624(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY] */
extern T0* GE_new625(T1 initialize);
/* New instance of type TUPLE [DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY], NONE] */
extern T0* GE_new626(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIBRARY] */
extern T0* GE_new627(T1 initialize);
/* New instance of type ET_FEATURE_CHECKER */
extern T0* GE_new628(T1 initialize);
/* New instance of type DS_HASH_SET [ET_CLASS] */
extern T0* GE_new629(T1 initialize);
/* New instance of type DS_HASH_SET [ET_PROCEDURE] */
extern T0* GE_new630(T1 initialize);
/* New instance of type DS_HASH_SET [ET_QUERY] */
extern T0* GE_new631(T1 initialize);
/* New instance of type ET_SUPPLIER_BUILDER */
extern T0* GE_new632(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [INTEGER_32] */
extern T0* GE_new634(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new635(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new636(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_KEYWORD] */
extern T0* GE_new637(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [ET_SYMBOL] */
extern T0* GE_new638(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
extern T0* GE_new639(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
extern T0* GE_new640(T1 initialize);
/* New instance of type KL_EIFFEL_COMPILER */
extern T0* GE_new641(T1 initialize);
/* New instance of type ET_CLIENTS */
extern T0* GE_new644(T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE */
extern T0* GE_new645(T1 initialize);
/* New instance of type SPECIAL [ET_KEYWORD] */
extern T0* GE_new647(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
extern T0* GE_new648(T1 initialize);
/* New instance of type ET_AGENT_KEYWORD */
extern T0* GE_new649(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_KEYWORD] */
extern T0* GE_new650(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
extern T0* GE_new651(T1 initialize);
/* New instance of type ET_PRECURSOR_KEYWORD */
extern T0* GE_new652(T1 initialize);
/* New instance of type SPECIAL [ET_PRECURSOR_KEYWORD] */
extern T0* GE_new653(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
extern T0* GE_new654(T1 initialize);
/* New instance of type SPECIAL [ET_SYMBOL] */
extern T0* GE_new655(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
extern T0* GE_new656(T1 initialize);
/* New instance of type SPECIAL [ET_POSITION] */
extern T0* GE_new657(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_POSITION] */
extern T0* GE_new658(T1 initialize);
/* New instance of type ET_BIT_CONSTANT */
extern T0* GE_new659(T1 initialize);
/* New instance of type SPECIAL [ET_BIT_CONSTANT] */
extern T0* GE_new660(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
extern T0* GE_new661(T1 initialize);
/* New instance of type SPECIAL [ET_BOOLEAN_CONSTANT] */
extern T0* GE_new663(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
extern T0* GE_new664(T1 initialize);
/* New instance of type SPECIAL [ET_BREAK] */
extern T0* GE_new666(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BREAK] */
extern T0* GE_new667(T1 initialize);
/* New instance of type SPECIAL [ET_CHARACTER_CONSTANT] */
extern T0* GE_new669(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
extern T0* GE_new670(T1 initialize);
/* New instance of type SPECIAL [ET_CURRENT] */
extern T0* GE_new671(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CURRENT] */
extern T0* GE_new672(T1 initialize);
/* New instance of type ET_FREE_OPERATOR */
extern T0* GE_new673(T1 initialize);
/* New instance of type SPECIAL [ET_FREE_OPERATOR] */
extern T0* GE_new674(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
extern T0* GE_new675(T1 initialize);
/* New instance of type SPECIAL [ET_INTEGER_CONSTANT] */
extern T0* GE_new677(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
extern T0* GE_new678(T1 initialize);
/* New instance of type ET_KEYWORD_OPERATOR */
extern T0* GE_new679(T1 initialize);
/* New instance of type SPECIAL [ET_KEYWORD_OPERATOR] */
extern T0* GE_new680(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
extern T0* GE_new681(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING] */
extern T0* GE_new682(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
extern T0* GE_new683(T1 initialize);
/* New instance of type SPECIAL [ET_REAL_CONSTANT] */
extern T0* GE_new685(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
extern T0* GE_new686(T1 initialize);
/* New instance of type SPECIAL [ET_RESULT] */
extern T0* GE_new687(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RESULT] */
extern T0* GE_new688(T1 initialize);
/* New instance of type ET_RETRY_INSTRUCTION */
extern T0* GE_new689(T1 initialize);
/* New instance of type SPECIAL [ET_RETRY_INSTRUCTION] */
extern T0* GE_new690(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
extern T0* GE_new691(T1 initialize);
/* New instance of type ET_SYMBOL_OPERATOR */
extern T0* GE_new692(T1 initialize);
/* New instance of type SPECIAL [ET_SYMBOL_OPERATOR] */
extern T0* GE_new693(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
extern T0* GE_new694(T1 initialize);
/* New instance of type ET_VOID */
extern T0* GE_new695(T1 initialize);
/* New instance of type SPECIAL [ET_VOID] */
extern T0* GE_new696(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_VOID] */
extern T0* GE_new697(T1 initialize);
/* New instance of type ET_SEMICOLON_SYMBOL */
extern T0* GE_new698(T1 initialize);
/* New instance of type SPECIAL [ET_SEMICOLON_SYMBOL] */
extern T0* GE_new699(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
extern T0* GE_new700(T1 initialize);
/* New instance of type SPECIAL [ET_BRACKET_SYMBOL] */
extern T0* GE_new701(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
extern T0* GE_new702(T1 initialize);
/* New instance of type ET_QUESTION_MARK_SYMBOL */
extern T0* GE_new703(T1 initialize);
/* New instance of type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new704(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new705(T1 initialize);
/* New instance of type ET_C3_CHARACTER_CONSTANT */
extern T0* GE_new706(T1 initialize);
/* New instance of type ET_VERBATIM_STRING */
extern T0* GE_new707(T1 initialize);
/* New instance of type ET_SPECIAL_MANIFEST_STRING */
extern T0* GE_new708(T1 initialize);
/* New instance of type ET_REGULAR_INTEGER_CONSTANT */
extern T0* GE_new709(T1 initialize);
/* New instance of type ET_UNDERSCORED_INTEGER_CONSTANT */
extern T0* GE_new710(T1 initialize);
/* New instance of type ET_HEXADECIMAL_INTEGER_CONSTANT */
extern T0* GE_new711(T1 initialize);
/* New instance of type ET_REGULAR_REAL_CONSTANT */
extern T0* GE_new712(T1 initialize);
/* New instance of type ET_UNDERSCORED_REAL_CONSTANT */
extern T0* GE_new713(T1 initialize);
/* New instance of type ET_TRUE_CONSTANT */
extern T0* GE_new715(T1 initialize);
/* New instance of type ET_FALSE_CONSTANT */
extern T0* GE_new716(T1 initialize);
/* New instance of type ET_C1_CHARACTER_CONSTANT */
extern T0* GE_new717(T1 initialize);
/* New instance of type ET_C2_CHARACTER_CONSTANT */
extern T0* GE_new718(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_LIST] */
extern T0* GE_new720(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_OBSOLETE] */
extern T0* GE_new722(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new723(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR_LIST] */
extern T0* GE_new724(T6 a1, T1 initialize);
/* New instance of type ET_CONVERT_FEATURE_LIST */
extern T0* GE_new725(T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new726(T6 a1, T1 initialize);
/* New instance of type ET_FEATURE_CLAUSE_LIST */
extern T0* GE_new727(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new728(T6 a1, T1 initialize);
/* New instance of type ET_INVARIANTS */
extern T0* GE_new729(T1 initialize);
/* New instance of type SPECIAL [ET_INVARIANTS] */
extern T0* GE_new730(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
extern T0* GE_new731(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_ITEM] */
extern T0* GE_new733(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_TERM_LIST] */
extern T0* GE_new735(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
extern T0* GE_new737(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_TERM] */
extern T0* GE_new741(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
extern T0* GE_new742(T1 initialize);
/* New instance of type SPECIAL [ET_INDEXING_TERM_ITEM] */
extern T0* GE_new744(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
extern T0* GE_new745(T1 initialize);
/* New instance of type ET_CREATE_EXPRESSION */
extern T0* GE_new746(T1 initialize);
/* New instance of type SPECIAL [ET_CREATE_EXPRESSION] */
extern T0* GE_new747(T6 a1, T1 initialize);
/* New instance of type ET_CUSTOM_ATTRIBUTE */
extern T0* GE_new748(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_TUPLE] */
extern T0* GE_new749(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
extern T0* GE_new750(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new751(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new752(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER */
extern T0* GE_new753(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER] */
extern T0* GE_new754(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new756(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new757(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
extern T0* GE_new759(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_TYPE] */
extern T0* GE_new760(T6 a1, T1 initialize);
/* New instance of type ET_CONSTRAINED_FORMAL_PARAMETER */
extern T0* GE_new761(T1 initialize);
/* New instance of type ET_CONSTRAINT_CREATOR */
extern T0* GE_new762(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_CREATOR] */
extern T0* GE_new763(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
extern T0* GE_new764(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new766(T6 a1, T1 initialize);
/* New instance of type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
extern T0* GE_new767(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new768(T6 a1, T1 initialize);
/* New instance of type ET_CONSTRAINT_NAMED_TYPE */
extern T0* GE_new769(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
extern T0* GE_new770(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_TYPE] */
extern T0* GE_new772(T6 a1, T1 initialize);
/* New instance of type ET_BIT_N */
extern T0* GE_new773(T1 initialize);
/* New instance of type ET_BIT_FEATURE */
extern T0* GE_new774(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new775(T1 initialize);
/* New instance of type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new777(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new778(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new779(T1 initialize);
/* New instance of type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new780(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
extern T0* GE_new781(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
extern T0* GE_new782(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new783(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT] */
extern T0* GE_new784(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT] */
extern T0* GE_new785(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_LIST] */
extern T0* GE_new786(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT_LIST] */
extern T0* GE_new787(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new788(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new789(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
extern T0* GE_new790(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
extern T0* GE_new791(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new793(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new794(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new795(T6 a1, T1 initialize);
/* New instance of type ET_RENAME */
extern T0* GE_new796(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
extern T0* GE_new797(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
extern T0* GE_new798(T1 initialize);
/* New instance of type SPECIAL [ET_EXPORT] */
extern T0* GE_new800(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CLIENTS] */
extern T0* GE_new801(T6 a1, T1 initialize);
/* New instance of type ET_ALL_EXPORT */
extern T0* GE_new802(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXPORT] */
extern T0* GE_new803(T1 initialize);
/* New instance of type ET_FEATURE_EXPORT */
extern T0* GE_new804(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_EXPORT] */
extern T0* GE_new805(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
extern T0* GE_new807(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
extern T0* GE_new808(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new809(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM] */
extern T0* GE_new810(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new811(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new812(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
extern T0* GE_new813(T1 initialize);
/* New instance of type ET_CREATOR */
extern T0* GE_new814(T1 initialize);
/* New instance of type SPECIAL [ET_CREATOR] */
extern T0* GE_new815(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATOR] */
extern T0* GE_new816(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new817(T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE] */
extern T0* GE_new819(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new821(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new822(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_LIST] */
extern T0* GE_new824(T6 a1, T1 initialize);
/* New instance of type ET_CONVERT_FUNCTION */
extern T0* GE_new825(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
extern T0* GE_new826(T1 initialize);
/* New instance of type ET_CONVERT_PROCEDURE */
extern T0* GE_new827(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
extern T0* GE_new828(T1 initialize);
/* New instance of type SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new830(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
extern T0* GE_new831(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new832(T1 initialize);
/* New instance of type SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new833(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
extern T0* GE_new834(T1 initialize);
/* New instance of type SPECIAL [ET_ASSIGNER] */
extern T0* GE_new837(T6 a1, T1 initialize);
/* New instance of type ET_PRECONDITIONS */
extern T0* GE_new838(T1 initialize);
/* New instance of type SPECIAL [ET_PRECONDITIONS] */
extern T0* GE_new839(T6 a1, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE_LIST */
extern T0* GE_new840(T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new841(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_COMPOUND] */
extern T0* GE_new842(T6 a1, T1 initialize);
/* New instance of type ET_POSTCONDITIONS */
extern T0* GE_new843(T1 initialize);
/* New instance of type SPECIAL [ET_POSTCONDITIONS] */
extern T0* GE_new844(T6 a1, T1 initialize);
/* New instance of type ET_DO_FUNCTION */
extern T0* GE_new845(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new846(T6 a1, T1 initialize);
/* New instance of type ET_ONCE_FUNCTION */
extern T0* GE_new847(T1 initialize);
/* New instance of type ET_DEFERRED_FUNCTION */
extern T0* GE_new848(T1 initialize);
/* New instance of type SPECIAL [ET_EXTERNAL_ALIAS] */
extern T0* GE_new851(T6 a1, T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE */
extern T0* GE_new852(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE */
extern T0* GE_new853(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
extern T0* GE_new854(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
extern T0* GE_new855(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
extern T0* GE_new856(T1 initialize);
/* New instance of type ET_PREFIX_NAME */
extern T0* GE_new857(T1 initialize);
/* New instance of type ET_PREFIX_FREE_NAME */
extern T0* GE_new858(T1 initialize);
/* New instance of type ET_INFIX_NAME */
extern T0* GE_new859(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new860(T1 initialize);
/* New instance of type ET_ALIAS_NAME */
extern T0* GE_new861(T1 initialize);
/* New instance of type SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new862(T6 a1, T1 initialize);
/* New instance of type ET_ALIASED_FEATURE_NAME */
extern T0* GE_new863(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
extern T0* GE_new864(T1 initialize);
/* New instance of type ET_ALIAS_FREE_NAME */
extern T0* GE_new865(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new866(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new868(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_ARGUMENT] */
extern T0* GE_new869(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
extern T0* GE_new871(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new872(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new873(T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new875(T6 a1, T1 initialize);
/* New instance of type ET_LOCAL_VARIABLE */
extern T0* GE_new876(T1 initialize);
/* New instance of type SPECIAL [ET_LOCAL_VARIABLE] */
extern T0* GE_new877(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
extern T0* GE_new879(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new880(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
extern T0* GE_new881(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
extern T0* GE_new882(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
extern T0* GE_new883(T1 initialize);
/* New instance of type ET_LOOP_INVARIANTS */
extern T0* GE_new884(T1 initialize);
/* New instance of type SPECIAL [ET_LOOP_INVARIANTS] */
extern T0* GE_new885(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
extern T0* GE_new886(T1 initialize);
/* New instance of type ET_VARIANT */
extern T0* GE_new887(T1 initialize);
/* New instance of type SPECIAL [ET_VARIANT] */
extern T0* GE_new888(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_VARIANT] */
extern T0* GE_new889(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
extern T0* GE_new890(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new891(T1 initialize);
/* New instance of type ET_LABELED_ACTUAL_PARAMETER */
extern T0* GE_new892(T1 initialize);
/* New instance of type ET_LIKE_FEATURE */
extern T0* GE_new894(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
extern T0* GE_new895(T1 initialize);
/* New instance of type ET_LIKE_CURRENT */
extern T0* GE_new896(T1 initialize);
/* New instance of type SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new898(T6 a1, T1 initialize);
/* New instance of type ET_ASSIGNER_INSTRUCTION */
extern T0* GE_new899(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
extern T0* GE_new900(T1 initialize);
/* New instance of type ET_BRACKET_EXPRESSION */
extern T0* GE_new901(T1 initialize);
/* New instance of type SPECIAL [ET_BRACKET_EXPRESSION] */
extern T0* GE_new902(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_WRITABLE] */
extern T0* GE_new903(T6 a1, T1 initialize);
/* New instance of type ET_ASSIGNMENT */
extern T0* GE_new904(T1 initialize);
/* New instance of type ET_ASSIGNMENT_ATTEMPT */
extern T0* GE_new905(T1 initialize);
/* New instance of type ET_IF_INSTRUCTION */
extern T0* GE_new906(T1 initialize);
/* New instance of type SPECIAL [ET_IF_INSTRUCTION] */
extern T0* GE_new907(T6 a1, T1 initialize);
/* New instance of type ET_INSPECT_INSTRUCTION */
extern T0* GE_new908(T1 initialize);
/* New instance of type SPECIAL [ET_INSPECT_INSTRUCTION] */
extern T0* GE_new909(T6 a1, T1 initialize);
/* New instance of type ET_LOOP_INSTRUCTION */
extern T0* GE_new911(T1 initialize);
/* New instance of type ET_DEBUG_INSTRUCTION */
extern T0* GE_new912(T1 initialize);
/* New instance of type SPECIAL [ET_DEBUG_INSTRUCTION] */
extern T0* GE_new913(T6 a1, T1 initialize);
/* New instance of type ET_CHECK_INSTRUCTION */
extern T0* GE_new914(T1 initialize);
/* New instance of type ET_BANG_INSTRUCTION */
extern T0* GE_new916(T1 initialize);
/* New instance of type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new917(T6 a1, T1 initialize);
/* New instance of type ET_QUALIFIED_CALL */
extern T0* GE_new918(T1 initialize);
/* New instance of type ET_CREATE_INSTRUCTION */
extern T0* GE_new920(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
extern T0* GE_new921(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
extern T0* GE_new922(T1 initialize);
/* New instance of type ET_ELSEIF_PART_LIST */
extern T0* GE_new923(T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART_LIST] */
extern T0* GE_new924(T6 a1, T1 initialize);
/* New instance of type ET_ELSEIF_PART */
extern T0* GE_new925(T1 initialize);
/* New instance of type SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new926(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
extern T0* GE_new927(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
extern T0* GE_new928(T1 initialize);
/* New instance of type ET_WHEN_PART_LIST */
extern T0* GE_new929(T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART_LIST] */
extern T0* GE_new930(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
extern T0* GE_new931(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
extern T0* GE_new932(T1 initialize);
/* New instance of type ET_WHEN_PART */
extern T0* GE_new933(T1 initialize);
/* New instance of type SPECIAL [ET_WHEN_PART] */
extern T0* GE_new934(T6 a1, T1 initialize);
/* New instance of type ET_CHOICE_LIST */
extern T0* GE_new935(T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_LIST] */
extern T0* GE_new936(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
extern T0* GE_new937(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
extern T0* GE_new938(T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE] */
extern T0* GE_new940(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new942(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
extern T0* GE_new943(T1 initialize);
/* New instance of type SPECIAL [ET_CHOICE_CONSTANT] */
extern T0* GE_new945(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE] */
extern T0* GE_new946(T1 initialize);
/* New instance of type ET_CHOICE_RANGE */
extern T0* GE_new947(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
extern T0* GE_new948(T1 initialize);
/* New instance of type ET_STATIC_CALL_EXPRESSION */
extern T0* GE_new949(T1 initialize);
/* New instance of type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new950(T6 a1, T1 initialize);
/* New instance of type ET_MANIFEST_STRING_LIST */
extern T0* GE_new951(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_LIST] */
extern T0* GE_new952(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
extern T0* GE_new953(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
extern T0* GE_new954(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new956(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new957(T1 initialize);
/* New instance of type ET_PRECURSOR_INSTRUCTION */
extern T0* GE_new958(T1 initialize);
/* New instance of type ET_STATIC_CALL_INSTRUCTION */
extern T0* GE_new960(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new961(T1 initialize);
/* New instance of type ET_PRECURSOR_EXPRESSION */
extern T0* GE_new962(T1 initialize);
/* New instance of type ET_PARENTHESIZED_EXPRESSION */
extern T0* GE_new963(T1 initialize);
/* New instance of type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new964(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new965(T1 initialize);
/* New instance of type ET_FEATURE_ADDRESS */
extern T0* GE_new966(T1 initialize);
/* New instance of type ET_CURRENT_ADDRESS */
extern T0* GE_new967(T1 initialize);
/* New instance of type ET_RESULT_ADDRESS */
extern T0* GE_new968(T1 initialize);
/* New instance of type ET_EXPRESSION_ADDRESS */
extern T0* GE_new969(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
extern T0* GE_new970(T1 initialize);
/* New instance of type ET_INFIX_EXPRESSION */
extern T0* GE_new971(T1 initialize);
/* New instance of type ET_INFIX_AND_THEN_OPERATOR */
extern T0* GE_new972(T1 initialize);
/* New instance of type ET_INFIX_OR_ELSE_OPERATOR */
extern T0* GE_new973(T1 initialize);
/* New instance of type ET_EQUALITY_EXPRESSION */
extern T0* GE_new974(T1 initialize);
/* New instance of type ET_PREFIX_EXPRESSION */
extern T0* GE_new975(T1 initialize);
/* New instance of type ET_OLD_EXPRESSION */
extern T0* GE_new976(T1 initialize);
/* New instance of type ET_CALL_AGENT */
extern T0* GE_new977(T1 initialize);
/* New instance of type SPECIAL [ET_CALL_AGENT] */
extern T0* GE_new978(T6 a1, T1 initialize);
/* New instance of type ET_ONCE_MANIFEST_STRING */
extern T0* GE_new979(T1 initialize);
/* New instance of type ET_MANIFEST_ARRAY */
extern T0* GE_new980(T1 initialize);
/* New instance of type SPECIAL [ET_MANIFEST_ARRAY] */
extern T0* GE_new981(T6 a1, T1 initialize);
/* New instance of type ET_STRIP_EXPRESSION */
extern T0* GE_new982(T1 initialize);
/* New instance of type SPECIAL [ET_STRIP_EXPRESSION] */
extern T0* GE_new983(T6 a1, T1 initialize);
/* New instance of type ET_BRACKET_ARGUMENT_LIST */
extern T0* GE_new984(T1 initialize);
/* New instance of type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new985(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
extern T0* GE_new986(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new987(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new988(T1 initialize);
/* New instance of type ET_MANIFEST_TYPE */
extern T0* GE_new989(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
extern T0* GE_new990(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
extern T0* GE_new991(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
extern T0* GE_new992(T1 initialize);
/* New instance of type ET_AGENT_ARGUMENT_OPERAND_LIST */
extern T0* GE_new993(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new994(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
extern T0* GE_new995(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_TARGET] */
extern T0* GE_new996(T6 a1, T1 initialize);
/* New instance of type ET_AGENT_OPEN_TARGET */
extern T0* GE_new997(T1 initialize);
/* New instance of type ET_DO_FUNCTION_INLINE_AGENT */
extern T0* GE_new998(T1 initialize);
/* New instance of type ET_ONCE_FUNCTION_INLINE_AGENT */
extern T0* GE_new999(T1 initialize);
/* New instance of type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
extern T0* GE_new1000(T1 initialize);
/* New instance of type ET_DO_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1001(T1 initialize);
/* New instance of type ET_ONCE_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1002(T1 initialize);
/* New instance of type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
extern T0* GE_new1003(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
extern T0* GE_new1004(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1005(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1006(T6 a1, T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1008(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1009(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1010(T1 initialize);
/* New instance of type ET_AGENT_TYPED_OPEN_ARGUMENT */
extern T0* GE_new1011(T1 initialize);
/* New instance of type ET_TAGGED_ASSERTION */
extern T0* GE_new1013(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
extern T0* GE_new1014(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1015(T1 initialize);
/* New instance of type ET_PARENT_CHECKER1 */
extern T0* GE_new1016(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER1 */
extern T0* GE_new1017(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1018(T1 initialize);
/* New instance of type ET_FEATURE_NAME_TESTER */
extern T0* GE_new1019(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1021(T1 initialize);
/* New instance of type ET_ALIAS_NAME_TESTER */
extern T0* GE_new1022(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLIENT_LIST] */
extern T0* GE_new1024(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1025(T1 initialize);
/* New instance of type ET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1026(T1 initialize);
/* New instance of type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
extern T0* GE_new1027(T1 initialize);
/* New instance of type ET_IDENTIFIER_TYPE_RESOLVER */
extern T0* GE_new1028(T1 initialize);
/* New instance of type ET_ANCHORED_TYPE_CHECKER */
extern T0* GE_new1029(T1 initialize);
/* New instance of type ET_SIGNATURE_CHECKER */
extern T0* GE_new1030(T1 initialize);
/* New instance of type ET_PARENT_CHECKER2 */
extern T0* GE_new1031(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_CHECKER2 */
extern T0* GE_new1032(T1 initialize);
/* New instance of type ET_PRECURSOR_CHECKER */
extern T0* GE_new1033(T1 initialize);
/* New instance of type ET_PARENT_CHECKER3 */
extern T0* GE_new1034(T1 initialize);
/* New instance of type ET_BRACED_TYPE_LIST */
extern T0* GE_new1036(T1 initialize);
/* New instance of type ET_CLASS_TYPE_CHECKER1 */
extern T0* GE_new1037(T1 initialize);
/* New instance of type ET_CLASS_TYPE_CHECKER2 */
extern T0* GE_new1038(T1 initialize);
/* New instance of type ET_CLASS_TYPE_CHECKER3 */
extern T0* GE_new1039(T1 initialize);
/* New instance of type DS_ARRAYED_STACK [YY_BUFFER] */
extern T0* GE_new1040(T1 initialize);
/* New instance of type UT_SYNTAX_ERROR */
extern T0* GE_new1041(T1 initialize);
/* New instance of type UT_TOO_MANY_INCLUDES_ERROR */
extern T0* GE_new1042(T1 initialize);
/* New instance of type TO_SPECIAL [AP_OPTION] */
extern T0* GE_new1043(T1 initialize);
/* New instance of type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
extern T0* GE_new1044(T1 initialize);
/* New instance of type XM_NAMESPACE_RESOLVER_CONTEXT */
extern T0* GE_new1045(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [STRING_8] */
extern T0* GE_new1047(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8] */
extern T0* GE_new1048(T1 initialize);
/* New instance of type TO_SPECIAL [ET_XACE_LIBRARY_CONFIG] */
extern T0* GE_new1049(T1 initialize);
/* New instance of type XM_EIFFEL_CHARACTER_ENTITY */
extern T0* GE_new1050(T1 initialize);
/* New instance of type DS_LINKED_STACK [INTEGER_32] */
extern T0* GE_new1051(T1 initialize);
/* New instance of type DS_BILINKABLE [XM_POSITION] */
extern T0* GE_new1052(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
extern T0* GE_new1053(T1 initialize);
/* New instance of type DS_LINKABLE [XM_EIFFEL_SCANNER] */
extern T0* GE_new1054(T1 initialize);
/* New instance of type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1055(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1056(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1058(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1060(T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1061(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1062(T1 initialize);
/* New instance of type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1063(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1064(T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1065(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [STRING_8] */
extern T0* GE_new1066(T1 initialize);
/* New instance of type DS_BILINKABLE [STRING_8] */
extern T0* GE_new1067(T1 initialize);
/* New instance of type TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
extern T0* GE_new1068(T1 initialize);
/* New instance of type TO_SPECIAL [XM_EIFFEL_DECLARATION] */
extern T0* GE_new1069(T1 initialize);
/* New instance of type TO_SPECIAL [BOOLEAN] */
extern T0* GE_new1070(T1 initialize);
/* New instance of type TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
extern T0* GE_new1071(T1 initialize);
/* New instance of type TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1072(T1 initialize);
/* New instance of type TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
extern T0* GE_new1073(T1 initialize);
/* New instance of type TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
extern T0* GE_new1074(T1 initialize);
/* New instance of type TO_SPECIAL [DS_BILINKED_LIST [STRING_8]] */
extern T0* GE_new1075(T1 initialize);
/* New instance of type TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
extern T0* GE_new1076(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
extern T0* GE_new1078(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
extern T0* GE_new1079(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
extern T0* GE_new1080(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
extern T0* GE_new1081(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLASS] */
extern T0* GE_new1082(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLASS_NAME] */
extern T0* GE_new1083(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DYNAMIC_TYPE] */
extern T0* GE_new1084(T1 initialize);
/* New instance of type EXCEPTIONS */
extern T0* GE_new1085(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1086(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
extern T0* GE_new1087(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPRESSION] */
extern T0* GE_new1088(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32] */
extern T0* GE_new1089(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
extern T0* GE_new1090(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE] */
extern T0* GE_new1091(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT] */
extern T0* GE_new1092(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPRESSION_ITEM] */
extern T0* GE_new1093(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CALL_EXPRESSION] */
extern T0* GE_new1094(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
extern T0* GE_new1095(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE] */
extern T0* GE_new1096(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
extern T0* GE_new1097(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTANT] */
extern T0* GE_new1098(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INLINE_CONSTANT] */
extern T0* GE_new1099(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE] */
extern T0* GE_new1100(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
extern T0* GE_new1101(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8] */
extern T0* GE_new1102(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new1103(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new1105(T1 initialize);
/* New instance of type SPECIAL [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1106(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1107(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1108(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INLINE_AGENT] */
extern T0* GE_new1110(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PROCEDURE] */
extern T0* GE_new1111(T1 initialize);
/* New instance of type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
extern T0* GE_new1112(T1 initialize);
/* New instance of type TO_SPECIAL [ET_QUERY] */
extern T0* GE_new1113(T1 initialize);
/* New instance of type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
extern T0* GE_new1114(T1 initialize);
/* New instance of type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
extern T0* GE_new1115(T1 initialize);
/* New instance of type TO_SPECIAL [ET_TYPE] */
extern T0* GE_new1116(T1 initialize);
/* New instance of type UC_UNICODE_ROUTINES */
extern T0* GE_new1117(T1 initialize);
/* New instance of type ET_XACE_INVALID_EXPRESSION_ERROR */
extern T0* GE_new1118(T1 initialize);
/* New instance of type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
extern T0* GE_new1120(T1 initialize);
/* New instance of type KL_DIRECTORY */
extern T0* GE_new1122(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLASS] */
extern T0* GE_new1123(T1 initialize);
/* New instance of type KL_ARRAY_ROUTINES [INTEGER_32] */
extern T0* GE_new1124(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_CLUSTER] */
extern T0* GE_new1125(T1 initialize);
/* New instance of type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
extern T0* GE_new1126(T1 initialize);
/* New instance of type KL_STDIN_FILE */
extern T0* GE_new1127(T1 initialize);
/* New instance of type ET_FILE_POSITION */
extern T0* GE_new1128(T1 initialize);
/* New instance of type ET_FORMAL_PARAMETER_TYPE */
extern T0* GE_new1133(T1 initialize);
/* New instance of type ARRAY [ET_TYPE] */
extern T0* GE_new1135(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1136(T1 initialize);
/* New instance of type INTEGER_OVERFLOW_CHECKER */
extern T0* GE_new1141(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1142(T1 initialize);
/* New instance of type DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
extern T0* GE_new1143(T1 initialize);
/* New instance of type SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new1144(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
extern T0* GE_new1145(T1 initialize);
/* New instance of type DS_LINKED_QUEUE [CHARACTER_8] */
extern T0* GE_new1147(T1 initialize);
/* New instance of type UC_UTF16_ROUTINES */
extern T0* GE_new1148(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1149(T1 initialize);
/* New instance of type DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
extern T0* GE_new1150(T1 initialize);
/* New instance of type SPECIAL [ET_XACE_CLUSTER] */
extern T0* GE_new1151(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
extern T0* GE_new1152(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
extern T0* GE_new1153(T1 initialize);
/* New instance of type TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
extern T0* GE_new1154(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8] */
extern T0* GE_new1155(T1 initialize);
/* New instance of type SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1156(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1157(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1158(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_LIBRARY] */
extern T0* GE_new1159(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIBRARY] */
extern T0* GE_new1160(T1 initialize);
/* New instance of type SPECIAL [ET_LIBRARY] */
extern T0* GE_new1161(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new1162(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIBRARY] */
extern T0* GE_new1163(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_CLASS] */
extern T0* GE_new1164(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_PROCEDURE] */
extern T0* GE_new1165(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_QUERY] */
extern T0* GE_new1166(T1 initialize);
/* New instance of type SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1167(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
extern T0* GE_new1168(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
extern T0* GE_new1169(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
extern T0* GE_new1170(T1 initialize);
/* New instance of type TO_SPECIAL [ET_KEYWORD] */
extern T0* GE_new1171(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_KEYWORD] */
extern T0* GE_new1172(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
extern T0* GE_new1173(T1 initialize);
/* New instance of type TO_SPECIAL [ET_SYMBOL] */
extern T0* GE_new1174(T1 initialize);
/* New instance of type TO_SPECIAL [ET_POSITION] */
extern T0* GE_new1175(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BIT_CONSTANT] */
extern T0* GE_new1176(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
extern T0* GE_new1177(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BREAK] */
extern T0* GE_new1178(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
extern T0* GE_new1179(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CURRENT] */
extern T0* GE_new1180(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FREE_OPERATOR] */
extern T0* GE_new1181(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INTEGER_CONSTANT] */
extern T0* GE_new1182(T1 initialize);
/* New instance of type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
extern T0* GE_new1183(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_STRING] */
extern T0* GE_new1184(T1 initialize);
/* New instance of type TO_SPECIAL [ET_REAL_CONSTANT] */
extern T0* GE_new1185(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RESULT] */
extern T0* GE_new1186(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
extern T0* GE_new1187(T1 initialize);
/* New instance of type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
extern T0* GE_new1188(T1 initialize);
/* New instance of type TO_SPECIAL [ET_VOID] */
extern T0* GE_new1189(T1 initialize);
/* New instance of type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
extern T0* GE_new1190(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BRACKET_SYMBOL] */
extern T0* GE_new1191(T1 initialize);
/* New instance of type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
extern T0* GE_new1192(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_LIST] */
extern T0* GE_new1193(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_ITEM] */
extern T0* GE_new1194(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
extern T0* GE_new1195(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_TERM] */
extern T0* GE_new1196(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
extern T0* GE_new1197(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
extern T0* GE_new1198(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
extern T0* GE_new1199(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER] */
extern T0* GE_new1200(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
extern T0* GE_new1201(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
extern T0* GE_new1202(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1203(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
extern T0* GE_new1204(T1 initialize);
/* New instance of type TO_SPECIAL [ET_OBSOLETE] */
extern T0* GE_new1205(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENT_LIST] */
extern T0* GE_new1206(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENT] */
extern T0* GE_new1207(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENT_ITEM] */
extern T0* GE_new1208(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RENAME_LIST] */
extern T0* GE_new1209(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RENAME_ITEM] */
extern T0* GE_new1210(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPORT_LIST] */
extern T0* GE_new1211(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXPORT] */
extern T0* GE_new1212(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_EXPORT] */
extern T0* GE_new1213(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENTS] */
extern T0* GE_new1214(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENT_ITEM] */
extern T0* GE_new1215(T1 initialize);
/* New instance of type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
extern T0* GE_new1216(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
extern T0* GE_new1217(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CREATOR_LIST] */
extern T0* GE_new1218(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CREATOR] */
extern T0* GE_new1219(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
extern T0* GE_new1220(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
extern T0* GE_new1221(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CONVERT_FEATURE] */
extern T0* GE_new1222(T1 initialize);
/* New instance of type TO_SPECIAL [ET_TYPE_LIST] */
extern T0* GE_new1223(T1 initialize);
/* New instance of type TO_SPECIAL [ET_TYPE_ITEM] */
extern T0* GE_new1224(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
extern T0* GE_new1225(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_CLAUSE] */
extern T0* GE_new1226(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
extern T0* GE_new1227(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ASSIGNER] */
extern T0* GE_new1228(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FEATURE_NAME] */
extern T0* GE_new1229(T1 initialize);
/* New instance of type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
extern T0* GE_new1230(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ALIAS_NAME] */
extern T0* GE_new1231(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
extern T0* GE_new1232(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
extern T0* GE_new1233(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
extern T0* GE_new1234(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
extern T0* GE_new1235(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOCAL_VARIABLE] */
extern T0* GE_new1236(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
extern T0* GE_new1237(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PRECONDITIONS] */
extern T0* GE_new1238(T1 initialize);
/* New instance of type TO_SPECIAL [ET_POSTCONDITIONS] */
extern T0* GE_new1239(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INVARIANTS] */
extern T0* GE_new1240(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LOOP_INVARIANTS] */
extern T0* GE_new1241(T1 initialize);
/* New instance of type TO_SPECIAL [ET_VARIANT] */
extern T0* GE_new1242(T1 initialize);
/* New instance of type TO_SPECIAL [ET_COMPOUND] */
extern T0* GE_new1243(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
extern T0* GE_new1244(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LIKE_TYPE] */
extern T0* GE_new1245(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INSTRUCTION] */
extern T0* GE_new1246(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CREATE_EXPRESSION] */
extern T0* GE_new1247(T1 initialize);
/* New instance of type TO_SPECIAL [ET_IF_INSTRUCTION] */
extern T0* GE_new1248(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
extern T0* GE_new1249(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ELSEIF_PART] */
extern T0* GE_new1250(T1 initialize);
/* New instance of type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
extern T0* GE_new1251(T1 initialize);
/* New instance of type TO_SPECIAL [ET_WHEN_PART_LIST] */
extern T0* GE_new1252(T1 initialize);
/* New instance of type TO_SPECIAL [ET_WHEN_PART] */
extern T0* GE_new1253(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE_LIST] */
extern T0* GE_new1254(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE_ITEM] */
extern T0* GE_new1255(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE] */
extern T0* GE_new1256(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CHOICE_CONSTANT] */
extern T0* GE_new1257(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
extern T0* GE_new1258(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
extern T0* GE_new1259(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
extern T0* GE_new1260(T1 initialize);
/* New instance of type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
extern T0* GE_new1261(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
extern T0* GE_new1262(T1 initialize);
/* New instance of type TO_SPECIAL [ET_WRITABLE] */
extern T0* GE_new1263(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
extern T0* GE_new1264(T1 initialize);
/* New instance of type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
extern T0* GE_new1265(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
extern T0* GE_new1266(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_ARRAY] */
extern T0* GE_new1267(T1 initialize);
/* New instance of type TO_SPECIAL [ET_MANIFEST_TUPLE] */
extern T0* GE_new1268(T1 initialize);
/* New instance of type TO_SPECIAL [ET_STRIP_EXPRESSION] */
extern T0* GE_new1269(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CALL_AGENT] */
extern T0* GE_new1270(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_TARGET] */
extern T0* GE_new1271(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
extern T0* GE_new1272(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
extern T0* GE_new1273(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
extern T0* GE_new1274(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_CLASS] */
extern T0* GE_new1275(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1277(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
extern T0* GE_new1279(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
extern T0* GE_new1280(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1282(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1284(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
extern T0* GE_new1285(T1 initialize);
/* New instance of type SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1287(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1288(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1290(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT_LIST] */
extern T0* GE_new1291(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1292(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST] */
extern T0* GE_new1293(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1295(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1297(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLIENT] */
extern T0* GE_new1298(T1 initialize);
/* New instance of type SPECIAL [ET_CLIENT] */
extern T0* GE_new1299(T6 a1, T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1300(T1 initialize);
/* New instance of type DS_HASH_SET [ET_FEATURE_NAME] */
extern T0* GE_new1301(T1 initialize);
/* New instance of type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1302(T1 initialize);
/* New instance of type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1303(T1 initialize);
/* New instance of type ET_DOTNET_SIGNATURE_TESTER */
extern T0* GE_new1304(T1 initialize);
/* New instance of type DS_HASH_SET [ET_DOTNET_FEATURE] */
extern T0* GE_new1305(T1 initialize);
/* New instance of type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1307(T1 initialize);
/* New instance of type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
extern T0* GE_new1308(T1 initialize);
/* New instance of type ET_REDECLARED_FEATURE */
extern T0* GE_new1309(T1 initialize);
/* New instance of type SPECIAL [YY_BUFFER] */
extern T0* GE_new1310(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [YY_BUFFER] */
extern T0* GE_new1311(T1 initialize);
/* New instance of type DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1313(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1314(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8] */
extern T0* GE_new1316(T1 initialize);
/* New instance of type TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
extern T0* GE_new1317(T1 initialize);
/* New instance of type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1318(T1 initialize);
/* New instance of type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
extern T0* GE_new1319(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE] */
extern T0* GE_new1328(T1 initialize);
/* New instance of type TO_SPECIAL [DS_LINKABLE [INTEGER_32]] */
extern T0* GE_new1329(T1 initialize);
/* New instance of type SPECIAL [NATURAL_8] */
extern T0* GE_new1330(T6 a1, T1 initialize);
/* New instance of type STRING_SEARCHER */
extern T0* GE_new1331(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
extern T0* GE_new1332(T1 initialize);
/* New instance of type ET_CLUSTER_ERROR */
extern T0* GE_new1333(T1 initialize);
/* New instance of type ET_SYNTAX_ERROR */
extern T0* GE_new1334(T1 initialize);
/* New instance of type DS_HASH_SET [XM_NAMESPACE] */
extern T0* GE_new1336(T1 initialize);
/* New instance of type XM_COMMENT */
extern T0* GE_new1337(T1 initialize);
/* New instance of type XM_PROCESSING_INSTRUCTION */
extern T0* GE_new1338(T1 initialize);
/* New instance of type XM_CHARACTER_DATA */
extern T0* GE_new1339(T1 initialize);
/* New instance of type XM_NAMESPACE */
extern T0* GE_new1340(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1341(T1 initialize);
/* New instance of type ET_FORMAL_COMMA_ARGUMENT */
extern T0* GE_new1342(T1 initialize);
/* New instance of type ET_LOCAL_COMMA_VARIABLE */
extern T0* GE_new1343(T1 initialize);
/* New instance of type ET_LABELED_COMMA_ACTUAL_PARAMETER */
extern T0* GE_new1344(T1 initialize);
/* New instance of type ET_KEYWORD_EXPRESSION */
extern T0* GE_new1345(T1 initialize);
/* New instance of type ET_FEATURE_LIST */
extern T0* GE_new1349(T1 initialize);
/* New instance of type ET_PARENT_FEATURE */
extern T0* GE_new1351(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_QUERY] */
extern T0* GE_new1352(T1 initialize);
/* New instance of type DS_QUICK_SORTER [ET_PROCEDURE] */
extern T0* GE_new1353(T1 initialize);
/* New instance of type ET_INHERITED_FEATURE */
extern T0* GE_new1354(T1 initialize);
/* New instance of type ET_FEATURE_IDS */
extern T0* GE_new1356(T1 initialize);
/* New instance of type ET_DYNAMIC_TARGET_LIST */
extern T0* GE_new1362(T1 initialize);
/* New instance of type ET_COMPRESSED_POSITION */
extern T0* GE_new1365(T1 initialize);
/* New instance of type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
extern T0* GE_new1366(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_CURRENT_TARGET */
extern T0* GE_new1376(T1 initialize);
/* New instance of type ET_REPLICATED_FEATURE */
extern T0* GE_new1380(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
extern T0* GE_new1381(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1382(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
extern T0* GE_new1384(T1 initialize);
/* New instance of type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
extern T0* GE_new1385(T1 initialize);
/* New instance of type DS_LINKED_LIST [ET_PARENT_FEATURE] */
extern T0* GE_new1386(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1387(T1 initialize);
/* New instance of type SPECIAL [ARRAY [INTEGER_32]] */
extern T0* GE_new1388(T6 a1, T1 initialize);
/* New instance of type SPECIAL [SPECIAL [ARRAY [INTEGER_32]]] */
extern T0* GE_new1389(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
extern T0* GE_new1391(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_CLUSTER] */
extern T0* GE_new1392(T1 initialize);
/* New instance of type SPECIAL [ET_CLUSTER] */
extern T0* GE_new1393(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_CLUSTER] */
extern T0* GE_new1394(T1 initialize);
/* New instance of type SPECIAL [NATURAL_64] */
extern T0* GE_new1395(T6 a1, T1 initialize);
/* New instance of type TO_SPECIAL [ET_BASE_TYPE] */
extern T0* GE_new1396(T1 initialize);
/* New instance of type DS_LINKABLE [CHARACTER_8] */
extern T0* GE_new1397(T1 initialize);
/* New instance of type TO_SPECIAL [ET_XACE_CLUSTER] */
extern T0* GE_new1398(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ADAPTED_LIBRARY] */
extern T0* GE_new1400(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LIBRARY] */
extern T0* GE_new1401(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new1403(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new1405(T1 initialize);
/* New instance of type TO_SPECIAL [ET_ASSERTION_ITEM] */
extern T0* GE_new1406(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS] */
extern T0* GE_new1408(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1410(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS] */
extern T0* GE_new1411(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1412(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
extern T0* GE_new1413(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
extern T0* GE_new1414(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FLATTENED_FEATURE] */
extern T0* GE_new1415(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
extern T0* GE_new1416(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENT_LIST] */
extern T0* GE_new1417(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS] */
extern T0* GE_new1418(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLIENT] */
extern T0* GE_new1419(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1420(T1 initialize);
/* New instance of type SPECIAL [ET_RENAME] */
extern T0* GE_new1421(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1423(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_RENAME] */
extern T0* GE_new1425(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
extern T0* GE_new1426(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1427(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1428(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1430(T1 initialize);
/* New instance of type SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1431(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1433(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1435(T1 initialize);
/* New instance of type SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1436(T6 a1, T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1437(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
extern T0* GE_new1438(T1 initialize);
/* New instance of type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1439(T6 a1, T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1441(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1443(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1444(T1 initialize);
/* New instance of type DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER] */
extern T0* GE_new1446(T1 initialize);
/* New instance of type TO_SPECIAL [YY_BUFFER] */
extern T0* GE_new1447(T1 initialize);
/* New instance of type DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]] */
extern T0* GE_new1448(T1 initialize);
/* New instance of type KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER */
extern T0* GE_new1451(T1 initialize);
/* New instance of type AP_OPTION_COMPARATOR */
extern T0* GE_new1452(T1 initialize);
/* New instance of type DS_QUICK_SORTER [AP_OPTION] */
extern T0* GE_new1453(T1 initialize);
/* New instance of type STD_FILES */
extern T0* GE_new1459(T1 initialize);
/* New instance of type TUPLE [ET_C_GENERATOR, INTEGER_32, ET_CURRENT, ET_DYNAMIC_TUPLE_TYPE, BOOLEAN] */
extern T0* GE_new1461(T1 initialize);
/* New instance of type PLATFORM */
extern T0* GE_new1462(T1 initialize);
/* New instance of type DS_LINKABLE [XM_NODE] */
extern T0* GE_new1464(T1 initialize);
/* New instance of type XM_NODE_TYPER */
extern T0* GE_new1465(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1471(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1472(T1 initialize);
/* New instance of type ET_SEEDED_QUERY_COMPARATOR */
extern T0* GE_new1475(T1 initialize);
/* New instance of type ET_SEEDED_PROCEDURE_COMPARATOR */
extern T0* GE_new1478(T1 initialize);
/* New instance of type KL_STRING_INPUT_STREAM */
extern T0* GE_new1481(T1 initialize);
/* New instance of type SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1491(T6 a1, T1 initialize);
/* New instance of type KL_EQUALITY_TESTER [XM_NAMESPACE] */
extern T0* GE_new1492(T1 initialize);
/* New instance of type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
extern T0* GE_new1493(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
extern T0* GE_new1494(T1 initialize);
/* New instance of type SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1495(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1496(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1497(T1 initialize);
/* New instance of type SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1498(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
extern T0* GE_new1499(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
extern T0* GE_new1501(T1 initialize);
/* New instance of type DS_LINKABLE [ET_ADAPTED_FEATURE] */
extern T0* GE_new1502(T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
extern T0* GE_new1503(T1 initialize);
/* New instance of type SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1504(T6 a1, T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
extern T0* GE_new1505(T1 initialize);
/* New instance of type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
extern T0* GE_new1506(T1 initialize);
/* New instance of type DS_LINKABLE [ET_DOTNET_FEATURE] */
extern T0* GE_new1507(T1 initialize);
/* New instance of type SPECIAL [ET_LIKE_IDENTIFIER] */
extern T0* GE_new1508(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
extern T0* GE_new1509(T1 initialize);
/* New instance of type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
extern T0* GE_new1510(T1 initialize);
/* New instance of type TO_SPECIAL [ET_CLUSTER] */
extern T0* GE_new1511(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY] */
extern T0* GE_new1512(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS] */
extern T0* GE_new1513(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1516(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1518(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
extern T0* GE_new1522(T1 initialize);
/* New instance of type TO_SPECIAL [ET_RENAME] */
extern T0* GE_new1523(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
extern T0* GE_new1524(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32] */
extern T0* GE_new1525(T1 initialize);
/* New instance of type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
extern T0* GE_new1526(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DOTNET_FEATURE] */
extern T0* GE_new1527(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
extern T0* GE_new1528(T1 initialize);
/* New instance of type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
extern T0* GE_new1529(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER] */
extern T0* GE_new1531(T1 initialize);
/* New instance of type DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
extern T0* GE_new1533(T1 initialize);
/* New instance of type ET_CONVERT_EXPRESSION */
extern T0* GE_new1539(T1 initialize);
/* New instance of type ET_CONVERT_TO_EXPRESSION */
extern T0* GE_new1540(T1 initialize);
/* New instance of type ET_INFIX_CAST_EXPRESSION */
extern T0* GE_new1544(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
extern T0* GE_new1548(T1 initialize);
/* New instance of type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
extern T0* GE_new1549(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
extern T0* GE_new1555(T1 initialize);
/* New instance of type TO_SPECIAL [XM_NAMESPACE] */
extern T0* GE_new1556(T1 initialize);
/* New instance of type TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE] */
extern T0* GE_new1557(T1 initialize);
/* New instance of type TO_SPECIAL [ET_DYNAMIC_TARGET] */
extern T0* GE_new1558(T1 initialize);
/* New instance of type TO_SPECIAL [ET_PARENT_FEATURE] */
extern T0* GE_new1559(T1 initialize);
/* New instance of type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
extern T0* GE_new1560(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER] */
extern T0* GE_new1563(T1 initialize);
/* New instance of type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER] */
extern T0* GE_new1568(T1 initialize);
/* New instance of type ET_DOTNET_ASSEMBLY_ERROR */
extern T0* GE_new1569(T1 initialize);
/* New instance of type CONSOLE */
extern T0* GE_new1575(T1 initialize);
/* New instance of type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1576(T6 a1, T1 initialize);
/* New instance of type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1577(T1 initialize);
/* New instance of type DS_LINKABLE [ET_PARENT_FEATURE] */
extern T0* GE_new1581(T1 initialize);
/* New instance of type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
extern T0* GE_new1582(T1 initialize);
/* GEC.execute */
extern T0* T21c33(void);
/* GEC.report_cannot_read_error */
extern void T21f39(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T24f8(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T24f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T76f11(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T76f15(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T76f12(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T76f16(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T76f20(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T26f6(T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T595f42(T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T595f30(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T594f3(T0* C, T2 a1);
/* CHARACTER_8.infix "<=" */
extern T1 T2f7(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f5(T2* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge337os10487;
extern T0* ge337ov10487;
extern T0* T595f37(T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T594c36(void);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T152f1(T0* C, T6 a1);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge271os2972;
extern T0* ge271ov2972;
extern T0* T595f29(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T152c6(void);
/* INTEGER_32.infix "<=" */
extern T1 T6f13(T6* C, T6 a1);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge409os12554;
extern T6 ge409ov12554;
extern T6 T151f1(T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge327os1812;
extern T0* ge327ov1812;
extern T0* T595f28(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T151c3(void);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T595f26(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T594f6(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T594f4(T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f39(T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f40(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f3(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f12(T6* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f5(T0* C);
/* INTEGER_32.max */
extern T6 T6f15(T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f4(T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T595f24(T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T595f40(T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T595f68(T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T595f78(T0* C);
/* STRING_8.make */
extern void T17f36(T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c36(T6 a1);
/* STRING_8.make_area */
extern void T17f38(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c9(T6 a1);
/* STRING_8.string */
extern T0* T17f14(T0* C);
/* STRING_8.append */
extern void T17f44(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f14(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f13(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.as_string */
extern T0* T595f11(T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T595f32(T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T79f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge266os1811;
extern T0* ge266ov1811;
extern T0* T26f2(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T79c5(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge274os1726;
extern T0* ge274ov1726;
extern T0* T76f5(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T26c19(void);
/* UT_ERROR_HANDLER.message */
extern T0* T24f5(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T68c7(T0* a1);
/* ARRAY [STRING_8].put */
extern void T86f8(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING_8].make */
extern T0* T86c7(T6 a1, T6 a2);
/* ARRAY [STRING_8].make_area */
extern void T86f9(T0* C, T6 a1);
/* SPECIAL [STRING_8].make */
extern T0* T85c6(T6 a1);
/* GEC.process_system */
extern void T21f38(T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T62f13(T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge326os1721;
extern T0* ge326ov1721;
extern T0* T62f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T66c7(void);
/* KL_SHELL_COMMAND.system */
extern void T62f14(T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T62f9(T0* C, T14 a1);
/* UC_UTF8_STRING.to_c */
extern T0* T595f9(T0* C);
/* STRING_8.to_c */
extern T0* T17f6(T0* C);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge2288os5229;
extern T0* ge2288ov5229;
extern T0* T62f8(T0* C);
/* KL_SHELL_COMMAND.get */
extern T0* T62f10(T0* C, T0* a1);
/* STRING_8.make_from_c */
extern T0* T17c46(T14 a1);
/* STRING_8.from_c */
extern void T17f49(T0* C, T14 a1);
/* C_STRING.read_string_into */
extern void T567f6(T0* C, T0* a1);
/* C_STRING.read_substring_into */
extern void T567f8(T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.put_code */
extern void T17f60(T0* C, T10 a1, T6 a2);
/* NATURAL_8.to_natural_32 */
extern T10 T8f1(T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T467f5(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1364f2(T1364* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1364f3(T1364* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.share_from_pointer */
extern void T567f5(T0* C, T14 a1);
/* C_STRING.share_from_pointer_and_count */
extern void T567f7(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T467f11(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T467c10(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T567f3(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge2169os1254;
extern T0* ge2169ov1254;
extern T0* T17f22(T0* C);
/* C_STRING.make_empty */
extern T0* T567c4(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T467c9(T6 a1);
/* EXCEPTIONS.raise */
extern void T1085f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T1085f4(T0* C, T14 a1, T6 a2);
/* EXCEPTIONS.default_create */
extern T0* T1085c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T467f4(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f6(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f7(T14* C, T6 a1, T6 a2);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T62f11(T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T595f10(T0* C);
/* STRING_8.is_empty */
extern T1 T17f17(T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T62c12(T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T62f7(T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T71f1(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T71f7(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T26f8(T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f41(T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T26f10(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T595f17(T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T595f61(T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T595c61(T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T595f72(T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T595f48(T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T595f48p1(T0* C);
/* UC_UTF8_STRING.make */
extern void T595f61p1(T0* C, T6 a1);
/* UC_UTF8_STRING.make_area */
extern void T595f79(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T594f22(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T594f24(T0* C, T6 a1);
/* UC_UTF8_STRING.item_code */
extern T6 T595f23(T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f7(T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T595f52(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T595f25(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge349os25031;
extern T0* ge349ov25031;
extern T0* T594f27(T0* C);
/* UC_STRING.make_empty */
extern T0* T78c8(void);
/* UC_STRING.make */
extern void T78f9(T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T78f12(T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T78f11(T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T78f7(T0* C);
/* UC_STRING.capacity */
extern T6 T78f7p1(T0* C);
/* UC_STRING.make */
extern void T78f9p1(T0* C, T6 a1);
/* UC_STRING.make_area */
extern void T78f13(T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T78f10(T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T594f23(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T594f25(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T595f57(T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge422os10425;
extern T0* ge422ov10425;
extern T0* T595f49(T0* C);
/* UC_UTF8_STRING.append_substring */
extern void T595f59(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T595f77(T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T595f85(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T595f76(T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T595f86(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T595f75(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T595f74(T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T595f87(T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T595f39(T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T595f15(T0* C);
/* UC_UTF8_STRING.copy */
extern void T595f67(T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T595f67p1(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f4(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T595f57p1(T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T595f73(T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T595f51(T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1146s1(T1 a1);
/* UC_UTF8_STRING.any_ */
extern T0* T595f46(T0* C);
/* UC_UTF8_STRING.append_character */
extern void T595f58(T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T595f7(T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T595f31(T0* C, T6 a1);
/* STRING_8.item */
extern T2 T17f10(T0* C, T6 a1);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T26f9(T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f24(T0* C);
/* STRING_8.copy */
extern void T17f54(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T71f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T71f6(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T123f2(T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge389os9692;
extern T0* ge389ov9692;
extern T0* T71f12(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T123c4(void);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T71f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T70f16(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T70f10(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T70f13(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T70f9(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T70f8(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T70f7(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T70f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T70f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T70f5(T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge303os1722;
extern T0* ge303ov1722;
extern T0* T21f29(T0* C);
/* GEC.unix_file_system */
extern unsigned char ge303os1725;
extern T0* ge303ov1725;
extern T0* T21f32(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T71c19(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge406os9660;
extern T1 ge406ov9660;
extern T1 T66f2(T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T66f4(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge406os9664;
extern T0* ge406ov9664;
extern T0* T66f5(T0* C);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T66f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T123f1(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T123f3(T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge303os1723;
extern T0* ge303ov1723;
extern T0* T21f31(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T70c23(void);
/* UC_UTF8_STRING.infix "+" */
extern T0* T595f16(T0* C, T0* a1);
/* STRING_8.infix "+" */
extern T0* T17f9(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f13(T0* C, T6 a1);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge406os9659;
extern T1 ge406ov9659;
extern T1 T66f1(T0* C);
/* GEC.operating_system */
extern T0* T21f28(T0* C);
/* GEC.no_c_compile */
extern T1 T21f27(T0* C);
/* AP_BOOLEAN_OPTION.parameter */
extern T1 T36f15(T0* C);
/* DS_LINKED_LIST [BOOLEAN].last */
extern T1 T93f7(T0* C);
/* KL_STDOUT_FILE.put_new_line */
extern void T77f13(T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T77f12(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_character */
extern void T77f17(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T77f21(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T77f22(T0* C, T14 a1, T2 a2);
/* KL_STDOUT_FILE.put_string */
extern void T77f11(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T77f16(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T77f20(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T77f6(T0* C);
/* ET_C_GENERATOR.generate */
extern void T61f433(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].wipe_out */
extern void T45f73(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_wipe_out */
extern void T45f81(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_wipe_out */
extern void T45f80(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_wipe_out */
extern void T45f79(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_wipe_out */
extern void T45f78(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].unset_found_item */
extern void T45f57(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors_after */
extern void T45f77(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_next_cursor */
extern void T118f15(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].set_position */
extern void T118f14(T0* C, T6 a1);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T61f437(T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T61f439(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T28f162(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f166(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f166p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T28f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T57f162(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T57f166(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T57f166p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T57f17(T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T61f100(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T225c7(T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T61f438(T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T222f27(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T222f32(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T222f37(T0* C, T14 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].back */
extern void T118f13(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_back */
extern void T45f89(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].add_traversing_cursor */
extern void T45f85(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_traversing_cursor */
extern void T45f84(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_item */
extern T6 T45f25(T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T224f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].value */
extern T0* T45f48(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].has */
extern T1 T45f49(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].search_position */
extern void T45f58(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].hash_position */
extern T6 T45f28(T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T595f13(T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T595f13p1(T0* C);
/* INTEGER_32.infix "|<<" */
extern T6 T6f16(T6* C, T6 a1);
/* STRING_8.hash_code */
extern T6 T17f15(T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T89f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T48f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T48f2(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_item */
extern T0* T45f24(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_item */
extern T6 T45f22(T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T26f20(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T26f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T595f18(T0* C, T6 a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T224f2(T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1071os8178;
extern T0* ge1071ov8178;
extern T0* T61f99(T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T224c3(void);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].item */
extern T0* T118f5(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_item */
extern T0* T45f38(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_item */
extern T0* T45f40(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].before */
extern T1 T118f4(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_before */
extern T1 T45f46(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].finish */
extern void T118f12(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_finish */
extern void T45f88(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_off */
extern T1 T45f42(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].is_empty */
extern T1 T45f30(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T222f6(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T222f16(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T222f22(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T222f14(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T222f17(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T222f33(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T222f18(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T222f33p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T222f19(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T222c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T222f31(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T222f12(T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T61f96(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].forth */
extern void T118f11(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_forth */
extern void T45f83(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].key */
extern T0* T118f8(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_key */
extern T0* T45f39(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].is_first */
extern T1 T118f7(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_is_first */
extern T1 T45f47(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].after */
extern T1 T118f6(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_after */
extern T1 T45f37(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].start */
extern void T118f10(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].cursor_start */
extern void T45f82(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_cursor */
extern T0* T45f26(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING_8, STRING_8].make */
extern T0* T118c9(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item */
extern T0* T45f45(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force */
extern void T45f87(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_put */
extern void T45f63(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_put */
extern void T45f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_put */
extern void T45f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].resize */
extern void T45f60(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clashes_resize */
extern void T45f68(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].resize */
extern T0* T119f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER_32].resized_area */
extern T0* T117f4(T0* C, T6 a1);
/* SPECIAL [INTEGER_32].copy_data */
extern void T117f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER_32].move_data */
extern void T117f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].overlapping_move */
extern void T117f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER_32].non_overlapping_move */
extern void T117f12(T0* C, T6 a1, T6 a2, T6 a3);
/* INTEGER_32.min */
extern T6 T6f19(T6* C, T6 a1);
/* SPECIAL [INTEGER_32].make */
extern T0* T117c7(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].special_integer_ */
extern unsigned char ge272os5170;
extern T0* ge272ov5170;
extern T0* T45f27(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER_32].default_create */
extern T0* T119c4(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_storage_resize */
extern void T45f67(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].resize */
extern T0* T120f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING_8].resized_area */
extern T0* T85f3(T0* C, T6 a1);
/* SPECIAL [STRING_8].copy_data */
extern void T85f8(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING_8].move_data */
extern void T85f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].overlapping_move */
extern void T85f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING_8].non_overlapping_move */
extern void T85f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_resize */
extern void T45f66(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].slots_resize */
extern void T45f65(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_modulus */
extern T6 T45f29(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].new_capacity */
extern T6 T45f23(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_storage_put */
extern void T45f59(T0* C, T0* a1, T6 a2);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T50f4(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T50f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge387os5225;
extern T0* ge387ov5225;
extern T0* T50f2(T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T50f3(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T221f226(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T221f301(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T221f312(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T221f327(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T221f146(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T221f228(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T221f292(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T221f291(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1189os15605;
extern T6 ge1189ov15605;
extern T6 T221f55(T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge409os12556;
extern T6 ge409ov12556;
extern T6 T151f2(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T221f184(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T221f290(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T533f8(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T221f289(T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T533f10(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T221f288(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T221f294(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1195os15772;
extern T0* ge1195ov15772;
extern T0* T221f147(T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T535c4(T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T535f10(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T535f9(T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T535f5(T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T535c5(void);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T416f1(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T1070c2(T6 a1);
/* SPECIAL [BOOLEAN].make */
extern T0* T414c4(T6 a1);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge272os5168;
extern T0* ge272ov5168;
extern T0* T535f3(T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T416c3(void);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1195os15764;
extern T0* ge1195ov15764;
extern T0* T221f163(T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T535f2(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T221f325(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T221f81(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T221f80(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T221f79(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T221f334(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T221f333(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T221f287(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T533f11(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T221f285(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T221f266(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T533f7(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T221f225(T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T534f4(T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T534f3(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T221f223(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T221f313(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T221f328(T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T221f144(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T221f78(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T221f227(T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge324os1719;
extern T0* ge324ov1719;
extern T0* T61f95(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T50c5(void);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T26f7(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T595f66(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T595f82(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T595f66p1(T0* C);
/* STRING_8.wipe_out */
extern void T17f51(T0* C);
/* ET_C_GENERATOR.string_ */
extern T0* T61f94(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T221f300(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].item */
extern T0* T80f7(T0* C, T6 a1);
/* ET_C_GENERATOR.current_system */
extern T0* T61f102(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T221f299(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T221f299p1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T221f311(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T221f77(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T221f202(T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T221f76(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T221f310(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T221f75(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T221f73(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T221f127(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T221f125(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T221f123(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T221f309(T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T533f18(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T221f60(T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T533f17(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T221f326(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1195os15773;
extern T0* ge1195ov15773;
extern T0* T221f143(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1189os15606;
extern T6 ge1189ov15606;
extern T6 T221f142(T0* C);
/* RX_BYTE_CODE.append_character */
extern void T533f19(T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T533f25(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T533f24(T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T533f9(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T221f137(T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T221f218(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1195os15766;
extern T0* ge1195ov15766;
extern T0* T221f240(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T221f217(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T221f213(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T221f130(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T221f324(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T221f128(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T221f126(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T221f124(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T221f105(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T221f331(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T533f23(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T533f22(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T533f21(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T221f332(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T221f330(T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T533f20(T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T533f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].resize */
extern T0* T416f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].resized_area */
extern T0* T414f3(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].copy_data */
extern void T414f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [BOOLEAN].move_data */
extern void T414f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].overlapping_move */
extern void T414f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].non_overlapping_move */
extern void T414f9(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T533f12(T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T535f8(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T535f7(T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T538f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1195os15775;
extern T0* ge1195ov15775;
extern T0* T221f155(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1195os15760;
extern T0* ge1195ov15760;
extern T0* T221f74(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1195os15770;
extern T0* ge1195ov15770;
extern T0* T221f239(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1195os15769;
extern T0* ge1195ov15769;
extern T0* T221f238(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1195os15768;
extern T0* ge1195ov15768;
extern T0* T221f237(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1195os15767;
extern T0* ge1195ov15767;
extern T0* T221f236(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1195os15771;
extern T0* ge1195ov15771;
extern T0* T221f235(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1195os15765;
extern T0* ge1195ov15765;
extern T0* T221f234(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1195os15761;
extern T0* ge1195ov15761;
extern T0* T221f233(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1195os15762;
extern T0* ge1195ov15762;
extern T0* T221f232(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1195os15763;
extern T0* ge1195ov15763;
extern T0* T221f230(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T221f153(T0* C, T6 a1, T6 a2);
/* ARRAY [STRING_8].item */
extern T0* T86f5(T0* C, T6 a1);
/* ARRAY [STRING_8].count */
extern T6 T86f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1195os15774;
extern T0* ge1195ov15774;
extern T0* T221f231(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T221f151(T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T535f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1189os15604;
extern T0* ge1189ov15604;
extern T0* T221f148(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T221f83(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T221f329(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T221f57(T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T533f16(T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T533f15(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T221f308(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T221f307(T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T533f14(T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T26f21(T0* C, T0* a1);
/* UC_UTF8_STRING.old_clear_all */
extern void T595f65(T0* C);
/* STRING_8.clear_all */
extern void T17f50(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T221f306(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T221f306p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T221c298(void);
/* KL_SPECIAL_ROUTINES [INTEGER_32].make */
extern T0* T119f2(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER_32].make_area */
extern T0* T437c2(T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T221f298p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T221f305(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T221f323(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T221f322(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T221f321(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T221f320(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T221f319(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T221f318(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T221f317(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T221f316(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T221f315(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T221f314(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T221f304(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T221f303(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1195os15759;
extern T0* ge1195ov15759;
extern T0* T221f68(T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T534c6(T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T534f8(T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T534f7(T0* C);
/* RX_CASE_MAPPING.clear */
extern void T534f9(T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T534f5(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T221f302(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T221f302p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern */
extern unsigned char ge1189os15603;
extern T0* ge1189ov15603;
extern T0* T221f53(T0* C);
/* STRING_8.put */
extern void T17f53(T0* C, T2 a1, T6 a2);
/* RX_BYTE_CODE.make */
extern T0* T533c13(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].twin */
extern T0* T45f44(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T45f90(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].copy */
extern void T45f90p1(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_clashes */
extern void T45f95(T0* C);
/* SPECIAL [INTEGER_32].twin */
extern T0* T117f5(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_slots */
extern void T45f94(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_key_storage */
extern void T45f93(T0* C);
/* SPECIAL [STRING_8].twin */
extern T0* T85f4(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].clone_item_storage */
extern void T45f92(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].valid_cursor */
extern T1 T45f51(T0* C, T0* a1);
/* ET_C_GENERATOR.c_config */
extern T0* T61f93(T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T61f724(T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse_file */
extern void T363f177(T0* C, T0* a1);
/* UT_CONFIG_PARSER.parse */
extern void T363f181(T0* C);
/* UT_CONFIG_PARSER.yy_pop_last_value */
extern void T363f194(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_push_error_value */
extern void T363f193(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T132f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].resized_area */
extern T0* T131f2(T0* C, T6 a1);
/* SPECIAL [ANY].copy_data */
extern void T131f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ANY].move_data */
extern void T131f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].overlapping_move */
extern void T131f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].non_overlapping_move */
extern void T131f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].make */
extern T0* T131c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T132f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T446c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T132c3(void);
/* UT_CONFIG_PARSER.yy_do_action */
extern void T363f192(T0* C, T6 a1);
/* UT_CONFIG_PARSER.is_defined */
extern T1 T363f132(T0* C, T0* a1);
/* UT_CONFIG_PARSER.process_include */
extern void T363f205(T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.make */
extern T0* T1042c7(T6 a1);
/* INTEGER_32.out */
extern T0* T6f3(T6* C);
/* STRING_8.append_integer */
extern void T17f37(T0* C, T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].put */
extern void T1040f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].put */
extern void T634f13(T0* C, T6 a1);
/* UT_CONFIG_PARSER.execution_environment */
extern T0* T363f160(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_full */
extern T1 T1040f5(T0* C);
/* UT_CONFIG_PARSER.undefine_value */
extern void T363f204(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove */
extern void T45f96(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].remove_position */
extern void T45f97(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_forth */
extern void T45f99(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_all_cursors */
extern void T45f101(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].move_cursors_after */
extern void T45f100(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].internal_set_key_equality_tester */
extern void T45f98(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].internal_set_equality_tester */
extern void T115f6(T0* C, T0* a1);
/* UT_CONFIG_PARSER.ignored */
extern T1 T363f128(T0* C);
/* UT_CONFIG_PARSER.yy_push_last_value */
extern void T363f191(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].make */
extern T0* T120f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING_8].make_area */
extern T0* T438c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING_8].default_create */
extern T0* T120c3(void);
/* UT_CONFIG_PARSER.accept */
extern void T363f190(T0* C);
/* UT_CONFIG_PARSER.yy_do_error_action */
extern void T363f188(T0* C, T6 a1);
/* UT_CONFIG_PARSER.report_error */
extern void T363f203(T0* C, T0* a1);
/* UT_SYNTAX_ERROR.make */
extern T0* T1041c7(T0* a1, T6 a2);
/* UT_CONFIG_PARSER.report_eof_expected_error */
extern void T363f202(T0* C);
/* UT_CONFIG_PARSER.read_token */
extern void T363f187(T0* C);
/* UT_CONFIG_PARSER.yy_execute_action */
extern void T363f201(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_set_beginning_of_line */
extern void T363f210(T0* C);
/* YY_BUFFER.set_beginning_of_line */
extern void T127f17(T0* C, T1 a1);
/* YY_FILE_BUFFER.set_beginning_of_line */
extern void T126f27(T0* C, T1 a1);
/* UT_CONFIG_PARSER.text_item */
extern T2 T363f159(T0* C, T6 a1);
/* UT_CONFIG_PARSER.text_substring */
extern T0* T363f153(T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T599f6(T0* C, T6 a1, T6 a2);
/* UT_CONFIG_PARSER.text_count */
extern T6 T363f152(T0* C);
/* UT_CONFIG_PARSER.string_ */
extern T0* T363f148(T0* C);
/* UT_CONFIG_PARSER.text */
extern T0* T363f147(T0* C);
/* UT_CONFIG_PARSER.set_start_condition */
extern void T363f208(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_execute_eof_action */
extern void T363f200(T0* C, T6 a1);
/* UT_CONFIG_PARSER.terminate */
extern void T363f209(T0* C);
/* UT_CONFIG_PARSER.wrap */
extern T1 T363f115(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].remove */
extern void T1040f10(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].remove */
extern void T634f10(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].item */
extern T6 T634f5(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].item */
extern T0* T1040f7(T0* C);
/* DS_ARRAYED_STACK [YY_BUFFER].is_empty */
extern T1 T1040f6(T0* C);
/* UT_CONFIG_PARSER.yy_refill_input_buffer */
extern void T363f199(T0* C);
/* UT_CONFIG_PARSER.yy_set_content */
extern void T363f197(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T599f4(T0* C);
/* YY_BUFFER.fill */
extern void T127f15(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T126f20(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T599f5(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_CHARACTER_BUFFER.put */
extern void T599f11(T0* C, T2 a1, T6 a2);
/* YY_FILE_BUFFER.compact_left */
extern void T126f22(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T599f12(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.subcopy */
extern void T17f62(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_FILE_BUFFER.resize */
extern void T126f24(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T599f13(T0* C, T6 a1);
/* STRING_8.set_count */
extern void T17f48(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge145os12139;
extern T6 ge145ov12139;
extern T6 T126f13(T0* C);
/* YY_BUFFER.set_index */
extern void T127f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.set_index */
extern void T126f18(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_null_trans_state */
extern T6 T363f114(T0* C, T6 a1);
/* UT_CONFIG_PARSER.yy_previous_state */
extern T6 T363f113(T0* C);
/* UT_CONFIG_PARSER.fatal_error */
extern void T363f198(T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T114c7(T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T599f3(T0* C, T6 a1);
/* UT_CONFIG_PARSER.special_integer_ */
extern T0* T363f123(T0* C);
/* UT_CONFIG_PARSER.yy_init_value_stacks */
extern void T363f186(T0* C);
/* UT_CONFIG_PARSER.yy_clear_all */
extern void T363f195(T0* C);
/* UT_CONFIG_PARSER.clear_all */
extern void T363f206(T0* C);
/* UT_CONFIG_PARSER.clear_stacks */
extern void T363f211(T0* C);
/* UT_CONFIG_PARSER.yy_clear_value_stacks */
extern void T363f212(T0* C);
/* SPECIAL [BOOLEAN].clear_all */
extern void T414f6(T0* C);
/* SPECIAL [STRING_8].clear_all */
extern void T85f7(T0* C);
/* SPECIAL [ANY].clear_all */
extern void T131f6(T0* C);
/* UT_CONFIG_PARSER.abort */
extern void T363f189(T0* C);
/* UT_CONFIG_PARSER.set_input_buffer */
extern void T363f180(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_load_input_buffer */
extern void T363f185(T0* C);
/* YY_BUFFER.set_position */
extern void T127f14(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.set_position */
extern void T126f19(T0* C, T6 a1, T6 a2, T6 a3);
/* UT_CONFIG_PARSER.new_file_buffer */
extern T0* T363f87(T0* C, T0* a1);
/* YY_FILE_BUFFER.make */
extern T0* T126c17(T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T126f21(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.set_file */
extern void T126f23(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T126f25(T0* C);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T126f15(T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T599c10(T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge406os9661;
extern T1 ge406ov9661;
extern T1 T66f6(T0* C);
/* PLATFORM.default_create */
extern T0* T1462c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T599f7(T0* C);
/* ET_C_GENERATOR.console_application_mode */
extern T1 T61f352(T0* C);
/* UT_CONFIG_PARSER.define_value */
extern void T363f176(T0* C, T0* a1, T0* a2);
/* UT_CONFIG_PARSER.make */
extern T0* T363c175(T0* a1);
/* DS_ARRAYED_STACK [INTEGER_32].make */
extern T0* T634c8(T6 a1);
/* DS_ARRAYED_STACK [YY_BUFFER].make */
extern T0* T1040c8(T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].make */
extern T0* T1311f1(T0* C, T6 a1);
/* TO_SPECIAL [YY_BUFFER].make_area */
extern T0* T1447c2(T6 a1);
/* SPECIAL [YY_BUFFER].make */
extern T0* T1310c2(T6 a1);
/* KL_SPECIAL_ROUTINES [YY_BUFFER].default_create */
extern T0* T1311c2(void);
/* UT_CONFIG_PARSER.string_equality_tester */
extern unsigned char ge275os3573;
extern T0* ge275ov3573;
extern T0* T363f106(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T89c2(void);
/* UT_CONFIG_PARSER.make_parser_skeleton */
extern void T363f179(T0* C);
/* UT_CONFIG_PARSER.yy_build_parser_tables */
extern void T363f184(T0* C);
/* UT_CONFIG_PARSER.yycheck_template */
extern unsigned char ge240os22447;
extern T0* ge240ov22447;
extern T0* T363f121(T0* C);
/* UT_CONFIG_PARSER.yyfixed_array */
extern T0* T363f171(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER_32].to_special */
extern T0* T119f3(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yytable_template */
extern unsigned char ge240os22446;
extern T0* ge240ov22446;
extern T0* T363f120(T0* C);
/* UT_CONFIG_PARSER.yypgoto_template */
extern unsigned char ge240os22445;
extern T0* ge240ov22445;
extern T0* T363f119(T0* C);
/* UT_CONFIG_PARSER.yypact_template */
extern unsigned char ge240os22444;
extern T0* ge240ov22444;
extern T0* T363f116(T0* C);
/* UT_CONFIG_PARSER.yydefgoto_template */
extern unsigned char ge240os22443;
extern T0* ge240ov22443;
extern T0* T363f110(T0* C);
/* UT_CONFIG_PARSER.yydefact_template */
extern unsigned char ge240os22442;
extern T0* ge240ov22442;
extern T0* T363f109(T0* C);
/* UT_CONFIG_PARSER.yytypes2_template */
extern unsigned char ge240os22441;
extern T0* ge240ov22441;
extern T0* T363f108(T0* C);
/* UT_CONFIG_PARSER.yytypes1_template */
extern unsigned char ge240os22440;
extern T0* ge240ov22440;
extern T0* T363f103(T0* C);
/* UT_CONFIG_PARSER.yyr1_template */
extern unsigned char ge240os22439;
extern T0* ge240ov22439;
extern T0* T363f100(T0* C);
/* UT_CONFIG_PARSER.yytranslate_template */
extern unsigned char ge240os22438;
extern T0* ge240ov22438;
extern T0* T363f98(T0* C);
/* UT_CONFIG_PARSER.yy_create_value_stacks */
extern void T363f183(T0* C);
/* UT_CONFIG_PARSER.make_scanner */
extern void T363f178(T0* C);
/* UT_CONFIG_PARSER.make_with_buffer */
extern void T363f182(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_initialize */
extern void T363f196(T0* C);
/* UT_CONFIG_PARSER.yy_build_tables */
extern void T363f207(T0* C);
/* UT_CONFIG_PARSER.yy_accept_template */
extern unsigned char ge241os22496;
extern T0* ge241ov22496;
extern T0* T363f167(T0* C);
/* UT_CONFIG_PARSER.yy_fixed_array */
extern T0* T363f174(T0* C, T0* a1);
/* UT_CONFIG_PARSER.yy_meta_template */
extern unsigned char ge241os22495;
extern T0* ge241ov22495;
extern T0* T363f166(T0* C);
/* UT_CONFIG_PARSER.yy_ec_template */
extern unsigned char ge241os22494;
extern T0* ge241ov22494;
extern T0* T363f165(T0* C);
/* UT_CONFIG_PARSER.yy_def_template */
extern unsigned char ge241os22493;
extern T0* ge241ov22493;
extern T0* T363f164(T0* C);
/* UT_CONFIG_PARSER.yy_base_template */
extern unsigned char ge241os22492;
extern T0* ge241ov22492;
extern T0* T363f163(T0* C);
/* UT_CONFIG_PARSER.yy_chk_template */
extern unsigned char ge241os22491;
extern T0* ge241ov22491;
extern T0* T363f162(T0* C);
/* UT_CONFIG_PARSER.yy_nxt_template */
extern unsigned char ge241os22490;
extern T0* ge241ov22490;
extern T0* T363f161(T0* C);
/* UT_CONFIG_PARSER.empty_buffer */
extern unsigned char ge150os5710;
extern T0* ge150ov5710;
extern T0* T363f89(T0* C);
/* YY_BUFFER.make */
extern T0* T127c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T127f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T599f14(T0* C, T0* a1, T6 a2);
/* YY_BUFFER.new_default_buffer */
extern T0* T127f11(T0* C, T6 a1);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T71f4(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T70f4(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].put */
extern void T45f86(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_key_equality_tester */
extern void T45f54(T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern T0* T61f130(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern void T45f53(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map */
extern T0* T45c53(T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_with_equality_testers */
extern void T45f56(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].make */
extern T0* T115c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING_8, STRING_8].new_cursor */
extern T0* T115f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING_8, STRING_8].make */
extern T0* T436c3(T0* a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_sparse_container */
extern void T45f64(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_slots */
extern void T45f72(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_clashes */
extern void T45f71(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_key_storage */
extern void T45f70(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_item_storage */
extern void T45f69(T0* C, T6 a1);
/* KL_STRING_ROUTINES.right_adjust */
extern void T26f23(T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T595f60(T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f47(T0* C, T6 a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T26f22(T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T595f64(T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T595f83(T0* C, T6 a1);
/* UC_UTF8_STRING.move_bytes_left */
extern void T595f80(T0* C, T6 a1, T6 a2);
/* STRING_8.remove_head */
extern void T17f52(T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f57(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T22f50(T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T22f53(T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER_8].put_right */
extern void T72f4(T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER_8].make */
extern T0* T72c3(T2 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T71f3(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T70f3(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T61f128(T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T61f355(T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T61f354(T0* C);
/* ET_C_GENERATOR.generate_c_code */
extern void T61f436(T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge975os7355;
extern T0* ge975ov7355;
extern T0* T61f183(T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T174c48(T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T1342f5(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T129f57(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T251f5(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T189f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T1342f4(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T251f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T245f7(T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T1342f6(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T251f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T245f6(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T189c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T478f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET].make_area */
extern T0* T1087c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make */
extern T0* T477c4(T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge964os15165;
extern T0* ge964ov15165;
extern T0* T189f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T478c3(void);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge928os14342;
extern T0* ge928ov14342;
extern T0* T174f19(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T189c13(void);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T154f7(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T64f239(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T369c13(T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T369f15(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.force_last */
extern void T193f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].resize */
extern T0* T463f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].resized_area */
extern T0* T462f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].copy_data */
extern void T462f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE].move_data */
extern void T462f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].overlapping_move */
extern void T462f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].non_overlapping_move */
extern void T462f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].make */
extern T0* T462c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T463f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE].make_area */
extern T0* T1084c2(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.fixed_array */
extern unsigned char ge961os15165;
extern T0* ge961ov15165;
extern T0* T193f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T463c3(void);
/* ET_DYNAMIC_TYPE_LIST.capacity */
extern T6 T193f4(T0* C);
/* ET_DYNAMIC_TYPE_LIST.put_last */
extern void T193f11(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.append_last */
extern void T193f9(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.make_with_capacity */
extern T0* T193c8(T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.object_id_dynamic_type_set */
extern T0* T154f9(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_identified_feature */
extern T6 T174f18(T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.mark_type_alive */
extern void T154f14(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T228f53(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T174f51(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T227f3(T0* C, T6 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.current_system */
extern T0* T154f8(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_type_alive */
extern void T64f251(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_system */
extern T0* T64f241(T0* C);
/* ET_CLASS.current_system */
extern T0* T60f59(T0* C);
/* ET_DYNAMIC_SYSTEM.dynamic_type */
extern T0* T58f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T60f156(T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.set_fatal_error */
extern void T58f66(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T155f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T155f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T155f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T155f8(T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.new_dynamic_type */
extern T0* T58f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.make */
extern T0* T161c63(T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T194f13(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.has_type */
extern T1 T193f5(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T194c11(T0* a1);
/* ET_DYNAMIC_TYPE.empty_features */
extern unsigned char ge958os13374;
extern T0* ge958ov13374;
extern T0* T161f20(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T226c11(void);
/* ET_DYNAMIC_SYSTEM.new_predicate_type */
extern T0* T58f49(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T242c66(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T242f73(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern T0* T242f50(T0* C);
/* ET_DYNAMIC_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge952os6211;
extern T0* ge952ov6211;
extern T0* T58f50(T0* C);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T466f14(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T466f13(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T176f7(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T176f12(T0* C, T6 a1);
/* ET_DYNAMIC_SYSTEM.new_function_type */
extern T0* T58f48(T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_procedure_type */
extern T0* T58f47(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T243c66(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T243f73(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T243f50(T0* C);
/* ET_DYNAMIC_SYSTEM.new_type_type */
extern T0* T58f46(T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_typed_pointer_type */
extern T0* T58f45(T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_array_type */
extern T0* T58f44(T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.new_tuple_type */
extern T0* T58f43(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T223c65(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T189f4(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T223f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T223f48(T0* C);
/* ET_DYNAMIC_SYSTEM.new_special_type */
extern T0* T58f42(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T237c65(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T237f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T237f48(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T155f6(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T160f44(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge794os12825;
extern T0* ge794ov12825;
extern T0* T160f43(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T160f42(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge794os12766;
extern T0* ge794ov12766;
extern T0* T160f41(T0* C);
/* ET_DYNAMIC_FEATURE.tokens */
extern unsigned char ge789os2882;
extern T0* ge789ov2882;
extern T0* T174f22(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T160c924(void);
/* ET_DO_PROCEDURE.make */
extern T0* T366c69(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.empty_clients */
extern unsigned char ge794os13317;
extern T0* ge794ov13317;
extern T0* T160f695(T0* C);
/* ET_CLIENT_LIST.make */
extern T0* T353c12(void);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge794os12935;
extern T0* ge794ov12935;
extern T0* T160f189(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T182c23(void);
/* ET_KEYWORD.make_token */
extern void T182f24(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T182f25(T0* C);
/* ET_KEYWORD.tokens */
extern T0* T182f4(T0* C);
/* ET_DO_PROCEDURE.tokens */
extern T0* T366f34(T0* C);
/* ET_IDENTIFIER.make */
extern T0* T129c95(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T129f105(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T129c105(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T129f106(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T129f12(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.bit_or */
extern T6 T152f3(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.integer_ */
extern T0* T129f28(T0* C);
/* KL_CHARACTER_ROUTINES.as_upper */
extern T2 T600f1(T0* C, T2 a1);
/* CHARACTER_8.upper */
extern T2 T2f8(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f11(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f3(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f2(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge8os91;
extern T0* ge8ov91;
extern T0* T2f17(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f4(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T1330c2(T6 a1);
/* ET_IDENTIFIER.character_ */
extern unsigned char ge269os2971;
extern T0* ge269ov2971;
extern T0* T129f27(T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T600c3(void);
/* ET_C_GENERATOR.close_cpp_file */
extern void T61f466(T0* C);
/* ET_C_GENERATOR.close_c_file */
extern void T61f465(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].wipe_out */
extern void T215f37(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T215f46(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T215f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T215f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T215f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].unset_found_item */
extern void T215f42(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T215f41(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T525f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].set_position */
extern void T525f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].wipe_out */
extern void T214f38(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_wipe_out */
extern void T214f50(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_wipe_out */
extern void T214f49(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_wipe_out */
extern void T214f48(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_wipe_out */
extern void T214f47(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].unset_found_item */
extern void T214f45(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].move_all_cursors_after */
extern void T214f46(T0* C);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].set_next_cursor */
extern void T518f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].set_position */
extern void T518f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T213f43(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T213f53(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T213f52(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T213f51(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T213f50(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T213f49(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T213f48(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T512f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T512f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T212f33(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T212f44(T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T212f43(T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T212f42(T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T212f41(T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T212f39(T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T212f40(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T508f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T508f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].wipe_out */
extern void T218f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_wipe_out */
extern void T218f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_wipe_out */
extern void T218f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_wipe_out */
extern void T218f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_wipe_out */
extern void T218f58(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].unset_found_item */
extern void T218f57(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].move_all_cursors_after */
extern void T218f56(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_next_cursor */
extern void T528f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].set_position */
extern void T528f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].wipe_out */
extern void T217f43(T0* C);
/* DS_HASH_SET [STRING_8].slots_wipe_out */
extern void T217f56(T0* C);
/* DS_HASH_SET [STRING_8].clashes_wipe_out */
extern void T217f55(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_wipe_out */
extern void T217f54(T0* C);
/* DS_HASH_SET [STRING_8].item_storage_wipe_out */
extern void T217f53(T0* C);
/* DS_HASH_SET [STRING_8].unset_found_item */
extern void T217f49(T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors_after */
extern void T217f52(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].set_next_cursor */
extern void T329f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].set_position */
extern void T329f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].forth */
extern void T218f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_forth */
extern void T218f55(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].add_traversing_cursor */
extern void T218f69(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].remove_traversing_cursor */
extern void T218f68(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_item */
extern T6 T218f27(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_for_iteration */
extern T0* T218f36(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_key */
extern T0* T218f21(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_item */
extern T0* T218f31(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_for_iteration */
extern T1 T218f22(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_item */
extern T1 T218f44(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_item */
extern T1 T218f29(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].after */
extern T1 T218f42(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_after */
extern T1 T218f43(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].start */
extern void T218f47(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_start */
extern void T218f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].cursor_off */
extern T1 T218f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].is_empty */
extern T1 T218f32(T0* C);
/* DS_HASH_SET [STRING_8].forth */
extern void T217f42(T0* C);
/* DS_HASH_SET [STRING_8].cursor_forth */
extern void T217f51(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].add_traversing_cursor */
extern void T217f63(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].remove_traversing_cursor */
extern void T217f62(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].clashes_item */
extern T6 T217f23(T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T61f464(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T61f519(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [STRING_8].item_for_iteration */
extern T0* T217f17(T0* C);
/* DS_HASH_SET [STRING_8].cursor_item */
extern T0* T217f26(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].item_storage_item */
extern T0* T217f34(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].after */
extern T1 T217f18(T0* C);
/* DS_HASH_SET [STRING_8].cursor_after */
extern T1 T217f21(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].start */
extern void T217f41(T0* C);
/* DS_HASH_SET [STRING_8].cursor_start */
extern void T217f50(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].cursor_off */
extern T1 T217f31(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].is_empty */
extern T1 T217f30(T0* C);
/* ET_C_GENERATOR.print_end_extern_c */
extern void T61f463(T0* C, T0* a1);
/* ET_C_GENERATOR.print_main_function */
extern void T61f462(T0* C);
/* ET_C_GENERATOR.dedent */
extern void T61f506(T0* C);
/* ET_C_GENERATOR.print_creation_expression */
extern void T61f518(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T196f14(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].clear_items */
extern void T196f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T196f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T484f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_position */
extern void T484f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T61f565(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T61f525(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_void_expression */
extern void T61f536(T0* C, T0* a1, T1 a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T61f501(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T61f520(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T61f533(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T61f577(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T61f566(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T61f523(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T61f535(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].wipe_out */
extern void T192f18(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].clear_items */
extern void T192f23(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].move_all_cursors_after */
extern void T192f22(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_next_cursor */
extern void T480f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].set_position */
extern void T480f5(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_last */
extern void T45f55(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].found_item */
extern T0* T45f35(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].found */
extern T1 T45f34(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].search */
extern void T45f76(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].item */
extern T6 T192f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].sort */
extern void T192f17(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort */
extern void T248f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER_32].sort_with_comparator */
extern void T248f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER_32].subsort_with_comparator */
extern void T248f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER_32].force */
extern void T362f12(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].auto_resize */
extern void T362f14(T0* C, T6 a1, T6 a2);
/* SPECIAL [INTEGER_32].fill_with */
extern void T117f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].capacity */
extern T6 T362f7(T0* C);
/* SPECIAL [INTEGER_32].aliased_resized_area */
extern T0* T117f3(T0* C, T6 a1);
/* ARRAY [INTEGER_32].make_area */
extern void T362f13(T0* C, T6 a1);
/* ARRAY [INTEGER_32].additional_space */
extern T6 T362f6(T0* C);
/* ARRAY [INTEGER_32].empty_area */
extern T1 T362f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].swap */
extern void T192f24(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER_32].replace */
extern void T192f21(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].less_than */
extern T1 T364f1(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].item */
extern T6 T362f4(T0* C, T6 a1);
/* ARRAY [INTEGER_32].put */
extern void T362f11(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER_32].make */
extern T0* T362c10(T6 a1, T6 a2);
/* ET_C_GENERATOR.dynamic_type_id_sorter */
extern unsigned char ge975os7308;
extern T0* ge975ov7308;
extern T0* T61f165(T0* C);
/* DS_QUICK_SORTER [INTEGER_32].make */
extern T0* T248c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER_32].make */
extern T0* T364c2(void);
/* DS_ARRAYED_LIST [INTEGER_32].is_empty */
extern T1 T192f6(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].put_last */
extern void T192f20(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].resize */
extern void T192f19(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_tilde_feature */
extern T1 T228f18(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.equal_objects_feature_name */
extern unsigned char ge794os12785;
extern T0* ge794ov12785;
extern T0* T160f40(T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T129f33(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T26f14(T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f9(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f12(T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1117f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge356os30256;
extern T0* ge356ov30256;
extern T0* T1117f4(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge356os30255;
extern T0* ge356ov30255;
extern T0* T1117f12(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge356os30244;
extern T0* ge356ov30244;
extern T0* T1117f22(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T152f5(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1117f47(T0* C);
/* SPECIAL [ARRAY [INTEGER_32]].make */
extern T0* T1388c2(T6 a1);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge356os30254;
extern T0* ge356ov30254;
extern T0* T1117f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge356os30253;
extern T0* ge356ov30253;
extern T0* T1117f30(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge356os30252;
extern T0* ge356ov30252;
extern T0* T1117f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge356os30251;
extern T0* ge356ov30251;
extern T0* T1117f29(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge356os30250;
extern T0* ge356ov30250;
extern T0* T1117f28(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge356os30249;
extern T0* ge356ov30249;
extern T0* T1117f27(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge356os30248;
extern T0* ge356ov30248;
extern T0* T1117f26(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge356os30247;
extern T0* ge356ov30247;
extern T0* T1117f25(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge356os30246;
extern T0* ge356ov30246;
extern T0* T1117f24(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge356os30245;
extern T0* ge356ov30245;
extern T0* T1117f23(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge356os30243;
extern T0* ge356ov30243;
extern T0* T1117f21(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge356os30242;
extern T0* ge356ov30242;
extern T0* T1117f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge356os30241;
extern T0* ge356ov30241;
extern T0* T1117f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge356os30240;
extern T0* ge356ov30240;
extern T0* T1117f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge356os30239;
extern T0* ge356ov30239;
extern T0* T1117f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge356os30238;
extern T0* ge356ov30238;
extern T0* T1117f16(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER_32]]].make */
extern T0* T1389c2(T6 a1);
/* KL_STRING_ROUTINES.unicode */
extern unsigned char ge334os2973;
extern T0* ge334ov2973;
extern T0* T26f15(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1117c48(void);
/* ET_IDENTIFIER.string_ */
extern T0* T129f44(T0* C);
/* ET_TOKEN_CONSTANTS.kl_any_routines_class_name */
extern unsigned char ge794os12698;
extern T0* ge794ov12698;
extern T0* T160f39(T0* C);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T228f27(T0* C);
/* ET_DYNAMIC_FEATURE.is_tilde_feature */
extern T1 T174f24(T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set_in_feature */
extern T0* T61f184(T0* C, T6 a1, T0* a2);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T28f157(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T28f164(T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge306os9927;
extern T0* ge306ov9927;
extern T0* T75f1(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T76c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T76f14(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T76f19(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T76f6(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T76f18(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern unsigned char ge304os1720;
extern T0* ge304ov1720;
extern T0* T28f18(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T75c4(void);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T570c12(void);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T57f157(T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T57f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern T0* T57f18(T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T228f34(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T174f21(T0* C, T6 a1);
/* ET_C_GENERATOR.dynamic_type_set */
extern T0* T61f177(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.item */
extern T0* T198f4(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.valid_index */
extern T1 T198f3(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T189f3(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge794os12929;
extern T0* ge794ov12929;
extern T0* T160f13(T0* C);
/* ET_CURRENT.make */
extern T0* T203c27(void);
/* ET_CURRENT.make_token */
extern void T203f29(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T203f30(T0* C);
/* ET_CURRENT.tokens */
extern T0* T203f5(T0* C);
/* ET_C_GENERATOR.tokens */
extern T0* T61f103(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T196f6(T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T61f564(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T61f180(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].force_last */
extern void T192f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_capacity */
extern T6 T192f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].extendible */
extern T1 T192f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T191f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T191f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T134f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].resized_area */
extern T0* T133f2(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].copy_data */
extern void T133f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IDENTIFIER].move_data */
extern void T133f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].overlapping_move */
extern void T133f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].non_overlapping_move */
extern void T133f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T133c4(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T191f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T191f8(T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T129f102(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T191f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T155f14(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T61f353(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T61f563(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T61f505(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_name */
extern void T61f528(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_SET [ET_IDENTIFIER].remove */
extern void T128f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_position */
extern void T128f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_put */
extern void T128f72(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T128f59(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T128f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T128f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T128f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].move_cursors_forth */
extern void T128f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors */
extern void T128f74(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T445f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].move_cursors_after */
extern void T128f73(T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T445f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].internal_set_key_equality_tester */
extern void T128f70(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T128f25(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T128f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T128f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T128f26(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T128f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T128f46(T0* C, T0* a1);
/* ET_IDENTIFIER_TESTER.test */
extern T1 T219f1(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.same_identifier */
extern T1 T129f32(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T128f51(T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T61f576(T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T61f582(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.in_target */
extern T1 T61f196(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].has */
extern T1 T128f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T128f44(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T128f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T128f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T128f30(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T128f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T128f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T128f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T128f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T128f20(T0* C, T6 a1);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T61f575(T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T129f21(T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T61f574(T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T61f541(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T195f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T195f11(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T483f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].resized_area */
extern T0* T482f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].copy_data */
extern void T482f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION].move_data */
extern void T482f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].overlapping_move */
extern void T482f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].non_overlapping_move */
extern void T482f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T482c4(T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T195f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T195f6(T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T61f562(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T195f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].clear_items */
extern void T195f12(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T61f558(T0* C, T0* a1);
/* ET_C_GENERATOR.is_temp_variable_frozen */
extern T1 T61f191(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T195f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T196f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T196f17(T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T61f561(T0* C, T0* a1);
/* ET_C_GENERATOR.print_show_console_call */
extern void T61f517(T0* C);
/* ET_C_GENERATOR.print_temp_name */
extern void T61f500(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge975os7328;
extern T0* ge975ov7328;
extern T0* T61f107(T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T61f496(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_any_type_name */
extern void T61f467(T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T61f498(T0* C);
/* ET_C_GENERATOR.indent */
extern void T61f497(T0* C);
/* ET_C_GENERATOR.print_types_array */
extern void T61f461(T0* C);
/* ET_C_GENERATOR.print_routine_name */
extern void T61f516(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found_item */
extern T0* T215f25(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T215f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].found */
extern T1 T215f32(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search */
extern void T215f38(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].search_position */
extern void T215f47(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T215f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].hash_position */
extern T6 T215f21(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T215f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_item */
extern T6 T215f23(T0* C, T6 a1);
/* ET_C_GENERATOR.print_dynamic_type_id_set_constants */
extern void T61f460(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].forth */
extern void T45f75(T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T595f19(T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T595f38(T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f28(T0* C, T2 a1);
/* DS_HASH_TABLE [STRING_8, STRING_8].key_for_iteration */
extern T0* T45f33(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].item_for_iteration */
extern T0* T45f32(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].after */
extern T1 T45f31(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].start */
extern void T45f74(T0* C);
/* ET_C_GENERATOR.print_const_init_function */
extern void T61f459(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].forth */
extern void T214f40(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_forth */
extern void T214f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].add_traversing_cursor */
extern void T214f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].remove_traversing_cursor */
extern void T214f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_item */
extern T6 T214f25(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.constant */
extern T0* T979f10(T0* C);
/* ET_C_GENERATOR.print_inline_constant_name */
extern void T61f514(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_for_iteration */
extern T0* T214f17(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_item */
extern T0* T214f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_item */
extern T0* T214f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].after */
extern T1 T214f18(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_after */
extern T1 T214f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].start */
extern void T214f39(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_start */
extern void T214f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].cursor_off */
extern T1 T214f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].is_empty */
extern T1 T214f23(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T213f45(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T213f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T213f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T213f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T213f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T213f25(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T213f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T213f23(T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T61f513(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T61f515(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T212f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T212f34(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T212f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T212f17(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T212f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T212f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T212f26(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T212f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T213f24(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T213f28(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T213f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T213f26(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T213f27(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T213f44(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T213f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T213f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T213f30(T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T61f458(T0* C);
/* ET_C_GENERATOR.print_deep_twin_functions */
extern void T61f457(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].wipe_out */
extern void T200f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T200f56(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T200f55(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T200f54(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T200f53(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].unset_found_item */
extern void T200f52(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T200f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_next_cursor */
extern void T492f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].set_position */
extern void T492f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].forth */
extern void T200f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_forth */
extern void T200f50(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T200f65(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T200f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T200f27(T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_polymorphic_call_function */
extern void T61f512(T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_entity_value */
extern void T61f546(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_name */
extern void T61f502(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].wipe_out */
extern void T197f46(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_wipe_out */
extern void T197f61(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_wipe_out */
extern void T197f60(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_wipe_out */
extern void T197f59(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_wipe_out */
extern void T197f58(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].unset_found_item */
extern void T197f49(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].move_all_cursors_after */
extern void T197f57(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_next_cursor */
extern void T485f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].set_position */
extern void T485f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_deep_twin_binary_search_polymorphic_call */
extern void T61f560(T0* C, T0* a1, T6 a2, T6 a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_adapted_deep_twin_call */
extern void T61f559(T0* C, T0* a1, T0* a2, T0* a3);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_deep_twin_call */
extern T0* T61f559ac1(T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_deep_twin_call */
extern void T61f573(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_target_expression */
extern void T61f581(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_expression */
extern void T61f568(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item */
extern T0* T197f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_item */
extern T0* T197f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].search_position */
extern void T197f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_item */
extern T6 T197f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].hash_position */
extern T6 T197f32(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f17(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f21(T6* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_item */
extern T6 T197f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_item */
extern T6 T197f39(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T61f542(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T61f527(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].force_last */
extern void T197f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_put */
extern void T197f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_put */
extern void T197f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_put */
extern void T197f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].resize */
extern void T197f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].clashes_resize */
extern void T197f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].special_integer_ */
extern T0* T197f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].key_storage_resize */
extern void T197f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_resize */
extern void T197f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].slots_resize */
extern void T197f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_modulus */
extern T6 T197f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_capacity */
extern T6 T197f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_storage_put */
extern void T197f50(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_current_name */
extern void T61f540(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T200f32(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_item */
extern T0* T200f33(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T200f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].after */
extern T1 T200f31(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_after */
extern T1 T200f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].start */
extern void T200f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_start */
extern void T200f49(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].cursor_off */
extern T1 T200f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].is_empty */
extern T1 T200f25(T0* C);
/* ET_C_GENERATOR.print_deep_twin_function */
extern void T61f511(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f511ac1(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #2 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f511ac2(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #3 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f511ac3(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #4 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f511ac4(T0* a1, T0* a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #5 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f511ac5(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* Creation of agent #6 in feature ET_C_GENERATOR.print_deep_twin_function */
extern T0* T61f511ac6(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T61f510(T0* C, T6 a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T61f531(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_special_indexed_item_access */
extern void T61f556(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.reset_temp_variables */
extern void T61f552(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T155f13(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].clear_items */
extern void T155f17(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T155f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T464f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T464f5(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T226f4(T0* C, T6 a1);
/* ET_C_GENERATOR.print_set_deep_twined_attribute */
extern void T61f557(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_deep_twined_attribute */
extern void T61f572(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_types */
extern void T194f16(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].force_last */
extern void T200f47(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_put */
extern void T200f62(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_put */
extern void T200f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_put */
extern void T200f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_item */
extern T6 T200f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].hash_position */
extern T6 T200f40(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].resize */
extern void T200f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].clashes_resize */
extern void T200f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T200f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T200f68(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T200f67(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern T0* T490f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].resized_area */
extern T0* T489f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].copy_data */
extern void T489f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].move_data */
extern void T489f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].overlapping_move */
extern void T489f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].non_overlapping_move */
extern void T489f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T489c4(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T200f35(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].slots_resize */
extern void T200f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T200f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T200f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].item_storage_put */
extern void T200f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search_position */
extern void T200f57(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.force_last */
extern void T198f10(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T490f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_area */
extern T0* T1090c2(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.fixed_array */
extern unsigned char ge951os15165;
extern T0* ge951ov15165;
extern T0* T198f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T490c3(void);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.capacity */
extern T6 T198f6(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T194f12(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.wipe_out */
extern void T193f12(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found_item */
extern T0* T200f24(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].found */
extern T1 T200f34(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].search */
extern void T200f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T199f41(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T199f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T199f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T199f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T199f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T199f56(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T199f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T199f25(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T199f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T199f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T199f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T199f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T199f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T199f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T199f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T199f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T199f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T199f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T199f33(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T199f46(T0* C);
/* ET_DYNAMIC_SYSTEM.integer_type */
extern T0* T58f38(T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.error_handler */
extern T0* T58f37(T0* C);
/* ET_CLASS.universe */
extern T0* T60f45(T0* C);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T61f504(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T61f530(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge794os12964;
extern T0* ge794ov12964;
extern T0* T160f14(T0* C);
/* ET_RESULT.make */
extern T0* T230c26(void);
/* ET_RESULT.make_token */
extern void T230f28(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T230f29(T0* C);
/* ET_RESULT.tokens */
extern T0* T230f5(T0* C);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T61f503(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T61f529(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_result_name */
extern void T61f499(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T199f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T211f40(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T211f52(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T211f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T211f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T211f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T211f45(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T211f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T505f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T505f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T211f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T211f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T211f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T211f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T211f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_manifest_tuple_function */
extern void T61f456(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T211f17(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T211f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T211f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T211f18(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T211f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T211f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T211f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T211f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T211f23(T0* C);
/* ET_C_GENERATOR.print_big_manifest_array_function */
extern void T61f455(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T226f3(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T199f40(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T199f53(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T199f52(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T199f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T199f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T199f49(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T491f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T491f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T199f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T199f48(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T199f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T199f59(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array_function */
extern void T61f454(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T199f35(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T199f32(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T199f24(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T199f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T199f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T199f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T199f28(T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_tuple_label_call_functions */
extern void T61f453(T0* C);
/* ET_C_GENERATOR.print_polymorphic_call_function */
extern void T61f507(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.wipe_out */
extern void T210f27(T0* C);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T61f547(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5, T0* a6, T0* a7);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].forth */
extern void T197f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_forth */
extern void T197f56(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].add_traversing_cursor */
extern void T197f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].remove_traversing_cursor */
extern void T197f67(T0* C, T0* a1);
/* ET_C_GENERATOR.print_named_procedure_call */
extern void T61f545(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_procedure_call */
extern void T61f571(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_procedure_call */
extern void T61f580(T0* C, T0* a1, T0* a2, T1 a3);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T196f7(T0* C);
/* ET_C_GENERATOR.print_builtin_procedure_call */
extern void T61f579(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_procedure_call */
extern void T61f595(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_set_object_comparison_call */
extern void T61f619(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_tuple_feature */
extern T6 T61f333(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_procedure_call */
extern void T61f594(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T61f618(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_procedure_call */
extern void T61f593(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T61f617(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T61f329(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_unboxed_expression */
extern void T61f717(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_procedure_call */
extern void T61f592(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T61f616(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_routine_call_call */
extern void T61f718(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.mark_call_operands_unfrozen */
extern void T61f721(T0* C);
/* ET_C_GENERATOR.mark_temp_variable_unfrozen */
extern void T61f723(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.remove_last */
extern void T189f10(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T231c13(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CALL_EXPRESSION.set_target */
extern void T208f25(T0* C, T0* a1);
/* ET_C_GENERATOR.new_agent_tuple_item_expression */
extern T0* T61f349(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].replace */
extern void T209f11(T0* C, T0* a1, T6 a2);
/* ET_CALL_EXPRESSION.make */
extern T0* T208c24(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T208f28(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_tuple_label */
extern void T129f104(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].item */
extern T0* T209f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].put_last */
extern void T209f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].resize */
extern void T209f9(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T503f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].resized_area */
extern T0* T502f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].copy_data */
extern void T502f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_EXPRESSION].move_data */
extern void T502f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].overlapping_move */
extern void T502f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].non_overlapping_move */
extern void T502f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T502c4(T6 a1);
/* ET_C_GENERATOR.mark_call_operands_frozen */
extern void T61f720(T0* C);
/* ET_C_GENERATOR.mark_temp_variable_frozen */
extern void T61f722(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T189f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].resize */
extern T0* T478f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].resized_area */
extern T0* T477f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].copy_data */
extern void T477f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].move_data */
extern void T477f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].overlapping_move */
extern void T477f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].non_overlapping_move */
extern void T477f8(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T189f6(T0* C);
/* ET_DYNAMIC_TYPE_LIST.resize */
extern void T193f10(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset_with_types */
extern void T194f18(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_name */
extern void T61f532(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_procedure */
extern T1 T228f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_procedure */
extern T1 T174f25(T0* C);
/* ET_C_GENERATOR.print_builtin_pointer_procedure_call */
extern void T61f591(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T61f615(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T61f331(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_sized_integer_procedure_call */
extern void T61f590(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T61f614(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_identified_procedure_call */
extern void T61f589(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_free_call */
extern void T61f613(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_procedure_call */
extern void T61f588(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T61f612(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_boolean_procedure_call */
extern void T61f587(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T61f611(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T61f328(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_any_procedure_call */
extern void T61f586(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T61f610(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_info_message_call */
extern void T61f716(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T61f719(T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T272f2(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge234os8180;
extern T0* ge234ov8180;
extern T0* T61f350(T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T272c1(void);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T61f609(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T228f20(T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T174f23(T0* C);
/* ET_C_GENERATOR.print_tuple_label_setter_call */
extern void T61f570(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_adapted_named_query_call */
extern void T61f544(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_named_query_call */
extern T0* T61f544ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_adapted_query_call */
extern void T61f569(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_adapted_query_call */
extern T0* T61f569ac1(T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_C_GENERATOR.print_query_call */
extern void T61f578(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_non_inlined_query_call */
extern void T61f585(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_query_call */
extern void T61f584(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_query_call */
extern void T61f608(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_type_id_call */
extern void T61f715(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_name_call */
extern void T61f714(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_count_call */
extern void T61f713(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_query_call */
extern void T61f607(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_object_comparison_call */
extern void T61f712(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_tuple_count_call */
extern void T61f711(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_query_call */
extern void T61f606(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T61f710(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T61f709(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T61f708(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_special_base_address_call */
extern void T61f707(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_real_query_call */
extern void T61f605(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T61f706(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T61f705(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T61f704(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T61f703(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T61f702(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T61f701(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T61f700(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T61f699(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T61f698(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T61f697(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T61f696(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T61f695(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T61f694(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T61f693(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T61f692(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T61f691(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T61f690(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_pointer_query_call */
extern void T61f604(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T61f689(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T61f688(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T61f687(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T61f686(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_query_call */
extern void T61f603(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T61f685(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T61f684(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T61f683(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T61f682(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T61f681(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T61f680(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T61f679(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_mac_call */
extern void T61f678(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T61f677(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T61f676(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_double_bytes_call */
extern void T61f675(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T61f674(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T61f673(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_query_call */
extern void T61f602(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T61f672(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T61f671(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T61f670(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T61f669(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T61f668(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T61f667(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T61f666(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T61f665(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T61f664(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T61f663(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T61f662(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T61f661(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T61f660(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T61f659(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T61f658(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T61f657(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T61f656(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T61f655(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T61f654(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T61f653(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T61f652(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T61f651(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T61f650(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T61f649(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T61f648(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T61f647(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T61f646(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T61f645(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T61f644(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T61f643(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T61f642(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_identified_query_call */
extern void T61f601(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_object_id_call */
extern void T61f641(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_identified_eif_id_object_call */
extern void T61f640(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_query_call */
extern void T61f600(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T61f639(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_sized_character_query_call */
extern void T61f599(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T61f638(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T61f637(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T61f636(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T61f635(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T61f634(T0* C, T0* a1, T0* a2, T1 a3, T0* a4);
/* ET_C_GENERATOR.print_builtin_boolean_query_call */
extern void T61f598(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T61f633(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T61f632(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T61f631(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T61f630(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T61f629(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T61f628(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T61f627(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T61f626(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_query_call */
extern void T61f597(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_arguments_argument_count_call */
extern void T61f625(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_query_call */
extern void T61f596(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T61f624(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T61f623(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T61f622(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T61f621(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_call */
extern void T61f620(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_attribute_access */
extern void T61f583(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T213f46(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T213f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T213f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T213f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T213f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T213f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T213f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T213f68(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T213f38(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T213f67(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].resize */
extern T0* T510f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].resized_area */
extern T0* T511f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].copy_data */
extern void T511f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE].move_data */
extern void T511f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].overlapping_move */
extern void T511f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].non_overlapping_move */
extern void T511f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].make */
extern T0* T511c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T213f66(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T517f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].resized_area */
extern T0* T513f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].copy_data */
extern void T513f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTANT].move_data */
extern void T513f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].overlapping_move */
extern void T513f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].non_overlapping_move */
extern void T513f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T513c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T213f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T213f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T213f40(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T213f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T213f56(T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_argument_type_sets */
extern void T61f543(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_equal_in_tilde_feature */
extern T1 T235f8(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_equal_feature_name */
extern unsigned char ge794os12819;
extern T0* ge794ov12819;
extern T0* T160f713(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.tokens */
extern T0* T235f11(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_equal_in_tilde_feature */
extern T1 T231f8(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.tokens */
extern T0* T231f12(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_static_type */
extern void T194f15(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.put_last */
extern void T198f9(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.resize */
extern void T198f8(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.is_tuple_label */
extern T1 T235f6(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].item_for_iteration */
extern T0* T197f26(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_item */
extern T0* T197f21(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].after */
extern T1 T197f40(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_after */
extern T1 T197f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].start */
extern void T197f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_start */
extern void T197f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].cursor_off */
extern T1 T197f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].is_empty */
extern T1 T197f34(T0* C);
/* ET_C_GENERATOR.dynamic_type_set_in_feature */
extern T0* T61f167(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T228f22(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T174f27(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T210f9(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T210f12(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T61f539(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T61f538(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T26f11(T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T26f12(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_STRING_ROUTINES.platform */
extern T0* T26f13(T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T595f22(T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f30(T0* C, T0* a1, T6 a2);
/* STRING_SEARCHER.substring_index */
extern T6 T1331f2(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_SEARCHER.substring_index_with_deltas */
extern T6 T1331f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* NATURAL_32.to_integer_32 */
extern T6 T10f7(T10* C);
/* STRING_8.code */
extern T10 T17f31(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f27(T6* C);
/* STRING_SEARCHER.internal_initialize_deltas */
extern void T1331f6(T0* C, T0* a1, T6 a2, T0* a3);
/* STRING_8.string_searcher */
extern unsigned char ge2169os1253;
extern T0* ge2169ov1253;
extern T0* T17f33(T0* C);
/* STRING_SEARCHER.make */
extern T0* T1331c5(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].has */
extern T1 T197f28(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T196f16(T0* C, T0* a1, T6 a2);
/* ET_MANIFEST_TUPLE.put_first */
extern void T210f25(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.resize */
extern void T210f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T501f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].resized_area */
extern T0* T499f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].copy_data */
extern void T499f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION_ITEM].move_data */
extern void T499f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].overlapping_move */
extern void T499f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].non_overlapping_move */
extern void T499f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T499c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T501f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T1093c2(T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern unsigned char ge635os6690;
extern T0* ge635ov6690;
extern T0* T210f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T501c3(void);
/* ET_MANIFEST_TUPLE.capacity */
extern T6 T210f7(T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T61f537(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.static_feature */
extern T0* T235f7(T0* C);
/* ET_CLASS.seeded_procedure */
extern T0* T60f60(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T186f4(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.static_feature */
extern T0* T231f9(T0* C);
/* ET_CLASS.seeded_query */
extern T0* T60f55(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T185f5(T0* C, T6 a1);
/* ET_C_GENERATOR.formal_argument */
extern T0* T61f164(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].put_last */
extern void T191f13(T0* C, T0* a1);
/* ET_IDENTIFIER.set_argument */
extern void T129f103(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T196f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T196f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T196f9(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T231f14(T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T61f117(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.is_tuple_label */
extern T1 T231f7(T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T61f452(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T201f12(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].clear_items */
extern void T201f14(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T201f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T498f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_position */
extern void T498f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T61f509(T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T61f555(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_routine_function_access */
extern void T61f554(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T61f553(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T61f551(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T204f15(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T204f14(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern T0* T204f9(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T204f8(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T204f13(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_access */
extern void T61f550(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T61f549(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.make */
extern T0* T184c78(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge794os12970;
extern T0* ge794ov12970;
extern T0* T160f178(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T184f13(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T176f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T176c23(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T176f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T473f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1086c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T472c4(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge845os6690;
extern T0* ge845ov6690;
extern T0* T176f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T473c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge794os12911;
extern T0* ge794ov12911;
extern T0* T160f177(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T469c52(void);
/* ET_SYMBOL.make_leaf */
extern void T469f55(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T469f3(T0* C);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge794os12906;
extern T0* ge794ov12906;
extern T0* T160f176(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T470c82(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T470f83(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T470f18(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T176f5(T0* C);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T129f99(T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T129f96(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T201f6(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T228f24(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T174f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T216f14(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T216f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T527f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T527f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T216f6(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T216f7(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T216f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T216f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].resize */
extern T0* T526f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].resized_area */
extern T0* T521f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].copy_data */
extern void T521f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_FEATURE].move_data */
extern void T521f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].overlapping_move */
extern void T521f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].non_overlapping_move */
extern void T521f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].make */
extern T0* T521c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T216f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T216f9(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T228f51(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T174f50(T0* C, T1 a1);
/* ET_C_GENERATOR.print_object_allocation_functions */
extern void T61f451(T0* C);
/* ET_C_GENERATOR.print_object_allocation_function */
extern void T61f508(T0* C, T0* a1);
/* ET_C_GENERATOR.print_dispose_registration */
extern void T61f548(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].force_last */
extern void T215f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_put */
extern void T215f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_put */
extern void T215f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_put */
extern void T215f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].resize */
extern void T215f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].clashes_resize */
extern void T215f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T215f31(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T215f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T215f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].slots_resize */
extern void T215f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T215f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_capacity */
extern T6 T215f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].item_storage_put */
extern void T215f48(T0* C, T0* a1, T6 a2);
/* ET_COMPOUND.is_empty */
extern T1 T265f4(T0* C);
/* ET_C_GENERATOR.print_polymorphic_procedure_call_functions */
extern void T61f450(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T235f15(T0* C, T0* a1);
/* ET_C_GENERATOR.print_polymorphic_query_call_functions */
extern void T61f449(T0* C);
/* ET_C_GENERATOR.print_manifest_string_function */
extern void T61f448(T0* C);
/* ET_C_GENERATOR.print_default_declarations */
extern void T61f447(T0* C);
/* ET_C_GENERATOR.print_default_declaration */
extern void T61f495(T0* C, T0* a1);
/* ET_C_GENERATOR.print_default_object_value */
extern void T61f534(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_default_attribute_value */
extern void T61f567(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.flush_to_c_file */
extern void T61f446(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T222f28(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T222f36(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T222f36p1(T0* C);
/* ET_C_GENERATOR.print_types */
extern void T61f445(T0* C, T0* a1);
/* ET_C_GENERATOR.print_eif_type_struct */
extern void T61f494(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_type_struct */
extern void T61f493(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T61f526(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_struct */
extern void T61f492(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_struct_name */
extern void T61f521(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has_cycle */
extern T1 T229f8(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].is_empty */
extern T1 T155f11(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].sort */
extern void T229f15(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T541f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T541f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T541c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T541f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].put_last */
extern void T155f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].replace */
extern void T540f15(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].item */
extern T0* T540f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T155c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T155f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T464c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].cloned_object */
extern T0* T540f7(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T540f6(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].copy */
extern void T540f16(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].twin */
extern T0* T1106f4(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].new_cursor */
extern T0* T540f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1108c4(T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].valid_cursor */
extern T1 T540f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].move_all_cursors_after */
extern void T540f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_next_cursor */
extern void T1108f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER_32]].set_position */
extern void T1108f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER_32].cloned_object */
extern T0* T192f12(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].twin */
extern T0* T192f13(T0* C);
/* DS_ARRAYED_LIST [INTEGER_32].copy */
extern void T192f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].new_cursor */
extern T0* T192f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER_32].make */
extern T0* T480c4(T0* a1);
/* DS_ARRAYED_LIST [INTEGER_32].valid_cursor */
extern T1 T192f14(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].reset */
extern void T229f19(T0* C);
/* ET_C_GENERATOR.print_boxed_type_definition */
extern void T61f491(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_type_definition */
extern void T61f490(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_function */
extern void T61f489(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T61f524(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T61f522(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force_relation */
extern void T229f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put_indexed_relation */
extern void T229f18(T0* C, T6 a1, T6 a2);
/* DS_LINKABLE [INTEGER_32].put_right */
extern void T381f4(T0* C, T0* a1);
/* DS_LINKABLE [INTEGER_32].make */
extern T0* T381c3(T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].count */
extern T6 T229f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].index_of */
extern T6 T229f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found_item */
extern T6 T539f34(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_item */
extern T6 T539f31(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].found */
extern T1 T539f30(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search */
extern void T539f39(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].search_position */
extern void T539f40(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_item */
extern T6 T539f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].hash_position */
extern T6 T539f28(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T539f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_item */
extern T6 T539f29(T0* C, T6 a1);
/* ET_C_GENERATOR.print_type_definition */
extern void T61f488(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_pointer_type_definition */
extern void T61f487(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_64_type_definition */
extern void T61f486(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_real_32_type_definition */
extern void T61f485(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_64_type_definition */
extern void T61f484(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_32_type_definition */
extern void T61f483(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_16_type_definition */
extern void T61f482(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_natural_8_type_definition */
extern void T61f481(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_64_type_definition */
extern void T61f480(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_32_type_definition */
extern void T61f479(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_16_type_definition */
extern void T61f478(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_integer_8_type_definition */
extern void T61f477(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_32_type_definition */
extern void T61f476(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_character_8_type_definition */
extern void T61f475(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boolean_type_definition */
extern void T61f474(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].force */
extern void T229f13(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].put */
extern void T229f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].put_last */
extern void T540f14(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].put */
extern void T539f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_put */
extern void T539f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_put */
extern void T539f44(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_put */
extern void T539f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_put */
extern void T539f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].unset_found_item */
extern void T539f42(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].resize */
extern void T540f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].resize */
extern T0* T1107f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].resized_area */
extern T0* T1106f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].copy_data */
extern void T1106f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].move_data */
extern void T1106f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].overlapping_move */
extern void T1106f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].non_overlapping_move */
extern void T1106f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1106c5(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].resize */
extern void T539f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].clashes_resize */
extern void T539f48(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T539f27(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].key_storage_resize */
extern void T539f47(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].item_storage_resize */
extern void T539f46(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].slots_resize */
extern void T539f43(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_modulus */
extern T6 T539f21(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].capacity */
extern T6 T229f7(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].has */
extern T1 T229f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].has */
extern T1 T539f22(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make_default */
extern T0* T229c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_DYNAMIC_TYPE].make */
extern void T229f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].make */
extern T0* T540c12(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].make */
extern T0* T1107f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER_32]].make_area */
extern T0* T1329c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER_32]].default_create */
extern T0* T1107c3(void);
/* DS_ARRAYED_LIST [INTEGER_32].make */
extern T0* T192c15(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_map */
extern T0* T539c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T539f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1103c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T1103f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1328c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T539f33(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_DYNAMIC_TYPE].make */
extern T0* T1105c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T539f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_slots */
extern void T539f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_clashes */
extern void T539f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_key_storage */
extern void T539f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_DYNAMIC_TYPE].make_item_storage */
extern void T539f52(T0* C, T6 a1);
/* ET_C_GENERATOR.print_aliased_double_type_definition */
extern void T61f473(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.upper_name */
extern T0* T129f18(T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T595f20(T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T595f69(T0* C);
/* UC_UTF8_STRING.move_bytes_right */
extern void T595f81(T0* C, T6 a1, T6 a2);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1117f3(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge358os30279;
extern T0* ge358ov30279;
extern T0* T1117f9(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge358os30278;
extern T0* ge358ov30278;
extern T0* T1117f15(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge358os30266;
extern T0* ge358ov30266;
extern T0* T1117f37(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge358os30277;
extern T0* ge358ov30277;
extern T0* T1117f14(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge358os30276;
extern T0* ge358ov30276;
extern T0* T1117f46(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge358os30275;
extern T0* ge358ov30275;
extern T0* T1117f13(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge358os30274;
extern T0* ge358ov30274;
extern T0* T1117f45(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge358os30273;
extern T0* ge358ov30273;
extern T0* T1117f44(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge358os30272;
extern T0* ge358ov30272;
extern T0* T1117f43(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge358os30271;
extern T0* ge358ov30271;
extern T0* T1117f42(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge358os30270;
extern T0* ge358ov30270;
extern T0* T1117f41(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge358os30269;
extern T0* ge358ov30269;
extern T0* T1117f40(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge358os30268;
extern T0* ge358ov30268;
extern T0* T1117f39(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_29 */
extern unsigned char ge358os30267;
extern T0* ge358ov30267;
extern T0* T1117f38(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge358os30265;
extern T0* ge358ov30265;
extern T0* T1117f36(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge358os30264;
extern T0* ge358ov30264;
extern T0* T1117f35(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge358os30263;
extern T0* ge358ov30263;
extern T0* T1117f34(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge358os30262;
extern T0* ge358ov30262;
extern T0* T1117f33(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge358os30261;
extern T0* ge358ov30261;
extern T0* T1117f32(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge358os30260;
extern T0* ge358ov30260;
extern T0* T1117f31(T0* C);
/* UC_UTF8_STRING.unicode */
extern T0* T595f50(T0* C);
/* STRING_8.as_upper */
extern T0* T17f25(T0* C);
/* STRING_8.to_upper */
extern void T17f55(T0* C);
/* CHARACTER_8.infix ">=" */
extern T1 T2f4(T2* C, T2 a1);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge794os12690;
extern T0* ge794ov12690;
extern T0* T160f20(T0* C);
/* ET_C_GENERATOR.print_aliased_real_type_definition */
extern void T61f472(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge794os12710;
extern T0* ge794ov12710;
extern T0* T160f19(T0* C);
/* ET_C_GENERATOR.print_aliased_natural_type_definition */
extern void T61f471(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge794os12700;
extern T0* ge794ov12700;
extern T0* T160f18(T0* C);
/* ET_C_GENERATOR.print_aliased_integer_type_definition */
extern void T61f470(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge794os12693;
extern T0* ge794ov12693;
extern T0* T160f17(T0* C);
/* ET_C_GENERATOR.print_aliased_wide_character_type_definition */
extern void T61f469(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge794os12723;
extern T0* ge794ov12723;
extern T0* T160f16(T0* C);
/* ET_C_GENERATOR.print_aliased_character_type_definition */
extern void T61f468(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge794os12686;
extern T0* ge794ov12686;
extern T0* T160f15(T0* C);
/* ET_C_GENERATOR.print_start_extern_c */
extern void T61f444(T0* C, T0* a1);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T61f443(T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].replace */
extern void T218f51(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_put */
extern void T218f62(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].search_position */
extern void T218f52(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].hash_position */
extern T6 T218f24(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING_8].test */
extern T1 T49f1(T0* C, T0* a1, T0* a2);
/* KL_ANY_ROUTINES.equal_objects */
extern T1 T79f2(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [STRING_8].any_ */
extern T0* T49f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_item */
extern T6 T218f28(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item */
extern T1 T218f38(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].force */
extern void T218f50(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_put */
extern void T218f66(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_put */
extern void T218f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_put */
extern void T218f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].resize */
extern void T218f63(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].clashes_resize */
extern void T218f73(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].special_integer_ */
extern T0* T218f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].key_storage_resize */
extern void T218f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].item_storage_resize */
extern void T218f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].slots_resize */
extern void T218f70(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_modulus */
extern T6 T218f39(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_capacity */
extern T6 T218f23(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].force */
extern void T217f44(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].slots_put */
extern void T217f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].clashes_put */
extern void T217f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].slots_item */
extern T6 T217f24(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].hash_position */
extern T6 T217f20(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].resize */
extern void T217f59(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].clashes_resize */
extern void T217f67(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].special_integer_ */
extern T0* T217f27(T0* C);
/* DS_HASH_SET [STRING_8].key_storage_resize */
extern void T217f66(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_resize */
extern void T217f65(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].key_storage_item */
extern T0* T217f36(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].slots_resize */
extern void T217f64(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_modulus */
extern T6 T217f25(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].new_capacity */
extern T6 T217f19(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].item_storage_put */
extern void T217f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING_8].search_position */
extern void T217f57(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].key_equality_tester */
extern T0* T217f35(T0* C);
/* STRING_8.same_string */
extern T1 T17f8(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].has */
extern T1 T218f37(T0* C, T0* a1);
/* ET_C_GENERATOR.exception_trace_mode */
extern T1 T61f197(T0* C);
/* ET_C_GENERATOR.trace_mode */
extern T1 T61f190(T0* C);
/* ET_C_GENERATOR.generate_ids */
extern void T61f442(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T228f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T174f54(T0* C, T6 a1);
/* ET_C_GENERATOR.open_cpp_file */
extern void T61f441(T0* C);
/* ET_C_GENERATOR.open_c_file */
extern void T61f440(T0* C);
/* ET_C_GENERATOR.set_split_threshold */
extern void T61f432(T0* C, T6 a1);
/* ET_C_GENERATOR.set_split_mode */
extern void T61f431(T0* C, T1 a1);
/* GEC.no_split */
extern T1 T21f26(T0* C);
/* ET_C_GENERATOR.set_finalize_mode */
extern void T61f430(T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T21f25(T0* C);
/* ET_C_GENERATOR.set_use_boehm_gc */
extern void T61f429(T0* C, T1 a1);
/* GEC.use_boehm_gc */
extern T1 T21f24(T0* C);
/* AP_ENUMERATION_OPTION.parameter */
extern T0* T35f16(T0* C);
/* DS_ARRAYED_LIST [STRING_8].last */
extern T0* T80f21(T0* C);
/* ET_C_GENERATOR.make */
extern T0* T61c428(T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T61f435(T0* C);
/* ET_C_GENERATOR.make_rescue_data */
extern void T61f434(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].set_equality_tester */
extern void T128f43(T0* C, T0* a1);
/* ET_C_GENERATOR.identifier_tester */
extern unsigned char ge838os8179;
extern T0* ge838ov8179;
extern T0* T61f182(T0* C);
/* ET_IDENTIFIER_TESTER.default_create */
extern T0* T219c2(void);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T128c39(T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T128f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T445c4(T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T128f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T128f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T128f48(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T128f47(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T134f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T447c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T134c3(void);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].set_key_equality_tester */
extern void T218f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].internal_set_equality_tester */
extern void T530f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make */
extern T0* T218c45(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_with_equality_testers */
extern void T218f53(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].make */
extern T0* T530c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING_8].new_cursor */
extern T0* T530f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T1102c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].new_cursor */
extern T0* T218f40(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING_8].make */
extern T0* T528c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_sparse_container */
extern void T218f67(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_slots */
extern void T218f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_clashes */
extern void T218f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_key_storage */
extern void T218f75(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING_8].make_item_storage */
extern void T218f74(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING_8].default_create */
extern T0* T49c3(void);
/* DS_HASH_SET [STRING_8].set_equality_tester */
extern void T217f40(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].make */
extern T0* T217c39(T6 a1);
/* DS_HASH_SET [STRING_8].new_cursor */
extern T0* T217f37(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].make */
extern T0* T329c6(T0* a1);
/* DS_HASH_SET [STRING_8].make_slots */
extern void T217f48(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_clashes */
extern void T217f47(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_key_storage */
extern void T217f46(T0* C, T6 a1);
/* DS_HASH_SET [STRING_8].make_item_storage */
extern void T217f45(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T216c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T216f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T527c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T526f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_FEATURE].make_area */
extern T0* T1101c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T526c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_map */
extern T0* T215c36(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T215f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make */
extern T0* T523c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T523f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make */
extern T0* T1100c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T215f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make */
extern T0* T525c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T215f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_slots */
extern void T215f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_clashes */
extern void T215f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_key_storage */
extern void T215f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_FEATURE, ET_DYNAMIC_TYPE].make_item_storage */
extern void T215f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make */
extern T0* T214c37(T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_cursor */
extern T0* T214f36(T0* C);
/* DS_HASH_SET_CURSOR [ET_INLINE_CONSTANT].make */
extern T0* T518c4(T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_slots */
extern void T214f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].special_integer_ */
extern T0* T214f20(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_modulus */
extern T6 T214f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_clashes */
extern void T214f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_key_storage */
extern void T214f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].make_item_storage */
extern void T214f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].make */
extern T0* T520f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_CONSTANT].make_area */
extern T0* T1099c2(T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].make */
extern T0* T519c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].default_create */
extern T0* T520c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T213c42(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T213f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].make */
extern T0* T515c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T515f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1097c3(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T213f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T512c4(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T213f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T213f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T213f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T213f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T510f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T1096c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T510c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T213f69(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T517f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T1098c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T517c3(void);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T212c32(T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T212f19(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T508c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T212f38(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T212f22(T0* C);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T212f24(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T212f37(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T212f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T212f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T211c37(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T211f36(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T505c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T211f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T211f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T211f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T211f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T211f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T211f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T507f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_area */
extern T0* T1095c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T506c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T507c3(void);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T210c23(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T210f23p1(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T210f8(T0* C);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].make */
extern T0* T209c8(T6 a1);
/* DS_ARRAYED_LIST [ET_CALL_EXPRESSION].new_cursor */
extern T0* T209f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CALL_EXPRESSION].make */
extern T0* T504c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T503f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T1094c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T503c3(void);
/* ET_CALL_INSTRUCTION.make */
extern T0* T205c9(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T205f10(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T204c12(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T204f12p1(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge794os12912;
extern T0* ge794ov12912;
extern T0* T160f182(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T469c54(void);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge794os12907;
extern T0* ge794ov12907;
extern T0* T160f181(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T469c53(void);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T204f7(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T201c11(T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T201f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T498c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T497f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT].make_area */
extern T0* T1092c2(T6 a1);
/* SPECIAL [ET_AGENT].make */
extern T0* T496c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T497c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_map */
extern T0* T200c42(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_with_equality_testers */
extern void T200f48(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T494c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T494f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T1091c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].new_cursor */
extern T0* T200f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make */
extern T0* T492c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_sparse_container */
extern void T200f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_slots */
extern void T200f73(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_clashes */
extern void T200f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_key_storage */
extern void T200f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_STANDALONE_TYPE_SET, ET_DYNAMIC_TYPE].make_item_storage */
extern void T200f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T199c37(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T199f18(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T491c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T199f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T199f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T199f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T199f42(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET_LIST.make_with_capacity */
extern T0* T198c7(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_map */
extern T0* T197c42(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_with_equality_testers */
extern void T197f48(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T487c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T487f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T1089c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].new_cursor */
extern T0* T197f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER_32].make */
extern T0* T485c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_sparse_container */
extern void T197f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_slots */
extern void T197f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_clashes */
extern void T197f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_key_storage */
extern void T197f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER_32].make_item_storage */
extern void T197f69(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T196c13(T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T196f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T484c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T483f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T1088c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T483c3(void);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T195c8(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T191c10(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T191f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T479c2(T0* a1);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T190c4(T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge305os2596;
extern T0* ge305ov2596;
extern T0* T61f161(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T188c3(T0* a1);
/* ET_TYPE_CHECKER.make */
extern T0* T187c13(void);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge914os14936;
extern T0* ge914ov14936;
extern T0* T187f7(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T370c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge794os12931;
extern T0* ge794ov12931;
extern T0* T160f696(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T182c27(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T370f32(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T370f68p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unknown_class */
extern unsigned char ge794os13318;
extern T0* ge794ov13318;
extern T0* T160f2(T0* C);
/* ET_CLASS.set_group */
extern void T60f151(T0* C, T0* a1);
/* ET_UNKNOWN_GROUP.make */
extern T0* T465c15(void);
/* ET_CLASS.make_unknown */
extern T0* T60c149(T0* a1);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge794os12925;
extern T0* ge794ov12925;
extern T0* T160f188(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T182c22(void);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge794os13316;
extern T0* ge794ov13316;
extern T0* T160f187(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T186c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T546f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T1111c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T547c4(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge711os6690;
extern T0* ge711ov6690;
extern T0* T186f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T546c3(void);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge794os13315;
extern T0* ge794ov13315;
extern T0* T160f186(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T185c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T552f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T1113c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T553c4(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge713os6690;
extern T0* ge713ov6690;
extern T0* T185f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T552c3(void);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge794os13314;
extern T0* ge794ov13314;
extern T0* T160f185(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T587c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T1145f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T1396c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T1144c4(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge847os15165;
extern T0* ge847ov15165;
extern T0* T587f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T1145c3(void);
/* ET_CLASS.tokens */
extern T0* T60f63(T0* C);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge794os12724;
extern T0* ge794ov12724;
extern T0* T160f21(T0* C);
/* ET_TYPE_CHECKER.tokens */
extern T0* T187f6(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T187f13p1(T0* C);
/* ET_CLASS.lower_name */
extern T0* T60f54(T0* C);
/* ET_DYNAMIC_SYSTEM.compile */
extern void T58f58(T0* C);
/* ET_DYNAMIC_SYSTEM.compile_system */
extern void T58f61(T0* C);
/* ET_DYNAMIC_SYSTEM.build_dynamic_type_sets */
extern void T58f65(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T154f17(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T64f254(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T64f257(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T64f262(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T64f263(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T235f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T231f11(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T64f264(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T28f169(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T28f168(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T77f14(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T57f169(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T57f168(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.append_catcall_error_message */
extern void T64f265(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T235f9(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T231f10(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T64f56(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge960os8587;
extern T0* ge960ov8587;
extern T0* T64f247(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T64f246(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T64f261(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T64f256(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T189f12(T0* C);
/* DS_CELL [INTEGER_32].put */
extern void T273f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T228f57(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T174f56(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T64f260(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T64f259(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T174f32(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T228f56(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T174f55(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T228f55(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T174f53(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T154f13(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_warning_mode */
extern void T64f250(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T154f12(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_error_mode */
extern void T64f249(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T154f16(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T64f253(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T154f15(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T64f252(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T228f52(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T174f49(T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T60f51(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T586f4(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T814f7(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T814f10(T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T644f7(T0* C, T0* a1);
/* ET_CLIENT_LIST.has_class */
extern T1 T353f4(T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T814f9(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T28f156(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T28f163(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge306os9926;
extern T0* ge306ov9926;
extern T0* T75f2(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T77c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T77f15(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T77f19(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T77f4(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T77f18(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T28f167(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T569c31(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T28f26(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T57f156(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T57f163(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T57f167(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T57f26(T0* C);
/* ET_CLASS.named_query */
extern T0* T60f50(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T185f4(T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T60f49(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T186f5(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T28f155(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T569c30(T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T28f22(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T57f155(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T57f22(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T28f154(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T569c29(T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T28f21(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T57f154(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T57f21(T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T60f65(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T28f153(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T569c28(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T28f20(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T57f153(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T57f20(T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge794os12778;
extern T0* ge794ov12778;
extern T0* T160f3(T0* C);
/* ET_DYNAMIC_SYSTEM.tokens */
extern T0* T58f40(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T28f152(T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T569c27(void);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T28f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T57f152(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T57f19(T0* C);
/* ET_DYNAMIC_SYSTEM.compile_kernel */
extern void T58f63(T0* C);
/* ET_TOKEN_CONSTANTS.closed_operands_feature_name */
extern unsigned char ge794os12772;
extern T0* ge794ov12772;
extern T0* T160f12(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T160f11(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge794os12877;
extern T0* ge794ov12877;
extern T0* T160f9(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge794os12839;
extern T0* ge794ov12839;
extern T0* T160f8(T0* C);
/* UT_VERSION.infix "<" */
extern T1 T63f5(T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T63f13(T0* C);
/* UT_VERSION.has_build */
extern T1 T63f12(T0* C);
/* UT_VERSION.revision */
extern T6 T63f11(T0* C);
/* UT_VERSION.has_revision */
extern T1 T63f10(T0* C);
/* UT_VERSION.minor */
extern T6 T63f9(T0* C);
/* UT_VERSION.has_minor */
extern T1 T63f8(T0* C);
/* UT_VERSION.major */
extern T6 T63f7(T0* C);
/* UT_VERSION.has_major */
extern T1 T63f6(T0* C);
/* ET_DYNAMIC_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge249os1737;
extern T0* ge249ov1737;
extern T0* T58f39(T0* C);
/* UT_VERSION.make */
extern T0* T63c17(T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge794os12885;
extern T0* ge794ov12885;
extern T0* T160f7(T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge794os12828;
extern T0* ge794ov12828;
extern T0* T160f6(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge794os12776;
extern T0* ge794ov12776;
extern T0* T160f5(T0* C);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T28f161(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T28f165(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T571c607(T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T571f608(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T571f22(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T60f46(T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T571f21(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T571f17(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge967os24826;
extern T0* ge967ov24826;
extern T0* T571f31(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1365c8(void);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T28f16(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T57f161(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T57f165(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T57f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T28f160(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T571c606(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T28f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T57f160(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T57f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T28f159(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T571c605(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T28f14(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T57f159(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T57f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge794os12746;
extern T0* ge794ov12746;
extern T0* T160f4(T0* C);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T177c81(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T28f158(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T569c32(T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T28f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T57f158(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T57f28(T0* C);
/* ET_LACE_SYSTEM.print_time */
extern void T56f165(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T326f9(T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T326f18(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T326f23(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T152f7(T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T326f14(T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T326f22(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T326f17(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T326f21(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T326f16(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T326c16(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T326f20(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T326f19(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T164f43(T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T164f45(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T164f38(T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T164f42(T0* C);
/* DT_DATE_TIME.infix "<" */
extern T1 T164f41(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T164f40(T0* C);
/* DT_DATE_TIME.day */
extern T6 T164f10(T0* C);
/* DT_DATE_TIME.month */
extern T6 T164f9(T0* C);
/* DT_DATE_TIME.year */
extern T6 T164f8(T0* C);
/* DT_DATE_TIME.add_duration */
extern void T164f62(T0* C, T0* a1);
/* DT_DATE_TIME.add_years_months_days */
extern void T164f65(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T164f67(T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge364os13815;
extern T6 ge364ov13815;
extern T6 T164f47(T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T164f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge364os13814;
extern T6 ge364ov13814;
extern T6 T164f24(T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T164f23(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge364os13813;
extern T6 ge364ov13813;
extern T6 T164f22(T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T152f4(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T164f21(T0* C);
/* DT_DATE_TIME.set_year_month_day */
extern void T164f57(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_day */
extern void T164f66(T0* C, T6 a1);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T326f15(T0* C);
/* DT_DATE_TIME.set_time */
extern void T164f61(T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T164f60(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1148os14010;
extern T0* ge1148ov14010;
extern T0* T326f8(T0* C);
/* DT_DATE_TIME.make */
extern T0* T164c59(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T164f64(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T164f63(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.infix "-" */
extern T0* T164f12(T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T164f16(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T164f7(T0* C);
/* DT_DATE_TIME.second */
extern T6 T164f6(T0* C);
/* DT_DATE_TIME.minute */
extern T6 T164f5(T0* C);
/* DT_DATE_TIME.hour */
extern T6 T164f4(T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T164f3(T0* C);
/* ET_XACE_SYSTEM.print_time */
extern void T53f169(T0* C, T0* a1, T0* a2);
/* ET_LACE_SYSTEM.preparse */
extern void T56f168(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse */
extern T0* T56f168ac1(void);
/* ET_LACE_SYSTEM.preparse_local */
extern void T56f195(T0* C);
/* ET_LACE_SYSTEM.preparse_local */
extern void T56f195p1(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.preparse_local */
extern T0* T56f195p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.preparse_local */
extern T0* T56f195p1ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.preparse_local */
extern T0* T56f195p1ac3(T0* a1);
/* ET_XACE_CLUSTER.process */
extern void T293f56(T0* C, T0* a1);
/* ET_LACE_CLUSTER.process */
extern void T136f48(T0* C, T0* a1);
/* ET_LACE_SYSTEM.reset_classes_incremental */
extern void T56f216(T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.make */
extern T0* T361c5(void);
/* ET_IMPLEMENTATION_STATUS_CHECKER.tokens */
extern T0* T361f2(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern T0* T360c6(void);
/* ET_CLASS_TYPE_CHECKER3.make */
extern T0* T1039c2(void);
/* ET_INTERFACE_STATUS_CHECKER.make */
extern void T360f6p1(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.tokens */
extern T0* T360f3(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern T0* T359c6(void);
/* ET_CLASS_TYPE_CHECKER2.make */
extern T0* T1038c2(void);
/* ET_FLATTENING_STATUS_CHECKER.make */
extern void T359f6p1(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.tokens */
extern T0* T359f3(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern T0* T358c6(void);
/* ET_CLASS_TYPE_CHECKER1.make */
extern T0* T1037c2(void);
/* ET_ANCESTORS_STATUS_CHECKER.make */
extern void T358f6p1(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.tokens */
extern T0* T358f3(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T335f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T153f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T153f70(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T335f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T153f69(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T335f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T153f25(T0* C, T6 a1);
/* ET_CLASS.set_implementation_error */
extern void T60f200(T0* C);
/* ET_CLASS.set_interface_error */
extern void T60f162(T0* C);
/* ET_CLASS.reset_after_features_flattened */
extern void T60f199(T0* C);
/* ET_INVARIANTS.reset */
extern void T729f25(T0* C);
/* ET_INVARIANTS.reset_implementation_checked */
extern void T729f29(T0* C);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T729f26(T0* C);
/* ET_INVARIANTS.reset */
extern void T729f25p1(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T466f27(T0* C);
/* ET_PROCEDURE_LIST.reset_after_features_flattened */
extern void T186f12(T0* C);
/* ET_QUERY_LIST.reset_after_features_flattened */
extern void T185f12(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T60f164(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T60f163(T0* C);
/* ET_CLASS.reset_after_interface_checked */
extern void T60f198(T0* C);
/* ET_CLASS.set_flattening_error */
extern void T60f197(T0* C);
/* ET_CLASS.reset_after_ancestors_built */
extern void T60f196(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T725f10(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T827f10(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T1036f12(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T825f9(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T827f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T825f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T586f11(T0* C);
/* ET_CREATOR.reset */
extern void T814f19(T0* C);
/* ET_PARENT_LIST.reset */
extern void T351f12(T0* C);
/* ET_PARENT.reset */
extern void T347f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T350f10(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T349f9(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T804f13(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T802f8(T0* C);
/* ET_RENAME_LIST.reset */
extern void T348f10(T0* C);
/* ET_RENAME.reset */
extern void T796f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T796f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T176f29(T0* C);
/* ET_PARENT.parent */
extern T0* T347f11(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T186f11(T0* C);
/* ET_QUERY_LIST.reset */
extern void T185f11(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T60f165(T0* C);
/* ET_CLASS.set_ancestors_error */
extern void T60f182(T0* C);
/* ET_CLASS.reset_after_parsed */
extern void T60f195(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T60f166(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T335f4(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T153f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T153f34(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T335f5(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T153f36(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T335f7(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T153f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T153f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T153f38(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T153f33(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T335c6(T0* a1);
/* ET_LACE_SYSTEM.reset_modified_classes */
extern void T56f215(T0* C);
/* ET_CLASS.reset_parsed */
extern void T60f167(T0* C);
/* ET_CLASS.reset */
extern void T60f158(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T60f168(T0* C);
/* ET_CLASS.copy */
extern void T60f194(T0* C, T0* a1);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T60f48(T0* C);
/* KL_UNIX_FILE_SYSTEM.file_exists */
extern T1 T71f14(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.exists */
extern T1 T22f32(T0* C);
/* KL_TEXT_INPUT_FILE.is_plain */
extern T1 T22f40(T0* C);
/* UNIX_FILE_INFO.is_plain */
extern T1 T284f7(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T284f8(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge2149os2059;
extern T0* ge2149ov2059;
extern T0* T22f23(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T284c9(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T284f11(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T284f4(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T22f49(T0* C);
/* UNIX_FILE_INFO.update */
extern void T284f10(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T284f12(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T22f14(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T22f22(T0* C, T14 a1);
/* KL_TEXT_INPUT_FILE.reset */
extern void T22f55(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.tmp_file */
extern unsigned char ge389os9689;
extern T0* ge389ov9689;
extern T0* T71f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_exists */
extern T1 T70f18(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_file */
extern T0* T70f19(T0* C);
/* KL_UNIX_FILE_SYSTEM.file_time_stamp */
extern T6 T71f13(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T22f31(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T22f39(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T284f6(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.file_time_stamp */
extern T6 T70f17(T0* C, T0* a1);
/* ET_LACE_SYSTEM.file_system */
extern T0* T56f145(T0* C);
/* ET_LACE_SYSTEM.unix_file_system */
extern T0* T56f148(T0* C);
/* ET_LACE_SYSTEM.windows_file_system */
extern T0* T56f147(T0* C);
/* ET_LACE_SYSTEM.operating_system */
extern T0* T56f146(T0* C);
/* ET_CLASS.set_overridden_class */
extern void T60f177(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T60f202(T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_adapted */
extern void T314f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].do_all */
extern void T622f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].item */
extern T0* T622f6(T0* C, T6 a1);
/* ET_LACE_CLUSTERS.do_all */
extern void T135f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T448f6(T0* C, T6 a1);
/* ET_LACE_SYSTEM.import_classes */
extern void T56f214(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.import_classes */
extern T0* T56f214ac1(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T153f43(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T153f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T153f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T153f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T153f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T153f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T153f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T153f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T153f28(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T153f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T461f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].resized_area */
extern T0* T459f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].copy_data */
extern void T459f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME].move_data */
extern void T459f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].overlapping_move */
extern void T459f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].non_overlapping_move */
extern void T459f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T459c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T153f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T460f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].resized_area */
extern T0* T458f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].copy_data */
extern void T458f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS].move_data */
extern void T458f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].overlapping_move */
extern void T458f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].non_overlapping_move */
extern void T458f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].make */
extern T0* T458c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T153f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T153f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T153f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T153f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T153f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T153f51(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T332f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T153f46(T0* C);
/* ET_ADAPTED_LIBRARIES.is_empty */
extern T1 T314f3(T0* C);
/* ET_ADAPTED_LIBRARIES.count */
extern T6 T314f2(T0* C);
/* ET_ADAPTED_LIBRARIES.do_ordered */
extern void T314f7(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_ordered */
extern T0* T314f7ac1(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_LIBRARY].do_all */
extern void T627f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIBRARY].item */
extern T0* T627f6(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY].sort */
extern void T625f8(T0* C);
/* DS_ARRAYED_LIST [ET_LIBRARY].put_last */
extern void T627f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIBRARY].make */
extern T0* T627c8(T6 a1);
/* DS_ARRAYED_LIST [ET_LIBRARY].new_cursor */
extern T0* T627f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIBRARY].make */
extern T0* T1163c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].make */
extern T0* T1160f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIBRARY].make_area */
extern T0* T1401c2(T6 a1);
/* SPECIAL [ET_LIBRARY].make */
extern T0* T1161c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIBRARY].default_create */
extern T0* T1160c2(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY].reset */
extern void T625f9(T0* C);
/* ET_ADAPTED_LIBRARIES.do_all */
extern void T314f9(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIBRARY].make */
extern T0* T625c7(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_map */
extern T0* T1162c22(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_with_equality_testers */
extern void T1162f23(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY].make */
extern T0* T1403c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIBRARY].new_cursor */
extern T0* T1403f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIBRARY].make */
extern T0* T1512c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].new_cursor */
extern T0* T1162f19(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIBRARY].make */
extern T0* T1405c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_sparse_container */
extern void T1162f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].unset_found_item */
extern void T1162f29(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_slots */
extern void T1162f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].special_integer_ */
extern T0* T1162f18(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].new_modulus */
extern T6 T1162f20(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_clashes */
extern void T1162f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_key_storage */
extern void T1162f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIBRARY].make_item_storage */
extern void T1162f25(T0* C, T6 a1);
/* ET_XACE_SYSTEM.preparse */
extern void T53f172(T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse */
extern T0* T53f172ac1(void);
/* ET_XACE_SYSTEM.preparse_local */
extern void T53f201(T0* C);
/* ET_XACE_SYSTEM.preparse_local */
extern void T53f201p1(T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.preparse_local */
extern T0* T53f201p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.preparse_local */
extern T0* T53f201p1ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.preparse_local */
extern T0* T53f201p1ac3(T0* a1);
/* ET_XACE_SYSTEM.reset_classes_incremental */
extern void T53f224(T0* C);
/* ET_XACE_SYSTEM.reset_modified_classes */
extern void T53f223(T0* C);
/* ET_XACE_SYSTEM.file_system */
extern T0* T53f157(T0* C);
/* ET_XACE_SYSTEM.unix_file_system */
extern T0* T53f152(T0* C);
/* ET_XACE_SYSTEM.windows_file_system */
extern T0* T53f151(T0* C);
/* ET_XACE_SYSTEM.operating_system */
extern T0* T53f150(T0* C);
/* ET_XACE_CLUSTERS.do_all */
extern void T294f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T613f6(T0* C, T6 a1);
/* ET_XACE_SYSTEM.import_classes */
extern void T53f222(T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.import_classes */
extern T0* T53f222ac1(T0* a1);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T165f10(T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T165f31(T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T164f58(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T165f32(T0* C);
/* DT_SYSTEM_CLOCK.second_now */
extern T6 T165f16(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_sec */
extern T6 T165f29(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.minute_now */
extern T6 T165f15(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_min */
extern T6 T165f28(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.hour_now */
extern T6 T165f14(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_hour */
extern T6 T165f27(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.day_now */
extern T6 T165f13(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mday */
extern T6 T165f26(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.month_now */
extern T6 T165f12(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mon */
extern T6 T165f25(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.year_now */
extern T6 T165f11(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_year */
extern T6 T165f24(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.update */
extern void T165f33(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f4(T14* C);
/* POINTER.c_free */
extern void T14f9(T14* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_millitm */
extern T6 T165f23(T0* C, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T467c7(T14 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f11(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f12(T14* C, T14 a1, T14 a2, T6 a3);
/* DT_SYSTEM_CLOCK.tm_structure_size */
extern T6 T165f22(T0* C);
/* DT_SYSTEM_CLOCK.localtime */
extern T14 T165f20(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.gmtime */
extern T14 T165f19(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_time */
extern void T165f35(T0* C, T14 a1, T14 a2);
/* DT_SYSTEM_CLOCK.ftime */
extern void T165f34(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.time_t_structure_size */
extern T6 T165f18(T0* C);
/* POINTER.memory_alloc */
extern T14 T14f1(T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f2(T14* C, T6 a1);
/* DT_SYSTEM_CLOCK.timeb_structure_size */
extern T6 T165f17(T0* C);
/* DT_DATE_TIME.make_from_storage */
extern T0* T164c56(T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1140os13694;
extern T0* ge1140ov13694;
extern T0* T163f1(T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T165c30(void);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T163c2(void);
/* ET_DYNAMIC_SYSTEM.activate_dynamic_type_set_builder */
extern void T58f62(T0* C);
/* ET_LACE_SYSTEM.activate_processors */
extern void T56f163(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T319f15(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T319c14(void);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern void T319f18(T0* C, T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T632f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T632c6(void);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge912os25612;
extern T0* ge912ov25612;
extern T0* T632f4(T0* C);
/* ET_SUPPLIER_BUILDER.tokens */
extern T0* T632f5(T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T629c38(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T629f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1164c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T629f48(T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T629f47(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T629f24(T0* C);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T629f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T629f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T629f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T629f44(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T460f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T1082c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T460c3(void);
/* DS_HASH_SET [ET_QUERY].make */
extern T0* T631c37(T6 a1);
/* DS_HASH_SET [ET_QUERY].new_cursor */
extern T0* T631f22(T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].make */
extern T0* T1166c4(T0* a1);
/* DS_HASH_SET [ET_QUERY].unset_found_item */
extern void T631f42(T0* C);
/* DS_HASH_SET [ET_QUERY].make_slots */
extern void T631f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].special_integer_ */
extern T0* T631f30(T0* C);
/* DS_HASH_SET [ET_QUERY].new_modulus */
extern T6 T631f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_clashes */
extern void T631f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_key_storage */
extern void T631f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].make_item_storage */
extern void T631f38(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make */
extern T0* T630c37(T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_cursor */
extern T0* T630f22(T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].make */
extern T0* T1165c4(T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].unset_found_item */
extern void T630f42(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].make_slots */
extern void T630f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].special_integer_ */
extern T0* T630f30(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].new_modulus */
extern T6 T630f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_clashes */
extern void T630f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_key_storage */
extern void T630f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].make_item_storage */
extern void T630f38(T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T319f19(T0* C);
/* ET_IMPLEMENTATION_CHECKER.tokens */
extern T0* T319f12(T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T628c37(void);
/* ET_FEATURE_CHECKER.free_context */
extern void T628f38(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T282f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T282f36(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T281f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T281f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T560f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].resized_area */
extern T0* T559f3(T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].copy_data */
extern void T559f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].move_data */
extern void T559f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].overlapping_move */
extern void T559f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].non_overlapping_move */
extern void T559f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T559c4(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T281f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T281f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T628f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T281f14(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T281f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T561f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T561f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T281f6(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T282c33(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T282f35(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T563f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T1116c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T562c4(T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge876os15165;
extern T0* ge876ov15165;
extern T0* T282f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T563c3(void);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T281f7(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T281c12(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T281f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T561c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T560f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T1115c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T560c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T280c13(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T280f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T558c4(T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T279c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T279f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T557c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T555f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_area */
extern T0* T1114c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T556c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T555c3(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T278c18(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T278f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T554c6(T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T277c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T277f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T551c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T549f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_area */
extern T0* T1112c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T550c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T549c3(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T276c18(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T276f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T548c6(T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T275c13(T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T275f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T545c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T542f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T1110c2(T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T544c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T542c3(void);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge896os9187;
extern T0* ge896ov9187;
extern T0* T628f28(T0* C);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T628f27(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T325c6(void);
/* ET_PARENT_CHECKER3.make */
extern T0* T1034c7(void);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1123c18(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1123f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1391c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T1034f7p1(T0* C);
/* ET_PARENT_CHECKER3.tokens */
extern T0* T1034f4(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern void T325f6p1(T0* C);
/* ET_INTERFACE_CHECKER.tokens */
extern T0* T325f3(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T324c24(void);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T1033c9(void);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge909os29710;
extern T0* ge909ov29710;
extern T0* T1033f5(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1309c27(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1351f10(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1351f9(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1351c22(T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.current_system */
extern T0* T1033f6(T0* C);
/* ET_PRECURSOR_CHECKER.make */
extern void T1033f9p1(T0* C);
/* ET_PRECURSOR_CHECKER.tokens */
extern T0* T1033f4(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T1032c6(void);
/* ET_FORMAL_PARAMETER_CHECKER2.tokens */
extern T0* T1032f3(T0* C);
/* ET_PARENT_CHECKER2.make */
extern T0* T1031c6(void);
/* ET_PARENT_CHECKER2.tokens */
extern T0* T1031f3(T0* C);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T1030c7(void);
/* ET_SIGNATURE_CHECKER.make */
extern void T1030f7p1(T0* C);
/* ET_SIGNATURE_CHECKER.tokens */
extern T0* T1030f4(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T1029c7(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make_default */
extern T0* T1308c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make */
extern void T1308f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_map */
extern T0* T1446c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_with_equality_testers */
extern void T1446f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1531c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1531f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1568c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1446f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].make */
extern T0* T1533c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_sparse_container */
extern void T1446f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].unset_found_item */
extern void T1446f42(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_slots */
extern void T1446f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].special_integer_ */
extern T0* T1446f26(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].new_modulus */
extern T6 T1446f22(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_clashes */
extern void T1446f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_key_storage */
extern void T1446f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].make */
extern T0* T1509f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_IDENTIFIER].make_area */
extern T0* T1560c2(T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].make */
extern T0* T1508c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].default_create */
extern T0* T1509c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].make_item_storage */
extern void T1446f57(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].make */
extern T0* T1385c14(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1385f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].make */
extern T0* T1510c7(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T1029f7p1(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.tokens */
extern T0* T1029f6(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T1028c7(void);
/* ET_IDENTIFIER_TYPE_RESOLVER.tokens */
extern T0* T1028f4(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1027c17(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1307f37(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T1441f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1307c36(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1307f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1441c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1441f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1528c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1307f30(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1443c4(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1307f54(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1307f43(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1307f62(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1307f31(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1307f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1307f61(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1307f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1438f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1527c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T1436c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1438c3(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1307f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1444f2(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1529c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1439c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1444c3(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1305f34(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1304c2(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1305c33(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1305f27(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1437c4(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1305f43(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1305f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1305f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1305f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1305f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1305f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1305f39(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1027f17p1(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1027f11(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T1026c22(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_map */
extern T0* T1303c45(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_with_equality_testers */
extern void T1303f52(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1433c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1433f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1525c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_cursor */
extern T0* T1303f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].make */
extern T0* T1430c4(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_sparse_container */
extern void T1303f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].unset_found_item */
extern void T1303f56(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_slots */
extern void T1303f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].special_integer_ */
extern T0* T1303f41(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_modulus */
extern T6 T1303f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_clashes */
extern void T1303f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_key_storage */
extern void T1303f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].make_item_storage */
extern void T1303f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1435f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1526c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T1431c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1435c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1302f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1428f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1302c45(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1302f54(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1428c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1428f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1524c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1302f43(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1427c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1302f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1302f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1302f78(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1302f40(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1302f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1302f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1302f76(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T856f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T1229c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T794c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T856c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1302f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1301f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1301c39(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1301f21(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1426c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1301f52(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1301f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1301f31(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1301f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1301f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1301f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1301f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1300f43(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1423f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge837os6625;
extern T0* ge837ov6625;
extern T0* T1026f16(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T1019c2(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1300c42(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1300f51(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1423c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1423f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1522c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1300f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1420c4(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1300f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1300f54(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1300f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1300f37(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1300f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1300f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1300f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1300f75(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1425f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1523c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T1421c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1425c3(void);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern void T1026f22p1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.tokens */
extern T0* T1026f15(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_map */
extern T0* T1025c45(T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_with_equality_testers */
extern void T1025f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].make */
extern T0* T1295c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1295f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1418c3(T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_cursor */
extern T0* T1025f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].make */
extern T0* T1297c4(T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_sparse_container */
extern void T1025f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].unset_found_item */
extern void T1025f52(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_slots */
extern void T1025f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].special_integer_ */
extern T0* T1025f36(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_modulus */
extern T6 T1025f44(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_clashes */
extern void T1025f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_key_storage */
extern void T1025f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].make_item_storage */
extern void T1025f48(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].make */
extern T0* T1298f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENT].make_area */
extern T0* T1419c2(T6 a1);
/* SPECIAL [ET_CLIENT].make */
extern T0* T1299c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].default_create */
extern T0* T1298c3(void);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].make */
extern T0* T1024c13(T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_cursor */
extern T0* T1024f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].make */
extern T0* T1293c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].make */
extern T0* T1291f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENT_LIST].make_area */
extern T0* T1417c2(T6 a1);
/* SPECIAL [ET_CLIENT_LIST].make */
extern T0* T1292c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].default_create */
extern T0* T1291c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T1021f37(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T1288f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge835os20955;
extern T0* ge835ov20955;
extern T0* T324f16(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T1022c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T1021c36(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T1021f38(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1288c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1288f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1416c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1021f29(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1290c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T1021f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T1021f44(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T1021f43(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T1021f28(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T1021f35(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T1021f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T1021f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T864f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T1231c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T862c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T864c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T1021f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1285f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T1415c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T1287c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1285c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1018f47(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1282f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T324f17(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T1018c46(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1018f48(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1282c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1282f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1414c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1018f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1284c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T1018f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T1018f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T1018f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T1018f36(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T1018f44(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T1018f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T1018f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T1018f50(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T324f24p1(T0* C);
/* ET_FEATURE_FLATTENER.tokens */
extern T0* T324f18(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T323c10(void);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T1017c10(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1279c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1279f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_map */
extern T0* T1412c36(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1412f38(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1516c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1516f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1563c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1412f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].make */
extern T0* T1518c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1412f45(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1412f40(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_slots */
extern void T1412f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1412f22(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1412f29(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_clashes */
extern void T1412f48(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1412f47(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T759f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T1200c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T754c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T759c3(void);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1412f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1280c15(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1280f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1413c7(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T1017f10p1(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.tokens */
extern T0* T1017f8(T0* C);
/* ET_PARENT_CHECKER1.make */
extern T0* T1016c7(void);
/* ET_PARENT_CHECKER1.tokens */
extern T0* T1016f4(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_map */
extern T0* T1015c41(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_with_equality_testers */
extern void T1015f45(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1277c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1277f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1411c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_cursor */
extern T0* T1015f35(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].make */
extern T0* T1136c6(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_sparse_container */
extern void T1015f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].unset_found_item */
extern void T1015f47(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_slots */
extern void T1015f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].special_integer_ */
extern T0* T1015f32(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_modulus */
extern T6 T1015f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_clashes */
extern void T1015f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_key_storage */
extern void T1015f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].make_item_storage */
extern void T1015f63(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T1014c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T1014f17(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_map */
extern T0* T1275c37(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_with_equality_testers */
extern void T1275f43(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].make */
extern T0* T1408c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1408f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1513c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_cursor */
extern T0* T1275f34(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].make */
extern T0* T1410c4(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_sparse_container */
extern void T1275f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].unset_found_item */
extern void T1275f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_slots */
extern void T1275f62(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].special_integer_ */
extern T0* T1275f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].new_modulus */
extern T6 T1275f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_clashes */
extern void T1275f61(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_key_storage */
extern void T1275f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].make_item_storage */
extern void T1275f59(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T323f10p1(T0* C);
/* ET_ANCESTOR_BUILDER.tokens */
extern T0* T323f7(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T322c3(void);
/* ET_PROVIDER_CHECKER.tokens */
extern T0* T322f2(T0* C);
/* ET_EIFFEL_PARSER.make */
extern T0* T321c896(void);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T321f899(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T321f904(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge981os19610;
extern T0* ge981ov19610;
extern T0* T321f583(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T321f856(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_6 */
extern void T321f1739(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyarray_subcopy */
extern void T321f1757(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER_32].subcopy */
extern void T1124f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER_32].subcopy */
extern void T362f15(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge267os2884;
extern T0* ge267ov2884;
extern T0* T321f880(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER_32].default_create */
extern T0* T1124c2(void);
/* ET_EIFFEL_PARSER.yycheck_template_5 */
extern void T321f1738(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_4 */
extern void T321f1737(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_3 */
extern void T321f1736(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T321f1735(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T321f1734(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge981os19603;
extern T0* ge981ov19603;
extern T0* T321f579(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_6 */
extern void T321f1733(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_5 */
extern void T321f1732(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_4 */
extern void T321f1731(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_3 */
extern void T321f1730(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T321f1729(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T321f1728(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge981os19602;
extern T0* ge981ov19602;
extern T0* T321f577(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge981os19599;
extern T0* ge981ov19599;
extern T0* T321f842(T0* C);
/* ET_EIFFEL_PARSER.yypact_template_2 */
extern void T321f1755(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypact_template_1 */
extern void T321f1754(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge981os19598;
extern T0* ge981ov19598;
extern T0* T321f838(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge981os19595;
extern T0* ge981ov19595;
extern T0* T321f836(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template_2 */
extern void T321f1753(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yydefact_template_1 */
extern void T321f1752(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge981os19594;
extern T0* ge981ov19594;
extern T0* T321f820(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge981os19591;
extern T0* ge981ov19591;
extern T0* T321f610(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template_2 */
extern void T321f1741(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytypes1_template_1 */
extern void T321f1740(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge981os19590;
extern T0* ge981ov19590;
extern T0* T321f605(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge981os19589;
extern T0* ge981ov19589;
extern T0* T321f600(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T321f903(T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T321f590(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner */
extern void T321f898(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T321f611(T0* C);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T321f902(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T321f905(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T321f909(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T321f908(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T321f920(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge985os20253;
extern T0* ge985ov20253;
extern T0* T321f619(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T321f859(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge985os20252;
extern T0* ge985ov20252;
extern T0* T321f618(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge985os20251;
extern T0* ge985ov20251;
extern T0* T321f617(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge985os20250;
extern T0* ge985ov20250;
extern T0* T321f616(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge985os20249;
extern T0* ge985ov20249;
extern T0* T321f615(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge985os20248;
extern T0* ge985ov20248;
extern T0* T321f614(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge985os20244;
extern T0* ge985ov20244;
extern T0* T321f613(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template_3 */
extern void T321f1747(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T321f1758(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PARSER.yy_chk_template_2 */
extern void T321f1746(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_chk_template_1 */
extern void T321f1745(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge985os20240;
extern T0* ge985ov20240;
extern T0* T321f612(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template_3 */
extern void T321f1744(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_2 */
extern void T321f1743(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_nxt_template_1 */
extern void T321f1742(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.empty_buffer */
extern T0* T321f584(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T640c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T640f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T1170c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T770f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T1202c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T760c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T770c3(void);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T639c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T639f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1169c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1168f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T1406c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T1167c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1168c3(void);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T638c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T656f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T1174c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T655c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T656c3(void);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T637c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T648f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T1171c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T647c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T648c3(void);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T636c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T873f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T1235c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T841c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T873c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T635c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T866f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T1232c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T846c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T866c3(void);
/* ET_EIFFEL_PARSER.make */
extern void T321f896p1(T0* C);
/* ET_EIFFEL_PREPARSER.make */
extern T0* T320c126(void);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner */
extern void T320f127(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T320f73(T0* C);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T320f128(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T320f130(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T320f132(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T320f64(T0* C);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T320f129(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T320f131(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge983os18335;
extern T0* ge983ov18335;
extern T0* T320f71(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T320f81(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge983os18334;
extern T0* ge983ov18334;
extern T0* T320f65(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge983os18333;
extern T0* ge983ov18333;
extern T0* T320f63(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge983os18332;
extern T0* ge983ov18332;
extern T0* T320f61(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge983os18331;
extern T0* ge983ov18331;
extern T0* T320f53(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge983os18330;
extern T0* ge983ov18330;
extern T0* T320f74(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge983os18327;
extern T0* ge983ov18327;
extern T0* T320f68(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_2 */
extern void T320f137(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_array_subcopy */
extern void T320f139(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ET_EIFFEL_PREPARSER.integer_array_ */
extern T0* T320f93(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template_1 */
extern void T320f136(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge983os18324;
extern T0* ge983ov18324;
extern T0* T320f62(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_2 */
extern void T320f135(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_nxt_template_1 */
extern void T320f134(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T320f54(T0* C);
/* ET_XACE_SYSTEM.activate_processors */
extern void T53f167(T0* C);
/* ET_DYNAMIC_SYSTEM.compile_all */
extern void T58f60(T0* C);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.compile_all */
extern T0* T58f60ac1(T0* a1);
/* ET_DYNAMIC_SYSTEM.compile_all_features */
extern void T58f64(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T186f7(T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T185f7(T0* C, T6 a1);
/* ET_CLASS.is_deferred */
extern T1 T60f79(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T60f83(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T182f8(T0* C);
/* ET_LACE_SYSTEM.classes_do_recursive */
extern void T56f162(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_recursive */
extern T0* T56f162ac1(T0* a1);
/* ET_LACE_SYSTEM.classes_do_local */
extern void T56f188(T0* C, T0* a1);
/* ET_ADAPTED_LIBRARIES.do_recursive */
extern void T314f6(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_ADAPTED_LIBRARIES.do_recursive */
extern T0* T314f6ac1(T0* a1);
/* DS_HASH_SET [ET_LIBRARY].do_all */
extern void T623f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_LIBRARY].item_storage_item */
extern T0* T623f12(T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].clashes_item */
extern T6 T623f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make */
extern T0* T623c20(T6 a1);
/* DS_HASH_SET [ET_LIBRARY].new_cursor */
extern T0* T623f15(T0* C);
/* DS_HASH_SET_CURSOR [ET_LIBRARY].make */
extern T0* T1159c3(T0* a1);
/* DS_HASH_SET [ET_LIBRARY].unset_found_item */
extern void T623f26(T0* C);
/* DS_HASH_SET [ET_LIBRARY].make_slots */
extern void T623f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].special_integer_ */
extern T0* T623f16(T0* C);
/* DS_HASH_SET [ET_LIBRARY].new_modulus */
extern T6 T623f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_clashes */
extern void T623f24(T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_key_storage */
extern void T623f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_LIBRARY].make_item_storage */
extern void T623f22(T0* C, T6 a1);
/* ET_XACE_SYSTEM.classes_do_recursive */
extern void T53f166(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_recursive */
extern T0* T53f166ac1(T0* a1);
/* ET_XACE_SYSTEM.classes_do_local */
extern void T53f194(T0* C, T0* a1);
/* ET_LACE_SYSTEM.compile_degree_3 */
extern void T56f167(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_3 */
extern T0* T56f167ac1(T0* a1);
/* ET_LACE_SYSTEM.check_implementation */
extern void T56f194(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T319f17(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T319f16(T0* C, T1 a1);
/* ET_LACE_SYSTEM.classes_do_ordered */
extern void T56f191(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.classes_do_ordered */
extern T0* T56f191ac1(T0* a1);
/* ET_XACE_SYSTEM.compile_degree_3 */
extern void T53f171(T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_3 */
extern T0* T53f171ac1(T0* a1);
/* ET_XACE_SYSTEM.check_implementation */
extern void T53f200(T0* C, T0* a1);
/* ET_XACE_SYSTEM.classes_do_ordered */
extern void T53f197(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.classes_do_ordered */
extern T0* T53f197ac1(T0* a1);
/* ET_LACE_SYSTEM.compile_degree_4 */
extern void T56f166(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T56f166ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T56f166ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.compile_degree_4 */
extern T0* T56f166ac3(T0* a1);
/* ET_LACE_SYSTEM.check_interface */
extern void T56f193(T0* C, T0* a1);
/* ET_LACE_SYSTEM.flatten_features */
extern void T56f192(T0* C, T0* a1);
/* ET_LACE_SYSTEM.build_ancestors */
extern void T56f190(T0* C, T0* a1);
/* ET_XACE_SYSTEM.compile_degree_4 */
extern void T53f170(T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T53f170ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T53f170ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.compile_degree_4 */
extern T0* T53f170ac3(T0* a1);
/* ET_XACE_SYSTEM.check_interface */
extern void T53f199(T0* C, T0* a1);
/* ET_XACE_SYSTEM.flatten_features */
extern void T53f198(T0* C, T0* a1);
/* ET_XACE_SYSTEM.build_ancestors */
extern void T53f196(T0* C, T0* a1);
/* ET_LACE_SYSTEM.parse_all */
extern void T56f164(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all */
extern T0* T56f164ac1(void);
/* ET_LACE_SYSTEM.parse_all_local */
extern void T56f189(T0* C);
/* ET_LACE_SYSTEM.parse_all_local */
extern void T56f189p1(T0* C);
/* Creation of agent #1 in feature ET_LACE_SYSTEM.parse_all_local */
extern T0* T56f189p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_LACE_SYSTEM.parse_all_local */
extern T0* T56f189p1ac2(T0* a1);
/* Creation of agent #3 in feature ET_LACE_SYSTEM.parse_all_local */
extern T0* T56f189p1ac3(T0* a1);
/* ET_XACE_SYSTEM.parse_all */
extern void T53f168(T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all */
extern T0* T53f168ac1(void);
/* ET_XACE_SYSTEM.parse_all_local */
extern void T53f195(T0* C);
/* ET_XACE_SYSTEM.parse_all_local */
extern void T53f195p1(T0* C);
/* Creation of agent #1 in feature ET_XACE_SYSTEM.parse_all_local */
extern T0* T53f195p1ac1(T0* a1);
/* Creation of agent #2 in feature ET_XACE_SYSTEM.parse_all_local */
extern T0* T53f195p1ac2(T0* a1);
/* Creation of agent #3 in feature ET_XACE_SYSTEM.parse_all_local */
extern T0* T53f195p1ac3(T0* a1);
/* ET_DYNAMIC_SYSTEM.set_dynamic_type_set_builder */
extern void T58f57(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T64c248(T0* a1);
/* DS_CELL [INTEGER_32].make */
extern T0* T273c2(T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge960os8875;
extern T0* ge960ov8875;
extern T0* T64f57(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T64f244(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge960os8874;
extern T0* ge960ov8874;
extern T0* T64f58(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T64f255(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T64f258(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T64f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T64f59(T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_warning_mode */
extern void T58f56(T0* C, T1 a1);
/* GEC.catcall_warning_mode */
extern T1 T21f23(T0* C);
/* ET_DYNAMIC_SYSTEM.set_catcall_error_mode */
extern void T58f55(T0* C, T1 a1);
/* GEC.catcall_error_mode */
extern T1 T21f22(T0* C);
/* ET_DYNAMIC_SYSTEM.make */
extern T0* T58c54(T0* a1);
/* Creation of agent #1 in feature ET_DYNAMIC_SYSTEM.make */
extern T0* T58f54ac1(T6 a1);
/* ET_DYNAMIC_SYSTEM.make_basic_types */
extern void T58f59(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T154c11(T0* a1);
/* GEC.is_verbose */
extern T1 T21f21(T0* C);
/* ET_LACE_SYSTEM.set_ise_version */
extern void T56f161(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_default_keyword_usage */
extern void T56f181(T0* C);
/* ET_LACE_SYSTEM.set_ecma_version */
extern void T56f187(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_use_reference_keyword */
extern void T56f186(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_use_attribute_keyword */
extern void T56f185(T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_ise_version */
extern void T53f165(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_default_keyword_usage */
extern void T53f187(T0* C);
/* ET_XACE_SYSTEM.set_ecma_version */
extern void T53f193(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_use_reference_keyword */
extern void T53f192(T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_use_attribute_keyword */
extern void T53f191(T0* C, T1 a1);
/* GEC.ise_latest */
extern unsigned char ge249os1745;
extern T0* ge249ov1745;
extern T0* T21f20(T0* C);
/* UT_VERSION.make_latest */
extern T0* T63c16(void);
/* ET_ERROR_HANDLER.set_ise */
extern void T28f151(T0* C);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T57f151(T0* C);
/* ET_LACE_SYSTEM.set_error_handler */
extern void T56f160(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_error_handler */
extern void T53f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.make_standard */
extern T0* T57c150(void);
/* GEC.is_silent */
extern T1 T21f19(T0* C);
/* GEC.parse_ace_file */
extern void T21f37(T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T54f106(T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T54f224(T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T54f228(T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T54f241(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T54f240(T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T54f239(T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T54f254(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge1007os5473;
extern T0* ge1007ov5473;
extern T0* T54f200(T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T54f176(T0* C, T0* a1);
/* ET_IDENTIFIER.set_position */
extern void T129f100(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].force_last */
extern void T80f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].resize */
extern void T80f29(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_capacity */
extern T6 T80f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].extendible */
extern T1 T80f18(T0* C, T6 a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge1007os5470;
extern T0* ge1007ov5470;
extern T0* T54f199(T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T54f152(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T150f11(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T150f10(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T150f9(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T124f8(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T150c7(T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].resize */
extern T0* T149f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].resized_area */
extern T0* T148f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].copy_data */
extern void T148f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].move_data */
extern void T148f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].overlapping_move */
extern void T148f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].non_overlapping_move */
extern void T148f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T148c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T149f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_area */
extern T0* T454c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T149c3(void);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T150f8(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T139f5(T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T54f149(T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T124f4(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T139c4(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLIES.put_last */
extern void T138f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].force_last */
extern void T449f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].resize */
extern void T449f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_capacity */
extern T6 T449f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].extendible */
extern T1 T449f7(T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T54f148(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T124f3(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.make */
extern T0* T138c4(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].put_last */
extern void T449f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T449c9(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_cursor */
extern T0* T449f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T1080c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].resize */
extern T0* T147f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].resized_area */
extern T0* T141f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].copy_data */
extern void T141f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].move_data */
extern void T141f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].overlapping_move */
extern void T141f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].non_overlapping_move */
extern void T141f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T141c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T147f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make_area */
extern T0* T453c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].default_create */
extern T0* T147c3(void);
/* ET_LACE_EXCLUDE.put_last */
extern void T137f7(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T137c6(void);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].resize */
extern T0* T146f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_EXCLUDE].resized_area */
extern T0* T144f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_EXCLUDE].copy_data */
extern void T144f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_EXCLUDE].move_data */
extern void T144f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].overlapping_move */
extern void T144f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].non_overlapping_move */
extern void T144f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].make */
extern T0* T144c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].make */
extern T0* T146f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_EXCLUDE].make_area */
extern T0* T452c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].default_create */
extern T0* T146c3(void);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T136f44(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T135f7(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T136f49(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T136f51(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T135f10(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T136f50(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T135f9(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T136f43(T0* C, T0* a1);
/* ET_LACE_PARSER.new_cluster */
extern T0* T54f142(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T125f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T125f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T125f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T125f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T125f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T125f22(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T125f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T125f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T125f31(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T125f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T125f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T125f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T125f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T125f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T125f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T125f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T125f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T125f47(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T220f1(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].any_ */
extern T0* T220f2(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T125f42(T0* C);
/* ET_TOKEN_CONSTANTS.empty_system */
extern unsigned char ge794os13319;
extern T0* ge794ov13319;
extern T0* T160f1(T0* C);
/* ET_SYSTEM.make */
extern T0* T25c144(void);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T313c1(void);
/* ET_SYSTEM.set_default_class_mapping */
extern void T25f149(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge794os12744;
extern T0* ge794ov12744;
extern T0* T160f109(T0* C);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge794os12715;
extern T0* ge794ov12715;
extern T0* T160f108(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge794os12741;
extern T0* ge794ov12741;
extern T0* T160f107(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge794os12735;
extern T0* ge794ov12735;
extern T0* T160f106(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge794os12730;
extern T0* ge794ov12730;
extern T0* T160f105(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge794os12729;
extern T0* ge794ov12729;
extern T0* T160f104(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge794os12726;
extern T0* ge794ov12726;
extern T0* T160f103(T0* C);
/* ET_CLASS_TYPE.make */
extern T0* T175c80(T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].wipe_out */
extern void T153f42(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_wipe_out */
extern void T153f50(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_wipe_out */
extern void T153f49(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_wipe_out */
extern void T153f48(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_wipe_out */
extern void T153f47(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_all_cursors_after */
extern void T153f45(T0* C);
/* ET_SYSTEM.set_basic_classes */
extern void T25f148(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge794os12722;
extern T0* ge794ov12722;
extern T0* T160f102(T0* C);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge794os12721;
extern T0* ge794ov12721;
extern T0* T160f101(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge794os12720;
extern T0* ge794ov12720;
extern T0* T160f100(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge794os12719;
extern T0* ge794ov12719;
extern T0* T160f99(T0* C);
/* ET_SYSTEM.set_system_object_class */
extern void T25f169(T0* C, T0* a1);
/* ET_PARENT_LIST.put_first */
extern void T351f11(T0* C, T0* a1);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T351c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T351f10p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T790f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T1208c2(T6 a1);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T789c4(T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge583os6690;
extern T0* ge583ov6690;
extern T0* T351f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T790c3(void);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge794os12946;
extern T0* ge794ov12946;
extern T0* T160f694(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T182c26(void);
/* ET_PARENT_LIST.tokens */
extern T0* T351f4(T0* C);
/* ET_PARENT.make */
extern T0* T347c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T347f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T347f9(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T176f15(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T466f8(T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge794os12718;
extern T0* ge794ov12718;
extern T0* T160f98(T0* C);
/* ET_SYSTEM.set_string_32_class */
extern void T25f168(T0* C, T0* a1);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T355c6(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T1036c8(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T1036f8p1(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge794os12910;
extern T0* ge794ov12910;
extern T0* T160f720(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T469c66(void);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge794os12905;
extern T0* ge794ov12905;
extern T0* T160f719(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T469c65(void);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T1036f5(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge794os12717;
extern T0* ge794ov12717;
extern T0* T160f97(T0* C);
/* ET_SYSTEM.set_string_8_class */
extern void T25f167(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge794os12716;
extern T0* ge794ov12716;
extern T0* T160f96(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge794os12714;
extern T0* ge794ov12714;
extern T0* T160f95(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge794os12713;
extern T0* ge794ov12713;
extern T0* T160f94(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge794os12743;
extern T0* ge794ov12743;
extern T0* T160f93(T0* C);
/* ET_SYSTEM.set_real_64_class */
extern void T25f166(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge794os12712;
extern T0* ge794ov12712;
extern T0* T160f92(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge794os12742;
extern T0* ge794ov12742;
extern T0* T160f91(T0* C);
/* ET_SYSTEM.set_real_32_class */
extern void T25f165(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge794os12711;
extern T0* ge794ov12711;
extern T0* T160f90(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge794os12709;
extern T0* ge794ov12709;
extern T0* T160f89(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge794os12708;
extern T0* ge794ov12708;
extern T0* T160f88(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge794os12740;
extern T0* ge794ov12740;
extern T0* T160f87(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge794os12707;
extern T0* ge794ov12707;
extern T0* T160f86(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge794os12706;
extern T0* ge794ov12706;
extern T0* T160f85(T0* C);
/* ET_SYSTEM.set_none_class */
extern void T25f164(T0* C, T0* a1);
/* ET_NONE_GROUP.make */
extern T0* T334c14(T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge794os12705;
extern T0* ge794ov12705;
extern T0* T160f84(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge794os12739;
extern T0* ge794ov12739;
extern T0* T160f83(T0* C);
/* ET_SYSTEM.set_natural_64_class */
extern void T25f163(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge794os12704;
extern T0* ge794ov12704;
extern T0* T160f82(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge794os12738;
extern T0* ge794ov12738;
extern T0* T160f81(T0* C);
/* ET_SYSTEM.set_natural_32_class */
extern void T25f162(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge794os12703;
extern T0* ge794ov12703;
extern T0* T160f80(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge794os12737;
extern T0* ge794ov12737;
extern T0* T160f79(T0* C);
/* ET_SYSTEM.set_natural_16_class */
extern void T25f161(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge794os12702;
extern T0* ge794ov12702;
extern T0* T160f78(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge794os12736;
extern T0* ge794ov12736;
extern T0* T160f77(T0* C);
/* ET_SYSTEM.set_natural_8_class */
extern void T25f160(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge794os12701;
extern T0* ge794ov12701;
extern T0* T160f76(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge794os12699;
extern T0* ge794ov12699;
extern T0* T160f75(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge794os12734;
extern T0* ge794ov12734;
extern T0* T160f74(T0* C);
/* ET_SYSTEM.set_integer_64_class */
extern void T25f159(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge794os12697;
extern T0* ge794ov12697;
extern T0* T160f73(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge794os12733;
extern T0* ge794ov12733;
extern T0* T160f72(T0* C);
/* ET_SYSTEM.set_integer_32_class */
extern void T25f158(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge794os12696;
extern T0* ge794ov12696;
extern T0* T160f71(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge794os12732;
extern T0* ge794ov12732;
extern T0* T160f70(T0* C);
/* ET_SYSTEM.set_integer_16_class */
extern void T25f157(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge794os12695;
extern T0* ge794ov12695;
extern T0* T160f69(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge794os12731;
extern T0* ge794ov12731;
extern T0* T160f68(T0* C);
/* ET_SYSTEM.set_integer_8_class */
extern void T25f156(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge794os12694;
extern T0* ge794ov12694;
extern T0* T160f67(T0* C);
/* ET_TOKEN_CONSTANTS.identified_routines_class_name */
extern unsigned char ge794os12692;
extern T0* ge794ov12692;
extern T0* T160f66(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge794os12691;
extern T0* ge794ov12691;
extern T0* T160f65(T0* C);
/* ET_TOKEN_CONSTANTS.disposable_class_name */
extern unsigned char ge794os12689;
extern T0* ge794ov12689;
extern T0* T160f64(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge794os12728;
extern T0* ge794ov12728;
extern T0* T160f63(T0* C);
/* ET_SYSTEM.set_character_32_class */
extern void T25f155(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge794os12688;
extern T0* ge794ov12688;
extern T0* T160f62(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge794os12727;
extern T0* ge794ov12727;
extern T0* T160f61(T0* C);
/* ET_SYSTEM.set_character_8_class */
extern void T25f154(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge794os12687;
extern T0* ge794ov12687;
extern T0* T160f60(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge794os12725;
extern T0* ge794ov12725;
extern T0* T160f59(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge794os12685;
extern T0* ge794ov12685;
extern T0* T160f58(T0* C);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge794os12684;
extern T0* ge794ov12684;
extern T0* T160f57(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge794os12682;
extern T0* ge794ov12682;
extern T0* T160f56(T0* C);
/* ET_SYSTEM.set_any_class */
extern void T25f153(T0* C, T0* a1);
/* ET_CLIENT_LIST.put_first */
extern void T353f11(T0* C, T0* a1);
/* ET_CLIENT.make */
extern T0* T346c5(T0* a1, T0* a2);
/* ET_CLIENT_LIST.make_with_capacity */
extern T0* T353c10(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].make */
extern T0* T810f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENT_ITEM].make_area */
extern T0* T1215c2(T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].make */
extern T0* T809c4(T6 a1);
/* ET_CLIENT_LIST.fixed_array */
extern unsigned char ge550os6690;
extern T0* ge550ov6690;
extern T0* T353f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].default_create */
extern T0* T810c3(void);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge794os12681;
extern T0* ge794ov12681;
extern T0* T160f55(T0* C);
/* ET_CLASS.set_in_system */
extern void T60f153(T0* C, T1 a1);
/* ET_SYSTEM.register_class */
extern void T25f152(T0* C, T0* a1);
/* ET_CLASS.set_id */
extern void T60f154(T0* C, T6 a1);
/* ET_AST_FACTORY.new_class */
extern T0* T286f1(T0* C, T0* a1);
/* ET_CLASS.make */
extern T0* T60c152(T0* a1);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge794os12683;
extern T0* ge794ov12683;
extern T0* T160f54(T0* C);
/* DS_ARRAYED_LIST [STRING_8].make */
extern void T80f23(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING_8].make */
extern T0* T80c23(T6 a1);
/* DS_ARRAYED_LIST [STRING_8].new_cursor */
extern T0* T80f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].make */
extern T0* T330c7(T0* a1);
/* ET_SYSTEM.set_preparse_shallow_mode */
extern void T25f147(T0* C);
/* ET_SYSTEM.set_default_keyword_usage */
extern void T25f146(T0* C);
/* ET_SYSTEM.set_use_reference_keyword */
extern void T25f151(T0* C, T1 a1);
/* ET_SYSTEM.set_use_attribute_keyword */
extern void T25f150(T0* C, T1 a1);
/* ET_SYSTEM.initialize */
extern void T25f145(T0* C);
/* ET_CLUSTERS.make_empty */
extern T0* T568c3(void);
/* DS_ARRAYED_LIST [ET_CLUSTER].make */
extern T0* T1125c6(T6 a1);
/* DS_ARRAYED_LIST [ET_CLUSTER].new_cursor */
extern T0* T1125f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLUSTER].make */
extern T0* T1394c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].make */
extern T0* T1392f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLUSTER].make_area */
extern T0* T1511c2(T6 a1);
/* SPECIAL [ET_CLUSTER].make */
extern T0* T1393c1(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLUSTER].default_create */
extern T0* T1392c2(void);
/* ET_ADAPTED_LIBRARIES.make_empty */
extern T0* T314c5(void);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].make */
extern T0* T622c8(T6 a1);
/* DS_ARRAYED_LIST [ET_ADAPTED_LIBRARY].new_cursor */
extern T0* T622f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ADAPTED_LIBRARY].make */
extern T0* T1158c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].make */
extern T0* T1157f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ADAPTED_LIBRARY].make_area */
extern T0* T1400c2(T6 a1);
/* SPECIAL [ET_ADAPTED_LIBRARY].make */
extern T0* T1156c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ADAPTED_LIBRARY].default_create */
extern T0* T1157c2(void);
/* ET_SYSTEM.initialize */
extern void T25f145p1(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T153f41(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T456f6(T0* C, T0* a1);
/* ET_SYSTEM.class_name_tester */
extern unsigned char ge836os2881;
extern T0* ge836ov2881;
extern T0* T25f135(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T332c2(void);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T153c40(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T153f44(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T456c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T456f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T1081c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T153f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T153f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T153f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T153f63(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T461f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T1083c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T461c3(void);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T153f62(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.default_ast_factory */
extern unsigned char ge794os13321;
extern T0* ge794ov13321;
extern T0* T160f53(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T286c332(void);
/* ET_TOKEN_CONSTANTS.standard_error_handler */
extern unsigned char ge794os13320;
extern T0* ge794ov13320;
extern T0* T160f52(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T28c150(void);
/* ET_SYSTEM.tokens */
extern T0* T25f139(T0* C);
/* ET_LACE_PARSER.tokens */
extern T0* T54f218(T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T124f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.make */
extern T0* T136c39(T0* a1, T0* a2, T0* a3);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T136f45(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T135f8(T0* C, T1 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T145f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].resized_area */
extern T0* T143f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].copy_data */
extern void T143f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTER].move_data */
extern void T143f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].overlapping_move */
extern void T143f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].non_overlapping_move */
extern void T143f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T143c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T145f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T451c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T145c3(void);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T54f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T54f252(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T55f7(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T55f8(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T55f5(T0* C, T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T54f196(T0* C);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T136f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T135c5(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T448c11(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T448f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T1079c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T125f25(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T125f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T125f32(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T125f38(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T136f42(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T136f41(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T136f40(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T135f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T448f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T448f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T448f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T448f8(T0* C, T6 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T54f137(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T124f9(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T135c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T448f12(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].resize */
extern T0* T142f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTERS].resized_area */
extern T0* T140f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTERS].copy_data */
extern void T140f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTERS].move_data */
extern void T140f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].overlapping_move */
extern void T140f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].non_overlapping_move */
extern void T140f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].make */
extern T0* T140c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].make */
extern T0* T142f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTERS].make_area */
extern T0* T450c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].default_create */
extern T0* T142c3(void);
/* ET_LACE_PARSER.new_default_value */
extern T0* T54f133(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.trace_option */
extern unsigned char ge1007os5475;
extern T0* ge1007ov5475;
extern T0* T54f217(T0* C);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge1007os5471;
extern T0* ge1007ov5471;
extern T0* T54f216(T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge1007os5472;
extern T0* ge1007ov5472;
extern T0* T54f215(T0* C);
/* ET_LACE_PARSER.exception_trace_option */
extern unsigned char ge1007os5469;
extern T0* ge1007ov5469;
extern T0* T54f214(T0* C);
/* ET_LACE_PARSER.no_value */
extern unsigned char ge1007os5476;
extern T0* ge1007ov5476;
extern T0* T54f213(T0* C);
/* ET_LACE_PARSER.yes_value */
extern unsigned char ge1007os5477;
extern T0* ge1007ov5477;
extern T0* T54f212(T0* C);
/* ET_LACE_PARSER.console_application_option */
extern unsigned char ge1007os5468;
extern T0* ge1007ov5468;
extern T0* T54f211(T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge1007os5474;
extern T0* ge1007ov5474;
extern T0* T54f210(T0* C);
/* ET_LACE_SYSTEM.set_root_creation */
extern void T56f178(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_root_class */
extern void T56f177(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_system_name */
extern void T56f176(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_dotnet_assemblies */
extern void T56f175(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_clusters */
extern void T56f174(T0* C, T0* a1);
/* ET_LACE_PARSER.set_system */
extern void T54f253(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_trace_mode */
extern void T56f173(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_exception_trace_mode */
extern void T56f172(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_console_application_mode */
extern void T56f171(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_external_object_pathnames */
extern void T56f170(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_external_include_pathnames */
extern void T56f169(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T128f42(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T128f58(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T128f65(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T128f64(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_override */
extern void T136f46(T0* C, T1 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T128f38(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T128f32(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T128f28(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T128f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T128f41(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T128f57(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T128f34(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T128f33(T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T54f238(T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T54f237(T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T54f235(T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T54f251(T0* C);
/* ET_LACE_PARSER.read_token */
extern void T54f234(T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T54f250(T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T54f198(T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T54f124(T0* C);
/* ET_LACE_PARSER.platform */
extern T0* T54f195(T0* C);
/* STRING_8.to_integer */
extern T6 T17f16(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T564f13(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T564f17(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.code */
extern T10 T595f45(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T564f23(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T564f15(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1141f7(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge2172os23830;
extern T0* ge2172ov23830;
extern T0* T564f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1141c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f4(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f11(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* SPECIAL [NATURAL_64].make */
extern T0* T1395c2(T6 a1);
/* STRING_8.has */
extern T1 T17f32(T0* C, T2 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f24(T6* C);
/* CHARACTER_8.is_digit */
extern T1 T2f10(T2* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T564f22(T0* C, T6 a1);
/* STRING_8.ctoi_convertor */
extern unsigned char ge2169os1255;
extern T0* ge2169ov1255;
extern T0* T17f20(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T564f21(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T564f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T564f19(T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c59(T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T564f18(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T564c16(void);
/* ET_LACE_PARSER.set_start_condition */
extern void T54f258(T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T54f192(T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T54f175(T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T54f167(T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T54f249(T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T54f257(T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T54f119(T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T54f248(T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T54f246(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T54f118(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T54f117(T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T54f247(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T76f13(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T76f17(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T76f21(T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T54f164(T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T54f123(T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T54f233(T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T54f242(T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T54f255(T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T54f259(T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T54f261(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].clear_all */
extern void T141f6(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].clear_all */
extern void T148f6(T0* C);
/* SPECIAL [ET_LACE_EXCLUDE].clear_all */
extern void T144f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTERS].clear_all */
extern void T140f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTER].clear_all */
extern void T143f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T133f6(T0* C);
/* ET_LACE_PARSER.abort */
extern void T54f236(T0* C);
/* DS_ARRAYED_LIST [STRING_8].wipe_out */
extern void T80f28(T0* C);
/* DS_ARRAYED_LIST [STRING_8].clear_items */
extern void T80f34(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_all_cursors_after */
extern void T80f33(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T330f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].set_position */
extern void T330f8(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T128f40(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T128f56(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T128f55(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T128f54(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T128f53(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T128f52(T0* C);
/* ET_LACE_PARSER.new_system */
extern T0* T54f151(T0* C);
/* ET_LACE_SYSTEM.set_ast_factory */
extern void T56f179(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T124f7(T0* C);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T124f6(T0* C);
/* ET_LACE_AST_FACTORY.new_system */
extern T0* T124f5(T0* C);
/* ET_LACE_SYSTEM.make */
extern T0* T56c159(void);
/* ET_LACE_SYSTEM.set_default_class_mapping */
extern void T56f184(T0* C);
/* ET_LACE_SYSTEM.set_basic_classes */
extern void T56f183(T0* C);
/* ET_LACE_SYSTEM.set_system_object_class */
extern void T56f213(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_32_class */
extern void T56f212(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_string_8_class */
extern void T56f211(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_64_class */
extern void T56f210(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_real_32_class */
extern void T56f209(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_none_class */
extern void T56f208(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_64_class */
extern void T56f207(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_32_class */
extern void T56f206(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_16_class */
extern void T56f205(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_natural_8_class */
extern void T56f204(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_64_class */
extern void T56f203(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_32_class */
extern void T56f202(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_16_class */
extern void T56f201(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_integer_8_class */
extern void T56f200(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_32_class */
extern void T56f199(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_character_8_class */
extern void T56f198(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_any_class */
extern void T56f197(T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_class */
extern void T56f196(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_preparse_shallow_mode */
extern void T56f182(T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T56f180(T0* C);
/* ET_LACE_SYSTEM.initialize */
extern void T56f180p1(T0* C);
/* ET_LACE_SYSTEM.class_name_tester */
extern T0* T56f155(T0* C);
/* ET_LACE_SYSTEM.tokens */
extern T0* T56f156(T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T54f227(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T54f232(T0* C);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T54f130(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T125f37(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T125f46(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T125f45(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T125f44(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T125f43(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T125f41(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T444f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_position */
extern void T444f5(T0* C, T6 a1);
/* ET_LACE_PARSER.reset */
extern void T54f226(T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T54f231(T0* C);
/* ET_LACE_PARSER.make */
extern T0* T54c223(T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T54f225(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T54f230(T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T54f245(T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge1006os5406;
extern T0* ge1006ov5406;
extern T0* T54f163(T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T54f220(T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge1006os5405;
extern T0* ge1006ov5405;
extern T0* T54f162(T0* C);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge1006os5404;
extern T0* ge1006ov5404;
extern T0* T54f161(T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge1006os5403;
extern T0* ge1006ov5403;
extern T0* T54f160(T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge1006os5402;
extern T0* ge1006ov5402;
extern T0* T54f159(T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge1006os5401;
extern T0* ge1006ov5401;
extern T0* T54f158(T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge1006os5400;
extern T0* ge1006ov5400;
extern T0* T54f157(T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge1006os5399;
extern T0* ge1006ov5399;
extern T0* T54f156(T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge1006os5398;
extern T0* ge1006ov5398;
extern T0* T54f155(T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge1006os5397;
extern T0* ge1006ov5397;
extern T0* T54f154(T0* C);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T54f244(T0* C);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T54f229(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T54f243(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T54f256(T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T54f260(T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge1008os5853;
extern T0* ge1008ov5853;
extern T0* T54f208(T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T54f222(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge1008os5852;
extern T0* ge1008ov5852;
extern T0* T54f207(T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge1008os5851;
extern T0* ge1008ov5851;
extern T0* T54f206(T0* C);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge1008os5850;
extern T0* ge1008ov5850;
extern T0* T54f205(T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge1008os5849;
extern T0* ge1008ov5849;
extern T0* T54f204(T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge1008os5848;
extern T0* ge1008ov5848;
extern T0* T54f203(T0* C);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge1008os5847;
extern T0* ge1008ov5847;
extern T0* T54f202(T0* C);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T54f138(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T125c36(T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T125f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T442c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T442f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T1078c3(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T125f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T444c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T125f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T125f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T125f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T125f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T125f58(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T220c3(void);
/* ET_LACE_AST_FACTORY.make */
extern T0* T124c11(void);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T55c6(void);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T55f4(T0* C);
/* GEC.parse_ecf_file */
extern void T21f36(T0* C, T0* a1);
/* GEC.parse_xace_file */
extern void T21f35(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T44f5(T0* C);
/* ET_XACE_SYSTEM_PARSER.parse_file */
extern void T43f256(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T111f89(T0* C);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T111f85(T0* C);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T111f177(T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T111f170(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T111f109(T0* C, T2 a1);
/* STRING_8.make_empty */
extern T0* T17c42(void);
/* XM_EIFFEL_PARSER.position */
extern T0* T111f137(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T397f6(T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T111f91(T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T111f135(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T398f7(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T398f4(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T398f3(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T397f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T1052f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T1052f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T1052c4(T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].is_empty */
extern T1 T397f5(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T397c8(void);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T397f7(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T1053c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T398f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T1054f4(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T1054c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T398c5(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T44f9(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T44f10(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T44f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T44f11p1(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T44f7(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T103f8(T0* C);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T106f32(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T44f20(T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T574c7(T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T395f5(T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T395f6(T0* C);
/* XM_POSITION_TABLE.item */
extern T0* T101f2(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T591f10(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T592f11(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T592f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T591f13(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T592f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T591f11(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T591f9(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T592f10(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T591f12(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T592f6(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T591f6(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T591f8(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T592f9(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T592f7(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T591c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_system */
extern void T106f35(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].forth */
extern void T299f11(T0* C);
/* XM_DOCUMENT.cursor_forth */
extern void T99f24(T0* C, T0* a1);
/* XM_DOCUMENT.add_traversing_cursor */
extern void T99f28(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_next_cursor */
extern void T299f16(T0* C, T0* a1);
/* XM_DOCUMENT.remove_traversing_cursor */
extern void T99f29(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set */
extern void T299f17(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_ELEMENT.cursor_forth */
extern void T100f46(T0* C, T0* a1);
/* XM_ELEMENT.add_traversing_cursor */
extern void T100f48(T0* C, T0* a1);
/* XM_ELEMENT.remove_traversing_cursor */
extern void T100f49(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T44f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T576c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T106f38(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T106f42(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1063os4439;
extern T0* ge1063ov4439;
extern T0* T106f29(T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1063os4414;
extern T0* ge1063ov4414;
extern T0* T106f27(T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1063os4437;
extern T0* ge1063ov4437;
extern T0* T106f26(T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1063os4440;
extern T0* ge1063ov4440;
extern T0* T106f25(T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1063os4423;
extern T0* ge1063ov4423;
extern T0* T106f13(T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1063os4436;
extern T0* ge1063ov4436;
extern T0* T106f24(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T44f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T44f18(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T44f19(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T311c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1063os4427;
extern T0* ge1063ov4427;
extern T0* T106f11(T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T106f37(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1063os4435;
extern T0* ge1063ov4435;
extern T0* T106f23(T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1063os4434;
extern T0* ge1063ov4434;
extern T0* T106f22(T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1063os4433;
extern T0* ge1063ov4433;
extern T0* T106f21(T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1063os4432;
extern T0* ge1063ov4432;
extern T0* T106f20(T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1063os4431;
extern T0* ge1063ov4431;
extern T0* T106f19(T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1063os4430;
extern T0* ge1063ov4430;
extern T0* T106f18(T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1063os4429;
extern T0* ge1063ov4429;
extern T0* T106f17(T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1063os4419;
extern T0* ge1063ov4419;
extern T0* T106f16(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T44f26(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T580c8(T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1063os4418;
extern T0* ge1063ov4418;
extern T0* T580f7(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].has */
extern T1 T302f28(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search_position */
extern void T302f42(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_item */
extern T6 T302f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].hash_position */
extern T6 T302f25(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_item */
extern T0* T302f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_item */
extern T6 T302f26(T0* C, T6 a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1031os4630;
extern T0* ge1031ov4630;
extern T0* T291f2(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].put_new */
extern void T302f41(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_put */
extern void T302f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_put */
extern void T302f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_put */
extern void T302f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_put */
extern void T302f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].unset_found_item */
extern void T302f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].set_key_equality_tester */
extern void T302f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].internal_set_equality_tester */
extern void T618f6(T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern unsigned char ge339os1727;
extern T0* ge339ov1727;
extern T0* T291f30(T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T48c3(void);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_map */
extern T0* T302c38(T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_with_equality_testers */
extern void T302f43(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].make */
extern T0* T618c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER_32, STRING_8].new_cursor */
extern T0* T618f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T1155c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_cursor */
extern T0* T302f29(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, STRING_8].make */
extern T0* T620c3(T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_sparse_container */
extern void T302f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_slots */
extern void T302f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].special_integer_ */
extern T0* T302f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_modulus */
extern T6 T302f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_clashes */
extern void T302f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_key_storage */
extern void T302f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].make_item_storage */
extern void T302f50(T0* C, T6 a1);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge1018os4660;
extern T0* ge1018ov4660;
extern T0* T106f15(T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T291c217(void);
/* XM_ELEMENT.attribute_by_name */
extern T0* T100f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].go_after */
extern void T299f12(T0* C);
/* XM_DOCUMENT.cursor_go_after */
extern void T99f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_after */
extern void T299f15(T0* C);
/* XM_DOCUMENT.cursor_off */
extern T1 T99f14(T0* C, T0* a1);
/* XM_ELEMENT.cursor_go_after */
extern void T100f47(T0* C, T0* a1);
/* XM_ELEMENT.cursor_off */
extern T1 T100f25(T0* C, T0* a1);
/* XM_ELEMENT.attribute_same_name */
extern T1 T100f9(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T100f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T100f13(T0* C);
/* XM_NODE_TYPER.is_attribute */
extern T1 T1465f9(T0* C);
/* XM_NODE_TYPER.default_create */
extern T0* T1465c10(void);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1063os4426;
extern T0* ge1063ov4426;
extern T0* T106f10(T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T106f36(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T106f41(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T44f25(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T579c7(T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1063os4441;
extern T0* ge1063ov4441;
extern T0* T106f14(T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1063os4422;
extern T0* ge1063ov4422;
extern T0* T106f9(T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T106f39(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T106f43(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T106f44(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T44f24(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T578c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T106f34(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T44f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T308c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1063os4417;
extern T0* ge1063ov4417;
extern T0* T106f5(T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1063os4425;
extern T0* ge1063ov4425;
extern T0* T106f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].item */
extern T0* T299f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].start */
extern void T299f10(T0* C);
/* XM_DOCUMENT.cursor_start */
extern void T99f23(T0* C, T0* a1);
/* XM_ELEMENT.cursor_start */
extern void T100f45(T0* C, T0* a1);
/* XM_ELEMENT.new_cursor */
extern T0* T100f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].make */
extern T0* T299c9(T0* a1);
/* ET_XACE_VALIDATOR.validate_root */
extern void T106f40(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1063os4415;
extern T0* ge1063ov4415;
extern T0* T106f28(T0* C);
/* XM_ELEMENT.element_by_name */
extern T0* T100f21(T0* C, T0* a1);
/* XM_ELEMENT.named_same_name */
extern T1 T100f10(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T100f12(T0* C, T0* a1);
/* XM_ELEMENT.has_namespace */
extern T1 T100f14(T0* C);
/* XM_NODE_TYPER.is_element */
extern T1 T1465f8(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T44f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T577c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_element_by_name */
extern T1 T100f20(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1063os4413;
extern T0* ge1063ov4413;
extern T0* T106f12(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T44f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T575c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T100f18(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T106f7(T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1063os4412;
extern T0* ge1063ov4412;
extern T0* T106f6(T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T106f3(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].wipe_out */
extern void T108f38(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_wipe_out */
extern void T108f46(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_wipe_out */
extern void T108f45(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_wipe_out */
extern void T108f44(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_wipe_out */
extern void T108f43(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].unset_found_item */
extern void T108f42(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].move_all_cursors_after */
extern void T108f41(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_next_cursor */
extern void T391f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].set_position */
extern void T391f5(T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_root_class_name */
extern void T53f173(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_class */
extern void T53f202(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_system */
extern T0* T43f19(T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM.set_use_boehm_gc */
extern void T53f180(T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.options */
extern T0* T43f18(T0* C);
/* ET_XACE_OPTIONS.garbage_collector */
extern T0* T288f95(T0* C);
/* ET_XACE_OPTIONS.default_garbage_collector */
extern unsigned char ge1030os17849;
extern T0* ge1030ov17849;
extern T0* T288f118(T0* C);
/* ET_XACE_OPTIONS.options */
extern T0* T288f106(T0* C);
/* ET_XACE_OPTIONS.is_garbage_collector_declared */
extern T1 T288f116(T0* C);
/* ET_XACE_SYSTEM.set_trace_mode */
extern void T53f179(T0* C, T1 a1);
/* ET_XACE_OPTIONS.trace */
extern T1 T288f94(T0* C);
/* UT_TRISTATE.is_true */
extern T1 T611f2(T0* C);
/* ET_XACE_OPTIONS.is_trace_declared */
extern T1 T288f113(T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T611f4(T0* C);
/* UT_TRISTATE.is_false */
extern T1 T611f3(T0* C);
/* ET_XACE_SYSTEM.set_exception_trace_mode */
extern void T53f178(T0* C, T1 a1);
/* ET_XACE_OPTIONS.exception_trace */
extern T1 T288f93(T0* C);
/* ET_XACE_OPTIONS.is_exception_trace_declared */
extern T1 T288f110(T0* C);
/* ET_XACE_SYSTEM.set_console_application_mode */
extern void T53f177(T0* C, T1 a1);
/* ET_XACE_OPTIONS.console_application */
extern T1 T288f132(T0* C);
/* ET_XACE_OPTIONS.is_console_application_declared */
extern T1 T288f107(T0* C);
/* ET_XACE_SYSTEM_PARSER.replace_all_characters */
extern T0* T43f17(T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T595f63(T0* C, T2 a1, T6 a2);
/* ET_XACE_SYSTEM.merge_externals */
extern void T53f176(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T296f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T297f7(T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T294f4(T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T293f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].forth */
extern void T330f11(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_forth */
extern void T80f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].add_traversing_cursor */
extern void T80f38(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].remove_traversing_cursor */
extern void T80f39(T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T287f7(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].force_last */
extern void T88f18(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].put_right */
extern void T378f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING_8].make */
extern T0* T378c3(T0* a1);
/* DS_LINKED_LIST [STRING_8].is_empty */
extern T1 T88f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].item */
extern T0* T330f5(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_item */
extern T0* T80f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].after */
extern T1 T330f4(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_after */
extern T1 T80f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].start */
extern void T330f10(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_start */
extern void T80f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].is_empty */
extern T1 T80f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING_8].off */
extern T1 T330f6(T0* C);
/* DS_ARRAYED_LIST [STRING_8].cursor_off */
extern T1 T80f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING_8].cursor_before */
extern T1 T80f14(T0* C, T0* a1);
/* ET_XACE_OPTIONS.link */
extern T0* T288f98(T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1030os17863;
extern T0* ge1030ov17863;
extern T0* T288f127(T0* C);
/* DS_ARRAYED_LIST [STRING_8].set_equality_tester */
extern void T80f40(T0* C, T0* a1);
/* ET_XACE_OPTIONS.string_equality_tester */
extern T0* T288f105(T0* C);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T288f125(T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T287f6(T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T288f97(T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1030os17852;
extern T0* ge1030ov17852;
extern T0* T288f124(T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T288f122(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].forth */
extern void T329f10(T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T287f5(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING_8].item */
extern T0* T329f4(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].after */
extern T1 T329f5(T0* C);
/* DS_HASH_SET_CURSOR [STRING_8].start */
extern void T329f9(T0* C);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T288f96(T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1030os17829;
extern T0* ge1030ov17829;
extern T0* T288f121(T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T288f119(T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T287c4(void);
/* DS_LINKED_LIST [STRING_8].make */
extern T0* T88c17(void);
/* ET_XACE_SYSTEM.mount_libraries */
extern void T53f175(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T296f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T294f12(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTERS.put_last */
extern void T294f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T613f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T613f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].resize */
extern T0* T1152f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].resized_area */
extern T0* T1151f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].copy_data */
extern void T1151f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_CLUSTER].move_data */
extern void T1151f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].overlapping_move */
extern void T1151f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].non_overlapping_move */
extern void T1151f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].make */
extern T0* T1151c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T613f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T613f8(T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T293f59(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T294f11(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T293f60(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T294f13(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T294c3(void);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T613c11(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T613f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1153c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1152f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_CLUSTER].make_area */
extern T0* T1398c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1152c3(void);
/* ET_XACE_SYSTEM_PARSER.fill_system */
extern void T43f258(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM.set_mounted_libraries */
extern void T53f185(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_options */
extern void T53f184(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_creation_procedure_name */
extern void T53f183(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_root_creation */
extern void T53f203(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_system_name */
extern void T53f182(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_clusters */
extern void T53f181(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.merge_libraries */
extern void T301f13(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T296f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T295f12(T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T295f8(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T295f9(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T295f13(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T296f7(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T297f6(T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T294f8(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T293f57(T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_externals */
extern void T43f260(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_CLUSTER.put_class_option */
extern void T293f47(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T612f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1150f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1150c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].is_empty */
extern T1 T612f5(T0* C);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T612c7(void);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T612f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1149c3(T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_export */
extern T0* T43f147(T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T288f165(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T573f5(T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T305f5(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T573f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1143f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1143c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T573c7(void);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T573f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1142c3(T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_exported_feature */
extern T0* T43f252(T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T98f8(T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T572c3(T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_alias */
extern unsigned char ge1063os4438;
extern T0* ge1063ov4438;
extern T0* T43f254(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_feature */
extern T0* T43f251(T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T98f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T305c4(T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_export */
extern T0* T43f146(T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T288f176(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].force_last */
extern void T217f69(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_include_dir */
extern T0* T43f145(T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T288f187(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_location */
extern T0* T43f144(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_link_library */
extern T0* T43f143(T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T98f3(T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T288c136(void);
/* ET_XACE_SYSTEM_PARSER.uc_external */
extern T0* T43f32(T0* C);
/* ET_XACE_SYSTEM_PARSER.new_options */
extern T0* T43f31(T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.fill_options */
extern void T43f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_SYSTEM_PARSER.uc_debug */
extern T0* T43f142(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_optimize */
extern T0* T43f141(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_check */
extern T0* T43f139(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_loop */
extern T0* T43f136(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_invariant */
extern T0* T43f134(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_ensure */
extern T0* T43f132(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_enable */
extern unsigned char ge1063os4428;
extern T0* ge1063ov4428;
extern T0* T43f130(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_require */
extern T0* T43f129(T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T288f227(T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T611f7(T0* C);
/* UT_TRISTATE.set_true */
extern void T611f6(T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T611c5(void);
/* UT_TRISTATE.set_undefined */
extern void T611f8(T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T288f226(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1030os17718;
extern T0* ge1030ov17718;
extern T0* T288f130(T0* C);
/* DS_HASH_SET [STRING_8].put_last */
extern void T217f68(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].compress */
extern void T217f70(T0* C);
/* DS_HASH_SET [STRING_8].move_all_cursors */
extern void T217f72(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING_8].key_storage_put */
extern void T217f71(T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T288f225(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T288f224(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T288f223(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T288f222(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T288f221(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T288f220(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T288f219(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1030os17716;
extern T0* ge1030ov17716;
extern T0* T288f128(T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T288f218(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T288f217(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T288f216(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T288f215(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T288f214(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T288f213(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T288f212(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T288f211(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T288f210(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T288f209(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T288f208(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T288f207(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T288f206(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T288f205(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_old_verbatim_strings */
extern void T288f204(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T288f203(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T288f202(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T288f201(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_use_optimized_precompile */
extern void T288f200(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_key_file_name */
extern void T288f199(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T288f198(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T288f197(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_culture */
extern void T288f196(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T288f195(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_classes_per_module */
extern void T288f194(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T288f193(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T288f192(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T288f191(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T288f190(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T288f189(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T288f188(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1030os17715;
extern T0* ge1030ov17715;
extern T0* T288f126(T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T288f186(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T288f185(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T288f184(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T288f183(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1030os17714;
extern T0* ge1030ov17714;
extern T0* T288f123(T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T288f182(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T288f181(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T288f180(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1030os17713;
extern T0* ge1030ov17713;
extern T0* T288f120(T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T288f179(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T288f178(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T288f177(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T288f175(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T288f174(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T288f173(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1030os17712;
extern T0* ge1030ov17712;
extern T0* T288f117(T0* C);
/* ET_XACE_OPTIONS.set_full_class_checking */
extern void T288f172(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T288f171(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T44f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T310c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T288f170(T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T595f36(T0* C);
/* UC_UTF8_STRING.ctoi_convertor */
extern T0* T595f44(T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T595f35(T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T595f43(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T564f12(T0* C);
/* STRING_8.is_integer */
extern T1 T17f23(T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f29(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_force_32bits */
extern void T288f169(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T288f168(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T288f167(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_external_runtime */
extern void T288f166(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T288f164(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T288f163(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_enforce_unique_class_names */
extern void T288f162(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_ecf_library */
extern void T288f161(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T288f160(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T288f159(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T288f158(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T288f157(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T288f156(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T288f155(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T288f154(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1030os17711;
extern T0* ge1030ov17711;
extern T0* T288f114(T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T288f153(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T288f152(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T288f151(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T288f150(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T288f149(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T288f148(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T288f147(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T288f146(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T288f145(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T288f144(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1030os17710;
extern T0* ge1030ov17710;
extern T0* T288f111(T0* C);
/* ET_XACE_OPTIONS.set_automatic_backup */
extern void T288f143(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T44f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T309c7(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T309f4(T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T288f142(T0* C, T0* a1);
/* DS_HASH_SET [STRING_8].has */
extern T1 T217f38(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1030os17709;
extern T0* ge1030ov17709;
extern T0* T288f108(T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T288f141(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T288f140(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T288f139(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T288f138(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T44f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T307c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.is_false */
extern T1 T43f128(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T288f137(T0* C, T1 a1);
/* ET_XACE_SYSTEM_PARSER.is_true */
extern T1 T43f127(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_item */
extern T6 T302f22(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_item */
extern T6 T302f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found */
extern T1 T302f30(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].search */
extern void T302f39(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.option_codes */
extern T0* T43f34(T0* C);
/* ET_XACE_SYSTEM_PARSER.string_equality_tester */
extern T0* T43f153(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_value */
extern T0* T43f33(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_option */
extern T0* T43f30(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T296f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T297f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T297f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].resize */
extern T0* T616f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].resized_area */
extern T0* T615f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].copy_data */
extern void T615f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].move_data */
extern void T615f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].overlapping_move */
extern void T615f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].non_overlapping_move */
extern void T615f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T615c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T297f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T297f9(T0* C, T6 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T44f12(T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T306c7(T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.same_library_prefix */
extern T1 T295f7(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARY.string_ */
extern T0* T295f6(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T296f2(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T296f3(T0* C);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T98f2(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T296c5(void);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T297c11(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T297f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T617c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T616f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_area */
extern T0* T1154c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T616c3(void);
/* ET_XACE_SYSTEM_PARSER.new_mount */
extern T0* T43f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T295f11(T0* C, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T98f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T295c10(T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T44f28(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.parse_library */
extern void T110f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_library */
extern void T110f247(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG.set_libraries */
extern void T301f12(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG.set_clusters */
extern void T301f11(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_externals */
extern void T110f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_export */
extern T0* T110f136(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_exported_feature */
extern T0* T110f241(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_alias */
extern T0* T110f243(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_feature */
extern T0* T110f240(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_class */
extern T0* T110f139(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_export */
extern T0* T110f135(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_include_dir */
extern T0* T110f134(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_location */
extern T0* T110f133(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_link_library */
extern T0* T110f132(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_external */
extern T0* T110f21(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_options */
extern T0* T110f20(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.fill_options */
extern void T110f248(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_debug */
extern T0* T110f131(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_optimize */
extern T0* T110f130(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_check */
extern T0* T110f128(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_loop */
extern T0* T110f125(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_invariant */
extern T0* T110f123(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_ensure */
extern T0* T110f121(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_enable */
extern T0* T110f119(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_require */
extern T0* T110f118(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_false */
extern T1 T110f117(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.is_true */
extern T1 T110f116(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.option_codes */
extern T0* T110f23(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_equality_tester */
extern T0* T110f141(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_value */
extern T0* T110f22(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_option */
extern T0* T110f19(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_mount */
extern T0* T110f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_CONFIG_PARSER.execution_environment */
extern T0* T110f143(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_mount */
extern T0* T110f17(T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_library_prefix */
extern void T301f10(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_prefix */
extern unsigned char ge1063os4424;
extern T0* ge1063ov4424;
extern T0* T110f16(T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_options */
extern void T301f9(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_cluster */
extern T0* T110f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_CLUSTER.set_libraries */
extern void T293f53(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T293f52(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T294f9(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T293f58(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T293f64(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T294f15(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T293f63(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T294f14(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_options */
extern void T293f51(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T293f50(T0* C, T1 a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T288f104(T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T288f103(T0* C);
/* ET_XACE_CLUSTER.set_recursive */
extern void T293f49(T0* C, T1 a1);
/* ET_XACE_OPTIONS.recursive */
extern T1 T288f102(T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T288f101(T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T293f48(T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T288f100(T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T288f99(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_class */
extern T0* T110f140(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.new_feature */
extern T0* T110f242(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T293f46(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T293f45(T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_relative */
extern unsigned char ge1063os4421;
extern T0* ge1063ov4421;
extern T0* T110f138(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T44f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T581c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_abstract */
extern unsigned char ge1063os4420;
extern T0* ge1063ov4420;
extern T0* T110f137(T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T98f4(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.make */
extern T0* T293c44(T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_overridden_constraint_enabled */
extern void T293f54(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T294f10(T0* C, T1 a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_cluster */
extern T0* T110f13(T0* C);
/* ET_XACE_LIBRARY_CONFIG_PARSER.string_ */
extern T0* T110f12(T0* C);
/* ET_XACE_LIBRARY_CONFIG.set_name */
extern void T301f8(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.uc_name */
extern T0* T110f142(T0* C);
/* ET_XACE_SYSTEM_PARSER.execution_environment */
extern T0* T43f154(T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T595f54(T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].force_new */
extern void T108f53(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_put */
extern void T108f59(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_put */
extern void T108f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_put */
extern void T108f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_put */
extern void T108f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_item */
extern T6 T108f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].hash_position */
extern T6 T108f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_item */
extern T6 T108f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].resize */
extern void T108f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].clashes_resize */
extern void T108f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].special_integer_ */
extern T0* T108f22(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_resize */
extern void T108f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_resize */
extern void T108f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].resize */
extern T0* T393f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].resized_area */
extern T0* T392f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].copy_data */
extern void T392f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].move_data */
extern void T392f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].overlapping_move */
extern void T392f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].non_overlapping_move */
extern void T392f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY_CONFIG].make */
extern T0* T392c4(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].key_storage_item */
extern T0* T108f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].slots_resize */
extern void T108f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_modulus */
extern T6 T108f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_capacity */
extern T6 T108f26(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T98f5(T0* C);
/* ET_XACE_LIBRARY_CONFIG.make */
extern T0* T301c7(void);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found_item */
extern T0* T108f24(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].item_storage_item */
extern T0* T108f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].found */
extern T1 T108f23(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search */
extern void T108f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].search_position */
extern void T108f54(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_prefix */
extern T0* T43f150(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_mount */
extern T0* T43f28(T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T98f1(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T294c6(T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T613f12(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_cluster */
extern T0* T43f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_SYSTEM_PARSER.new_class */
extern T0* T43f151(T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.new_feature */
extern T0* T43f253(T0* C, T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.uc_relative */
extern T0* T43f149(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_abstract */
extern T0* T43f148(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_cluster */
extern T0* T43f25(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_creation */
extern T0* T43f24(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_class */
extern T0* T43f23(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_root */
extern T0* T43f22(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_name */
extern T0* T43f21(T0* C);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_error_handler */
extern T0* T43f16(T0* C);
/* ET_XACE_SYSTEM.set_ast_factory */
extern void T53f174(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.new_eiffel_ast_factory */
extern T0* T43f15(T0* C);
/* ET_XACE_SYSTEM.make */
extern T0* T53c163(void);
/* ET_XACE_SYSTEM.set_default_class_mapping */
extern void T53f190(T0* C);
/* ET_XACE_SYSTEM.set_basic_classes */
extern void T53f189(T0* C);
/* ET_XACE_SYSTEM.set_system_object_class */
extern void T53f221(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_32_class */
extern void T53f220(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_string_8_class */
extern void T53f219(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_64_class */
extern void T53f218(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_real_32_class */
extern void T53f217(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_none_class */
extern void T53f216(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_64_class */
extern void T53f215(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_32_class */
extern void T53f214(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_16_class */
extern void T53f213(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_natural_8_class */
extern void T53f212(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_64_class */
extern void T53f211(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_32_class */
extern void T53f210(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_16_class */
extern void T53f209(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_integer_8_class */
extern void T53f208(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_32_class */
extern void T53f207(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_character_8_class */
extern void T53f206(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_any_class */
extern void T53f205(T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_class */
extern void T53f204(T0* C, T0* a1);
/* ET_XACE_SYSTEM.set_preparse_shallow_mode */
extern void T53f188(T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T53f186(T0* C);
/* ET_XACE_SYSTEM.initialize */
extern void T53f186p1(T0* C);
/* ET_XACE_SYSTEM.class_name_tester */
extern T0* T53f149(T0* C);
/* ET_XACE_SYSTEM.tokens */
extern T0* T53f156(T0* C);
/* XM_ELEMENT.set_name */
extern void T100f30(T0* C, T0* a1);
/* ET_XACE_SYSTEM_PARSER.uc_system */
extern T0* T43f14(T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T107f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.remove_at_cursor */
extern void T100f31(T0* C, T0* a1);
/* XM_ELEMENT.move_all_cursors */
extern void T100f38(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_current_cell */
extern void T299f13(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put */
extern void T1464f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put_right */
extern void T1464f4(T0* C, T0* a1);
/* XM_ELEMENT.set_last_cell */
extern void T100f37(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].forget_right */
extern void T1464f5(T0* C);
/* XM_ELEMENT.remove_last */
extern void T100f36(T0* C);
/* XM_ELEMENT.move_last_cursors_after */
extern void T100f43(T0* C);
/* XM_ELEMENT.wipe_out */
extern void T100f41(T0* C);
/* XM_ELEMENT.move_all_cursors_after */
extern void T100f44(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_last */
extern T1 T299f7(T0* C);
/* XM_DOCUMENT.cursor_is_last */
extern T1 T99f11(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_last */
extern T1 T100f23(T0* C, T0* a1);
/* XM_ELEMENT.remove_first */
extern void T100f35(T0* C);
/* XM_ELEMENT.set_first_cell */
extern void T100f42(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_first */
extern T1 T299f6(T0* C);
/* XM_DOCUMENT.cursor_is_first */
extern T1 T99f12(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_first */
extern T1 T100f24(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T107f3(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T44f29(T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1118c7(T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T107f8(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T107f4(T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T107f9(T0* C);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T107f7(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1063os4443;
extern T0* ge1063ov4443;
extern T0* T107f6(T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1063os4442;
extern T0* ge1063ov4442;
extern T0* T107f5(T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T107f12(T0* C, T0* a1);
/* XM_ATTRIBUTE.set_value */
extern void T298f7(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T106f31(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T106f33(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1063os4416;
extern T0* ge1063ov4416;
extern T0* T106f4(T0* C);
/* ET_XACE_SYSTEM_PARSER.uc_library */
extern T0* T43f152(T0* C);
/* ET_XACE_SYSTEM_PARSER.string_ */
extern T0* T43f20(T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T103f5(T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T111f121(T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T111f203(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T111f209(T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T111f215(T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T111f214(T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T111f224(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T111f223(T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T111f222(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T111f252(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T432f8(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T404f6(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].resize */
extern T0* T430f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].resized_area */
extern T0* T415f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].copy_data */
extern void T415f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_EXTERNAL_ID].move_data */
extern void T415f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].overlapping_move */
extern void T415f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].non_overlapping_move */
extern void T415f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make */
extern T0* T415c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T430f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_EXTERNAL_ID].make_area */
extern T0* T1076c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T430c3(void);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T404f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T111f169(T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T404c4(void);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T111f251(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].force */
extern void T399f40(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_put */
extern void T399f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_put */
extern void T399f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_put */
extern void T399f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_item */
extern T6 T399f31(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_item */
extern T6 T399f28(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].hash_position */
extern T6 T399f25(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].resize */
extern void T399f51(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_resize */
extern void T399f59(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].special_integer_ */
extern T0* T399f32(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_resize */
extern void T399f58(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_resize */
extern void T399f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].resize */
extern T0* T1060f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].resized_area */
extern T0* T1055f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].copy_data */
extern void T1055f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].move_data */
extern void T1055f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].overlapping_move */
extern void T1055f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].non_overlapping_move */
extern void T1055f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1055c4(T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_item */
extern T0* T399f22(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_resize */
extern void T399f56(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_modulus */
extern T6 T399f29(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_capacity */
extern T6 T399f23(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_put */
extern void T399f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].search_position */
extern void T399f42(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].unset_found_item */
extern void T399f45(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].has */
extern T1 T399f33(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T435c208(T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T435f210(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T401c4(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T435f211(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T435f213(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T435f216(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T435f213p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T435f213p0(T0* C);
/* DS_LINKED_STACK [INTEGER_32].make */
extern T0* T1051c5(void);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T435f213p2(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T435f212(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T435f215(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T435f218(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T435f70(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T435f214(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T435f217(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1316os22715;
extern T0* ge1316ov22715;
extern T0* T435f50(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T435f54(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1316os22714;
extern T0* ge1316ov22714;
extern T0* T435f91(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1316os22713;
extern T0* ge1316ov22713;
extern T0* T435f69(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1316os22712;
extern T0* ge1316ov22712;
extern T0* T435f59(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1316os22711;
extern T0* ge1316ov22711;
extern T0* T435f52(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1316os22704;
extern T0* ge1316ov22704;
extern T0* T435f49(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_6 */
extern void T435f230(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T435f231(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T435f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_5 */
extern void T435f229(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_4 */
extern void T435f228(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_3 */
extern void T435f227(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T435f226(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T435f225(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1316os22697;
extern T0* ge1316ov22697;
extern T0* T435f65(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_6 */
extern void T435f224(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_5 */
extern void T435f223(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_4 */
extern void T435f222(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_3 */
extern void T435f221(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T435f220(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T435f219(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T435f58(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T1050c8(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T435f209(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T429f51(T0* C);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T111f168(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T429c207(T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T429f208(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T429f210(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T429f210p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T429f210p0(T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T429f209(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T429f212(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T429f214(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T429f57(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T429f211(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T429f213(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T429f48(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T429f53(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T429f88(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T429f67(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T429f58(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T429f50(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T429f47(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_6 */
extern void T429f226(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T429f227(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T429f54(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_5 */
extern void T429f225(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_4 */
extern void T429f224(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_3 */
extern void T429f223(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T429f222(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T429f221(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T429f64(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_6 */
extern void T429f220(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_5 */
extern void T429f219(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_4 */
extern void T429f218(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_3 */
extern void T429f217(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T429f216(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T429f215(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T429f49(T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T111f250(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T432f7(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T111f249(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T111f167(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T429c206(T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T408f26(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T408f25(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T408f24(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T408f23(T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].resize */
extern T0* T428f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].resized_area */
extern T0* T427f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].copy_data */
extern void T427f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].move_data */
extern void T427f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].overlapping_move */
extern void T427f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].non_overlapping_move */
extern void T427f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T427c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].make */
extern T0* T428f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [STRING_8]].make_area */
extern T0* T1075c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING_8]].default_create */
extern T0* T428c3(void);
/* DS_BILINKED_LIST [STRING_8].force_last */
extern void T409f12(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].put_right */
extern void T1067f5(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].attach_left */
extern void T1067f6(T0* C, T0* a1);
/* DS_BILINKABLE [STRING_8].make */
extern T0* T1067c4(T0* a1);
/* DS_BILINKED_LIST [STRING_8].is_empty */
extern T1 T409f7(T0* C);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T111f162(T0* C);
/* DS_BILINKED_LIST [STRING_8].set_equality_tester */
extern void T409f13(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T111f182(T0* C);
/* DS_BILINKED_LIST [STRING_8].make */
extern T0* T409c11(void);
/* DS_BILINKED_LIST [STRING_8].new_cursor */
extern T0* T409f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].make */
extern T0* T1066c7(T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T408f22(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T408f27(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1227os23186;
extern T0* ge1227ov23186;
extern T0* T408f7(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T408f21(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T408f20(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T408f19(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T408f18(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T408f17(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T408f16(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T408f15(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T111f160(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T408c12(void);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].resize */
extern T0* T426f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].resized_area */
extern T0* T424f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].copy_data */
extern void T424f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].move_data */
extern void T424f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].overlapping_move */
extern void T424f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].non_overlapping_move */
extern void T424f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T424c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T426f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_area */
extern T0* T1074c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T426c3(void);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T408f14(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T408f11(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T408f10(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T408f9(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T408f8(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T408f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resize */
extern T0* T425f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resized_area */
extern T0* T422f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].copy_data */
extern void T422f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].move_data */
extern void T422f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].overlapping_move */
extern void T422f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].non_overlapping_move */
extern void T422f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T422c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T425f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_area */
extern T0* T1073c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T425c3(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T407f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T1065f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T1065f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1065c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].is_empty */
extern T1 T407f5(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T111f153(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T407c8(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T407f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T1064c7(T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T111f248(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T1064f9(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T407f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T407f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T1064f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T407f13(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T1064f10(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T111f258(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T432f9(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T1064f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T1064f8(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T407f10(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T407f7(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T406f11(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T406c10(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T406f21(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T406f19(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T406f16(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T406f22(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T406f12(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T406f20(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1063c7(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T1063f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1318c3(T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T406c9(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T1063f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1319f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1319f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1319c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].is_empty */
extern T1 T1063f5(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T406c8(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T1063f8(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T111f147(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T406c15(T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T111f247(T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T406f14(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T406f13(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T406c7(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T406f18(T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].resize */
extern T0* T420f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].resized_area */
extern T0* T419f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].copy_data */
extern void T419f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].move_data */
extern void T419f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].overlapping_move */
extern void T419f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].non_overlapping_move */
extern void T419f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T419c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T420f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT].make_area */
extern T0* T1072c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T420c3(void);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T406c6(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T406f17(T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T111f246(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T432f6(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T111f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T405f30(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T405f34(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T405f22(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T405f24(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T402f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T402f14(T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING_8].item */
extern T0* T409f8(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T1061f1(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].any_ */
extern T0* T1061f2(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T405f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T405f29(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T405f17(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T405f25(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resize */
extern T0* T418f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resized_area */
extern T0* T417f2(T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].copy_data */
extern void T417f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].move_data */
extern void T417f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].overlapping_move */
extern void T417f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].non_overlapping_move */
extern void T417f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T417c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T418f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_area */
extern T0* T1071c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T418c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T405f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T405f40(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T405f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T405f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T405f37(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T405f48(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T405f28(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T405f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T405f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T405f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T405f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T405f26(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T405f36(T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T111f134(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T405c32(T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T1061c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T405f35(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T405f21(T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T1062c3(T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T405f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T405f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T405f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T405f41(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T111f244(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T111f243(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T402f12(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].forth */
extern void T1066f9(T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_forth */
extern void T409f15(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].add_traversing_cursor */
extern void T409f16(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T1066f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T409f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING_8].set */
extern void T1066f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING_8].item */
extern T0* T1066f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING_8].start */
extern void T1066f8(T0* C);
/* DS_BILINKED_LIST [STRING_8].cursor_start */
extern void T409f14(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING_8].cursor_off */
extern T1 T409f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T402f18(T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T402f17(T0* C);
/* DS_BILINKED_LIST [STRING_8].last */
extern T0* T409f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T402f11(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T402f16(T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T111f242(T0* C);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T111f241(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T401f2(T0* C);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1314os11374;
extern T0* ge1314ov11374;
extern T0* T111f103(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T433c198(void);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T433f205(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T433f198p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T433f207(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T433f207p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T433f206(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T433f217(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T433f218(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T433f184(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T433f216(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T433f221(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T433f192(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T433f195(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T433f191(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T433f190(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T433f189(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T433f188(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T433f187(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_6 */
extern void T433f233(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T433f234(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T433f197(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_5 */
extern void T433f232(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_4 */
extern void T433f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_3 */
extern void T433f230(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T433f229(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T433f228(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T433f186(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_6 */
extern void T433f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_5 */
extern void T433f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_4 */
extern void T433f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_3 */
extern void T433f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T433f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T433f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T433f49(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T398f8(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.has_error */
extern T1 T401f1(T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T111f257(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T401f6(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T401f5(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.is_public */
extern T1 T404f3(T0* C);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T111f240(T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T432f5(T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T111f239(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T432f4(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T432c1(void);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T403f9(T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T403f8(T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T403f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].resize */
extern T0* T413f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].resized_area */
extern T0* T412f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].copy_data */
extern void T412f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_DECLARATION].move_data */
extern void T412f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].overlapping_move */
extern void T412f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].non_overlapping_move */
extern void T412f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].make */
extern T0* T412c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T413f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_DECLARATION].make_area */
extern T0* T1069c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T413c3(void);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T403c7(void);
/* XM_EIFFEL_DECLARATION.process */
extern void T403f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T111f261(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T111f238(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T111f237(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T111f236(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T432f3(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T111f235(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T111f234(T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T432f2(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T111f233(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T111f117(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T111f194(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T111f200(T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f61(T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T401f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T596f30(T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T152f2(T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T111f201(T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T596c29(T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].make */
extern T0* T1147c6(void);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T401f3(T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T429f62(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T435f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T435f66(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item */
extern T0* T399f21(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_item */
extern T0* T399f36(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.force_error */
extern void T111f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T111f230(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T111f256(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T111f255(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T111f96(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T111f189(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T111f188(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T111f184(T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T595c55(T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T595f71(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T594f1(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T594f10(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T594f5(T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T594f2(T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T111f187(T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T111f185(T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T111f94(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T111f183(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T111f115(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1314os11442;
extern T0* ge1314ov11442;
extern T0* T111f193(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1314os11443;
extern T0* ge1314ov11443;
extern T0* T111f192(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T111f199(T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T595c56(void);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].resize */
extern T0* T411f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].resized_area */
extern T0* T410f2(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].copy_data */
extern void T410f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].move_data */
extern void T410f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].overlapping_move */
extern void T410f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].non_overlapping_move */
extern void T410f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make */
extern T0* T410c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T411f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME].make_area */
extern T0* T1068c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T411c3(void);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T111f231(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T402f20(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T402f7(T0* C);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T402f8(T0* C);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T402f6(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T111f111(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T402f21(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T402c21(void);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T402c19(void);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T111f221(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T111f220(T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T111f218(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T111f229(T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T111f217(T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T111f228(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T111f254(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T429f229(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T435f233(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_error */
extern T1 T429f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.has_error */
extern T1 T435f56(T0* C);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T429f228(T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1481c8(T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T594f35(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T594f37(T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T594f29(T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T429f66(T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T429f236(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T435f232(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T435f68(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T435f240(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity */
extern void T111f227(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T111f226(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T111f113(T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T111f216(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T111f225(T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T111f253(T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T111f259(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T111f260(T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].clear_all */
extern void T412f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [STRING_8]].clear_all */
extern void T427f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].clear_all */
extern void T422f6(T0* C);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].clear_all */
extern void T424f6(T0* C);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].clear_all */
extern void T419f6(T0* C);
/* SPECIAL [XM_DTD_EXTERNAL_ID].clear_all */
extern void T415f6(T0* C);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].clear_all */
extern void T417f6(T0* C);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].clear_all */
extern void T410f6(T0* C);
/* XM_EIFFEL_PARSER.abort */
extern void T111f219(T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T111f213(T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T386c1(void);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T111f212(T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T111f208(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].wipe_out */
extern void T399f39(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].slots_wipe_out */
extern void T399f49(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].clashes_wipe_out */
extern void T399f48(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].key_storage_wipe_out */
extern void T399f47(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].item_storage_wipe_out */
extern void T399f46(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].move_all_cursors_after */
extern void T399f44(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_next_cursor */
extern void T1058f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].set_position */
extern void T1058f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T111f206(T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T394c196(void);
/* XM_EIFFEL_SCANNER.reset */
extern void T394f204(T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T394f204p1(T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T394f203(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T394f212(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T394f213(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T394f182(T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T394f211(T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T394f219(T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T394f190(T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T394f193(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T394f189(T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T394f188(T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T394f187(T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T394f186(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T394f185(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_6 */
extern void T394f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T394f232(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T394f195(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_5 */
extern void T394f230(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_4 */
extern void T394f229(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_3 */
extern void T394f228(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T394f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T394f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T394f184(T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_6 */
extern void T394f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_5 */
extern void T394f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_4 */
extern void T394f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_3 */
extern void T394f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T394f221(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T394f220(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T394f42(T0* C);
/* ET_XACE_SYSTEM_PARSER.make_with_variables */
extern T0* T43c255(T0* a1, T0* a2);
/* ET_XACE_SYSTEM_PARSER.make_with_variables_and_factory */
extern void T43f257(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T105f10(T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T101c3(void);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T592c8(void);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T111f205(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T103c10(void);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T103f9(T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T385f4(T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T105c9(void);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T103f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T104c4(void);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T103f6(T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T383c25(void);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T111f204(T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T111c202(void);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T111f87(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].set_key_equality_tester */
extern void T399f41(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].internal_set_equality_tester */
extern void T1056f6(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map_default */
extern T0* T399c38(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_map */
extern void T399f43(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_with_equality_testers */
extern void T399f55(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1056c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T1056f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1316c3(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].new_cursor */
extern T0* T399f35(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING_8].make */
extern T0* T1058c4(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_sparse_container */
extern void T399f60(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_slots */
extern void T399f64(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_clashes */
extern void T399f63(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_key_storage */
extern void T399f62(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].make_item_storage */
extern void T399f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T1060f2(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF].make_area */
extern T0* T1317c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T1060c3(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING_8].default_capacity */
extern T6 T399f26(T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T111f207(T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T111f211(T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1310os11321;
extern T0* ge1310ov11321;
extern T0* T111f104(T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T111f181(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1310os11320;
extern T0* ge1310ov11320;
extern T0* T111f92(T0* C);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1310os11319;
extern T0* ge1310ov11319;
extern T0* T111f90(T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1310os11318;
extern T0* ge1310ov11318;
extern T0* T111f88(T0* C);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1310os11317;
extern T0* ge1310ov11317;
extern T0* T111f86(T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1310os11316;
extern T0* ge1310ov11316;
extern T0* T111f84(T0* C);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1310os11315;
extern T0* ge1310ov11315;
extern T0* T111f171(T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1310os11314;
extern T0* ge1310ov11314;
extern T0* T111f155(T0* C);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1310os11313;
extern T0* ge1310ov11313;
extern T0* T111f136(T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1310os11312;
extern T0* ge1310ov11312;
extern T0* T111f125(T0* C);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T111f210(T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T109f2(T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T109f1(T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T109c3(void);
/* ET_XACE_VALIDATOR.make */
extern T0* T106c30(T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T107c10(T0* a1, T0* a2);
/* ET_XACE_LIBRARY_CONFIG_PARSER.set_parsed_libraries */
extern void T110f245(T0* C, T0* a1);
/* ET_XACE_LIBRARY_CONFIG_PARSER.make_with_variables_and_factory */
extern T0* T110c244(T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].set_key_equality_tester */
extern void T108f39(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY_CONFIG, STRING_8].internal_set_equality_tester */
extern void T389f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_map */
extern T0* T108c37(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_with_equality_testers */
extern void T108f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY_CONFIG, STRING_8].make */
extern T0* T389c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY_CONFIG, STRING_8].new_cursor */
extern T0* T389f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].make */
extern T0* T1048c3(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].new_cursor */
extern T0* T108f32(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY_CONFIG, STRING_8].make */
extern T0* T391c4(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_sparse_container */
extern void T108f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_slots */
extern void T108f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_clashes */
extern void T108f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_key_storage */
extern void T108f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY_CONFIG, STRING_8].make_item_storage */
extern void T108f48(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].make */
extern T0* T393f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_LIBRARY_CONFIG].make_area */
extern T0* T1049c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY_CONFIG].default_create */
extern T0* T393c3(void);
/* ET_XACE_AST_FACTORY.make */
extern T0* T98c9(void);
/* DS_LINKED_LIST_CURSOR [STRING_8].forth */
extern void T121f9(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_forth */
extern void T88f23(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].add_traversing_cursor */
extern void T88f24(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set_next_cursor */
extern void T121f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].remove_traversing_cursor */
extern void T88f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING_8].set */
extern void T121f10(T0* C, T0* a1, T1 a2, T1 a3);
/* UC_UTF8_STRING.index_of */
extern T6 T595f12(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T595f33(T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f27(T0* C, T2 a1, T6 a2);
/* DS_LINKED_LIST_CURSOR [STRING_8].item */
extern T0* T121f6(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].start */
extern void T121f8(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_start */
extern void T88f22(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].cursor_off */
extern T1 T88f14(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].new_cursor */
extern T0* T88f12(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING_8].make */
extern T0* T121c7(T0* a1);
/* ST_SPLITTER.split */
extern T0* T46f6(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T46f8(T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [INTEGER_32].has */
extern T1 T122f24(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].search_position */
extern void T122f32(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].clashes_item */
extern T6 T122f22(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].hash_position */
extern T6 T122f19(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_storage_item */
extern T6 T122f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].item_storage_item */
extern T6 T122f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].key_equality_tester */
extern T0* T122f17(T0* C);
/* DS_HASH_SET [INTEGER_32].slots_item */
extern T6 T122f25(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T46f5(T0* C);
/* ST_SPLITTER.make */
extern T0* T46c9(void);
/* ST_SPLITTER.set_separators */
extern void T46f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER_32].put */
extern void T122f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].slots_put */
extern void T122f40(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].clashes_put */
extern void T122f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].item_storage_put */
extern void T122f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER_32].unset_found_item */
extern void T122f37(T0* C);
/* DS_HASH_SET [INTEGER_32].make */
extern T0* T122c30(T6 a1);
/* DS_HASH_SET [INTEGER_32].new_cursor */
extern T0* T122f20(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER_32].make */
extern T0* T439c3(T0* a1);
/* DS_HASH_SET [INTEGER_32].make_slots */
extern void T122f36(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].special_integer_ */
extern T0* T122f23(T0* C);
/* DS_HASH_SET [INTEGER_32].new_modulus */
extern T6 T122f28(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_clashes */
extern void T122f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_key_storage */
extern void T122f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER_32].make_item_storage */
extern void T122f33(T0* C, T6 a1);
/* GEC.execution_environment */
extern T0* T21f18(T0* C);
/* GEC.string_equality_tester */
extern T0* T21f17(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T44c8(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T44f6(T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T26f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T26f4(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T595f41(T0* C, T0* a1);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T595f34(T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T595f27(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.substring */
extern T0* T595f14(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T595c62(T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f18(T0* C, T6 a1, T6 a2);
/* GEC.string_ */
extern T0* T21f14(T0* C);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T22f11(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T22f19(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f43(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T22f16(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T22f10(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T22f47(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T22f20(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f47p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T22f21(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T22f15(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T284f5(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T284f3(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T22f41(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T22c41(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T22f45(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T22f24(T0* C);
/* GEC.parse_arguments */
extern void T21f34(T0* C);
/* AP_ERROR.make_invalid_parameter_error */
extern T0* T32c20(T0* a1, T0* a2);
/* AP_INTEGER_OPTION.parameter */
extern T6 T37f18(T0* C);
/* DS_LINKED_LIST [INTEGER_32].last */
extern T6 T96f7(T0* C);
/* DS_ARRAYED_LIST [STRING_8].first */
extern T0* T80f10(T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T24f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T41f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T82f21(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T82f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T375f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T82f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T375f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T82f26(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T41f15(T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T97f5(T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T97f12(T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T97f8(T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T97f4(T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T97f10(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge55os4359;
extern T0* ge55ov4359;
extern T0* T41f25(T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T97f11(T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T97c9(void);
/* STRING_8.make_filled */
extern T0* T17c43(T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f45(T0* C, T2 a1);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f11(T0* C, T2 a1, T6 a2, T6 a3);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T71f2(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge309os9731;
extern T0* ge309ov9731;
extern T0* T71f9(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T71f8(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T70f2(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge311os9731;
extern T0* ge311ov9731;
extern T0* T70f12(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T70f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern unsigned char ge321os1718;
extern T0* ge321ov1718;
extern T0* T41f17(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T23c4(void);
/* KL_ARGUMENTS.argument */
extern T0* T23f2(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T41f16(T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T41f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T41f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T41f9(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T31f16(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T31f18(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T31f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T84f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T31f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T84f7(T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T31f6(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T31f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T31f5(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T31f7(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T31f15(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T31f17(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T31f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T82f8(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T82f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item */
extern T0* T82f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T82f9(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T82f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T82f20(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T82f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T82f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T375f4(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_off */
extern T1 T82f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_before */
extern T1 T82f17(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T41f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T81f23(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T81f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T371f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T81f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T371f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T81f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T81f7(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T81f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T81f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T81f9(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T81f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T81f22(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T81f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T81f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T371f4(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_off */
extern T1 T81f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_before */
extern T1 T81f19(T0* C, T0* a1);
/* GEC.report_version_number */
extern void T21f40(T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T24f9(T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T69c7(T0* a1);
/* AP_PARSER.parse_arguments */
extern void T30f28(T0* C);
/* AP_PARSER.parse_list */
extern void T30f30(T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T30f34(T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge323os1716;
extern T0* ge323ov1716;
extern T0* T30f21(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T29c1(void);
/* AP_ERROR_HANDLER.report_error_message */
extern void T83f10(T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T83f10p1(T0* C, T0* a1);
/* AP_PARSER.check_options_after_parsing */
extern void T30f33(T0* C);
/* AP_ERROR.make_surplus_option_error */
extern T0* T32c22(T0* a1);
/* AP_ERROR_HANDLER.report_error */
extern void T83f9(T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T83f6(T0* C, T0* a1);
/* AP_ERROR.make_missing_option_error */
extern T0* T32c21(T0* a1);
/* AP_PARSER.parse_argument */
extern void T30f32(T0* C);
/* AP_PARSER.parse_short */
extern void T30f36(T0* C);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T32c24(T0* a1);
/* DS_ARRAYED_LIST [STRING_8].off */
extern T1 T80f16(T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T32c23(T0* a1);
/* CHARACTER_8.out */
extern T0* T2f1(T2* C);
/* AP_PARSER.parse_long */
extern void T30f35(T0* C);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T32c25(T0* a1, T0* a2);
/* AP_PARSER.string_ */
extern T0* T30f23(T0* C);
/* DS_ARRAYED_LIST [STRING_8].forth */
extern void T80f26(T0* C);
/* DS_ARRAYED_LIST [STRING_8].item_for_iteration */
extern T0* T80f15(T0* C);
/* DS_ARRAYED_LIST [STRING_8].after */
extern T1 T80f8(T0* C);
/* DS_ARRAYED_LIST [STRING_8].start */
extern void T80f25(T0* C);
/* AP_PARSER.reset_parser */
extern void T30f31(T0* C);
/* AP_PARSER.all_options */
extern T0* T30f15(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T81f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T81c20(T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T81f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T371c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T374f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_OPTION].make_area */
extern T0* T1043c2(T6 a1);
/* SPECIAL [AP_OPTION].make */
extern T0* T373c4(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T374c3(void);
/* AP_ERROR_HANDLER.reset */
extern void T83f8(T0* C);
/* DS_ARRAYED_LIST [STRING_8].force */
extern void T80f24(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put */
extern void T80f30(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_cursors_right */
extern void T80f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].move_right */
extern void T80f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING_8].put_last */
extern void T80f35(T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T30f17(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T82f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T82f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern T0* T377f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].resized_area */
extern T0* T376f3(T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].copy_data */
extern void T376f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].move_data */
extern void T376f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].overlapping_move */
extern void T376f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].non_overlapping_move */
extern void T376f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T376c4(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T82f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T82f12(T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T31c11(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T31f14(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T31f10(T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T84c6(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T31f13(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T31f12(T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T33c20(T2 a1, T0* a2);
/* AP_FLAG.set_long_form */
extern void T33f22(T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T33f24(T0* C, T2 a1);
/* AP_FLAG.initialize */
extern void T33f21(T0* C);
/* AP_INTEGER_OPTION.set_parameter_description */
extern void T37f24(T0* C, T0* a1);
/* AP_INTEGER_OPTION.set_description */
extern void T37f23(T0* C, T0* a1);
/* AP_INTEGER_OPTION.make_with_long_form */
extern T0* T37c22(T0* a1);
/* AP_INTEGER_OPTION.set_long_form */
extern void T37f26(T0* C, T0* a1);
/* AP_INTEGER_OPTION.initialize */
extern void T37f25(T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T37f25p1(T0* C);
/* AP_INTEGER_OPTION.initialize */
extern void T37f25p0(T0* C);
/* AP_BOOLEAN_OPTION.set_parameter_description */
extern void T36f27(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.set_description */
extern void T36f26(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.make_with_long_form */
extern T0* T36c25(T0* a1);
/* AP_BOOLEAN_OPTION.set_long_form */
extern void T36f29(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.initialize */
extern void T36f28(T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T36f28p1(T0* C);
/* AP_BOOLEAN_OPTION.initialize */
extern void T36f28p0(T0* C);
/* AP_ENUMERATION_OPTION.set_parameter_description */
extern void T35f27(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.extend */
extern void T35f26(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.update_parameter_description */
extern void T35f31(T0* C);
/* DS_LINKED_LIST [STRING_8].forth */
extern void T88f21(T0* C);
/* DS_LINKED_LIST [STRING_8].is_last */
extern T1 T88f11(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_is_last */
extern T1 T88f8(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].item_for_iteration */
extern T0* T88f9(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_item */
extern T0* T88f7(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].after */
extern T1 T88f13(T0* C);
/* DS_LINKED_LIST [STRING_8].cursor_after */
extern T1 T88f6(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].start */
extern void T88f20(T0* C);
/* AP_ENUMERATION_OPTION.set_description */
extern void T35f25(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.make_with_long_form */
extern T0* T35c24(T0* a1);
/* AP_ENUMERATION_OPTION.set_long_form */
extern void T35f29(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28(T0* C);
/* DS_LINKED_LIST [STRING_8].set_equality_tester */
extern void T88f19(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.string_equality_tester */
extern T0* T35f13(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28p1(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28p0(T0* C);
/* AP_ENUMERATION_OPTION.initialize */
extern void T35f28p2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T81f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T81f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].resize */
extern T0* T374f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].resized_area */
extern T0* T373f3(T0* C, T6 a1);
/* SPECIAL [AP_OPTION].copy_data */
extern void T373f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_OPTION].move_data */
extern void T373f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].overlapping_move */
extern void T373f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].non_overlapping_move */
extern void T373f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T81f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T81f15(T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T33f19(T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T33c18(T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T30f27(T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T30f26(T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T30c25(void);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T41f37(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T41c36(T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T41f40(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T41f39(T0* C, T2 a1);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T41f38(T0* C);
/* AP_PARSER.make_empty */
extern void T30f29(T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T83c7(void);
/* AP_ERROR_HANDLER.std */
extern T0* T83f5(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T82c18(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T82f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T375c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T377f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_area */
extern T0* T1044c2(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T377c3(void);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T24c6(void);
/* UT_ERROR_HANDLER.std */
extern T0* T24f4(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T23f5(T0* C, T0* a1);
/* GEC.arguments */
extern T0* T21f16(T0* C);
/* KL_EXCEPTIONS.die */
extern void T29f2(T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T21f15(T0* C);
/* KL_DIRECTORY.dispose */
extern void T1122f25(T0* C);
/* KL_DIRECTORY.old_close */
extern void T1122f31(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T1122f19(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T1122f34(T0* C, T14 a1);
/* KL_DIRECTORY.is_closed */
extern T1 T1122f11(T0* C);
/* MANAGED_POINTER.dispose */
extern void T467f8(T0* C);
/* KL_TEXT_OUTPUT_FILE.dispose */
extern void T222f21(T0* C);
/* KL_TEXT_INPUT_FILE.dispose */
extern void T22f42(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T22f46(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T22f48(T0* C, T14 a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.propagate_can_be_void */
extern void T590f18(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.propagate_can_be_void */
extern void T235f14(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.propagate_can_be_void */
extern void T231f16(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.propagate_can_be_void */
extern void T194f17(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T590f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T154f10(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T154f21(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type_from_type_set */
extern void T590f17p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T369f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1362f3(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type_from_type_set */
extern void T369f18p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type_from_type_set */
extern void T243f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type_from_type_set */
extern void T242f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type_from_type_set */
extern void T237f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_from_type_set */
extern void T235f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T235f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T590f15(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T228f45(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T228f46(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T174f43(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T174f44(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T228f44(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T228f47(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T174f42(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T174f45(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_from_type_set */
extern void T231f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T231f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T231f17p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.put_type_from_type_set */
extern void T223f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_from_type_set */
extern void T194f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE.put_type_from_type_set */
extern void T161f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TAGGED_ASSERTION.reset */
extern void T1013f7(T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T1013f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T1033f98(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T973f35(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T972f35(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T692f77(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T679f56(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T673f54(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T947f8(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T960f12(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T960f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T960f12p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T204f16(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T960f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T958f12(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T920f14(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T918f7(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T918f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T920f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T916f14(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T914f13(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T912f7(T0* C);
/* ET_COMPOUND.reset */
extern void T265f12(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T911f13(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T911f8(T0* C);
/* ET_VARIANT.reset */
extern void T887f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T884f11(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T908f10(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T929f7(T0* C);
/* ET_WHEN_PART.reset */
extern void T933f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T935f11(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T908f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T906f12(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T923f7(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T925f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T925f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T906f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T905f7(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T904f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T899f16(T0* C);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge744os27220;
extern T0* ge744ov27220;
extern T0* T899f6(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T689f17(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T205f15(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T205f15p1(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T960f11(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T958f11(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T920f13(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T916f13(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T914f12(T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T912f6(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T911f12(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T908f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T906f11(T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T905f6(T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T904f6(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T899f15(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T689f16(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.process */
extern void T205f14(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T865f46(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T865f41(T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T861f82(T0* C);
/* ET_ALIAS_NAME.tokens */
extern T0* T861f5(T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T859f93(T0* C);
/* ET_INFIX_NAME.tokens */
extern T0* T859f5(T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T858f64(T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T857f65(T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T604f64(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T604f16(T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T865f47(T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T861f83(T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T859f94(T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T858f65(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T858f16(T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T857f66(T0* C);
/* ET_PREFIX_NAME.tokens */
extern T0* T857f5(T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T604f65(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T865f48(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T861f84(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T711f48(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T710f49(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T709f49(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T711f47(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T710f48(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T709f48(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T711f49(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T710f50(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T709f50(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T711f44(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T710f45(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T709f45(T0* C);
/* ET_C2_CHARACTER_CONSTANT.set_type */
extern void T718f41(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.set_type */
extern void T717f41(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_type */
extern void T706f42(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T435f234(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T435f241(T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T126f16(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T435f241p1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T435f71(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T433f199(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T433f208(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T433f208p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T433f54(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T429f230(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T429f237(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T429f237p1(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T429f69(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T394f197(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T394f205(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T394f205p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T394f45(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T435f235(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T435f235p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T435f235p0(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T435f245(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T1050f10(T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T26f17(T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T1050f7(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T1050f3(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T1050f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T1050f2(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T1050f5(T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1117f2(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T1050f4(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T1050f9(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T435f201(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T435f181(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T435f180(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T435f162(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T435f207(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T435f121(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1318os22774;
extern T0* ge1318ov22774;
extern T0* T435f121p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T435f249(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T435f105(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T435f248(T0* C);
/* DS_LINKED_STACK [INTEGER_32].remove */
extern void T1051f7(T0* C);
/* DS_LINKED_STACK [INTEGER_32].item */
extern T6 T1051f4(T0* C);
/* DS_LINKED_STACK [INTEGER_32].is_empty */
extern T1 T1051f3(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T435f246(T0* C, T6 a1);
/* DS_LINKED_STACK [INTEGER_32].force */
extern void T1051f6(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T435f247(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T435f244(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T435f99(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T435f243(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T435f98(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T435f97(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T435f242(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T433f200(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T433f200p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T433f214(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T433f179(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T433f159(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T433f158(T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T433f140(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T433f194(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T433f102(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T433f220(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T433f76(T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T433f219(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T433f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T433f213(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T433f67(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T433f212(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T433f66(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T433f65(T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T433f211(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T433f210(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T433f209(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T429f231(T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T429f231p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T429f240(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T429f198(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T429f178(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T429f177(T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T429f159(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T429f205(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T429f118(T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T429f118p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T429f245(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T429f102(T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T429f244(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T429f241(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T429f243(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T429f239(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T429f242(T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T429f96(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T429f238(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T429f95(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T429f94(T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T394f198(T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T394f209(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T394f177(T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T394f157(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T394f156(T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T394f138(T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T394f192(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T394f97(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T394f217(T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T394f71(T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T394f216(T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T394f218(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T394f210(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T394f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T394f208(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T394f214(T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T394f62(T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T394f207(T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T394f61(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T394f60(T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T394f206(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T435f237(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T433f202(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T429f233(T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T394f200(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T435f238(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T596f31(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T596f8(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T433f203(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T429f234(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T394f201(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T435f239(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T433f204(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T429f235(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T394f202(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T435f236(T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1481f10(T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1481f5(T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T433f201(T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T429f232(T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T394f199(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T863f7(T0* C);
/* XM_CHARACTER_DATA.process */
extern void T1339f5(T0* C, T0* a1);
/* XM_NODE_TYPER.process_character_data */
extern void T1465f17(T0* C, T0* a1);
/* XM_NODE_TYPER.reset */
extern void T1465f13(T0* C);
/* XM_PROCESSING_INSTRUCTION.process */
extern void T1338f7(T0* C, T0* a1);
/* XM_NODE_TYPER.process_processing_instruction */
extern void T1465f16(T0* C, T0* a1);
/* XM_COMMENT.process */
extern void T1337f6(T0* C, T0* a1);
/* XM_NODE_TYPER.process_comment */
extern void T1465f15(T0* C, T0* a1);
/* XM_ATTRIBUTE.process */
extern void T298f8(T0* C, T0* a1);
/* XM_NODE_TYPER.process_attribute */
extern void T1465f14(T0* C, T0* a1);
/* XM_ELEMENT.process */
extern void T100f40(T0* C, T0* a1);
/* XM_NODE_TYPER.process_element */
extern void T1465f11(T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1339f4(T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1338f6(T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1337f5(T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T298f6(T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T100f32(T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T1011f10(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T703f14(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T1011f12(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T1033f97(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T703f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T1033f93(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1376f6(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T997f9(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1376f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T1033f89(T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T997f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T1033f96(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1549f6(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1540f21(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.set_index */
extern void T1539f18(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1376f7(T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T1011f11(T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T997f10(T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T703f15(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_type */
extern void T708f39(T0* C, T0* a1);
/* ET_VERBATIM_STRING.set_type */
extern void T707f43(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_type */
extern void T603f38(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1003f40(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1002f42(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T1001f42(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T1000f41(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T999f43(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T998f43(T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T977f33(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T973f34(T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T972f34(T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T692f75(T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T679f55(T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T673f53(T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T470f85(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T853f74(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T852f70(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T848f70(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T847f71(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T845f71(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T370f72(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T366f73(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T270f67(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T269f69(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T268f69(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T179f75(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_assertions_checked */
extern void T853f91(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_checked */
extern void T852f88(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_checked */
extern void T848f86(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_checked */
extern void T847f90(T0* C);
/* ET_DO_FUNCTION.set_assertions_checked */
extern void T845f90(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_checked */
extern void T370f84(T0* C);
/* ET_DO_PROCEDURE.set_assertions_checked */
extern void T366f88(T0* C);
/* ET_ATTRIBUTE.set_assertions_checked */
extern void T270f78(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_checked */
extern void T269f80(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_checked */
extern void T268f80(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_checked */
extern void T179f93(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_assertions_error */
extern void T853f92(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_error */
extern void T852f89(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_error */
extern void T848f87(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_error */
extern void T847f91(T0* C);
/* ET_DO_FUNCTION.set_assertions_error */
extern void T845f91(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_error */
extern void T370f85(T0* C);
/* ET_DO_PROCEDURE.set_assertions_error */
extern void T366f89(T0* C);
/* ET_ATTRIBUTE.set_assertions_error */
extern void T270f79(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_error */
extern void T269f81(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_error */
extern void T268f81(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_error */
extern void T179f94(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T853f104(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T852f101(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T848f100(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T847f103(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T845f103(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T370f98(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T366f101(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T270f91(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T269f95(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T268f94(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T179f106(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T853f105(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T852f102(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T848f101(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T847f104(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T845f104(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T370f99(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T366f102(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T270f92(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T269f96(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T268f95(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T179f107(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T853f102(T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T852f99(T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T848f98(T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T847f101(T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T845f101(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T370f96(T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T366f99(T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T270f89(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T269f93(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T268f92(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T179f104(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T853f103(T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T852f100(T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T848f99(T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T847f102(T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T845f102(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T370f97(T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T366f100(T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T270f90(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T269f94(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T268f93(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T179f105(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T853f100(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T852f97(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T848f96(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T847f99(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T845f99(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T370f94(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T366f97(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T270f87(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T269f91(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T268f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T179f102(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T853f101(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T852f98(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T848f97(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T847f100(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T845f100(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T370f95(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T366f98(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T270f88(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T269f92(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T268f91(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T179f103(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T853f98(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T852f95(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T848f94(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T847f97(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T845f97(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T370f92(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T366f95(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T270f85(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T269f89(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T268f88(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T179f100(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.resolve_inherited_signature */
extern void T853f106(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.resolved_formal_parameters */
extern T0* T245f12(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_right_parenthesis */
extern void T245f17(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_left_parenthesis */
extern void T245f16(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T245c13(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T245f13p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T872f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T1234c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T868c4(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge692os6690;
extern T0* ge692ov6690;
extern T0* T245f11(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T872c3(void);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T245f9(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T245f14(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T1342f9(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.set_declared_type */
extern void T251f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.cloned_argument */
extern T0* T1342f7(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T1342c8(T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.cloned_argument */
extern T0* T251f7(T0* C);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T251c8(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.resolve_inherited_signature */
extern void T852f103(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.resolve_inherited_signature */
extern void T848f102(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.resolve_inherited_signature */
extern void T847f105(T0* C, T0* a1);
/* ET_DO_FUNCTION.resolve_inherited_signature */
extern void T845f105(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.resolve_inherited_signature */
extern void T370f100(T0* C, T0* a1);
/* ET_DO_PROCEDURE.resolve_inherited_signature */
extern void T366f103(T0* C, T0* a1);
/* ET_ATTRIBUTE.resolve_inherited_signature */
extern void T270f93(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.resolve_inherited_signature */
extern void T269f97(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.resolve_inherited_signature */
extern void T268f96(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.resolve_inherited_signature */
extern void T179f108(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T853f87(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T852f84(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T848f82(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T847f86(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T845f86(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T370f80(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T366f84(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T270f75(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T269f77(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T268f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T179f89(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T853f97(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T852f94(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T848f93(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T847f96(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T845f96(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T370f91(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T366f94(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T270f84(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T269f88(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T268f87(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T179f99(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T853f99(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T852f96(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T848f95(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T847f98(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T845f98(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T370f93(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T366f96(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T270f86(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T269f90(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T268f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T179f101(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_checked */
extern void T853f77(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_checked */
extern void T852f73(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_checked */
extern void T848f73(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_checked */
extern void T847f74(T0* C);
/* ET_DO_FUNCTION.set_implementation_checked */
extern void T845f74(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_checked */
extern void T370f70(T0* C);
/* ET_DO_PROCEDURE.set_implementation_checked */
extern void T366f71(T0* C);
/* ET_ATTRIBUTE.set_implementation_checked */
extern void T270f70(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_checked */
extern void T269f72(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_checked */
extern void T268f72(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_checked */
extern void T179f78(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_error */
extern void T853f78(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_error */
extern void T852f74(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_error */
extern void T848f74(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_error */
extern void T847f75(T0* C);
/* ET_DO_FUNCTION.set_implementation_error */
extern void T845f75(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_error */
extern void T370f71(T0* C);
/* ET_DO_PROCEDURE.set_implementation_error */
extern void T366f72(T0* C);
/* ET_ATTRIBUTE.set_implementation_error */
extern void T270f71(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_error */
extern void T269f73(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_error */
extern void T268f73(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_error */
extern void T179f79(T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T853f76(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T852f72(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T848f72(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T847f73(T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T845f73(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T370f69(T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T366f70(T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T270f69(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T269f71(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T268f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T179f77(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T1003f32(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T1002f33(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T1001f33(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T1000f33(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T999f34(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T998f34(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T989f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T982f27(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T980f26(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T979f21(T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T977f30(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T976f18(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T975f20(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T974f18(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T971f19(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T969f18(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T968f18(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T967f18(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T966f18(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T963f20(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T962f21(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T949f28(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T901f20(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T746f22(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T718f39(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T717f39(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T716f36(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T715f36(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T713f37(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T712f37(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T711f46(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T710f47(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T709f47(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T708f37(T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T707f41(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T706f40(T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T695f30(T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T659f33(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T603f36(T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T230f30(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T210f26(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.set_index */
extern void T208f26(T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T203f31(T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T129f98(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1544f15(T0* C);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1540f20(T0* C);
/* ET_CONVERT_EXPRESSION.reset */
extern void T1539f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T1003f39(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T843f17(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T838f17(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T245f15(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T1342f11(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T251f10(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T993f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1002f41(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T840f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T1343f10(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T1343f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T1343f6(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T876f9(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T876f4(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T876f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T1343f4(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T876f6(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T1002f41p1(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1001f41(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T1001f41p1(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T1000f40(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T999f42(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T999f42p1(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T998f42(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T998f42p1(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T989f20(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T982f28(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T980f27(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T979f24(T0* C);
/* ET_CALL_AGENT.reset */
extern void T977f31(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T976f20(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T975f21(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T974f19(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T971f20(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T969f20(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T968f20(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T967f20(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T966f20(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T963f21(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T962f24(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T949f29(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T949f12(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T949f29p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T949f13(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T901f21(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T984f14(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T470f86(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T746f23(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T746f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T718f40(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T717f40(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T716f37(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T715f37(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T713f41(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T712f41(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T711f50(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T710f51(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T709f51(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T708f38(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T707f42(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T706f41(T0* C);
/* ET_VOID.reset */
extern void T695f31(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T659f34(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T603f37(T0* C);
/* ET_RESULT.reset */
extern void T230f32(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T210f30(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T208f31(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T208f31p1(T0* C);
/* ET_CURRENT.reset */
extern void T203f33(T0* C);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1544f14(T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1540f19(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.process */
extern void T1539f16(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T1003f31(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T1002f32(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T1001f32(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T1000f32(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T999f33(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T998f33(T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T989f18(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T982f26(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T980f25(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T979f20(T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T977f29(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T976f17(T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T975f19(T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T974f17(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T971f18(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T969f17(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T968f17(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T967f17(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T966f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T963f19(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T962f20(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T949f27(T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T901f19(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T746f21(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T718f38(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T717f38(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T716f35(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T715f35(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T713f36(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T712f36(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T711f45(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T710f46(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T709f46(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T708f36(T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T707f40(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T706f39(T0* C, T0* a1);
/* ET_VOID.process */
extern void T695f29(T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T659f32(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T603f35(T0* C, T0* a1);
/* ET_RESULT.process */
extern void T230f27(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T210f28(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.process */
extern void T208f27(T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T203f28(T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T129f101(T0* C, T0* a1);
/* ET_LACE_SYSTEM.set_classes_modified */
extern void T56f217(T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_classes_modified */
extern void T53f225(T0* C, T1 a1);
/* ET_SYSTEM.set_classes_modified */
extern void T25f177(T0* C, T1 a1);
/* ET_LACE_SYSTEM.set_classes_added */
extern void T56f225(T0* C, T1 a1);
/* ET_XACE_SYSTEM.set_classes_added */
extern void T53f233(T0* C, T1 a1);
/* ET_SYSTEM.set_classes_added */
extern void T25f178(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.propagate_can_be_void */
extern void T369f17(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.propagate_can_be_void */
extern void T243f76(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.propagate_can_be_void */
extern void T242f76(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.propagate_can_be_void */
extern void T237f75(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.propagate_can_be_void */
extern void T223f75(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.propagate_can_be_void */
extern void T161f72(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.set_never_void */
extern void T590f14(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.set_never_void */
extern void T369f14(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_never_void */
extern void T243f70(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_never_void */
extern void T242f70(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_never_void */
extern void T237f69(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_never_void */
extern void T223f69(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.set_never_void */
extern void T194f14(T0* C);
/* ET_DYNAMIC_TYPE.set_never_void */
extern void T161f67(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T590f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T369f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1362f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].resize */
extern T0* T1499f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].resized_area */
extern T0* T1498f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].copy_data */
extern void T1498f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TARGET].move_data */
extern void T1498f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].overlapping_move */
extern void T1498f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].non_overlapping_move */
extern void T1498f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].make */
extern T0* T1498c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1499f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TARGET].make_area */
extern T0* T1558c2(T6 a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge955os15165;
extern T0* ge955ov15165;
extern T0* T1362f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1499c3(void);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1362f6(T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1362f4(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1362f8(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1362c7(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T194f19(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.append_unaliased_to_string */
extern void T1133f52(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_unaliased_to_string */
extern void T896f56(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_unaliased_to_string */
extern void T894f62(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_unaliased_to_string */
extern void T774f87(T0* C, T0* a1);
/* ET_BIT_N.append_unaliased_to_string */
extern void T773f87(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T761f66(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_unaliased_to_string */
extern void T753f63(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_unaliased_to_string */
extern void T184f80(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T176f25(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T176f9(T0* C);
/* ET_GENERIC_CLASS_TYPE.append_unaliased_to_string */
extern void T177f83(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_unaliased_to_string */
extern void T466f26(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T466f16(T0* C);
/* ET_CLASS_TYPE.append_unaliased_to_string */
extern void T175f81(T0* C, T0* a1);
/* ET_CLASS.append_unaliased_to_string */
extern void T60f155(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T1133f55(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T1133f28(T0* C);
/* ET_LIKE_CURRENT.append_to_string */
extern void T896f57(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T894f63(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T774f89(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T773f88(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T761f67(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T761f11(T0* C);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T753f64(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T753f9(T0* C);
/* ET_TUPLE_TYPE.append_to_string */
extern void T184f81(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T176f28(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T177f84(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T466f28(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T175f82(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T60f201(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T1133f53(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T896f58(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T894f60(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T774f91(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T773f90(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T761f68(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T753f65(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T184f83(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T1133f54(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T896f55(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T894f61(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T894f40(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T774f90(T0* C);
/* ET_BIT_N.reset */
extern void T773f89(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T761f69(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T762f14(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T753f66(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T184f82(T0* C);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T1033f31(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T628f85(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T628f94(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T628f105(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T282f38(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T563f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].resized_area */
extern T0* T562f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].copy_data */
extern void T562f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE].move_data */
extern void T562f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].overlapping_move */
extern void T562f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].non_overlapping_move */
extern void T562f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T282f5(T0* C);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T628f103(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T282f39(T0* C);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T28f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T571c772(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T28f115(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T57f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T57f115(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T28f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T571c771(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T57f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T28f352(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T571c770(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T28f113(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T57f352(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T57f113(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T984f13(T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T204f17(T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T984f9(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T204f5(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T628f151(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T628f150(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_EXPRESSION.make */
extern T0* T1539c15(T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T628f149(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1540c18(T0* a1, T0* a2);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T187f12(T0* C, T0* a1, T0* a2);
/* ET_CLASS.convert_from_feature */
extern T0* T60f141(T0* C, T0* a1, T0* a2);
/* ET_BRACED_TYPE_LIST.has_named_type */
extern T1 T1036f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T725f6(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T725f7(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge794os12888;
extern T0* ge794ov12888;
extern T0* T160f419(T0* C);
/* ET_LIKE_CURRENT.make */
extern T0* T896c53(void);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge794os12950;
extern T0* ge794ov12950;
extern T0* T160f891(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T182c32(void);
/* ET_LIKE_CURRENT.tokens */
extern T0* T896f24(T0* C);
/* ET_CLASS.convert_to_feature */
extern T0* T60f140(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T282f18(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T282f32(T0* C);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T28f351(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T571c769(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T28f114(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T57f351(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T57f114(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T28f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T571c768(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T57f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T28f349(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T571c767(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T57f349(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T245f10(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T628f102(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T28f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T571c766(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T28f112(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T57f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T57f112(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T60f61(T0* C);
/* ET_CLIENTS.client */
extern T0* T644f8(T0* C, T6 a1);
/* ET_CLIENT.client */
extern T0* T346f3(T0* C);
/* ET_CLIENTS.item */
extern T0* T644f9(T0* C, T6 a1);
/* ET_CLIENT_LIST.client */
extern T0* T353f5(T0* C, T6 a1);
/* ET_CLIENT_LIST.item */
extern T0* T353f8(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T28f341(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T571c759(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T28f110(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T57f341(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T57f110(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T129f108(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T28f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T571c756(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T28f108(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T57f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T57f108(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T28f337(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T571c755(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T57f337(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T840f7(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T628f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_expression_supplier */
extern void T628f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T632f8(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T629f43(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T629f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T629f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T629f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T629f21(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T60f71(T0* C);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T629f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T629f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T629f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T629f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T629f33(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T629f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T629f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T629f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T629f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T629f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T629f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T629f32(T0* C);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T28f334(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T571c752(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T28f106(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T57f334(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T57f106(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T28f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T571c751(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T57f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T245f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T628f32(T0* C);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T28f342(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T571c760(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T28f111(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T57f342(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T57f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.current_system */
extern T0* T628f29(T0* C);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T628f31(T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T628f34(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T628f47(T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T129f79(T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T628f84(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T628f93(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T628f104(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T28f340(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T571c758(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T28f109(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T57f340(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T57f109(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T28f339(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T571c757(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T57f339(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T28f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T571c754(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T28f107(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T57f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T57f107(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T28f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T571c753(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T57f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T28f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T571c750(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T28f105(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T57f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T57f105(T0* C, T0* a1);
/* ET_IDENTIFIER.is_instruction */
extern T1 T129f25(T0* C);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T628f92(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T628f101(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.resolved_formal_parameters */
extern T0* T628f33(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.resolved_formal_parameters */
extern T0* T187f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T187f10(T0* C);
/* ET_CLASS.ancestor */
extern T0* T60f67(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T587f3(T0* C, T0* a1);
/* ET_CLASS.is_unknown */
extern T1 T60f66(T0* C);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T187f16(T0* C);
/* ET_TYPE_CHECKER.current_system */
extern T0* T187f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T840f6(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T840f10(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T28f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T571c749(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T28f104(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T57f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T57f104(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T28f330(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T571c748(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T57f330(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T628f91(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T628f100(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T64f486(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T64f503(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T64f523(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T64f306(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T189f14(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_like_argument_dynamic_types */
extern void T64f588(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T64f245(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T64f543(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T64f542(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T64f520(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T64f528(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T64f527(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T64f526(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_qualified_call_target_dynamic_types */
extern void T64f589(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T64f519(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T64f522(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_expression_supplier */
extern void T64f587(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T64f80(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T64f242(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T64f347(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T64f502(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T64f521(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T64f501(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T64f518(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.resolved_formal_parameters */
extern T0* T64f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T64f500(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T64f517(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T61f725(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T61f732(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T228f21(T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T174f26(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T196f12(T0* C);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T228f19(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T174f31(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T61f731(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T61f730(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T129f24(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T61f729(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T129f23(T0* C);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T1033f40(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current */
extern void T628f86(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T628f95(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T628f106(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T64f544(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T64f599(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T64f643(T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T61f726(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T61f733(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_expression */
extern void T1033f38(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T1033f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_expression */
extern void T628f87(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_expression_validity */
extern void T628f96(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T628f107(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T282f41(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T282f13(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T282f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T628f154(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T28f359(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T571c777(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T57f359(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T28f358(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T571c776(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T28f116(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T57f358(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T57f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T628f153(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.formal_parameter */
extern T0* T160f700(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].replace */
extern void T1341f11(T0* C, T0* a1, T6 a2);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T1133c51(T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].item */
extern T0* T1341f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].put_last */
extern void T1341f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].resize */
extern void T1341f9(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].resize */
extern T0* T1496f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].resized_area */
extern T0* T1495f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].copy_data */
extern void T1495f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].move_data */
extern void T1495f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].overlapping_move */
extern void T1495f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].non_overlapping_move */
extern void T1495f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1495c4(T6 a1);
/* ET_TOKEN_CONSTANTS.formal_parameters */
extern unsigned char ge794os12893;
extern T0* ge794ov12893;
extern T0* T160f708(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1341c8(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER_TYPE].new_cursor */
extern T0* T1341f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1497c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].make */
extern T0* T1496f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_TYPE].make_area */
extern T0* T1557c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_TYPE].default_create */
extern T0* T1496c3(void);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T28f357(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T571c775(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T57f357(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T28f356(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T571c774(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T57f356(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T28f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T571c773(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T57f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T278f19(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T278f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T278f25(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T554f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T554f7(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T628f152(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T276f41(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T276f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T276f25(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T548f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T548f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T278f41(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T276f19(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T277f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T277f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern T0* T549f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].resized_area */
extern T0* T550f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].copy_data */
extern void T550f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].move_data */
extern void T550f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].overlapping_move */
extern void T550f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].non_overlapping_move */
extern void T550f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T277f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T277f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T279f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T279f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern T0* T555f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].resized_area */
extern T0* T556f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].copy_data */
extern void T556f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].move_data */
extern void T556f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].overlapping_move */
extern void T556f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].non_overlapping_move */
extern void T556f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T279f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T279f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T276f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T276f38(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T278f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T278f38(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T280f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T276f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T276f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T276f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T276f42(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T276f45(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T280f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T280f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T280f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T558f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T280f20(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T280f23(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T558f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T280f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T280f15(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].clear_items */
extern void T280f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T280f18(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T280f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T280f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T280f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T280f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T276f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T277f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T277f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T551f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_position */
extern void T551f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T277f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T277f6(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T276f16(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T279f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T279f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T557f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_position */
extern void T557f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T279f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T279f6(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T278f17(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T278f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T278f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T278f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T278f42(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T278f45(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T278f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T278f16(T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T60f213(T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T185f13(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T278f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T278f27(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T552f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].resized_area */
extern T0* T553f3(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].copy_data */
extern void T553f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUERY].move_data */
extern void T553f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].overlapping_move */
extern void T553f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].non_overlapping_move */
extern void T553f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T278f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T278f10(T0* C, T6 a1);
/* ET_CLASS.is_dotnet */
extern T1 T60f52(T0* C);
/* ET_CALL_EXPRESSION.is_qualified_call */
extern T1 T208f5(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_expression */
extern void T64f546(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_expression_validity */
extern void T64f601(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T64f645(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T64f540(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T64f683(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T64f524(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_call_expression */
extern void T61f727(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_expression */
extern void T61f734(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T61f737(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_unfrozen */
extern void T61f741(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_expressions_frozen */
extern void T61f740(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T61f736(T0* C, T0* a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T61f739(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T61f738(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T1033f41(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T628f89(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T628f98(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T628f147(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T28f347(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T571c765(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T57f347(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T28f346(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T571c764(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T57f346(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T28f345(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T571c763(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T57f345(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T28f344(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T571c762(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T57f344(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T28f343(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T571c761(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T57f343(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T64f545(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T64f600(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T64f644(T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T61f728(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T61f735(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_class */
extern void T1039f5(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_class */
extern void T1038f4(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_class */
extern void T1037f5(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T1034f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T1032f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T1031f9(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T1030f14(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T1029f9(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T1028f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T1017f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T1016f10(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.process_class */
extern void T361f6(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.internal_process_class */
extern void T361f8(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_providers_validity */
extern void T361f10(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T1164f11(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T629f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T629f63(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1164f8(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T629f62(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1164f7(T0* C, T6 a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].go_after */
extern void T1164f10(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_go_after */
extern void T629f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T629f28(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T1164f4(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T629f26(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T1164f5(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T629f23(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T1164f9(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T629f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T629f27(T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.check_suppliers_validity */
extern void T361f9(T0* C);
/* ET_PARENT_LIST.parent */
extern T0* T351f7(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T351f8(T0* C, T6 a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.current_system */
extern T0* T361f4(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T351f6(T0* C);
/* ET_CLASS.unset_implementation_error */
extern void T60f211(T0* C);
/* ET_IMPLEMENTATION_STATUS_CHECKER.set_fatal_error */
extern void T361f7(T0* C, T0* a1);
/* ET_IMPLEMENTATION_STATUS_CHECKER.error_handler */
extern T0* T361f3(T0* C);
/* ET_CLASS.unset_flattening_error */
extern void T60f209(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.process_class */
extern void T360f7(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.internal_process_class */
extern void T360f9(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_parents_validity */
extern void T360f11(T0* C);
/* ET_CLASS_TYPE_CHECKER3.check_type_validity */
extern void T1039f3(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.check_formal_parameters_validity */
extern void T360f10(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T753f5(T0* C);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T466f5(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T761f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T753f4(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.current_system */
extern T0* T360f5(T0* C);
/* ET_CLASS.unset_interface_error */
extern void T60f210(T0* C);
/* ET_INTERFACE_STATUS_CHECKER.set_fatal_error */
extern void T360f8(T0* C, T0* a1);
/* ET_INTERFACE_STATUS_CHECKER.error_handler */
extern T0* T360f4(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.process_class */
extern void T359f7(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.internal_process_class */
extern void T359f9(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_signatures_validity */
extern void T359f12(T0* C);
/* ET_CLASS_TYPE_CHECKER2.check_type_validity */
extern void T1038f3(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.check_parents_validity */
extern void T359f11(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.check_formal_parameters_validity */
extern void T359f10(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.current_system */
extern T0* T359f5(T0* C);
/* ET_FLATTENING_STATUS_CHECKER.set_fatal_error */
extern void T359f8(T0* C, T0* a1);
/* ET_FLATTENING_STATUS_CHECKER.error_handler */
extern T0* T359f4(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.process_class */
extern void T358f7(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.internal_process_class */
extern void T358f9(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_parents_validity */
extern void T358f11(T0* C);
/* ET_CLASS_TYPE_CHECKER1.check_type_validity */
extern void T1037f3(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.check_formal_parameters_validity */
extern void T358f10(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.current_system */
extern T0* T358f5(T0* C);
/* ET_ANCESTORS_STATUS_CHECKER.set_fatal_error */
extern void T358f8(T0* C, T0* a1);
/* ET_ANCESTORS_STATUS_CHECKER.error_handler */
extern T0* T358f4(T0* C);
/* ET_CLASS.unset_ancestors_error */
extern void T60f208(T0* C);
/* ET_INTERFACE_CHECKER.process_class */
extern void T325f7(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T325f9(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T325f11(T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T1034f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T1034f9(T0* C);
/* ET_PARENT_CHECKER3.current_system */
extern T0* T1034f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1123f22(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1123f26(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1391f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1391f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].last */
extern T0* T1123f9(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1123f8(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T325f10(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T325f12(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T28f206(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T571c625(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T28f33(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T57f206(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T57f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T28f205(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T571c624(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T57f205(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T28f204(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T571c623(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T28f32(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T57f204(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T57f32(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T762f7(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T762f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T753f8(T0* C);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T753f7(T0* C);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T28f200(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T57f200(T0* C, T0* a1, T0* a2);
/* ET_INTERFACE_CHECKER.current_system */
extern T0* T325f5(T0* C);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T325f8(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T325f4(T0* C);
/* ET_CLASS.set_interface_checked */
extern void T60f161(T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T324f25(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T324f27(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T324f30(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T1018f60(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T1018f72(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1018f71(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1018f70(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1018f69(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1018f68(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1284f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1284f5(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T324f38(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T1018f28(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T1018f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T1018f27(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T1018f61(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T1018f62(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T1018f40(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T1018f39(T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T1019f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T1018f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T1018f35(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T324f37(T0* C);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T28f263(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T571c681(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T28f66(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T57f263(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T57f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T28f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T571c680(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T57f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T28f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T571c679(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T28f65(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T57f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T57f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T28f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T571c678(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T57f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T28f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T571c677(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T57f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T814f8(T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T814f11(T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T586f7(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T28f258(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T571c676(T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T814f12(T0* C);
/* ET_CREATOR.first */
extern T0* T814f15(T0* C);
/* ET_CLIENTS.position */
extern T0* T644f11(T0* C);
/* ET_CLIENT.position */
extern T0* T346f4(T0* C);
/* ET_CLIENTS.first */
extern T0* T644f14(T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T644f13(T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T814f14(T0* C);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T28f64(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T57f258(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T57f64(T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T586f6(T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T586f5(T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T324f36(T0* C);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T28f257(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T571c675(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T28f63(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T57f257(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T57f63(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T28f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T571c674(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T28f62(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T57f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T57f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T28f255(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T571c673(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T28f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T57f255(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T57f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T28f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T571c672(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T28f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T57f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T57f60(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T28f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T571c671(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T57f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T28f249(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T571f611(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T571c667(T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T28f57(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T57f249(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T57f57(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T28f248(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T571c666(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T28f56(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T57f248(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T57f56(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T28f247(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T571c665(T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1354f22(T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1351f16(T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1351f13(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T57f247(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T1018f59(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T1018f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1018f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T1018f42(T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T60f207(T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T1021f47(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T1021f58(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T1021f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T1021f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T1021f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T1021f54(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1290f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_position */
extern void T1290f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T1018f58(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T1018f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1018f74(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T324f35(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T1030f8(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1387f9(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1386f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1386f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1387f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1386f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1387f10(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T1030f12(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T28f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T571c743(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T28f102(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T57f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T57f102(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T28f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T571c742(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T57f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T1030f5(T0* C);
/* ET_SIGNATURE_CHECKER.current_system */
extern T0* T1030f6(T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T1030f13(T0* C);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T282f37(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1387f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1387f8(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1386f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1386f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1386f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1387c7(T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1351f15(T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T1030f11(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T28f323(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T571c741(T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T28f103(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T57f323(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T57f103(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T28f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T571c740(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T57f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T28f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T571c739(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T57f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T1030f10(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T28f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T571c738(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T28f75(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T57f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T57f75(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T28f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T571c737(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T57f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T28f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T571c736(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T57f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T1030f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last */
extern void T1021f46(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T1021f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T1021f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T1021f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T1021f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T1021f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T1021f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T1021f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T1021f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T864f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].resized_area */
extern T0* T862f3(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].copy_data */
extern void T862f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ALIAS_NAME].move_data */
extern void T862f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].overlapping_move */
extern void T862f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].non_overlapping_move */
extern void T862f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T1021f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].resize */
extern T0* T1285f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].resized_area */
extern T0* T1287f3(T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].copy_data */
extern void T1287f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FLATTENED_FEATURE].move_data */
extern void T1287f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].overlapping_move */
extern void T1287f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].non_overlapping_move */
extern void T1287f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T1021f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T1021f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T1021f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T1021f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T1021f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T1021f48(T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T1022f1(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T28f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T571c664(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T28f55(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T57f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T57f55(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T28f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T571c663(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T57f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T28f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T571c662(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T28f54(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T57f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T57f54(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T28f243(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T571c661(T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1351f14(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T57f243(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T28f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T571c660(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T57f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T28f241(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T571c659(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T57f241(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T28f240(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T571c658(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T57f240(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T28f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T571c657(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T57f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T28f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T571c656(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T57f238(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T1021f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T1021f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T1021f21(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T1021f45(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T1018f24(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T1018f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T1018f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T1018f65(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T1018f41(T0* C);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T324f34(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T1029f8(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1308f13(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].wipe_out */
extern void T540f19(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER_32]].clear_items */
extern void T540f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].wipe_out */
extern void T1446f37(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_wipe_out */
extern void T1446f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_wipe_out */
extern void T1446f45(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_wipe_out */
extern void T1446f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_wipe_out */
extern void T1446f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1446f41(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1533f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_LIKE_IDENTIFIER].set_position */
extern void T1533f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1385f16(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].clear_items */
extern void T1385f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1385f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1510f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_position */
extern void T1510f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].reset */
extern void T1308f15(T0* C);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T28f317(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T571c735(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].forth */
extern void T1510f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_forth */
extern void T1385f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].add_traversing_cursor */
extern void T1385f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].remove_traversing_cursor */
extern void T1385f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].go_after */
extern void T1510f11(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_go_after */
extern void T1385f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].off */
extern T1 T1510f6(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_off */
extern T1 T1385f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_before */
extern T1 T1385f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_after */
extern T1 T1385f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].item */
extern T0* T1510f5(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_item */
extern T0* T1385f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].item */
extern T0* T1385f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].after */
extern T1 T1510f4(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].start */
extern void T1510f10(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_start */
extern void T1385f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].is_empty */
extern T1 T1385f6(T0* C);
/* ET_ERROR_HANDLER.reportable_vtat_error */
extern T1 T28f101(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T57f317(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtat_error */
extern T1 T57f101(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T1029f4(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.current_system */
extern T0* T1029f5(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T1029f10(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].has_cycle */
extern T1 T1308f7(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].sort */
extern void T1308f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].put_last */
extern void T1385f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T28f237(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T571c655(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T28f53(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T57f237(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T57f53(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T28f236(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T571c654(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T57f236(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T28f235(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T571c653(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T57f235(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T28f234(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T571c652(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T57f234(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T28f233(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T571c651(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T57f233(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T28f232(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T571c650(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T57f232(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T28f231(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T571c649(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T28f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T57f231(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T57f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T28f230(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T571c648(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T28f51(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T57f230(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T57f51(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T324f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T28f252(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T571c670(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T28f59(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T57f252(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T57f59(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T1018f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T1018f25(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T28f251(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T571c669(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T28f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T57f251(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T57f43(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T1028f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.set_procedures */
extern void T60f175(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T186f10(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T186f9(T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1353f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1353f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1478f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge897os20954;
extern T0* ge897ov20954;
extern T0* T324f22(T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1353c2(T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1478c2(void);
/* ET_CLASS.set_queries */
extern void T60f174(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T185f10(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T185f9(T0* C, T0* a1);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1352f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1352f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1475f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge897os20953;
extern T0* ge897ov20953;
extern T0* T324f21(T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1352c2(T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1475c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T1018f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T1018f64(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T276f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T276f27(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T546f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].resized_area */
extern T0* T547f3(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].copy_data */
extern void T547f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PROCEDURE].move_data */
extern void T547f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].overlapping_move */
extern void T547f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].non_overlapping_move */
extern void T547f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T276f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T276f10(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T324f32(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T324f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T28f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T571c688(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T28f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T57f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T57f70(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T28f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T571c687(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T28f69(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T57f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T57f69(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T28f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T571c686(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T57f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T28f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T571c685(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T57f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1354f36(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1354f35(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T324f42(T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1354f34(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1309f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1354f33(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1309f31(T0* C, T6 a1);
/* ET_FEATURE_IDS.item */
extern T6 T1356f6(T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1356f10(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1356f8(T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1356f4(T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1356f3(T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1356f12(T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].cloned_array */
extern T0* T1124f1(T0* C, T0* a1);
/* ARRAY [INTEGER_32].twin */
extern T0* T362f9(T0* C);
/* ARRAY [INTEGER_32].copy */
extern void T362f17(T0* C, T0* a1);
/* ARRAY [INTEGER_32].set_area */
extern void T362f19(T0* C, T0* a1);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1356f5(T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1354f21(T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1309f20(T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T1356c9(T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1356f13(T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER_32].resize */
extern void T1124f4(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER_32].conservative_resize */
extern void T362f16(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.remove */
extern void T1356f11(T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1356f7(T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1351f20(T0* C);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T863c6(T0* a1, T0* a2);
/* ET_FEATURE_LIST.put_first */
extern void T1349f6(T0* C, T0* a1);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T1349c5(T6 a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge688os6690;
extern T0* ge688ov6690;
extern T0* T1349f4(T0* C);
/* ET_FEATURE_LIST.item */
extern T0* T1349f3(T0* C, T6 a1);
/* ET_CLIENTS.same_clients */
extern T1 T644f15(T0* C, T0* a1);
/* ET_CLIENT_LIST.same_clients */
extern T1 T353f9(T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1351f19(T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1351f12(T0* C);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T28f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T571c684(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T28f68(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T57f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T57f68(T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1351f18(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T324f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T28f281(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T571c699(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T28f73(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T57f281(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T57f73(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1351f11(T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T324f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T28f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T571c709(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T28f80(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T57f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T57f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T28f290(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T571c708(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T57f290(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T324f47(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T28f289(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T571c707(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T28f79(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T57f289(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T57f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T28f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T571c706(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T57f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T28f287(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_se_reported */
extern void T571f633(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ve_reported */
extern void T571f614(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T571c705(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T28f78(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T57f287(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T57f78(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T324f46(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T28f286(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T571c704(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T28f77(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T57f286(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T57f77(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T28f285(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T571c703(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T57f285(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T28f284(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T571c702(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T57f284(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T28f283(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T571c701(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T57f283(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T28f282(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T571c700(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T28f76(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T57f282(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T57f76(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1354f20(T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T324f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].wipe_out */
extern void T1024f16(T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].clear_items */
extern void T1024f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_all_cursors_after */
extern void T1024f21(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_next_cursor */
extern void T1293f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLIENT_LIST].set_position */
extern void T1293f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].wipe_out */
extern void T1025f59(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_wipe_out */
extern void T1025f75(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_wipe_out */
extern void T1025f74(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_wipe_out */
extern void T1025f73(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_wipe_out */
extern void T1025f72(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].move_all_cursors_after */
extern void T1025f71(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_next_cursor */
extern void T1297f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLIENT, ET_CLASS].set_position */
extern void T1297f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].back */
extern void T1025f58(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_back */
extern void T1025f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].add_traversing_cursor */
extern void T1025f81(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].remove_traversing_cursor */
extern void T1025f80(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_item */
extern T6 T1025f38(T0* C, T6 a1);
/* ET_CLIENTS.put_first */
extern void T644f19(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_for_iteration */
extern T0* T1025f26(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_item */
extern T0* T1025f30(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_item */
extern T0* T1025f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].before */
extern T1 T1025f25(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_before */
extern T1 T1025f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].finish */
extern void T1025f57(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_finish */
extern void T1025f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_off */
extern T1 T1025f43(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].is_empty */
extern T1 T1025f42(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].forth */
extern void T1025f56(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_forth */
extern void T1025f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].go_after */
extern void T1025f55(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_go_after */
extern void T1025f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_for_iteration */
extern T0* T1025f24(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_key */
extern T0* T1025f28(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_item */
extern T0* T1025f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].after */
extern T1 T1025f23(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_after */
extern T1 T1025f27(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].start */
extern void T1025f54(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].cursor_start */
extern void T1025f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].is_empty */
extern T1 T1024f9(T0* C);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].force */
extern void T1025f53(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_put */
extern void T1025f65(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_put */
extern void T1025f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_put */
extern void T1025f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_item */
extern T6 T1025f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].hash_position */
extern T6 T1025f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].resize */
extern void T1025f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].clashes_resize */
extern void T1025f79(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].key_storage_resize */
extern void T1025f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_resize */
extern void T1025f77(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT].resize */
extern T0* T1298f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT].resized_area */
extern T0* T1299f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENT].copy_data */
extern void T1299f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENT].move_data */
extern void T1299f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].overlapping_move */
extern void T1299f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT].non_overlapping_move */
extern void T1299f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].slots_resize */
extern void T1025f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].new_capacity */
extern T6 T1025f34(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].item_storage_put */
extern void T1025f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLIENT, ET_CLASS].search_position */
extern void T1025f60(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove */
extern void T1024f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_left */
extern void T1024f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_cursors_left */
extern void T1024f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].remove_last */
extern void T1024f18(T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].move_last_cursors_after */
extern void T1024f23(T0* C);
/* ET_CLIENTS.is_none */
extern T1 T644f12(T0* C);
/* ET_CLIENT_LIST.is_none */
extern T1 T353f7(T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].item */
extern T0* T1024f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].first */
extern T0* T1024f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].force_last */
extern void T1024f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].resize */
extern void T1024f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_LIST].resize */
extern T0* T1291f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_LIST].resized_area */
extern T0* T1292f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_LIST].copy_data */
extern void T1292f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENT_LIST].move_data */
extern void T1292f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].overlapping_move */
extern void T1292f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_LIST].non_overlapping_move */
extern void T1292f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].new_capacity */
extern T6 T1024f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLIENT_LIST].extendible */
extern T1 T1024f10(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T804f9(T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T802f6(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T804f8(T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T802f5(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T804f7(T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T349f6(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T324f40(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T324f44(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T1033f10(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T28f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T571c683(T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T843f10(T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T843f12(T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T843f11(T0* C);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T28f67(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T57f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T57f67(T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T843f9(T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T28f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T571c682(T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T838f10(T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T838f12(T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T838f11(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T57f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T838f9(T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T324f43(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T28f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T571c698(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T57f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T28f279(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T571c697(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T28f74(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T57f279(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T57f74(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T28f278(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T571c696(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T57f278(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T28f277(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T571f613(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T571c695(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T57f277(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T28f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T571c694(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T57f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T28f275(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T571c693(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T57f275(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T28f274(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T571c692(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T28f72(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T57f274(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T57f72(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T28f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T571c691(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T28f71(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T57f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T57f71(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T28f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T571c690(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T57f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T28f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T571c689(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T57f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1309f19(T0* C);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T28f250(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T571c668(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T28f58(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T57f250(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T57f58(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1354f19(T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1351f17(T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1309f18(T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1354f18(T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1309f17(T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T324f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1018f23(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T1018f30(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T1018f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T1018f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T1018f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T1018f63(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T324f31(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1026f23(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T1026f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].wipe_out */
extern void T1303f48(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_wipe_out */
extern void T1303f60(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_wipe_out */
extern void T1303f59(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_wipe_out */
extern void T1303f58(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_wipe_out */
extern void T1303f57(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].move_all_cursors_after */
extern void T1303f55(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_next_cursor */
extern void T1430f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER_32].set_position */
extern void T1430f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].forth */
extern void T1303f47(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_forth */
extern void T1303f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].add_traversing_cursor */
extern void T1303f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].remove_traversing_cursor */
extern void T1303f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_item */
extern T6 T1303f24(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T1026f34(T0* C, T0* a1, T6 a2);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T28f316(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T571c734(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1505f4(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_after */
extern T1 T1382f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1505f9(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1382f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1505f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1382f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1505f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1382f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1505f6(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1382f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].item */
extern T0* T1382f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1505f8(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1382f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1382f12(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1505f5(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1382f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_before */
extern T1 T1382f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1382f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1505c7(T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1382f7(T0* C);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T28f100(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T57f316(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T57f100(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1354f39(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1386f9(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1581f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1581c3(T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1386f5(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1386c8(void);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1309f35(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1351f21(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1354f38(T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1309f34(T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1354f37(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1309f33(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T28f315(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T571c733(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T57f315(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1026f18(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1026f27(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1381f16(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1381f18(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1381f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1501f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1381f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1501f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1382f16(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1354f28(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1309f26(T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1381f8(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1381f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1381f7(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1381f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1381f15(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1381f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1381f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1382c15(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1503f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_FEATURE].make_area */
extern T0* T1559c2(T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make */
extern T0* T1504c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1503c2(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_for_iteration */
extern T6 T1303f36(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_key */
extern T6 T1303f21(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_item */
extern T6 T1303f35(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_for_iteration */
extern T0* T1303f27(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_item */
extern T0* T1303f44(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_item */
extern T0* T1303f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].after */
extern T1 T1303f42(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_after */
extern T1 T1303f43(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].start */
extern void T1303f46(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_start */
extern void T1303f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].cursor_off */
extern T1 T1303f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].is_empty */
extern T1 T1303f30(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T1026f33(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].force_new */
extern void T1303f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_put */
extern void T1303f66(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_put */
extern void T1303f62(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_put */
extern void T1303f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_put */
extern void T1303f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_item */
extern T6 T1303f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].hash_position */
extern T6 T1303f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].resize */
extern void T1303f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].clashes_resize */
extern void T1303f73(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].key_storage_resize */
extern void T1303f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].item_storage_resize */
extern void T1303f71(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].resize */
extern T0* T1435f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].resized_area */
extern T0* T1431f3(T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].copy_data */
extern void T1431f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REPLICABLE_FEATURE].move_data */
extern void T1431f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].overlapping_move */
extern void T1431f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].non_overlapping_move */
extern void T1431f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].slots_resize */
extern void T1303f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].new_capacity */
extern T6 T1303f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].replace_found_item */
extern void T1303f50(T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1380c6(T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1381c13(void);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1381f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1501c6(T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1380f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1381f14(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1502f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1502c3(T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].is_empty */
extern T1 T1381f5(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found_item */
extern T0* T1303f38(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].found */
extern T1 T1303f37(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search */
extern void T1303f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER_32].search_position */
extern void T1303f61(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1026f25(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T28f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T571c726(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T28f93(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T57f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T57f93(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T28f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T571c725(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T28f92(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T57f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T57f92(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1302f51(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1302f64(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1302f63(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1302f62(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1302f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1302f59(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1427f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1427f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1302f50(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1302f58(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1302f74(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1302f73(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1302f27(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T28f306(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T571c724(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T28f91(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T57f306(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T57f91(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1302f44(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1302f34(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1302f23(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1302f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1302f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1302f24(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1302f39(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1302f32(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1302f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1302f57(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1302f36(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1302f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1301f45(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1301f61(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1301f60(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1301f59(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1301f58(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1301f57(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1426f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1426f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1301f44(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1301f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1301f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1301f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1301f23(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T28f305(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T571c723(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T28f90(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T57f305(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T57f90(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1301f30(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1301f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1301f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1301f20(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1301f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1301f43(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1301f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1301f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1300f48(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1300f61(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1300f60(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1300f59(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1300f58(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1300f57(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1420f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1420f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1300f47(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1300f56(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1300f74(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1300f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1300f23(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T28f304(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T571c722(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T28f89(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T57f304(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T57f89(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1300f31(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1300f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1300f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1300f30(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1300f22(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1300f46(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1300f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1300f32(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last */
extern void T1018f76(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T1018f87(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T1018f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T1018f81(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T1018f86(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T1018f88(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T1018f85(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1026f21(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1354f31(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1354c29(T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1354f30(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1354f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1354f23(T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1351f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1309f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1309f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T1018f77(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1026f20(T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1309f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1309f28(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1351f26(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1351f25(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1302f48(T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1302f56(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1302f26(T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1351f24(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1302f22(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1302f21(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1302f47(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1302f55(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1302f29(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1302f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1301f42(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1301f54(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1301f71(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1301f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1301f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1301f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1301f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors */
extern void T1301f75(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_after */
extern void T1301f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1301f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1301f69(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1301f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1301f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1301f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1301f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1301f18(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1301f41(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1351f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1300f45(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1300f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1300f69(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1300f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1300f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1300f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1300f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors */
extern void T1300f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_after */
extern void T1300f79(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1300f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1300f71(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1300f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1300f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1300f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1300f41(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1300f36(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1300f44(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1026f19(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1351f28(T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1351f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T1018f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T1018f84(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T1018f83(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T856f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].resized_area */
extern T0* T794f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].copy_data */
extern void T794f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME].move_data */
extern void T794f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].overlapping_move */
extern void T794f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].non_overlapping_move */
extern void T794f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T1018f82(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T1018f79(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T1026f32(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T28f314(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T571c732(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T28f99(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T57f314(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T57f99(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1302f53(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1302f71(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1302f66(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1302f67(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T350f6(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T350f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1302f52(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1302f70(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1302f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1302f68(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1302f65(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T1026f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T28f313(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T571c731(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T28f98(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T57f313(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T57f98(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T1026f30(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T28f312(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T571c730(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T28f97(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T57f312(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T57f97(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1301f34(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T1026f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T28f311(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T571c729(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T28f96(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T57f311(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T57f96(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1301f38(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1301f47(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T804f5(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T804f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1301f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1301f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1301f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1301f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1301f62(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T28f310(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T571c728(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T28f95(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T57f310(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T57f95(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1300f35(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T1026f28(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T28f309(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T571c727(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T28f94(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T57f309(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T57f94(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put */
extern void T1300f50(T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T348f6(T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T348f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1300f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1300f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1300f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1300f65(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].resize */
extern T0* T1425f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].resized_area */
extern T0* T1421f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME].copy_data */
extern void T1421f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME].move_data */
extern void T1421f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].overlapping_move */
extern void T1421f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].non_overlapping_move */
extern void T1421f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1300f62(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1026f17(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1026f24(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T28f303(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T571c721(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T57f303(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T1027f18(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1307f38(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1307f47(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1307f46(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1307f45(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1307f44(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1307f42(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1443f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_position */
extern void T1443f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1305f35(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1305f48(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1305f47(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1305f46(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1305f45(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1305f44(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1437f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_position */
extern void T1437f5(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T1027f21(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T1027f15(T0* C, T0* a1);
/* ET_RENAME.make */
extern T0* T796c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge794os12920;
extern T0* ge794ov12920;
extern T0* T160f727(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T182c41(void);
/* ET_RENAME.tokens */
extern T0* T796f4(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T1027f14(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T1027f20(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T1027f13(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T1027f23(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1384f15(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1384f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1384f18(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1506f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1384f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1506f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1384f8(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1384f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1384f7(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1384f9(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1384f14(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1384f16(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1384f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1307f24(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1307f21(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1307f32(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1307f39(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1307f48(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1307f27(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1307f23(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1304f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1307f26(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1307f25(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T1027f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T1027f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1305f24(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1305f23(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1305f25(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1305f37(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1305f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1305f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1305f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1305f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1305f30(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1305f21(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.current_system */
extern T0* T1027f12(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T1027f19(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T1027f22(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1305f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1305f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1305f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1305f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1305f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last */
extern void T1307f40(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1307f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1307f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1307f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1307f50(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1307f58(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1307f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].resize */
extern T0* T1438f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].resized_area */
extern T0* T1436f3(T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].copy_data */
extern void T1436f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DOTNET_FEATURE].move_data */
extern void T1436f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].overlapping_move */
extern void T1436f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].non_overlapping_move */
extern void T1436f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1307f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resize */
extern T0* T1444f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resized_area */
extern T0* T1439f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].copy_data */
extern void T1439f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].move_data */
extern void T1439f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].overlapping_move */
extern void T1439f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].non_overlapping_move */
extern void T1439f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1307f55(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1307f22(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1307f49(T0* C, T0* a1, T6 a2);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1384c12(void);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1384f6(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1506c6(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1384f13(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1507f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1507c3(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].is_empty */
extern T1 T1384f5(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last */
extern void T1018f78(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T1018f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1305f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1305f54(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1305f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1305f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1305f49(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T324f29(T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T1031f7(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T324f28(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T1032f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T1032f8(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.current_system */
extern T0* T324f20(T0* C);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T324f26(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T324f19(T0* C);
/* ET_CLASS.set_features_flattened */
extern void T60f206(T0* C);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T323f11(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T323f13(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T28f209(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T571c626(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1391f4(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_after */
extern T1 T1123f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1391f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1123f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1123f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1123f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1391f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1123f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1391f10(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1123f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1391f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_off */
extern T1 T1123f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_before */
extern T1 T1123f17(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T28f34(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T57f209(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T57f34(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1123f7(T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T323f18(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T1014f14(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].wipe_out */
extern void T1275f38(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_wipe_out */
extern void T1275f49(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_wipe_out */
extern void T1275f48(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_wipe_out */
extern void T1275f47(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_wipe_out */
extern void T1275f46(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].move_all_cursors_after */
extern void T1275f44(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_next_cursor */
extern void T1410f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_CLASS].set_position */
extern void T1410f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1123f20(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].clear_items */
extern void T1123f25(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1123f24(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T1014f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has_cycle */
extern T1 T1014f7(T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T323f17(T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T1016f8(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T323f16(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T1017f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T1017f14(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T28f219(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T571c637(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1413f5(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_after */
extern T1 T1280f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1413f11(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1280f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1413f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1280f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1413f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1280f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1413f4(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1280f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1413f10(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1280f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1280f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1413f6(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_off */
extern T1 T1280f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_before */
extern T1 T1280f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1280f10(T0* C);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T28f42(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T57f219(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T57f42(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1279f13(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].wipe_out */
extern void T1412f37(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1412f44(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1412f43(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1412f42(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1412f41(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1412f39(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1518f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER_32, ET_FORMAL_PARAMETER].set_position */
extern void T1518f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1280f17(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].clear_items */
extern void T1280f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1280f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1279f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T761f63(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T753f61(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1280f6(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER1.current_system */
extern T0* T1017f9(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T28f218(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T571c636(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T57f218(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].has_cycle */
extern T1 T1279f8(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1279f12(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1280f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1279f7(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T1017f13(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T28f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T571c635(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T28f41(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T57f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T57f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T28f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T571c634(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T28f40(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T57f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T57f40(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T1017f7(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T1017f12(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.universe */
extern T0* T1017f6(T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T323f15(T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T60f183(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].wipe_out */
extern void T1015f42(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_wipe_out */
extern void T1015f51(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_wipe_out */
extern void T1015f50(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_wipe_out */
extern void T1015f49(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_wipe_out */
extern void T1015f48(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].move_all_cursors_after */
extern void T1015f46(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_next_cursor */
extern void T1136f10(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].set_position */
extern void T1136f9(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].forth */
extern void T1136f8(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_forth */
extern void T1015f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].add_traversing_cursor */
extern void T1015f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].remove_traversing_cursor */
extern void T1015f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_item */
extern T6 T1015f26(T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T587f8(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].item */
extern T0* T1136f4(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_item */
extern T0* T1015f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_item */
extern T0* T1015f23(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].after */
extern T1 T1136f5(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_after */
extern T1 T1015f37(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, ET_CLASS].start */
extern void T1136f7(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_start */
extern void T1015f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].cursor_off */
extern T1 T1015f40(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].is_empty */
extern T1 T1015f39(T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T323f20(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T587f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].force_new */
extern void T1015f44(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_put */
extern void T1015f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_put */
extern void T1015f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_put */
extern void T1015f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_put */
extern void T1015f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_item */
extern T6 T1015f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].hash_position */
extern T6 T1015f27(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].resize */
extern void T1015f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].clashes_resize */
extern void T1015f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_resize */
extern void T1015f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].item_storage_resize */
extern void T1015f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].resize */
extern T0* T1145f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].resized_area */
extern T0* T1144f3(T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].copy_data */
extern void T1144f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BASE_TYPE].move_data */
extern void T1144f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].overlapping_move */
extern void T1144f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].non_overlapping_move */
extern void T1144f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].key_storage_item */
extern T0* T1015f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].slots_resize */
extern void T1015f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].new_capacity */
extern T6 T1015f24(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T28f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T571c632(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T28f39(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T57f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T57f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found_item */
extern T0* T1015f34(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].found */
extern T1 T1015f33(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search */
extern void T1015f43(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, ET_CLASS].search_position */
extern void T1015f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T28f214(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T571c631(T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T28f38(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T57f214(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T57f38(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T28f213(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T571c630(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T28f37(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T57f213(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T57f37(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T28f212(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T571c629(T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T28f36(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T57f212(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T57f36(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T28f211(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T571c628(T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T28f35(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T57f211(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T57f35(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T28f210(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T571c627(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T57f210(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1123f6(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T1014f13(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1123f19(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T323f14(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T323f19(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T1014f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T1014f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T1014f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T1014f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found_item */
extern T6 T1275f33(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_item */
extern T6 T1275f25(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].found */
extern T1 T1275f23(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search */
extern void T1275f41(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].search_position */
extern void T1275f42(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_item */
extern T6 T1275f26(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].hash_position */
extern T6 T1275f30(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_item */
extern T0* T1275f29(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_item */
extern T6 T1275f32(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T1014f15(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T1014f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].put */
extern void T1275f40(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_put */
extern void T1275f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_put */
extern void T1275f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_put */
extern void T1275f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_put */
extern void T1275f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].resize */
extern void T1275f39(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].clashes_resize */
extern void T1275f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].key_storage_resize */
extern void T1275f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].item_storage_resize */
extern void T1275f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].slots_resize */
extern void T1275f50(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1123f21(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T1014f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T1014f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_CLASS].has */
extern T1 T1275f21(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.current_system */
extern T0* T323f9(T0* C);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T323f12(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T323f8(T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T60f181(T0* C);
/* ET_EIFFEL_PARSER.process_class */
extern void T321f897(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T1332f4(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T57f401(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T57f402(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1569c13(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T57f137(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T28f401(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T28f402(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T28f137(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T1332f2(T0* C);
/* ET_CLASS.set_syntax_error */
extern void T60f160(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T57f170(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T57f207(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T1333c16(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T57f23(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T28f170(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T28f207(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T28f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.current_system */
extern T0* T321f582(T0* C);
/* ET_EIFFEL_PARSER.syntax_error */
extern T1 T321f578(T0* C);
/* ET_CLASS.set_filename */
extern void T60f159(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T321f901(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T321f906(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T321f918(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T321f917(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T321f916(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T321f936(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_750 */
extern void T321f1702(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T321f1711(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].force */
extern void T634f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].resize */
extern void T634f15(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].new_capacity */
extern T6 T634f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER_32].extendible */
extern T1 T634f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_749 */
extern void T321f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T321f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T321f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T321f1698(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T713f39(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T712f39(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T286f249(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.ast_factory */
extern T0* T321f630(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T321f1697(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T713f38(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T712f38(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T321f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T321f1695(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T321f1694(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T321f1693(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T321f1692(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T321f1691(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T321f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T321f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T321f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T321f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T321f1686(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T321f1685(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T321f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T321f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T321f1682(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T670f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].resized_area */
extern T0* T669f2(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].copy_data */
extern void T669f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHARACTER_CONSTANT].move_data */
extern void T669f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].overlapping_move */
extern void T669f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].non_overlapping_move */
extern void T669f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T669c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T670f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T1179c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T670c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T321f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T321f1680(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T683f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].resized_area */
extern T0* T682f2(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].copy_data */
extern void T682f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING].move_data */
extern void T682f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].overlapping_move */
extern void T682f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].non_overlapping_move */
extern void T682f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T682c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T683f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T1184c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T683c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T321f1679(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T321f1678(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T321f1677(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T321f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T321f1675(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T321f1674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T321f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T321f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T321f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T321f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T321f1669(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T321f1668(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T321f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T321f1666(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T321f1665(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T321f1664(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T321f1663(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T321f1662(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T321f1661(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T321f1660(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T321f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T321f1658(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T321f1657(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T1010f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].resized_area */
extern T0* T1006f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].copy_data */
extern void T1006f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].move_data */
extern void T1006f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].overlapping_move */
extern void T1006f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].non_overlapping_move */
extern void T1006f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T1006c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T1010f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T1274c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T1010c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T286f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T1011c9(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge794os12908;
extern T0* ge794ov12908;
extern T0* T160f900(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T703c11(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T703f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T703f7(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T1011f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T321f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T321f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T321f1654(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T1009f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].resized_area */
extern T0* T1008f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].copy_data */
extern void T1008f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].move_data */
extern void T1008f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].overlapping_move */
extern void T1008f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].non_overlapping_move */
extern void T1008f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1008c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T1009f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T1273c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T1009c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T321f1712(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].replace */
extern void T634f12(T0* C, T6 a1);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T286f304(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T321f1653(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T993f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T321f1652(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T1005f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].resized_area */
extern T0* T994f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].copy_data */
extern void T994f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].move_data */
extern void T994f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].overlapping_move */
extern void T994f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].non_overlapping_move */
extern void T994f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T994c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T1005f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T1272c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T1005c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T286f303(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T993c11(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T993f11p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge509os6690;
extern T0* ge509ov6690;
extern T0* T993f6(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T993f5(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T321f834(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T321f574(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T638f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T321f1651(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T321f1650(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T321f1715(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T638f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T638f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T656f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].resized_area */
extern T0* T655f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].copy_data */
extern void T655f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL].move_data */
extern void T655f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].overlapping_move */
extern void T655f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].non_overlapping_move */
extern void T655f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T638f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T638f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T321f1649(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T321f1709(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T321f1714(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T638f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T321f1648(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T321f1647(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T321f1646(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T1004f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].resized_area */
extern T0* T996f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].copy_data */
extern void T996f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_TARGET].move_data */
extern void T996f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].overlapping_move */
extern void T996f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].non_overlapping_move */
extern void T996f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T996c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T1004f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T1271c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T1004c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T286f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T997c8(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T997f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T321f1645(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T321f1644(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T321f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T321f1642(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T321f841(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_local_variables */
extern T0* T321f868(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T636f6(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T636f5(T0* C);
/* ET_EIFFEL_PARSER.last_formal_arguments */
extern T0* T321f867(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T635f6(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T635f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T321f1641(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T542f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].resized_area */
extern T0* T544f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].copy_data */
extern void T544f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_AGENT].move_data */
extern void T544f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].overlapping_move */
extern void T544f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].non_overlapping_move */
extern void T544f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T635f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T321f1640(T0* C);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T286f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1003f36(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T1003f35(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1003f34(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1003f33(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T1003c30(T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T1003f37(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1003f12(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1003f38(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1376c5(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge794os12916;
extern T0* ge794ov12916;
extern T0* T160f897(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T649c13(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T649f15(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T649f16(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T649f7(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T286f165(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T321f1639(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T321f1638(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T636f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T321f1637(T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T286f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1002f39(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1002f38(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1002f37(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1002f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1002f35(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1002f34(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T1002c31(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1002f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1002f40(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T321f1636(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T321f1635(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T321f1634(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T321f1633(T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T286f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T1001f39(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T1001f38(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T1001f37(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T1001f36(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T1001f35(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T1001f34(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T1001c31(T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T1001f13(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T1001f40(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T321f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T321f1631(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T321f1630(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T321f1629(T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T286f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T1000f37(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T1000f36(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T1000f35(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T1000f34(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T1000c31(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T1000f38(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T1000f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T1000f39(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T286f158(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T321f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T321f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T321f1626(T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T286f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T999f40(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T999f39(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T999f38(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T999f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T999f36(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T999f35(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T999c32(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T999f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T999f41(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T321f1625(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T321f1624(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T321f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T321f1622(T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T286f297(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T998f40(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T998f39(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T998f38(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T998f37(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T998f36(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T998f35(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T998c32(T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T998f14(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T998f41(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T321f1621(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T321f1620(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T321f1619(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T995f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].resized_area */
extern T0* T978f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].copy_data */
extern void T978f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_AGENT].move_data */
extern void T978f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].overlapping_move */
extern void T978f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].non_overlapping_move */
extern void T978f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T978c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T995f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T1270c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T995c3(void);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T286f295(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T977f28(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T977c27(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T977f17(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T977c26(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T321f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T321f1617(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T321f1616(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T321f1615(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T321f1614(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T321f1613(T0* C);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T286f247(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T321f1612(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T321f1611(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T321f1610(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T321f1609(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T321f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T321f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T321f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T321f1605(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T982f24(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T321f1604(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T992f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].resized_area */
extern T0* T983f3(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].copy_data */
extern void T983f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STRIP_EXPRESSION].move_data */
extern void T983f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].overlapping_move */
extern void T983f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].non_overlapping_move */
extern void T983f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T983c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T992f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T1269c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T992c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T286f294(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T982f25(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T982c23(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T982f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T812f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T1217c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T766c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge813os6690;
extern T0* ge813ov6690;
extern T0* T982f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T812c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge794os12967;
extern T0* ge794ov12967;
extern T0* T160f899(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T182c33(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T982f8(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T321f833(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T637f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T321f1603(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T321f1602(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T321f1710(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T637f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T637f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T648f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].resized_area */
extern T0* T647f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].copy_data */
extern void T647f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD].move_data */
extern void T647f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].overlapping_move */
extern void T647f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].non_overlapping_move */
extern void T647f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T637f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T637f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T321f1601(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T321f1708(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T637f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T321f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T321f1599(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T321f1598(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T991f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].resized_area */
extern T0* T749f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].copy_data */
extern void T749f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_TUPLE].move_data */
extern void T749f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].overlapping_move */
extern void T749f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].non_overlapping_move */
extern void T749f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T749c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T991f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T1268c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T991c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T286f293(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T210f29(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T321f1597(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T321f1596(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T321f1595(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T321f1594(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T321f1593(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T980f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T321f1592(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T990f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].resized_area */
extern T0* T981f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].copy_data */
extern void T981f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_ARRAY].move_data */
extern void T981f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].overlapping_move */
extern void T981f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].non_overlapping_move */
extern void T981f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T981c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T990f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T1267c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T990c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T286f292(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T980f24(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T980c22(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T980f22p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T980f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge794os12909;
extern T0* ge794ov12909;
extern T0* T160f722(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T469c68(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge794os12904;
extern T0* ge794ov12904;
extern T0* T160f898(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T469c60(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T980f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T321f1591(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T321f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T321f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T321f1588(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T321f1587(T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T286f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T989c17(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T989f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T321f1586(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T988f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].resized_area */
extern T0* T964f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].copy_data */
extern void T964f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].move_data */
extern void T964f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].overlapping_move */
extern void T964f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].non_overlapping_move */
extern void T964f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T964c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T988f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T1266c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T988c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T286f290(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T963f18(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T963c17(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T963f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T321f1585(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T984f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T321f1584(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T987f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].resized_area */
extern T0* T985f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].copy_data */
extern void T985f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].move_data */
extern void T985f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].overlapping_move */
extern void T985f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].non_overlapping_move */
extern void T985f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T985c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T987f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T1265c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T987c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T286f289(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T984c11(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T984f5(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T984f11p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T984f11p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T984f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T321f1583(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T321f1582(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T986f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].resized_area */
extern T0* T902f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].copy_data */
extern void T902f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_EXPRESSION].move_data */
extern void T902f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].overlapping_move */
extern void T902f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].non_overlapping_move */
extern void T902f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T902c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T986f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T1264c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T986c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T321f1581(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T286f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T901c18(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T321f1580(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T321f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T321f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T321f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T321f1576(T0* C);
/* ET_EIFFEL_PARSER.new_once_manifest_string */
extern T0* T321f819(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T286f330(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T979f23(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T979c19(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge794os12955;
extern T0* ge794ov12955;
extern T0* T160f762(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T182c28(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T979f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T321f1575(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T321f1574(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T321f1573(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T321f1572(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T321f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T321f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T321f1569(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T321f1568(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T321f1567(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T321f1566(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T321f1565(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T321f1564(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T321f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T321f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T321f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T321f1560(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T321f1559(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T321f1558(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T321f1557(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T286f287(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T976f19(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T976c16(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge794os12954;
extern T0* ge794ov12954;
extern T0* T160f896(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T182c31(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T976f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T321f1556(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T286f285(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T975c18(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T286f286(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T673f52(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T673f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T321f1555(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T321f1554(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T321f816(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T286f329(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T692f74(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T692f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T321f1553(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T321f815(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T286f328(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T692f73(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T321f935(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T321f1552(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T321f1551(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T321f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T321f1549(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T321f1548(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T286f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T974c16(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T321f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T321f1546(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T286f279(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T971c17(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T321f1545(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T286f283(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T973f33(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T973c32(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge794os12933;
extern T0* ge794ov12933;
extern T0* T160f731(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T182c45(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge794os12956;
extern T0* ge794ov12956;
extern T0* T160f895(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T679c47(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T679f53(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T679f54(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T679f7(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T973f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T321f1544(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T286f282(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T972f33(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T972c32(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge794os12968;
extern T0* ge794ov12968;
extern T0* T160f734(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T182c48(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge794os12917;
extern T0* ge794ov12917;
extern T0* T160f894(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T679c49(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T972f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T321f1543(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T321f1542(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T321f1541(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T321f1540(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T321f1539(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T321f1538(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T321f1537(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T321f1536(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T321f1535(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T321f1534(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T321f1533(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T321f1532(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T321f1531(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T286f281(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T692f72(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T321f1530(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T286f280(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T692f71(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T321f1529(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T286f278(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T673f51(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T321f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T321f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T321f1526(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T970f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].resized_area */
extern T0* T903f3(T0* C, T6 a1);
/* SPECIAL [ET_WRITABLE].copy_data */
extern void T903f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WRITABLE].move_data */
extern void T903f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].overlapping_move */
extern void T903f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].non_overlapping_move */
extern void T903f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T903c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T970f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T1263c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T970c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T321f1525(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T321f812(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T1343f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T876f8(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T321f1524(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T286f277(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T969f19(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T969c16(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge794os12901;
extern T0* ge794ov12901;
extern T0* T160f893(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T469c58(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T969f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T321f1523(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T286f276(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T968f19(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T968c16(void);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T968f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T321f1522(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T286f275(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T967f19(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T967c16(void);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T967f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T321f1521(T0* C);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T286f274(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T966f19(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T966c16(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T966f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T321f1520(T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T286f273(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T321f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T321f1518(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T965f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].resized_area */
extern T0* T917f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].copy_data */
extern void T917f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].move_data */
extern void T917f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].overlapping_move */
extern void T917f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].non_overlapping_move */
extern void T917f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T917c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T965f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T1262c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T965c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T286f272(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T321f1517(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T321f1516(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T321f1515(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T321f1514(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T321f1513(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T321f1512(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T286f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T321f1511(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T321f1510(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T321f1704(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge249os1732;
extern T0* ge249ov1732;
extern T0* T321f674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T321f1509(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T321f1508(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T321f1507(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T321f1506(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T321f1505(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T321f799(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T1342f10(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T251f9(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T321f1504(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T286f271(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T962f23(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T962f22(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T962c19(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge794os12957;
extern T0* ge794ov12957;
extern T0* T160f892(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T652c18(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T652f20(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T652f21(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T652f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T962f8(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T286f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T321f1503(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T321f1502(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T961f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].resized_area */
extern T0* T950f3(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].copy_data */
extern void T950f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].move_data */
extern void T950f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].overlapping_move */
extern void T950f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].non_overlapping_move */
extern void T950f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T950c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T961f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T1261c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T961c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T286f270(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T949f25(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T949c24(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T949f26(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T321f1501(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T321f1500(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T321f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T321f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T321f1497(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T900f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].resized_area */
extern T0* T898f3(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].copy_data */
extern void T898f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSTRUCTION].move_data */
extern void T898f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].overlapping_move */
extern void T898f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].non_overlapping_move */
extern void T898f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T898c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T900f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T1246c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T900c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T286f268(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T960f9(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T960c8(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T960f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T321f1496(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T321f1495(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T286f266(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T958f10(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T958f9(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T958c8(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T958f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T321f1494(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T321f1493(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T286f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T321f1492(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T321f798(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T129f107(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T321f1491(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T957f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].resized_area */
extern T0* T956f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].copy_data */
extern void T956f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].move_data */
extern void T956f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].overlapping_move */
extern void T956f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].non_overlapping_move */
extern void T956f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T956c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T957f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T1260c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T957c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T286f264(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T321f1490(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T951f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T321f1489(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T954f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].resized_area */
extern T0* T952f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].copy_data */
extern void T952f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_LIST].move_data */
extern void T952f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].overlapping_move */
extern void T952f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].non_overlapping_move */
extern void T952f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T952c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T954f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T1259c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T954c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T286f263(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T951c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T951f5(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T951f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge645os6690;
extern T0* ge645ov6690;
extern T0* T951f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T321f1488(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T321f1487(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T321f1486(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T321f1485(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T321f1484(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T953f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].resized_area */
extern T0* T913f3(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].copy_data */
extern void T913f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DEBUG_INSTRUCTION].move_data */
extern void T913f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].overlapping_move */
extern void T913f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].non_overlapping_move */
extern void T913f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T913c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T953f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T1258c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T953c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T286f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T912c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T912f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T286f261(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge794os12930;
extern T0* ge794ov12930;
extern T0* T160f738(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T182c52(void);
/* ET_AST_FACTORY.tokens */
extern T0* T286f331(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T265f10(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T265c11(void);
/* ET_COMPOUND.make */
extern void T265f11p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge794os12932;
extern T0* ge794ov12932;
extern T0* T160f728(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T182c42(void);
/* ET_COMPOUND.tokens */
extern T0* T265f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T321f1483(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T286f232(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T265c8(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T265f8p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge756os6690;
extern T0* ge756ov6690;
extern T0* T265f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T321f1482(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T948f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].resized_area */
extern T0* T945f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].copy_data */
extern void T945f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_CONSTANT].move_data */
extern void T945f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].overlapping_move */
extern void T945f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].non_overlapping_move */
extern void T945f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T945c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T948f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T1257c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T948c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T321f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T321f1480(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T321f1479(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T321f1478(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T321f1477(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T946f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].resized_area */
extern T0* T940f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].copy_data */
extern void T940f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE].move_data */
extern void T940f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].overlapping_move */
extern void T940f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].non_overlapping_move */
extern void T940f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].make */
extern T0* T940c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T946f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T1256c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T946c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T286f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T947c7(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge794os12903;
extern T0* ge794ov12903;
extern T0* T160f724(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T469c70(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T947f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T321f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T321f1475(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T943f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].resized_area */
extern T0* T942f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].copy_data */
extern void T942f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_ITEM].move_data */
extern void T942f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].overlapping_move */
extern void T942f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].non_overlapping_move */
extern void T942f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T942c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T943f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T1255c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T943c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T286f259(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T321f1474(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T935f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T321f1473(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T938f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].resized_area */
extern T0* T936f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].copy_data */
extern void T936f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_LIST].move_data */
extern void T936f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].overlapping_move */
extern void T936f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].non_overlapping_move */
extern void T936f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T936c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T938f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T1254c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T938c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T286f258(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T935f10(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T935c8(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T935f8p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge754os6690;
extern T0* ge754ov6690;
extern T0* T935f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge794os12976;
extern T0* ge794ov12976;
extern T0* T160f735(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T182c49(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T935f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T321f1472(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T321f1471(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T321f1470(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T321f1469(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T321f1468(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T937f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].resized_area */
extern T0* T934f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].copy_data */
extern void T934f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART].move_data */
extern void T934f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].overlapping_move */
extern void T934f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].non_overlapping_move */
extern void T934f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T934c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T937f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T1253c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T937c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T286f257(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T933c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T321f1467(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T929f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T321f1466(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T932f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].resized_area */
extern T0* T930f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].copy_data */
extern void T930f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART_LIST].move_data */
extern void T930f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].overlapping_move */
extern void T930f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].non_overlapping_move */
extern void T930f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T930c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T932f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T1252c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T932c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T286f256(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T929c5(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge777os6690;
extern T0* ge777ov6690;
extern T0* T929f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T321f1465(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T321f1464(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T321f1463(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T931f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].resized_area */
extern T0* T909f3(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].copy_data */
extern void T909f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSPECT_INSTRUCTION].move_data */
extern void T909f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].overlapping_move */
extern void T909f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].non_overlapping_move */
extern void T909f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T909c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T931f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T1251c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T931c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T286f255(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T908f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T908c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T908f5(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T286f243(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T1345c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T182f10(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T182f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T321f1462(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T321f1461(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T928f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].resized_area */
extern T0* T926f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].copy_data */
extern void T926f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART].move_data */
extern void T926f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].overlapping_move */
extern void T926f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].non_overlapping_move */
extern void T926f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T926c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T928f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T1250c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T928c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T286f254(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T925c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T321f1460(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T923f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T321f1459(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T927f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].resized_area */
extern T0* T924f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].copy_data */
extern void T924f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART_LIST].move_data */
extern void T924f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].overlapping_move */
extern void T924f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].non_overlapping_move */
extern void T924f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T924c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T927f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T1249c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T927c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T286f253(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T923c5(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge761os6690;
extern T0* ge761ov6690;
extern T0* T923f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T321f1458(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T321f1457(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T922f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].resized_area */
extern T0* T907f3(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].copy_data */
extern void T907f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IF_INSTRUCTION].move_data */
extern void T907f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].overlapping_move */
extern void T907f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].non_overlapping_move */
extern void T907f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T907c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T922f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T1248c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T922c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T286f252(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T906f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T906f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T906c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T906f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T321f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T321f1455(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T321f1454(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T321f1453(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T921f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].resized_area */
extern T0* T747f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].copy_data */
extern void T747f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATE_EXPRESSION].move_data */
extern void T747f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].overlapping_move */
extern void T747f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].non_overlapping_move */
extern void T747f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T747c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T921f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T1247c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T921c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T286f251(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T746f20(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T746c19(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge794os12927;
extern T0* ge794ov12927;
extern T0* T160f743(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T182c57(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T746f5(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T286f248(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T918c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T321f1452(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T321f1451(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T286f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T920f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T920c11(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T920f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T321f1450(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T321f1449(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T321f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T321f1447(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T286f246(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T916f12(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T916c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge794os12898;
extern T0* ge794ov12898;
extern T0* T160f718(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T469c64(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T916f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T321f1446(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T321f1445(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T321f1444(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T321f1443(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T286f245(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T321f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T321f1441(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T321f757(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T639f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T639f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T639f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1169f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T1169f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T914f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T639f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T286f327(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T914f11(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T914c9(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T914f9p1(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge533os6690;
extern T0* ge533ov6690;
extern T0* T914f6(T0* C);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge794os12924;
extern T0* ge794ov12924;
extern T0* T160f737(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T182c51(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T914f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T321f1440(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T321f1439(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T321f1438(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T286f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T911f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T911f10(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T911c9(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T911f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T321f1437(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T321f1436(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T321f1435(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T286f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T905c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge794os12897;
extern T0* ge794ov12897;
extern T0* T160f726(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T469c72(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T905f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T321f1434(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T286f241(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T904c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge794os12896;
extern T0* ge794ov12896;
extern T0* T160f725(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T469c71(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T904f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T321f1433(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T286f240(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T899c14(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T899f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T321f1432(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T321f1431(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T321f1430(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T321f1429(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T321f1428(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T890f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].resized_area */
extern T0* T842f3(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].copy_data */
extern void T842f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_COMPOUND].move_data */
extern void T842f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].overlapping_move */
extern void T842f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].non_overlapping_move */
extern void T842f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T842c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T890f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T1243c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T890c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T321f1427(T0* C);
/* ET_COMPOUND.put_first */
extern void T265f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T321f1426(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T321f1425(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T286f239(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge794os12952;
extern T0* ge794ov12952;
extern T0* T160f733(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T182c47(void);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T321f1424(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T321f1423(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T286f238(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge794os12941;
extern T0* ge794ov12941;
extern T0* T160f732(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T182c46(void);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T321f1422(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T321f1421(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T286f237(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge794os12963;
extern T0* ge794ov12963;
extern T0* T160f748(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T182c62(void);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T321f1420(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T321f1419(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T286f236(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T321f1418(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T321f1417(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T286f235(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T321f1416(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T321f1415(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T286f234(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T321f1414(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T321f1413(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T286f233(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T321f1412(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T321f1411(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T895f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].resized_area */
extern T0* T772f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].copy_data */
extern void T772f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_TYPE].move_data */
extern void T772f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].overlapping_move */
extern void T772f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].non_overlapping_move */
extern void T772f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T772c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T895f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T1245c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T895c3(void);
/* ET_AST_FACTORY.new_like_current */
extern T0* T286f231(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T896f54(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T321f1410(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T286f230(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T894f59(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T894c58(T0* a1);
/* ET_LIKE_FEATURE.tokens */
extern T0* T894f39(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T321f1409(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T473f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T472f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T472f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].move_data */
extern void T472f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T472f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T472f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T286f229(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T286f226(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T892c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T321f1408(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T321f1407(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T321f1725(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T286f228(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T1344c8(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T176f16(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T286f227(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T321f1406(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T321f1405(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T321f1404(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T321f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T321f1402(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T891f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T783f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].copy_data */
extern void T783f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].move_data */
extern void T783f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T783f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T783f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T783c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T891f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1244c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T891c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T286f224(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T176f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T321f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T321f1400(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T321f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T321f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T321f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T321f1396(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T286f225(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T321f1395(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T321f1394(T0* C);
/* ET_EIFFEL_PARSER.new_tuple_type */
extern T0* T321f740(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T286f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T184f79(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T321f1393(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T321f737(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T286f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T286f312(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.providers_enabled */
extern T1 T321f854(T0* C);
/* ET_EIFFEL_PARSER.universe */
extern T0* T321f858(T0* C);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T286f325(T0* C, T0* a1, T6 a2);
/* ET_CLASS.formal_parameter */
extern T0* T60f73(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T466f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T321f1392(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T321f1391(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T321f1390(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T321f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T321f1388(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T321f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T321f1386(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T321f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T321f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T321f1383(T0* C);
/* ET_EIFFEL_PARSER.new_bit_feature */
extern T0* T321f592(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T286f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T774f86(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T774c85(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge794os12923;
extern T0* ge794ov12923;
extern T0* T160f772(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T774f20(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T321f1382(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T321f591(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T57f193(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T571c612(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T57f25(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T28f193(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T28f25(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T57f187(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T1334c21(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T1334f22(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T28f187(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T57f192(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T571c610(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T28f192(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_size_error */
extern T1 T773f24(T0* C);
/* ET_BIT_N.compute_size */
extern void T773f85(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T286f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.set_bit_keyword */
extern void T773f86(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T773c84(T0* a1, T0* a2);
/* ET_BIT_N.tokens */
extern T0* T773f25(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T321f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T321f1380(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T321f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T321f1378(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T321f1377(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T321f1376(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T321f1375(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T321f1374(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T321f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T321f1372(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T321f1371(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T321f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T321f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T321f1368(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T321f1367(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T321f1366(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T321f1365(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T321f1364(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T889f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].resized_area */
extern T0* T888f2(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].copy_data */
extern void T888f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VARIANT].move_data */
extern void T888f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].overlapping_move */
extern void T888f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].non_overlapping_move */
extern void T888f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].make */
extern T0* T888c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T889f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T1242c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T889c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T286f223(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T887f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T887c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge794os12974;
extern T0* ge794ov12974;
extern T0* T160f753(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T182c67(void);
/* ET_VARIANT.tokens */
extern T0* T887f4(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T286f117(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T321f1363(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T321f1362(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T321f1361(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T321f1360(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T886f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].resized_area */
extern T0* T885f2(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].copy_data */
extern void T885f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOOP_INVARIANTS].move_data */
extern void T885f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].overlapping_move */
extern void T885f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].non_overlapping_move */
extern void T885f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T885c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T886f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T1241c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T886c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T321f731(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T884f9(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T286f324(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T884f10(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T884c8(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T884f8p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T884f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge794os12948;
extern T0* ge794ov12948;
extern T0* T160f761(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T182c75(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T884f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T321f1359(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T321f1358(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T321f1357(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T321f1356(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T883f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].resized_area */
extern T0* T730f3(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].copy_data */
extern void T730f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INVARIANTS].move_data */
extern void T730f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].overlapping_move */
extern void T730f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].non_overlapping_move */
extern void T730f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T730c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T883f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T1240c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T883c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T321f727(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T729f22(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T286f323(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T729f23(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T729c21(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T729f24(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T729f12(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T729f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T321f1355(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T321f1354(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T321f1353(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T321f934(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T321f1352(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T882f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].resized_area */
extern T0* T844f3(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].copy_data */
extern void T844f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSTCONDITIONS].move_data */
extern void T844f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].overlapping_move */
extern void T844f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].non_overlapping_move */
extern void T844f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T844c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T882f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T1239c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T882c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T321f724(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T843f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T286f322(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T843f16(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T843f15(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T843c13(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T843f13p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T843f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge794os12936;
extern T0* ge794ov12936;
extern T0* T160f861(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T182c34(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T843f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T321f1351(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T321f1350(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T321f1349(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T321f1348(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T321f1347(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T881f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].resized_area */
extern T0* T839f3(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].copy_data */
extern void T839f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECONDITIONS].move_data */
extern void T839f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].overlapping_move */
extern void T839f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].non_overlapping_move */
extern void T839f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T839c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T881f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T1238c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T881c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T321f721(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T838f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T286f321(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T838f16(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T838f15(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T838c13(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T838f13p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T838f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge794os12962;
extern T0* ge794ov12962;
extern T0* T160f860(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T182c37(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T838f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T321f1346(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T321f1345(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T321f1344(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T321f1343(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T321f1342(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T321f1724(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T639f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T639f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T1168f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].resized_area */
extern T0* T1167f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].copy_data */
extern void T1167f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSERTION_ITEM].move_data */
extern void T1167f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].overlapping_move */
extern void T1167f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].non_overlapping_move */
extern void T1167f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T639f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T639f10(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T286f306(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T286f307(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T1013c5(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T321f1341(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T321f1340(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T321f1723(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T639f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T639f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T639f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T1013f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T639f8(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T639f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T321f1339(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T321f1338(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T321f1337(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T321f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T321f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T321f1334(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T880f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].resized_area */
extern T0* T875f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].copy_data */
extern void T875f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].move_data */
extern void T875f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].overlapping_move */
extern void T875f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].non_overlapping_move */
extern void T875f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T875c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T880f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T1237c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T880c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T286f222(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T286f221(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T876c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T321f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T321f1332(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T879f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].resized_area */
extern T0* T877f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].copy_data */
extern void T877f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE].move_data */
extern void T877f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].overlapping_move */
extern void T877f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].non_overlapping_move */
extern void T877f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T877c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T879f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T1236c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T879c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T286f220(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T1343c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge982os20233;
extern T0* ge982ov20233;
extern T0* T321f704(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T321f1331(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T286f219(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T321f1330(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T840f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T321f1329(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T321f1328(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T1343f8(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T840f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T840f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T321f1327(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T321f1326(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T873f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].resized_area */
extern T0* T841f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].copy_data */
extern void T841f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].move_data */
extern void T841f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].overlapping_move */
extern void T841f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].non_overlapping_move */
extern void T841f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T321f711(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T636f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T636f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T636f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T636f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T286f320(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T840f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T840c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T840f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge704os6690;
extern T0* ge704ov6690;
extern T0* T840f5(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge794os12951;
extern T0* ge794ov12951;
extern T0* T160f740(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T182c54(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T840f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T321f1325(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T321f1324(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T321f1323(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T321f1322(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T321f1321(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T321f1320(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T872f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].resized_area */
extern T0* T868f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].copy_data */
extern void T868f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].move_data */
extern void T868f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].overlapping_move */
extern void T868f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].non_overlapping_move */
extern void T868f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T286f218(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T286f217(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T321f1319(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T321f1318(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T871f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].resized_area */
extern T0* T869f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].copy_data */
extern void T869f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT].move_data */
extern void T869f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].overlapping_move */
extern void T869f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].non_overlapping_move */
extern void T869f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T869c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T871f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T1233c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T871c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T286f216(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T321f1317(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T286f215(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T321f1316(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T321f1315(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T321f1314(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T245f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T321f1313(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T321f1312(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T866f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].resized_area */
extern T0* T846f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].copy_data */
extern void T846f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].move_data */
extern void T846f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].overlapping_move */
extern void T846f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].non_overlapping_move */
extern void T846f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T321f699(T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T635f12(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T635f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T635f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T635f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T286f319(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T321f1311(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T321f1310(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T321f1309(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T321f1308(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T321f1307(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T321f698(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T321f866(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T286f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T865f45(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T865c44(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T26f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T865f7(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge798os25173;
extern T0* ge798ov25173;
extern T0* T865f6(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge794os12918;
extern T0* ge794ov12918;
extern T0* T160f736(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T182c50(void);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T321f1306(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T286f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T861f62(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T861c81(T0* a1);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T861f60(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T321f1305(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T321f1304(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T286f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T861c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T321f1303(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T286f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T861c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T321f1302(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T286f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T861c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T321f1301(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T286f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T861c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T321f1300(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T286f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T861c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T321f1299(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T286f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T861c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T321f1298(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T286f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T861c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T321f1297(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T286f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T861c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T321f1296(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T286f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T861c72(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T321f1295(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T286f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T861c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T321f1294(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T286f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T861c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T321f1293(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T286f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T861c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T321f1292(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T286f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T861c68(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T321f1291(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T286f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T861c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T321f1290(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T286f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T861c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T321f1289(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T286f197(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T861c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T321f1288(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T286f196(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T861c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T321f1287(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T286f195(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T861c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T321f1286(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T286f194(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T861c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T321f1285(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T860f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].resized_area */
extern T0* T795f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].copy_data */
extern void T795f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].move_data */
extern void T795f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].overlapping_move */
extern void T795f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].non_overlapping_move */
extern void T795f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T795c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T860f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T1230c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T860c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T286f193(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T321f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T321f1283(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T321f692(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T321f865(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T286f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T604f61(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T604c60(T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T604f7(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge823os25173;
extern T0* ge823ov25173;
extern T0* T604f6(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge794os12945;
extern T0* ge794ov12945;
extern T0* T160f739(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T182c53(void);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T321f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T321f1281(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T321f691(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T321f864(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T286f174(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T858f61(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T858c60(T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T858f7(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge833os25173;
extern T0* ge833ov25173;
extern T0* T858f6(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge794os12958;
extern T0* ge794ov12958;
extern T0* T160f746(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T182c60(void);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T321f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T321f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T321f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T321f1277(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T321f1276(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T321f1275(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T321f1274(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T321f1273(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T321f1272(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T321f1271(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T321f1270(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T321f1269(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T321f1268(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T321f1267(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T321f1266(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T321f1265(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T321f1264(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T286f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T859f87(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T859c78(T0* a1);
/* ET_INFIX_NAME.default_keyword */
extern T0* T859f13(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T321f1263(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T286f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T859c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T321f1262(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T286f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T859c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T321f1261(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T286f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T859c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T321f1260(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T286f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T859c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T321f1259(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T286f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T859c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T321f1258(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T286f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T859c90(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T321f1257(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T286f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T859c89(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T321f1256(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T286f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T859c88(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T321f1255(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T286f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T859c86(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T321f1254(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T286f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T859c85(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T321f1253(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T286f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T859c84(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T321f1252(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T286f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T859c83(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T321f1251(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T286f178(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T859c82(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T321f1250(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T286f177(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T859c81(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T321f1249(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T286f176(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T859c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T321f1248(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T286f175(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T859c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T321f1247(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T321f1246(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T286f173(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T857f62(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T857c60(T0* a1);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T857f13(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T321f1245(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T286f172(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T857c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T321f1244(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T286f171(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T857c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T321f1243(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T321f1242(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T855f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].resized_area */
extern T0* T837f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].copy_data */
extern void T837f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSIGNER].move_data */
extern void T837f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].overlapping_move */
extern void T837f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].non_overlapping_move */
extern void T837f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T837c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T855f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T1228c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T855c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T286f170(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T321f1241(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T321f1240(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T854f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].resized_area */
extern T0* T851f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].copy_data */
extern void T851f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTERNAL_ALIAS].move_data */
extern void T851f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].overlapping_move */
extern void T851f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].non_overlapping_move */
extern void T851f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T851c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T854f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T1227c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T854c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T286f169(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T321f1239(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T321f1238(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T321f1237(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T700f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].resized_area */
extern T0* T699f2(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].copy_data */
extern void T699f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SEMICOLON_SYMBOL].move_data */
extern void T699f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].overlapping_move */
extern void T699f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].non_overlapping_move */
extern void T699f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T699c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T700f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T1190c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T700c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T321f1236(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T321f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T321f1234(T0* C);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T321f684(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T321f1751(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T57f201(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T571c621(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T57f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T28f201(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T28f29(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_builtin_reported */
extern T1 T321f877(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T853f81(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T321f1796(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge794os12837;
extern T0* ge794ov12837;
extern T0* T160f499(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge794os12787;
extern T0* ge794ov12787;
extern T0* T160f691(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge794os12786;
extern T0* ge794ov12786;
extern T0* T160f689(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge794os12768;
extern T0* ge794ov12768;
extern T0* T160f687(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge794os12767;
extern T0* ge794ov12767;
extern T0* T160f685(T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge794os12874;
extern T0* ge794ov12874;
extern T0* T160f636(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge794os12882;
extern T0* ge794ov12882;
extern T0* T160f682(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge794os12881;
extern T0* ge794ov12881;
extern T0* T160f680(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge794os12880;
extern T0* ge794ov12880;
extern T0* T160f678(T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge794os12802;
extern T0* ge794ov12802;
extern T0* T160f626(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T603c32(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T603f33(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge794os12842;
extern T0* ge794ov12842;
extern T0* T160f666(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge794os12840;
extern T0* ge794ov12840;
extern T0* T160f624(T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge794os12808;
extern T0* ge794ov12808;
extern T0* T160f622(T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge794os12797;
extern T0* ge794ov12797;
extern T0* T160f616(T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge794os12809;
extern T0* ge794ov12809;
extern T0* T160f614(T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge794os12803;
extern T0* ge794ov12803;
extern T0* T160f612(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T57f203(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T571c622(T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [ET_TYPE].item */
extern T0* T1135f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T57f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T28f203(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T28f31(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T160f466(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge794os12807;
extern T0* ge794ov12807;
extern T0* T160f495(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T321f1795(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge794os12864;
extern T0* ge794ov12864;
extern T0* T160f467(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T321f1794(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge794os12759;
extern T0* ge794ov12759;
extern T0* T160f664(T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge794os12763;
extern T0* ge794ov12763;
extern T0* T160f662(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge794os12762;
extern T0* ge794ov12762;
extern T0* T160f660(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge794os12761;
extern T0* ge794ov12761;
extern T0* T160f658(T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge794os12758;
extern T0* ge794ov12758;
extern T0* T160f656(T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge794os12760;
extern T0* ge794ov12760;
extern T0* T160f654(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge794os12756;
extern T0* ge794ov12756;
extern T0* T160f652(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge794os12755;
extern T0* ge794ov12755;
extern T0* T160f650(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge794os12754;
extern T0* ge794ov12754;
extern T0* T160f648(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge794os12753;
extern T0* ge794ov12753;
extern T0* T160f646(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge794os12752;
extern T0* ge794ov12752;
extern T0* T160f644(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge794os12751;
extern T0* ge794ov12751;
extern T0* T160f642(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge794os12750;
extern T0* ge794ov12750;
extern T0* T160f640(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge794os12749;
extern T0* ge794ov12749;
extern T0* T160f638(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge794os12879;
extern T0* ge794ov12879;
extern T0* T160f634(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge794os12878;
extern T0* ge794ov12878;
extern T0* T160f632(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge794os12876;
extern T0* ge794ov12876;
extern T0* T160f630(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge794os12873;
extern T0* ge794ov12873;
extern T0* T160f475(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge794os12872;
extern T0* ge794ov12872;
extern T0* T160f473(T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge794os12804;
extern T0* ge794ov12804;
extern T0* T160f620(T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge794os12796;
extern T0* ge794ov12796;
extern T0* T160f618(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T321f1793(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_tuple_procedure */
extern void T321f1792(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge794os12862;
extern T0* ge794ov12862;
extern T0* T160f46(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_item_feature_name */
extern unsigned char ge794os12860;
extern T0* ge794ov12860;
extern T0* T160f575(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_item_feature_name */
extern unsigned char ge794os12859;
extern T0* ge794ov12859;
extern T0* T160f573(T0* C);
/* ET_TOKEN_CONSTANTS.object_comparison_feature_name */
extern unsigned char ge794os12836;
extern T0* ge794ov12836;
extern T0* T160f570(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_item_feature_name */
extern unsigned char ge794os12835;
extern T0* ge794ov12835;
extern T0* T160f568(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_item_feature_name */
extern unsigned char ge794os12834;
extern T0* ge794ov12834;
extern T0* T160f566(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_item_feature_name */
extern unsigned char ge794os12832;
extern T0* ge794ov12832;
extern T0* T160f564(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_item_feature_name */
extern unsigned char ge794os12831;
extern T0* ge794ov12831;
extern T0* T160f562(T0* C);
/* ET_TOKEN_CONSTANTS.item_code_feature_name */
extern unsigned char ge794os12826;
extern T0* ge794ov12826;
extern T0* T160f560(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_item_feature_name */
extern unsigned char ge794os12814;
extern T0* ge794ov12814;
extern T0* T160f558(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_item_feature_name */
extern unsigned char ge794os12813;
extern T0* ge794ov12813;
extern T0* T160f556(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_item_feature_name */
extern unsigned char ge794os12812;
extern T0* ge794ov12812;
extern T0* T160f554(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_item_feature_name */
extern unsigned char ge794os12811;
extern T0* ge794ov12811;
extern T0* T160f552(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_item_feature_name */
extern unsigned char ge794os12770;
extern T0* ge794ov12770;
extern T0* T160f549(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_item_feature_name */
extern unsigned char ge794os12769;
extern T0* ge794ov12769;
extern T0* T160f547(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_item_feature_name */
extern unsigned char ge794os12765;
extern T0* ge794ov12765;
extern T0* T160f544(T0* C);
/* ET_TOKEN_CONSTANTS.set_object_comparison_feature_name */
extern unsigned char ge794os12865;
extern T0* ge794ov12865;
extern T0* T160f607(T0* C);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge794os12858;
extern T0* ge794ov12858;
extern T0* T160f48(T0* C);
/* ET_TOKEN_CONSTANTS.put_real_64_feature_name */
extern unsigned char ge794os12857;
extern T0* ge794ov12857;
extern T0* T160f604(T0* C);
/* ET_TOKEN_CONSTANTS.put_real_32_feature_name */
extern unsigned char ge794os12856;
extern T0* ge794ov12856;
extern T0* T160f602(T0* C);
/* ET_TOKEN_CONSTANTS.put_pointer_feature_name */
extern unsigned char ge794os12855;
extern T0* ge794ov12855;
extern T0* T160f600(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_64_feature_name */
extern unsigned char ge794os12854;
extern T0* ge794ov12854;
extern T0* T160f598(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_32_feature_name */
extern unsigned char ge794os12853;
extern T0* ge794ov12853;
extern T0* T160f596(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_16_feature_name */
extern unsigned char ge794os12852;
extern T0* ge794ov12852;
extern T0* T160f594(T0* C);
/* ET_TOKEN_CONSTANTS.put_natural_8_feature_name */
extern unsigned char ge794os12851;
extern T0* ge794ov12851;
extern T0* T160f592(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_64_feature_name */
extern unsigned char ge794os12850;
extern T0* ge794ov12850;
extern T0* T160f590(T0* C);
/* UT_VERSION.infix "<=" */
extern T1 T63f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.ise_6_2_7_2906 */
extern unsigned char ge249os1743;
extern T0* ge249ov1743;
extern T0* T321f881(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_32_feature_name */
extern unsigned char ge794os12849;
extern T0* ge794ov12849;
extern T0* T160f588(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_16_feature_name */
extern unsigned char ge794os12848;
extern T0* ge794ov12848;
extern T0* T160f586(T0* C);
/* ET_TOKEN_CONSTANTS.put_integer_8_feature_name */
extern unsigned char ge794os12847;
extern T0* ge794ov12847;
extern T0* T160f584(T0* C);
/* ET_TOKEN_CONSTANTS.put_character_32_feature_name */
extern unsigned char ge794os12846;
extern T0* ge794ov12846;
extern T0* T160f582(T0* C);
/* ET_TOKEN_CONSTANTS.put_character_8_feature_name */
extern unsigned char ge794os12845;
extern T0* ge794ov12845;
extern T0* T160f580(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_tuple_feature */
extern T6 T160f546(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.put_boolean_feature_name */
extern unsigned char ge794os12844;
extern T0* ge794ov12844;
extern T0* T160f578(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T321f1791(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T321f1790(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge794os12891;
extern T0* ge794ov12891;
extern T0* T160f542(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T321f1789(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge794os12887;
extern T0* ge794ov12887;
extern T0* T160f540(T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge794os12821;
extern T0* ge794ov12821;
extern T0* T160f538(T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge794os12861;
extern T0* ge794ov12861;
extern T0* T160f536(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge794os12838;
extern T0* ge794ov12838;
extern T0* T160f534(T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge794os12815;
extern T0* ge794ov12815;
extern T0* T160f532(T0* C);
/* ET_TOKEN_CONSTANTS.double_bytes_feature_name */
extern unsigned char ge794os12780;
extern T0* ge794ov12780;
extern T0* T160f530(T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge794os12771;
extern T0* ge794ov12771;
extern T0* T160f528(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge794os12764;
extern T0* ge794ov12764;
extern T0* T160f526(T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge794os12824;
extern T0* ge794ov12824;
extern T0* T160f524(T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge794os12823;
extern T0* ge794ov12823;
extern T0* T160f522(T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge794os12822;
extern T0* ge794ov12822;
extern T0* T160f520(T0* C);
/* ET_TOKEN_CONSTANTS.is_mac_feature_name */
extern unsigned char ge794os12820;
extern T0* ge794ov12820;
extern T0* T160f518(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T160f517(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge794os12818;
extern T0* ge794ov12818;
extern T0* T160f515(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_identified_routines_procedure */
extern void T321f1788(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_feature_name */
extern unsigned char ge794os12782;
extern T0* ge794ov12782;
extern T0* T160f511(T0* C);
/* ET_TOKEN_CONSTANTS.eif_id_object_feature_name */
extern unsigned char ge794os12781;
extern T0* ge794ov12781;
extern T0* T160f508(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_identified_feature */
extern T6 T160f510(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.eif_object_id_free_feature_name */
extern unsigned char ge794os12783;
extern T0* ge794ov12783;
extern T0* T160f513(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T321f1787(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge794os12748;
extern T0* ge794ov12748;
extern T0* T160f506(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T160f505(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge794os12747;
extern T0* ge794ov12747;
extern T0* T160f503(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T321f1786(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge794os12792;
extern T0* ge794ov12792;
extern T0* T160f501(T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge794os12875;
extern T0* ge794ov12875;
extern T0* T160f497(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T321f1785(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T321f1784(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge794os12810;
extern T0* ge794ov12810;
extern T0* T160f492(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge794os12841;
extern T0* ge794ov12841;
extern T0* T160f488(T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge794os12800;
extern T0* ge794ov12800;
extern T0* T160f490(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge794os12806;
extern T0* ge794ov12806;
extern T0* T160f486(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge794os12805;
extern T0* ge794ov12805;
extern T0* T160f484(T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge794os12794;
extern T0* ge794ov12794;
extern T0* T160f482(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T160f478(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge794os12793;
extern T0* ge794ov12793;
extern T0* T160f480(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T321f1783(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T321f1782(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge794os12833;
extern T0* ge794ov12833;
extern T0* T160f471(T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge794os12773;
extern T0* ge794ov12773;
extern T0* T160f469(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T321f1781(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T321f1780(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.base_address_feature_name */
extern unsigned char ge794os12757;
extern T0* ge794ov12757;
extern T0* T160f460(T0* C);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge794os12745;
extern T0* ge794ov12745;
extern T0* T160f458(T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge794os12784;
extern T0* ge794ov12784;
extern T0* T160f456(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge794os12890;
extern T0* ge794ov12890;
extern T0* T160f454(T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge794os12843;
extern T0* ge794ov12843;
extern T0* T160f47(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T160f453(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge794os12829;
extern T0* ge794ov12829;
extern T0* T160f462(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_type_procedure */
extern void T321f1779(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_id_feature_name */
extern unsigned char ge794os12884;
extern T0* ge794ov12884;
extern T0* T160f450(T0* C);
/* ET_TOKEN_CONSTANTS.name_feature_name */
extern unsigned char ge794os12830;
extern T0* ge794ov12830;
extern T0* T160f448(T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_count_feature_name */
extern unsigned char ge794os12791;
extern T0* ge794ov12791;
extern T0* T160f446(T0* C);
/* ET_TOKEN_CONSTANTS.generic_parameter_feature_name */
extern unsigned char ge794os12790;
extern T0* ge794ov12790;
extern T0* T160f444(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T160f443(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge794os12788;
extern T0* ge794ov12788;
extern T0* T160f428(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T321f1778(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge794os12777;
extern T0* ge794ov12777;
extern T0* T160f437(T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge794os12817;
extern T0* ge794ov12817;
extern T0* T160f435(T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge794os12869;
extern T0* ge794ov12869;
extern T0* T160f433(T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge794os12870;
extern T0* ge794ov12870;
extern T0* T160f431(T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge794os12789;
extern T0* ge794ov12789;
extern T0* T160f426(T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge794os12774;
extern T0* ge794ov12774;
extern T0* T160f424(T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge794os12863;
extern T0* ge794ov12863;
extern T0* T160f422(T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge794os12868;
extern T0* ge794ov12868;
extern T0* T160f420(T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge794os12883;
extern T0* ge794ov12883;
extern T0* T160f416(T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge794os12775;
extern T0* ge794ov12775;
extern T0* T160f190(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T160f418(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge794os12867;
extern T0* ge794ov12867;
extern T0* T160f439(T0* C);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T321f862(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T286f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T853f88(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T853f86(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T853f85(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T853f84(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T853f83(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T853f82(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge794os12949;
extern T0* ge794ov12949;
extern T0* T160f730(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T182c44(void);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T853c73(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T853f32(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T321f1233(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T321f1232(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T286f168(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T370f81(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T370f79(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T370f78(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T370f77(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T370f76(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T321f1231(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T321f1230(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T286f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T852f85(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T852f83(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T852f82(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T852f81(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T852f80(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T852f79(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T852f78(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T852f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T852c69(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T852f34(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T321f1229(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T321f1228(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T286f166(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T366f85(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T366f83(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T366f82(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T366f81(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T366f80(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T366f79(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T366f78(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T366f77(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T321f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T321f1226(T0* C);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T321f681(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T321f1750(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T179f82(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T321f1777(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T321f1776(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T321f1775(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T321f1774(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_tuple_function */
extern void T321f1773(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T321f1772(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge794os12892;
extern T0* ge794ov12892;
extern T0* T160f543(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T321f1771(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T321f1770(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_identified_routines_function */
extern void T321f1769(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T321f1768(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T321f1767(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T321f1766(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T321f1765(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.ise_6_1_latest */
extern unsigned char ge249os1741;
extern T0* ge249ov1741;
extern T0* T321f882(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T63c18(T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T321f1764(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T321f1763(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T321f1762(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T321f1761(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_type_function */
extern void T321f1760(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T321f1759(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function */
extern T0* T286f317(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T179f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T179f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T179f87(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T179f86(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T179f85(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T179f84(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T179f83(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T179c74(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T179f40(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T321f1225(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T321f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T321f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T321f1222(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T286f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T848f83(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T848f81(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T848f80(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T848f79(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T848f78(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T848f77(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T848c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T848f40(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T848f69p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T321f1221(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T321f1220(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T321f1219(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T321f1218(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T286f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T847f87(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T847f85(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T847f84(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T847f83(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T847f82(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T847f81(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T847f80(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T847f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T847f78(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T847c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T847f42(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T321f1217(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T321f1216(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T321f1215(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T321f1214(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T286f162(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T845f87(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T845f85(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T845f84(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T845f83(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T845f82(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T845f81(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T845f80(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T845f79(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T845f78(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T845c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T845f42(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T321f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T321f1212(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T321f1211(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T321f1210(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T286f161(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T269f76(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T269c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge794os12972;
extern T0* ge794ov12972;
extern T0* T160f901(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T182c36(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T269f38(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T321f1209(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T321f1208(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T286f160(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T268f76(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T268c68(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T268f38(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T321f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T321f1206(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T286f159(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T270f74(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T270c66(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T270f36(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T321f1205(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T321f1204(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T321f1722(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T276f24(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T276f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T276f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T276f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T276f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T276f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T276f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T276f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T276f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T276f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T548f5(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T276f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T276f22(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T276f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T276f8(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T276f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T321f669(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T853f36(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T321f1203(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T286f157(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T321f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T321f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T321f1200(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T321f1721(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T636f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T636f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T635f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T635f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T276f21(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T276f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T548f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T276f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T276f15(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T321f1199(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T321f1198(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T321f1720(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T278f24(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T278f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T278f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T278f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T278f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T278f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T278f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T278f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T278f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T278f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T554f5(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T278f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T278f22(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T278f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T278f8(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T278f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T321f667(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T179f50(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T321f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T321f1196(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T321f1195(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T321f1194(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T321f1719(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T278f21(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T278f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T554f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T278f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T278f15(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T321f1193(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T321f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T321f1191(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T321f1190(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T321f1189(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T321f1188(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T834f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].resized_area */
extern T0* T833f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].copy_data */
extern void T833f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE].move_data */
extern void T833f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].overlapping_move */
extern void T833f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].non_overlapping_move */
extern void T833f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T833c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T834f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T1226c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T834c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T286f156(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T645c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge794os12940;
extern T0* ge794ov12940;
extern T0* T160f751(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T182c65(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T645f3(T0* C);
/* ET_EIFFEL_PARSER.new_any_clients */
extern T0* T321f645(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_client */
extern T0* T321f632(T0* C, T0* a1);
/* ET_AST_FACTORY.new_client */
extern T0* T286f315(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T321f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T321f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T321f1185(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T321f1184(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T727f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T321f1183(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T832f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].resized_area */
extern T0* T728f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].copy_data */
extern void T728f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].move_data */
extern void T728f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].overlapping_move */
extern void T728f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].non_overlapping_move */
extern void T728f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T728c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T832f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T1225c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T832c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T286f155(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T727c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge565os6690;
extern T0* ge565ov6690;
extern T0* T727f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T321f1182(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T321f1718(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T321f1181(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T321f1180(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T321f1179(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T831f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].resized_area */
extern T0* T830f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].copy_data */
extern void T830f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_ITEM].move_data */
extern void T830f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].overlapping_move */
extern void T830f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].non_overlapping_move */
extern void T830f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T830c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T831f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T1224c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T831c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T286f154(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T321f1178(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T1036f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T321f1177(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T828f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].resized_area */
extern T0* T824f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].copy_data */
extern void T824f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_LIST].move_data */
extern void T824f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].overlapping_move */
extern void T824f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].non_overlapping_move */
extern void T824f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T824c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T828f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T1223c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T828c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T286f153(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T1036f11(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T1036c9(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T1036f9p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge883os6690;
extern T0* ge883ov6690;
extern T0* T1036f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T321f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T321f1175(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T321f1174(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T321f1173(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T826f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].resized_area */
extern T0* T819f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].copy_data */
extern void T819f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE].move_data */
extern void T819f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].overlapping_move */
extern void T819f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].non_overlapping_move */
extern void T819f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T819c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T826f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T1222c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T826c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T286f152(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T827c9(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T827f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T321f1172(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T286f151(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T825c8(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge794os12899;
extern T0* ge794ov12899;
extern T0* T160f717(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T469c63(void);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T825f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T321f1171(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T822f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].resized_area */
extern T0* T821f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].copy_data */
extern void T821f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].move_data */
extern void T821f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].overlapping_move */
extern void T821f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].non_overlapping_move */
extern void T821f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T821c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T822f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T1221c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T822c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T286f150(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T321f1170(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T725f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T321f1169(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T817f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].resized_area */
extern T0* T726f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].copy_data */
extern void T726f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].move_data */
extern void T726f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].overlapping_move */
extern void T726f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].non_overlapping_move */
extern void T726f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T726c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T817f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T1220c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T817c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T286f149(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T725c8(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T725f8p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge556os6690;
extern T0* ge556ov6690;
extern T0* T725f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge794os12926;
extern T0* ge794ov12926;
extern T0* T160f750(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T182c64(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T725f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T321f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T321f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T321f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T321f1165(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T321f1164(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T321f1163(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T812f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].resized_area */
extern T0* T766f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].copy_data */
extern void T766f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME_ITEM].move_data */
extern void T766f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].overlapping_move */
extern void T766f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].non_overlapping_move */
extern void T766f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T286f146(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T321f1162(T0* C);
/* ET_CREATOR.put_first */
extern void T814f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T321f1161(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T816f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].resized_area */
extern T0* T815f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].copy_data */
extern void T815f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR].move_data */
extern void T815f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].overlapping_move */
extern void T815f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].non_overlapping_move */
extern void T815f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].make */
extern T0* T815c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T816f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T1219c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T816c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T286f148(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T814c16(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T814f18(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T814f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge794os12928;
extern T0* ge794ov12928;
extern T0* T160f754(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T182c68(void);
/* ET_CREATOR.tokens */
extern T0* T814f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T321f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T321f1159(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T321f1158(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T321f1157(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T321f1156(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T321f1155(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T321f1154(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T321f1153(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T321f933(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T321f1152(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T321f1151(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T321f1150(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T321f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T321f1148(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T321f1147(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T813f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].resized_area */
extern T0* T724f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].copy_data */
extern void T724f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR_LIST].move_data */
extern void T724f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].overlapping_move */
extern void T724f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].non_overlapping_move */
extern void T724f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T724c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T813f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T1218c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T813c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T321f1146(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T586f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T321f1145(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T286f147(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T586c9(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge560os6690;
extern T0* ge560ov6690;
extern T0* T586f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T321f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T321f1143(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T321f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T321f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T321f1140(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T350f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T321f1139(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T811f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].resized_area */
extern T0* T788f3(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].copy_data */
extern void T788f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].move_data */
extern void T788f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].overlapping_move */
extern void T788f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].non_overlapping_move */
extern void T788f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T788c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T811f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T1216c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T811c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T286f145(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T350c8(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T350f8p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T350f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge794os12959;
extern T0* ge794ov12959;
extern T0* T160f758(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T182c72(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T350f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T321f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T321f1137(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T321f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T321f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T321f1134(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T321f1133(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T321f1132(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T321f1131(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T321f1130(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T321f1129(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T321f1128(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T321f1127(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T321f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T321f1125(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T321f1124(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T321f1123(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T321f1122(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENT_ITEM].resize */
extern T0* T810f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENT_ITEM].resized_area */
extern T0* T809f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENT_ITEM].copy_data */
extern void T809f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENT_ITEM].move_data */
extern void T809f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].overlapping_move */
extern void T809f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENT_ITEM].non_overlapping_move */
extern void T809f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_client_comma */
extern T0* T321f635(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_client_comma */
extern T0* T286f316(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T321f1121(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T321f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T321f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T321f1118(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T808f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].resized_area */
extern T0* T801f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].copy_data */
extern void T801f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENTS].move_data */
extern void T801f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].overlapping_move */
extern void T801f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].non_overlapping_move */
extern void T801f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T801c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T808f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T1214c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T808c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T286f144(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T644f17(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T644c18(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T644f18p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T644f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T644f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T321f1117(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T321f1116(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T286f143(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T644c16(void);
/* ET_CLIENTS.make */
extern void T644f16p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T321f1115(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T321f1114(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T321f1113(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T804f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T321f1112(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T807f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].resized_area */
extern T0* T805f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].copy_data */
extern void T805f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_EXPORT].move_data */
extern void T805f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].overlapping_move */
extern void T805f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].non_overlapping_move */
extern void T805f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T805c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T807f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T1213c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T807c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T286f141(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T804c10(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T804f12(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T804f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T321f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T321f1110(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T803f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].resized_area */
extern T0* T800f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].copy_data */
extern void T800f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT].move_data */
extern void T800f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].overlapping_move */
extern void T800f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].non_overlapping_move */
extern void T800f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].make */
extern T0* T800c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T803f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T1212c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T803c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T286f142(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T321f1109(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T321f1108(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T321f1107(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T321f1106(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T286f140(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T802c7(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge794os12919;
extern T0* ge794ov12919;
extern T0* T160f859(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T182c30(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T802f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T321f1105(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T798f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].resized_area */
extern T0* T787f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].copy_data */
extern void T787f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT_LIST].move_data */
extern void T787f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].overlapping_move */
extern void T787f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].non_overlapping_move */
extern void T787f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T787c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T798f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T1211c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T798c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T321f1104(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T349f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T321f1103(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T286f139(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T349c7(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T349f7p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge563os6690;
extern T0* ge563ov6690;
extern T0* T349f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge794os12938;
extern T0* ge794ov12938;
extern T0* T160f745(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T182c59(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T349f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T321f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T321f1101(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T321f1100(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T321f1099(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T321f1098(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T321f1097(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T797f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].resized_area */
extern T0* T793f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].copy_data */
extern void T793f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_ITEM].move_data */
extern void T793f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].overlapping_move */
extern void T793f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].non_overlapping_move */
extern void T793f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T793c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T797f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T1210c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T797c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T286f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T321f1096(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T286f137(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T321f1095(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T348f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T321f1094(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T791f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].resized_area */
extern T0* T786f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].copy_data */
extern void T786f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_LIST].move_data */
extern void T786f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].overlapping_move */
extern void T786f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].non_overlapping_move */
extern void T786f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T786c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T791f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T1209c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T791c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T286f136(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T348c8(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T348f8p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge588os6690;
extern T0* ge588ov6690;
extern T0* T348f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge794os12961;
extern T0* ge794ov12961;
extern T0* T160f747(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T182c61(void);
/* ET_RENAME_LIST.tokens */
extern T0* T348f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T321f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T321f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T321f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T321f1090(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T321f1089(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T790f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].resized_area */
extern T0* T789f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].copy_data */
extern void T789f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_ITEM].move_data */
extern void T789f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].overlapping_move */
extern void T789f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].non_overlapping_move */
extern void T789f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T286f135(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T321f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T321f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T321f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T321f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T321f1084(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T782f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].resized_area */
extern T0* T723f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].copy_data */
extern void T723f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_LIST].move_data */
extern void T723f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].overlapping_move */
extern void T723f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].non_overlapping_move */
extern void T723f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T723c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T782f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T1206c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T782c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T286f134(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T321f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T321f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T321f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T321f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T321f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T321f1078(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T785f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].resized_area */
extern T0* T784f2(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].copy_data */
extern void T784f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT].move_data */
extern void T784f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].overlapping_move */
extern void T784f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].non_overlapping_move */
extern void T784f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].make */
extern T0* T784c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T785f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T1207c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T785c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T321f603(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T286f314(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_CLASS.has_formal_parameter */
extern T1 T60f72(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T466f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T321f1077(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T321f1076(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T321f1075(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T321f1074(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T321f1073(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T321f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T321f1071(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T321f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T321f1069(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T321f1068(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T321f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T321f1066(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T781f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].resized_area */
extern T0* T722f3(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].copy_data */
extern void T722f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_OBSOLETE].move_data */
extern void T722f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].overlapping_move */
extern void T722f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].non_overlapping_move */
extern void T722f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T722c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T781f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T1205c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T781c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T286f133(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T321f1065(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T321f1064(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T778f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T777f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T777f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].move_data */
extern void T777f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T777f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T777f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T777c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T778f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1204c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T778c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T286f132(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T286f130(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T779c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T321f1063(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T321f1062(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T321f1717(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T767f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T286f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T780c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T767f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T767f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T321f1061(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T321f1060(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T321f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T321f1058(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T321f1057(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T775f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T768f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].copy_data */
extern void T768f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].move_data */
extern void T768f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T768f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T768f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T768c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T775f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1203c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T775c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T286f128(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T767f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T767c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T767f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge858os6690;
extern T0* ge858ov6690;
extern T0* T767f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T767f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T321f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T321f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T321f1054(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T321f1053(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T321f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T321f1051(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T286f129(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T321f1050(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T321f587(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T286f309(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T769c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T286f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T1126c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T321f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T321f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T321f1047(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T321f1046(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T321f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T321f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T321f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T321f1042(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T770f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].resized_area */
extern T0* T760f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].copy_data */
extern void T760f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_TYPE].move_data */
extern void T760f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].overlapping_move */
extern void T760f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].non_overlapping_move */
extern void T760f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T321f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T321f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T321f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T321f1038(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T321f1037(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T321f1036(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T321f1035(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T321f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T321f1033(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T321f1032(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T321f1031(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T321f1030(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T321f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T321f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T321f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T321f1026(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T762f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T321f1025(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T764f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].resized_area */
extern T0* T763f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].copy_data */
extern void T763f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_CREATOR].move_data */
extern void T763f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].overlapping_move */
extern void T763f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].non_overlapping_move */
extern void T763f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T763c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T764f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T1201c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T764c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T286f127(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T762c12(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T762f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T762f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T762f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T321f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T321f1023(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T321f1022(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T321f1021(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T321f1020(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T759f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].resized_area */
extern T0* T754f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].copy_data */
extern void T754f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER].move_data */
extern void T754f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].overlapping_move */
extern void T754f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].non_overlapping_move */
extern void T754f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T321f1716(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T640f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T640f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T640f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T640f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T286f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T761f61(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T761c60(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T761f62(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge794os12895;
extern T0* ge794ov12895;
extern T0* T160f723(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T469c69(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T761f10(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T321f581(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T321f1019(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T321f1018(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T321f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T321f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T321f1015(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T321f1014(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T286f125(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T753f60(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T753c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T321f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T321f1012(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T321f1011(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T757f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].resized_area */
extern T0* T756f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].copy_data */
extern void T756f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].move_data */
extern void T756f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].overlapping_move */
extern void T756f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].non_overlapping_move */
extern void T756f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T756c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T757f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T1199c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T757c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T286f124(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T321f1010(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T466f29(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T761f64(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T753f62(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T466f18(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T466f29p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T321f1009(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T752f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].resized_area */
extern T0* T751f2(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].copy_data */
extern void T751f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].move_data */
extern void T751f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].overlapping_move */
extern void T751f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].non_overlapping_move */
extern void T751f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T751c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T752f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T1198c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T752c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T286f123(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T466f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T466c24(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T466f24p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge570os6690;
extern T0* ge570ov6690;
extern T0* T466f17(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T466f15(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T321f1008(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T321f1007(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T321f1713(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T640f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T640f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T640f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1170f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T1170f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T466f25(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T761f65(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T640f7(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T60f173(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T321f1006(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T321f1005(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T321f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T321f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T321f1002(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T321f1001(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T321f1000(T0* C);
/* ET_CLASS.set_external_keyword */
extern void T60f171(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T60f170(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T60f176(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T60f169(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T321f849(T0* C, T0* a1);
/* ET_CLASS.add_overridden_class */
extern void T60f180(T0* C, T0* a1);
/* ET_CLASS.is_in_override_cluster */
extern T1 T60f76(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0j_error */
extern void T57f199(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T571c620(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T57f27(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T28f199(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T28f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T57f198(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T571c619(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T28f198(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T57f197(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T571c618(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T28f197(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T57f196(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T571c617(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T28f196(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_time_stamp */
extern void T60f179(T0* C, T6 a1);
/* ET_CLASS.set_name */
extern void T60f178(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0f_error */
extern void T57f195(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T571c616(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T28f195(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0h_error */
extern void T57f194(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T571c615(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T28f194(T0* C, T0* a1);
/* ET_CLASS.cloned_class */
extern T0* T60f74(T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T595f21(T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T595f70(T0* C);
/* STRING_8.as_lower */
extern T0* T17f26(T0* C);
/* STRING_8.to_lower */
extern void T17f56(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T321f871(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T321f876(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T321f875(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T321f874(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T321f999(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T321f998(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T321f997(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T321f996(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T750f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].resized_area */
extern T0* T744f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].copy_data */
extern void T744f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_ITEM].move_data */
extern void T744f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].overlapping_move */
extern void T744f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].non_overlapping_move */
extern void T744f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T744c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T750f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T1197c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T750c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T286f122(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T321f995(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T745f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].resized_area */
extern T0* T741f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].copy_data */
extern void T741f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM].move_data */
extern void T741f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].overlapping_move */
extern void T741f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].non_overlapping_move */
extern void T741f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T741c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T745f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T1196c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T745c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T286f121(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T748c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T748f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T321f994(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T321f993(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T321f992(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T321f991(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T321f990(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T321f989(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T321f988(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T321f987(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T321f986(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T321f985(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T742f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].resized_area */
extern T0* T735f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].copy_data */
extern void T735f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_LIST].move_data */
extern void T735f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].overlapping_move */
extern void T735f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].non_overlapping_move */
extern void T735f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T735c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T742f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T1195c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T742c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T286f120(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T321f984(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T286f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T321f983(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T321f982(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T737f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].resized_area */
extern T0* T733f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].copy_data */
extern void T733f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_ITEM].move_data */
extern void T733f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].overlapping_move */
extern void T733f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].non_overlapping_move */
extern void T733f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T733c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T737f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T1194c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T737c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T286f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T321f981(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T286f116(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T321f980(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T321f979(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T731f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].resized_area */
extern T0* T720f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].copy_data */
extern void T720f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_LIST].move_data */
extern void T720f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].overlapping_move */
extern void T720f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].non_overlapping_move */
extern void T720f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T720c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T731f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T1193c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T731c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T321f978(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T321f977(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T321f976(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T321f975(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T286f115(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T321f974(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T321f973(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T321f972(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T321f971(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T321f970(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T321f969(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T321f968(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T321f1707(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T629f39(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T629f53(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T629f52(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T629f51(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T629f50(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T629f49(T0* C);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T629f42(T0* C);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T629f41(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T629f57(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T629f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T629f64(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T629f18(T0* C);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T629f22(T0* C);
/* DS_HASH_SET [ET_CLASS].start */
extern void T629f40(T0* C);
/* ET_CLASS.set_providers */
extern void T60f172(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T321f967(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T321f1706(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T321f1705(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_TOKEN_CONSTANTS.dispose_feature_name */
extern unsigned char ge794os12779;
extern T0* ge794ov12779;
extern T0* T160f191(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T57f191(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T571c609(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T57f24(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T28f191(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T28f24(T0* C, T0* a1);
/* ET_CLASS.set_end_keyword */
extern void T60f193(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T60f192(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T60f191(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T60f190(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T60f189(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T60f188(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T60f187(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T60f186(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T347f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T351f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T321f966(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T321f965(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T321f964(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T60f185(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T321f963(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T321f962(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T321f961(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T321f960(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T321f959(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T321f958(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T321f957(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T321f956(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T321f955(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T321f954(T0* C);
/* ET_CLASS.set_leading_break */
extern void T60f184(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T321f953(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T321f915(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T705f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].resized_area */
extern T0* T704f2(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].copy_data */
extern void T704f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].move_data */
extern void T704f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].overlapping_move */
extern void T704f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].non_overlapping_move */
extern void T704f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T704c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T705f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T1192c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T705c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T702f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].resized_area */
extern T0* T701f2(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].copy_data */
extern void T701f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_SYMBOL].move_data */
extern void T701f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].overlapping_move */
extern void T701f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].non_overlapping_move */
extern void T701f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T701c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T702f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T1191c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T702c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T697f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].resized_area */
extern T0* T696f2(T0* C, T6 a1);
/* SPECIAL [ET_VOID].copy_data */
extern void T696f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VOID].move_data */
extern void T696f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].overlapping_move */
extern void T696f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].non_overlapping_move */
extern void T696f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].make */
extern T0* T696c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T697f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T1189c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T697c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T694f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].resized_area */
extern T0* T693f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].copy_data */
extern void T693f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL_OPERATOR].move_data */
extern void T693f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].overlapping_move */
extern void T693f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].non_overlapping_move */
extern void T693f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T693c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T694f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T1188c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T694c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T691f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].resized_area */
extern T0* T690f2(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].copy_data */
extern void T690f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RETRY_INSTRUCTION].move_data */
extern void T690f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].overlapping_move */
extern void T690f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].non_overlapping_move */
extern void T690f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T690c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T691f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T1187c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T691c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T688f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].resized_area */
extern T0* T687f2(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].copy_data */
extern void T687f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RESULT].move_data */
extern void T687f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].overlapping_move */
extern void T687f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].non_overlapping_move */
extern void T687f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].make */
extern T0* T687c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T688f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T1186c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T688c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T686f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].resized_area */
extern T0* T685f2(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].copy_data */
extern void T685f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REAL_CONSTANT].move_data */
extern void T685f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].overlapping_move */
extern void T685f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].non_overlapping_move */
extern void T685f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T685c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T686f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T1185c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T686c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T681f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].resized_area */
extern T0* T680f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].copy_data */
extern void T680f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_OPERATOR].move_data */
extern void T680f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].overlapping_move */
extern void T680f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].non_overlapping_move */
extern void T680f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T680c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T681f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T1183c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T681c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T678f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].resized_area */
extern T0* T677f2(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].copy_data */
extern void T677f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INTEGER_CONSTANT].move_data */
extern void T677f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].overlapping_move */
extern void T677f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].non_overlapping_move */
extern void T677f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T677c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T678f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T1182c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T678c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T675f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].resized_area */
extern T0* T674f2(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].copy_data */
extern void T674f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FREE_OPERATOR].move_data */
extern void T674f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].overlapping_move */
extern void T674f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].non_overlapping_move */
extern void T674f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T674c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T675f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T1181c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T675c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T672f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].resized_area */
extern T0* T671f2(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].copy_data */
extern void T671f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CURRENT].move_data */
extern void T671f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].overlapping_move */
extern void T671f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].non_overlapping_move */
extern void T671f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].make */
extern T0* T671c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T672f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T1180c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T672c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T667f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].resized_area */
extern T0* T666f2(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].copy_data */
extern void T666f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BREAK].move_data */
extern void T666f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].overlapping_move */
extern void T666f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].non_overlapping_move */
extern void T666f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].make */
extern T0* T666c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T667f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T1178c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T667c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T664f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].resized_area */
extern T0* T663f2(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].copy_data */
extern void T663f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BOOLEAN_CONSTANT].move_data */
extern void T663f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].overlapping_move */
extern void T663f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].non_overlapping_move */
extern void T663f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T663c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T664f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T1177c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T664c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T661f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].resized_area */
extern T0* T660f2(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].copy_data */
extern void T660f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BIT_CONSTANT].move_data */
extern void T660f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].overlapping_move */
extern void T660f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].non_overlapping_move */
extern void T660f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T660c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T661f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T1176c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T661c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T658f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].resized_area */
extern T0* T657f2(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].copy_data */
extern void T657f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSITION].move_data */
extern void T657f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].overlapping_move */
extern void T657f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].non_overlapping_move */
extern void T657f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].make */
extern T0* T657c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T658f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T1175c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T658c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T654f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].resized_area */
extern T0* T653f2(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].copy_data */
extern void T653f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECURSOR_KEYWORD].move_data */
extern void T653f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].overlapping_move */
extern void T653f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].non_overlapping_move */
extern void T653f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T653c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T654f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T1173c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T654c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T651f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].resized_area */
extern T0* T650f2(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].copy_data */
extern void T650f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_KEYWORD].move_data */
extern void T650f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].overlapping_move */
extern void T650f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].non_overlapping_move */
extern void T650f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T650c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T651f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T1172c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T651c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T321f914(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T321f912(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T321f932(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T321f938(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T321f942(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T321f620(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T1128c11(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T1128f12(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T1128f13(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T321f931(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T321f952(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T321f930(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T321f929(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T321f928(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T321f927(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T321f926(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T321f925(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T321f911(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T321f924(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T321f951(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T321f940(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T286f15(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T286f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T286f13(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T713f34(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T713c33(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T713f35(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T321f883(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T286f12(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T712f34(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T712c33(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T712f35(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T286f11(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T711f42(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T711c41(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T711f43(T0* C);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T57f186(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T28f186(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T57f185(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T28f185(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T286f10(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T710f43(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T710c42(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T710f44(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T286f9(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T709f43(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T709c42(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T709f44(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T286f8(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T659f30(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T659c29(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T659f31(T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T57f172(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T28f172(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T57f184(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T28f184(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T57f183(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T28f183(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T57f182(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T28f182(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T57f181(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T28f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T57f180(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T28f180(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T57f179(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T28f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T57f178(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T28f178(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T286f7(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T708f34(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T321f886(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T708c33(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T708f35(T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T321f890(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T286f6(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T707f38(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T321f885(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T707c37(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T707f39(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T321f649(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T321f647(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].force_new */
extern void T302f54(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].resize */
extern void T302f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].clashes_resize */
extern void T302f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].key_storage_resize */
extern void T302f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].item_storage_resize */
extern void T302f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].slots_resize */
extern void T302f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].new_capacity */
extern T6 T302f36(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].found_key */
extern T0* T302f34(T0* C);
/* ET_EIFFEL_PARSER.strings */
extern unsigned char ge986os18402;
extern T0* ge986ov18402;
extern T0* T321f863(T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T321f873(T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T321f1749(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T599f15(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T599f8(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern unsigned char ge986os18403;
extern T0* ge986ov18403;
extern T0* T321f861(T0* C);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T321f644(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T321f1748(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T321f950(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T286f5(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T603f34(T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T57f177(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T28f177(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T57f176(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T28f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T57f175(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T28f175(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T57f174(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T28f174(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T57f173(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T28f173(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T286f4(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T706f37(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T321f884(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T706c36(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T706f38(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T321f949(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T286f114(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T718f36(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T718c35(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T718f37(T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T57f190(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T28f190(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T57f189(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T28f189(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T321f948(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T286f113(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T717f36(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T717c35(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T717f37(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T57f188(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T28f188(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T286f3(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T673f48(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T673c47(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T673f10(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T673f49(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T673f50(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T321f941(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T321f947(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T321f946(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T286f112(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T182f29(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T182c40(void);
/* ET_EIFFEL_PARSER.use_reference_keyword */
extern T1 T321f791(T0* C);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T286f111(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T652f19(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T286f110(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T286f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge794os12922;
extern T0* ge794ov12922;
extern T0* T160f760(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T182c74(void);
/* ET_EIFFEL_PARSER.use_attribute_keyword */
extern T1 T321f787(T0* C);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T286f108(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge794os12971;
extern T0* ge794ov12971;
extern T0* T160f759(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T182c73(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T286f107(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T182c39(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T286f106(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T286f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge794os12953;
extern T0* ge794ov12953;
extern T0* T160f757(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T182c71(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T286f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge794os12944;
extern T0* ge794ov12944;
extern T0* T160f756(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T182c70(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T286f103(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge794os12939;
extern T0* ge794ov12939;
extern T0* T160f755(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T182c69(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T286f102(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T182c38(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T286f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T286f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T286f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T286f98(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T286f97(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge794os12947;
extern T0* ge794ov12947;
extern T0* T160f752(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T182c66(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T286f96(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T286f95(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T679f48(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T679c52(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T286f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T286f93(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T286f92(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T203f32(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T286f91(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T286f90(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge794os12966;
extern T0* ge794ov12966;
extern T0* T160f749(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T182c63(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T286f89(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T230f31(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T286f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T286f87(T0* C, T0* a1);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T286f86(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T286f85(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T182c35(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T286f84(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T286f83(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T286f82(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge794os12934;
extern T0* ge794ov12934;
extern T0* T160f744(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T182c58(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T286f81(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T286f80(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge794os12921;
extern T0* ge794ov12921;
extern T0* T160f742(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T182c56(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T286f79(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge794os12973;
extern T0* ge794ov12973;
extern T0* T160f741(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T182c55(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T286f78(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T286f77(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T689f13(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T689c12(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T689f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T689f15(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T689f7(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T286f76(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T286f75(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T286f74(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T716f32(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T716c31(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T716f33(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T716f34(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T716f7(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T286f73(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T286f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T286f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T286f70(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T286f69(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T649f14(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T286f68(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T286f67(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T695f26(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T695c25(void);
/* ET_VOID.make_token */
extern void T695f27(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T695f28(T0* C);
/* ET_VOID.tokens */
extern T0* T695f7(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T286f66(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T715f32(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T715c31(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T715f33(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T715f34(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T715f7(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T286f65(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T286f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T286f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T286f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T286f61(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T286f60(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T679c51(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T286f59(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T286f58(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T679c50(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T286f57(T0* C, T0* a1);
/* ET_AST_FACTORY.new_identifier */
extern T0* T286f56(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T320f121(T0* C);
/* DS_HASH_TABLE [INTEGER_32, STRING_8].replace_found_item */
extern void T302f60(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.strings */
extern T0* T320f123(T0* C);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T320f125(T0* C);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T320f157(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T320f92(T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern T0* T320f122(T0* C);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T321f887(T0* C);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T286f55(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T286f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T286f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T286f52(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T286f51(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge794os12943;
extern T0* ge794ov12943;
extern T0* T160f729(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T182c43(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T286f50(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T286f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T286f2(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T321f945(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T286f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T286f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T286f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T286f45(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T286f44(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T469f57(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T286f43(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T692f59(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T692c69(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T692f70(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T286f42(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T286f41(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T692c68(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T286f40(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T692c67(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T286f39(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T469c59(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T286f38(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T692c66(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T321f628(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T321f944(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T321f943(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T286f37(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.tilde_symbol */
extern unsigned char ge794os12914;
extern T0* ge794ov12914;
extern T0* T160f721(T0* C);
/* ET_SYMBOL.make_tilde */
extern T0* T469c67(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T286f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T286f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T286f34(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T470f84(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T286f33(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T286f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T286f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T286f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T286f29(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T703f12(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T286f28(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T286f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T286f26(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge794os12900;
extern T0* ge794ov12900;
extern T0* T160f716(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T469c62(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T286f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T160f715(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T698c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T698f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T698f3(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T286f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge794os12902;
extern T0* ge794ov12902;
extern T0* T160f714(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T469c61(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T286f23(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T692c65(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T286f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T692c64(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T286f21(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T469c56(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T286f20(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T692c63(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T286f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T692c62(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T286f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T692c61(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T286f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T692c60(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T286f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T692c58(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T321f627(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T321f923(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T57f171(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T28f171(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.terminate */
extern void T321f939(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T321f853(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T321f922(T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T321f852(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T321f851(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T321f921(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T321f910(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T321f919(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T321f937(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T321f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T321f1726(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T903f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T930f6(T0* C);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T934f6(T0* C);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T888f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T824f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T830f6(T0* C);
/* SPECIAL [ET_TYPE].clear_all */
extern void T562f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T983f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T950f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T786f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T793f6(T0* C);
/* SPECIAL [ET_QUERY].clear_all */
extern void T553f6(T0* C);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T547f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T839f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T844f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T723f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T789f6(T0* C);
/* SPECIAL [ET_PARENT].clear_all */
extern void T784f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T964f6(T0* C);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T722f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T749f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T952f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T956f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T981f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T885f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T841f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T875f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T877f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T772f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T788f6(T0* C);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T730f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T898f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T909f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T544f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T735f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T744f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T741f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T733f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T720f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T907f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T751f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T756f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T754f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T846f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T868f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T869f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T766f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T794f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T805f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T728f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T833f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T851f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T795f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T499f6(T0* C);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T482f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T787f6(T0* C);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T800f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T924f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T926f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T913f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T724f6(T0* C);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T815f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T747f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T726f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T821f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T819f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T760f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T763f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T768f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T777f6(T0* C);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T513f6(T0* C);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T842f6(T0* C);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T801f6(T0* C);
/* SPECIAL [ET_CLIENT_ITEM].clear_all */
extern void T809f6(T0* C);
/* SPECIAL [ET_CLASS].clear_all */
extern void T458f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T936f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T942f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T945f6(T0* C);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T940f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T502f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T978f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T902f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T985f6(T0* C);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T837f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T862f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T996f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T994f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T1008f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T1006f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T783f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T472f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T917f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T704f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T701f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T699f6(T0* C);
/* SPECIAL [ET_VOID].clear_all */
extern void T696f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T693f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T690f6(T0* C);
/* SPECIAL [ET_RESULT].clear_all */
extern void T687f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T685f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T682f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T680f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T677f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T674f6(T0* C);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T671f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T669f6(T0* C);
/* SPECIAL [ET_BREAK].clear_all */
extern void T666f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T663f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T660f6(T0* C);
/* SPECIAL [ET_POSITION].clear_all */
extern void T657f6(T0* C);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T655f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T653f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T650f6(T0* C);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T647f6(T0* C);
/* ET_EIFFEL_PARSER.abort */
extern void T321f913(T0* C);
/* ET_EIFFEL_PARSER.eiffel_buffer */
extern unsigned char ge988os18573;
extern T0* ge988ov18573;
extern T0* T321f597(T0* C);
/* KL_STANDARD_FILES.input */
extern unsigned char ge306os9925;
extern T0* ge306ov9925;
extern T0* T75f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T1127c19(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T1127f23(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T1127f26(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T1127f14(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T1127f25(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.std */
extern T0* T321f857(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T321f907(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T638f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T638f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T637f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T637f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER_32].wipe_out */
extern void T634f9(T0* C);
/* DS_ARRAYED_STACK [INTEGER_32].clear_items */
extern void T634f14(T0* C, T6 a1, T6 a2);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T126f26(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T321f907p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T321f907p0(T0* C);
/* KL_EIFFEL_COMPILER.is_se */
extern unsigned char ge385os25632;
extern T1 ge385ov25632;
extern T1 T641f1(T0* C);
/* KL_EIFFEL_COMPILER.vendor */
extern unsigned char ge385os25623;
extern T0* ge385ov25623;
extern T0* T641f2(T0* C);
/* ET_EIFFEL_PARSER.eiffel_compiler */
extern unsigned char ge322os18572;
extern T0* ge322ov18572;
extern T0* T321f844(T0* C);
/* KL_EIFFEL_COMPILER.default_create */
extern T0* T641c5(void);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T321f839(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern unsigned char ge986os18433;
extern T0* ge986ov18433;
extern T0* T321f869(T0* C);
/* ET_EIFFEL_PARSER.error_handler */
extern T0* T321f835(T0* C);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T321f900(T0* C, T0* a1);
/* ET_CLASS.set_parsed */
extern void T60f157(T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T319f20(T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T60f205(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T319f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].extend */
extern void T629f70(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put */
extern void T629f71(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T319f25(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T628f40(T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_assertions_error */
extern void T729f28(T0* C);
/* ET_INVARIANTS.set_assertions_checked */
extern void T729f27(T0* C);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T28f292(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T571c710(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T28f81(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T57f292(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T57f81(T0* C, T0* a1);
/* ET_INVARIANTS.assertion */
extern T0* T729f9(T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T729f10(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.set_supplier_handler */
extern void T628f39(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T319f24(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.check_procedure_validity */
extern void T319f27(T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_PROCEDURE].wipe_out */
extern void T630f45(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].slots_wipe_out */
extern void T630f52(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].clashes_wipe_out */
extern void T630f51(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_wipe_out */
extern void T630f50(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_wipe_out */
extern void T630f49(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].move_all_cursors_after */
extern void T630f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T1165f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_PROCEDURE].set_position */
extern void T1165f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].forth */
extern void T630f44(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_forth */
extern void T630f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].add_traversing_cursor */
extern void T630f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].remove_traversing_cursor */
extern void T630f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_item */
extern T6 T630f25(T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_procedure_validity */
extern void T319f30(T0* C, T0* a1, T1 a2);
/* ET_FEATURE_CHECKER.check_precursor_feature_validity */
extern void T628f46(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_PROCEDURE].item_for_iteration */
extern T0* T630f17(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_item */
extern T0* T630f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_item */
extern T0* T630f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].after */
extern T1 T630f36(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_after */
extern T1 T630f18(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].start */
extern void T630f43(T0* C);
/* DS_HASH_SET [ET_PROCEDURE].cursor_start */
extern void T630f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].cursor_off */
extern T1 T630f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].is_empty */
extern T1 T630f23(T0* C);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T319f28(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T628f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.assertion */
extern T0* T843f7(T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T843f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T628f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.assertion */
extern T0* T838f7(T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T838f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T628f42(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.set_precursor_procedures */
extern void T628f43(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_query_validity */
extern void T319f26(T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].wipe_out */
extern void T631f45(T0* C);
/* DS_HASH_SET [ET_QUERY].slots_wipe_out */
extern void T631f52(T0* C);
/* DS_HASH_SET [ET_QUERY].clashes_wipe_out */
extern void T631f51(T0* C);
/* DS_HASH_SET [ET_QUERY].key_storage_wipe_out */
extern void T631f50(T0* C);
/* DS_HASH_SET [ET_QUERY].item_storage_wipe_out */
extern void T631f49(T0* C);
/* DS_HASH_SET [ET_QUERY].move_all_cursors_after */
extern void T631f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_next_cursor */
extern void T1166f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_QUERY].set_position */
extern void T1166f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].forth */
extern void T631f44(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_forth */
extern void T631f47(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].add_traversing_cursor */
extern void T631f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].remove_traversing_cursor */
extern void T631f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].clashes_item */
extern T6 T631f25(T0* C, T6 a1);
/* ET_IMPLEMENTATION_CHECKER.check_precursor_query_validity */
extern void T319f29(T0* C, T0* a1, T1 a2);
/* DS_HASH_SET [ET_QUERY].item_for_iteration */
extern T0* T631f17(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_item */
extern T0* T631f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].item_storage_item */
extern T0* T631f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].after */
extern T1 T631f36(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_after */
extern T1 T631f18(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].start */
extern void T631f43(T0* C);
/* DS_HASH_SET [ET_QUERY].cursor_start */
extern void T631f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].cursor_off */
extern T1 T631f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].is_empty */
extern T1 T631f23(T0* C);
/* ET_FEATURE_CHECKER.set_precursor_queries */
extern void T628f41(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.current_system */
extern T0* T319f13(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T319f22(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T319f21(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T319f11(T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T60f204(T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T313f2(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T187f17(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T1033f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T628f88(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T628f97(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T628f146(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T64f547(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T64f602(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T64f646(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T61f742(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T61f767(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T211f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T211f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T211f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T211f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T211f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T211f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T211f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T211f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T211f62(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].resize */
extern T0* T507f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].resized_area */
extern T0* T506f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].copy_data */
extern void T506f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].move_data */
extern void T506f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].overlapping_move */
extern void T506f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].non_overlapping_move */
extern void T506f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T211f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T211f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T211f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T211f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T211f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T211f33(T0* C);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T1033f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T1033f22(T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T265f5(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T628f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T628f52(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T628f57(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T628f56(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T628f55(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_supplier */
extern void T628f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T632f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T628f62(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T628f61(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T187f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T28f224(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T571c642(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T28f46(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T57f224(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T57f46(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge249os1738;
extern T0* ge249ov1738;
extern T0* T187f11(T0* C);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T28f223(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T571c641(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T57f223(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T762f9(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T762f8(T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T187f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T28f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T571c640(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T28f45(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T57f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T57f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T28f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T571c639(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T28f44(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T57f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T57f44(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T28f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T571c638(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T57f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T628f54(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_argument_supplier */
extern void T628f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T632f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T628f59(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T628f58(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T64f269(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T64f276(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T64f286(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T64f285(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T64f284(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_supplier */
extern void T64f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T64f294(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T64f293(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T64f283(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_argument_supplier */
extern void T64f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T64f291(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T64f287(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T61f743(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T61f768(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T61f798(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine */
extern void T61f805(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_internal_routine_body_declaration */
extern void T61f820(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_compound */
extern void T61f826(T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T61f850(T0* C, T0* a1);
/* ET_C_GENERATOR.reset_rescue_data */
extern void T61f825(T0* C);
/* ET_C_GENERATOR.print_malloc_current */
extern void T61f809(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_trace_message_call */
extern void T61f807(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.is_query */
extern T1 T228f26(T0* C);
/* ET_DYNAMIC_FEATURE.is_query */
extern T1 T174f40(T0* C);
/* ET_C_GENERATOR.print_unindented_feature_info_message_call */
extern void T61f821(T0* C, T0* a1);
/* ET_C_GENERATOR.argument_type_set */
extern T0* T61f356(T0* C, T6 a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T61f801(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T212f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T212f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T212f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T212f47(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T212f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T212f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T212f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T212f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T212f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T212f46(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T61f806(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T1033f11(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T628f50(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T628f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T64f270(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T64f277(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T61f744(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T61f769(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T1033f17(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T628f64(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T628f73(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_result_supplier */
extern void T628f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T632f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T628f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T64f271(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T64f278(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_supplier */
extern void T64f289(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T64f288(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T61f745(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T61f770(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T61f799(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T1033f18(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T628f65(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T628f74(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T64f272(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T64f279(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T61f746(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T61f771(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T1033f19(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T628f66(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T628f75(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T64f273(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T64f280(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T61f747(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T61f772(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T1033f20(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T628f67(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T628f76(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T64f274(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T64f281(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T61f748(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T61f773(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T1033f21(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T628f68(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T628f77(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T64f275(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T64f282(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_validity */
extern void T64f290(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_tuple_procedure_validity */
extern void T64f305(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_set_object_comparison */
extern void T64f333(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_reference */
extern void T64f332(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_formal_argument_dynamic_types */
extern void T64f334(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_real_64 */
extern void T64f331(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_real_32 */
extern void T64f330(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_pointer */
extern void T64f329(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_64 */
extern void T64f328(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_32 */
extern void T64f327(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_16 */
extern void T64f326(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_natural_8 */
extern void T64f325(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_64 */
extern void T64f324(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_32 */
extern void T64f323(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_16 */
extern void T64f322(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_integer_8 */
extern void T64f321(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_character_32 */
extern void T64f320(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_character_8 */
extern void T64f319(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_put_boolean */
extern void T64f318(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_special_procedure_validity */
extern void T64f304(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_put */
extern void T64f317(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_make */
extern void T64f316(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_real_procedure_validity */
extern void T64f303(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_set_item */
extern void T64f315(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_procedure_procedure_validity */
extern void T64f302(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure_call */
extern void T64f314(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_pointer_procedure_validity */
extern void T64f301(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_set_item */
extern void T64f313(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_integer_procedure_validity */
extern void T64f300(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_set_item */
extern void T64f312(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_identified_procedure_validity */
extern void T64f299(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_object_id_free */
extern void T64f311(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_character_procedure_validity */
extern void T64f298(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_set_item */
extern void T64f310(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_boolean_procedure_validity */
extern void T64f297(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_set_item */
extern void T64f309(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_any_procedure_validity */
extern void T64f296(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_copy */
extern void T64f308(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_copy */
extern void T64f307(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_builtin_unknown */
extern T1 T853f45(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T64f282p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T61f749(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T61f774(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T61f800(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.flush_to_cpp_file */
extern void T61f818(T0* C);
/* ET_C_GENERATOR.print */
extern void T61f802(T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T1459f5(T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1575f9(T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1575f12(T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T1459f2(T0* C);
/* STD_FILES.output */
extern unsigned char ge2166os30951;
extern T0* ge2166ov30951;
extern T0* T1459f3(T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1575c7(T0* a1);
/* CONSOLE.set_write_mode */
extern void T1575f11(T0* C);
/* CONSOLE.console_def */
extern T14 T1575f4(T0* C, T6 a1);
/* CONSOLE.make */
extern void T1575f10(T0* C, T0* a1);
/* STRING_8.out */
extern T0* T17f34(T0* C);
/* ET_C_GENERATOR.io */
extern unsigned char ge2os44;
extern T0* ge2ov44;
extern T0* T61f359(T0* C);
/* STD_FILES.set_output_default */
extern void T1459f6(T0* C);
/* STD_FILES.default_create */
extern T0* T1459c4(void);
/* ET_C_GENERATOR.print_external_dllwin_body */
extern void T61f817(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T61f816(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING_8].item */
extern T0* T88f16(T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T46c11(T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T61f815(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T61f814(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_c_prototype */
extern void T61f813(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T61f812(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_procedure_body */
extern void T61f824(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_procedure_body */
extern void T61f849(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_reference_body */
extern void T61f895(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_64_body */
extern void T61f894(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_typed_item_body */
extern void T61f897(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_real_32_body */
extern void T61f893(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_pointer_body */
extern void T61f892(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_64_body */
extern void T61f891(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_32_body */
extern void T61f890(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_16_body */
extern void T61f889(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_natural_8_body */
extern void T61f888(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_64_body */
extern void T61f887(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_32_body */
extern void T61f886(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_16_body */
extern void T61f885(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_integer_8_body */
extern void T61f884(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_32_body */
extern void T61f883(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_character_8_body */
extern void T61f882(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_put_boolean_body */
extern void T61f881(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_procedure_body */
extern void T61f848(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_real_procedure_body */
extern void T61f847(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_procedure_body */
extern void T61f846(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_character_procedure_body */
extern void T61f845(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_procedure_procedure_body */
extern void T61f844(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_pointer_procedure_body */
extern void T61f843(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_procedure_body */
extern void T61f842(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_procedure_body */
extern void T61f841(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_procedure_body */
extern void T61f840(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_body */
extern void T61f823(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_type_function_body */
extern void T61f839(T0* C, T0* a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T61f853(T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T61f852(T0* C);
/* ET_C_GENERATOR.print_builtin_type_generic_parameter_body */
extern void T61f880(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generating_type_body */
extern void T61f879(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_tuple_function_body */
extern void T61f838(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern void T61f878(T0* C, T0* a1);
/* Creation of agent #1 in feature ET_C_GENERATOR.print_builtin_tuple_reference_item_body */
extern T0* T61f878ac1(T0* a1, T6 a2, T0* a3, T0* a4, T1 a5);
/* ET_C_GENERATOR.print_builtin_tuple_real_64_item_body */
extern void T61f877(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_typed_item_body */
extern void T61f896(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_real_32_item_body */
extern void T61f876(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_pointer_item_body */
extern void T61f875(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_64_item_body */
extern void T61f874(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_32_item_body */
extern void T61f873(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_16_item_body */
extern void T61f872(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_natural_8_item_body */
extern void T61f871(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_item_code_body */
extern void T61f870(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_64_item_body */
extern void T61f869(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_32_item_body */
extern void T61f868(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_16_item_body */
extern void T61f867(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_integer_8_item_body */
extern void T61f866(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_32_item_body */
extern void T61f865(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_character_8_item_body */
extern void T61f864(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_tuple_boolean_item_body */
extern void T61f863(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_special_function_body */
extern void T61f837(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T61f862(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_sized_real_function_body */
extern void T61f836(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T61f861(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_integer_function_body */
extern void T61f835(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_sized_character_function_body */
extern void T61f834(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_external_builtin_pointer_function_body */
extern void T61f833(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T61f860(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_platform_function_body */
extern void T61f832(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_identified_function_body */
extern void T61f831(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_function_function_body */
extern void T61f830(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_boolean_function_body */
extern void T61f829(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_arguments_function_body */
extern void T61f828(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_arguments_argument_body */
extern void T61f859(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_builtin_any_function_body */
extern void T61f827(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T61f858(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T61f857(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T61f856(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T61f855(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type2_body */
extern void T61f854(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T61f851(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.is_empty */
extern T1 T193f7(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_function */
extern T1 T853f44(T0* C);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T61f811(T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T600f2(T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T61f362(T0* C);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T61f810(T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T61f822(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T221f297(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T221f296(T0* C, T6 a1);
/* ET_C_GENERATOR.print_feature_info_message_call */
extern void T61f808(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T221f295(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T1033f43(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T1033f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T28f426(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T571c841(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T28f118(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T57f426(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T57f118(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T28f425(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T571c840(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T958f7(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T57f425(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T962f25(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T958f13(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T652f22(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T28f424(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T571c839(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T57f424(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T28f423(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T571c838(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T28f149(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T57f423(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T57f149(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T1033f8(T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T1033f87(T0* C);
/* ET_PRECURSOR_CHECKER.universe */
extern T0* T1033f7(T0* C);
/* ET_IDENTIFIER.class_name */
extern T0* T129f94(T0* C);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T628f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T628f155(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_QUERY].force_last */
extern void T631f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].slots_put */
extern void T631f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].clashes_put */
extern void T631f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].slots_item */
extern T6 T631f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].hash_position */
extern T6 T631f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].resize */
extern void T631f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].clashes_resize */
extern void T631f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_resize */
extern void T631f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_resize */
extern void T631f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].key_storage_item */
extern T0* T631f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].slots_resize */
extern void T631f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].new_capacity */
extern T6 T631f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_QUERY].item_storage_put */
extern void T631f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_QUERY].search_position */
extern void T631f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_QUERY].key_equality_tester */
extern T0* T631f33(T0* C);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T628f195(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T28f362(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T571c780(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T57f362(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T28f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T571c779(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T57f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T28f360(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T571c778(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T28f117(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T57f360(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T57f117(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T64f548(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T64f603(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T64f647(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T228f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T174f39(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T227f8(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].resize */
extern T0* T1472f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].resized_area */
extern T0* T1471f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].copy_data */
extern void T1471f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].move_data */
extern void T1471f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].overlapping_move */
extern void T1471f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].non_overlapping_move */
extern void T1471f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1471c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1472f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR].make_area */
extern T0* T1555c2(T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge939os15165;
extern T0* ge939ov15165;
extern T0* T227f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1472c3(void);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T227f5(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T227f7(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T227c6(T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T228f58(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T228c50(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T228f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T228f40(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_identified_feature */
extern T6 T228f39(T0* C, T6 a1);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T61f750(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T61f775(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T1033f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T628f109(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T628f156(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T28f363(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T571c781(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T28f119(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T57f363(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T57f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T628f200(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T628f199(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T628f198(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T628f197(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T628f196(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T64f549(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T64f604(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T64f652(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T64f651(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T64f650(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T64f649(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T64f648(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T61f751(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T61f776(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T226f7(T0* C);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T1033f45(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T628f110(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T628f157(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T64f550(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T64f605(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T61f752(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T61f777(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T1033f46(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T628f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T628f158(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T64f551(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T64f606(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T61f753(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T61f778(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T1033f47(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T628f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T628f159(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T282f40(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T282f9(T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_empty */
extern T1 T282f25(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T64f552(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T64f607(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T61f754(T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T61f779(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T1033f48(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T628f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T628f160(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_left */
extern void T971f22(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1544f13(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1544c12(T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T282f26(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.set_right */
extern void T971f21(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T64f553(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T64f608(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T61f755(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T61f780(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T1033f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T628f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T628f161(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T28f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T571c782(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T470f44(T0* C);
/* ET_SYMBOL.text */
extern T0* T469f15(T0* C);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T28f120(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T57f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T57f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T628f201(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T64f554(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T64f609(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T64f653(T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T61f756(T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T61f781(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T470f10(T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T469f10(T0* C);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T1033f50(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T628f115(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T628f162(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T64f555(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T64f610(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T61f757(T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T61f782(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T1033f51(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T628f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T628f163(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T28f365(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T571c783(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T28f121(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T57f365(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T57f121(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T64f556(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T64f611(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T61f758(T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T61f783(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T1033f59(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T628f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T628f164(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T64f564(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T64f619(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T61f759(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T61f784(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].force_last */
extern void T214f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_put */
extern void T214f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_put */
extern void T214f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_item */
extern T6 T214f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].hash_position */
extern T6 T214f29(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.hash_code */
extern T6 T979f13(T0* C);
/* DS_HASH_SET [ET_INLINE_CONSTANT].resize */
extern void T214f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].clashes_resize */
extern void T214f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_resize */
extern void T214f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_resize */
extern void T214f62(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_CONSTANT].resize */
extern T0* T520f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_CONSTANT].resized_area */
extern T0* T519f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_CONSTANT].copy_data */
extern void T519f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_CONSTANT].move_data */
extern void T519f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].overlapping_move */
extern void T519f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_CONSTANT].non_overlapping_move */
extern void T519f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_storage_item */
extern T0* T214f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].slots_resize */
extern void T214f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].new_capacity */
extern T6 T214f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].item_storage_put */
extern void T214f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_INLINE_CONSTANT].search_position */
extern void T214f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_INLINE_CONSTANT].key_equality_tester */
extern T0* T214f33(T0* C);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T1033f52(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T628f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T628f165(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T628f203(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T628f202(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T64f557(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T64f612(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T64f654(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T64f538(T0* C, T0* a1);
/* ET_C_GENERATOR.process_manifest_type */
extern void T61f760(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T61f785(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T1033f53(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T1033f86(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T628f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T628f166(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T628f208(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T628f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T628f237(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T28f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T571c807(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T28f132(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T57f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T57f132(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T28f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T571c806(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T57f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T28f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T571c805(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T28f131(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T57f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T57f131(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T28f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T571c804(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T57f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T993f13(T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T993f8(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T28f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T571c803(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T28f130(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T57f385(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T57f130(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T28f384(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T571c802(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T57f384(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T176f30(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T176f20(T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T628f236(T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1548f7(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1549c5(T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1548c6(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1577f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_area */
extern T0* T1582c2(T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1576c2(T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge512os15165;
extern T0* ge512ov15165;
extern T0* T1548f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1577c2(void);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T275f15(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T275f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T545f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_position */
extern void T545f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T275f7(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T275f6(T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T628f207(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_local_supplier */
extern void T628f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T632f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T628f234(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T28f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T571c795(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T28f124(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T57f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T57f124(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T28f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T571c794(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T57f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T275f9(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T28f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T571c793(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T28f126(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T57f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T57f126(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T28f374(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T571c792(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T28f125(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T57f374(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T57f125(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T28f373(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T571c791(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T57f373(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_FEATURE_CHECKER.report_inline_agent_result_supplier */
extern void T628f206(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T632f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T628f205(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T628f204(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_inline_agent_argument_supplier */
extern void T628f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T632f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T628f232(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T28f372(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T571c790(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T57f372(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T28f371(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T571c789(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T57f371(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T28f370(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T571c788(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T57f370(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T28f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T571c787(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T57f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T275f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T275f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T275f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T275f10(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T64f558(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T64f613(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T64f659(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T64f690(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T64f706(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_agent_closed_operands_dynamic_types */
extern void T64f713(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T64f712(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T243f65(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T64f689(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T64f688(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T64f658(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_supplier */
extern void T64f687(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T64f686(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_supplier */
extern void T64f657(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T64f656(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T64f655(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_argument_supplier */
extern void T64f685(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T64f684(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T61f761(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T61f787(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T61f804(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T201f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T201f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].resize */
extern T0* T497f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].resized_area */
extern T0* T496f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT].copy_data */
extern void T496f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT].move_data */
extern void T496f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].overlapping_move */
extern void T496f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].non_overlapping_move */
extern void T496f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T201f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T201f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T61f786(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T61f803(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_trace_message_call */
extern void T61f819(T0* C, T0* a1, T1 a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T1033f54(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T628f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T628f167(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T64f559(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T64f614(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T61f762(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T61f789(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T61f788(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T1033f55(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T628f121(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T628f168(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T64f560(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T64f615(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T61f763(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T61f791(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T61f790(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T1033f56(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T628f122(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T628f169(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T628f209(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T628f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T64f561(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T64f616(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T64f660(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T64f691(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T61f764(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T61f793(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T61f792(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T1033f57(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T628f123(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T628f170(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T64f562(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T64f617(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T61f765(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T61f795(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T61f794(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T1033f58(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T628f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T628f171(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T64f563(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T64f618(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T61f766(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T61f797(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T61f796(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_formal_parameter_type */
extern void T1039f16(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_formal_parameter_type */
extern void T1038f8(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_formal_parameter_type */
extern void T1037f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T1034f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T1032f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T1031f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T1030f19(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T1029f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T1028f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T1017f28(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T1017f31(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T28f400(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T571c814(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T57f400(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T28f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T571c817(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T57f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T28f398(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T57f398(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T28f397(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T571c816(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T57f397(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1279f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1279f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1279f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1279f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].put */
extern void T1412f51(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1412f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_put */
extern void T1412f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_put */
extern void T1412f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1412f27(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1412f23(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1412f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search_position */
extern void T1412f58(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1412f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T761f58(T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T753f57(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1412f25(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].resize */
extern void T1412f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1412f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1412f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1412f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].slots_resize */
extern void T1412f52(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1280f22(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1279f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1279f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found_item */
extern T6 T1412f33(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1412f35(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].found */
extern T1 T1412f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_FORMAL_PARAMETER].search */
extern void T1412f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T28f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T571c815(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T57f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T1016f20(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T187f21(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_class_type */
extern void T1039f4(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.check_class_type_validity */
extern void T1039f11(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.set_fatal_error */
extern void T1039f12(T0* C);
/* ET_CLASS_TYPE_CHECKER2.process_class_type */
extern void T1038f5(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.check_class_type_validity */
extern void T1038f6(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.set_fatal_error */
extern void T1038f7(T0* C);
/* ET_CLASS_TYPE_CHECKER1.process_class_type */
extern void T1037f4(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.check_class_type_validity */
extern void T1037f11(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.set_fatal_error */
extern void T1037f12(T0* C);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T1034f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T1034f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T1034f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1123f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1123f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1123f11(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T1032f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T1032f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T28f229(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T571c647(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T28f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T57f229(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T57f50(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T1032f5(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.current_system */
extern T0* T1032f4(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T1032f16(T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T1031f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T1031f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T1031f5(T0* C);
/* ET_PARENT_CHECKER2.current_system */
extern T0* T1031f4(T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T1031f12(T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T1030f15(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T1030f25(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T1029f11(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T1029f12(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T1028f10(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T1028f11(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T1028f12(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T1017f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T1017f24(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T28f228(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T571c646(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T28f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T57f228(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T57f49(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T761f13(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T182f18(T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T753f11(T0* C);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T28f227(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T571c645(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T57f227(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T761f12(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T182f6(T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T753f10(T0* C);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T28f226(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T571c644(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T28f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T57f226(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T57f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T28f225(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T571c643(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T28f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T57f225(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T57f47(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T1016f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T1016f12(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T1016f6(T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T1016f13(T0* C);
/* ET_PARENT_CHECKER1.current_system */
extern T0* T1016f5(T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T187f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T187f22(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_generic_class_type */
extern void T1039f6(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_generic_class_type */
extern void T1038f9(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_generic_class_type */
extern void T1037f6(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_generic_class_type */
extern void T1034f12(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_generic_class_type */
extern void T1032f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_generic_class_type */
extern void T1031f10(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_generic_class_type */
extern void T1030f18(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_generic_class_type */
extern void T1029f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_generic_class_type */
extern void T1028f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_generic_class_type */
extern void T1017f30(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_generic_class_type */
extern void T1016f11(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_generic_class_type */
extern void T187f18(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T1033f12(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T628f69(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T628f78(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T64f335(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T64f339(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.print */
extern void T64f346(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.io */
extern T0* T64f114(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T64f345(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SYSTEM.string_type */
extern T0* T58f51(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.mark_string_type_alive */
extern void T64f344(T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.character_type */
extern T0* T58f53(T0* C, T0* a1);
/* ET_DYNAMIC_SYSTEM.special_character_type */
extern T0* T58f52(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.universe_impl */
extern T0* T64f109(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_validity */
extern void T64f343(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_type_function_validity */
extern void T64f360(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_type_id */
extern void T64f484(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_name */
extern void T64f483(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter_count */
extern void T64f482(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generic_parameter */
extern void T64f481(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generating_type */
extern void T64f480(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_tuple_function_validity */
extern void T64f359(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_reference_item */
extern void T64f479(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_real_64_item */
extern void T64f478(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_real_32_item */
extern void T64f477(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_pointer_item */
extern void T64f476(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_object_comparison */
extern void T64f475(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_64_item */
extern void T64f474(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_32_item */
extern void T64f473(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_16_item */
extern void T64f472(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_natural_8_item */
extern void T64f471(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_item_code */
extern void T64f470(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_64_item */
extern void T64f469(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_32_item */
extern void T64f468(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_16_item */
extern void T64f467(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_integer_8_item */
extern void T64f466(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_count */
extern void T64f465(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_character_32_item */
extern void T64f464(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_character_8_item */
extern void T64f463(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_tuple_boolean_item */
extern void T64f462(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_special_function_validity */
extern void T64f358(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T64f461(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_element_size */
extern void T64f460(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_count */
extern void T64f459(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_base_address */
extern void T64f458(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_aliased_resized_area */
extern void T64f457(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_real_function_validity */
extern void T64f357(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_real */
extern void T64f456(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer_64 */
extern void T64f455(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer */
extern void T64f454(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_to_double */
extern void T64f453(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_times */
extern void T64f452(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_power */
extern void T64f451(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_plus */
extern void T64f450(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_out */
extern void T64f449(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_opposite */
extern void T64f448(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_minus */
extern void T64f447(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_lt */
extern void T64f446(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_item */
extern void T64f445(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_identity */
extern void T64f444(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_64 */
extern void T64f443(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_32 */
extern void T64f442(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_divide */
extern void T64f441(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_64 */
extern void T64f440(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_32 */
extern void T64f439(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_pointer_function_validity */
extern void T64f356(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_to_integer_32 */
extern void T64f438(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_plus */
extern void T64f437(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_out */
extern void T64f436(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_item */
extern void T64f435(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_hash_code */
extern void T64f434(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_platform_function_validity */
extern void T64f355(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_wide_character_bytes */
extern void T64f433(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_real_bytes */
extern void T64f432(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_pointer_bytes */
extern void T64f431(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_windows */
extern void T64f430(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_vms */
extern void T64f429(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_unix */
extern void T64f428(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_thread_capable */
extern void T64f427(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_mac */
extern void T64f426(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_dotnet */
extern void T64f425(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_integer_bytes */
extern void T64f424(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_double_bytes */
extern void T64f423(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_character_bytes */
extern void T64f422(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_boolean_bytes */
extern void T64f421(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_integer_function_validity */
extern void T64f354(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_64 */
extern void T64f420(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_32 */
extern void T64f419(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real */
extern void T64f418(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_double */
extern void T64f417(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_32 */
extern void T64f416(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_8 */
extern void T64f415(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_times */
extern void T64f414(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_power */
extern void T64f413(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_plus */
extern void T64f412(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_opposite */
extern void T64f411(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_mod */
extern void T64f410(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_minus */
extern void T64f409(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_lt */
extern void T64f408(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_item */
extern void T64f407(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_identity */
extern void T64f406(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_divide */
extern void T64f405(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_div */
extern void T64f404(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_xor */
extern void T64f403(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_right */
extern void T64f402(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_left */
extern void T64f401(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_or */
extern void T64f400(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_not */
extern void T64f399(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_and */
extern void T64f398(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_64 */
extern void T64f397(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_32 */
extern void T64f396(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_16 */
extern void T64f395(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_8 */
extern void T64f394(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_64 */
extern void T64f393(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_32 */
extern void T64f392(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_16 */
extern void T64f391(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_8 */
extern void T64f390(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_identified_function_validity */
extern void T64f353(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_object_id */
extern void T64f389(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_identified_eif_id_object */
extern void T64f388(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_function_function_validity */
extern void T64f352(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T64f387(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_sized_character_function_validity */
extern void T64f351(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_32 */
extern void T64f386(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_8 */
extern void T64f385(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_natural_32_code */
extern void T64f384(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_item */
extern void T64f383(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_code */
extern void T64f382(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_boolean_function_validity */
extern void T64f350(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_xor */
extern void T64f381(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or_else */
extern void T64f380(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or */
extern void T64f379(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_not */
extern void T64f378(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_item */
extern void T64f377(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_implies */
extern void T64f376(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and_then */
extern void T64f375(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and */
extern void T64f374(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_arguments_function_validity */
extern void T64f349(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument_count */
extern void T64f373(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument */
extern void T64f372(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_builtin_any_function_validity */
extern void T64f348(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T64f371(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_actual_argument_dynamic_types */
extern void T64f485(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_twin */
extern void T64f370(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_is_equal */
extern void T64f369(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_same_type */
extern void T64f368(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_is_deep_equal */
extern void T64f367(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generator */
extern void T64f366(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type2 */
extern void T64f365(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_tagged_out */
extern void T64f364(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T64f363(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_deep_twin */
extern void T64f362(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_conforms_to */
extern void T64f361(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_builtin_unknown */
extern T1 T179f62(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T64f339p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T61f898(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T61f924(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_tuple_type */
extern void T1039f15(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.check_tuple_type_validity */
extern void T1039f17(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_tuple_type */
extern void T1038f10(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.check_tuple_type_validity */
extern void T1038f17(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_tuple_type */
extern void T1037f15(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.check_tuple_type_validity */
extern void T1037f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T1034f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T1032f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T1032f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T1031f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T1031f21(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T1030f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T1030f28(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T1029f15(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T1028f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T1017f29(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T1017f32(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T1016f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T1016f22(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T28f391(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T571c809(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T28f134(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T57f391(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T57f134(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T187f20(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T187f23(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T1033f13(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T628f70(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T628f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T28f298(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T571c716(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T28f87(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T57f298(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T57f87(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T28f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T571c715(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T28f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T57f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T57f86(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T28f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T571c714(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T28f85(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T57f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T57f85(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T713f40(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T712f40(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T28f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T571c713(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T28f84(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T57f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T57f84(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T28f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T571c712(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T28f83(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T57f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T57f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T28f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T571c711(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T28f82(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T57f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T57f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T64f336(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T64f340(T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T61f899(T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T61f925(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T61f949(T0* C, T0* a1, T1 a2);
/* ET_CALL_EXPRESSION.set_arguments */
extern void T208f30(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_name */
extern void T208f29(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T1033f14(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T628f71(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T628f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T28f299(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T571c717(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T28f88(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T57f299(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T57f88(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T64f337(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T64f341(T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T61f900(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T61f926(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T1033f15(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T628f72(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T628f81(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T64f338(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T64f342(T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T61f901(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T61f927(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T1033f69(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T628f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T628f99(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_manifest_string_validity */
extern void T628f148(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.universe_impl */
extern T0* T628f35(T0* C);
/* ET_FEATURE_CHECKER.report_string_32_constant */
extern void T628f194(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_string_8_constant */
extern void T628f193(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T64f574(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T64f629(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_string_validity */
extern void T64f673(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_32_constant */
extern void T64f695(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_8_constant */
extern void T64f694(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T61f902(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T61f928(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_string */
extern void T61f950(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T1033f60(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T628f125(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T628f172(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T628f210(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T64f565(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T64f620(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T64f661(T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T61f903(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T61f929(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T1033f74(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T628f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T628f173(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T628f211(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T64f579(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T64f634(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T64f675(T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T61f904(T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T61f930(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T1033f65(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T628f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T628f174(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_character_constant_validity */
extern void T628f212(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_32_constant */
extern void T628f241(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_character_8_constant */
extern void T628f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T64f570(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T64f625(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_character_constant_validity */
extern void T64f663(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_32_constant */
extern void T64f693(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_8_constant */
extern void T64f692(T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T61f905(T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T61f931(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character */
extern void T61f951(T0* C, T2 a1);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T1033f70(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T628f128(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T628f175(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T64f575(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T64f630(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T61f906(T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T61f932(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T1033f71(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T628f129(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T628f176(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T64f576(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T64f631(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T61f907(T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T61f933(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T1033f66(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T628f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T628f177(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_integer_constant_validity */
extern void T628f213(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T628f221(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T628f220(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T628f219(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T628f218(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T628f217(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T628f216(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T628f215(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T628f214(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T64f571(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T64f626(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_integer_constant_validity */
extern void T64f664(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T64f672(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T64f671(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T64f670(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T64f669(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T64f668(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T64f667(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T64f666(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T64f665(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T61f908(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T61f934(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T1033f67(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T628f131(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T628f178(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T64f572(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T64f627(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T61f909(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T61f935(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T1033f68(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T628f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T628f179(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T64f573(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T64f628(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T61f910(T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T61f936(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T1033f72(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T628f133(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T628f180(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_real_constant_validity */
extern void T628f222(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_real_64_constant */
extern void T628f243(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_32_constant */
extern void T628f242(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T64f577(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T64f632(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_real_constant_validity */
extern void T64f674(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_64_constant */
extern void T64f697(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_32_constant */
extern void T64f696(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T61f911(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T61f937(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T712f26(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T692f16(T0* C);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T1033f73(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T628f134(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T628f181(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T64f578(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T64f633(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T61f912(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T61f938(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T713f26(T0* C);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T1033f61(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T628f135(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T628f182(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T628f223(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T64f566(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T64f621(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T64f662(T0* C, T0* a1);
/* ET_C_GENERATOR.process_true_constant */
extern void T61f913(T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T61f939(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T1033f62(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T628f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T628f183(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T64f567(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T64f622(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T61f914(T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T61f940(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T1033f63(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T628f137(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T628f184(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T64f568(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T64f623(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T61f915(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T1033f64(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T628f138(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T628f185(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T64f569(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T64f624(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T61f916(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T1033f75(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T628f139(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T628f186(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T628f224(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T28f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T571c799(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T57f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T28f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T571c798(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T28f128(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T57f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T57f128(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.last_position */
extern T0* T1539f13(T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T746f15(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T28f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T571c797(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T28f127(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T57f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T57f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T628f245(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_create_supplier */
extern void T628f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T632f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T28f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T571c796(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T57f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T276f17(T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T60f214(T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T186f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T64f580(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T64f635(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T64f676(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T64f597(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_create_supplier */
extern void T64f596(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_create_expression */
extern void T61f917(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T61f941(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_formal_parameter */
extern void T1039f13(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_formal_parameter */
extern void T1038f11(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_formal_parameter */
extern void T1037f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T1034f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T1032f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T1031f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T1030f23(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T1029f16(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T1028f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T1017f26(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T1016f14(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T187f24(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_constrained_formal_parameter */
extern void T1039f14(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_constrained_formal_parameter */
extern void T1038f12(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_constrained_formal_parameter */
extern void T1037f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T1034f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T1032f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T1031f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T1030f24(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T1029f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T1028f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T1017f27(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T1016f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T187f25(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_bit_n */
extern void T1039f7(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_bit_n */
extern void T1038f13(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_bit_n */
extern void T1037f7(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T1034f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T1032f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T1031f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T1030f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T1030f26(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T1029f18(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T1028f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T1017f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T1017f21(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T28f300(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T571c718(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T57f300(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T1016f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T1016f23(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T28f393(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T571c811(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T28f136(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T57f393(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T57f136(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T28f392(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T571c810(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T28f135(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T57f392(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T57f135(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T187f26(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T187f30(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_bit_feature */
extern void T1039f8(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_bit_feature */
extern void T1038f14(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_bit_feature */
extern void T1037f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T1034f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T1032f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T1031f17(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T1030f17(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T1030f27(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T1029f19(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T1028f19(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T1028f22(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T28f327(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T571c745(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T57f327(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T28f326(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T571c744(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T57f326(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T1028f5(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.current_system */
extern T0* T1028f6(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T1028f24(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T774f21(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T774f88(T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T774f92(T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T1017f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T1017f22(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T28f301(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T571c719(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T57f301(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T1016f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T1016f24(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T28f394(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T571c812(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T57f394(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T187f27(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T187f31(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T187f34(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_like_feature */
extern void T1039f9(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_like_feature */
extern void T1038f15(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_like_feature */
extern void T1037f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T1034f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T1032f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T1031f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T1030f22(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T1029f20(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T1029f22(T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T894f42(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force_relation */
extern void T1308f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put_indexed_relation */
extern void T1308f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force */
extern void T1308f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put */
extern void T1308f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].put */
extern void T1446f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_put */
extern void T1446f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_put */
extern void T1446f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_put */
extern void T1446f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_item */
extern T6 T1446f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_item */
extern T6 T1446f25(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_put */
extern void T1446f54(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search_position */
extern void T1446f53(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].hash_position */
extern T6 T1446f29(T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T894f53(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_item */
extern T0* T1446f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].resize */
extern void T1446f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].clashes_resize */
extern void T1446f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].key_storage_resize */
extern void T1446f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].resize */
extern T0* T1509f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_IDENTIFIER].resized_area */
extern T0* T1508f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].copy_data */
extern void T1508f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_IDENTIFIER].move_data */
extern void T1508f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].overlapping_move */
extern void T1508f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].non_overlapping_move */
extern void T1508f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_resize */
extern void T1446f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].slots_resize */
extern void T1446f47(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].resize */
extern void T1385f17(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].capacity */
extern T6 T1308f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].count */
extern T6 T1308f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].index_of */
extern T6 T1308f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found_item */
extern T6 T1446f32(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].item_storage_item */
extern T6 T1446f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].found */
extern T1 T1446f31(T0* C);
/* DS_HASH_TABLE [INTEGER_32, ET_LIKE_IDENTIFIER].search */
extern void T1446f61(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T1028f20(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T1028f23(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T28f329(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T571c747(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T57f329(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T28f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T571c746(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T57f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T894f65(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T894f64(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T1017f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T1017f23(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T1017f25(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T28f302(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T571c720(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T57f302(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T1016f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T1016f25(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T1016f26(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T28f395(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T571c813(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T57f395(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T187f28(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T187f32(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER3.process_like_current */
extern void T1039f10(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER2.process_like_current */
extern void T1038f16(T0* C, T0* a1);
/* ET_CLASS_TYPE_CHECKER1.process_like_current */
extern void T1037f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T1034f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T1032f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T1031f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T1030f21(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T1029f21(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T1028f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T1017f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T1016f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T187f29(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T187f33(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T1033f39(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T984f15(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T1033f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T628f140(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T628f187(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T64f582(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T64f637(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T61f918(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T61f942(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T1033f76(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T628f141(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T628f188(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T628f226(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_static_supplier */
extern void T628f225(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T632f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.arguments_count */
extern T6 T949f16(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T64f581(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T64f636(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T64f677(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T174f57(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_supplier */
extern void T64f539(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T61f919(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T61f943(T0* C, T0* a1);
/* ET_C_GENERATOR.resolved_formal_parameters */
extern T0* T61f424(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T1033f77(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T628f142(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T628f189(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T64f583(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T64f638(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T61f920(T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T61f944(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T1033f80(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T628f143(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T628f190(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T628f229(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.is_procedure */
extern T1 T977f20(T0* C);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T28f383(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T571c801(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T28f129(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T57f383(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T57f129(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T628f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T628f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T628f252(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T628f257(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T28f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T571c808(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T28f133(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T57f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T57f133(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T628f251(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T628f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T977f32(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T628f228(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T628f250(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T628f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T628f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T628f227(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T28f382(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T571c800(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T57f382(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T628f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T628f255(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T628f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T628f254(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T64f586(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T64f641(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T64f682(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T64f705(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T64f711(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T64f716(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T189f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T64f704(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T64f710(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_agent */
extern void T64f715(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T235c12(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T64f703(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T64f709(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T64f681(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T64f702(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T64f701(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T64f700(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T64f680(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T64f699(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T64f708(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T64f714(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T64f717(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T64f698(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T64f707(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T61f921(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T61f946(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T61f945(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T61f952(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T899f7(T0* C);
/* ET_CALL_INSTRUCTION.set_arguments */
extern void T205f13(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_name */
extern void T205f12(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_target */
extern void T205f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T1033f78(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T980f16(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T980f13(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T628f144(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T628f191(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T177f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T628f230(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T64f584(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T64f639(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T64f678(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T61f922(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T61f947(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T1033f79(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T628f145(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T628f192(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T628f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T28f368(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T571c786(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T28f123(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T57f368(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T57f123(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T28f367(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T571c785(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T28f122(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T57f367(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T57f122(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T28f366(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T571c784(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T57f366(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T982f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T982f14(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T64f585(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T64f640(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T64f679(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T61f923(T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T61f948(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_cluster */
extern void T321f1727(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T321f1756(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T321f1799(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove */
extern void T613f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_left */
extern void T613f18(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_cursors_left */
extern void T613f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_position */
extern void T1153f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].remove_last */
extern void T613f16(T0* C);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].move_last_cursors_after */
extern void T613f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].set_next_cursor */
extern void T1153f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove */
extern void T448f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_left */
extern void T448f18(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_cursors_left */
extern void T448f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_position */
extern void T1079f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].remove_last */
extern void T448f16(T0* C);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].move_last_cursors_after */
extern void T448f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].set_next_cursor */
extern void T1079f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T321f1798(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T1120c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING_8].make_from_linear */
extern T0* T80c41(T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T22f52(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T22f28(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T22f35(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f5(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T22f27(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T22f34(T0* C, T14 a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T321f1797(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T57f202(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T1333c17(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T57f30(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T28f202(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T28f30(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T1122f29(T0* C);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T293f62(T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T293f65(T0* C, T0* a1);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T293f34(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_override */
extern void T293f67(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T293f66(T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T293f33(T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T136f53(T0* C, T0* a1);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T136f35(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T136f54(T0* C, T1 a1);
/* ET_LACE_CLUSTER.name */
extern T0* T136f21(T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T136f32(T0* C);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T71f17(T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T1122f13(T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T1122f15(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T1122f10(T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge389os9690;
extern T0* ge389ov9690;
extern T0* T71f18(T0* C);
/* KL_DIRECTORY.make */
extern void T1122f24(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T1122c24(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T1122f30(T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T1122f12(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T70f21(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T70f22(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T293f27(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T293f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING_8].go_after */
extern void T329f11(T0* C);
/* DS_HASH_SET [STRING_8].cursor_go_after */
extern void T217f73(T0* C, T0* a1);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T293f37(T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T288f134(T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1030os17840;
extern T0* ge1030ov17840;
extern T0* T288f135(T0* C);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T288f133(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T293f27p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T136f24(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T137f4(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T137f5(T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T137f3(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T136f25(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T136f24p1(T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T293f26(T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T293f26p1(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T293f39(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T136f23(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T136f23p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T136f31(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T1122f28(T0* C);
/* KL_DIRECTORY.readentry */
extern void T1122f33(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T1122f22(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T1122f17(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T1122f18(T0* C);
/* KL_DIRECTORY.open_read */
extern void T1122f27(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T1122f32(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T1122f20(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T1122f14(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T1122f23(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T1122f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T321f879(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge982os20235;
extern T0* ge982ov20235;
extern T0* T321f888(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T321f878(T0* C);
/* ET_XACE_CLUSTER.set_preparsed */
extern void T293f61(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_preparsed */
extern void T136f52(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.process_cluster */
extern void T320f133(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster */
extern void T320f138(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters */
extern void T320f143(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T320f142(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T320f141(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file */
extern void T320f140(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.reset */
extern void T320f146(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T320f146p1(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T320f146p0(T0* C);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T320f52(T0* C);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T320f145(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T320f150(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.more */
extern void T320f156(T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T320f101(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T320f124(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T320f151(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T320f154(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T320f98(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T320f153(T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T320f96(T0* C);
/* ET_EIFFEL_PREPARSER.use_reference_keyword */
extern T1 T320f95(T0* C);
/* ET_EIFFEL_PREPARSER.ast_factory */
extern T0* T320f94(T0* C);
/* ET_EIFFEL_PREPARSER.use_attribute_keyword */
extern T1 T320f90(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T320f155(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T320f149(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T320f152(T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T320f80(T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T320f148(T0* C);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T320f79(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T320f78(T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T320f147(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.eiffel_buffer */
extern T0* T320f50(T0* C);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T320f115(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_compiler */
extern T0* T320f49(T0* C);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T320f48(T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern T0* T320f113(T0* C);
/* ET_EIFFEL_PREPARSER.preparse_class */
extern void T320f144(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PREPARSER.universe */
extern T0* T320f87(T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T320f86(T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T320f120(T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T320f119(T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T320f118(T0* C);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T320f85(T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge984os18368;
extern T0* ge984ov18368;
extern T0* T320f117(T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T320f84(T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T57f208(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T28f208(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.error_handler */
extern T0* T320f83(T0* C);
/* ET_EIFFEL_PREPARSER.current_system */
extern T0* T320f82(T0* C);
/* ET_AST_NULL_PROCESSOR.process_cluster */
extern void T313f3(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T1033f28(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T628f259(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T628f273(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T28f403(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T571c818(T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T689f9(T0* C);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T28f138(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T57f403(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T57f138(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T64f487(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T64f504(T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T61f953(T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T61f966(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T1033f23(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T628f260(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T628f274(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T628f289(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T28f405(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T571c820(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T28f140(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T57f405(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T57f140(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T628f288(T0* C, T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T899f18(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T28f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T571c819(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T28f139(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T57f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T57f139(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T899f17(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T628f287(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T64f488(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T64f505(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T64f530(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T64f529(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T64f590(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T64f525(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T61f954(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T61f967(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T1033f24(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T628f261(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T628f275(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T28f406(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T571c821(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T28f141(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T57f406(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T57f141(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T628f291(T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T904f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T628f290(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T28f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T571c831(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T28f146(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T57f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T57f146(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T28f415(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T571c830(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T57f415(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T28f414(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T571c829(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T28f145(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T57f414(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T57f145(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T28f413(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T571c828(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T57f413(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T628f301(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T28f412(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T571c827(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T57f412(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T628f300(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T628f299(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T64f489(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T64f506(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T64f532(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T64f594(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T64f531(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T64f593(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T64f592(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T64f591(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T61f955(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T61f968(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_once */
extern T1 T228f43(T0* C);
/* ET_DYNAMIC_FEATURE.is_once */
extern T1 T174f41(T0* C);
/* ET_IDENTIFIER.is_result */
extern T1 T129f89(T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T1033f25(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T628f262(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T628f276(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T628f292(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T28f407(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T571c822(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T28f142(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T57f407(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T57f142(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T282f27(T0* C);
/* UT_VERSION.infix ">=" */
extern T1 T63f15(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge249os1730;
extern T0* ge249ov1730;
extern T0* T628f36(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T64f490(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T64f507(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T64f533(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T64f595(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T64f243(T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T61f956(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T61f969(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T1033f35(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T1033f84(T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T925f6(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T1033f94(T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T923f4(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T628f263(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T628f277(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T64f491(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T64f508(T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T61f957(T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T61f970(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T1033f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T1033f85(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T1033f88(T0* C, T0* a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T929f4(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T628f264(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T628f278(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T28f409(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T571c824(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T28f144(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T57f409(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T57f144(T0* C, T0* a1);
/* ET_CHOICE_LIST.choice */
extern T0* T935f6(T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T935f7(T0* C, T6 a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T28f408(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T571c823(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T28f143(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T57f408(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T57f143(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T64f492(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T64f509(T0* C, T0* a1);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T61f958(T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T61f971(T0* C, T0* a1);
/* ET_C_GENERATOR.integer_ */
extern T0* T61f426(T0* C);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T1033f26(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T1033f81(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T884f6(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T884f7(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T628f265(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T628f279(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T628f294(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T28f417(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T571c832(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T28f147(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T57f417(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T57f147(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T628f293(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T64f493(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T64f510(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T64f535(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T64f535p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T64f534(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T64f534p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T61f959(T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T61f972(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T1033f37(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T628f266(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T628f280(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T64f494(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T64f511(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T64f511p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T61f960(T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T61f973(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T1033f27(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T914f7(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T914f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T628f267(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T628f281(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T64f495(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T64f512(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T64f512p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T61f961(T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T61f974(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T1033f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T628f268(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T628f282(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T628f295(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T628f302(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T28f422(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T571c837(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T57f422(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T28f421(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T571c836(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T57f421(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T920f7(T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T920f9(T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T918f4(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T204f11(T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T916f7(T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T916f9(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T28f420(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T571c835(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T920f10(T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T916f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T57f420(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T28f419(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T571c834(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T28f148(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T57f419(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T57f148(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T28f418(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T571c833(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T57f418(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_CALL.arguments_count */
extern T6 T918f5(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T64f496(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T64f513(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T64f536(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T64f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T64f642(T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T920f8(T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T916f8(T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T61f962(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T61f975(T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T61f979(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T1033f30(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T628f269(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T628f283(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T64f497(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T64f514(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T61f963(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T61f976(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T1033f33(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T628f270(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T628f284(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].force_last */
extern void T630f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_put */
extern void T630f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].clashes_put */
extern void T630f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].slots_item */
extern T6 T630f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].hash_position */
extern T6 T630f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].resize */
extern void T630f58(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].clashes_resize */
extern void T630f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_resize */
extern void T630f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_resize */
extern void T630f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].key_storage_item */
extern T0* T630f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].slots_resize */
extern void T630f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].new_capacity */
extern T6 T630f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_PROCEDURE].item_storage_put */
extern void T630f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_PROCEDURE].search_position */
extern void T630f56(T0* C, T0* a1);
/* DS_HASH_SET [ET_PROCEDURE].key_equality_tester */
extern T0* T630f33(T0* C);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T628f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T28f410(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T571c825(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T57f410(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T64f498(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T64f515(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T64f537(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T61f964(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T61f977(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T1033f34(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T628f271(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T628f285(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T628f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T28f411(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T571c826(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T57f411(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.arguments_count */
extern T6 T960f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T64f499(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T64f516(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T64f541(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T61f965(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T61f978(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_call_instruction */
extern void T1033f32(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_instruction */
extern void T628f272(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_instruction_validity */
extern void T628f286(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T628f298(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.arguments_count */
extern T6 T205f7(T0* C);
/* ET_CALL_INSTRUCTION.is_qualified_call */
extern T1 T205f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_instruction */
extern void T64f718(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_instruction_validity */
extern void T64f722(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T64f726(T0* C, T0* a1);
/* ET_C_GENERATOR.process_call_instruction */
extern void T61f980(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_instruction */
extern void T61f984(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T61f988(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_expression */
extern void T1033f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_expression */
extern void T628f303(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_expression_validity */
extern void T628f306(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_expression */
extern void T64f719(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_expression_validity */
extern void T64f723(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_expression */
extern void T61f981(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_expression */
extern void T61f985(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T61f986(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T1033f91(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T628f304(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T628f307(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T64f720(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T64f724(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T61f982(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T1033f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T628f305(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T628f308(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T64f721(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T64f725(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T61f983(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T61f987(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T848f71(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T847f72(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T845f72(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T270f68(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T269f70(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T268f70(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T179f76(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T848f75(T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T848f75p1(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T847f76(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T847f76p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T845f76(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T845f76p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T270f72(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T270f72p1(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T269f74(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T269f74p1(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T268f74(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T268f74p1(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T179f80(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T179f80p1(T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T848f76(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T847f77(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T847f77p1(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T845f77(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T845f77p1(T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T270f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T269f75(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T268f75(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T179f81(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T848f84(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T847f88(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T845f88(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T270f76(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T269f78(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T268f78(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T179f91(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T848f85(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T847f89(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T845f89(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T270f77(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T269f79(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T268f79(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T179f92(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T853f75(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T852f71(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T370f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T366f74(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T853f79(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T852f75(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T370f74(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T366f75(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T853f80(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T852f76(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T852f76p1(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T370f75(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T366f76(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T366f76p1(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T853f89(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T852f86(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T370f82(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T366f86(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T853f90(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T852f87(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T370f83(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T366f87(T0* C);
/* ET_INFIX_NAME.reset */
extern void T859f91(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T858f62(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T857f63(T0* C);
/* ET_INFIX_FREE_NAME.reset */
extern void T604f62(T0* C);
/* ET_IDENTIFIER.reset */
extern void T129f109(T0* C);
/* ET_INFIX_NAME.set_seed */
extern void T859f92(T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T858f63(T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T857f64(T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T604f63(T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T129f97(T0* C, T6 a1);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T177f86(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T175f84(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T60f150(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T177f85(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T175f83(T0* C);
/* ET_CLASS.reset_type */
extern void T60f212(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T243f74(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T242f74(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T237f73(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T223f73(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T161f70(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T243f68(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T242f68(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T237f67(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T223f67(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T161f65(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_meta_type */
extern void T243f69(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_meta_type */
extern void T242f69(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_meta_type */
extern void T237f68(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_meta_type */
extern void T223f68(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_meta_type */
extern void T161f66(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T243f67(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T242f67(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T237f66(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T223f66(T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T161f64(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T243f78(T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T242f78(T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T237f77(T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T223f77(T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T161f74(T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T243f75(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T242f75(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T237f74(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T223f74(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T161f71(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T243f79(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T242f79(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T237f78(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T223f78(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T161f75(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T243f71(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T242f71(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T237f70(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T223f70(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T161f69(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T386f2(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T383f26(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T383f36(T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T383f12(T0* C);
/* DS_LINKED_QUEUE [STRING_8].make */
extern T0* T1047c6(void);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T1045c10(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1313c9(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].new_cursor */
extern T0* T1313f7(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1314c7(T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T105f12(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1336c32(T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1492c3(void);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1336f35(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1336f23(T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1493c3(T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1336f36(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1336f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1336f29(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1336f20(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1336f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1336f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1336f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1494f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_NAMESPACE].make_area */
extern T0* T1556c2(T6 a1);
/* SPECIAL [XM_NAMESPACE].make */
extern T0* T1491c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1494c3(void);
/* XM_DOCUMENT.make */
extern T0* T99c15(void);
/* XM_DOCUMENT.make_with_root_named */
extern void T99f16(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T99f18(T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T99f18p1(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].make */
extern T0* T1464c3(T0* a1);
/* XM_DOCUMENT.is_empty */
extern T1 T99f13(T0* C);
/* XM_DOCUMENT.before_addition */
extern void T99f19(T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T100f39(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].remove */
extern void T299f14(T0* C);
/* XM_DOCUMENT.remove_at_cursor */
extern void T99f26(T0* C, T0* a1);
/* XM_DOCUMENT.move_all_cursors */
extern void T99f33(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.set_last_cell */
extern void T99f32(T0* C, T0* a1);
/* XM_DOCUMENT.remove_last */
extern void T99f31(T0* C);
/* XM_DOCUMENT.move_last_cursors_after */
extern void T99f36(T0* C);
/* XM_DOCUMENT.wipe_out */
extern void T99f34(T0* C);
/* XM_DOCUMENT.move_all_cursors_after */
extern void T99f37(T0* C);
/* XM_DOCUMENT.remove_first */
extern void T99f30(T0* C);
/* XM_DOCUMENT.set_first_cell */
extern void T99f35(T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T99f21(T0* C, T0* a1);
/* XM_DOCUMENT.new_cursor */
extern T0* T99f9(T0* C);
/* XM_DOCUMENT.list_make */
extern void T99f17(T0* C);
/* XM_ELEMENT.make */
extern T0* T100c29(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.list_make */
extern void T100f33(T0* C);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1269os10810;
extern T0* ge1269ov10810;
extern T0* T99f7(T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1340c9(void);
/* XM_NAMESPACE.make */
extern void T1340f8(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1340c8(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T104f6(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T104f6p1(T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T386f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T383f28(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T105f14(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T105f22(T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T101f4(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T592f14(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1366f4(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1366c3(T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].is_empty */
extern T1 T592f5(T0* C);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T593c3(T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.is_position_table_enabled */
extern T1 T105f8(T0* C);
/* XM_COMMENT.make_last */
extern T0* T1337c4(T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T100f28(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T100f28p1(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T100f28p0(T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T100f34(T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T100f17(T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T100f16(T0* C);
/* XM_COMMENT.make_last_in_document */
extern T0* T1337c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T104f8(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T104f8p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T386f5(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T383f29(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T105f15(T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1338c5(T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1338c4(T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T104f9(T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T104f9p1(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T386f6(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T383f30(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T105f16(T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1339c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T104f10(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T104f10p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T386f9(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T383f33(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T1045f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].force_last */
extern void T1313f11(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].put_right */
extern void T1448f5(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].attach_left */
extern void T1448f6(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].make */
extern T0* T1448c4(T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].is_empty */
extern T1 T1313f6(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T1045f8(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].set_equality_tester */
extern void T45f103(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T1045f9(T0* C);
/* DS_HASH_TABLE [STRING_8, STRING_8].make_map_default */
extern T0* T45c102(void);
/* DS_HASH_TABLE [STRING_8, STRING_8].default_capacity */
extern T6 T45f52(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T105f17(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_last */
extern T0* T100c27(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T100c26(T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T99f20(T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T99f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T105f7(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1336f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1336f40(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1336f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1336f26(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1336f22(T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1340f5(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1336f38(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1336f48(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1336f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1336f46(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].resize */
extern T0* T1494f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].resized_area */
extern T0* T1491f3(T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].copy_data */
extern void T1491f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_NAMESPACE].move_data */
extern void T1491f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].overlapping_move */
extern void T1491f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].non_overlapping_move */
extern void T1491f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1336f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1336f30(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1336f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1336f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1336f21(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1336f37(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1336f34(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1492f1(T0* C, T0* a1, T0* a2);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].any_ */
extern T0* T1492f2(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1336f17(T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1340f7(T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1340f3(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1336f24(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1336f27(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T104f11(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T104f11p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T386f8(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T383f32(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T1045f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_last */
extern void T1313f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].set_last_cell */
extern void T1313f14(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING_8, STRING_8]].forget_right */
extern void T1448f7(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_last_cursors_after */
extern void T1313f13(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_next_cursor */
extern void T1314f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_after */
extern void T1314f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].wipe_out */
extern void T1313f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].move_all_cursors_after */
extern void T1313f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T1045f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1243os30167;
extern T0* ge1243ov30167;
extern T0* T1045f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T383f32p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T1045f2(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].back */
extern void T1314f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_back */
extern void T1313f18(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].add_traversing_cursor */
extern void T1313f19(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].remove_traversing_cursor */
extern void T1313f20(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set */
extern void T1314f13(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].go_before */
extern void T1314f9(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_go_before */
extern void T1313f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].set_before */
extern void T1314f14(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_off */
extern T1 T1313f8(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].item */
extern T0* T1314f6(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING_8, STRING_8]].finish */
extern void T1314f8(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].cursor_finish */
extern void T1313f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1243os30168;
extern T0* ge1243ov30168;
extern T0* T1045f6(T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T383f9(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T105f19(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T100f15(T0* C);
/* XM_DOCUMENT.process */
extern void T99f22(T0* C, T0* a1);
/* XM_NODE_TYPER.process_document */
extern void T1465f12(T0* C, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T100f22(T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T99f10(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T104f13(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T104f13p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T386f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T383f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T1045f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING_8, STRING_8].force_new */
extern void T45f104(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING_8, STRING_8]].last */
extern T0* T1313f5(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T1045f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T383f38(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING_8].force */
extern void T1047f7(T0* C, T0* a1);
/* DS_LINKED_QUEUE [STRING_8].is_empty */
extern T1 T1047f4(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T1045f13(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T383f14(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T383f21(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T383f24(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1210os17996;
extern T0* ge1210ov17996;
extern T0* T383f20(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T105f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T298c5(T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T104f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T104f15p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T386f3(T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T383f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T105f13(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T104f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T104f7p1(T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T386f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T383f31(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T383f31p1(T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T383f11(T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T383f37(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T383f39(T0* C);
/* DS_LINKED_QUEUE [STRING_8].remove */
extern void T1047f8(T0* C);
/* DS_LINKED_QUEUE [STRING_8].wipe_out */
extern void T1047f9(T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T383f19(T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1210os17995;
extern T0* ge1210ov17995;
extern T0* T383f23(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1210os18003;
extern T0* ge1210ov18003;
extern T0* T383f18(T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1210os18002;
extern T0* ge1210ov18002;
extern T0* T383f17(T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T383f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1210os17997;
extern T0* ge1210ov17997;
extern T0* T383f22(T0* C);
/* DS_LINKED_QUEUE [STRING_8].item */
extern T0* T1047f5(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T383f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T1045f5(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T105f18(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T104f12(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T104f12p1(T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T386f11(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T383f35(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T105f20(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T104f14(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T104f14p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T386f12(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T383f41(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T105f23(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T104f16(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T383f40(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T105f11(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T104f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T222f25(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T190f6(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T188f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T222f30(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T222f30p1(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T190f10(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.append */
extern void T190f10p1(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T188f6(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T188f6p1(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T222f29(T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T190f9(T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T188f8(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T222f23(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T222f34(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T222f38(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T190f8(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T190f3(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T188f9(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T222f24(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T222f35(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T222f39(T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T190f7(T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T188f7(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T222f26(T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T190f5(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T188f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T41f41(T0* C);
/* AP_INTEGER_OPTION.reset */
extern void T37f27(T0* C);
/* DS_LINKED_LIST [INTEGER_32].make */
extern T0* T96c8(void);
/* DS_LINKED_LIST [INTEGER_32].new_cursor */
extern T0* T96f5(T0* C);
/* DS_LINKED_LIST_CURSOR [INTEGER_32].make */
extern T0* T382c3(T0* a1);
/* AP_BOOLEAN_OPTION.reset */
extern void T36f30(T0* C);
/* DS_LINKED_LIST [BOOLEAN].make */
extern T0* T93c8(void);
/* DS_LINKED_LIST [BOOLEAN].new_cursor */
extern T0* T93f5(T0* C);
/* DS_LINKED_LIST_CURSOR [BOOLEAN].make */
extern T0* T380c3(T0* a1);
/* AP_ENUMERATION_OPTION.reset */
extern void T35f30(T0* C);
/* AP_FLAG.reset */
extern void T33f23(T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T41f42(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T41f43(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T41f30(T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T83f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T41f29(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T41f35(T0* C, T0* a1, T6 a2);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1453f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1453f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1453f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T81f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T81f29(T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1452f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T26f18(T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1452f2(T0* C);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1453c2(T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1452c3(void);
/* AP_INTEGER_OPTION.record_occurrence */
extern void T37f28(T0* C, T0* a1);
/* DS_LINKED_LIST [INTEGER_32].force_last */
extern void T96f9(T0* C, T6 a1);
/* DS_LINKED_LIST [INTEGER_32].is_empty */
extern T1 T96f6(T0* C);
/* AP_BOOLEAN_OPTION.record_occurrence */
extern void T36f31(T0* C, T0* a1);
/* AP_BOOLEAN_OPTION.false_strings */
extern unsigned char ge53os4217;
extern T0* ge53ov4217;
extern T0* T36f22(T0* C);
/* AP_BOOLEAN_OPTION.case_insensitive_string_equality_tester */
extern unsigned char ge275os3574;
extern T0* ge275ov3574;
extern T0* T36f23(T0* C);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.default_create */
extern T0* T1451c3(void);
/* DS_LINKED_LIST [BOOLEAN].force_last */
extern void T93f9(T0* C, T1 a1);
/* DS_LINKABLE [BOOLEAN].put_right */
extern void T379f4(T0* C, T0* a1);
/* DS_LINKABLE [BOOLEAN].make */
extern T0* T379c3(T1 a1);
/* DS_LINKED_LIST [BOOLEAN].is_empty */
extern T1 T93f6(T0* C);
/* DS_ARRAYED_LIST [STRING_8].has */
extern T1 T80f22(T0* C, T0* a1);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.test */
extern T1 T1451f1(T0* C, T0* a1, T0* a2);
/* KL_CASE_INSENSITIVE_STRING_EQUALITY_TESTER.string_ */
extern T0* T1451f2(T0* C);
/* AP_BOOLEAN_OPTION.true_strings */
extern unsigned char ge53os4218;
extern T0* ge53ov4218;
extern T0* T36f21(T0* C);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T35f32(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING_8].has */
extern T1 T88f15(T0* C, T0* a1);
/* AP_ENUMERATION_OPTION.record_occurrence */
extern void T35f32p1(T0* C, T0* a1);
/* AP_FLAG.record_occurrence */
extern void T33f25(T0* C, T0* a1);
/* KL_STDIN_FILE.read_character */
extern void T1127f21(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T1127f24(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T1127f15(T0* C, T14 a1);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T1127f7(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T1127f12(T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T596f32(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].remove */
extern void T1147f7(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].wipe_out */
extern void T1147f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T596f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T596f37(T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T596f38(T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER_8].force */
extern void T1147f8(T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER_8].put_right */
extern void T1397f4(T0* C, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER_8].is_empty */
extern T1 T1147f4(T0* C);
/* DS_LINKABLE [CHARACTER_8].make */
extern T0* T1397c3(T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T596f24(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1309os25067;
extern T0* ge1309ov25067;
extern T0* T596f27(T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1148f7(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1148f6(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1148f5(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1148f4(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1148f3(T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge335os2974;
extern T0* ge335ov2974;
extern T0* T596f22(T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1148c16(void);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T596f26(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T596f25(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T596f36(T0* C);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1481f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T596f34(T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T594f31(T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T594f30(T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1148f2(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1148f1(T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T22f51(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T22f54(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T22f30(T0* C, T14 a1);
/* KL_STDIN_FILE.close */
extern void T1127f22(T0* C);
/* XM_EIFFEL_INPUT_STREAM.close */
extern void T596f33(T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T22f44(T0* C);
/* ET_LACE_SYSTEM.set_default_create_seed */
extern void T56f218(T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_default_create_seed */
extern void T53f226(T0* C, T6 a1);
/* ET_SYSTEM.set_default_create_seed */
extern void T25f170(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_copy_seed */
extern void T56f219(T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_copy_seed */
extern void T53f227(T0* C, T6 a1);
/* ET_SYSTEM.set_copy_seed */
extern void T25f171(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_routine_call_seed */
extern void T56f220(T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_routine_call_seed */
extern void T53f228(T0* C, T6 a1);
/* ET_SYSTEM.set_routine_call_seed */
extern void T25f172(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_function_item_seed */
extern void T56f221(T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_function_item_seed */
extern void T53f229(T0* C, T6 a1);
/* ET_SYSTEM.set_function_item_seed */
extern void T25f173(T0* C, T6 a1);
/* ET_LACE_SYSTEM.set_dispose_seed */
extern void T56f222(T0* C, T6 a1);
/* ET_XACE_SYSTEM.set_dispose_seed */
extern void T53f230(T0* C, T6 a1);
/* ET_SYSTEM.set_dispose_seed */
extern void T25f174(T0* C, T6 a1);
/* ET_LACE_SYSTEM.register_inline_constant */
extern void T56f224(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.set_id */
extern void T979f22(T0* C, T6 a1);
/* ET_XACE_SYSTEM.register_inline_constant */
extern void T53f232(T0* C, T0* a1);
/* ET_SYSTEM.register_inline_constant */
extern void T25f176(T0* C, T0* a1);
/* ET_LACE_SYSTEM.register_feature */
extern void T56f223(T0* C, T0* a1);
/* ET_XACE_SYSTEM.register_feature */
extern void T53f231(T0* C, T0* a1);
/* ET_SYSTEM.register_feature */
extern void T25f175(T0* C, T0* a1);
/* ET_KEYWORD.position */
extern T0* T182f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T865f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T858f18(T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T673f36(T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T865f8(T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T858f8(T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T604f8(T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1354f27(T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1309f25(T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1354f24(T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1309f22(T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1380f4(T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1354f25(T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1309f23(T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1380f5(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1381f9(T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1354f26(T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1309f24(T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1354f11(T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1309f10(T0* C);
/* ET_EXTERNAL_PROCEDURE.immediate_feature */
extern T0* T853f49(T0* C);
/* ET_ONCE_PROCEDURE.immediate_feature */
extern T0* T852f46(T0* C);
/* ET_DEFERRED_FUNCTION.immediate_feature */
extern T0* T848f50(T0* C);
/* ET_ONCE_FUNCTION.immediate_feature */
extern T0* T847f52(T0* C);
/* ET_DO_FUNCTION.immediate_feature */
extern T0* T845f52(T0* C);
/* ET_DEFERRED_PROCEDURE.immediate_feature */
extern T0* T370f43(T0* C);
/* ET_DO_PROCEDURE.immediate_feature */
extern T0* T366f46(T0* C);
/* ET_ATTRIBUTE.immediate_feature */
extern T0* T270f46(T0* C);
/* ET_UNIQUE_ATTRIBUTE.immediate_feature */
extern T0* T269f48(T0* C);
/* ET_CONSTANT_ATTRIBUTE.immediate_feature */
extern T0* T268f48(T0* C);
/* ET_EXTERNAL_FUNCTION.immediate_feature */
extern T0* T179f53(T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1354f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_redeclared */
extern T1 T853f51(T0* C);
/* ET_ONCE_PROCEDURE.is_redeclared */
extern T1 T852f48(T0* C);
/* ET_DEFERRED_FUNCTION.is_redeclared */
extern T1 T848f52(T0* C);
/* ET_ONCE_FUNCTION.is_redeclared */
extern T1 T847f54(T0* C);
/* ET_DO_FUNCTION.is_redeclared */
extern T1 T845f54(T0* C);
/* ET_DEFERRED_PROCEDURE.is_redeclared */
extern T1 T370f45(T0* C);
/* ET_DO_PROCEDURE.is_redeclared */
extern T1 T366f48(T0* C);
/* ET_ATTRIBUTE.is_redeclared */
extern T1 T270f48(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_redeclared */
extern T1 T269f50(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_redeclared */
extern T1 T268f50(T0* C);
/* ET_EXTERNAL_FUNCTION.is_redeclared */
extern T1 T179f55(T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1354f14(T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1309f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.redeclared_feature */
extern T0* T853f52(T0* C);
/* ET_ONCE_PROCEDURE.redeclared_feature */
extern T0* T852f49(T0* C);
/* ET_DEFERRED_FUNCTION.redeclared_feature */
extern T0* T848f53(T0* C);
/* ET_ONCE_FUNCTION.redeclared_feature */
extern T0* T847f55(T0* C);
/* ET_DO_FUNCTION.redeclared_feature */
extern T0* T845f55(T0* C);
/* ET_DEFERRED_PROCEDURE.redeclared_feature */
extern T0* T370f46(T0* C);
/* ET_DO_PROCEDURE.redeclared_feature */
extern T0* T366f49(T0* C);
/* ET_ATTRIBUTE.redeclared_feature */
extern T0* T270f49(T0* C);
/* ET_UNIQUE_ATTRIBUTE.redeclared_feature */
extern T0* T269f51(T0* C);
/* ET_CONSTANT_ATTRIBUTE.redeclared_feature */
extern T0* T268f51(T0* C);
/* ET_EXTERNAL_FUNCTION.redeclared_feature */
extern T0* T179f56(T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1309f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inherited */
extern T1 T853f53(T0* C);
/* ET_ONCE_PROCEDURE.is_inherited */
extern T1 T852f50(T0* C);
/* ET_DEFERRED_FUNCTION.is_inherited */
extern T1 T848f54(T0* C);
/* ET_ONCE_FUNCTION.is_inherited */
extern T1 T847f56(T0* C);
/* ET_DO_FUNCTION.is_inherited */
extern T1 T845f56(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inherited */
extern T1 T370f47(T0* C);
/* ET_DO_PROCEDURE.is_inherited */
extern T1 T366f50(T0* C);
/* ET_ATTRIBUTE.is_inherited */
extern T1 T270f50(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inherited */
extern T1 T269f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inherited */
extern T1 T268f52(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inherited */
extern T1 T179f57(T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1354f16(T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1309f15(T0* C);
/* ET_EXTERNAL_PROCEDURE.inherited_feature */
extern T0* T853f54(T0* C);
/* ET_ONCE_PROCEDURE.inherited_feature */
extern T0* T852f51(T0* C);
/* ET_DEFERRED_FUNCTION.inherited_feature */
extern T0* T848f55(T0* C);
/* ET_ONCE_FUNCTION.inherited_feature */
extern T0* T847f57(T0* C);
/* ET_DO_FUNCTION.inherited_feature */
extern T0* T845f57(T0* C);
/* ET_DEFERRED_PROCEDURE.inherited_feature */
extern T0* T370f48(T0* C);
/* ET_DO_PROCEDURE.inherited_feature */
extern T0* T366f51(T0* C);
/* ET_ATTRIBUTE.inherited_feature */
extern T0* T270f51(T0* C);
/* ET_UNIQUE_ATTRIBUTE.inherited_feature */
extern T0* T269f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.inherited_feature */
extern T0* T268f53(T0* C);
/* ET_EXTERNAL_FUNCTION.inherited_feature */
extern T0* T179f58(T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T853f47(T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T852f44(T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T848f48(T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T847f50(T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T845f50(T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T370f41(T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T366f44(T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T270f44(T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T269f46(T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T268f46(T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T179f51(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_adapted */
extern T1 T853f55(T0* C);
/* ET_ONCE_PROCEDURE.is_adapted */
extern T1 T852f52(T0* C);
/* ET_DEFERRED_FUNCTION.is_adapted */
extern T1 T848f56(T0* C);
/* ET_ONCE_FUNCTION.is_adapted */
extern T1 T847f58(T0* C);
/* ET_DO_FUNCTION.is_adapted */
extern T1 T845f58(T0* C);
/* ET_DEFERRED_PROCEDURE.is_adapted */
extern T1 T370f49(T0* C);
/* ET_DO_PROCEDURE.is_adapted */
extern T1 T366f52(T0* C);
/* ET_ATTRIBUTE.is_adapted */
extern T1 T270f52(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_adapted */
extern T1 T269f54(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_adapted */
extern T1 T268f54(T0* C);
/* ET_EXTERNAL_FUNCTION.is_adapted */
extern T1 T179f59(T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1354f12(T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1309f11(T0* C);
/* ET_EXTERNAL_PROCEDURE.adapted_feature */
extern T0* T853f50(T0* C);
/* ET_ONCE_PROCEDURE.adapted_feature */
extern T0* T852f47(T0* C);
/* ET_DEFERRED_FUNCTION.adapted_feature */
extern T0* T848f51(T0* C);
/* ET_ONCE_FUNCTION.adapted_feature */
extern T0* T847f53(T0* C);
/* ET_DO_FUNCTION.adapted_feature */
extern T0* T845f53(T0* C);
/* ET_DEFERRED_PROCEDURE.adapted_feature */
extern T0* T370f44(T0* C);
/* ET_DO_PROCEDURE.adapted_feature */
extern T0* T366f47(T0* C);
/* ET_ATTRIBUTE.adapted_feature */
extern T0* T270f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.adapted_feature */
extern T0* T269f49(T0* C);
/* ET_CONSTANT_ATTRIBUTE.adapted_feature */
extern T0* T268f49(T0* C);
/* ET_EXTERNAL_FUNCTION.adapted_feature */
extern T0* T179f54(T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T649f9(T0* C);
/* ET_SYMBOL.position */
extern T0* T469f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T718f34(T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T1365c9(T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T1365f10(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T717f34(T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T716f30(T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T715f30(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T713f32(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T712f32(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T711f34(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T710f35(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T709f35(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T708f31(T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T707f35(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T706f35(T0* C);
/* ET_VOID.last_position */
extern T0* T695f24(T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T659f28(T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T652f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T603f30(T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T470f81(T0* C);
/* ET_SYMBOL.last_position */
extern T0* T469f14(T0* C);
/* ET_RESULT.last_position */
extern T0* T230f25(T0* C);
/* ET_CURRENT.last_position */
extern T0* T203f24(T0* C);
/* ET_KEYWORD.last_position */
extern T0* T182f21(T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T129f84(T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T1013f4(T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T1013f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1003f21(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1002f25(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T1001f25(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T1000f22(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T999f26(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T998f26(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T989f11(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T982f16(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T980f15(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T979f12(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T977f16(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T976f10(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T975f11(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T974f10(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T971f11(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T969f10(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T968f10(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T967f10(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T966f10(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T963f11(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T962f13(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T949f11(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T901f10(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T746f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T718f23(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T717f23(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T716f24(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T715f24(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T713f25(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T712f25(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T711f29(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T710f30(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T709f30(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T708f26(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T707f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T706f24(T0* C);
/* ET_VOID.assertion */
extern T0* T695f18(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T659f22(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T603f25(T0* C);
/* ET_RESULT.assertion */
extern T0* T230f18(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T210f17(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T208f13(T0* C);
/* ET_CURRENT.assertion */
extern T0* T203f15(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T129f77(T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1540f8(T0* C);
/* ET_CONVERT_EXPRESSION.agent_actual_argument */
extern T0* T1539f8(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T1011f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1003f18(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1002f21(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T1001f21(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T1000f19(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T999f22(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T998f22(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T989f10(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T982f15(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T980f14(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T979f11(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T977f14(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T976f9(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T975f10(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T974f9(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T971f10(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T969f9(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T968f9(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T967f9(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T966f9(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T963f10(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T962f12(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T949f10(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T901f9(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T746f10(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T718f22(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T717f22(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T716f23(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T715f23(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T713f24(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T712f24(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T711f27(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T710f28(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T709f28(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T708f25(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T707f29(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T706f23(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T703f8(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T695f17(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T659f21(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T603f24(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T230f17(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T210f16(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T208f12(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T203f14(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T129f75(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T949f17(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T947f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T718f28(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T717f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T711f35(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T710f36(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T709f36(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T706f29(T0* C);
/* ET_CALL_EXPRESSION.choice */
extern T0* T208f18(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T129f86(T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T949f21(T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T718f31(T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T717f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T711f38(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T710f39(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T709f39(T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T706f32(T0* C);
/* ET_CALL_EXPRESSION.lower */
extern T0* T208f21(T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T129f92(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T949f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T718f30(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T717f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T711f37(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T710f38(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T709f38(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T706f31(T0* C);
/* ET_CALL_EXPRESSION.is_range */
extern T1 T208f20(T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T129f91(T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T949f22(T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T718f32(T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T717f32(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T711f39(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T710f40(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T709f40(T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T706f33(T0* C);
/* ET_CALL_EXPRESSION.upper */
extern T0* T208f22(T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T129f93(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T761f54(T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T762f11(T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T753f53(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T865f14(T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T861f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T865f11(T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T861f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T865f12(T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T861f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T865f13(T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T861f10(T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T861f38(T0* C);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T865f37(T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T861f56(T0* C);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T865f38(T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T865f39(T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T861f57(T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T861f58(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T865f9(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T861f6(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T865f42(T0* C, T0* a1);
/* KL_ANY_ROUTINES.to_any */
extern T0* T79f4(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.any_ */
extern T0* T865f43(T0* C);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T861f59(T0* C, T0* a1);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T859f69(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T858f58(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T858f36(T0* C);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T857f55(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T604f58(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T604f32(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T708f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T707f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T603f7(T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T827f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T355f5(T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T825f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T355f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T1126f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T780f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T779f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T769f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T1126f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T769f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T1126f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T896f51(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T894f56(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T780f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T321f895(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T779f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T321f894(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T774f81(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T773f80(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T769f6(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T1126f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T321f892(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T767f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T321f893(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T767f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T767f9(T0* C);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T896f28(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T894f41(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T774f50(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T773f50(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T769f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T321f891(T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T711f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T710f27(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T709f27(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T1344f4(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T1133f22(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T896f22(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T894f38(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T892f4(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T774f30(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T773f10(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T761f40(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T753f39(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T184f22(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T177f23(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T175f18(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T60f86(T0* C, T0* a1);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1540f16(T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T975f14(T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T901f14(T0* C);
/* ET_CALL_EXPRESSION.arguments_count */
extern T6 T208f16(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T1003f25(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T1002f22(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T1001f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T1000f26(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T999f23(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T998f23(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T1003f24(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T1000f25(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T435f57(T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T395c7(T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T433f55(T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T429f56(T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T394f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T435f60(T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T433f61(T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T429f59(T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T394f65(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T435f61(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T596f20(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T596f13(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T433f48(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T429f60(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T394f66(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T435f62(T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T433f50(T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T429f61(T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T394f43(T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T863f4(T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T79f3(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T863f5(T0* C);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T859f70(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T859f33(T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T858f59(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T857f56(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T857f30(T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T604f59(T0* C, T0* a1);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T129f88(T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T129f45(T0* C);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T863f3(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T859f7(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T858f10(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T857f7(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T604f10(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T129f51(T0* C);
/* ET_UNKNOWN_GROUP.is_none */
extern T1 T465f2(T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T293f29(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T136f27(T0* C);
/* ET_UNKNOWN_GROUP.cluster */
extern T0* T465f3(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T334f3(T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T293f30(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T136f28(T0* C);
/* ET_UNKNOWN_GROUP.is_dotnet_assembly */
extern T1 T465f8(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T334f7(T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T293f32(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T136f30(T0* C);
/* ET_UNKNOWN_GROUP.is_cluster */
extern T1 T465f7(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T334f6(T0* C);
/* ET_UNKNOWN_GROUP.current_system */
extern T0* T465f6(T0* C);
/* ET_NONE_GROUP.current_system */
extern T0* T334f4(T0* C);
/* ET_XACE_CLUSTER.current_system */
extern T0* T293f25(T0* C);
/* ET_LACE_CLUSTER.current_system */
extern T0* T136f26(T0* C);
/* ET_UNKNOWN_GROUP.universe */
extern T0* T465f4(T0* C);
/* ET_UNKNOWN_GROUP.tokens */
extern T0* T465f5(T0* C);
/* ET_UNKNOWN_GROUP.full_pathname */
extern T0* T465f11(T0* C);
/* ET_UNKNOWN_GROUP.pathname */
extern T0* T465f13(T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T334f10(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T334f12(T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T293f23(T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T293f36(T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T293f43(T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T293f42(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T136f20(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T136f22(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T136f18(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T136f17(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T136f19(T0* C);
/* ET_UNKNOWN_GROUP.full_lower_name */
extern T0* T465f10(T0* C, T2 a1);
/* ET_UNKNOWN_GROUP.lower_name */
extern T0* T465f12(T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T334f9(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T334f11(T0* C);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T293f22(T0* C, T2 a1);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T293f35(T0* C);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T136f36(T0* C, T2 a1);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T136f37(T0* C);
/* ET_UNKNOWN_GROUP.dotnet_assembly */
extern T0* T465f14(T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T334f13(T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T293f24(T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T136f38(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T1128f7(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T1128f14(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T1128f15(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T1128f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T1128f18(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T1128f17(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T1128f10(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T1128f9(T0* C);
/* ET_FILE_POSITION.integer_ */
extern T0* T1128f8(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T711f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T711f51(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T711f33(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T710f29(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T710f52(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T710f34(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T709f29(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T709f52(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T709f34(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T692f36(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T692f76(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T692f40(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T470f39(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T470f87(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T470f43(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T469f13(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T469f73(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T469f51(T0* C);
/* ET_CURRENT.to_text */
extern T0* T203f20(T0* C);
/* ET_CURRENT.append_to_string */
extern void T203f34(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T203f21(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T182f19(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T182f76(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T182f20(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T129f76(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T129f110(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_null */
extern T1 T718f21(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null */
extern T1 T717f21(T0* C);
/* ET_FALSE_CONSTANT.is_null */
extern T1 T716f22(T0* C);
/* ET_TRUE_CONSTANT.is_null */
extern T1 T715f22(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null */
extern T1 T713f22(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null */
extern T1 T712f22(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T711f25(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T710f25(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T709f25(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T708f23(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T707f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null */
extern T1 T706f22(T0* C);
/* ET_VOID.is_null */
extern T1 T695f16(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T692f39(T0* C);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T679f17(T0* C);
/* ET_FREE_OPERATOR.is_null */
extern T1 T673f41(T0* C);
/* ET_BIT_CONSTANT.is_null */
extern T1 T659f20(T0* C);
/* ET_PRECURSOR_KEYWORD.is_null */
extern T1 T652f15(T0* C);
/* ET_AGENT_KEYWORD.is_null */
extern T1 T649f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T603f16(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T470f9(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T469f9(T0* C);
/* ET_RESULT.is_null */
extern T1 T230f12(T0* C);
/* ET_CURRENT.is_null */
extern T1 T203f19(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T182f11(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T129f56(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1365f3(T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T718f19(T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T717f19(T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T716f20(T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T715f20(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T713f20(T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T712f20(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T711f23(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T710f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T709f23(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T708f21(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T707f25(T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T706f20(T0* C);
/* ET_VOID.line */
extern T6 T695f14(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T692f37(T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T689f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T679f18(T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T673f39(T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T659f18(T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T652f13(T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T649f10(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T603f14(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T470f11(T0* C);
/* ET_SYMBOL.line */
extern T6 T469f11(T0* C);
/* ET_RESULT.line */
extern T6 T230f10(T0* C);
/* ET_CURRENT.line */
extern T6 T203f17(T0* C);
/* ET_KEYWORD.line */
extern T6 T182f12(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T129f36(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1365f2(T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T718f20(T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T717f20(T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T716f21(T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T715f21(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T713f21(T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T712f21(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T711f24(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T710f24(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T709f24(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T708f22(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T707f26(T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T706f21(T0* C);
/* ET_VOID.column */
extern T6 T695f15(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T692f38(T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T689f11(T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T679f19(T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T673f40(T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T659f19(T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T652f14(T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T649f11(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T603f15(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T470f12(T0* C);
/* ET_SYMBOL.column */
extern T6 T469f12(T0* C);
/* ET_RESULT.column */
extern T6 T230f11(T0* C);
/* ET_CURRENT.column */
extern T6 T203f18(T0* C);
/* ET_KEYWORD.column */
extern T6 T182f13(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T129f37(T0* C);
/* ET_INVARIANTS.clients */
extern T0* T729f18(T0* C);
/* ET_INVARIANTS.type */
extern T0* T729f20(T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T729f17(T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T853f59(T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T848f60(T0* C);
/* ET_INVARIANTS.locals */
extern T0* T729f16(T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T370f54(T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T270f56(T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T269f58(T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T268f58(T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T179f65(T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T729f19(T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T729f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T853f58(T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T852f55(T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T848f59(T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T847f61(T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T845f61(T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T729f15(T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T370f53(T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T366f55(T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T270f55(T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T269f57(T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T268f57(T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T179f64(T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T729f13(T0* C);
/* ET_DYNAMIC_TYPE_LIST.dynamic_type */
extern T0* T193f6(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1376f3(T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T997f5(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1540f15(T0* C);
/* ET_CONVERT_EXPRESSION.is_open_operand */
extern T1 T1539f10(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1376f4(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1003f19(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1002f23(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T1001f23(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T1000f20(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T999f24(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T998f24(T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T989f14(T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T982f20(T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T980f19(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T979f16(T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T977f22(T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T976f13(T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T975f15(T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T974f13(T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T971f14(T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T969f13(T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T968f13(T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T967f13(T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T966f13(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T963f12(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T962f16(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T949f18(T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T901f15(T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T746f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T718f26(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T717f26(T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T716f27(T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T715f27(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T713f29(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T712f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T711f32(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T710f33(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T709f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T708f29(T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T707f33(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T706f27(T0* C);
/* ET_VOID.is_open_operand */
extern T1 T695f21(T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T659f25(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T603f26(T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T230f19(T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T210f18(T0* C);
/* ET_CALL_EXPRESSION.is_open_operand */
extern T1 T208f14(T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T203f16(T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T129f78(T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1544f9(T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1540f6(T0* C);
/* ET_CONVERT_EXPRESSION.expression_item */
extern T0* T1539f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1003f11(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1002f12(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T1001f12(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T1000f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T999f15(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T998f15(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T989f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T982f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T980f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T979f5(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T977f7(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T976f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T975f4(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T974f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T971f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T969f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T968f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T967f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T966f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T963f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T962f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T949f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T901f5(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T746f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T718f8(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T717f8(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T716f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T715f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T713f8(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T712f8(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T711f12(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T710f12(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T709f12(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T708f10(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T707f14(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T706f9(T0* C);
/* ET_VOID.expression_item */
extern T0* T695f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T659f8(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T603f9(T0* C);
/* ET_RESULT.expression_item */
extern T0* T230f6(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T210f13(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T208f8(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T203f6(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T129f46(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1548f3(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T993f9(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T899f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T899f11(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1548f4(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T993f7(T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T899f12(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1544f8(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1540f12(T0* C);
/* ET_CONVERT_EXPRESSION.is_empty_actual_argument */
extern T1 T1539f9(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1003f28(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1002f29(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1001f29(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T1000f29(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T999f30(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T998f30(T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T989f15(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T984f8(T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T982f21(T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T980f20(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T979f17(T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T977f23(T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T976f14(T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T975f16(T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T974f14(T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T971f15(T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T969f14(T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T968f14(T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T967f14(T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T966f14(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T963f15(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T962f17(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T949f19(T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T901f16(T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T746f18(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T718f29(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T717f29(T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T716f28(T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T715f28(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T713f30(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T712f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T711f36(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T710f37(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T709f37(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T708f30(T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T707f34(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T706f30(T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T695f22(T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T659f26(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T603f29(T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T230f23(T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T210f21(T0* C);
/* ET_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T208f19(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T204f10(T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T203f25(T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T129f90(T0* C);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1544f7(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1540f4(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.actual_argument */
extern T0* T1539f4(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1003f14(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1002f15(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T1001f15(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T1000f16(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T999f17(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T998f17(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T989f8(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T984f7(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T982f11(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T980f10(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T979f8(T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T977f9(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T976f7(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T975f6(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T974f7(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T971f7(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T969f7(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T968f7(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T967f7(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T966f7(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T963f8(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T962f10(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T949f8(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T901f7(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T746f8(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T718f10(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T717f10(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T716f12(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T715f12(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T713f11(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T712f11(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T711f15(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T710f15(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T709f15(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T708f12(T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T707f16(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T706f11(T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T695f12(T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T659f10(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T603f11(T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T230f8(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T210f11(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.actual_argument */
extern T0* T208f11(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T204f6(T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T203f8(T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T129f55(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T718f12(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T717f12(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T713f13(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T712f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T711f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T710f16(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T709f16(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T708f14(T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T707f18(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T706f13(T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T659f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T603f17(T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T716f15(T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T715f15(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T713f14(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T712f14(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T711f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T710f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T709f17(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T708f15(T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T707f19(T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T659f13(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T603f18(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T718f14(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T717f14(T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T716f16(T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T715f16(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T713f15(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T712f15(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T708f16(T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T707f20(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T706f15(T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T659f14(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T603f19(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_real_constant */
extern T1 T718f15(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_real_constant */
extern T1 T717f15(T0* C);
/* ET_FALSE_CONSTANT.is_real_constant */
extern T1 T716f17(T0* C);
/* ET_TRUE_CONSTANT.is_real_constant */
extern T1 T715f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_real_constant */
extern T1 T711f19(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_real_constant */
extern T1 T710f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_real_constant */
extern T1 T709f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_real_constant */
extern T1 T708f17(T0* C);
/* ET_VERBATIM_STRING.is_real_constant */
extern T1 T707f21(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_real_constant */
extern T1 T706f16(T0* C);
/* ET_BIT_CONSTANT.is_real_constant */
extern T1 T659f15(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_real_constant */
extern T1 T603f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T718f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T717f16(T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T716f18(T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T715f18(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T713f17(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T712f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T711f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T710f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T709f20(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T706f17(T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T659f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T718f17(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T717f17(T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T716f19(T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T715f19(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T713f18(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T712f18(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T711f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T710f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T709f21(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T708f19(T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T707f23(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T706f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T603f22(T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T977f11(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_procedure */
extern T1 T1002f20(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_procedure */
extern T1 T1001f20(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_procedure */
extern T1 T999f21(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_procedure */
extern T1 T998f21(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1003f16(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1002f16(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T1001f16(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1003f20(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1003f27(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1002f24(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1002f28(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T1001f24(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T1001f28(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T1000f21(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T1000f28(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T999f25(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T999f29(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T998f25(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T998f29(T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T977f15(T0* C);
/* ET_CALL_AGENT.is_inline_agent */
extern T1 T977f21(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T973f11(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T972f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T865f10(T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T861f7(T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T859f30(T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T858f33(T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T857f27(T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T692f17(T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T679f20(T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T673f19(T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T604f29(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T129f73(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T973f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T972f7(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T865f16(T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T861f39(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T859f21(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T858f25(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T857f18(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T692f11(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T679f13(T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T673f14(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T604f21(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T470f16(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T129f41(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T973f4(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T865f17(T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T861f40(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T859f18(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T858f22(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T857f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T692f8(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T679f10(T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T673f11(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T604f18(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T470f13(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T129f38(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T973f12(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T972f12(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T865f18(T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T861f41(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T859f51(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T858f41(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T857f38(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T692f18(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T679f21(T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T673f20(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T604f41(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T470f21(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T129f61(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T973f13(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T972f13(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T865f19(T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T861f42(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T859f52(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T858f42(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T857f39(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T692f19(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T679f22(T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T673f21(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T604f42(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T470f22(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T129f62(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T973f14(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T972f14(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T865f20(T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T861f43(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T859f53(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T858f43(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T857f40(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T692f20(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T679f23(T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T673f22(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T604f43(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T470f23(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T129f63(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T973f15(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T972f15(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T865f21(T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T861f44(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T859f54(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T858f44(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T857f41(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T692f21(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T679f24(T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T673f23(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T604f44(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T470f24(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T129f64(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T973f6(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T972f6(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T865f22(T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T861f45(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T859f20(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T858f24(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T857f17(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T692f10(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T679f12(T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T673f13(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T604f20(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T470f15(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T129f40(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T973f16(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T972f16(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T865f23(T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T861f46(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T859f55(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T858f45(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T857f42(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T692f22(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T679f25(T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T673f24(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T604f45(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T470f25(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T129f65(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T973f17(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T972f17(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T865f24(T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T861f47(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T859f56(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T858f46(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T857f43(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T692f23(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T679f26(T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T673f25(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T604f46(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T470f26(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T129f66(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T973f18(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T972f18(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T865f25(T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T861f35(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T859f57(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T858f47(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T857f44(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T692f24(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T679f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T673f26(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T604f47(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T470f27(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T129f67(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T973f19(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T972f19(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T865f26(T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T861f48(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T859f58(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T858f48(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T857f45(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T692f25(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T679f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T673f27(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T604f48(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T470f28(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T129f68(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T973f8(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T972f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T865f27(T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T861f49(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T859f22(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T858f26(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T857f19(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T692f12(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T679f14(T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T673f15(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T604f22(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T470f17(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T129f42(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T972f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T865f28(T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T861f50(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T859f19(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T858f23(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T857f16(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T692f9(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T679f11(T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T673f12(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T604f19(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T470f14(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T129f39(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T973f20(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T972f20(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T865f29(T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T861f34(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T859f59(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T858f49(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T857f46(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T692f26(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T679f29(T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T673f28(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T604f49(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T470f29(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T129f69(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T973f21(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T972f21(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T865f30(T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T861f51(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T859f60(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T858f50(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T857f47(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T692f27(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T679f30(T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T673f29(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T604f50(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T470f30(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T129f70(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T973f22(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T972f22(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T865f31(T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T861f52(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T859f61(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T858f51(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T857f48(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T692f28(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T679f31(T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T673f30(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T604f51(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T470f31(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T129f71(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T973f23(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T972f23(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T865f32(T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T861f53(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T859f62(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T858f52(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T857f49(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T692f29(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T679f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T673f31(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T604f52(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T470f32(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T129f72(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T973f24(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T972f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T865f33(T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T861f54(T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T859f64(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T858f53(T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T857f50(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T692f30(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T679f33(T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T673f32(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T604f53(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T470f33(T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T129f74(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T973f25(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T972f25(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T865f34(T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T861f37(T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T859f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T858f19(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T857f34(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T692f31(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T679f34(T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T673f33(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T604f38(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T470f34(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T129f58(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T973f26(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T972f26(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T865f35(T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T861f36(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T859f16(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T858f20(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T857f35(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T692f32(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T679f35(T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T673f34(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T604f39(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T470f35(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T129f59(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T973f27(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T972f27(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T865f36(T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T861f55(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T859f17(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T858f21(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T857f36(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T692f33(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T679f36(T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T673f35(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T604f40(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T470f36(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T129f60(T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T859f65(T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T858f54(T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T857f51(T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T692f34(T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T679f37(T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T673f37(T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T652f11(T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T604f54(T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T470f37(T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T129f80(T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T859f66(T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T858f55(T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T857f52(T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T692f35(T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T679f38(T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T673f38(T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T652f12(T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T604f55(T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T470f38(T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T129f81(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.same_call_name */
extern T1 T973f29(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.same_call_name */
extern T1 T972f29(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T859f25(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T858f29(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T857f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.same_call_name */
extern T1 T692f42(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.same_call_name */
extern T1 T679f40(T0* C, T0* a1);
/* ET_FREE_OPERATOR.same_call_name */
extern T1 T673f43(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T604f25(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.same_call_name */
extern T1 T470f41(T0* C, T0* a1);
/* ET_IDENTIFIER.same_call_name */
extern T1 T129f47(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T973f10(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T972f10(T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T692f14(T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T679f16(T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T673f17(T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T470f19(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T973f30(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T972f30(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T692f15(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T679f9(T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T673f18(T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T652f10(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T470f8(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T973f28(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T973f31(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T972f28(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T972f31(T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T692f41(T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T692f43(T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T679f39(T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T679f41(T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T673f42(T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T673f44(T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T652f16(T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T470f40(T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T470f42(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_tuple_label */
extern T1 T1540f11(T0* C);
/* ET_CALL_AGENT.is_tuple_label */
extern T1 T977f24(T0* C);
/* ET_PREFIX_EXPRESSION.is_tuple_label */
extern T1 T975f8(T0* C);
/* ET_INFIX_EXPRESSION.is_tuple_label */
extern T1 T971f8(T0* C);
/* ET_BRACKET_EXPRESSION.is_tuple_label */
extern T1 T901f11(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_tuple_label */
extern T1 T899f9(T0* C);
/* ET_CALL_EXPRESSION.is_tuple_label */
extern T1 T208f7(T0* C);
/* ET_CALL_INSTRUCTION.is_tuple_label */
extern T1 T205f5(T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T899f10(T0* C);
/* ET_CALL_INSTRUCTION.position */
extern T0* T205f8(T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1540f10(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T977f13(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T208f6(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T205f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1540f9(T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T975f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T899f8(T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T859f6(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T858f9(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T857f6(T0* C);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T604f9(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T129f31(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_query */
extern T1 T853f71(T0* C);
/* ET_ONCE_PROCEDURE.is_query */
extern T1 T852f67(T0* C);
/* ET_DEFERRED_FUNCTION.is_query */
extern T1 T848f32(T0* C);
/* ET_ONCE_FUNCTION.is_query */
extern T1 T847f32(T0* C);
/* ET_DO_FUNCTION.is_query */
extern T1 T845f32(T0* C);
/* ET_DEFERRED_PROCEDURE.is_query */
extern T1 T370f66(T0* C);
/* ET_DO_PROCEDURE.is_query */
extern T1 T366f67(T0* C);
/* ET_ATTRIBUTE.is_query */
extern T1 T270f35(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_query */
extern T1 T269f35(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_query */
extern T1 T268f36(T0* C);
/* ET_EXTERNAL_FUNCTION.is_query */
extern T1 T179f34(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T853f62(T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T852f58(T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T848f62(T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T847f63(T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T845f63(T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T370f57(T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T366f58(T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T270f58(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T269f60(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T268f60(T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T179f67(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T270f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T269f37(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T268f39(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T270f39(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T269f39(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T268f40(T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T853f63(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T852f59(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T848f63(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T847f64(T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T845f64(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T370f58(T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T366f59(T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T270f59(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T269f61(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T268f61(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T179f68(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T853f67(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T370f89(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T370f88(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T370f87(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T852f63(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T848f64(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T848f91(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T848f90(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T848f89(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T847f65(T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T845f65(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T370f62(T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T366f63(T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T270f60(T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T270f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T269f62(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T269f66(T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T268f62(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T268f66(T0* C);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T179f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T853f68(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T853f95(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T853f94(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T853f93(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T852f64(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T852f92(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T852f91(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T852f90(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T848f65(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T848f88(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T847f66(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T847f94(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T847f93(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T847f92(T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T845f66(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T845f94(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T845f93(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T845f92(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T370f63(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T370f86(T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T366f64(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T366f92(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T366f91(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T366f90(T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T270f61(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T270f82(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T270f81(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T270f80(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T269f63(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T269f86(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T269f85(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T269f84(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T269f83(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T269f82(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T268f63(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T268f85(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T268f84(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T268f83(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T268f82(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T179f70(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T179f97(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T179f96(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T179f95(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T853f66(T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T852f62(T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T370f61(T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T366f62(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T853f65(T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T852f61(T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T370f60(T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T366f61(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T853f64(T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T852f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T370f59(T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T366f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T853f39(T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T852f37(T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T370f30(T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T366f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T853f41(T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T852f39(T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T370f35(T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T366f35(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T853f37(T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T852f35(T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T370f36(T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T366f36(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T853f33(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T852f33(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T370f34(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T366f32(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T853f43(T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T852f53(T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T848f57(T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T847f59(T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T845f59(T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T370f50(T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T366f53(T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T270f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T269f55(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T268f55(T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T179f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T853f56(T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T370f51(T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T366f42(T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T853f31(T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T852f41(T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T370f29(T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T366f37(T0* C);
/* ET_INFIX_CAST_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1544f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1540f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_EXPRESSION.manifest_constant_convert_feature */
extern T0* T1539f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1003f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1002f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1001f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T1000f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T999f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.manifest_constant_convert_feature */
extern T0* T998f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.manifest_constant_convert_feature */
extern T0* T989f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.manifest_constant_convert_feature */
extern T0* T982f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_ARRAY.manifest_constant_convert_feature */
extern T0* T980f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ONCE_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T979f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.manifest_constant_convert_feature */
extern T0* T977f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_OLD_EXPRESSION.manifest_constant_convert_feature */
extern T0* T976f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PREFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T975f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.manifest_constant_convert_feature */
extern T0* T974f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.manifest_constant_convert_feature */
extern T0* T971f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXPRESSION_ADDRESS.manifest_constant_convert_feature */
extern T0* T969f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT_ADDRESS.manifest_constant_convert_feature */
extern T0* T968f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT_ADDRESS.manifest_constant_convert_feature */
extern T0* T967f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_ADDRESS.manifest_constant_convert_feature */
extern T0* T966f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.manifest_constant_convert_feature */
extern T0* T963f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_EXPRESSION.manifest_constant_convert_feature */
extern T0* T962f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T949f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.manifest_constant_convert_feature */
extern T0* T901f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.manifest_constant_convert_feature */
extern T0* T746f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C2_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T718f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C1_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T717f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FALSE_CONSTANT.manifest_constant_convert_feature */
extern T0* T716f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TRUE_CONSTANT.manifest_constant_convert_feature */
extern T0* T715f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T713f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_REAL_CONSTANT.manifest_constant_convert_feature */
extern T0* T712f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T711f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_UNDERSCORED_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T710f32(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_INTEGER_CONSTANT.manifest_constant_convert_feature */
extern T0* T709f32(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SPECIAL_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T708f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VERBATIM_STRING.manifest_constant_convert_feature */
extern T0* T707f32(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C3_CHARACTER_CONSTANT.manifest_constant_convert_feature */
extern T0* T706f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VOID.manifest_constant_convert_feature */
extern T0* T695f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_CONSTANT.manifest_constant_convert_feature */
extern T0* T659f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REGULAR_MANIFEST_STRING.manifest_constant_convert_feature */
extern T0* T603f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_RESULT.manifest_constant_convert_feature */
extern T0* T230f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.manifest_constant_convert_feature */
extern T0* T210f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.manifest_constant_convert_feature */
extern T0* T208f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CURRENT.manifest_constant_convert_feature */
extern T0* T203f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_IDENTIFIER.manifest_constant_convert_feature */
extern T0* T129f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1544f10(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1540f13(T0* C);
/* ET_CONVERT_EXPRESSION.is_current */
extern T1 T1539f11(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1003f22(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1002f26(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T1001f26(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T1000f23(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T999f27(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T998f27(T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T989f12(T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T982f17(T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T980f17(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T979f14(T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T977f18(T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T976f11(T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T975f12(T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T974f11(T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T971f12(T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T969f11(T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T968f11(T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T967f11(T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T966f11(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T963f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T962f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T949f14(T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T901f12(T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T746f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T718f24(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T717f24(T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T716f25(T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T715f25(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T713f27(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T712f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T711f30(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T710f31(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T709f31(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T708f27(T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T707f31(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T706f25(T0* C);
/* ET_VOID.is_current */
extern T1 T695f19(T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T659f23(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T603f27(T0* C);
/* ET_RESULT.is_current */
extern T1 T230f20(T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T210f19(T0* C);
/* ET_CALL_EXPRESSION.is_current */
extern T1 T208f15(T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T129f82(T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1544f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1540f7(T0* C);
/* ET_CONVERT_EXPRESSION.position */
extern T0* T1539f7(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T1003f17(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T1002f19(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T1001f19(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T1000f18(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T999f20(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T998f20(T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T989f9(T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T982f12(T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T982f13(T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T980f11(T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T980f12(T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T979f9(T0* C);
/* ET_CALL_AGENT.position */
extern T0* T977f10(T0* C);
/* ET_CALL_AGENT.use_tilde */
extern T1 T977f12(T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T976f8(T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T975f9(T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T974f8(T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T971f9(T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T969f8(T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T968f8(T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T967f8(T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T966f8(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T963f9(T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T962f11(T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T949f9(T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T901f8(T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T746f9(T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T718f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T717f11(T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T716f13(T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T715f13(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T713f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T712f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T711f22(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T710f22(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T709f22(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T708f13(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T707f17(T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T706f12(T0* C);
/* ET_VOID.position */
extern T0* T695f13(T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T659f11(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T603f12(T0* C);
/* ET_RESULT.position */
extern T0* T230f9(T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T210f14(T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T210f15(T0* C);
/* ET_CALL_EXPRESSION.position */
extern T0* T208f9(T0* C);
/* ET_CURRENT.position */
extern T0* T203f13(T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1544f11(T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1540f17(T0* C);
/* ET_CONVERT_EXPRESSION.last_leaf */
extern T0* T1539f14(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1003f29(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T993f10(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1002f30(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T1001f30(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T1000f30(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T999f31(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T998f31(T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T989f16(T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T982f22(T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T980f21(T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T979f18(T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T977f25(T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T976f15(T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T975f17(T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T974f15(T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T971f16(T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T969f15(T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T968f15(T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T967f15(T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T966f15(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T963f16(T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T962f18(T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T949f23(T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T901f17(T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T470f80(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T984f10(T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T746f17(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T718f33(T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T717f33(T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T716f29(T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T715f29(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T713f31(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T712f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T711f40(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T710f41(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T709f41(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T708f32(T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T707f36(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T706f34(T0* C);
/* ET_VOID.last_leaf */
extern T0* T695f23(T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T659f27(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T603f31(T0* C);
/* ET_RESULT.last_leaf */
extern T0* T230f24(T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T210f22(T0* C);
/* ET_CALL_EXPRESSION.last_leaf */
extern T0* T208f23(T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T203f26(T0* C);
/* ET_LACE_SYSTEM.classes_by_group */
extern T0* T56f151(T0* C, T0* a1);
/* ET_LACE_SYSTEM.initial_classes_by_group_capacity */
extern unsigned char ge742os2879;
extern T6 ge742ov2879;
extern T6 T56f154(T0* C);
/* ET_XACE_SYSTEM.classes_by_group */
extern T0* T53f155(T0* C, T0* a1);
/* ET_XACE_SYSTEM.initial_classes_by_group_capacity */
extern T6 T53f158(T0* C);
/* ET_SYSTEM.classes_by_group */
extern T0* T25f137(T0* C, T0* a1);
/* ET_SYSTEM.initial_classes_by_group_capacity */
extern T6 T25f140(T0* C);
/* ET_LACE_SYSTEM.has_class */
extern T1 T56f157(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T153f32(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T153f31(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T153f66(T0* C, T0* a1);
/* ET_XACE_SYSTEM.has_class */
extern T1 T53f161(T0* C, T0* a1);
/* ET_SYSTEM.has_class */
extern T1 T25f141(T0* C, T0* a1);
/* ET_LACE_SYSTEM.eiffel_class */
extern T0* T56f153(T0* C, T0* a1);
/* ET_XACE_SYSTEM.eiffel_class */
extern T0* T53f154(T0* C, T0* a1);
/* ET_SYSTEM.eiffel_class */
extern T0* T25f134(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T1344f5(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T1133f27(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T896f25(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T894f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T892f5(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T774f19(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T773f5(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T761f31(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T753f26(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T184f17(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T177f18(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T175f8(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T60f81(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T1344f3(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T1133f3(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T896f3(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T894f7(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T892f3(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T774f23(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T773f23(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T761f39(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T753f35(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T184f20(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T177f21(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T175f24(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T60f89(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T1344f6(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T1133f23(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T896f23(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T894f5(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T892f6(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T774f22(T0* C);
/* ET_BIT_N.type */
extern T0* T773f6(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T761f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T753f6(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T184f18(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T177f19(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T175f6(T0* C);
/* ET_CLASS.type */
extern T0* T60f77(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T1344f7(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T1133f50(T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T896f52(T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T894f57(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T892f7(T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T774f84(T0* C);
/* ET_BIT_N.label */
extern T0* T773f83(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T761f59(T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T753f58(T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T184f77(T0* C);
/* ET_GENERIC_CLASS_TYPE.label */
extern T0* T177f80(T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T175f79(T0* C);
/* ET_CLASS.label */
extern T0* T60f148(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T590f7(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T369f11(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T243f61(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T242f62(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T237f61(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T223f61(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T194f6(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T161f18(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_types */
extern T0* T243f62(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_types */
extern T0* T242f63(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_types */
extern T0* T237f62(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_types */
extern T0* T223f62(T0* C);
/* ET_DYNAMIC_TYPE.dynamic_types */
extern T0* T161f60(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T590f12(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T369f12(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T243f63(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T242f64(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T237f63(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T223f63(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T194f10(T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T161f61(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_empty */
extern T1 T590f10(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_empty */
extern T1 T369f8(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_empty */
extern T1 T243f59(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_empty */
extern T1 T242f60(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_empty */
extern T1 T237f60(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_empty */
extern T1 T223f59(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_empty */
extern T1 T194f8(T0* C);
/* ET_DYNAMIC_TYPE.is_empty */
extern T1 T161f17(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T590f11(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T369f10(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T194f9(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T590f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T369f9(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T243f60(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T242f61(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T237f59(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T223f60(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T194f7(T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T161f58(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T243f51(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T242f52(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T237f50(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T223f50(T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T161f31(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.dynamic_type */
extern T0* T590f8(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.dynamic_type */
extern T0* T369f7(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_type */
extern T0* T243f52(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_type */
extern T0* T242f53(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_type */
extern T0* T237f51(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_type */
extern T0* T223f51(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.dynamic_type */
extern T0* T194f5(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.dynamic_type */
extern T0* T161f56(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_never_void */
extern T1 T243f53(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_never_void */
extern T1 T242f54(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_never_void */
extern T1 T237f52(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_never_void */
extern T1 T223f52(T0* C);
/* ET_DYNAMIC_TYPE.is_never_void */
extern T1 T161f30(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T177f22(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T182f7(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T175f23(T0* C);
/* ET_CLASS.is_separate */
extern T1 T60f87(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T60f88(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type */
extern T0* T282f28(T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type */
extern T1 T282f29(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T282f10(T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T282f30(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type */
extern T1 T282f31(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T282f6(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T282f24(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T282f23(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T282f21(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T282f20(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T282f22(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type */
extern T1 T282f14(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T282f15(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T282f16(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type */
extern T1 T282f17(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_same_base_type */
extern T1 T774f76(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_base_type */
extern T1 T773f75(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_base_type */
extern T1 T184f70(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_base_type */
extern T1 T177f72(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_base_type */
extern T1 T175f72(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_base_type */
extern T1 T60f138(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T282f8(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T282f19(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T282f11(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T282f12(T0* C, T6 a1);
/* ET_BIT_FEATURE.root_context */
extern T0* T774f48(T0* C);
/* ET_BIT_N.root_context */
extern T0* T773f48(T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T184f42(T0* C);
/* ET_GENERIC_CLASS_TYPE.root_context */
extern T0* T177f43(T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T175f42(T0* C);
/* ET_CLASS.root_context */
extern T0* T60f109(T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T282f7(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.unaliased_to_text */
extern T0* T1133f16(T0* C);
/* ET_LIKE_CURRENT.unaliased_to_text */
extern T0* T896f19(T0* C);
/* ET_LIKE_FEATURE.unaliased_to_text */
extern T0* T894f30(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T761f30(T0* C);
/* ET_FORMAL_PARAMETER.unaliased_to_text */
extern T0* T753f25(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T1133f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T896f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T894f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T774f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T773f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T761f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T753f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T184f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T176f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.is_generic */
extern T1 T184f11(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T177f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T175f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T60f121(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T1133f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T896f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T894f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T774f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T773f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T761f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T753f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T184f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T177f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T175f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T60f125(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T1133f37(T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T896f38(T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T894f17(T0* C, T0* a1);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T774f60(T0* C, T0* a1);
/* ET_BIT_N.base_type_actual_count */
extern T6 T773f59(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T761f51(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T753f50(T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T184f52(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T177f50(T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T175f46(T0* C, T0* a1);
/* ET_CLASS.base_type_actual_count */
extern T6 T60f114(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T1133f38(T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.tokens */
extern T0* T1133f26(T0* C);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T896f39(T0* C, T6 a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T894f18(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T774f61(T0* C, T6 a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T761f44(T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T753f43(T0* C, T6 a1, T0* a2);
/* ET_FORMAL_PARAMETER.tokens */
extern T0* T753f38(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T1133f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T896f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T894f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T774f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T773f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T761f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T753f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T184f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T177f61(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T175f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T60f126(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T1133f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T896f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T894f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T774f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T773f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T761f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T753f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T184f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T177f65(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T175f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T60f130(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T1133f17(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T896f20(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T894f21(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T774f17(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T773f21(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T761f32(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T753f27(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T184f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T176f13(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T176f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T1133f10(T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T896f6(T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T894f10(T0* C, T0* a1);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T774f10(T0* C, T0* a1);
/* ET_BIT_N.is_type_expanded */
extern T1 T773f15(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T761f24(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T753f19(T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T184f5(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.is_type_expanded */
extern T1 T177f6(T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T175f12(T0* C, T0* a1);
/* ET_CLASS.is_type_expanded */
extern T1 T60f44(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_base_type */
extern T0* T1133f15(T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T896f18(T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_base_type */
extern T0* T894f29(T0* C, T0* a1);
/* ET_BIT_FEATURE.shallow_base_type */
extern T0* T774f15(T0* C, T0* a1);
/* ET_BIT_N.shallow_base_type */
extern T0* T773f19(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_base_type */
extern T0* T761f29(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_base_type */
extern T0* T753f24(T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T184f23(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.shallow_base_type */
extern T0* T177f24(T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T175f15(T0* C, T0* a1);
/* ET_CLASS.shallow_base_type */
extern T0* T60f82(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T1133f19(T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T896f12(T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T894f26(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T774f35(T0* C, T0* a1);
/* ET_BIT_N.has_anchored_type */
extern T1 T773f35(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T761f35(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T753f36(T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T184f29(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T176f17(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.has_anchored_type */
extern T1 T177f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T466f19(T0* C, T0* a1);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T175f29(T0* C, T0* a1);
/* ET_CLASS.has_anchored_type */
extern T1 T60f94(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T1133f20(T0* C, T0* a1);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T896f13(T0* C, T0* a1);
/* ET_CLASS.context_has_formal_types */
extern T1 T60f101(T0* C);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T894f27(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T774f36(T0* C, T0* a1);
/* ET_BIT_N.has_formal_types */
extern T1 T773f36(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T761f36(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T753f37(T0* C, T0* a1);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T184f30(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T176f18(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.has_formal_types */
extern T1 T177f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T466f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T175f30(T0* C, T0* a1);
/* ET_CLASS.has_formal_types */
extern T1 T60f95(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T1133f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T896f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T894f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T774f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T773f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T761f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T753f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T184f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T177f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T466f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T175f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T60f135(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type */
extern T1 T1133f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_class_type */
extern T1 T896f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_class_type */
extern T1 T894f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_named_class_type */
extern T1 T774f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_named_class_type */
extern T1 T773f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type */
extern T1 T761f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_class_type */
extern T1 T753f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_class_type */
extern T1 T184f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_named_class_type */
extern T1 T177f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T466f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T176f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_class_type */
extern T1 T175f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_class_type */
extern T1 T60f113(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type */
extern T1 T1133f32(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type */
extern T1 T896f32(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type */
extern T1 T894f33(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_named_formal_parameter_type */
extern T1 T774f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_named_formal_parameter_type */
extern T1 T773f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T761f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T753f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type */
extern T1 T184f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T177f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T175f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_formal_parameter_type */
extern T1 T60f112(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type */
extern T1 T1133f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_tuple_type */
extern T1 T896f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_tuple_type */
extern T1 T894f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_named_tuple_type */
extern T1 T774f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_named_tuple_type */
extern T1 T773f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T761f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T753f30(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_tuple_type */
extern T1 T184f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_named_tuple_type */
extern T1 T177f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_tuple_type */
extern T1 T175f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_tuple_type */
extern T1 T60f120(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type */
extern T1 T1133f39(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_bit_type */
extern T1 T896f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_bit_type */
extern T1 T894f36(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_named_bit_type */
extern T1 T774f63(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_named_bit_type */
extern T1 T773f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T761f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T753f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_bit_type */
extern T1 T184f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_named_bit_type */
extern T1 T177f59(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_bit_type */
extern T1 T175f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_bit_type */
extern T1 T60f124(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T1133f4(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T896f4(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T894f8(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T761f50(T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T753f49(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T1133f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T896f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T894f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T774f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T773f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T761f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T753f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T184f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T177f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T175f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T60f134(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T1133f47(T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T896f48(T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T894f46(T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T774f74(T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T773f73(T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T184f68(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T176f21(T0* C);
/* ET_GENERIC_CLASS_TYPE.last_leaf */
extern T0* T177f71(T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T466f22(T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T175f71(T0* C);
/* ET_CLASS.last_leaf */
extern T0* T60f137(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type */
extern T1 T1133f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_base_formal_parameter_type */
extern T1 T60f139(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_base_type */
extern T1 T896f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_base_type */
extern T1 T894f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type */
extern T1 T761f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_base_type */
extern T1 T753f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T1133f33(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T896f33(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T894f37(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T774f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_syntactical_type */
extern T1 T773f56(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T761f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T753f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T184f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T1133f48(T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T896f49(T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T894f54(T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T774f77(T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T773f76(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T761f56(T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T753f55(T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T184f71(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_named_type */
extern T1 T177f73(T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T175f69(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type */
extern T1 T1133f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_from_bit_type */
extern T1 T896f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_from_bit_type */
extern T1 T894f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_from_bit_type */
extern T1 T774f7(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.conforms_from_bit_type */
extern T1 T773f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T761f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T753f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.conforms_from_bit_type */
extern T1 T184f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.conforms_from_bit_type */
extern T1 T177f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_from_bit_type */
extern T1 T175f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_from_bit_type */
extern T1 T60f91(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type */
extern T1 T1133f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type */
extern T1 T896f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type */
extern T1 T894f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type */
extern T1 T774f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.conforms_from_formal_parameter_type */
extern T1 T773f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T761f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T753f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type */
extern T1 T184f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T177f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T175f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_from_formal_parameter_type */
extern T1 T60f110(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type */
extern T1 T1133f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_from_tuple_type */
extern T1 T896f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_from_tuple_type */
extern T1 T894f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_from_tuple_type */
extern T1 T774f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.conforms_from_tuple_type */
extern T1 T773f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T761f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T753f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.conforms_from_tuple_type */
extern T1 T184f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T176f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T177f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T175f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_from_tuple_type */
extern T1 T60f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type */
extern T1 T1133f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_from_class_type */
extern T1 T896f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_from_class_type */
extern T1 T894f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_from_class_type */
extern T1 T774f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.conforms_from_class_type */
extern T1 T773f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T761f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T753f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.conforms_from_class_type */
extern T1 T184f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.conforms_from_class_type */
extern T1 T177f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T466f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T176f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_from_class_type */
extern T1 T175f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_from_class_type */
extern T1 T60f62(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T1133f24(T0* C, T0* a1);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T896f37(T0* C, T0* a1);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T894f32(T0* C, T0* a1);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T774f56(T0* C, T0* a1);
/* ET_BIT_N.is_type_reference */
extern T1 T773f55(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T761f34(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T753f32(T0* C, T0* a1);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T184f49(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.is_type_reference */
extern T1 T177f53(T0* C, T0* a1);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T175f52(T0* C, T0* a1);
/* ET_CLASS.is_type_reference */
extern T1 T60f118(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T1133f11(T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_type */
extern T0* T896f7(T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_type */
extern T0* T894f11(T0* C, T0* a1);
/* ET_BIT_FEATURE.base_type */
extern T0* T774f11(T0* C, T0* a1);
/* ET_BIT_N.base_type */
extern T0* T773f16(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T761f25(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T753f20(T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_type */
extern T0* T184f10(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T176f8(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T177f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T466f7(T0* C, T0* a1);
/* ET_CLASS_TYPE.base_type */
extern T0* T175f13(T0* C, T0* a1);
/* ET_CLASS.base_type */
extern T0* T60f47(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type */
extern T1 T1133f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_base_class_type */
extern T1 T896f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_base_class_type */
extern T1 T894f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_base_class_type */
extern T1 T774f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_base_class_type */
extern T1 T773f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type */
extern T1 T761f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_base_class_type */
extern T1 T753f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_base_class_type */
extern T1 T184f19(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_base_class_type */
extern T1 T177f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_base_class_type */
extern T1 T175f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_base_class_type */
extern T1 T60f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type */
extern T1 T1133f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_base_tuple_type */
extern T1 T896f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_base_tuple_type */
extern T1 T894f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_base_tuple_type */
extern T1 T774f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_base_tuple_type */
extern T1 T773f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T761f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T753f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_base_tuple_type */
extern T1 T184f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_base_tuple_type */
extern T1 T177f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_base_tuple_type */
extern T1 T175f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_base_tuple_type */
extern T1 T60f90(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type */
extern T1 T1133f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_base_bit_type */
extern T1 T896f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_base_bit_type */
extern T1 T894f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_base_bit_type */
extern T1 T774f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_base_bit_type */
extern T1 T773f30(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T761f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T753f23(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_base_bit_type */
extern T1 T184f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_base_bit_type */
extern T1 T177f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_base_bit_type */
extern T1 T175f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_base_bit_type */
extern T1 T60f92(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T1133f46(T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T896f47(T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T894f45(T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T774f73(T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T773f72(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T761f53(T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T753f52(T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T184f67(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_base_type */
extern T1 T177f70(T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T175f70(T0* C);
/* ET_CLASS.is_base_type */
extern T1 T60f136(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T1133f9(T0* C, T0* a1);
/* ET_LIKE_CURRENT.base_class */
extern T0* T896f5(T0* C, T0* a1);
/* ET_LIKE_FEATURE.base_class */
extern T0* T894f9(T0* C, T0* a1);
/* ET_BIT_FEATURE.base_class_in_context */
extern T0* T774f9(T0* C, T0* a1);
/* ET_BIT_N.base_class_in_context */
extern T0* T773f14(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T761f23(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T753f18(T0* C, T0* a1);
/* ET_TUPLE_TYPE.base_class_in_context */
extern T0* T184f4(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.base_class_in_context */
extern T0* T177f10(T0* C, T0* a1);
/* ET_CLASS_TYPE.base_class_in_context */
extern T0* T175f11(T0* C, T0* a1);
/* ET_CLASS.base_class_in_context */
extern T0* T60f75(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T1133f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T896f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T894f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T761f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T753f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T1133f21(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_type */
extern T0* T896f21(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_type */
extern T0* T894f16(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_type */
extern T0* T774f18(T0* C, T0* a1);
/* ET_BIT_N.named_type */
extern T0* T773f22(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T761f33(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T753f28(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_type */
extern T0* T184f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T177f25(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_type */
extern T0* T175f17(T0* C, T0* a1);
/* ET_CLASS.named_type */
extern T0* T60f85(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T1133f29(T0* C, T0* a1);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T896f29(T0* C, T0* a1);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T894f28(T0* C, T0* a1);
/* ET_BIT_FEATURE.shallow_named_type */
extern T0* T774f51(T0* C, T0* a1);
/* ET_BIT_N.shallow_named_type */
extern T0* T773f51(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T761f37(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T753f33(T0* C, T0* a1);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T184f46(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.shallow_named_type */
extern T0* T177f45(T0* C, T0* a1);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T175f44(T0* C, T0* a1);
/* ET_CLASS.shallow_named_type */
extern T0* T60f116(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T1133f36(T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T894f31(T0* C);
/* ET_BIT_FEATURE.is_like_current */
extern T1 T774f59(T0* C);
/* ET_BIT_N.is_like_current */
extern T1 T773f58(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T761f38(T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T753f34(T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T184f55(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_like_current */
extern T1 T177f57(T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T175f55(T0* C);
/* ET_CLASS.is_like_current */
extern T1 T60f122(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T1133f49(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T896f50(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T894f55(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T774f79(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T774f82(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T761f57(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T753f56(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T1133f30(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T896f30(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T894f19(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T774f52(T0* C);
/* ET_BIT_N.position */
extern T0* T773f7(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T761f49(T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T753f48(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T184f47(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T1133f18(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T896f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T894f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T774f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_named_type */
extern T1 T773f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T761f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T753f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T184f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_named_type */
extern T1 T177f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T175f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_named_type */
extern T1 T60f93(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T848f34(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T848f92(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T847f34(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T847f95(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T845f34(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T845f95(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T270f41(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T270f83(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T269f41(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T269f87(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T268f41(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T268f86(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T179f32(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T179f98(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T847f38(T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T845f38(T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T270f42(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T269f42(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T268f43(T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T179f42(T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T848f39(T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T847f39(T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T845f39(T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T270f43(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T269f43(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T268f44(T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T179f43(T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T848f43(T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T847f43(T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T845f43(T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T270f25(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T269f25(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T268f26(T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T179f46(T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T848f41(T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T847f40(T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T845f40(T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T179f44(T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T848f42(T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T847f41(T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T845f41(T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T270f24(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T269f45(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T268f25(T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T179f45(T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T848f44(T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T845f44(T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T270f26(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T269f26(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T268f27(T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T179f47(T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T848f35(T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T847f35(T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T845f35(T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T270f27(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T269f27(T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T179f36(T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T848f46(T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T847f46(T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T845f46(T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T270f31(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T268f32(T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T179f48(T0* C);
/* ET_ATTRIBUTE.arguments */
extern T0* T270f32(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T269f32(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T268f33(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T848f36(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T847f36(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T845f36(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T270f28(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T269f28(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T268f42(T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T179f37(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T848f66(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T848f68(T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T847f67(T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T847f69(T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T845f67(T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T845f69(T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T270f62(T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T270f65(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T269f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T269f67(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T268f64(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T268f67(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T179f71(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T179f73(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T848f31(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T847f49(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T845f49(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T270f34(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T269f34(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T268f35(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T179f33(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T848f67(T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T847f68(T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T845f68(T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T270f63(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T269f65(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T268f65(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T179f72(T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T848f33(T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T847f33(T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T845f33(T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T270f37(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T269f36(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T268f37(T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T179f35(T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T848f61(T0* C, T0* a1);
/* ET_CLIENTS.has_descendant */
extern T1 T644f10(T0* C, T0* a1);
/* ET_CLASS.has_ancestor */
extern T1 T60f145(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T587f6(T0* C, T0* a1);
/* ET_CLIENT_LIST.has_descendant */
extern T1 T353f6(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T847f62(T0* C, T0* a1);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T845f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T270f57(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T269f59(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T268f59(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T179f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T848f47(T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T847f47(T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T845f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T269f33(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T268f29(T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T179f39(T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T848f37(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T847f37(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T845f37(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T270f29(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T269f29(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T268f30(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T179f38(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T848f45(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T847f45(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T845f45(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T270f30(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T269f30(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T268f31(T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T179f41(T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T848f30(T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T847f48(T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T845f48(T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T270f40(T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T269f40(T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T268f34(T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T179f49(T0* C);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T853f38(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T853f96(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T852f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T852f93(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T370f31(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T370f90(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T366f31(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T366f93(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T853f34(T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T852f31(T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T366f38(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T853f35(T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T852f32(T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T370f39(T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T366f39(T0* C);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T853f30(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T852f30(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T370f28(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T366f40(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T853f42(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T852f40(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T370f37(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T366f41(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T853f69(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T853f72(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T852f65(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T852f68(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T370f64(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T370f67(T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T366f65(T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T366f68(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T853f40(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T852f38(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T370f33(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T366f33(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T853f70(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T852f66(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T370f65(T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T366f66(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T853f46(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_creation_exported_to */
extern T1 T60f123(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T586f8(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_exported_to */
extern T1 T814f13(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T852f43(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T370f40(T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T366f43(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T853f61(T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T852f57(T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T370f56(T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T366f57(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T853f60(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T852f56(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T370f55(T0* C, T0* a1);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T366f56(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T858f32(T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T857f25(T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T129f50(T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T859f27(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T604f27(T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T129f49(T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T859f10(T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T858f13(T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T857f10(T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T604f13(T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T129f52(T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T859f12(T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T858f15(T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T857f12(T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T604f15(T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T129f53(T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T859f29(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T857f26(T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T859f68(T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T858f57(T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T857f54(T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T604f57(T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T129f87(T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T859f9(T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T858f12(T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T857f9(T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T604f12(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T129f20(T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T859f11(T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T858f14(T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T857f11(T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T604f14(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T129f22(T0* C);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T859f8(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T858f11(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T857f8(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T604f11(T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T129f43(T0* C, T0* a1);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T859f23(T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T858f27(T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T857f20(T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T604f23(T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T129f26(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T859f14(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T858f17(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T857f14(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T604f17(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T129f48(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T859f24(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T858f28(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T857f21(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T604f24(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T129f19(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T859f26(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T858f30(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T857f23(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T604f26(T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T859f67(T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T858f56(T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T857f53(T0* C);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T604f56(T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T129f85(T0* C);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T774f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.same_base_type */
extern T1 T773f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T184f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.same_base_type */
extern T1 T177f17(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T175f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_base_type */
extern T1 T60f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T177f13(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T175f19(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T60f68(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T60f58(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T177f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T175f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.same_syntactical_type */
extern T1 T60f119(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters */
extern T0* T177f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T466f9(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T175f20(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T60f53(T0* C, T0* a1);
/* ET_BIT_FEATURE.unaliased_to_text */
extern T0* T774f16(T0* C);
/* ET_BIT_N.unaliased_to_text */
extern T0* T773f20(T0* C);
/* ET_TUPLE_TYPE.unaliased_to_text */
extern T0* T184f6(T0* C);
/* ET_GENERIC_CLASS_TYPE.unaliased_to_text */
extern T0* T177f7(T0* C);
/* ET_CLASS_TYPE.unaliased_to_text */
extern T0* T175f16(T0* C);
/* ET_CLASS.unaliased_to_text */
extern T0* T60f56(T0* C);
/* ET_BIT_FEATURE.context_same_named_type */
extern T1 T774f54(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_named_type */
extern T1 T773f53(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_named_type */
extern T1 T184f48(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_named_type */
extern T1 T177f48(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_named_type */
extern T1 T175f50(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_named_type */
extern T1 T60f100(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_named_type */
extern T0* T774f45(T0* C);
/* ET_BIT_N.context_named_type */
extern T0* T773f45(T0* C);
/* ET_TUPLE_TYPE.context_named_type */
extern T0* T184f39(T0* C);
/* ET_GENERIC_CLASS_TYPE.context_named_type */
extern T0* T177f40(T0* C);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T175f39(T0* C);
/* ET_CLASS.context_named_type */
extern T0* T60f106(T0* C);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T774f46(T0* C);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T773f46(T0* C);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T184f40(T0* C);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual_count */
extern T6 T177f41(T0* C);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T175f40(T0* C);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T60f107(T0* C);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T774f47(T0* C, T6 a1);
/* ET_BIT_N.context_base_type_actual */
extern T0* T773f47(T0* C, T6 a1);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T184f41(T0* C, T6 a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual */
extern T0* T177f42(T0* C, T6 a1);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T175f41(T0* C, T6 a1);
/* ET_CLASS.context_base_type_actual */
extern T0* T60f108(T0* C, T6 a1);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T177f46(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T175f45(T0* C);
/* ET_CLASS.position */
extern T0* T60f117(T0* C);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T774f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.conforms_to_type */
extern T1 T773f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T184f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.conforms_to_type */
extern T1 T177f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T175f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.conforms_to_type */
extern T1 T60f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T774f24(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T773f27(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T175f5(T0* C);
/* ET_BIT_FEATURE.context_same_named_class_type */
extern T1 T774f65(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_named_class_type */
extern T1 T773f64(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_named_class_type */
extern T1 T184f58(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_named_class_type */
extern T1 T177f63(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_named_class_type */
extern T1 T175f59(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_named_class_type */
extern T1 T60f128(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type */
extern T1 T774f66(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_named_formal_parameter_type */
extern T1 T773f65(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type */
extern T1 T184f59(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T177f64(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T175f60(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_named_formal_parameter_type */
extern T1 T60f129(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_tuple_type */
extern T1 T774f67(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_named_tuple_type */
extern T1 T773f66(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_named_tuple_type */
extern T1 T184f60(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T177f66(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T175f61(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_named_tuple_type */
extern T1 T60f131(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_bit_type */
extern T1 T774f68(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_named_bit_type */
extern T1 T773f67(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_named_bit_type */
extern T1 T184f61(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_named_bit_type */
extern T1 T177f67(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_named_bit_type */
extern T1 T175f62(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_named_bit_type */
extern T1 T60f132(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.upper_name */
extern T0* T177f58(T0* C);
/* ET_CLASS_TYPE.upper_name */
extern T0* T175f56(T0* C);
/* ET_CLASS.upper_name */
extern T0* T60f69(T0* C);
/* ET_BIT_N.base_type_actual */
extern T0* T773f60(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T184f53(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T177f51(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T175f47(T0* C, T6 a1, T0* a2);
/* ET_CLASS.base_type_actual */
extern T0* T60f115(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T774f62(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T773f61(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T184f54(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T177f52(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T175f48(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T60f111(T0* C);
/* ET_BIT_FEATURE.conforms_to_context */
extern T1 T774f83(T0* C, T0* a1);
/* ET_BIT_N.conforms_to_context */
extern T1 T773f82(T0* C, T0* a1);
/* ET_TUPLE_TYPE.conforms_to_context */
extern T1 T184f75(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.conforms_to_context */
extern T1 T177f77(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.tokens */
extern T0* T177f79(T0* C);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T175f76(T0* C, T0* a1);
/* ET_CLASS_TYPE.tokens */
extern T0* T175f78(T0* C);
/* ET_CLASS.conforms_to_context */
extern T1 T60f147(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_index_of_label */
extern T6 T774f78(T0* C, T0* a1);
/* ET_BIT_N.context_base_type_index_of_label */
extern T6 T773f77(T0* C, T0* a1);
/* ET_BIT_N.index_of_label */
extern T6 T773f81(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_index_of_label */
extern T6 T184f72(T0* C, T0* a1);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T184f76(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T176f22(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T177f74(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.index_of_label */
extern T6 T177f78(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T466f23(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T175f73(T0* C, T0* a1);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T175f77(T0* C, T0* a1);
/* ET_CLASS.context_base_type_index_of_label */
extern T6 T60f142(T0* C, T0* a1);
/* ET_CLASS.index_of_label */
extern T6 T60f146(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type */
extern T1 T774f44(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_conforms_to_type */
extern T1 T773f44(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_conforms_to_type */
extern T1 T184f38(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_conforms_to_type */
extern T1 T177f39(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_conforms_to_type */
extern T1 T175f38(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_conforms_to_type */
extern T1 T60f105(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_conforms_from_bit_type */
extern T1 T774f43(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_conforms_from_bit_type */
extern T1 T773f43(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type */
extern T1 T184f37(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T177f38(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T175f37(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_conforms_from_bit_type */
extern T1 T60f104(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type */
extern T1 T774f64(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_conforms_from_formal_parameter_type */
extern T1 T773f63(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T184f57(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T177f62(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T175f58(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_conforms_from_formal_parameter_type */
extern T1 T60f127(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type */
extern T1 T774f42(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_conforms_from_tuple_type */
extern T1 T773f42(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type */
extern T1 T184f36(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T177f37(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T175f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_conforms_from_tuple_type */
extern T1 T60f103(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_conforms_from_class_type */
extern T1 T774f41(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_conforms_from_class_type */
extern T1 T773f41(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_conforms_from_class_type */
extern T1 T184f35(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T177f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T175f35(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_conforms_from_class_type */
extern T1 T60f102(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_is_type_reference */
extern T1 T774f80(T0* C);
/* ET_BIT_N.context_is_type_reference */
extern T1 T773f79(T0* C);
/* ET_TUPLE_TYPE.context_is_type_reference */
extern T1 T184f74(T0* C);
/* ET_GENERIC_CLASS_TYPE.context_is_type_reference */
extern T1 T177f76(T0* C);
/* ET_CLASS_TYPE.context_is_type_reference */
extern T1 T175f75(T0* C);
/* ET_CLASS.context_is_type_reference */
extern T1 T60f144(T0* C);
/* ET_BIT_FEATURE.context_base_type */
extern T0* T774f37(T0* C);
/* ET_BIT_N.context_base_type */
extern T0* T773f37(T0* C);
/* ET_TUPLE_TYPE.context_base_type */
extern T0* T184f31(T0* C);
/* ET_GENERIC_CLASS_TYPE.context_base_type */
extern T0* T177f32(T0* C);
/* ET_CLASS_TYPE.context_base_type */
extern T0* T175f31(T0* C);
/* ET_CLASS.context_base_type */
extern T0* T60f96(T0* C);
/* ET_BIT_FEATURE.context_same_base_class_type */
extern T1 T774f38(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_base_class_type */
extern T1 T773f38(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_base_class_type */
extern T1 T184f32(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_base_class_type */
extern T1 T177f33(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_base_class_type */
extern T1 T175f32(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_base_class_type */
extern T1 T60f97(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_same_base_tuple_type */
extern T1 T774f39(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_base_tuple_type */
extern T1 T773f39(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_base_tuple_type */
extern T1 T184f33(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T177f34(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T175f33(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_base_tuple_type */
extern T1 T60f98(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.context_same_base_bit_type */
extern T1 T774f40(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_same_base_bit_type */
extern T1 T773f40(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.context_same_base_bit_type */
extern T1 T184f34(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_same_base_bit_type */
extern T1 T177f35(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.context_same_base_bit_type */
extern T1 T175f34(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_same_base_bit_type */
extern T1 T60f99(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T177f11(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T175f4(T0* C);
/* ET_CLASS.is_generic */
extern T1 T60f57(T0* C);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T773f78(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T184f73(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_index_of_label */
extern T6 T177f75(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T175f74(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_index_of_label */
extern T6 T60f143(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.to_text */
extern T0* T774f25(T0* C);
/* ET_BIT_N.to_text */
extern T0* T773f8(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T184f15(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T177f16(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T175f7(T0* C);
/* ET_CLASS.to_text */
extern T0* T60f78(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T243f47(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T242f47(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T237f45(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T223f45(T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T161f29(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T243f55(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T242f56(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T237f54(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T223f54(T0* C);
/* ET_DYNAMIC_TYPE.hash_code */
extern T6 T161f55(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_nested_reference_attributes */
extern T1 T243f56(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_nested_reference_attributes */
extern T1 T242f57(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_nested_reference_attributes */
extern T1 T237f55(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_nested_reference_attributes */
extern T1 T223f55(T0* C);
/* ET_DYNAMIC_TYPE.has_nested_reference_attributes */
extern T1 T161f57(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T243f46(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T226f10(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge929os15165;
extern T0* ge929ov15165;
extern T0* T226f5(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T226f6(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T226f9(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_attribute */
extern void T243f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.put */
extern void T226f12(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T243f54(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T226c8(T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T242f46(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_attribute */
extern void T242f72(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T242f51(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T174f52(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T154f20(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T64f268(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T590c13(T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T242f19(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T242f51p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T237f58(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_attribute */
extern void T237f71(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T237f49(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T237f18(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T237f49p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T223f58(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_attribute */
extern void T223f71(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T223f49(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T154f18(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T64f266(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge794os12795;
extern T0* ge794ov12795;
extern T0* T160f45(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T223f18(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T223f49p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T161f25(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_attribute */
extern void T161f68(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T161f21(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T243f49(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T242f49(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T237f47(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T223f47(T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T161f26(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_builtin_attribute */
extern T1 T243f19(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_FUNCTION_TYPE.is_builtin_attribute */
extern T1 T242f21(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.is_builtin_attribute */
extern T1 T237f20(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.is_builtin_attribute */
extern T1 T223f19(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_TYPE.is_builtin_attribute */
extern T1 T161f32(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T243f58(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T242f59(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T223f57(T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T161f59(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T243f57(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T242f55(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T237f53(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T223f53(T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T161f22(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T243f45(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T243f18(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T243f20(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T243f18p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T242f45(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T242f58(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T242f58p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T237f44(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T237f56(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T237f56p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T223f44(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T223f56(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T154f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T64f267(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T223f56p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T161f27(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T161f23(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T243f43(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T242f20(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T237f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T223f42(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T161f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T237f64(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T223f64(T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T161f62(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T243f48(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T242f48(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T237f46(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T223f46(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T161f24(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T243f44(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T242f44(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T237f43(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T223f43(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T161f28(T0* C, T6 a1, T0* a2);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1569f12(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1569f7(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1569f6(T0* C);
/* ARRAY [STRING_8].valid_index */
extern T1 T86f4(T0* C, T6 a1);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1569f9(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T1334f17(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T1334f19(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T1334f18(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T1334f15(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T1333f12(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T1333f7(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T1333f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T1333f9(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1118f5(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1118f3(T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1118f6(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1118f4(T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.default_message */
extern T0* T1042f5(T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.message */
extern T0* T1042f3(T0* C, T0* a1);
/* UT_TOO_MANY_INCLUDES_ERROR.arguments */
extern T0* T1042f6(T0* C);
/* UT_TOO_MANY_INCLUDES_ERROR.string_ */
extern T0* T1042f4(T0* C);
/* UT_SYNTAX_ERROR.default_message */
extern T0* T1041f5(T0* C);
/* UT_SYNTAX_ERROR.message */
extern T0* T1041f3(T0* C, T0* a1);
/* UT_SYNTAX_ERROR.arguments */
extern T0* T1041f6(T0* C);
/* UT_SYNTAX_ERROR.string_ */
extern T0* T1041f4(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T581f5(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T581f3(T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T581f6(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T581f4(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T580f5(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T580f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T580f6(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T580f4(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T579f5(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T579f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T579f6(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T579f4(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T578f5(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T578f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T578f6(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T578f4(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T577f5(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T577f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T577f6(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T577f4(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T576f5(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T576f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T576f6(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T576f4(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T575f5(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T575f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T575f6(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T575f4(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T574f5(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T574f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T574f6(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T574f4(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T571f30(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T571f18(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T571f32(T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T571f29(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T570f5(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T570f7(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T570f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T570f9(T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T569f5(T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T569f7(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T569f6(T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T569f9(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T311f5(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T311f3(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T311f6(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T311f4(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T310f5(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T310f3(T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T310f6(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T310f4(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T309f5(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T309f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T309f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T308f5(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T308f3(T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T308f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T308f4(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T307f5(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T307f3(T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T307f6(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T307f4(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T306f5(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T306f3(T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T306f6(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T306f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T225f2(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T225f4(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T225f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T225f5(T0* C);
/* UT_MESSAGE.default_message */
extern T0* T114f5(T0* C);
/* UT_MESSAGE.message */
extern T0* T114f3(T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T114f6(T0* C);
/* UT_MESSAGE.string_ */
extern T0* T114f4(T0* C);
/* UT_VERSION_NUMBER.default_message */
extern T0* T69f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T69f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern T0* T69f6(T0* C);
/* UT_VERSION_NUMBER.string_ */
extern T0* T69f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T68f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T68f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T68f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T68f5(T0* C);
/* AP_ERROR.default_message */
extern T0* T32f16(T0* C);
/* AP_ERROR.message */
extern T0* T32f17(T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T32f19(T0* C);
/* AP_ERROR.string_ */
extern T0* T32f18(T0* C);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T41f24(T0* C);
/* AP_INTEGER_OPTION.was_found */
extern T1 T37f12(T0* C);
/* AP_BOOLEAN_OPTION.was_found */
extern T1 T36f14(T0* C);
/* AP_ENUMERATION_OPTION.was_found */
extern T1 T35f18(T0* C);
/* AP_FLAG.was_found */
extern T1 T33f9(T0* C);
/* AP_INTEGER_OPTION.occurrences */
extern T6 T37f11(T0* C);
/* AP_BOOLEAN_OPTION.occurrences */
extern T6 T36f10(T0* C);
/* AP_ENUMERATION_OPTION.occurrences */
extern T6 T35f17(T0* C);
/* AP_DISPLAY_HELP_FLAG.allows_parameter */
extern T1 T41f21(T0* C);
/* AP_INTEGER_OPTION.allows_parameter */
extern T1 T37f16(T0* C);
/* AP_BOOLEAN_OPTION.allows_parameter */
extern T1 T36f13(T0* C);
/* AP_ENUMERATION_OPTION.allows_parameter */
extern T1 T35f15(T0* C);
/* AP_FLAG.allows_parameter */
extern T1 T33f12(T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T41f19(T0* C);
/* AP_INTEGER_OPTION.needs_parameter */
extern T1 T37f15(T0* C);
/* AP_BOOLEAN_OPTION.needs_parameter */
extern T1 T36f12(T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T33f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T41f20(T0* C);
/* AP_INTEGER_OPTION.name */
extern T0* T37f10(T0* C);
/* AP_BOOLEAN_OPTION.name */
extern T0* T36f16(T0* C);
/* AP_ENUMERATION_OPTION.name */
extern T0* T35f12(T0* C);
/* AP_FLAG.name */
extern T0* T33f13(T0* C);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T41f26(T0* C);
/* AP_INTEGER_OPTION.example */
extern T0* T37f19(T0* C);
/* AP_BOOLEAN_OPTION.example */
extern T0* T36f17(T0* C);
/* AP_ENUMERATION_OPTION.example */
extern T0* T35f19(T0* C);
/* AP_FLAG.example */
extern T0* T33f14(T0* C);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T41f34(T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T37f21(T0* C);
/* AP_INTEGER_OPTION.names */
extern T0* T37f21p1(T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T36f24(T0* C);
/* AP_BOOLEAN_OPTION.names */
extern T0* T36f24p1(T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T35f23(T0* C);
/* AP_ENUMERATION_OPTION.names */
extern T0* T35f23p1(T0* C);
/* AP_FLAG.names */
extern T0* T33f17(T0* C);
/* AP_DISPLAY_HELP_FLAG.has_long_form */
extern T1 T41f18(T0* C);
/* AP_INTEGER_OPTION.has_long_form */
extern T1 T37f13(T0* C);
/* AP_BOOLEAN_OPTION.has_long_form */
extern T1 T36f11(T0* C);
/* AP_ENUMERATION_OPTION.has_long_form */
extern T1 T35f14(T0* C);
/* AP_FLAG.has_long_form */
extern T1 T33f10(T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T596f6(T0* C);
/* DS_LINKED_QUEUE [CHARACTER_8].item */
extern T2 T1147f5(T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T596f21(T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T22f25(T0* C);
/* KL_STDIN_FILE.is_closable */
extern T1 T1127f11(T0* C);
/* XM_EIFFEL_INPUT_STREAM.is_closable */
extern T1 T596f7(T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T22f33(T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T1127f16(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T1127f10(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T1127f13(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T1127f8(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T596f28(T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T596f28p1(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1481f7(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T22f29(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge399os1832;
extern T0* ge399ov1832;
extern T0* T22f38(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T22f36(T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T596f5(T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge307os1807;
extern T0* ge307ov1807;
extern T0* T1481f6(T0* C);
/* ET_LACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T56f149(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T1332c3(T0* a1);
/* ET_XACE_SYSTEM.dotnet_assembly_consumer */
extern T0* T53f153(T0* C);
/* ET_SYSTEM.dotnet_assembly_consumer */
extern T0* T25f136(T0* C);
/* ET_LACE_SYSTEM.is_dotnet */
extern T1 T56f158(T0* C);
/* ET_LACE_DOTNET_ASSEMBLIES.count */
extern T6 T138f3(T0* C);
/* ET_XACE_SYSTEM.is_dotnet */
extern T1 T53f162(T0* C);
/* ET_SYSTEM.is_dotnet */
extern T1 T25f142(T0* C);
/* ET_LACE_SYSTEM.is_ise */
extern T1 T56f152(T0* C);
/* ET_XACE_SYSTEM.is_ise */
extern T1 T53f160(T0* C);
/* ET_SYSTEM.is_ise */
extern T1 T25f138(T0* C);
/* XM_NAMESPACE.is_equal */
extern T1 T1340f4(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T402f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T402f15(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T129f35(T0* C, T0* a1);
/* STRING_8.is_equal */
extern T1 T17f19(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f21(T0* C, T0* a1, T0* a2, T6 a3);
extern T0* GE_ma538(T6 c, T6 n, ...);
extern T0* GE_ma86(T6 c, T6 n, ...);
extern T0* GE_ma362(T6 c, T6 n, ...);
extern T0* GE_ma385(T6 c, T6 n, ...);
extern T0* GE_ma1135(T6 c, T6 n, ...);
extern T0* ge412ov9638;
extern T0* ge416ov2967;
extern T0* ge349ov25030;
extern T0* ge422ov10424;
extern T0* ge414ov9638;
extern T0* ge975ov7490;
extern T0* ge975ov7495;
extern T0* ge388ov1851;
extern T0* ge1190ov15718;
extern T0* ge1190ov15703;
extern T0* ge1190ov15696;
extern T0* ge1190ov15681;
extern T0* ge1190ov15706;
extern T0* ge1190ov15699;
extern T0* ge1190ov15707;
extern T0* ge1190ov15716;
extern T0* ge1190ov15709;
extern T0* ge1190ov15705;
extern T0* ge1190ov15693;
extern T0* ge1190ov15694;
extern T0* ge1190ov15708;
extern T0* ge1190ov15695;
extern T0* ge1190ov15682;
extern T0* ge1190ov15683;
extern T0* ge1190ov15684;
extern T0* ge1190ov15690;
extern T0* ge1190ov15692;
extern T0* ge1190ov15687;
extern T0* ge1190ov15712;
extern T0* ge1190ov15711;
extern T0* ge1190ov15688;
extern T0* ge1190ov15689;
extern T0* ge1190ov15686;
extern T0* ge1190ov15685;
extern T0* ge1186ov15476;
extern T0* ge975ov7492;
extern T0* ge975ov7494;
extern T0* ge975ov7373;
extern T0* ge975ov7405;
extern T0* ge975ov7382;
extern T0* ge975ov7377;
extern T0* ge975ov7464;
extern T0* ge794ov13082;
extern T0* ge794ov13042;
extern T0* ge794ov13167;
extern T0* ge975ov7462;
extern T0* ge975ov7410;
extern T0* ge975ov7412;
extern T0* ge975ov7475;
extern T0* ge975ov7432;
extern T0* ge975ov7426;
extern T0* ge975ov7368;
extern T0* ge975ov7458;
extern T0* ge975ov7424;
extern T0* ge794ov13061;
extern T0* ge794ov12994;
extern T0* ge970ov23932;
extern T0* ge970ov23931;
extern T0* ge970ov23930;
extern T0* ge794ov13141;
extern T0* ge975ov7456;
extern T0* ge975ov7413;
extern T0* ge975ov7407;
extern T0* ge975ov7457;
extern T0* ge975ov7383;
extern T0* ge975ov7406;
extern T0* ge975ov7466;
extern T0* ge975ov7486;
extern T0* ge975ov7428;
extern T0* ge975ov7430;
extern T0* ge975ov7429;
extern T0* ge975ov7479;
extern T0* ge975ov7370;
extern T0* ge975ov7431;
extern T0* ge975ov7461;
extern T0* ge975ov7411;
extern T0* ge975ov7460;
extern T0* ge975ov7447;
extern T0* ge975ov7473;
extern T0* ge975ov7476;
extern T0* ge975ov7415;
extern T0* ge794ov13144;
extern T0* ge975ov7442;
extern T0* ge975ov7423;
extern T0* ge975ov7439;
extern T0* ge975ov7425;
extern T0* ge975ov7367;
extern T0* ge975ov7369;
extern T0* ge975ov7372;
extern T0* ge975ov7449;
extern T0* ge975ov7416;
extern T0* ge975ov7477;
extern T0* ge975ov7482;
extern T0* ge975ov7441;
extern T0* ge975ov7440;
extern T0* ge975ov7450;
extern T0* ge975ov7374;
extern T0* ge975ov7433;
extern T0* ge975ov7427;
extern T0* ge975ov7371;
extern T0* ge975ov7380;
extern T0* ge975ov7401;
extern T0* ge975ov7399;
extern T0* ge975ov7392;
extern T0* ge975ov7391;
extern T0* ge975ov7390;
extern T0* ge975ov7389;
extern T0* ge975ov7387;
extern T0* ge975ov7402;
extern T0* ge975ov7379;
extern T0* ge975ov7376;
extern T0* ge975ov7448;
extern T0* ge975ov7434;
extern T0* ge975ov7421;
extern T0* ge975ov7472;
extern T0* ge794ov13076;
extern T0* ge794ov13016;
extern T0* ge975ov7465;
extern T0* ge975ov7417;
extern T0* ge975ov7418;
extern T0* ge975ov7463;
extern T0* ge975ov7419;
extern T0* ge975ov7420;
extern T0* ge975ov7474;
extern T0* ge975ov7452;
extern T0* ge975ov7408;
extern T0* ge975ov7491;
extern T0* ge975ov7375;
extern T0* ge975ov7483;
extern T0* ge975ov7478;
extern T0* ge975ov7384;
extern T0* ge975ov7471;
extern T0* ge975ov7397;
extern T0* ge975ov7396;
extern T0* ge975ov7395;
extern T0* ge975ov7394;
extern T0* ge975ov7388;
extern T0* ge975ov7386;
extern T0* ge975ov7385;
extern T0* ge975ov7381;
extern T0* ge794ov12985;
extern T0* ge975ov7400;
extern T0* ge794ov13006;
extern T0* ge975ov7393;
extern T0* ge794ov12996;
extern T0* ge794ov12989;
extern T0* ge975ov7409;
extern T0* ge794ov13019;
extern T0* ge975ov7378;
extern T0* ge794ov12982;
extern T0* ge794ov13163;
extern T0* ge794ov13157;
extern T0* ge794ov13020;
extern T0* ge973ov23920;
extern T0* ge973ov23914;
extern T0* ge973ov23908;
extern T0* ge973ov23916;
extern T0* ge973ov23910;
extern T0* ge973ov23904;
extern T0* ge973ov23919;
extern T0* ge973ov23913;
extern T0* ge973ov23907;
extern T0* ge973ov23921;
extern T0* ge973ov23915;
extern T0* ge973ov23909;
extern T0* ge794ov13054;
extern T0* ge973ov23918;
extern T0* ge973ov23912;
extern T0* ge973ov23906;
extern T0* ge794ov13048;
extern T0* ge794ov13130;
extern T0* ge794ov13096;
extern T0* ge794ov13139;
extern T0* ge794ov13085;
extern T0* ge794ov13052;
extern T0* ge974ov24788;
extern T0* ge974ov24548;
extern T0* ge974ov24412;
extern T0* ge974ov24786;
extern T0* ge974ov24546;
extern T0* ge974ov24410;
extern T0* ge974ov24787;
extern T0* ge974ov24547;
extern T0* ge974ov24411;
extern T0* ge794ov13022;
extern T0* ge973ov23917;
extern T0* ge973ov23911;
extern T0* ge973ov23905;
extern T0* ge389ov9691;
extern T0* ge794ov13268;
extern T0* ge794ov13011;
extern T0* ge794ov13265;
extern T0* ge794ov13259;
extern T0* ge794ov13254;
extern T0* ge794ov13253;
extern T0* ge794ov13250;
extern T0* ge794ov13018;
extern T0* ge794ov13017;
extern T0* ge794ov13015;
extern T0* ge794ov13180;
extern T0* ge794ov13014;
extern T0* ge794ov13013;
extern T0* ge794ov13012;
extern T0* ge794ov13010;
extern T0* ge794ov13009;
extern T0* ge794ov13267;
extern T0* ge794ov13008;
extern T0* ge794ov13266;
extern T0* ge794ov13007;
extern T0* ge794ov13005;
extern T0* ge794ov13004;
extern T0* ge794ov13264;
extern T0* ge794ov13003;
extern T0* ge794ov13002;
extern T0* ge794ov13001;
extern T0* ge794ov13263;
extern T0* ge794ov13000;
extern T0* ge794ov13262;
extern T0* ge794ov12999;
extern T0* ge794ov13261;
extern T0* ge794ov12998;
extern T0* ge794ov13260;
extern T0* ge794ov12997;
extern T0* ge794ov12995;
extern T0* ge794ov13258;
extern T0* ge794ov12993;
extern T0* ge794ov13257;
extern T0* ge794ov12992;
extern T0* ge794ov13256;
extern T0* ge794ov12991;
extern T0* ge794ov13255;
extern T0* ge794ov12990;
extern T0* ge794ov12988;
extern T0* ge794ov12987;
extern T0* ge794ov12986;
extern T0* ge794ov13252;
extern T0* ge794ov12984;
extern T0* ge794ov13251;
extern T0* ge794ov12983;
extern T0* ge794ov13249;
extern T0* ge794ov12981;
extern T0* ge794ov12980;
extern T0* ge794ov12978;
extern T0* ge794ov12977;
extern T0* ge794ov12979;
extern T0* ge1304ov11066;
extern T0* ge1304ov11065;
extern T0* ge1031ov4444;
extern T0* ge1031ov4445;
extern T0* ge1031ov4446;
extern T0* ge1031ov4447;
extern T0* ge1031ov4448;
extern T0* ge1031ov4449;
extern T0* ge1031ov4450;
extern T0* ge1031ov4451;
extern T0* ge1031ov4452;
extern T0* ge1031ov4453;
extern T0* ge1031ov4454;
extern T0* ge1031ov4455;
extern T0* ge1031ov4456;
extern T0* ge1031ov4457;
extern T0* ge1031ov4458;
extern T0* ge1031ov4459;
extern T0* ge1031ov4460;
extern T0* ge1031ov4461;
extern T0* ge1031ov4462;
extern T0* ge1031ov4463;
extern T0* ge1031ov4464;
extern T0* ge1031ov4465;
extern T0* ge1031ov4466;
extern T0* ge1031ov4467;
extern T0* ge1031ov4468;
extern T0* ge1031ov4469;
extern T0* ge1031ov4470;
extern T0* ge1031ov4471;
extern T0* ge1031ov4472;
extern T0* ge1031ov4473;
extern T0* ge1031ov4474;
extern T0* ge1031ov4475;
extern T0* ge1031ov4476;
extern T0* ge1031ov4477;
extern T0* ge1031ov4478;
extern T0* ge1031ov4479;
extern T0* ge1031ov4480;
extern T0* ge1031ov4481;
extern T0* ge1031ov4482;
extern T0* ge1031ov4483;
extern T0* ge1031ov4484;
extern T0* ge1031ov4485;
extern T0* ge1031ov4486;
extern T0* ge1031ov4487;
extern T0* ge1031ov4488;
extern T0* ge1031ov4489;
extern T0* ge1031ov4490;
extern T0* ge1031ov4491;
extern T0* ge1031ov4492;
extern T0* ge1031ov4493;
extern T0* ge1031ov4494;
extern T0* ge1031ov4495;
extern T0* ge1031ov4496;
extern T0* ge1031ov4497;
extern T0* ge1031ov4498;
extern T0* ge1031ov4499;
extern T0* ge1031ov4500;
extern T0* ge1031ov4501;
extern T0* ge1031ov4502;
extern T0* ge1031ov4503;
extern T0* ge1031ov4504;
extern T0* ge1031ov4505;
extern T0* ge1031ov4506;
extern T0* ge1031ov4507;
extern T0* ge1031ov4508;
extern T0* ge1031ov4509;
extern T0* ge1031ov4510;
extern T0* ge1031ov4511;
extern T0* ge1031ov4512;
extern T0* ge1031ov4513;
extern T0* ge1031ov4514;
extern T0* ge1031ov4515;
extern T0* ge1031ov4516;
extern T0* ge1031ov4517;
extern T0* ge1031ov4518;
extern T0* ge1031ov4519;
extern T0* ge1031ov4520;
extern T0* ge1031ov4521;
extern T0* ge1031ov4522;
extern T0* ge1031ov4523;
extern T0* ge1031ov4524;
extern T0* ge1031ov4525;
extern T0* ge1031ov4526;
extern T0* ge1031ov4527;
extern T0* ge1031ov4528;
extern T0* ge1031ov4529;
extern T0* ge1031ov4530;
extern T0* ge1031ov4531;
extern T0* ge1031ov4532;
extern T0* ge1031ov4533;
extern T0* ge1031ov4534;
extern T0* ge1031ov4535;
extern T0* ge1031ov4536;
extern T0* ge1031ov4634;
extern T0* ge1031ov4645;
extern T0* ge1066ov4411;
extern T0* ge1031ov4654;
extern T0* ge1031ov4641;
extern T0* ge1031ov4646;
extern T0* ge1031ov4647;
extern T0* ge1031ov4648;
extern T0* ge1031ov4635;
extern T0* ge1031ov4652;
extern T0* ge1031ov4656;
extern T0* ge1031ov4639;
extern T0* ge1031ov4631;
extern T0* ge1031ov4642;
extern T0* ge1031ov4640;
extern T0* ge1031ov4637;
extern T0* ge1031ov4651;
extern T0* ge1031ov4650;
extern T0* ge1031ov4633;
extern T0* ge1031ov4655;
extern T0* ge1031ov4632;
extern T0* ge1031ov4638;
extern T0* ge1031ov4653;
extern T0* ge1031ov4649;
extern T0* ge1031ov4643;
extern T0* ge1031ov4636;
extern T0* ge1031ov4659;
extern T0* ge1031ov4644;
extern T0* ge1031ov4657;
extern T0* ge1066ov4410;
extern T0* ge1066ov4409;
extern T0* ge1021ov17938;
extern T0* ge1027ov16992;
extern T0* ge1311ov11602;
extern T0* ge1311ov11564;
extern T0* ge1311ov11562;
extern T0* ge1311ov11603;
extern T0* ge1311ov11575;
extern T0* ge1311ov11574;
extern T0* ge1311ov11585;
extern T0* ge1311ov11579;
extern T0* ge1311ov11578;
extern T0* ge1311ov11577;
extern T0* ge1311ov11583;
extern T0* ge1311ov11582;
extern T0* ge1311ov11584;
extern T0* ge1311ov11561;
extern T0* ge1311ov11587;
extern T0* ge1311ov11596;
extern T0* ge1314ov11417;
extern T0* ge1314ov11415;
extern T0* ge1314ov11416;
extern T0* ge1311ov11597;
extern T0* ge1311ov11598;
extern T0* ge1311ov11601;
extern T0* ge1311ov11599;
extern T0* ge1311ov11600;
extern T0* ge1311ov11594;
extern T0* ge1307ov23066;
extern T0* ge1307ov23067;
extern T0* ge1311ov11567;
extern T0* ge1311ov11590;
extern T0* ge1311ov11610;
extern T0* ge1311ov11611;
extern T0* ge1311ov11612;
extern T0* ge1311ov11605;
extern T0* ge1311ov11588;
extern T0* ge1311ov11589;
extern T0* ge1311ov11591;
extern T0* ge1311ov11595;
extern T0* ge1104ov5203;
extern T0* ge57ov4098;
extern T0* ge57ov4105;
extern T0* ge55ov4346;
extern T0* ge318ov1715;
extern T0* ge54ov3581;
extern T0* ge57ov4101;
extern T0* ge57ov4108;
extern T0* ge57ov4099;
extern T0* ge57ov4106;
extern T0* ge57ov4100;
extern T0* ge57ov4107;
extern T0* ge57ov4102;
extern T0* ge57ov4109;
extern T0* ge57ov4103;
extern T0* ge57ov4110;
extern T0* ge54ov3576;
extern T0* ge54ov3575;
extern T0* ge54ov3583;
extern T0* ge54ov3582;
extern T0* ge1318ov22776;
extern T0* ge1318ov22777;
extern T0* ge1309ov25038;
extern T0* ge1309ov25040;
extern T0* ge878ov14721;
extern T0* ge871ov27201;
extern T0* ge874ov26750;
extern T0* ge850ov26778;
extern T0* ge974ov24768;
extern T0* ge974ov24530;
extern T0* ge974ov24392;
extern T0* ge974ov24767;
extern T0* ge974ov24391;
extern T0* ge974ov24591;
extern T0* ge974ov24442;
extern T0* ge974ov24215;
extern T0* ge794ov13184;
extern T0* ge974ov24765;
extern T0* ge974ov24529;
extern T0* ge974ov24389;
extern T0* ge974ov24764;
extern T0* ge974ov24388;
extern T0* ge974ov24590;
extern T0* ge974ov24441;
extern T0* ge974ov24214;
extern T0* ge974ov24559;
extern T0* ge974ov24427;
extern T0* ge974ov24183;
extern T0* ge974ov24770;
extern T0* ge974ov24532;
extern T0* ge974ov24394;
extern T0* ge974ov24795;
extern T0* ge974ov24553;
extern T0* ge974ov24419;
extern T0* ge974ov24796;
extern T0* ge974ov24420;
extern T0* ge974ov24793;
extern T0* ge974ov24552;
extern T0* ge974ov24417;
extern T0* ge974ov24794;
extern T0* ge974ov24418;
extern T0* ge974ov24686;
extern T0* ge974ov24487;
extern T0* ge974ov24310;
extern T0* ge974ov24799;
extern T0* ge974ov24555;
extern T0* ge974ov24423;
extern T0* ge974ov24800;
extern T0* ge974ov24424;
extern T0* ge974ov24797;
extern T0* ge974ov24554;
extern T0* ge974ov24421;
extern T0* ge974ov24798;
extern T0* ge974ov24422;
extern T0* ge974ov24684;
extern T0* ge974ov24486;
extern T0* ge974ov24308;
extern T0* ge974ov24622;
extern T0* ge974ov24458;
extern T0* ge974ov24246;
extern T0* ge974ov24624;
extern T0* ge974ov24248;
extern T0* ge974ov24560;
extern T0* ge974ov24184;
extern T0* ge974ov24772;
extern T0* ge974ov24533;
extern T0* ge974ov24396;
extern T0* ge974ov24766;
extern T0* ge974ov24390;
extern T0* ge974ov24771;
extern T0* ge974ov24395;
extern T0* ge974ov24685;
extern T0* ge974ov24309;
extern T0* ge974ov24620;
extern T0* ge974ov24244;
extern T0* ge974ov24626;
extern T0* ge974ov24250;
extern T0* ge974ov24623;
extern T0* ge974ov24247;
extern T0* ge974ov24621;
extern T0* ge974ov24245;
extern T0* ge974ov24760;
extern T0* ge974ov24526;
extern T0* ge974ov24384;
extern T0* ge974ov24761;
extern T0* ge974ov24385;
extern T0* ge974ov24664;
extern T0* ge974ov24476;
extern T0* ge974ov24288;
extern T0* ge974ov24660;
extern T0* ge974ov24475;
extern T0* ge974ov24284;
extern T0* ge974ov24661;
extern T0* ge974ov24285;
extern T0* ge974ov24652;
extern T0* ge974ov24472;
extern T0* ge974ov24276;
extern T0* ge974ov24663;
extern T0* ge974ov24287;
extern T0* ge974ov24662;
extern T0* ge974ov24286;
extern T0* ge974ov24659;
extern T0* ge974ov24474;
extern T0* ge974ov24283;
extern T0* ge974ov24631;
extern T0* ge974ov24462;
extern T0* ge974ov24255;
extern T0* ge974ov24630;
extern T0* ge974ov24461;
extern T0* ge974ov24254;
extern T0* ge974ov24629;
extern T0* ge974ov24460;
extern T0* ge974ov24253;
extern T0* ge974ov24628;
extern T0* ge974ov24459;
extern T0* ge974ov24252;
extern T0* ge974ov24627;
extern T0* ge974ov24251;
extern T0* ge974ov24566;
extern T0* ge974ov24432;
extern T0* ge974ov24190;
extern T0* ge974ov24564;
extern T0* ge974ov24431;
extern T0* ge974ov24188;
extern T0* ge974ov24594;
extern T0* ge974ov24443;
extern T0* ge974ov24218;
extern T0* ge974ov24595;
extern T0* ge974ov24219;
extern T0* ge974ov24578;
extern T0* ge974ov24436;
extern T0* ge974ov24202;
extern T0* ge974ov24577;
extern T0* ge974ov24201;
extern T0* ge974ov24579;
extern T0* ge974ov24203;
extern T0* ge974ov24603;
extern T0* ge974ov24447;
extern T0* ge974ov24227;
extern T0* ge974ov24592;
extern T0* ge974ov24216;
extern T0* ge974ov24593;
extern T0* ge974ov24217;
extern T0* ge974ov24637;
extern T0* ge974ov24463;
extern T0* ge974ov24261;
extern T0* ge974ov24634;
extern T0* ge974ov24258;
extern T0* ge974ov24641;
extern T0* ge974ov24464;
extern T0* ge974ov24265;
extern T0* ge974ov24638;
extern T0* ge974ov24262;
extern T0* ge974ov24635;
extern T0* ge974ov24259;
extern T0* ge974ov24642;
extern T0* ge974ov24266;
extern T0* ge974ov24639;
extern T0* ge974ov24263;
extern T0* ge974ov24636;
extern T0* ge974ov24260;
extern T0* ge974ov24643;
extern T0* ge974ov24267;
extern T0* ge974ov24750;
extern T0* ge974ov24521;
extern T0* ge974ov24374;
extern T0* ge974ov24648;
extern T0* ge974ov24468;
extern T0* ge974ov24272;
extern T0* ge974ov24647;
extern T0* ge974ov24271;
extern T0* ge974ov24633;
extern T0* ge974ov24257;
extern T0* ge974ov24632;
extern T0* ge974ov24256;
extern T0* ge974ov24640;
extern T0* ge974ov24264;
extern T0* ge974ov24646;
extern T0* ge974ov24467;
extern T0* ge974ov24270;
extern T0* ge974ov24645;
extern T0* ge974ov24466;
extern T0* ge974ov24269;
extern T0* ge974ov24644;
extern T0* ge974ov24465;
extern T0* ge974ov24268;
extern T0* ge974ov24728;
extern T0* ge974ov24514;
extern T0* ge974ov24352;
extern T0* ge974ov24726;
extern T0* ge974ov24513;
extern T0* ge974ov24350;
extern T0* ge974ov24581;
extern T0* ge974ov24437;
extern T0* ge974ov24205;
extern T0* ge974ov24694;
extern T0* ge974ov24492;
extern T0* ge974ov24318;
extern T0* ge974ov24580;
extern T0* ge974ov24204;
extern T0* ge974ov24693;
extern T0* ge974ov24317;
extern T0* ge974ov24692;
extern T0* ge974ov24491;
extern T0* ge974ov24316;
extern T0* ge974ov24611;
extern T0* ge974ov24452;
extern T0* ge974ov24235;
extern T0* ge974ov24609;
extern T0* ge974ov24450;
extern T0* ge974ov24233;
extern T0* ge974ov24608;
extern T0* ge974ov24232;
extern T0* ge974ov24615;
extern T0* ge974ov24454;
extern T0* ge974ov24239;
extern T0* ge974ov24614;
extern T0* ge974ov24238;
extern T0* ge974ov24616;
extern T0* ge974ov24455;
extern T0* ge974ov24240;
extern T0* ge974ov24676;
extern T0* ge974ov24481;
extern T0* ge974ov24300;
extern T0* ge974ov24675;
extern T0* ge974ov24299;
extern T0* ge974ov24674;
extern T0* ge974ov24298;
extern T0* ge974ov24673;
extern T0* ge974ov24297;
extern T0* ge974ov24677;
extern T0* ge974ov24482;
extern T0* ge974ov24301;
extern T0* ge974ov24597;
extern T0* ge974ov24444;
extern T0* ge974ov24221;
extern T0* ge974ov24596;
extern T0* ge974ov24220;
extern T0* ge974ov24602;
extern T0* ge974ov24226;
extern T0* ge974ov24599;
extern T0* ge974ov24445;
extern T0* ge974ov24223;
extern T0* ge974ov24600;
extern T0* ge974ov24224;
extern T0* ge974ov24691;
extern T0* ge974ov24315;
extern T0* ge974ov24598;
extern T0* ge974ov24222;
extern T0* ge974ov24612;
extern T0* ge974ov24236;
extern T0* ge974ov24601;
extern T0* ge974ov24446;
extern T0* ge974ov24225;
extern T0* ge974ov24606;
extern T0* ge974ov24448;
extern T0* ge974ov24230;
extern T0* ge974ov24604;
extern T0* ge974ov24228;
extern T0* ge974ov24605;
extern T0* ge974ov24229;
extern T0* ge974ov24699;
extern T0* ge974ov24496;
extern T0* ge974ov24323;
extern T0* ge974ov24695;
extern T0* ge974ov24493;
extern T0* ge974ov24319;
extern T0* ge974ov24697;
extern T0* ge974ov24494;
extern T0* ge974ov24321;
extern T0* ge974ov24607;
extern T0* ge974ov24449;
extern T0* ge974ov24231;
extern T0* ge974ov24613;
extern T0* ge974ov24453;
extern T0* ge974ov24237;
extern T0* ge974ov24688;
extern T0* ge974ov24489;
extern T0* ge974ov24312;
extern T0* ge974ov24671;
extern T0* ge974ov24479;
extern T0* ge974ov24295;
extern T0* ge974ov24698;
extern T0* ge974ov24495;
extern T0* ge974ov24322;
extern T0* ge974ov24610;
extern T0* ge974ov24451;
extern T0* ge974ov24234;
extern T0* ge974ov24617;
extern T0* ge974ov24456;
extern T0* ge974ov24241;
extern T0* ge974ov24689;
extern T0* ge974ov24490;
extern T0* ge974ov24313;
extern T0* ge974ov24687;
extern T0* ge974ov24488;
extern T0* ge974ov24311;
extern T0* ge974ov24672;
extern T0* ge974ov24480;
extern T0* ge974ov24296;
extern T0* ge974ov24690;
extern T0* ge974ov24314;
extern T0* ge794ov13153;
extern T0* ge974ov24666;
extern T0* ge974ov24469;
extern T0* ge974ov24290;
extern T0* ge974ov24576;
extern T0* ge974ov24435;
extern T0* ge974ov24200;
extern T0* ge974ov24574;
extern T0* ge974ov24198;
extern T0* ge974ov24568;
extern T0* ge974ov24434;
extern T0* ge974ov24192;
extern T0* ge974ov24567;
extern T0* ge974ov24433;
extern T0* ge974ov24191;
extern T0* ge974ov24779;
extern T0* ge974ov24539;
extern T0* ge974ov24403;
extern T0* ge974ov24783;
extern T0* ge974ov24543;
extern T0* ge974ov24407;
extern T0* ge974ov24758;
extern T0* ge974ov24525;
extern T0* ge974ov24382;
extern T0* ge974ov24782;
extern T0* ge974ov24542;
extern T0* ge974ov24406;
extern T0* ge974ov24665;
extern T0* ge974ov24477;
extern T0* ge974ov24289;
extern T0* ge974ov24667;
extern T0* ge974ov24291;
extern T0* ge966ov31223;
extern T0* ge966ov31221;
extern T0* ge966ov31219;
extern T0* ge965ov30766;
extern T0* ge965ov30762;
extern T0* ge965ov30758;
extern T0* ge794ov13148;
extern T0* ge794ov13204;
extern T0* ge794ov13190;
extern T0* ge794ov13189;
extern T0* ge794ov13165;
extern T0* ge794ov13191;
extern T0* ge794ov13205;
extern T0* ge794ov13151;
extern T0* ge794ov13193;
extern T0* ge794ov13162;
extern T0* ge794ov13164;
extern T0* ge794ov13212;
extern T0* ge794ov13159;
extern T0* ge794ov13156;
extern T0* ge794ov13186;
extern T0* ge794ov13174;
extern T0* ge794ov13199;
extern T0* ge974ov24754;
extern T0* ge974ov24522;
extern T0* ge974ov24378;
extern T0* ge972ov30774;
extern T0* ge972ov30773;
extern T0* ge974ov24753;
extern T0* ge974ov24377;
extern T0* ge794ov13210;
extern T0* ge794ov13182;
extern T0* ge794ov13168;
extern T0* ge794ov13198;
extern T0* ge794ov13185;
extern T0* ge794ov13149;
extern T0* ge794ov13179;
extern T0* ge794ov13194;
extern T0* ge794ov13310;
extern T0* ge794ov13312;
extern T0* ge794ov13311;
extern T0* ge974ov24785;
extern T0* ge974ov24545;
extern T0* ge974ov24409;
extern T0* ge794ov13094;
extern T0* ge794ov13063;
extern T0* ge794ov13062;
extern T0* ge794ov13044;
extern T0* ge794ov13043;
extern T0* ge794ov13128;
extern T0* ge794ov13136;
extern T0* ge794ov13135;
extern T0* ge794ov13134;
extern T0* ge794ov13234;
extern T0* ge794ov13238;
extern T0* ge794ov13235;
extern T0* ge794ov13239;
extern T0* ge794ov13222;
extern T0* ge794ov13247;
extern T0* ge974ov24784;
extern T0* ge974ov24544;
extern T0* ge974ov24408;
extern T0* ge794ov13118;
extern T0* ge794ov13035;
extern T0* ge794ov13039;
extern T0* ge794ov13038;
extern T0* ge794ov13037;
extern T0* ge794ov13034;
extern T0* ge794ov13036;
extern T0* ge794ov13028;
extern T0* ge794ov13027;
extern T0* ge794ov13026;
extern T0* ge794ov13025;
extern T0* ge794ov13032;
extern T0* ge794ov13031;
extern T0* ge794ov13030;
extern T0* ge794ov13029;
extern T0* ge794ov13133;
extern T0* ge794ov13132;
extern T0* ge794ov13131;
extern T0* ge794ov13127;
extern T0* ge794ov13126;
extern T0* ge794ov13236;
extern T0* ge794ov13221;
extern T0* ge794ov13116;
extern T0* ge794ov13114;
extern T0* ge794ov13113;
extern T0* ge794ov13093;
extern T0* ge794ov13092;
extern T0* ge794ov13091;
extern T0* ge794ov13089;
extern T0* ge794ov13088;
extern T0* ge794ov13083;
extern T0* ge794ov13072;
extern T0* ge794ov13071;
extern T0* ge794ov13070;
extern T0* ge794ov13069;
extern T0* ge794ov13046;
extern T0* ge794ov13045;
extern T0* ge794ov13041;
extern T0* ge794ov13119;
extern T0* ge794ov13112;
extern T0* ge794ov13111;
extern T0* ge794ov13110;
extern T0* ge794ov13109;
extern T0* ge794ov13108;
extern T0* ge794ov13107;
extern T0* ge794ov13106;
extern T0* ge794ov13105;
extern T0* ge794ov13104;
extern T0* ge794ov13103;
extern T0* ge794ov13102;
extern T0* ge794ov13101;
extern T0* ge794ov13100;
extern T0* ge794ov13099;
extern T0* ge794ov13098;
extern T0* ge794ov13140;
extern T0* ge794ov13078;
extern T0* ge794ov13115;
extern T0* ge794ov13095;
extern T0* ge794ov13073;
extern T0* ge794ov13056;
extern T0* ge794ov13047;
extern T0* ge794ov13040;
extern T0* ge794ov13081;
extern T0* ge794ov13080;
extern T0* ge794ov13079;
extern T0* ge794ov13077;
extern T0* ge794ov13075;
extern T0* ge794ov13058;
extern T0* ge794ov13057;
extern T0* ge794ov13059;
extern T0* ge794ov13024;
extern T0* ge794ov13023;
extern T0* ge794ov13068;
extern T0* ge794ov13129;
extern T0* ge794ov13213;
extern T0* ge794ov13187;
extern T0* ge794ov13177;
extern T0* ge794ov13192;
extern T0* ge794ov13152;
extern T0* ge794ov13090;
extern T0* ge794ov13049;
extern T0* ge794ov13033;
extern T0* ge794ov13021;
extern T0* ge794ov13060;
extern T0* ge794ov13097;
extern T0* ge794ov13086;
extern T0* ge794ov13138;
extern T0* ge794ov13087;
extern T0* ge794ov13067;
extern T0* ge794ov13066;
extern T0* ge794ov13064;
extern T0* ge794ov13053;
extern T0* ge794ov13074;
extern T0* ge794ov13123;
extern T0* ge794ov13124;
extern T0* ge794ov13065;
extern T0* ge794ov13050;
extern T0* ge794ov13117;
extern T0* ge794ov13122;
extern T0* ge794ov13137;
extern T0* ge794ov13051;
extern T0* ge794ov13121;
extern T0* ge794ov13183;
extern T0* ge794ov13208;
extern T0* ge794ov13173;
extern T0* ge794ov13158;
extern T0* ge794ov13160;
extern T0* ge794ov13195;
extern T0* ge794ov13150;
extern T0* ge794ov13170;
extern T0* ge794ov13197;
extern T0* ge974ov24745;
extern T0* ge974ov24519;
extern T0* ge974ov24369;
extern T0* ge974ov24738;
extern T0* ge974ov24362;
extern T0* ge974ov24737;
extern T0* ge974ov24361;
extern T0* ge974ov24736;
extern T0* ge974ov24360;
extern T0* ge974ov24741;
extern T0* ge974ov24365;
extern T0* ge974ov24743;
extern T0* ge974ov24367;
extern T0* ge794ov13055;
extern T0* ge974ov24789;
extern T0* ge974ov24549;
extern T0* ge974ov24413;
extern T0* ge794ov13084;
extern T0* ge794ov13120;
extern T0* ge794ov13125;
extern T0* ge794ov13142;
extern T0* ge794ov13143;
extern T0* ge794ov13145;
extern T0* ge794ov13146;
extern T0* ge794ov13147;
extern T0* ge794ov13154;
extern T0* ge794ov13155;
extern T0* ge794ov13161;
extern T0* ge794ov13166;
extern T0* ge794ov13169;
extern T0* ge794ov13171;
extern T0* ge794ov13172;
extern T0* ge794ov13175;
extern T0* ge794ov13176;
extern T0* ge794ov13178;
extern T0* ge794ov13181;
extern T0* ge794ov13188;
extern T0* ge794ov13196;
extern T0* ge794ov13200;
extern T0* ge794ov13201;
extern T0* ge794ov13202;
extern T0* ge794ov13203;
extern T0* ge794ov13206;
extern T0* ge794ov13207;
extern T0* ge794ov13209;
extern T0* ge794ov13211;
extern T0* ge794ov13214;
extern T0* ge794ov13215;
extern T0* ge794ov13216;
extern T0* ge794ov13217;
extern T0* ge794ov13218;
extern T0* ge794ov13219;
extern T0* ge794ov13220;
extern T0* ge794ov13223;
extern T0* ge794ov13224;
extern T0* ge794ov13225;
extern T0* ge794ov13226;
extern T0* ge794ov13227;
extern T0* ge794ov13228;
extern T0* ge794ov13229;
extern T0* ge794ov13230;
extern T0* ge794ov13231;
extern T0* ge794ov13232;
extern T0* ge794ov13233;
extern T0* ge794ov13237;
extern T0* ge794ov13240;
extern T0* ge794ov13241;
extern T0* ge794ov13242;
extern T0* ge794ov13243;
extern T0* ge794ov13244;
extern T0* ge794ov13245;
extern T0* ge794ov13246;
extern T0* ge283ov12356;
extern T0* ge385ov25627;
extern T0* ge385ov25624;
extern T0* ge986ov18434;
extern T0* ge974ov24773;
extern T0* ge974ov24534;
extern T0* ge974ov24397;
extern T0* ge974ov24756;
extern T0* ge974ov24524;
extern T0* ge974ov24380;
extern T0* ge974ov24757;
extern T0* ge974ov24381;
extern T0* ge974ov24730;
extern T0* ge974ov24515;
extern T0* ge974ov24354;
extern T0* ge974ov24731;
extern T0* ge974ov24516;
extern T0* ge974ov24355;
extern T0* ge974ov24727;
extern T0* ge974ov24351;
extern T0* ge975ov7485;
extern T0* ge975ov7480;
extern T0* ge975ov7481;
extern T0* ge975ov7453;
extern T0* ge975ov7455;
extern T0* ge975ov7451;
extern T0* ge975ov7454;
extern T0* ge975ov7487;
extern T0* ge975ov7484;
extern T0* ge975ov7493;
extern T0* ge975ov7404;
extern T0* ge975ov7422;
extern T0* ge974ov24586;
extern T0* ge974ov24440;
extern T0* ge974ov24210;
extern T0* ge974ov24585;
extern T0* ge974ov24209;
extern T0* ge974ov24584;
extern T0* ge974ov24439;
extern T0* ge974ov24208;
extern T0* ge974ov24588;
extern T0* ge974ov24212;
extern T0* ge974ov24583;
extern T0* ge974ov24438;
extern T0* ge974ov24207;
extern T0* ge974ov24769;
extern T0* ge974ov24531;
extern T0* ge974ov24393;
extern T0* ge974ov24774;
extern T0* ge974ov24535;
extern T0* ge974ov24398;
extern T0* ge794ov13248;
extern T0* ge974ov24558;
extern T0* ge974ov24426;
extern T0* ge974ov24182;
extern T0* ge974ov24710;
extern T0* ge974ov24503;
extern T0* ge974ov24334;
extern T0* ge974ov24709;
extern T0* ge974ov24333;
extern T0* ge974ov24708;
extern T0* ge974ov24502;
extern T0* ge974ov24332;
extern T0* ge974ov24707;
extern T0* ge974ov24331;
extern T0* ge974ov24706;
extern T0* ge974ov24501;
extern T0* ge974ov24330;
extern T0* ge974ov24705;
extern T0* ge974ov24329;
extern T0* ge974ov24714;
extern T0* ge974ov24504;
extern T0* ge974ov24338;
extern T0* ge974ov24713;
extern T0* ge974ov24337;
extern T0* ge974ov24733;
extern T0* ge974ov24517;
extern T0* ge974ov24357;
extern T0* ge974ov24735;
extern T0* ge974ov24518;
extern T0* ge974ov24359;
extern T0* ge974ov24725;
extern T0* ge974ov24512;
extern T0* ge974ov24349;
extern T0* ge974ov24712;
extern T0* ge974ov24336;
extern T0* ge974ov24711;
extern T0* ge974ov24335;
extern T0* ge974ov24729;
extern T0* ge974ov24353;
extern T0* ge974ov24724;
extern T0* ge974ov24348;
extern T0* ge974ov24759;
extern T0* ge974ov24383;
extern T0* ge974ov24575;
extern T0* ge974ov24199;
extern T0* ge974ov24573;
extern T0* ge974ov24197;
extern T0* ge974ov24572;
extern T0* ge974ov24196;
extern T0* ge974ov24755;
extern T0* ge974ov24523;
extern T0* ge974ov24379;
extern T0* ge974ov24791;
extern T0* ge974ov24551;
extern T0* ge974ov24415;
extern T0* ge974ov24792;
extern T0* ge974ov24416;
extern T0* ge974ov24763;
extern T0* ge974ov24528;
extern T0* ge974ov24387;
extern T0* ge974ov24762;
extern T0* ge974ov24527;
extern T0* ge974ov24386;
extern T0* ge974ov24781;
extern T0* ge974ov24541;
extern T0* ge974ov24405;
extern T0* ge974ov24720;
extern T0* ge974ov24510;
extern T0* ge974ov24344;
extern T0* ge974ov24719;
extern T0* ge974ov24509;
extern T0* ge974ov24343;
extern T0* ge974ov24718;
extern T0* ge974ov24508;
extern T0* ge974ov24342;
extern T0* ge974ov24717;
extern T0* ge974ov24507;
extern T0* ge974ov24341;
extern T0* ge974ov24716;
extern T0* ge974ov24506;
extern T0* ge974ov24340;
extern T0* ge974ov24715;
extern T0* ge974ov24505;
extern T0* ge974ov24339;
extern T0* ge974ov24721;
extern T0* ge974ov24511;
extern T0* ge974ov24345;
extern T0* ge975ov7435;
extern T0* ge975ov7436;
extern T0* ge975ov7437;
extern T0* ge975ov7438;
extern T0* ge975ov7443;
extern T0* ge975ov7444;
extern T0* ge975ov7445;
extern T0* ge975ov7446;
extern T0* ge974ov24654;
extern T0* ge974ov24278;
extern T0* ge974ov24657;
extern T0* ge974ov24473;
extern T0* ge974ov24281;
extern T0* ge974ov24650;
extern T0* ge974ov24471;
extern T0* ge974ov24274;
extern T0* ge974ov24653;
extern T0* ge974ov24277;
extern T0* ge974ov24570;
extern T0* ge974ov24194;
extern T0* ge974ov24669;
extern T0* ge974ov24478;
extern T0* ge974ov24293;
extern T0* ge974ov24780;
extern T0* ge974ov24540;
extern T0* ge974ov24404;
extern T0* ge974ov24752;
extern T0* ge974ov24376;
extern T0* ge974ov24751;
extern T0* ge974ov24375;
extern T0* ge974ov24569;
extern T0* ge974ov24193;
extern T0* ge974ov24668;
extern T0* ge974ov24292;
extern T0* ge974ov24748;
extern T0* ge974ov24520;
extern T0* ge974ov24372;
extern T0* ge974ov24749;
extern T0* ge974ov24373;
extern T0* ge974ov24571;
extern T0* ge974ov24195;
extern T0* ge974ov24670;
extern T0* ge974ov24294;
extern T0* ge974ov24703;
extern T0* ge974ov24499;
extern T0* ge974ov24327;
extern T0* ge974ov24704;
extern T0* ge974ov24500;
extern T0* ge974ov24328;
extern T0* ge974ov24702;
extern T0* ge974ov24326;
extern T0* ge974ov24777;
extern T0* ge974ov24537;
extern T0* ge974ov24401;
extern T0* ge974ov24775;
extern T0* ge974ov24536;
extern T0* ge974ov24399;
extern T0* ge965ov30765;
extern T0* ge965ov30761;
extern T0* ge965ov30757;
extern T0* ge728ov12433;
extern T0* ge728ov12434;
extern T0* ge383ov30401;
extern T0* ge974ov24778;
extern T0* ge974ov24538;
extern T0* ge974ov24402;
extern T0* ge975ov7459;
extern T0* ge974ov24563;
extern T0* ge974ov24430;
extern T0* ge974ov24187;
extern T0* ge974ov24562;
extern T0* ge974ov24429;
extern T0* ge974ov24186;
extern T0* ge974ov24678;
extern T0* ge974ov24483;
extern T0* ge974ov24302;
extern T0* ge974ov24618;
extern T0* ge974ov24457;
extern T0* ge974ov24242;
extern T0* ge974ov24619;
extern T0* ge974ov24243;
extern T0* ge974ov24680;
extern T0* ge974ov24484;
extern T0* ge974ov24304;
extern T0* ge974ov24681;
extern T0* ge974ov24305;
extern T0* ge974ov24679;
extern T0* ge974ov24303;
extern T0* ge974ov24682;
extern T0* ge974ov24485;
extern T0* ge974ov24306;
extern T0* ge974ov24701;
extern T0* ge974ov24498;
extern T0* ge974ov24325;
extern T0* ge974ov24700;
extern T0* ge974ov24497;
extern T0* ge974ov24324;
extern T0* ge974ov24561;
extern T0* ge974ov24428;
extern T0* ge974ov24185;
extern T0* ge975ov7488;
extern T0* ge974ov24656;
extern T0* ge974ov24280;
extern T0* ge974ov24658;
extern T0* ge974ov24282;
extern T0* ge974ov24651;
extern T0* ge974ov24275;
extern T0* ge974ov24649;
extern T0* ge974ov24470;
extern T0* ge974ov24273;
extern T0* ge974ov24655;
extern T0* ge974ov24279;
extern T0* ge974ov24582;
extern T0* ge974ov24206;
extern T0* ge974ov24683;
extern T0* ge974ov24307;
extern T0* ge1261ov10776;
extern T0* ge1242ov22624;
extern T0* ge1242ov22623;
extern T0* ge419ov9638;
extern T0* ge308ov9638;
extern T0* ge299ov9638;
extern T0* ge55ov4347;
extern T0* ge55ov4348;
extern T0* ge55ov4349;
extern T0* ge797ov25189;
extern T0* ge794ov13309;
extern T0* ge794ov13290;
extern T0* ge794ov13306;
extern T0* ge794ov13294;
extern T0* ge794ov13295;
extern T0* ge794ov13296;
extern T0* ge794ov13297;
extern T0* ge794ov13291;
extern T0* ge794ov13298;
extern T0* ge794ov13299;
extern T0* ge794ov13300;
extern T0* ge794ov13301;
extern T0* ge794ov13292;
extern T0* ge794ov13307;
extern T0* ge794ov13302;
extern T0* ge794ov13303;
extern T0* ge794ov13304;
extern T0* ge794ov13293;
extern T0* ge794ov13305;
extern T0* ge794ov13308;
extern T0* ge1309ov25037;
extern T0* ge1309ov25039;
extern T0* ge794ov13286;
extern T0* ge794ov13285;
extern T0* ge794ov13273;
extern T0* ge794ov13274;
extern T0* ge794ov13275;
extern T0* ge794ov13276;
extern T0* ge794ov13277;
extern T0* ge794ov13278;
extern T0* ge794ov13279;
extern T0* ge794ov13280;
extern T0* ge794ov13281;
extern T0* ge794ov13282;
extern T0* ge794ov13283;
extern T0* ge794ov13284;
extern T0* ge794ov13288;
extern T0* ge794ov13289;
extern T0* ge794ov13269;
extern T0* ge794ov13270;
extern T0* ge794ov13271;
extern T0* ge794ov13272;
extern T0* ge794ov13287;
extern T0* ge816ov25756;
extern T0* ge816ov25755;
extern T0* ge832ov27041;
extern T0* ge822ov25100;
extern T0* ge1040ov4114;
extern T0* ge226ov4114;
extern T0* ge225ov4114;
extern T0* ge1034ov4114;
extern T0* ge1050ov4114;
extern T0* ge1047ov4114;
extern T0* ge1046ov4114;
extern T0* ge1042ov4114;
extern T0* ge1049ov4114;
extern T0* ge1041ov4114;
extern T0* ge1053ov4114;
extern T0* ge1037ov4114;
extern T0* ge1048ov4114;
extern T0* ge1052ov4114;
extern T0* ge1044ov4114;
extern T0* ge1035ov4114;
extern T0* ge1043ov4114;
extern T0* ge220ov4114;
extern T0* ge223ov4114;
extern T0* ge230ov4114;
extern T0* ge219ov4114;
extern T0* ge413ov30529;
extern T0* ge399ov1831;
extern T0* geic2;
extern T0* geic3;
extern T0* geic4;
extern void GE_const_init(void);
extern EIF_TYPE GE_types[];

#ifdef __cplusplus
}
#endif


/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#ifdef EIF_WINDOWS
/* Needed to compile some code at AXAR */
extern void set_windows_exception_filter();
#endif

/* Raises an Eiffel exception of the given code with no associated tag. */
extern void xraise(int code);
/* Raise 'Operating system error' exception. */
extern void esys(void);
/* As a special case, an I/O error is raised when a system call which is I/O bound fails. */
extern void eise_io(char *tag);

/*
 * Predefined exception numbers. Value cannot start at 0 because this may need
 * a propagation via longjmp and USG implementations turn out a 0 to be 1.
 */
#define EN_VOID		1			/* Feature applied to void reference */
#define EN_MEM		2			/* No more memory */
#define EN_PRE		3			/* Pre-condition violated */
#define EN_POST		4			/* Post-condition violated */
#define EN_FLOAT	5			/* Floating point exception (signal SIGFPE) */
#define EN_CINV		6			/* Class invariant violated */
#define EN_CHECK	7			/* Assertion violated */
#define EN_FAIL		8			/* Routine failure */
#define EN_WHEN		9			/* Unmatched inspect value */
#define EN_VAR		10			/* Non-decreasing loop variant */
#define EN_LINV		11			/* Loop invariant violated */
#define EN_SIG		12			/* Operating system signal */
#define EN_BYE		13			/* Eiffel run-time panic */
#define EN_RESC		14			/* Exception in rescue clause */
#define EN_OMEM		15			/* Out of memory (cannot be ignored) */
#define EN_RES		16			/* Resumption failed (retry did not succeed) */
#define EN_CDEF		17			/* Create on deferred */
#define EN_EXT		18			/* External event */
#define EN_VEXP		19			/* Void assigned to expanded */
#define EN_HDLR		20			/* Exception in signal handler */
#define EN_IO		21			/* I/O error */
#define EN_SYS		22			/* Operating system error */
#define EN_RETR		23			/* Retrieval error */
#define EN_PROG		24			/* Developer exception */
#define EN_FATAL	25			/* Eiffel run-time fatal error */
#define EN_DOL		26			/* $ applied to melted feature */
#define EN_ISE_IO	27			/* I/O error raised by the ISE Eiffel runtime */
#define EN_COM		28			/* COM error raised by EiffelCOM runtime */
#define EN_RT_CHECK	29			/* Runtime check error such as out-of-bound array access */

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Create directory `dirname'.
 */
extern void file_mkdir(char* dirname);

/*
 * Rename file `from' into `to'.
 */
extern void file_rename(char* from, char* to);

/*
 * Link file `from' into `to'.
 */
extern void file_link(char *from, char *to);

/*
 * Delete file or directory `name'.
 */
extern void file_unlink(char *name);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER file_open(char *name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER file_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);

/*
 * Close the file.
 */
extern void file_close(FILE *fp);

/*
 * Flush data held in stdio buffer.
 */
extern void file_flush(FILE *fp);

/*
 * Return the associated file descriptor.
 */
extern EIF_INTEGER file_fd(FILE *f);

/*
 * Get a character from `f'.
 */
extern EIF_CHARACTER file_gc(FILE *f);

/*
 * Get a string from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters.
 */
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Read min (bound, remaining bytes in file) characters into `s' and
 * return the number of characters read.
 */
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);

/*
 * Get a word from `f' and fill it into `s' (at most `bound' characters),
 * with `start' being the amount of bytes already stored within s. This
 * means we really have to read (bound - start) characters. Any leading
 * spaces are skipped.
 */
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);

/*
 * Look ahead one character. If EOF, return 0.
 */
extern EIF_CHARACTER file_lh(FILE *f);

/*
 * Size of file `fp'.
 */
extern EIF_INTEGER eif_file_size(FILE *fp);

/*
 * Read upto next input line.
 */
extern void file_tnil(FILE *f);

/*
 * Current position within file.
 */
extern EIF_INTEGER file_tell(FILE *f);

/*
 * Touch file `name' by setting both access and modification time to the
 * current time stamp. This external function exists only because there
 * is no way within UNIX_FILE to get the current time stamp. Otherwise,
 * we could simply call file_utime.
 */
extern void file_touch(char *name);

/*
 * Modify the modification and/or the access time stored in the file's
 * inode. The 'how' parameter tells which attributes should be set.
 */
extern void file_utime(char *name, time_t stamp, int how);

/*
 * This is an encapsulation of the stat() system call. The routine either
 * succeeds and returns or fails and raises the appropriate exception.
 */
extern void file_stat(char *path, struct stat *buf);

/*
 * Change permissions of file `name', using an interface like chmod(1).
 * The flag is true if permissions are to be added, 0 to remove them.
 */
extern void file_perm(char *name, char *who, char *what, int flag);

/*
 * Change permission mode on file `path'.
 */
extern void file_chmod(char *path, int mode);

/*
 * Change the owner of the file to `uid'.
 */
extern void file_chown(char *name, int uid);

/*
 * Change the group of the file to `gid'.
 */
extern void file_chgrp(char *name, int gid);

/*
 * Put new_line onto `f'.
 */
extern void file_tnwl(FILE *f);

/*
 * Append a copy of `other' to `f'.
 */
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);

/*
 * Write string `str' on `f'.
 */
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);

/*
 * Write character `c' on `f'.
 */
extern void file_pc(FILE *f, char c);

/*
 * Go to absolute position `pos' counted from start.
 */
extern void file_go(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from end.
 */
extern void file_recede(FILE *f, EIF_INTEGER pos);

/*
 * Go to absolute position `pos' counted from current position.
 */
extern void file_move(FILE *f, EIF_INTEGER pos);

/*
 * End of file.
 */
extern EIF_BOOLEAN file_feof(FILE *fp);

/*
 * Test whether file exists or not. If `name' represents a symbolic link,
 * it will check that pointed file does exist.
 */
extern EIF_BOOLEAN file_exists(char *name);

/*
 * Test whether file exists or not without following the symbolic link
 * if `name' represents one.
 */
extern EIF_BOOLEAN file_path_exists(char *name);

/*
 * Check whether access permission `op' are possible on file `name' using
 * real UID and real GID. This is probably only useful to setuid or setgid
 * programs.
 */
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);

/*
 * Check whether the file `path' may be created: we need write permissions
 * in the parent directory and there must not be any file bearing that name
 * with no write permissions...
 */
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER file_gi(FILE *f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 file_gr(FILE *f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 file_gd(FILE *f);

/*
 * Write `number' on `f'.
 */
extern void file_pi(FILE *f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void file_pr(FILE *f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void file_pd(FILE *f, EIF_REAL_64 val);

/*
 * Size of the stat structure. This is used by the Eiffel side to create
 * the area (special object) which will play the role of a stat buffer
 * structure.
 */
extern EIF_INTEGER stat_size(void);

/*
 * Check file permissions using effective UID and effective GID. The
 * current permission mode is held in the st_mode field of the stat()
 * buffer structure `buf'.
 */
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);

/*
 * Perform the field dereferencing from the appropriate stat structure,
 * which Eiffel cannot do directly.
 */
extern EIF_INTEGER file_info(struct stat *buf, int op);

/*
 * Return the Eiffel string filled in with the name associated with `uid'
 * if found in /etc/passwd. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE file_owner(int uid);

/*
 * Return the Eiffel string filled in with the name associated with `gid'
 * if found in /etc/group. Otherwise, return fill it in with the numeric
 * value.
 */
extern EIF_REFERENCE file_group(int gid);

/*
 * Get an integer from `f'.
 */
extern EIF_INTEGER file_gib(FILE* f);

/*
 * Get a real from `f'.
 */
extern EIF_REAL_32 file_grb(FILE* f);

/*
 * Get a double from `f'.
 */
extern EIF_REAL_64 file_gdb(FILE* f);

/*
 * Open file `name' with the corresponding type `how'.
 */
extern EIF_POINTER file_binary_open(char* name, int how);

/*
 * Open file `fd' with the corresponding type `how'.
 */
extern EIF_POINTER file_binary_dopen(int fd, int how);

/*
 * Reopen file `name' with the corresponding type `how' and substitute that
 * to the old stream described by `old'. This is useful to redirect 'stdout'
 * to another place, for instance.
 */
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);

/*
 * Write `number' on `f'.
 */
extern void file_pib(FILE* f, EIF_INTEGER number);

/*
 * Write `number' on `f'.
 */
extern void file_prb(FILE* f, EIF_REAL_32 number);

/*
 * Write double `val' onto `f'.
 */
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to access DLLs"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_DLL_H
#define GE_DLL_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/* DLL declarations */
#define GE_load_dll(name) LoadLibraryA((LPCSTR)name)

#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006-2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);

#ifdef EIF_WINDOWS
/* DLL declarations */
#define eif_load_dll(name) GE_load_dll(name)
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/*
	OpenBSD does not support 'ftime' unless -lcompat is specified.
	Use the recommended XSI (X/Open System Interface) extension instead.
*/
#include <sys/time.h>
#include <sys/types.h>
#define GE_ftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define GE_timebsz sizeof(struct timeval)
#define GE_timebmillitm(p) ((struct timeval*)(p))->tv_usec
#define GE_timebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
extern void ftime(struct timeb *); /* Needed for lcc-win32 */
#define GE_ftime(p) ftime((struct timeb*)(p))
#define GE_timebsz sizeof(struct timeb)
#define GE_timebmillitm(p) ((struct timeb*)(p))->millitm
#define GE_timebtime(p) ((struct timeb*)(p))->time
#endif

#endif
/*
	description:

		"C functions used to implement the main function"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MAIN_H
#define EIF_MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

#ifdef EIF_WINDOWS

#include <windows.h>

/*
	Used in WEL.
*/
extern HINSTANCE eif_hInstance;

#endif

/*
	Used by the ISE runtime to figure out whether the application
	was launched from EiffelStudio in workbench mode or not.
*/
extern int debug_mode;

#ifdef __cplusplus
}
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
