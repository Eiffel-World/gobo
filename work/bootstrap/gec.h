/*
	description:

		"C declarations for the Gobo Eiffel runtime."

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2005, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EIFFEL_H
#define GE_EIFFEL_H

#if defined(__USE_POSIX) || defined(__unix__) || defined(_POSIX_C_SOURCE)
#include <unistd.h>
#endif
#if !defined(WIN32) && \
	(defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#define WIN32 1
#define EIF_WINDOWS 1
#endif
#ifdef WIN32
#include <windows.h>
#endif

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>

/* Platform definition */
/* Unix definition */
#define EIF_IS_UNIX EIF_TRUE
/* Windows definition */
#ifdef EIF_WINDOWS
#define EIF_IS_WINDOWS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_WINDOWS EIF_FALSE
#endif
/* VMS definition */
#ifdef EIF_VMS
#define EIF_IS_VMS EIF_TRUE
#undef EIF_IS_UNIX
#define EIF_IS_UNIX EIF_FALSE
#else
#define EIF_IS_VMS EIF_FALSE
#endif

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _MSC_VER /* MSVC */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned __int64 uint64_t;
#else
#include <inttypes.h>
#endif
#endif

/* Basic Eiffel types */
typedef struct {int id;} EIF_OBJECT;
#define EIF_REFERENCE EIF_OBJECT*
typedef char EIF_BOOLEAN;
typedef unsigned char EIF_CHARACTER_8;
typedef uint32_t EIF_CHARACTER_32;
typedef int8_t EIF_INTEGER_8;
typedef int16_t EIF_INTEGER_16;
typedef int32_t EIF_INTEGER_32;
typedef int64_t EIF_INTEGER_64;
typedef uint8_t EIF_NATURAL_8;
typedef uint16_t EIF_NATURAL_16;
typedef uint32_t EIF_NATURAL_32;
typedef uint64_t EIF_NATURAL_64;
typedef void* EIF_POINTER;
typedef float EIF_REAL_32;
typedef double EIF_REAL_64;
#define EIF_PROCEDURE EIF_POINTER

#define EIF_VOID ((EIF_REFERENCE)0)
#define EIF_FALSE ((EIF_BOOLEAN)'\0')
#define EIF_TRUE ((EIF_BOOLEAN)'\1')
#define EIF_TEST(x) ((x) ? EIF_TRUE : EIF_FALSE)

/* For INTEGER and NATURAL manifest constants */
#define geint8(x) x
#define genat8(x) x
#define geint16(x) x
#define genat16(x) x
#define geint32(x) x##L
#define genat32(x) x##U
#if defined (_MSC_VER) && (_MSC_VER < 1400) /* MSC older than v8 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else
#if defined (__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
#define geint64(x) x##i64
#define genat64(x) x##ui64
#else /* ISO C 99 */
#define geint64(x) x##LL
#define genat64(x) x##ULL
#endif 
#endif 

/* Interoperability with ISE */
#define RTI64C(x) geint64(x)

/* Memory allocation, GC */
#define gealloc(x) calloc((x),1)

#ifdef _MSC_VER /* MSVC */
/* MSVC does not support ISO C 99's 'snprintf' from stdio.h */
#define snprintf(a,b,c,d) sprintf(a,c,d)
#endif

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class ARGUMENTS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_ARGUMENTS_H
#define GE_ARGUMENTS_H

#ifdef __cplusplus
extern "C" {
#endif

extern int geargc;
extern char** geargv;

#ifdef __cplusplus
}
#endif

#endif

/*
	description:

		"C functions used to implement class EXCEPTION"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2007, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_EXCEPTION_H
#define GE_EXCEPTION_H

#include <setjmp.h>

/*
	On Linux glibc systems, we need to use sig* versions of jmp_buf,
	setjmp and longjmp to preserve the signal handling context.
	One way to detect this is if _SIGSET_H_types has
	been defined in /usr/include/setjmp.h.
	NOTE: ANSI only recognizes the non-sig versions.
*/
#if (defined(_SIGSET_H_types) && !defined(__STRICT_ANSI__))
#define gejmp_buf sigjmp_buf
#define gesetjmp(x) sigsetjmp((x),1)
#define gelongjmp(x,y) siglongjmp((x),(y))
#else
#define gejmp_buf jmp_buf
#define gesetjmp(x) setjmp((x))
#define gelongjmp(x,y) longjmp((x),(y))
#endif

#ifdef __cplusplus
extern "C" {
#endif

/*
	Context of features containing a rescue clause.
*/
struct gerescue {
	gejmp_buf jb;
	struct gerescue *previous; /* previous context in the call chain */
};

/*
	Context of last feature entered containing a rescue clause.
	Warning: this is not thread-safe.
*/
extern struct gerescue *gerescue;

extern void geraise(int code);

#ifdef __cplusplus
}
#endif

#endif

#ifdef __cpluscplus
extern "C" {
#endif

#define T0 EIF_OBJECT

/* CHARACTER */
#define EIF_CHARACTER EIF_CHARACTER_8

/* WIDE_CHARACTER */
#define EIF_WIDE_CHAR EIF_CHARACTER_32

/* INTEGER */
#define EIF_INTEGER EIF_INTEGER_32

/* NATURAL */
#define EIF_NATURAL EIF_NATURAL_32

/* REAL */
#define EIF_REAL EIF_REAL_32

/* DOUBLE */
#define EIF_DOUBLE EIF_REAL_64

/* BOOLEAN */
#define T1 EIF_BOOLEAN
extern T0* geboxed1(T1 a1);
typedef struct Sb1 Tb1;

/* CHARACTER_8 */
#define T2 EIF_CHARACTER_8
extern T0* geboxed2(T2 a1);
typedef struct Sb2 Tb2;

/* CHARACTER_32 */
#define T3 EIF_CHARACTER_32
extern T0* geboxed3(T3 a1);
typedef struct Sb3 Tb3;

/* INTEGER_8 */
#define T4 EIF_INTEGER_8
extern T0* geboxed4(T4 a1);
typedef struct Sb4 Tb4;

/* INTEGER_16 */
#define T5 EIF_INTEGER_16
extern T0* geboxed5(T5 a1);
typedef struct Sb5 Tb5;

/* INTEGER_32 */
#define T6 EIF_INTEGER_32
extern T0* geboxed6(T6 a1);
typedef struct Sb6 Tb6;

/* INTEGER_64 */
#define T7 EIF_INTEGER_64
extern T0* geboxed7(T7 a1);
typedef struct Sb7 Tb7;

/* NATURAL_8 */
#define T8 EIF_NATURAL_8
extern T0* geboxed8(T8 a1);
typedef struct Sb8 Tb8;

/* NATURAL_16 */
#define T9 EIF_NATURAL_16
extern T0* geboxed9(T9 a1);
typedef struct Sb9 Tb9;

/* NATURAL_32 */
#define T10 EIF_NATURAL_32
extern T0* geboxed10(T10 a1);
typedef struct Sb10 Tb10;

/* NATURAL_64 */
#define T11 EIF_NATURAL_64
extern T0* geboxed11(T11 a1);
typedef struct Sb11 Tb11;

/* REAL_32 */
#define T12 EIF_REAL_32
extern T0* geboxed12(T12 a1);
typedef struct Sb12 Tb12;

/* REAL_64 */
#define T13 EIF_REAL_64
extern T0* geboxed13(T13 a1);
typedef struct Sb13 Tb13;

/* POINTER */
#define T14 EIF_POINTER
extern T0* geboxed14(T14 a1);
typedef struct Sb14 Tb14;

/* SPECIAL [CHARACTER_8] */
typedef struct S15 T15;

/* STRING_8 */
typedef struct S17 T17;

/* GEC */
typedef struct S21 T21;

/* KL_TEXT_INPUT_FILE */
typedef struct S22 T22;

/* KL_ARGUMENTS */
typedef struct S23 T23;

/* UT_ERROR_HANDLER */
typedef struct S24 T24;

/* KL_STRING_ROUTINES */
typedef struct S26 T26;

/* ET_ERROR_HANDLER */
typedef struct S28 T28;

/* KL_EXCEPTIONS */
typedef struct S29 T29;

/* AP_PARSER */
typedef struct S30 T30;

/* AP_ALTERNATIVE_OPTIONS_LIST */
typedef struct S31 T31;

/* AP_FLAG */
typedef struct S32 T32;

/* AP_DISPLAY_HELP_FLAG */
typedef struct S37 T37;

/* ET_XACE_UNIVERSE_PARSER */
typedef struct S38 T38;

/* ET_XACE_DEFAULT_ERROR_HANDLER */
typedef struct S39 T39;

/* DS_HASH_TABLE [STRING, STRING] */
typedef struct S40 T40;

/* ST_SPLITTER */
typedef struct S41 T41;

/* UC_STRING_EQUALITY_TESTER */
typedef struct S43 T43;

/* KL_EQUALITY_TESTER [STRING] */
typedef struct S44 T44;

/* KL_EXECUTION_ENVIRONMENT */
typedef struct S45 T45;

/* ET_XACE_UNIVERSE */
typedef struct S48 T48;

/* ET_LACE_PARSER */
typedef struct S49 T49;

/* ET_LACE_ERROR_HANDLER */
typedef struct S50 T50;

/* ET_LACE_UNIVERSE */
typedef struct S51 T51;

/* ET_NULL_ERROR_HANDLER */
typedef struct S52 T52;

/* ET_SYSTEM */
typedef struct S53 T53;

/* ET_CLASS */
typedef struct S55 T55;

/* ET_C_GENERATOR */
typedef struct S56 T56;

/* KL_SHELL_COMMAND */
typedef struct S57 T57;

/* UT_VERSION */
typedef struct S58 T58;

/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
typedef struct S59 T59;

/* KL_OPERATING_SYSTEM */
typedef struct S60 T60;

/* UT_CANNOT_READ_FILE_ERROR */
typedef struct S62 T62;

/* UT_VERSION_NUMBER */
typedef struct S64 T64;

/* KL_WINDOWS_FILE_SYSTEM */
typedef struct S65 T65;

/* KL_UNIX_FILE_SYSTEM */
typedef struct S66 T66;

/* KL_LINKABLE [CHARACTER] */
typedef struct S67 T67;

/* TYPED_POINTER [ANY] */
typedef struct S69 T69;

/* KL_STANDARD_FILES */
typedef struct S71 T71;

/* KL_STDERR_FILE */
typedef struct S72 T72;

/* KL_STDOUT_FILE */
typedef struct S73 T73;

/* UC_STRING */
typedef struct S74 T74;

/* KL_ANY_ROUTINES */
typedef struct S75 T75;

/* DS_ARRAYED_LIST [STRING] */
typedef struct S76 T76;

/* DS_ARRAYED_LIST [AP_OPTION] */
typedef struct S77 T77;

/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S78 T78;

/* AP_ERROR_HANDLER */
typedef struct S79 T79;

/* AP_ERROR */
typedef struct S80 T80;

/* DS_LINKED_LIST_CURSOR [AP_OPTION] */
typedef struct S81 T81;

/* ST_WORD_WRAPPER */
typedef struct S82 T82;

/* ET_XACE_AST_FACTORY */
typedef struct S83 T83;

/* XM_DOCUMENT */
typedef struct S84 T84;

/* XM_ELEMENT */
typedef struct S85 T85;

/* XM_POSITION_TABLE */
typedef struct S86 T86;

/* XM_TREE_CALLBACKS_PIPE */
typedef struct S88 T88;

/* XM_STOP_ON_ERROR_FILTER */
typedef struct S89 T89;

/* XM_CALLBACKS_TO_TREE_FILTER */
typedef struct S90 T90;

/* ET_XACE_VALIDATOR */
typedef struct S91 T91;

/* ET_XACE_PREPROCESSOR */
typedef struct S92 T92;

/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING] */
typedef struct S93 T93;

/* XM_EXPAT_PARSER_FACTORY */
typedef struct S94 T94;

/* ET_XACE_LIBRARY_PARSER */
typedef struct S95 T95;

/* XM_EIFFEL_PARSER */
typedef struct S96 T96;

/* UT_MESSAGE */
typedef struct S99 T99;

/* DS_SPARSE_TABLE_KEYS [STRING, STRING] */
typedef struct S100 T100;

/* SPECIAL [STRING] */
typedef struct S102 T102;

/* SPECIAL [INTEGER] */
typedef struct S103 T103;

/* DS_HASH_TABLE_CURSOR [STRING, STRING] */
typedef struct S104 T104;

/* KL_SPECIAL_ROUTINES [INTEGER] */
typedef struct S105 T105;

/* KL_SPECIAL_ROUTINES [STRING] */
typedef struct S106 T106;

/* DS_LINKED_LIST [STRING] */
typedef struct S107 T107;

/* DS_LINKED_LIST_CURSOR [STRING] */
typedef struct S108 T108;

/* DS_HASH_SET [INTEGER] */
typedef struct S109 T109;

/* EXECUTION_ENVIRONMENT */
typedef struct S110 T110;

/* ET_LACE_AST_FACTORY */
typedef struct S111 T111;

/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S112 T112;

/* YY_FILE_BUFFER */
typedef struct S113 T113;

/* YY_BUFFER */
typedef struct S114 T114;

/* DS_HASH_SET [ET_IDENTIFIER] */
typedef struct S115 T115;

/* SPECIAL [ANY] */
typedef struct S117 T117;

/* KL_SPECIAL_ROUTINES [ANY] */
typedef struct S118 T118;

/* ET_IDENTIFIER */
typedef struct S119 T119;

/* SPECIAL [ET_IDENTIFIER] */
typedef struct S120 T120;

/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
typedef struct S121 T121;

/* ET_LACE_CLUSTERS */
typedef struct S122 T122;

/* ET_LACE_CLUSTER */
typedef struct S123 T123;

/* ET_LACE_EXCLUDE */
typedef struct S124 T124;

/* ET_LACE_DOTNET_ASSEMBLIES */
typedef struct S125 T125;

/* ET_LACE_DOTNET_ASSEMBLY */
typedef struct S126 T126;

/* SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S127 T127;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S128 T128;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
typedef struct S129 T129;

/* SPECIAL [ET_LACE_CLUSTER] */
typedef struct S130 T130;

/* SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S131 T131;

/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
typedef struct S132 T132;

/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
typedef struct S133 T133;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S134 T134;

/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S135 T135;

/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S136 T136;

/* ET_LACE_DOTNET_GAC_ASSEMBLY */
typedef struct S137 T137;

/* KL_PLATFORM */
typedef struct S138 T138;

/* KL_INTEGER_ROUTINES */
typedef struct S139 T139;

/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S140 T140;

/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
typedef struct S141 T141;

/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
typedef struct S142 T142;

/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
typedef struct S143 T143;

/* ET_DYNAMIC_TYPE */
typedef struct S144 T144;

/* ET_QUERY_LIST */
typedef struct S146 T146;

/* ET_PROCEDURE_LIST */
typedef struct S148 T148;

/* ET_DYNAMIC_FEATURE */
typedef struct S150 T150;

/* DT_SHARED_SYSTEM_CLOCK */
typedef struct S151 T151;

/* DT_DATE_TIME */
typedef struct S152 T152;

/* DT_SYSTEM_CLOCK */
typedef struct S153 T153;

/* ET_TOKEN_CONSTANTS */
typedef struct S157 T157;

/* ET_EIFFEL_PARSER */
typedef struct S158 T158;

/* ET_CLASS_TYPE */
typedef struct S159 T159;

/* ET_ACTUAL_PARAMETER_LIST */
typedef struct S160 T160;

/* ET_GENERIC_CLASS_TYPE */
typedef struct S161 T161;

/* ET_EXTERNAL_FUNCTION */
typedef struct S163 T163;

/* ET_KEYWORD */
typedef struct S166 T166;

/* ET_DYNAMIC_TYPE_SET_LIST */
typedef struct S168 T168;

/* ET_TYPE_CHECKER */
typedef struct S169 T169;

/* KL_NULL_TEXT_OUTPUT_STREAM */
typedef struct S170 T170;

/* KL_STRING_OUTPUT_STREAM */
typedef struct S171 T171;

/* DS_ARRAYED_LIST [ET_IDENTIFIER] */
typedef struct S172 T172;

/* ET_DYNAMIC_TYPE_LIST */
typedef struct S173 T173;

/* DS_ARRAYED_STACK [ET_EXPRESSION] */
typedef struct S174 T174;

/* DS_ARRAYED_LIST [ET_EXPRESSION] */
typedef struct S175 T175;

/* DS_ARRAYED_LIST [INTEGER] */
typedef struct S176 T176;

/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S177 T177;

/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S178 T178;

/* DS_ARRAYED_LIST [ET_AGENT] */
typedef struct S180 T180;

/* ET_CURRENT */
typedef struct S182 T182;

/* ET_ACTUAL_ARGUMENT_LIST */
typedef struct S183 T183;

/* ET_CALL_INSTRUCTION */
typedef struct S184 T184;

/* ET_CALL_EXPRESSION */
typedef struct S186 T186;

/* DS_HASH_SET [ET_DYNAMIC_TYPE] */
typedef struct S187 T187;

/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S188 T188;

/* DS_HASH_SET [ET_FEATURE] */
typedef struct S189 T189;

/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
typedef struct S190 T190;

/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
typedef struct S191 T191;

/* DS_HASH_SET [STRING] */
typedef struct S192 T192;

/* KL_STRING_EQUALITY_TESTER */
typedef struct S193 T193;

/* DS_HASH_TABLE [BOOLEAN, STRING] */
typedef struct S194 T194;

/* RX_PCRE_REGULAR_EXPRESSION */
typedef struct S195 T195;

/* KL_TEXT_OUTPUT_FILE */
typedef struct S196 T196;

/* ET_DYNAMIC_TUPLE_TYPE */
typedef struct S197 T197;

/* UT_TEMPLATE_EXPANDER */
typedef struct S198 T198;

/* UT_CANNOT_WRITE_TO_FILE_ERROR */
typedef struct S199 T199;

/* ET_DYNAMIC_FEATURE_LIST */
typedef struct S200 T200;

/* ET_DYNAMIC_PRECURSOR_LIST */
typedef struct S201 T201;

/* ET_DYNAMIC_PRECURSOR */
typedef struct S202 T202;

/* ET_DYNAMIC_SPECIAL_TYPE */
typedef struct S203 T203;

/* ET_DYNAMIC_FUNCTION_TYPE */
typedef struct S204 T204;

/* ET_DYNAMIC_PROCEDURE_TYPE */
typedef struct S205 T205;

/* ET_RESULT */
typedef struct S206 T206;

/* ET_DYNAMIC_QUALIFIED_QUERY_CALL */
typedef struct S207 T207;

/* ET_FORMAL_ARGUMENT_LIST */
typedef struct S209 T209;

/* ET_FORMAL_ARGUMENT */
typedef struct S214 T214;

/* DS_QUICK_SORTER [INTEGER] */
typedef struct S215 T215;

/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
typedef struct S217 T217;

/* ARRAY [STRING] */
typedef struct S221 T221;

/* ET_DYNAMIC_STANDALONE_TYPE_SET */
typedef struct S222 T222;

/* ET_CONSTANT_ATTRIBUTE */
typedef struct S223 T223;

/* ET_UNIQUE_ATTRIBUTE */
typedef struct S225 T225;

/* ET_ATTRIBUTE */
typedef struct S226 T226;

/* UT_INTEGER_FORMATTER */
typedef struct S234 T234;

/* DS_CELL [INTEGER] */
typedef struct S235 T235;

/* DS_ARRAYED_LIST [ET_INLINE_AGENT] */
typedef struct S237 T237;

/* DS_ARRAYED_LIST [ET_PROCEDURE] */
typedef struct S238 T238;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S239 T239;

/* DS_ARRAYED_LIST [ET_QUERY] */
typedef struct S240 T240;

/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S241 T241;

/* DS_ARRAYED_LIST [ET_FEATURE] */
typedef struct S242 T242;

/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
typedef struct S243 T243;

/* ET_NESTED_TYPE_CONTEXT */
typedef struct S244 T244;

/* UNIX_FILE_INFO */
typedef struct S246 T246;

/* ET_AST_FACTORY */
typedef struct S248 T248;

/* ET_XACE_EXTERNALS */
typedef struct S249 T249;

/* ET_XACE_CLUSTERS */
typedef struct S250 T250;

/* ET_XACE_CLUSTER */
typedef struct S253 T253;

/* ET_XACE_OPTIONS */
typedef struct S254 T254;

/* ET_XACE_MOUNTED_LIBRARY */
typedef struct S255 T255;

/* ET_XACE_MOUNTED_LIBRARIES */
typedef struct S256 T256;

/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S257 T257;

/* XM_ATTRIBUTE */
typedef struct S258 T258;

/* DS_LINKED_LIST_CURSOR [XM_NODE] */
typedef struct S259 T259;

/* ET_XACE_LIBRARY */
typedef struct S261 T261;

/* DS_HASH_TABLE [INTEGER, STRING] */
typedef struct S262 T262;

/* ET_XACE_CLASS_OPTIONS */
typedef struct S265 T265;

/* ET_XACE_BOOLEAN_EXPECTED_ERROR */
typedef struct S266 T266;

/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
typedef struct S267 T267;

/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
typedef struct S268 T268;

/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
typedef struct S269 T269;

/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S270 T270;

/* ET_CLASS_NAME_TESTER */
typedef struct S271 T271;

/* ET_AST_NULL_PROCESSOR */
typedef struct S273 T273;

/* ET_FEATURE_FLATTENER */
typedef struct S274 T274;

/* ET_INTERFACE_CHECKER */
typedef struct S275 T275;

/* ET_IMPLEMENTATION_CHECKER */
typedef struct S276 T276;

/* ET_PROVIDER_CHECKER */
typedef struct S277 T277;

/* ET_ANCESTOR_BUILDER */
typedef struct S278 T278;

/* DT_DATE_TIME_DURATION */
typedef struct S282 T282;

/* ET_EIFFEL_PREPARSER */
typedef struct S283 T283;

/* DS_HASH_SET_CURSOR [STRING] */
typedef struct S284 T284;

/* DS_ARRAYED_LIST_CURSOR [STRING] */
typedef struct S285 T285;

/* ET_NONE_GROUP */
typedef struct S286 T286;

/* ET_PARENT */
typedef struct S287 T287;

/* ET_TUPLE_TYPE */
typedef struct S288 T288;

/* ET_RENAME_LIST */
typedef struct S289 T289;

/* ET_EXPORT_LIST */
typedef struct S290 T290;

/* ET_KEYWORD_FEATURE_NAME_LIST */
typedef struct S291 T291;

/* ET_PARENT_LIST */
typedef struct S292 T292;

/* ET_BUILTIN_CONVERT_FEATURE */
typedef struct S294 T294;

/* ARRAY [INTEGER] */
typedef struct S295 T295;

/* ET_BASE_TYPE_LIST */
typedef struct S296 T296;

/* ET_DO_PROCEDURE */
typedef struct S297 T297;

/* KL_COMPARABLE_COMPARATOR [INTEGER] */
typedef struct S299 T299;

/* ET_DEFERRED_PROCEDURE */
typedef struct S302 T302;

/* ET_DYNAMIC_PUSH_TYPE_SET */
typedef struct S303 T303;

/* DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
typedef struct S304 T304;

/* SPECIAL [AP_OPTION] */
typedef struct S306 T306;

/* KL_SPECIAL_ROUTINES [AP_OPTION] */
typedef struct S307 T307;

/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S308 T308;

/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S309 T309;

/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S310 T310;

/* XM_NAMESPACE_RESOLVER */
typedef struct S311 T311;

/* SPECIAL [XM_CALLBACKS_FILTER] */
typedef struct S312 T312;

/* ARRAY [XM_CALLBACKS_FILTER] */
typedef struct S313 T313;

/* XM_CALLBACKS_NULL */
typedef struct S314 T314;

/* ET_XACE_OPTION_NAMES */
typedef struct S315 T315;

/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING] */
typedef struct S318 T318;

/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING] */
typedef struct S320 T320;

/* SPECIAL [ET_XACE_LIBRARY] */
typedef struct S321 T321;

/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
typedef struct S322 T322;

/* XM_EIFFEL_SCANNER */
typedef struct S323 T323;

/* XM_DEFAULT_POSITION */
typedef struct S324 T324;

/* DS_BILINKED_LIST [XM_POSITION] */
typedef struct S326 T326;

/* DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
typedef struct S327 T327;

/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S328 T328;

/* XM_NULL_EXTERNAL_RESOLVER */
typedef struct S330 T330;

/* XM_EIFFEL_PARSER_NAME */
typedef struct S331 T331;

/* XM_EIFFEL_DECLARATION */
typedef struct S332 T332;

/* XM_DTD_EXTERNAL_ID */
typedef struct S333 T333;

/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
typedef struct S334 T334;

/* XM_DTD_ELEMENT_CONTENT */
typedef struct S335 T335;

/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S336 T336;

/* XM_DTD_ATTRIBUTE_CONTENT */
typedef struct S337 T337;

/* DS_BILINKED_LIST [STRING] */
typedef struct S338 T338;

/* SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S339 T339;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
typedef struct S340 T340;

/* SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S341 T341;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
typedef struct S342 T342;

/* SPECIAL [BOOLEAN] */
typedef struct S343 T343;

/* SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S344 T344;

/* KL_SPECIAL_ROUTINES [BOOLEAN] */
typedef struct S345 T345;

/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S346 T346;

/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S347 T347;

/* SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S348 T348;

/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
typedef struct S349 T349;

/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S351 T351;

/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S353 T353;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S354 T354;

/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S355 T355;

/* SPECIAL [DS_BILINKED_LIST [STRING]] */
typedef struct S356 T356;

/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]] */
typedef struct S357 T357;

/* XM_EIFFEL_ENTITY_DEF */
typedef struct S358 T358;

/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
typedef struct S359 T359;

/* XM_DTD_CALLBACKS_NULL */
typedef struct S361 T361;

/* XM_EIFFEL_SCANNER_DTD */
typedef struct S362 T362;

/* XM_EIFFEL_PE_ENTITY_DEF */
typedef struct S364 T364;

/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING] */
typedef struct S365 T365;

/* TO_SPECIAL [INTEGER] */
typedef struct S366 T366;

/* TO_SPECIAL [STRING] */
typedef struct S367 T367;

/* DS_LINKABLE [STRING] */
typedef struct S368 T368;

/* DS_HASH_SET_CURSOR [INTEGER] */
typedef struct S369 T369;

/* KL_EQUALITY_TESTER [ET_IDENTIFIER] */
typedef struct S371 T371;

/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S373 T373;

/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S375 T375;

/* DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
typedef struct S376 T376;

/* TO_SPECIAL [ANY] */
typedef struct S377 T377;

/* TO_SPECIAL [ET_IDENTIFIER] */
typedef struct S378 T378;

/* DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
typedef struct S379 T379;

/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S380 T380;

/* TO_SPECIAL [ET_LACE_CLUSTERS] */
typedef struct S381 T381;

/* TO_SPECIAL [ET_LACE_CLUSTER] */
typedef struct S382 T382;

/* TO_SPECIAL [ET_LACE_EXCLUDE] */
typedef struct S383 T383;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
typedef struct S384 T384;

/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S385 T385;

/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
typedef struct S387 T387;

/* SPECIAL [ET_CLASS] */
typedef struct S389 T389;

/* SPECIAL [ET_CLASS_NAME] */
typedef struct S390 T390;

/* KL_SPECIAL_ROUTINES [ET_CLASS] */
typedef struct S391 T391;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
typedef struct S392 T392;

/* SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S393 T393;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
typedef struct S394 T394;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S395 T395;

/* ET_FORMAL_PARAMETER_LIST */
typedef struct S396 T396;

/* MANAGED_POINTER */
typedef struct S397 T397;

/* DS_ARRAYED_STACK [INTEGER] */
typedef struct S398 T398;

/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S399 T399;

/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
typedef struct S400 T400;

/* DS_ARRAYED_STACK [ET_KEYWORD] */
typedef struct S401 T401;

/* DS_ARRAYED_STACK [ET_SYMBOL] */
typedef struct S402 T402;

/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
typedef struct S403 T403;

/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
typedef struct S404 T404;

/* DS_HASH_SET [ET_CLASS] */
typedef struct S405 T405;

/* DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
typedef struct S407 T407;

/* KL_DIRECTORY */
typedef struct S409 T409;

/* KL_EIFFEL_COMPILER */
typedef struct S410 T410;

/* ET_CLUSTER_DEPENDENCE_CONSTRAINT */
typedef struct S411 T411;

/* ET_CLASS_NAME_LIST */
typedef struct S413 T413;

/* ET_CLIENTS */
typedef struct S414 T414;

/* ET_FEATURE_CLAUSE */
typedef struct S415 T415;

/* SPECIAL [ET_KEYWORD] */
typedef struct S417 T417;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD] */
typedef struct S418 T418;

/* ET_AGENT_KEYWORD */
typedef struct S419 T419;

/* SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S420 T420;

/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
typedef struct S421 T421;

/* ET_PRECURSOR_KEYWORD */
typedef struct S422 T422;

/* SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S423 T423;

/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
typedef struct S424 T424;

/* ET_SYMBOL */
typedef struct S425 T425;

/* SPECIAL [ET_SYMBOL] */
typedef struct S426 T426;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL] */
typedef struct S427 T427;

/* SPECIAL [ET_POSITION] */
typedef struct S428 T428;

/* KL_SPECIAL_ROUTINES [ET_POSITION] */
typedef struct S429 T429;

/* ET_BIT_CONSTANT */
typedef struct S430 T430;

/* SPECIAL [ET_BIT_CONSTANT] */
typedef struct S431 T431;

/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
typedef struct S432 T432;

/* SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S434 T434;

/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
typedef struct S435 T435;

/* SPECIAL [ET_BREAK] */
typedef struct S437 T437;

/* KL_SPECIAL_ROUTINES [ET_BREAK] */
typedef struct S438 T438;

/* SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S440 T440;

/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
typedef struct S441 T441;

/* SPECIAL [ET_CURRENT] */
typedef struct S442 T442;

/* KL_SPECIAL_ROUTINES [ET_CURRENT] */
typedef struct S443 T443;

/* ET_FREE_OPERATOR */
typedef struct S444 T444;

/* SPECIAL [ET_FREE_OPERATOR] */
typedef struct S445 T445;

/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
typedef struct S446 T446;

/* SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S448 T448;

/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
typedef struct S449 T449;

/* ET_KEYWORD_OPERATOR */
typedef struct S450 T450;

/* SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S451 T451;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
typedef struct S452 T452;

/* SPECIAL [ET_MANIFEST_STRING] */
typedef struct S453 T453;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
typedef struct S454 T454;

/* SPECIAL [ET_REAL_CONSTANT] */
typedef struct S456 T456;

/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
typedef struct S457 T457;

/* SPECIAL [ET_RESULT] */
typedef struct S458 T458;

/* KL_SPECIAL_ROUTINES [ET_RESULT] */
typedef struct S459 T459;

/* ET_RETRY_INSTRUCTION */
typedef struct S460 T460;

/* SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S461 T461;

/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
typedef struct S462 T462;

/* ET_SYMBOL_OPERATOR */
typedef struct S463 T463;

/* SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S464 T464;

/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
typedef struct S465 T465;

/* ET_VOID */
typedef struct S466 T466;

/* SPECIAL [ET_VOID] */
typedef struct S467 T467;

/* KL_SPECIAL_ROUTINES [ET_VOID] */
typedef struct S468 T468;

/* ET_SEMICOLON_SYMBOL */
typedef struct S469 T469;

/* SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S470 T470;

/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
typedef struct S471 T471;

/* ET_BRACKET_SYMBOL */
typedef struct S472 T472;

/* SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S473 T473;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
typedef struct S474 T474;

/* ET_QUESTION_MARK_SYMBOL */
typedef struct S475 T475;

/* SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S476 T476;

/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
typedef struct S477 T477;

/* ET_C3_CHARACTER_CONSTANT */
typedef struct S478 T478;

/* ET_REGULAR_MANIFEST_STRING */
typedef struct S479 T479;

/* ET_VERBATIM_STRING */
typedef struct S480 T480;

/* ET_SPECIAL_MANIFEST_STRING */
typedef struct S481 T481;

/* ET_REGULAR_INTEGER_CONSTANT */
typedef struct S482 T482;

/* ET_UNDERSCORED_INTEGER_CONSTANT */
typedef struct S483 T483;

/* ET_HEXADECIMAL_INTEGER_CONSTANT */
typedef struct S484 T484;

/* ET_REGULAR_REAL_CONSTANT */
typedef struct S485 T485;

/* ET_UNDERSCORED_REAL_CONSTANT */
typedef struct S486 T486;

/* ET_TRUE_CONSTANT */
typedef struct S488 T488;

/* ET_FALSE_CONSTANT */
typedef struct S489 T489;

/* ET_C1_CHARACTER_CONSTANT */
typedef struct S490 T490;

/* ET_C2_CHARACTER_CONSTANT */
typedef struct S491 T491;

/* SPECIAL [ET_INDEXING_LIST] */
typedef struct S493 T493;

/* SPECIAL [ET_OBSOLETE] */
typedef struct S495 T495;

/* SPECIAL [ET_PARENT_LIST] */
typedef struct S496 T496;

/* ET_CREATOR_LIST */
typedef struct S497 T497;

/* SPECIAL [ET_CREATOR_LIST] */
typedef struct S498 T498;

/* ET_CONVERT_FEATURE_LIST */
typedef struct S499 T499;

/* SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S500 T500;

/* ET_FEATURE_CLAUSE_LIST */
typedef struct S501 T501;

/* SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S502 T502;

/* ET_INVARIANTS */
typedef struct S503 T503;

/* SPECIAL [ET_INVARIANTS] */
typedef struct S504 T504;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
typedef struct S505 T505;

/* SPECIAL [ET_INDEXING_ITEM] */
typedef struct S507 T507;

/* SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S509 T509;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
typedef struct S511 T511;

/* SPECIAL [ET_INDEXING_TERM] */
typedef struct S515 T515;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
typedef struct S516 T516;

/* SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S518 T518;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
typedef struct S519 T519;

/* ET_CREATE_EXPRESSION */
typedef struct S520 T520;

/* SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S521 T521;

/* ET_CUSTOM_ATTRIBUTE */
typedef struct S522 T522;

/* ET_MANIFEST_TUPLE */
typedef struct S523 T523;

/* SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S524 T524;

/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
typedef struct S525 T525;

/* SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S526 T526;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
typedef struct S527 T527;

/* ET_FORMAL_PARAMETER */
typedef struct S528 T528;

/* SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S529 T529;

/* SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S531 T531;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S532 T532;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
typedef struct S534 T534;

/* SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S535 T535;

/* ET_CONSTRAINED_FORMAL_PARAMETER */
typedef struct S536 T536;

/* ET_CONSTRAINT_CREATOR */
typedef struct S537 T537;

/* SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S538 T538;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
typedef struct S539 T539;

/* SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S541 T541;

/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
typedef struct S542 T542;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S543 T543;

/* ET_CONSTRAINT_NAMED_TYPE */
typedef struct S544 T544;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
typedef struct S545 T545;

/* SPECIAL [ET_LIKE_TYPE] */
typedef struct S547 T547;

/* ET_BIT_N */
typedef struct S548 T548;

/* ET_BIT_FEATURE */
typedef struct S549 T549;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S550 T550;

/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S552 T552;

/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S554 T554;

/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
typedef struct S555 T555;

/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S556 T556;

/* KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
typedef struct S557 T557;

/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
typedef struct S558 T558;

/* SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S559 T559;

/* SPECIAL [ET_PARENT] */
typedef struct S560 T560;

/* KL_SPECIAL_ROUTINES [ET_PARENT] */
typedef struct S561 T561;

/* SPECIAL [ET_RENAME_LIST] */
typedef struct S562 T562;

/* SPECIAL [ET_EXPORT_LIST] */
typedef struct S563 T563;

/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S564 T564;

/* SPECIAL [ET_PARENT_ITEM] */
typedef struct S565 T565;

/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
typedef struct S566 T566;

/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
typedef struct S567 T567;

/* SPECIAL [ET_RENAME_ITEM] */
typedef struct S569 T569;

/* SPECIAL [ET_FEATURE_NAME] */
typedef struct S570 T570;

/* SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S571 T571;

/* ET_RENAME */
typedef struct S572 T572;

/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
typedef struct S573 T573;

/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
typedef struct S574 T574;

/* SPECIAL [ET_EXPORT] */
typedef struct S576 T576;

/* SPECIAL [ET_CLIENTS] */
typedef struct S577 T577;

/* ET_ALL_EXPORT */
typedef struct S578 T578;

/* KL_SPECIAL_ROUTINES [ET_EXPORT] */
typedef struct S579 T579;

/* ET_FEATURE_EXPORT */
typedef struct S580 T580;

/* SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S581 T581;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
typedef struct S583 T583;

/* KL_SPECIAL_ROUTINES [ET_CLIENTS] */
typedef struct S584 T584;

/* SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S586 T586;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
typedef struct S587 T587;

/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S588 T588;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
typedef struct S589 T589;

/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
typedef struct S590 T590;

/* ET_CREATOR */
typedef struct S591 T591;

/* SPECIAL [ET_CREATOR] */
typedef struct S592 T592;

/* KL_SPECIAL_ROUTINES [ET_CREATOR] */
typedef struct S593 T593;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
typedef struct S594 T594;

/* SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S596 T596;

/* SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S598 T598;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
typedef struct S599 T599;

/* SPECIAL [ET_TYPE_LIST] */
typedef struct S601 T601;

/* ET_CONVERT_FUNCTION */
typedef struct S602 T602;

/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
typedef struct S603 T603;

/* ET_CONVERT_PROCEDURE */
typedef struct S604 T604;

/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
typedef struct S605 T605;

/* SPECIAL [ET_TYPE] */
typedef struct S606 T606;

/* SPECIAL [ET_TYPE_ITEM] */
typedef struct S608 T608;

/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
typedef struct S609 T609;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
typedef struct S610 T610;

/* SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S611 T611;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
typedef struct S612 T612;

/* SPECIAL [ET_QUERY] */
typedef struct S613 T613;

/* SPECIAL [ET_PROCEDURE] */
typedef struct S614 T614;

/* SPECIAL [ET_ASSIGNER] */
typedef struct S617 T617;

/* KL_SPECIAL_ROUTINES [ET_QUERY] */
typedef struct S618 T618;

/* SPECIAL [ET_CONSTANT] */
typedef struct S619 T619;

/* ET_PRECONDITIONS */
typedef struct S621 T621;

/* SPECIAL [ET_PRECONDITIONS] */
typedef struct S622 T622;

/* ET_LOCAL_VARIABLE_LIST */
typedef struct S623 T623;

/* SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S624 T624;

/* ET_COMPOUND */
typedef struct S625 T625;

/* SPECIAL [ET_COMPOUND] */
typedef struct S626 T626;

/* ET_POSTCONDITIONS */
typedef struct S627 T627;

/* SPECIAL [ET_POSTCONDITIONS] */
typedef struct S628 T628;

/* ET_DO_FUNCTION */
typedef struct S629 T629;

/* SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S630 T630;

/* ET_ONCE_FUNCTION */
typedef struct S631 T631;

/* ET_DEFERRED_FUNCTION */
typedef struct S632 T632;

/* SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S635 T635;

/* KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
typedef struct S636 T636;

/* ET_ONCE_PROCEDURE */
typedef struct S637 T637;

/* ET_EXTERNAL_PROCEDURE */
typedef struct S638 T638;

/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
typedef struct S639 T639;

/* KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
typedef struct S640 T640;

/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
typedef struct S641 T641;

/* ET_PREFIX_NAME */
typedef struct S642 T642;

/* ET_PREFIX_FREE_NAME */
typedef struct S643 T643;

/* ET_INFIX_NAME */
typedef struct S644 T644;

/* ET_INFIX_FREE_NAME */
typedef struct S645 T645;

/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
typedef struct S646 T646;

/* ET_ALIAS_NAME */
typedef struct S647 T647;

/* SPECIAL [ET_ALIAS_NAME] */
typedef struct S648 T648;

/* ET_ALIASED_FEATURE_NAME */
typedef struct S649 T649;

/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
typedef struct S650 T650;

/* ET_ALIAS_FREE_NAME */
typedef struct S651 T651;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S652 T652;

/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S654 T654;

/* SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S655 T655;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
typedef struct S657 T657;

/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S658 T658;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
typedef struct S659 T659;

/* SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S661 T661;

/* ET_LOCAL_VARIABLE */
typedef struct S662 T662;

/* SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S663 T663;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
typedef struct S665 T665;

/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S666 T666;

/* SPECIAL [ET_EXPRESSION] */
typedef struct S667 T667;

/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
typedef struct S668 T668;

/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
typedef struct S669 T669;

/* KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
typedef struct S670 T670;

/* ET_LOOP_INVARIANTS */
typedef struct S671 T671;

/* SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S672 T672;

/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
typedef struct S673 T673;

/* ET_VARIANT */
typedef struct S674 T674;

/* SPECIAL [ET_VARIANT] */
typedef struct S675 T675;

/* KL_SPECIAL_ROUTINES [ET_VARIANT] */
typedef struct S676 T676;

/* KL_SPECIAL_ROUTINES [ET_COMPOUND] */
typedef struct S677 T677;

/* KL_SPECIAL_ROUTINES [ET_TYPE] */
typedef struct S678 T678;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S679 T679;

/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S680 T680;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S682 T682;

/* ET_LABELED_ACTUAL_PARAMETER */
typedef struct S683 T683;

/* ET_LIKE_FEATURE */
typedef struct S685 T685;

/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
typedef struct S686 T686;

/* ET_LIKE_CURRENT */
typedef struct S687 T687;

/* SPECIAL [ET_INSTRUCTION] */
typedef struct S689 T689;

/* SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S690 T690;

/* ET_ASSIGNER_INSTRUCTION */
typedef struct S691 T691;

/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
typedef struct S693 T693;

/* ET_BRACKET_EXPRESSION */
typedef struct S694 T694;

/* SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S695 T695;

/* SPECIAL [ET_WRITABLE] */
typedef struct S696 T696;

/* ET_ASSIGNMENT */
typedef struct S697 T697;

/* ET_ASSIGNMENT_ATTEMPT */
typedef struct S698 T698;

/* ET_IF_INSTRUCTION */
typedef struct S699 T699;

/* SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S700 T700;

/* ET_INSPECT_INSTRUCTION */
typedef struct S701 T701;

/* SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S702 T702;

/* ET_LOOP_INSTRUCTION */
typedef struct S704 T704;

/* ET_DEBUG_INSTRUCTION */
typedef struct S705 T705;

/* SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S706 T706;

/* ET_CHECK_INSTRUCTION */
typedef struct S707 T707;

/* ET_BANG_INSTRUCTION */
typedef struct S709 T709;

/* ET_QUALIFIED_CALL */
typedef struct S710 T710;

/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S711 T711;

/* ET_CREATE_INSTRUCTION */
typedef struct S713 T713;

/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
typedef struct S714 T714;

/* ET_ELSEIF_PART_LIST */
typedef struct S715 T715;

/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
typedef struct S716 T716;

/* SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S717 T717;

/* ET_ELSEIF_PART */
typedef struct S718 T718;

/* SPECIAL [ET_ELSEIF_PART] */
typedef struct S719 T719;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
typedef struct S720 T720;

/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
typedef struct S721 T721;

/* ET_WHEN_PART_LIST */
typedef struct S722 T722;

/* SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S723 T723;

/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
typedef struct S724 T724;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
typedef struct S725 T725;

/* ET_WHEN_PART */
typedef struct S726 T726;

/* SPECIAL [ET_WHEN_PART] */
typedef struct S727 T727;

/* ET_CHOICE_LIST */
typedef struct S728 T728;

/* SPECIAL [ET_CHOICE_LIST] */
typedef struct S729 T729;

/* KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
typedef struct S730 T730;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
typedef struct S731 T731;

/* SPECIAL [ET_CHOICE] */
typedef struct S733 T733;

/* SPECIAL [ET_CHOICE_ITEM] */
typedef struct S735 T735;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
typedef struct S736 T736;

/* SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S738 T738;

/* KL_SPECIAL_ROUTINES [ET_CHOICE] */
typedef struct S739 T739;

/* ET_CHOICE_RANGE */
typedef struct S740 T740;

/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
typedef struct S741 T741;

/* ET_STATIC_CALL_EXPRESSION */
typedef struct S742 T742;

/* SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S743 T743;

/* ET_MANIFEST_STRING_LIST */
typedef struct S744 T744;

/* SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S745 T745;

/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
typedef struct S746 T746;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
typedef struct S747 T747;

/* SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S749 T749;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
typedef struct S750 T750;

/* ET_PRECURSOR_INSTRUCTION */
typedef struct S751 T751;

/* ET_STATIC_CALL_INSTRUCTION */
typedef struct S753 T753;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
typedef struct S754 T754;

/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
typedef struct S755 T755;

/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
typedef struct S756 T756;

/* ET_PRECURSOR_EXPRESSION */
typedef struct S757 T757;

/* ET_PARENTHESIZED_EXPRESSION */
typedef struct S758 T758;

/* SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S759 T759;

/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S760 T760;

/* SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S761 T761;

/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
typedef struct S762 T762;

/* ET_FEATURE_ADDRESS */
typedef struct S763 T763;

/* ET_CURRENT_ADDRESS */
typedef struct S764 T764;

/* ET_RESULT_ADDRESS */
typedef struct S765 T765;

/* ET_EXPRESSION_ADDRESS */
typedef struct S766 T766;

/* KL_SPECIAL_ROUTINES [ET_WRITABLE] */
typedef struct S767 T767;

/* ET_INFIX_EXPRESSION */
typedef struct S768 T768;

/* ET_INFIX_AND_THEN_OPERATOR */
typedef struct S770 T770;

/* ET_INFIX_OR_ELSE_OPERATOR */
typedef struct S771 T771;

/* ET_EQUALITY_EXPRESSION */
typedef struct S772 T772;

/* ET_PREFIX_EXPRESSION */
typedef struct S773 T773;

/* ET_OLD_EXPRESSION */
typedef struct S774 T774;

/* ET_CALL_AGENT */
typedef struct S775 T775;

/* SPECIAL [ET_CALL_AGENT] */
typedef struct S776 T776;

/* SPECIAL [ET_INLINE_AGENT] */
typedef struct S778 T778;

/* ET_ONCE_MANIFEST_STRING */
typedef struct S779 T779;

/* ET_MANIFEST_ARRAY */
typedef struct S780 T780;

/* SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S781 T781;

/* ET_STRIP_EXPRESSION */
typedef struct S782 T782;

/* SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S783 T783;

/* ET_BRACKET_ARGUMENT_LIST */
typedef struct S784 T784;

/* SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S785 T785;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
typedef struct S786 T786;

/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S787 T787;

/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S788 T788;

/* ET_MANIFEST_TYPE */
typedef struct S789 T789;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
typedef struct S790 T790;

/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
typedef struct S791 T791;

/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
typedef struct S792 T792;

/* KL_SPECIAL_ROUTINES [ET_CONSTANT] */
typedef struct S793 T793;

/* ET_AGENT_ARGUMENT_OPERAND_LIST */
typedef struct S794 T794;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S795 T795;

/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
typedef struct S796 T796;

/* SPECIAL [ET_AGENT_TARGET] */
typedef struct S797 T797;

/* ET_AGENT_OPEN_TARGET */
typedef struct S798 T798;

/* ET_DO_FUNCTION_INLINE_AGENT */
typedef struct S799 T799;

/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
typedef struct S800 T800;

/* ET_ONCE_FUNCTION_INLINE_AGENT */
typedef struct S801 T801;

/* ET_EXTERNAL_FUNCTION_INLINE_AGENT */
typedef struct S802 T802;

/* ET_DO_PROCEDURE_INLINE_AGENT */
typedef struct S803 T803;

/* ET_ONCE_PROCEDURE_INLINE_AGENT */
typedef struct S804 T804;

/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
typedef struct S805 T805;

/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
typedef struct S806 T806;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S807 T807;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S808 T808;

/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S810 T810;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S811 T811;

/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S812 T812;

/* ET_AGENT_TYPED_OPEN_ARGUMENT */
typedef struct S813 T813;

/* ET_TAGGED_ASSERTION */
typedef struct S815 T815;

/* SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S818 T818;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
typedef struct S819 T819;

/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
typedef struct S822 T822;

/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
typedef struct S823 T823;

/* DS_ARRAYED_LIST_CURSOR [INTEGER] */
typedef struct S824 T824;

/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S826 T826;

/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S828 T828;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S830 T830;

/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S831 T831;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S832 T832;

/* SPECIAL [ET_AGENT] */
typedef struct S833 T833;

/* KL_SPECIAL_ROUTINES [ET_AGENT] */
typedef struct S834 T834;

/* DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
typedef struct S835 T835;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
typedef struct S837 T837;

/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S838 T838;

/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S839 T839;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S840 T840;

/* DS_HASH_SET_CURSOR [ET_FEATURE] */
typedef struct S841 T841;

/* KL_SPECIAL_ROUTINES [ET_FEATURE] */
typedef struct S843 T843;

/* SPECIAL [ET_FEATURE] */
typedef struct S844 T844;

/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S845 T845;

/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
typedef struct S847 T847;

/* SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S849 T849;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
typedef struct S850 T850;

/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
typedef struct S851 T851;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING] */
typedef struct S852 T852;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING] */
typedef struct S854 T854;

/* RX_BYTE_CODE */
typedef struct S857 T857;

/* RX_CASE_MAPPING */
typedef struct S858 T858;

/* RX_CHARACTER_SET */
typedef struct S859 T859;

/* SPECIAL [RX_CHARACTER_SET] */
typedef struct S861 T861;

/* ARRAY [RX_CHARACTER_SET] */
typedef struct S862 T862;

/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
typedef struct S865 T865;

/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
typedef struct S866 T866;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S867 T867;

/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S868 T868;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S869 T869;

/* DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
typedef struct S870 T870;

/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S871 T871;

/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S872 T872;

/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S873 T873;

/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
typedef struct S874 T874;

/* SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S875 T875;

/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
typedef struct S876 T876;

/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
typedef struct S877 T877;

/* STRING_TO_INTEGER_CONVERTOR */
typedef struct S878 T878;

/* C_STRING */
typedef struct S881 T881;

/* ET_SYSTEM_ERROR */
typedef struct S882 T882;

/* ET_INTERNAL_ERROR */
typedef struct S883 T883;

/* ET_VALIDITY_ERROR */
typedef struct S884 T884;

/* ET_CLUSTER_ERROR */
typedef struct S885 T885;

/* ET_SYNTAX_ERROR */
typedef struct S886 T886;

/* ET_XACE_FEATURE_OPTIONS */
typedef struct S887 T887;

/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
typedef struct S888 T888;

/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
typedef struct S889 T889;

/* ET_XACE_MISSING_ATTRIBUTE_ERROR */
typedef struct S890 T890;

/* ET_XACE_UNKNOWN_ELEMENT_ERROR */
typedef struct S891 T891;

/* ET_XACE_MISSING_ELEMENT_ERROR */
typedef struct S892 T892;

/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
typedef struct S893 T893;

/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
typedef struct S894 T894;

/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
typedef struct S895 T895;

/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
typedef struct S896 T896;

/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
typedef struct S897 T897;

/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
typedef struct S898 T898;

/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S900 T900;

/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S901 T901;

/* DS_PAIR [XM_POSITION, XM_NODE] */
typedef struct S902 T902;

/* UC_UTF8_ROUTINES */
typedef struct S903 T903;

/* UC_UTF8_STRING */
typedef struct S904 T904;

/* XM_EIFFEL_INPUT_STREAM */
typedef struct S905 T905;

/* KL_CHARACTER_BUFFER */
typedef struct S906 T906;

/* KL_CHARACTER_ROUTINES */
typedef struct S907 T907;

/* KL_STDIN_FILE */
typedef struct S908 T908;

/* ET_FILE_POSITION */
typedef struct S909 T909;

/* ET_CONSTRAINT_GENERIC_NAMED_TYPE */
typedef struct S911 T911;

/* ET_FORMAL_PARAMETER_TYPE */
typedef struct S913 T913;

/* KL_ARRAY_ROUTINES [INTEGER] */
typedef struct S915 T915;

/* ARRAY [ET_TYPE] */
typedef struct S916 T916;

/* TYPED_POINTER [SPECIAL [CHARACTER]] */
typedef struct S918 T918;

/* ET_BRACED_TYPE_LIST */
typedef struct S919 T919;

/* ET_FORMAL_COMMA_ARGUMENT */
typedef struct S920 T920;

/* ET_LOCAL_COMMA_VARIABLE */
typedef struct S921 T921;

/* ET_LABELED_COMMA_ACTUAL_PARAMETER */
typedef struct S922 T922;

/* ET_KEYWORD_EXPRESSION */
typedef struct S923 T923;

/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
typedef struct S925 T925;

/* UT_TRISTATE */
typedef struct S926 T926;

/* SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S927 T927;

/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S928 T928;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S929 T929;

/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING] */
typedef struct S930 T930;

/* DS_HASH_TABLE_CURSOR [INTEGER, STRING] */
typedef struct S932 T932;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S934 T934;

/* ET_FEATURE_NAME_TESTER */
typedef struct S935 T935;

/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S937 T937;

/* ET_ALIAS_NAME_TESTER */
typedef struct S938 T938;

/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
typedef struct S940 T940;

/* DS_HASH_SET [ET_CLASS_NAME] */
typedef struct S941 T941;

/* ET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S942 T942;

/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
typedef struct S943 T943;

/* ET_IDENTIFIER_TYPE_RESOLVER */
typedef struct S944 T944;

/* ET_ANCHORED_TYPE_CHECKER */
typedef struct S945 T945;

/* ET_SIGNATURE_CHECKER */
typedef struct S946 T946;

/* ET_PARENT_CHECKER2 */
typedef struct S947 T947;

/* ET_FORMAL_PARAMETER_CHECKER2 */
typedef struct S948 T948;

/* ET_PRECURSOR_CHECKER */
typedef struct S949 T949;

/* ET_PARENT_CHECKER3 */
typedef struct S950 T950;

/* ET_FEATURE_CHECKER */
typedef struct S951 T951;

/* ET_SUPPLIER_BUILDER */
typedef struct S952 T952;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
typedef struct S953 T953;

/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER] */
typedef struct S954 T954;

/* ET_PARENT_CHECKER1 */
typedef struct S955 T955;

/* ET_FORMAL_PARAMETER_CHECKER1 */
typedef struct S956 T956;

/* SPECIAL [ET_BASE_TYPE] */
typedef struct S961 T961;

/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
typedef struct S962 T962;

/* TO_SPECIAL [AP_OPTION] */
typedef struct S963 T963;

/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
typedef struct S964 T964;

/* XM_NAMESPACE_RESOLVER_CONTEXT */
typedef struct S965 T965;

/* DS_LINKED_QUEUE [STRING] */
typedef struct S967 T967;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING] */
typedef struct S968 T968;

/* TO_SPECIAL [ET_XACE_LIBRARY] */
typedef struct S969 T969;

/* XM_EIFFEL_CHARACTER_ENTITY */
typedef struct S970 T970;

/* DS_LINKED_STACK [INTEGER] */
typedef struct S971 T971;

/* DS_BILINKABLE [XM_POSITION] */
typedef struct S972 T972;

/* DS_BILINKED_LIST_CURSOR [XM_POSITION] */
typedef struct S973 T973;

/* DS_LINKABLE [XM_EIFFEL_SCANNER] */
typedef struct S974 T974;

/* SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S975 T975;

/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S976 T976;

/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S978 T978;

/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
typedef struct S980 T980;

/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
typedef struct S981 T981;

/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
typedef struct S982 T982;

/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
typedef struct S983 T983;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S984 T984;

/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S985 T985;

/* DS_BILINKED_LIST_CURSOR [STRING] */
typedef struct S986 T986;

/* DS_BILINKABLE [STRING] */
typedef struct S987 T987;

/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
typedef struct S988 T988;

/* TO_SPECIAL [XM_EIFFEL_DECLARATION] */
typedef struct S989 T989;

/* TO_SPECIAL [BOOLEAN] */
typedef struct S990 T990;

/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
typedef struct S991 T991;

/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
typedef struct S992 T992;

/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
typedef struct S993 T993;

/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
typedef struct S994 T994;

/* TO_SPECIAL [DS_BILINKED_LIST [STRING]] */
typedef struct S995 T995;

/* TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
typedef struct S996 T996;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
typedef struct S998 T998;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
typedef struct S999 T999;

/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
typedef struct S1000 T1000;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
typedef struct S1001 T1001;

/* TO_SPECIAL [ET_CLASS] */
typedef struct S1002 T1002;

/* TO_SPECIAL [ET_CLASS_NAME] */
typedef struct S1003 T1003;

/* TO_SPECIAL [ET_DYNAMIC_TYPE] */
typedef struct S1004 T1004;

/* EXCEPTIONS */
typedef struct S1005 T1005;

/* SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1006 T1006;

/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
typedef struct S1007 T1007;

/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
typedef struct S1008 T1008;

/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
typedef struct S1009 T1009;

/* DS_HASH_SET_CURSOR [ET_CLASS] */
typedef struct S1010 T1010;

/* SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1011 T1011;

/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
typedef struct S1012 T1012;

/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
typedef struct S1013 T1013;

/* TO_SPECIAL [ET_KEYWORD] */
typedef struct S1015 T1015;

/* TO_SPECIAL [ET_AGENT_KEYWORD] */
typedef struct S1016 T1016;

/* TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
typedef struct S1017 T1017;

/* TO_SPECIAL [ET_SYMBOL] */
typedef struct S1018 T1018;

/* TO_SPECIAL [ET_POSITION] */
typedef struct S1019 T1019;

/* TO_SPECIAL [ET_BIT_CONSTANT] */
typedef struct S1020 T1020;

/* TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
typedef struct S1021 T1021;

/* TO_SPECIAL [ET_BREAK] */
typedef struct S1022 T1022;

/* TO_SPECIAL [ET_CHARACTER_CONSTANT] */
typedef struct S1023 T1023;

/* TO_SPECIAL [ET_CURRENT] */
typedef struct S1024 T1024;

/* TO_SPECIAL [ET_FREE_OPERATOR] */
typedef struct S1025 T1025;

/* TO_SPECIAL [ET_INTEGER_CONSTANT] */
typedef struct S1026 T1026;

/* TO_SPECIAL [ET_KEYWORD_OPERATOR] */
typedef struct S1027 T1027;

/* TO_SPECIAL [ET_MANIFEST_STRING] */
typedef struct S1028 T1028;

/* TO_SPECIAL [ET_REAL_CONSTANT] */
typedef struct S1029 T1029;

/* TO_SPECIAL [ET_RESULT] */
typedef struct S1030 T1030;

/* TO_SPECIAL [ET_RETRY_INSTRUCTION] */
typedef struct S1031 T1031;

/* TO_SPECIAL [ET_SYMBOL_OPERATOR] */
typedef struct S1032 T1032;

/* TO_SPECIAL [ET_VOID] */
typedef struct S1033 T1033;

/* TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
typedef struct S1034 T1034;

/* TO_SPECIAL [ET_BRACKET_SYMBOL] */
typedef struct S1035 T1035;

/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
typedef struct S1036 T1036;

/* TO_SPECIAL [ET_INDEXING_LIST] */
typedef struct S1038 T1038;

/* TO_SPECIAL [ET_INDEXING_ITEM] */
typedef struct S1039 T1039;

/* TO_SPECIAL [ET_INDEXING_TERM_LIST] */
typedef struct S1040 T1040;

/* TO_SPECIAL [ET_INDEXING_TERM] */
typedef struct S1041 T1041;

/* TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
typedef struct S1042 T1042;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
typedef struct S1043 T1043;

/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
typedef struct S1044 T1044;

/* TO_SPECIAL [ET_FORMAL_PARAMETER] */
typedef struct S1045 T1045;

/* TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
typedef struct S1046 T1046;

/* TO_SPECIAL [ET_CONSTRAINT_TYPE] */
typedef struct S1048 T1048;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
typedef struct S1049 T1049;

/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
typedef struct S1050 T1050;

/* TO_SPECIAL [ET_OBSOLETE] */
typedef struct S1051 T1051;

/* TO_SPECIAL [ET_PARENT_LIST] */
typedef struct S1052 T1052;

/* TO_SPECIAL [ET_PARENT] */
typedef struct S1053 T1053;

/* TO_SPECIAL [ET_PARENT_ITEM] */
typedef struct S1054 T1054;

/* TO_SPECIAL [ET_RENAME_LIST] */
typedef struct S1055 T1055;

/* TO_SPECIAL [ET_RENAME_ITEM] */
typedef struct S1056 T1056;

/* TO_SPECIAL [ET_EXPORT_LIST] */
typedef struct S1057 T1057;

/* TO_SPECIAL [ET_EXPORT] */
typedef struct S1058 T1058;

/* TO_SPECIAL [ET_FEATURE_EXPORT] */
typedef struct S1059 T1059;

/* TO_SPECIAL [ET_CLIENTS] */
typedef struct S1060 T1060;

/* TO_SPECIAL [ET_CLASS_NAME_ITEM] */
typedef struct S1061 T1061;

/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
typedef struct S1062 T1062;

/* TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
typedef struct S1063 T1063;

/* TO_SPECIAL [ET_CREATOR_LIST] */
typedef struct S1064 T1064;

/* TO_SPECIAL [ET_CREATOR] */
typedef struct S1065 T1065;

/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
typedef struct S1066 T1066;

/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
typedef struct S1067 T1067;

/* TO_SPECIAL [ET_CONVERT_FEATURE] */
typedef struct S1068 T1068;

/* TO_SPECIAL [ET_TYPE_LIST] */
typedef struct S1069 T1069;

/* TO_SPECIAL [ET_TYPE_ITEM] */
typedef struct S1070 T1070;

/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
typedef struct S1071 T1071;

/* TO_SPECIAL [ET_FEATURE_CLAUSE] */
typedef struct S1072 T1072;

/* TO_SPECIAL [ET_QUERY] */
typedef struct S1073 T1073;

/* TO_SPECIAL [ET_PROCEDURE] */
typedef struct S1078 T1078;

/* TO_SPECIAL [ET_EXTERNAL_ALIAS] */
typedef struct S1079 T1079;

/* TO_SPECIAL [ET_ASSIGNER] */
typedef struct S1080 T1080;

/* TO_SPECIAL [ET_FEATURE_NAME] */
typedef struct S1081 T1081;

/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
typedef struct S1082 T1082;

/* TO_SPECIAL [ET_ALIAS_NAME] */
typedef struct S1083 T1083;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
typedef struct S1084 T1084;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT] */
typedef struct S1085 T1085;

/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
typedef struct S1086 T1086;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
typedef struct S1087 T1087;

/* TO_SPECIAL [ET_LOCAL_VARIABLE] */
typedef struct S1088 T1088;

/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
typedef struct S1089 T1089;

/* TO_SPECIAL [ET_PRECONDITIONS] */
typedef struct S1090 T1090;

/* TO_SPECIAL [ET_POSTCONDITIONS] */
typedef struct S1091 T1091;

/* TO_SPECIAL [ET_INVARIANTS] */
typedef struct S1092 T1092;

/* TO_SPECIAL [ET_LOOP_INVARIANTS] */
typedef struct S1093 T1093;

/* TO_SPECIAL [ET_VARIANT] */
typedef struct S1094 T1094;

/* TO_SPECIAL [ET_COMPOUND] */
typedef struct S1095 T1095;

/* TO_SPECIAL [ET_TYPE] */
typedef struct S1096 T1096;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
typedef struct S1097 T1097;

/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
typedef struct S1098 T1098;

/* TO_SPECIAL [ET_LIKE_TYPE] */
typedef struct S1099 T1099;

/* TO_SPECIAL [ET_INSTRUCTION] */
typedef struct S1100 T1100;

/* TO_SPECIAL [ET_CREATE_EXPRESSION] */
typedef struct S1101 T1101;

/* TO_SPECIAL [ET_IF_INSTRUCTION] */
typedef struct S1102 T1102;

/* TO_SPECIAL [ET_ELSEIF_PART_LIST] */
typedef struct S1103 T1103;

/* TO_SPECIAL [ET_ELSEIF_PART] */
typedef struct S1104 T1104;

/* TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
typedef struct S1105 T1105;

/* TO_SPECIAL [ET_WHEN_PART_LIST] */
typedef struct S1106 T1106;

/* TO_SPECIAL [ET_WHEN_PART] */
typedef struct S1108 T1108;

/* TO_SPECIAL [ET_CHOICE_LIST] */
typedef struct S1109 T1109;

/* TO_SPECIAL [ET_CHOICE_ITEM] */
typedef struct S1110 T1110;

/* TO_SPECIAL [ET_CHOICE] */
typedef struct S1111 T1111;

/* TO_SPECIAL [ET_CHOICE_CONSTANT] */
typedef struct S1112 T1112;

/* TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
typedef struct S1114 T1114;

/* TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
typedef struct S1115 T1115;

/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
typedef struct S1116 T1116;

/* TO_SPECIAL [ET_EXPRESSION] */
typedef struct S1117 T1117;

/* TO_SPECIAL [ET_CALL_EXPRESSION] */
typedef struct S1118 T1118;

/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
typedef struct S1119 T1119;

/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
typedef struct S1120 T1120;

/* TO_SPECIAL [ET_EXPRESSION_ITEM] */
typedef struct S1121 T1121;

/* TO_SPECIAL [ET_WRITABLE] */
typedef struct S1122 T1122;

/* ET_AGENT_IMPLICIT_CURRENT_TARGET */
typedef struct S1123 T1123;

/* TO_SPECIAL [ET_BRACKET_EXPRESSION] */
typedef struct S1124 T1124;

/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
typedef struct S1125 T1125;

/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
typedef struct S1126 T1126;

/* TO_SPECIAL [ET_MANIFEST_ARRAY] */
typedef struct S1127 T1127;

/* TO_SPECIAL [ET_MANIFEST_TUPLE] */
typedef struct S1128 T1128;

/* TO_SPECIAL [ET_STRIP_EXPRESSION] */
typedef struct S1129 T1129;

/* TO_SPECIAL [ET_CONSTANT] */
typedef struct S1130 T1130;

/* TO_SPECIAL [ET_CALL_AGENT] */
typedef struct S1132 T1132;

/* TO_SPECIAL [ET_INLINE_AGENT] */
typedef struct S1133 T1133;

/* TO_SPECIAL [ET_AGENT_TARGET] */
typedef struct S1134 T1134;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
typedef struct S1135 T1135;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
typedef struct S1136 T1136;

/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
typedef struct S1137 T1137;

/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
typedef struct S1138 T1138;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
typedef struct S1139 T1139;

/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
typedef struct S1140 T1140;

/* TO_SPECIAL [ET_AGENT] */
typedef struct S1141 T1141;

/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
typedef struct S1142 T1142;

/* TO_SPECIAL [ET_FEATURE] */
typedef struct S1143 T1143;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
typedef struct S1144 T1144;

/* TO_SPECIAL [ET_DYNAMIC_FEATURE] */
typedef struct S1145 T1145;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING] */
typedef struct S1146 T1146;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
typedef struct S1147 T1147;

/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
typedef struct S1148 T1148;

/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
typedef struct S1149 T1149;

/* UC_UNICODE_ROUTINES */
typedef struct S1150 T1150;

/* ET_XACE_INVALID_EXPRESSION_ERROR */
typedef struct S1151 T1151;

/* INTEGER_OVERFLOW_CHECKER */
typedef struct S1155 T1155;

/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1156 T1156;

/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
typedef struct S1157 T1157;

/* DS_LINKED_QUEUE [CHARACTER] */
typedef struct S1160 T1160;

/* UC_UTF16_ROUTINES */
typedef struct S1161 T1161;

/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
typedef struct S1162 T1162;

/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
typedef struct S1163 T1163;

/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
typedef struct S1164 T1164;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING] */
typedef struct S1165 T1165;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1167 T1167;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1169 T1169;

/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
typedef struct S1170 T1170;

/* SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1172 T1172;

/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1173 T1173;

/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1175 T1175;

/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
typedef struct S1176 T1176;

/* SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1177 T1177;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
typedef struct S1178 T1178;

/* DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
typedef struct S1179 T1179;

/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1180 T1180;

/* DS_HASH_SET [ET_FEATURE_NAME] */
typedef struct S1181 T1181;

/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1182 T1182;

/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1183 T1183;

/* ET_DOTNET_SIGNATURE_TESTER */
typedef struct S1184 T1184;

/* DS_HASH_SET [ET_DOTNET_FEATURE] */
typedef struct S1185 T1185;

/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1187 T1187;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
typedef struct S1188 T1188;

/* ET_REDECLARED_FEATURE */
typedef struct S1189 T1189;

/* DS_ARRAYED_LIST [ET_CLASS] */
typedef struct S1190 T1190;

/* DS_HASH_TABLE [INTEGER, ET_CLASS] */
typedef struct S1191 T1191;

/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]] */
typedef struct S1192 T1192;

/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER] */
typedef struct S1194 T1194;

/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER] */
typedef struct S1196 T1196;

/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
typedef struct S1197 T1197;

/* TO_SPECIAL [ET_BASE_TYPE] */
typedef struct S1198 T1198;

/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1200 T1200;

/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1201 T1201;

/* DS_LINKABLE [INTEGER] */
typedef struct S1203 T1203;

/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
typedef struct S1204 T1204;

/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
typedef struct S1205 T1205;

/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1206 T1206;

/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
typedef struct S1207 T1207;

/* TO_SPECIAL [ET_ASSERTION_ITEM] */
typedef struct S1210 T1210;

/* TO_SPECIAL [ET_XACE_CLUSTER] */
typedef struct S1211 T1211;

/* SPECIAL [NATURAL_8] */
typedef struct S1217 T1217;

/* STRING_SEARCHER */
typedef struct S1218 T1218;

/* DS_HASH_SET [XM_NAMESPACE] */
typedef struct S1220 T1220;

/* XM_COMMENT */
typedef struct S1221 T1221;

/* XM_PROCESSING_INSTRUCTION */
typedef struct S1222 T1222;

/* XM_CHARACTER_DATA */
typedef struct S1223 T1223;

/* XM_NAMESPACE */
typedef struct S1224 T1224;

/* ET_FEATURE_IDS */
typedef struct S1225 T1225;

/* ET_FEATURE_LIST */
typedef struct S1226 T1226;

/* ET_PARENT_FEATURE */
typedef struct S1227 T1227;

/* DS_QUICK_SORTER [ET_QUERY] */
typedef struct S1228 T1228;

/* DS_QUICK_SORTER [ET_PROCEDURE] */
typedef struct S1229 T1229;

/* ET_INHERITED_FEATURE */
typedef struct S1230 T1230;

/* ET_DYNAMIC_TARGET_LIST */
typedef struct S1236 T1236;

/* TYPED_POINTER [NATURAL_8] */
typedef struct S1237 T1237;

/* ET_CONVERT_EXPRESSION */
typedef struct S1240 T1240;

/* ET_INFIX_CAST_EXPRESSION */
typedef struct S1241 T1241;

/* ET_COMPRESSED_POSITION */
typedef struct S1244 T1244;

/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
typedef struct S1245 T1245;

/* ET_REPLICATED_FEATURE */
typedef struct S1247 T1247;

/* DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
typedef struct S1248 T1248;

/* DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
typedef struct S1249 T1249;

/* DS_LINKED_LIST [ET_DOTNET_FEATURE] */
typedef struct S1251 T1251;

/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
typedef struct S1252 T1252;

/* DS_LINKED_LIST [ET_PARENT_FEATURE] */
typedef struct S1253 T1253;

/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1254 T1254;

/* ARRAY [BOOLEAN] */
typedef struct S1255 T1255;

/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
typedef struct S1256 T1256;

/* SPECIAL [ARRAY [INTEGER]] */
typedef struct S1257 T1257;

/* SPECIAL [SPECIAL [ARRAY [INTEGER]]] */
typedef struct S1258 T1258;

/* SPECIAL [NATURAL_64] */
typedef struct S1259 T1259;

/* ARRAY [NATURAL_64] */
typedef struct S1260 T1260;

/* DS_LINKABLE [CHARACTER] */
typedef struct S1261 T1261;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
typedef struct S1263 T1263;

/* TO_SPECIAL [ET_FLATTENED_FEATURE] */
typedef struct S1264 T1264;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
typedef struct S1265 T1265;

/* TO_SPECIAL [ET_CLASS_NAME_LIST] */
typedef struct S1266 T1266;

/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1267 T1267;

/* SPECIAL [ET_RENAME] */
typedef struct S1268 T1268;

/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1270 T1270;

/* KL_SPECIAL_ROUTINES [ET_RENAME] */
typedef struct S1272 T1272;

/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
typedef struct S1273 T1273;

/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1274 T1274;

/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1275 T1275;

/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1277 T1277;

/* SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1278 T1278;

/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1280 T1280;

/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
typedef struct S1282 T1282;

/* SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1283 T1283;

/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1284 T1284;

/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
typedef struct S1285 T1285;

/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1286 T1286;

/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1288 T1288;

/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1290 T1290;

/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1291 T1291;

/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1293 T1293;

/* DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
typedef struct S1294 T1294;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS] */
typedef struct S1295 T1295;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS] */
typedef struct S1297 T1297;

/* SPECIAL [DS_LINKABLE [INTEGER]] */
typedef struct S1298 T1298;

/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]] */
typedef struct S1299 T1299;

/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]] */
typedef struct S1300 T1300;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER] */
typedef struct S1302 T1302;

/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1303 T1303;

/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]] */
typedef struct S1304 T1304;

/* ET_DOTNET_ASSEMBLY_ERROR */
typedef struct S1306 T1306;

/* AP_OPTION_COMPARATOR */
typedef struct S1307 T1307;

/* DS_QUICK_SORTER [AP_OPTION] */
typedef struct S1308 T1308;

/* STD_FILES */
typedef struct S1316 T1316;

/* PLATFORM */
typedef struct S1317 T1317;

/* DS_LINKABLE [XM_NODE] */
typedef struct S1319 T1319;

/* XM_NODE_TYPER */
typedef struct S1320 T1320;

/* SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1327 T1327;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
typedef struct S1328 T1328;

/* ET_SEEDED_QUERY_COMPARATOR */
typedef struct S1329 T1329;

/* ET_SEEDED_PROCEDURE_COMPARATOR */
typedef struct S1332 T1332;

/* KL_STRING_INPUT_STREAM */
typedef struct S1336 T1336;

/* ET_CONVERT_TO_EXPRESSION */
typedef struct S1339 T1339;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
typedef struct S1348 T1348;

/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
typedef struct S1349 T1349;

/* SPECIAL [XM_NAMESPACE] */
typedef struct S1353 T1353;

/* KL_EQUALITY_TESTER [XM_NAMESPACE] */
typedef struct S1354 T1354;

/* DS_HASH_SET_CURSOR [XM_NAMESPACE] */
typedef struct S1355 T1355;

/* KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
typedef struct S1356 T1356;

/* SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1357 T1357;

/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
typedef struct S1358 T1358;

/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
typedef struct S1359 T1359;

/* DS_LINKABLE [ET_ADAPTED_FEATURE] */
typedef struct S1360 T1360;

/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
typedef struct S1361 T1361;

/* SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1362 T1362;

/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
typedef struct S1363 T1363;

/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
typedef struct S1364 T1364;

/* DS_LINKABLE [ET_DOTNET_FEATURE] */
typedef struct S1365 T1365;

/* SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1366 T1366;

/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
typedef struct S1367 T1367;

/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
typedef struct S1368 T1368;

/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
typedef struct S1369 T1369;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
typedef struct S1372 T1372;

/* TO_SPECIAL [ET_RENAME] */
typedef struct S1373 T1373;

/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
typedef struct S1374 T1374;

/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
typedef struct S1375 T1375;

/* TO_SPECIAL [ET_REPLICABLE_FEATURE] */
typedef struct S1376 T1376;

/* TO_SPECIAL [ET_DOTNET_FEATURE] */
typedef struct S1377 T1377;

/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
typedef struct S1378 T1378;

/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
typedef struct S1379 T1379;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1381 T1381;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1383 T1383;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS] */
typedef struct S1384 T1384;

/* TO_SPECIAL [DS_LINKABLE [INTEGER]] */
typedef struct S1385 T1385;

/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1388 T1388;

/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1390 T1390;

/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
typedef struct S1391 T1391;

/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
typedef struct S1398 T1398;

/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1399 T1399;

/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1400 T1400;

/* TO_SPECIAL [XM_NAMESPACE] */
typedef struct S1401 T1401;

/* TO_SPECIAL [ET_DYNAMIC_TARGET] */
typedef struct S1402 T1402;

/* TO_SPECIAL [ET_PARENT_FEATURE] */
typedef struct S1403 T1403;

/* TO_SPECIAL [ET_LIKE_IDENTIFIER] */
typedef struct S1404 T1404;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
typedef struct S1409 T1409;

/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
typedef struct S1411 T1411;

/* CONSOLE */
typedef struct S1412 T1412;

/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
typedef struct S1413 T1413;

/* DS_LINKABLE [ET_PARENT_FEATURE] */
typedef struct S1416 T1416;

/* Struct for boxed version of type BOOLEAN */
struct Sb1 {
	int id;
	T1 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_8 */
struct Sb2 {
	int id;
	T2 z1; /* item */
};

/* Struct for boxed version of type CHARACTER_32 */
struct Sb3 {
	int id;
	T3 z1; /* item */
};

/* Struct for boxed version of type INTEGER_8 */
struct Sb4 {
	int id;
	T4 z1; /* item */
};

/* Struct for boxed version of type INTEGER_16 */
struct Sb5 {
	int id;
	T5 z1; /* item */
};

/* Struct for boxed version of type INTEGER_32 */
struct Sb6 {
	int id;
	T6 z1; /* item */
};

/* Struct for boxed version of type INTEGER_64 */
struct Sb7 {
	int id;
	T7 z1; /* item */
};

/* Struct for boxed version of type NATURAL_8 */
struct Sb8 {
	int id;
	T8 z1; /* item */
};

/* Struct for boxed version of type NATURAL_16 */
struct Sb9 {
	int id;
	T9 z1; /* item */
};

/* Struct for boxed version of type NATURAL_32 */
struct Sb10 {
	int id;
	T10 z1; /* item */
};

/* Struct for boxed version of type NATURAL_64 */
struct Sb11 {
	int id;
	T11 z1; /* item */
};

/* Struct for boxed version of type REAL_32 */
struct Sb12 {
	int id;
	T12 z1; /* item */
};

/* Struct for boxed version of type REAL_64 */
struct Sb13 {
	int id;
	T13 z1; /* item */
};

/* Struct for boxed version of type POINTER */
struct Sb14 {
	int id;
	T14 z1; /* item */
};

/* Struct for type SPECIAL [CHARACTER_8] */
struct S15 {
	int id;
	T6 z1; /* count */
	T2 z2[1]; /* item */
};

/* Struct for type STRING_8 */
struct S17 {
	int id;
	T0* a1; /* area */
	T6 a2; /* count */
	T6 a13; /* internal_hash_code */
};

/* Struct for type GEC */
struct S21 {
	int id;
	T0* a2; /* error_handler */
	T0* a3; /* ace_filename */
	T0* a4; /* last_universe */
	T0* a7; /* finalize_flag */
	T0* a8; /* cat_flag */
	T0* a9; /* no_c_compile_flag */
	T0* a10; /* silent_flag */
	T0* a11; /* verbose_flag */
	T0* a12; /* version_flag */
};

/* Struct for type KL_TEXT_INPUT_FILE */
struct S22 {
	int id;
	T6 a3; /* mode */
	T0* a7; /* name */
	T0* a10; /* string_name */
	T0* a11; /* character_buffer */
	T1 a12; /* end_of_file */
	T14 a17; /* file_pointer */
	T1 a19; /* descriptor_available */
	T0* a24; /* last_string */
	T2 a26; /* last_character */
};

/* Struct for type KL_ARGUMENTS */
struct S23 {
	int id;
	T0* a1; /* program_name */
};

/* Struct for type UT_ERROR_HANDLER */
struct S24 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type KL_STRING_ROUTINES */
struct S26 {
	int id;
};

/* Struct for type ET_ERROR_HANDLER */
struct S28 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* info_file */
	T1 a3; /* benchmark_shown */
	T0* a4; /* error_file */
	T0* a6; /* warning_file */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type KL_EXCEPTIONS */
struct S29 {
	int id;
};

/* Struct for type AP_PARSER */
struct S30 {
	int id;
	T0* a1; /* options */
	T0* a2; /* alternative_options_lists */
	T0* a3; /* parameters */
	T0* a4; /* help_option */
	T0* a8; /* application_description */
	T0* a9; /* parameters_description */
	T0* a11; /* error_handler */
	T0* a14; /* argument_list */
	T0* a16; /* current_options */
	T1 a17; /* is_first_option */
	T0* a23; /* last_option_parameter */
};

/* Struct for type AP_ALTERNATIVE_OPTIONS_LIST */
struct S31 {
	int id;
	T0* a1; /* introduction_option */
	T0* a2; /* parameters_description */
	T0* a3; /* internal_cursor */
	T0* a10; /* first_cell */
};

/* Struct for type AP_FLAG */
struct S32 {
	int id;
	T6 a2; /* occurrences */
	T0* a3; /* description */
	T0* a4; /* long_form */
	T2 a5; /* short_form */
	T1 a6; /* has_short_form */
	T1 a7; /* is_mandatory */
	T1 a11; /* is_hidden */
};

/* Struct for type AP_DISPLAY_HELP_FLAG */
struct S37 {
	int id;
	T0* a13; /* description */
	T2 a14; /* short_form */
	T1 a15; /* has_short_form */
	T0* a16; /* long_form */
	T6 a17; /* occurrences */
	T1 a21; /* is_hidden */
	T1 a22; /* is_mandatory */
};

/* Struct for type ET_XACE_UNIVERSE_PARSER */
struct S38 {
	int id;
	T0* a1; /* last_universe */
	T0* a2; /* ast_factory */
	T0* a3; /* xml_parser */
	T0* a4; /* tree_pipe */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_preprocessor */
	T0* a11; /* parsed_libraries */
	T0* a12; /* error_handler */
	T0* a14; /* library_parser */
	T0* a18; /* eiffel_error_handler */
	T0* a19; /* eiffel_ast_factory */
	T1 a139; /* is_shallow */
	T1 a140; /* is_ve */
};

/* Struct for type ET_XACE_DEFAULT_ERROR_HANDLER */
struct S39 {
	int id;
	T6 a2; /* error_count */
	T0* a3; /* error_file */
	T0* a5; /* warning_file */
	T0* a6; /* info_file */
};

/* Struct for type DS_HASH_TABLE [STRING, STRING] */
struct S40 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T6 a3; /* position */
	T6 a5; /* last_position */
	T6 a6; /* capacity */
	T6 a9; /* slots_position */
	T6 a11; /* count */
	T0* a12; /* equality_tester */
	T6 a13; /* found_position */
	T6 a14; /* modulus */
	T6 a15; /* clashes_previous_position */
	T0* a18; /* item_storage */
	T0* a21; /* clashes */
	T0* a22; /* slots */
	T0* a23; /* key_storage */
	T6 a24; /* free_slot */
	T0* a25; /* internal_cursor */
	T0* a28; /* special_item_routines */
	T0* a29; /* special_key_routines */
};

/* Struct for type ST_SPLITTER */
struct S41 {
	int id;
	T1 a3; /* has_escape_character */
	T2 a4; /* escape_character */
	T0* a6; /* separator_codes */
	T0* a8; /* separators */
};

/* Struct for type UC_STRING_EQUALITY_TESTER */
struct S43 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [STRING] */
struct S44 {
	int id;
};

/* Struct for type KL_EXECUTION_ENVIRONMENT */
struct S45 {
	int id;
};

/* Struct for type ET_XACE_UNIVERSE */
struct S48 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a38; /* ise_version */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T6 a42; /* feature_count */
	T0* a43; /* system_name */
	T0* a44; /* internal_eiffel_parser */
	T0* a45; /* ast_factory */
	T1 a46; /* use_assign_keyword */
	T1 a47; /* use_attribute_keyword */
	T1 a48; /* use_convert_keyword */
	T1 a49; /* use_create_keyword */
	T1 a50; /* use_recast_keyword */
	T1 a51; /* use_reference_keyword */
	T1 a52; /* use_void_keyword */
	T1 a53; /* providers_enabled */
	T0* a54; /* clusters */
	T0* a56; /* basic_classes */
	T0* a58; /* null_processor */
	T0* a59; /* provider_checker */
	T0* a60; /* ancestor_builder */
	T0* a61; /* feature_flattener */
	T0* a62; /* implementation_checker */
	T0* a63; /* flat_implementation_checker */
	T0* a65; /* ecma_version */
	T0* a66; /* dotnet_assemblies */
	T1 a68; /* is_preparsed */
	T1 a69; /* flat_mode */
	T1 a70; /* flat_dbc_mode */
	T1 a71; /* suppliers_enabled */
	T0* a73; /* root_class_name */
	T0* a74; /* libraries */
	T0* a75; /* options */
	T0* a76; /* creation_procedure_name */
	T0* a79; /* general_class */
	T0* a80; /* tuple_class */
	T0* a81; /* bit_class */
	T0* a82; /* native_array_class */
	T0* a83; /* type_class */
	T0* a84; /* routine_class */
	T0* a85; /* procedure_class */
	T0* a86; /* predicate_class */
	T0* a87; /* function_class */
	T0* a88; /* arguments_class */
	T0* a89; /* platform_class */
	T0* a90; /* system_object_class */
	T0* a91; /* system_string_class */
	T0* a92; /* any_type */
	T0* a93; /* none_type */
	T0* a94; /* integer_type */
	T0* a95; /* natural_type */
	T0* a96; /* character_type */
	T0* a97; /* string_type */
	T0* a98; /* real_type */
	T0* a99; /* double_type */
	T0* a100; /* tuple_type */
	T0* a101; /* array_any_type */
	T0* a102; /* array_none_type */
	T0* a103; /* any_parent */
	T0* a104; /* any_parents */
	T0* a105; /* system_object_parents */
	T0* a106; /* integer_convert_feature */
	T0* a107; /* integer_8_convert_feature */
	T0* a108; /* integer_16_convert_feature */
	T0* a109; /* integer_32_convert_feature */
	T0* a110; /* integer_64_convert_feature */
	T0* a111; /* natural_convert_feature */
	T0* a112; /* natural_8_convert_feature */
	T0* a113; /* natural_16_convert_feature */
	T0* a114; /* natural_32_convert_feature */
	T0* a115; /* natural_64_convert_feature */
	T0* a116; /* real_convert_feature */
	T0* a117; /* double_convert_feature */
	T0* a118; /* real_32_convert_feature */
	T0* a119; /* real_64_convert_feature */
	T0* a120; /* boolean_ref_class */
	T0* a121; /* character_8_ref_class */
	T0* a122; /* character_32_ref_class */
	T0* a123; /* character_ref_class */
	T0* a124; /* wide_character_ref_class */
	T0* a125; /* integer_8_ref_class */
	T0* a126; /* integer_16_ref_class */
	T0* a127; /* integer_32_ref_class */
	T0* a128; /* integer_64_ref_class */
	T0* a129; /* integer_ref_class */
	T0* a130; /* natural_8_ref_class */
	T0* a131; /* natural_16_ref_class */
	T0* a132; /* natural_32_ref_class */
	T0* a133; /* natural_64_ref_class */
	T0* a134; /* natural_ref_class */
	T0* a135; /* real_32_ref_class */
	T0* a136; /* real_64_ref_class */
	T0* a137; /* real_ref_class */
	T0* a138; /* double_ref_class */
	T0* a139; /* pointer_ref_class */
	T0* a140; /* numeric_class */
	T0* a141; /* comparable_class */
	T0* a142; /* part_comparable_class */
	T0* a143; /* hashable_class */
	T0* a144; /* boolean_convert_feature */
	T0* a145; /* character_convert_feature */
	T0* a146; /* wide_character_convert_feature */
	T0* a147; /* pointer_convert_feature */
	T1 a148; /* cluster_dependence_enabled */
	T0* a149; /* internal_dotnet_assembly_consumer */
	T0* a150; /* internal_eiffel_preparser */
	T6 a151; /* copy_seed */
	T6 a152; /* void_seed */
	T0* a153; /* supplier_handler */
};

/* Struct for type ET_LACE_PARSER */
struct S49 {
	int id;
	T0* a2; /* last_universe */
	T6 a3; /* yy_parsing_status */
	T0* a5; /* named_clusters */
	T0* a7; /* override_cluster_names */
	T0* a8; /* external_include_pathnames */
	T0* a9; /* external_object_pathnames */
	T0* a10; /* ast_factory */
	T6 a11; /* eif_lineno */
	T0* a13; /* eif_buffer */
	T0* a14; /* input_buffer */
	T6 a15; /* yy_end */
	T6 a16; /* yy_position */
	T6 a17; /* yy_line */
	T6 a18; /* yy_column */
	T6 a20; /* yy_suspended_yystacksize */
	T6 a21; /* yy_suspended_yystate */
	T6 a22; /* yy_suspended_yyn */
	T6 a23; /* yy_suspended_yychar1 */
	T6 a24; /* yy_suspended_index */
	T6 a25; /* yy_suspended_yyss_top */
	T6 a26; /* yy_suspended_yy_goto */
	T6 a28; /* error_count */
	T1 a29; /* yy_lookahead_needed */
	T6 a30; /* yyerrstatus */
	T6 a31; /* yyssp */
	T0* a32; /* yyss */
	T0* a41; /* yypact */
	T6 a43; /* last_token */
	T0* a46; /* yytranslate */
	T0* a49; /* yycheck */
	T0* a50; /* yytable */
	T0* a52; /* yydefact */
	T0* a54; /* yyr1 */
	T0* a56; /* yypgoto */
	T0* a57; /* yydefgoto */
	T0* a60; /* filename */
	T0* a61; /* error_handler */
	T6 a63; /* yy_start_state */
	T6 a64; /* line */
	T6 a65; /* column */
	T6 a66; /* position */
	T1 a67; /* yy_more_flag */
	T6 a68; /* yy_more_len */
	T6 a69; /* yy_last_accepting_state */
	T6 a70; /* yy_last_accepting_cpos */
	T1 a71; /* yy_rejected */
	T6 a72; /* yy_state_count */
	T6 a73; /* yy_full_match */
	T6 a74; /* yy_lp */
	T6 a75; /* yy_looking_for_trail_begin */
	T6 a76; /* yy_full_lp */
	T6 a77; /* yy_full_state */
	T6 a78; /* yy_start */
	T6 a79; /* yyvsp1 */
	T6 a80; /* yyvsp2 */
	T6 a81; /* yyvsp3 */
	T6 a82; /* yyvsp4 */
	T6 a83; /* yyvsp5 */
	T6 a84; /* yyvsp6 */
	T6 a85; /* yyvsp7 */
	T0* a93; /* yy_state_stack */
	T0* a94; /* yy_ec */
	T0* a95; /* yy_content_area */
	T0* a96; /* yy_content */
	T0* a97; /* yy_accept */
	T0* a98; /* yy_chk */
	T0* a99; /* yy_base */
	T0* a100; /* yy_def */
	T0* a101; /* yy_meta */
	T0* a103; /* yy_nxt */
	T0* a105; /* yy_acclist */
	T0* a115; /* yytypes2 */
	T6 a116; /* yyvsc1 */
	T0* a117; /* yyvs1 */
	T0* a118; /* yyspecial_routines1 */
	T0* a120; /* last_any_value */
	T6 a121; /* yyvsc2 */
	T0* a122; /* yyvs2 */
	T0* a123; /* yyspecial_routines2 */
	T0* a124; /* last_et_identifier_value */
	T0* a125; /* yyvs4 */
	T0* a127; /* yyvs7 */
	T6 a129; /* yyvsc4 */
	T0* a130; /* yyspecial_routines4 */
	T0* a131; /* yyvs3 */
	T0* a133; /* yyvs5 */
	T6 a135; /* yyvsc3 */
	T0* a136; /* yyspecial_routines3 */
	T6 a138; /* yyvsc5 */
	T0* a139; /* yyspecial_routines5 */
	T6 a140; /* yyvsc7 */
	T0* a141; /* yyspecial_routines7 */
	T0* a142; /* yyvs6 */
	T6 a145; /* yyvsc6 */
	T0* a146; /* yyspecial_routines6 */
	T0* a148; /* yytypes1 */
	T6 a189; /* code_ */
	T0* a192; /* str_ */
	T0* a207; /* msil_clr_version_value */
	T0* a209; /* metadata_cache_path_value */
};

/* Struct for type ET_LACE_ERROR_HANDLER */
struct S50 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
};

/* Struct for type ET_LACE_UNIVERSE */
struct S51 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* root_class */
	T0* a3; /* none_class */
	T0* a4; /* any_class */
	T0* a5; /* unknown_class */
	T0* a6; /* classes */
	T0* a7; /* root_creation */
	T6 a9; /* default_create_seed */
	T0* a10; /* boolean_class */
	T0* a11; /* character_8_class */
	T0* a12; /* character_32_class */
	T0* a13; /* character_class */
	T0* a14; /* wide_character_class */
	T0* a15; /* integer_8_class */
	T0* a16; /* integer_16_class */
	T0* a17; /* integer_32_class */
	T0* a18; /* integer_64_class */
	T0* a19; /* integer_class */
	T0* a20; /* natural_8_class */
	T0* a21; /* natural_16_class */
	T0* a22; /* natural_32_class */
	T0* a23; /* natural_64_class */
	T0* a24; /* natural_class */
	T0* a25; /* real_32_class */
	T0* a26; /* real_64_class */
	T0* a27; /* real_class */
	T0* a28; /* double_class */
	T0* a29; /* pointer_class */
	T0* a30; /* special_class */
	T0* a31; /* string_8_class */
	T0* a32; /* string_32_class */
	T0* a33; /* string_class */
	T0* a34; /* array_class */
	T0* a35; /* interface_checker */
	T0* a36; /* typed_pointer_class */
	T0* a38; /* ise_version */
	T0* a39; /* external_include_pathnames */
	T0* a40; /* external_library_pathnames */
	T0* a41; /* external_object_pathnames */
	T6 a42; /* feature_count */
	T0* a43; /* tuple_class */
	T0* a44; /* procedure_class */
	T0* a45; /* function_class */
	T0* a46; /* predicate_class */
	T0* a47; /* system_name */
	T0* a48; /* internal_eiffel_parser */
	T0* a49; /* ast_factory */
	T1 a50; /* cluster_dependence_enabled */
	T0* a51; /* general_class */
	T1 a52; /* use_void_keyword */
	T1 a53; /* use_assign_keyword */
	T1 a54; /* use_attribute_keyword */
	T1 a55; /* use_convert_keyword */
	T1 a56; /* use_create_keyword */
	T1 a57; /* use_recast_keyword */
	T1 a58; /* use_reference_keyword */
	T1 a59; /* providers_enabled */
	T0* a60; /* clusters */
	T0* a62; /* basic_classes */
	T0* a64; /* null_processor */
	T0* a65; /* provider_checker */
	T0* a66; /* ancestor_builder */
	T0* a67; /* feature_flattener */
	T0* a68; /* implementation_checker */
	T0* a69; /* flat_implementation_checker */
	T0* a71; /* ecma_version */
	T0* a72; /* dotnet_assemblies */
	T1 a74; /* is_preparsed */
	T1 a75; /* flat_mode */
	T1 a76; /* flat_dbc_mode */
	T1 a77; /* suppliers_enabled */
	T6 a80; /* copy_seed */
	T6 a81; /* void_seed */
	T0* a83; /* bit_class */
	T0* a84; /* native_array_class */
	T0* a85; /* type_class */
	T0* a86; /* routine_class */
	T0* a87; /* arguments_class */
	T0* a88; /* platform_class */
	T0* a89; /* system_object_class */
	T0* a90; /* system_string_class */
	T0* a91; /* any_type */
	T0* a92; /* none_type */
	T0* a93; /* integer_type */
	T0* a94; /* natural_type */
	T0* a95; /* character_type */
	T0* a96; /* string_type */
	T0* a97; /* real_type */
	T0* a98; /* double_type */
	T0* a99; /* tuple_type */
	T0* a100; /* array_any_type */
	T0* a101; /* array_none_type */
	T0* a102; /* any_parent */
	T0* a103; /* any_parents */
	T0* a104; /* system_object_parents */
	T0* a105; /* integer_convert_feature */
	T0* a106; /* integer_8_convert_feature */
	T0* a107; /* integer_16_convert_feature */
	T0* a108; /* integer_32_convert_feature */
	T0* a109; /* integer_64_convert_feature */
	T0* a110; /* natural_convert_feature */
	T0* a111; /* natural_8_convert_feature */
	T0* a112; /* natural_16_convert_feature */
	T0* a113; /* natural_32_convert_feature */
	T0* a114; /* natural_64_convert_feature */
	T0* a115; /* real_convert_feature */
	T0* a116; /* double_convert_feature */
	T0* a117; /* real_32_convert_feature */
	T0* a118; /* real_64_convert_feature */
	T0* a119; /* boolean_ref_class */
	T0* a120; /* character_8_ref_class */
	T0* a121; /* character_32_ref_class */
	T0* a122; /* character_ref_class */
	T0* a123; /* wide_character_ref_class */
	T0* a124; /* integer_8_ref_class */
	T0* a125; /* integer_16_ref_class */
	T0* a126; /* integer_32_ref_class */
	T0* a127; /* integer_64_ref_class */
	T0* a128; /* integer_ref_class */
	T0* a129; /* natural_8_ref_class */
	T0* a130; /* natural_16_ref_class */
	T0* a131; /* natural_32_ref_class */
	T0* a132; /* natural_64_ref_class */
	T0* a133; /* natural_ref_class */
	T0* a134; /* real_32_ref_class */
	T0* a135; /* real_64_ref_class */
	T0* a136; /* real_ref_class */
	T0* a137; /* double_ref_class */
	T0* a138; /* pointer_ref_class */
	T0* a139; /* numeric_class */
	T0* a140; /* comparable_class */
	T0* a141; /* part_comparable_class */
	T0* a142; /* hashable_class */
	T0* a143; /* boolean_convert_feature */
	T0* a144; /* character_convert_feature */
	T0* a145; /* wide_character_convert_feature */
	T0* a146; /* pointer_convert_feature */
	T0* a147; /* internal_dotnet_assembly_consumer */
	T0* a148; /* internal_eiffel_preparser */
	T0* a149; /* supplier_handler */
};

/* Struct for type ET_NULL_ERROR_HANDLER */
struct S52 {
	int id;
	T0* a1; /* error_file */
	T0* a3; /* warning_file */
	T0* a4; /* info_file */
	T1 a5; /* has_error */
	T1 a6; /* benchmark_shown */
	T1 a7; /* is_ise */
	T1 a18; /* has_eiffel_error */
	T1 a23; /* has_internal_error */
	T1 a24; /* is_se */
	T1 a25; /* is_ve */
	T1 a26; /* is_ge */
	T1 a28; /* is_verbose */
	T1 a30; /* is_pedantic */
};

/* Struct for type ET_SYSTEM */
struct S53 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* universe */
	T0* a3; /* null_dynamic_type_set_builder */
	T0* a4; /* dynamic_types */
	T1 a5; /* catcall_mode */
	T0* a6; /* dynamic_type_set_builder */
	T0* a7; /* boolean_type */
	T0* a8; /* character_type */
	T0* a9; /* wide_character_type */
	T0* a10; /* character_8_type */
	T0* a11; /* character_32_type */
	T0* a12; /* integer_type */
	T0* a13; /* integer_8_type */
	T0* a14; /* integer_16_type */
	T0* a15; /* integer_32_type */
	T0* a16; /* integer_64_type */
	T0* a17; /* natural_type */
	T0* a18; /* natural_8_type */
	T0* a19; /* natural_16_type */
	T0* a20; /* natural_32_type */
	T0* a21; /* natural_64_type */
	T0* a22; /* real_type */
	T0* a23; /* double_type */
	T0* a24; /* real_32_type */
	T0* a25; /* real_64_type */
	T0* a26; /* pointer_type */
	T0* a27; /* string_type */
	T0* a28; /* string_8_type */
	T0* a29; /* string_32_type */
	T0* a30; /* special_character_type */
	T0* a31; /* special_character_8_type */
	T0* a32; /* special_character_32_type */
	T0* a33; /* any_type */
	T0* a34; /* none_type */
	T0* a38; /* root_type */
	T0* a39; /* root_creation_procedure */
	T0* a40; /* array_area_feature */
	T0* a41; /* array_lower_feature */
	T0* a42; /* array_upper_feature */
	T0* a43; /* typed_pointer_to_pointer_feature */
};

/* Struct for type ET_CLASS */
struct S55 {
	int id;
	T0* a1; /* name */
	T6 a2; /* id */
	T0* a3; /* ancestors */
	T0* a5; /* queries */
	T0* a6; /* procedures */
	T0* a7; /* class_keyword */
	T0* a8; /* end_keyword */
	T0* a9; /* eiffel_class */
	T0* a10; /* master_class */
	T6 a11; /* time_stamp */
	T0* a14; /* formal_parameters */
	T0* a19; /* class_mark */
	T1 a23; /* is_parsed */
	T0* a25; /* group */
	T0* a26; /* overridden_class */
	T6 a36; /* index */
	T1 a37; /* interface_checked */
	T1 a38; /* has_interface_error */
	T1 a41; /* has_syntax_error */
	T0* a45; /* filename */
	T0* a46; /* creators */
	T0* a47; /* frozen_keyword */
	T0* a48; /* external_keyword */
	T0* a49; /* providers */
	T1 a50; /* in_system */
	T0* a51; /* parents */
	T0* a52; /* invariants */
	T0* a53; /* convert_features */
	T1 a54; /* has_flat_implementation_error */
	T1 a55; /* flat_implementation_checked */
	T1 a56; /* has_implementation_error */
	T1 a57; /* implementation_checked */
	T0* a58; /* suppliers */
	T1 a59; /* has_flattening_error */
	T1 a60; /* features_flattened */
	T1 a61; /* has_deferred_features */
	T1 a62; /* has_ancestors_error */
	T1 a63; /* ancestors_built */
	T0* a64; /* feature_clauses */
	T0* a65; /* first_indexing */
	T0* a66; /* second_indexing */
	T0* a67; /* obsolete_message */
	T0* a68; /* leading_break */
	T1 a69; /* is_interface */
};

/* Struct for type ET_C_GENERATOR */
struct S56 {
	int id;
	T1 a1; /* has_fatal_error */
	T1 a2; /* short_names */
	T0* a3; /* type_checker */
	T0* a4; /* universe */
	T0* a5; /* current_system */
	T0* a6; /* current_file */
	T0* a8; /* header_file */
	T0* a9; /* current_type */
	T0* a10; /* current_feature */
	T0* a12; /* current_function_header_buffer */
	T0* a13; /* current_function_body_buffer */
	T0* a14; /* temp_variables */
	T0* a15; /* used_temp_variables */
	T0* a16; /* free_temp_variables */
	T0* a17; /* conforming_types */
	T0* a18; /* non_conforming_types */
	T0* a19; /* operand_stack */
	T0* a20; /* call_operands */
	T0* a21; /* polymorphic_type_ids */
	T0* a22; /* polymorphic_types */
	T0* a23; /* standalone_type_sets */
	T0* a24; /* polymorphic_call_feature */
	T0* a25; /* current_agents */
	T0* a26; /* agent_open_operands */
	T0* a27; /* agent_closed_operands */
	T0* a28; /* agent_target */
	T0* a30; /* agent_arguments */
	T0* a31; /* agent_instruction */
	T0* a32; /* agent_expression */
	T0* a33; /* wrapper_expression */
	T0* a34; /* wrapper_dynamic_type_sets */
	T0* a35; /* manifest_array_types */
	T0* a36; /* manifest_tuple_types */
	T0* a37; /* once_features */
	T0* a38; /* constant_features */
	T0* a39; /* called_features */
	T0* a40; /* included_header_filenames */
	T0* a42; /* included_runtime_header_files */
	T0* a43; /* included_runtime_c_files */
	T0* a44; /* c_filenames */
	T0* a45; /* cpp_filenames */
	T1 a46; /* is_finalize */
	T0* a47; /* external_c_regexp */
	T0* a48; /* external_c_macro_regexp */
	T0* a49; /* external_c_struct_regexp */
	T0* a50; /* external_c_inline_regexp */
	T0* a51; /* old_external_c_regexp */
	T0* a52; /* old_external_c_macro_regexp */
	T0* a53; /* old_external_c_struct_regexp */
	T0* a54; /* external_cpp_regexp */
	T0* a55; /* external_cpp_inline_regexp */
	T6 a112; /* indentation */
	T0* a230; /* assignment_target */
	T1 a231; /* in_operand */
	T0* a233; /* call_target_type */
	T0* a248; /* current_agent */
};

/* Struct for type KL_SHELL_COMMAND */
struct S57 {
	int id;
	T6 a1; /* exit_code */
	T0* a2; /* string_command */
	T0* a4; /* command */
	T6 a5; /* return_code */
	T1 a7; /* is_system_code */
};

/* Struct for type UT_VERSION */
struct S58 {
	int id;
	T6 a1; /* internal_major */
	T6 a2; /* internal_minor */
	T6 a3; /* internal_revision */
	T6 a4; /* internal_build */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET_BUILDER */
struct S59 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_system */
	T0* a3; /* current_dynamic_type */
	T0* a5; /* current_dynamic_feature */
	T0* a7; /* dynamic_type_sets */
	T0* a8; /* current_index */
	T0* a9; /* result_index */
	T0* a10; /* character_index */
	T0* a11; /* boolean_index */
	T0* a12; /* double_index */
	T0* a13; /* real_index */
	T0* a14; /* integer_index */
	T0* a15; /* integer_8_index */
	T0* a16; /* integer_16_index */
	T0* a17; /* integer_32_index */
	T0* a18; /* integer_64_index */
	T0* a19; /* natural_index */
	T0* a20; /* natural_8_index */
	T0* a21; /* natural_16_index */
	T0* a22; /* natural_32_index */
	T0* a23; /* natural_64_index */
	T0* a24; /* pointer_index */
	T0* a25; /* none_index */
	T0* a26; /* string_index */
	T1 a27; /* catcall_mode */
	T1 a28; /* no_debug */
	T1 a29; /* no_assertion */
	T1 a30; /* is_built */
	T0* a31; /* universe */
	T0* a32; /* type_checker */
	T0* a33; /* current_class */
	T0* a34; /* current_type */
	T0* a35; /* current_feature */
	T0* a37; /* current_feature_impl */
	T0* a38; /* current_class_impl */
	T0* a39; /* enclosing_inline_agents */
	T0* a40; /* overloaded_procedures */
	T0* a41; /* unused_overloaded_procedures_list */
	T0* a42; /* overloaded_queries */
	T0* a43; /* unused_overloaded_queries_list */
	T0* a44; /* best_overloaded_features */
	T0* a45; /* unused_contexts */
	T0* a46; /* current_context */
	T1 a48; /* in_precursor */
	T0* a184; /* current_inline_agent */
	T1 a185; /* in_rescue */
	T1 a188; /* in_invariant */
	T1 a189; /* in_precondition */
	T1 a190; /* in_postcondition */
	T0* a194; /* current_target_type */
	T1 a196; /* in_assertion */
};

/* Struct for type KL_OPERATING_SYSTEM */
struct S60 {
	int id;
};

/* Struct for type UT_CANNOT_READ_FILE_ERROR */
struct S62 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type UT_VERSION_NUMBER */
struct S64 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type KL_WINDOWS_FILE_SYSTEM */
struct S65 {
	int id;
	T2 a16; /* secondary_directory_separator */
};

/* Struct for type KL_UNIX_FILE_SYSTEM */
struct S66 {
	int id;
};

/* Struct for type KL_LINKABLE [CHARACTER] */
struct S67 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TYPED_POINTER [ANY] */
struct S69 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type KL_STANDARD_FILES */
struct S71 {
	int id;
};

/* Struct for type KL_STDERR_FILE */
struct S72 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type KL_STDOUT_FILE */
struct S73 {
	int id;
	T14 a2; /* file_pointer */
	T0* a5; /* name */
	T6 a6; /* mode */
};

/* Struct for type UC_STRING */
struct S74 {
	int id;
	T6 a1; /* count */
	T6 a3; /* byte_count */
	T6 a4; /* internal_hash_code */
	T6 a5; /* last_byte_index_input */
	T6 a6; /* last_byte_index_result */
	T0* a7; /* area */
};

/* Struct for type KL_ANY_ROUTINES */
struct S75 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [STRING] */
struct S76 {
	int id;
	T6 a2; /* count */
	T0* a7; /* internal_cursor */
	T0* a9; /* storage */
	T0* a14; /* special_routines */
	T6 a15; /* capacity */
	T0* a20; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [AP_OPTION] */
struct S77 {
	int id;
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
	T0* a8; /* equality_tester */
	T0* a9; /* storage */
	T0* a12; /* special_routines */
	T6 a13; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S78 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type AP_ERROR_HANDLER */
struct S79 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_file */
	T0* a4; /* warning_file */
	T0* a5; /* info_file */
};

/* Struct for type AP_ERROR */
struct S80 {
	int id;
	T0* a1; /* parameters */
	T0* a2; /* default_template */
	T0* a4; /* code */
};

/* Struct for type DS_LINKED_LIST_CURSOR [AP_OPTION] */
struct S81 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type ST_WORD_WRAPPER */
struct S82 {
	int id;
	T6 a3; /* new_line_indentation */
	T6 a4; /* broken_words */
	T6 a5; /* maximum_text_width */
};

/* Struct for type ET_XACE_AST_FACTORY */
struct S83 {
	int id;
};

/* Struct for type XM_DOCUMENT */
struct S84 {
	int id;
	T0* a1; /* root_element */
	T0* a4; /* internal_cursor */
	T0* a7; /* first_cell */
	T0* a8; /* last_cell */
	T6 a9; /* count */
	T0* a13; /* parent */
};

/* Struct for type XM_ELEMENT */
struct S85 {
	int id;
	T0* a1; /* parent */
	T0* a3; /* name */
	T0* a15; /* namespace */
	T0* a18; /* first_cell */
	T0* a19; /* last_cell */
	T6 a20; /* count */
	T0* a21; /* internal_cursor */
};

/* Struct for type XM_POSITION_TABLE */
struct S86 {
	int id;
	T0* a2; /* table */
};

/* Struct for type XM_TREE_CALLBACKS_PIPE */
struct S88 {
	int id;
	T0* a1; /* error */
	T0* a3; /* tree */
	T0* a5; /* start */
	T0* a8; /* last */
};

/* Struct for type XM_STOP_ON_ERROR_FILTER */
struct S89 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* last_error */
	T0* a3; /* next */
};

/* Struct for type XM_CALLBACKS_TO_TREE_FILTER */
struct S90 {
	int id;
	T0* a1; /* last_position_table */
	T0* a2; /* document */
	T0* a3; /* next */
	T0* a4; /* source_parser */
	T0* a5; /* current_element */
	T0* a6; /* namespace_cache */
};

/* Struct for type ET_XACE_VALIDATOR */
struct S91 {
	int id;
	T1 a1; /* has_error */
	T0* a2; /* error_handler */
};

/* Struct for type ET_XACE_PREPROCESSOR */
struct S92 {
	int id;
	T0* a1; /* variables */
	T0* a2; /* error_handler */
};

/* Struct for type DS_HASH_TABLE [ET_XACE_LIBRARY, STRING] */
struct S93 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T0* a8; /* equality_tester */
	T0* a9; /* internal_cursor */
	T6 a11; /* found_position */
	T0* a12; /* item_storage */
	T0* a13; /* key_storage */
	T0* a14; /* clashes */
	T6 a15; /* modulus */
	T0* a16; /* slots */
	T6 a17; /* capacity */
	T0* a20; /* special_item_routines */
	T0* a21; /* special_key_routines */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type XM_EXPAT_PARSER_FACTORY */
struct S94 {
	int id;
};

/* Struct for type ET_XACE_LIBRARY_PARSER */
struct S95 {
	int id;
	T0* a1; /* error_handler */
	T0* a2; /* ast_factory */
	T0* a3; /* parsed_libraries */
	T0* a5; /* library_parser */
	T0* a6; /* xml_preprocessor */
	T0* a7; /* xml_validator */
	T0* a8; /* xml_parser */
	T0* a9; /* tree_pipe */
	T0* a10; /* last_library */
	T1 a129; /* is_shallow */
	T1 a130; /* is_ve */
};

/* Struct for type XM_EIFFEL_PARSER */
struct S96 {
	int id;
	T0* a3; /* internal_last_error_description */
	T0* a8; /* scanner */
	T0* a14; /* error_positions */
	T0* a16; /* scanners */
	T1 a17; /* in_external_dtd */
	T0* a18; /* callbacks */
	T0* a19; /* entities */
	T0* a21; /* pe_entities */
	T0* a22; /* dtd_resolver */
	T0* a24; /* entity_resolver */
	T1 a25; /* use_namespaces */
	T6 a26; /* string_mode */
	T0* a28; /* yyss */
	T0* a31; /* yytranslate */
	T0* a33; /* yyr1 */
	T0* a35; /* yytypes1 */
	T0* a37; /* yytypes2 */
	T0* a39; /* yydefact */
	T0* a41; /* yydefgoto */
	T0* a43; /* yypact */
	T0* a45; /* yypgoto */
	T0* a47; /* yytable */
	T0* a49; /* yycheck */
	T6 a51; /* yy_parsing_status */
	T6 a53; /* yy_suspended_yystacksize */
	T6 a54; /* yy_suspended_yystate */
	T6 a55; /* yy_suspended_yyn */
	T6 a56; /* yy_suspended_yychar1 */
	T6 a57; /* yy_suspended_index */
	T6 a58; /* yy_suspended_yyss_top */
	T6 a59; /* yy_suspended_yy_goto */
	T6 a61; /* error_count */
	T1 a62; /* yy_lookahead_needed */
	T6 a63; /* yyerrstatus */
	T6 a64; /* yyssp */
	T6 a72; /* last_token */
	T6 a81; /* yyvsp1 */
	T6 a82; /* yyvsp2 */
	T6 a83; /* yyvsp3 */
	T6 a84; /* yyvsp4 */
	T6 a85; /* yyvsp5 */
	T6 a86; /* yyvsp6 */
	T6 a87; /* yyvsp7 */
	T6 a88; /* yyvsp8 */
	T6 a89; /* yyvsp9 */
	T6 a90; /* yyvsp10 */
	T6 a91; /* yyvsp11 */
	T0* a92; /* last_string_value */
	T6 a103; /* yyvsc1 */
	T0* a104; /* yyvs1 */
	T0* a105; /* yyspecial_routines1 */
	T0* a107; /* last_any_value */
	T6 a108; /* yyvsc4 */
	T0* a109; /* yyvs4 */
	T0* a110; /* yyspecial_routines4 */
	T6 a112; /* yyvsc2 */
	T0* a113; /* yyvs2 */
	T0* a114; /* yyspecial_routines2 */
	T0* a121; /* yyvs11 */
	T6 a122; /* yyvsc11 */
	T0* a123; /* yyspecial_routines11 */
	T0* a125; /* yyvs10 */
	T0* a126; /* yyvs5 */
	T6 a128; /* yyvsc10 */
	T0* a129; /* yyspecial_routines10 */
	T6 a135; /* yyvsc3 */
	T0* a136; /* yyvs3 */
	T0* a137; /* yyspecial_routines3 */
	T0* a143; /* yyvs6 */
	T6 a145; /* yyvsc6 */
	T0* a146; /* yyspecial_routines6 */
	T0* a151; /* yyvs8 */
	T0* a154; /* yyvs7 */
	T6 a155; /* yyvsc8 */
	T0* a156; /* yyspecial_routines8 */
	T6 a158; /* yyvsc7 */
	T0* a159; /* yyspecial_routines7 */
	T0* a161; /* yyvs9 */
	T6 a163; /* yyvsc9 */
	T0* a164; /* yyspecial_routines9 */
	T6 a170; /* yyvsc5 */
	T0* a171; /* yyspecial_routines5 */
	T0* a177; /* dtd_callbacks */
};

/* Struct for type UT_MESSAGE */
struct S99 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [STRING, STRING] */
struct S100 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [STRING] */
struct S102 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [INTEGER] */
struct S103 {
	int id;
	T6 z1; /* count */
	T6 z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [STRING, STRING] */
struct S104 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [INTEGER] */
struct S105 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [STRING] */
struct S106 {
	int id;
};

/* Struct for type DS_LINKED_LIST [STRING] */
struct S107 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [STRING] */
struct S108 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_HASH_SET [INTEGER] */
struct S109 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a13; /* slots_position */
	T6 a15; /* count */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* special_item_routines */
	T0* a21; /* item_storage */
	T0* a22; /* clashes */
	T0* a24; /* slots */
	T6 a25; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type EXECUTION_ENVIRONMENT */
struct S110 {
	int id;
};

/* Struct for type ET_LACE_AST_FACTORY */
struct S111 {
	int id;
	T0* a9; /* error_handler */
	T0* a10; /* ast_factory */
};

/* Struct for type DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S112 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* position */
	T6 a12; /* capacity */
	T6 a15; /* slots_position */
	T0* a17; /* equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type YY_FILE_BUFFER */
struct S113 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T0* a9; /* file */
	T1 a11; /* end_of_file */
	T6 a12; /* capacity */
	T1 a13; /* interactive */
};

/* Struct for type YY_BUFFER */
struct S114 {
	int id;
	T0* a1; /* content */
	T6 a2; /* index */
	T6 a3; /* line */
	T6 a4; /* column */
	T6 a5; /* position */
	T1 a6; /* beginning_of_line */
	T6 a7; /* count */
	T1 a8; /* filled */
	T6 a11; /* capacity */
};

/* Struct for type DS_HASH_SET [ET_IDENTIFIER] */
struct S115 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T6 a20; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type SPECIAL [ANY] */
struct S117 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ANY] */
struct S118 {
	int id;
};

/* Struct for type ET_IDENTIFIER */
struct S119 {
	int id;
	T6 a1; /* seed */
	T6 a2; /* index */
	T2 a4; /* status_code */
	T6 a12; /* compressed_position */
	T6 a14; /* hash_code */
	T0* a15; /* name */
};

/* Struct for type SPECIAL [ET_IDENTIFIER] */
struct S120 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IDENTIFIER] */
struct S121 {
	int id;
};

/* Struct for type ET_LACE_CLUSTERS */
struct S122 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_LACE_CLUSTER */
struct S123 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T1 a3; /* is_relative */
	T1 a4; /* is_abstract */
	T1 a5; /* is_recursive */
	T1 a6; /* is_read_only */
	T0* a7; /* exclude */
	T0* a8; /* subclusters */
	T1 a9; /* overridden_constraint_enabled */
	T0* a12; /* parent */
	T1 a18; /* is_override */
	T0* a19; /* provider_constraint */
	T0* a20; /* dependant_constraint */
	T1 a34; /* is_implicit */
};

/* Struct for type ET_LACE_EXCLUDE */
struct S124 {
	int id;
	T0* a1; /* identifiers */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLIES */
struct S125 {
	int id;
	T0* a1; /* assemblies */
};

/* Struct for type ET_LACE_DOTNET_ASSEMBLY */
struct S126 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* pathname_id */
	T0* a3; /* classname_prefix_id */
};

/* Struct for type SPECIAL [ET_LACE_CLUSTERS] */
struct S127 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S128 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS] */
struct S129 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_CLUSTER] */
struct S130 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_LACE_EXCLUDE] */
struct S131 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER] */
struct S132 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE] */
struct S133 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES] */
struct S134 {
	int id;
};

/* Struct for type SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S135 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY] */
struct S136 {
	int id;
};

/* Struct for type ET_LACE_DOTNET_GAC_ASSEMBLY */
struct S137 {
	int id;
	T0* a1; /* name_id */
	T0* a2; /* assembly_name_id */
	T0* a3; /* classname_prefix_id */
	T0* a4; /* assembly_version_id */
	T0* a5; /* assembly_culture_id */
	T0* a6; /* assembly_public_key_token_id */
};

/* Struct for type KL_PLATFORM */
struct S138 {
	int id;
};

/* Struct for type KL_INTEGER_ROUTINES */
struct S139 {
	int id;
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S140 {
	int id;
	T6 a3; /* position */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME] */
struct S141 {
	int id;
	T6 a2; /* capacity */
	T6 a4; /* found_position */
	T0* a6; /* key_equality_tester */
	T0* a7; /* internal_keys */
	T6 a8; /* position */
	T6 a9; /* last_position */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T0* a15; /* equality_tester */
	T6 a16; /* modulus */
	T6 a17; /* clashes_previous_position */
	T0* a20; /* item_storage */
	T0* a23; /* clashes */
	T0* a24; /* slots */
	T0* a25; /* key_storage */
	T6 a26; /* free_slot */
	T0* a28; /* internal_cursor */
	T0* a30; /* special_item_routines */
	T0* a31; /* special_key_routines */
};

/* Struct for type ET_DYNAMIC_NULL_TYPE_SET_BUILDER */
struct S142 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a3; /* current_system */
	T1 a4; /* catcall_mode */
	T1 a5; /* no_debug */
	T1 a6; /* no_assertion */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_TYPE] */
struct S143 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE */
struct S144 {
	int id;
	T0* a2; /* base_type */
	T1 a3; /* is_alive */
	T0* a7; /* queries */
	T6 a8; /* id */
	T0* a11; /* base_class */
	T0* a14; /* procedures */
	T0* a16; /* first_type */
	T0* a17; /* other_types */
	T0* a18; /* next_type */
	T1 a23; /* has_static */
	T0* a24; /* query_calls */
	T0* a25; /* procedure_calls */
};

/* Struct for type ET_QUERY_LIST */
struct S146 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_PROCEDURE_LIST */
struct S148 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
	T6 a4; /* declared_count */
};

/* Struct for type ET_DYNAMIC_FEATURE */
struct S150 {
	int id;
	T0* a1; /* static_feature */
	T0* a2; /* dynamic_type_sets */
	T6 a4; /* id */
	T0* a5; /* target_type */
	T0* a6; /* result_type_set */
	T1 a7; /* is_generated */
	T6 a11; /* builtin_code */
	T1 a13; /* is_creation */
	T0* a14; /* first_precursor */
	T1 a15; /* is_regular */
	T0* a16; /* other_precursors */
	T1 a41; /* is_built */
	T1 a46; /* is_current_type_needed */
	T1 a47; /* is_static */
};

/* Struct for type DT_SHARED_SYSTEM_CLOCK */
struct S151 {
	int id;
};

/* Struct for type DT_DATE_TIME */
struct S152 {
	int id;
	T6 a12; /* time_storage */
	T6 a16; /* date_storage */
};

/* Struct for type DT_SYSTEM_CLOCK */
struct S153 {
	int id;
	T6 a2; /* second */
	T6 a4; /* year */
	T6 a5; /* month */
	T6 a6; /* day */
	T6 a7; /* hour */
	T6 a8; /* minute */
	T6 a9; /* millisecond */
	T1 a10; /* is_utc */
	T0* a21; /* internal_item */
};

/* Struct for type ET_TOKEN_CONSTANTS */
struct S157 {
	int id;
};

/* Struct for type ET_EIFFEL_PARSER */
struct S158 {
	int id;
	T0* a1; /* counters */
	T0* a3; /* last_formal_arguments_stack */
	T0* a5; /* last_local_variables_stack */
	T0* a7; /* last_keywords */
	T0* a9; /* last_symbols */
	T0* a11; /* assertions */
	T0* a13; /* queries */
	T0* a15; /* procedures */
	T0* a17; /* constraints */
	T0* a19; /* providers */
	T0* a21; /* universe */
	T0* a22; /* ast_factory */
	T0* a23; /* error_handler */
	T1 a24; /* use_assign_keyword */
	T1 a25; /* use_attribute_keyword */
	T1 a26; /* use_convert_keyword */
	T1 a27; /* use_create_keyword */
	T1 a28; /* use_recast_keyword */
	T1 a29; /* use_reference_keyword */
	T1 a30; /* use_void_keyword */
	T1 a31; /* providers_enabled */
	T1 a32; /* overriding_class_added */
	T1 a33; /* is_null */
	T6 a35; /* last_text_count */
	T6 a36; /* last_literal_start */
	T0* a37; /* filename */
	T0* a38; /* current_class */
	T0* a40; /* yyss */
	T0* a48; /* input_buffer */
	T0* a49; /* yytranslate */
	T0* a51; /* yyr1 */
	T0* a53; /* yytypes1 */
	T0* a55; /* yytypes2 */
	T0* a57; /* yydefact */
	T0* a59; /* yydefgoto */
	T0* a61; /* yypact */
	T0* a63; /* yypgoto */
	T0* a65; /* yytable */
	T0* a67; /* yycheck */
	T6 a69; /* time_stamp */
	T0* a70; /* cluster */
	T6 a72; /* yy_start_state */
	T6 a73; /* yy_line */
	T6 a74; /* yy_column */
	T6 a75; /* yy_position */
	T6 a76; /* line */
	T6 a77; /* column */
	T6 a78; /* position */
	T0* a80; /* yy_state_stack */
	T6 a81; /* yy_end */
	T6 a82; /* yy_start */
	T6 a83; /* yy_parsing_status */
	T6 a85; /* yy_suspended_yystacksize */
	T6 a86; /* yy_suspended_yystate */
	T6 a87; /* yy_suspended_yyn */
	T6 a88; /* yy_suspended_yychar1 */
	T6 a89; /* yy_suspended_index */
	T6 a90; /* yy_suspended_yyss_top */
	T6 a91; /* yy_suspended_yy_goto */
	T6 a93; /* error_count */
	T1 a94; /* yy_lookahead_needed */
	T6 a95; /* yyerrstatus */
	T6 a96; /* yyssp */
	T6 a104; /* last_token */
	T0* a113; /* last_class */
	T0* a114; /* last_clients */
	T0* a115; /* last_export_clients */
	T0* a116; /* last_feature_clause */
	T6 a117; /* last_literal_end */
	T0* a118; /* verbatim_marker */
	T0* a119; /* verbatim_open_white_characters */
	T0* a120; /* verbatim_close_white_characters */
	T1 a121; /* yy_more_flag */
	T6 a122; /* yy_more_len */
	T6 a123; /* yy_last_accepting_state */
	T6 a124; /* yy_last_accepting_cpos */
	T1 a125; /* yy_rejected */
	T6 a126; /* yy_state_count */
	T6 a127; /* yy_full_match */
	T6 a128; /* yy_lp */
	T6 a129; /* yy_looking_for_trail_begin */
	T6 a130; /* yy_full_lp */
	T6 a131; /* yy_full_state */
	T0* a132; /* yy_nxt */
	T0* a134; /* yy_chk */
	T0* a136; /* yy_base */
	T0* a138; /* yy_def */
	T0* a140; /* yy_ec */
	T0* a142; /* yy_meta */
	T0* a144; /* yy_accept */
	T0* a146; /* yy_acclist */
	T0* a148; /* yy_content */
	T0* a149; /* yy_content_area */
	T6 a150; /* yyvsp1 */
	T6 a151; /* yyvsp2 */
	T6 a152; /* yyvsp3 */
	T6 a153; /* yyvsp4 */
	T6 a154; /* yyvsp5 */
	T6 a155; /* yyvsp6 */
	T6 a156; /* yyvsp7 */
	T6 a157; /* yyvsp8 */
	T6 a158; /* yyvsp9 */
	T6 a159; /* yyvsp10 */
	T6 a160; /* yyvsp11 */
	T6 a161; /* yyvsp12 */
	T6 a162; /* yyvsp13 */
	T6 a163; /* yyvsp14 */
	T6 a164; /* yyvsp15 */
	T6 a165; /* yyvsp16 */
	T6 a166; /* yyvsp17 */
	T6 a167; /* yyvsp18 */
	T6 a168; /* yyvsp19 */
	T6 a169; /* yyvsp20 */
	T6 a170; /* yyvsp21 */
	T6 a171; /* yyvsp22 */
	T6 a172; /* yyvsp23 */
	T6 a173; /* yyvsp24 */
	T6 a174; /* yyvsp25 */
	T6 a175; /* yyvsp26 */
	T6 a176; /* yyvsp27 */
	T6 a177; /* yyvsp28 */
	T6 a178; /* yyvsp29 */
	T6 a179; /* yyvsp30 */
	T6 a180; /* yyvsp31 */
	T6 a181; /* yyvsp32 */
	T6 a182; /* yyvsp33 */
	T6 a183; /* yyvsp34 */
	T6 a184; /* yyvsp35 */
	T6 a185; /* yyvsp36 */
	T6 a186; /* yyvsp37 */
	T6 a187; /* yyvsp38 */
	T6 a188; /* yyvsp39 */
	T6 a189; /* yyvsp40 */
	T6 a190; /* yyvsp41 */
	T6 a191; /* yyvsp42 */
	T6 a192; /* yyvsp43 */
	T6 a193; /* yyvsp44 */
	T6 a194; /* yyvsp45 */
	T6 a195; /* yyvsp46 */
	T6 a196; /* yyvsp47 */
	T6 a197; /* yyvsp48 */
	T6 a198; /* yyvsp49 */
	T6 a199; /* yyvsp50 */
	T6 a200; /* yyvsp51 */
	T6 a201; /* yyvsp52 */
	T6 a202; /* yyvsp53 */
	T6 a203; /* yyvsp54 */
	T6 a204; /* yyvsp55 */
	T6 a205; /* yyvsp56 */
	T6 a206; /* yyvsp57 */
	T6 a207; /* yyvsp58 */
	T6 a208; /* yyvsp59 */
	T6 a209; /* yyvsp60 */
	T6 a210; /* yyvsp61 */
	T6 a211; /* yyvsp62 */
	T6 a212; /* yyvsp63 */
	T6 a213; /* yyvsp64 */
	T6 a214; /* yyvsp65 */
	T6 a215; /* yyvsp66 */
	T6 a216; /* yyvsp67 */
	T6 a217; /* yyvsp68 */
	T6 a218; /* yyvsp69 */
	T6 a219; /* yyvsp70 */
	T6 a220; /* yyvsp71 */
	T6 a221; /* yyvsp72 */
	T6 a222; /* yyvsp73 */
	T6 a223; /* yyvsp74 */
	T6 a224; /* yyvsp75 */
	T6 a225; /* yyvsp76 */
	T6 a226; /* yyvsp77 */
	T6 a227; /* yyvsp78 */
	T6 a228; /* yyvsp79 */
	T6 a229; /* yyvsp80 */
	T6 a230; /* yyvsp81 */
	T6 a231; /* yyvsp82 */
	T6 a232; /* yyvsp83 */
	T6 a233; /* yyvsp84 */
	T6 a234; /* yyvsp85 */
	T6 a235; /* yyvsp86 */
	T6 a236; /* yyvsp87 */
	T6 a237; /* yyvsp88 */
	T6 a238; /* yyvsp89 */
	T6 a239; /* yyvsp90 */
	T6 a240; /* yyvsp91 */
	T6 a241; /* yyvsp92 */
	T6 a242; /* yyvsp93 */
	T6 a243; /* yyvsp94 */
	T6 a244; /* yyvsp95 */
	T6 a245; /* yyvsp96 */
	T6 a246; /* yyvsp97 */
	T6 a247; /* yyvsp98 */
	T6 a248; /* yyvsp99 */
	T6 a249; /* yyvsp100 */
	T6 a250; /* yyvsp101 */
	T6 a251; /* yyvsp102 */
	T6 a252; /* yyvsp103 */
	T6 a253; /* yyvsp104 */
	T6 a254; /* yyvsp105 */
	T6 a255; /* yyvsp106 */
	T6 a256; /* yyvsp107 */
	T6 a257; /* yyvsp108 */
	T6 a258; /* yyvsp109 */
	T6 a259; /* yyvsp110 */
	T6 a260; /* yyvsp111 */
	T6 a261; /* yyvsp112 */
	T6 a262; /* yyvsp113 */
	T6 a263; /* yyvsp114 */
	T6 a264; /* yyvsp115 */
	T6 a265; /* yyvsp116 */
	T6 a284; /* yyvsc1 */
	T0* a285; /* yyvs1 */
	T0* a286; /* yyspecial_routines1 */
	T0* a288; /* last_any_value */
	T6 a289; /* yyvsc2 */
	T0* a290; /* yyvs2 */
	T0* a291; /* yyspecial_routines2 */
	T0* a292; /* last_et_keyword_value */
	T6 a293; /* yyvsc3 */
	T0* a294; /* yyvs3 */
	T0* a295; /* yyspecial_routines3 */
	T0* a296; /* last_et_agent_keyword_value */
	T6 a297; /* yyvsc4 */
	T0* a298; /* yyvs4 */
	T0* a299; /* yyspecial_routines4 */
	T0* a300; /* last_et_precursor_keyword_value */
	T6 a301; /* yyvsc5 */
	T0* a302; /* yyvs5 */
	T0* a303; /* yyspecial_routines5 */
	T0* a304; /* last_et_symbol_value */
	T6 a305; /* yyvsc6 */
	T0* a306; /* yyvs6 */
	T0* a307; /* yyspecial_routines6 */
	T0* a308; /* last_et_position_value */
	T6 a309; /* yyvsc7 */
	T0* a310; /* yyvs7 */
	T0* a311; /* yyspecial_routines7 */
	T0* a312; /* last_et_bit_constant_value */
	T6 a313; /* yyvsc8 */
	T0* a314; /* yyvs8 */
	T0* a315; /* yyspecial_routines8 */
	T0* a316; /* last_et_boolean_constant_value */
	T6 a317; /* yyvsc9 */
	T0* a318; /* yyvs9 */
	T0* a319; /* yyspecial_routines9 */
	T0* a320; /* last_et_break_value */
	T6 a321; /* yyvsc10 */
	T0* a322; /* yyvs10 */
	T0* a323; /* yyspecial_routines10 */
	T0* a324; /* last_et_character_constant_value */
	T6 a325; /* yyvsc11 */
	T0* a326; /* yyvs11 */
	T0* a327; /* yyspecial_routines11 */
	T0* a328; /* last_et_current_value */
	T6 a329; /* yyvsc12 */
	T0* a330; /* yyvs12 */
	T0* a331; /* yyspecial_routines12 */
	T0* a332; /* last_et_free_operator_value */
	T6 a333; /* yyvsc13 */
	T0* a334; /* yyvs13 */
	T0* a335; /* yyspecial_routines13 */
	T0* a336; /* last_et_identifier_value */
	T6 a337; /* yyvsc14 */
	T0* a338; /* yyvs14 */
	T0* a339; /* yyspecial_routines14 */
	T0* a340; /* last_et_integer_constant_value */
	T6 a341; /* yyvsc15 */
	T0* a342; /* yyvs15 */
	T0* a343; /* yyspecial_routines15 */
	T0* a344; /* last_et_keyword_operator_value */
	T6 a345; /* yyvsc16 */
	T0* a346; /* yyvs16 */
	T0* a347; /* yyspecial_routines16 */
	T0* a348; /* last_et_manifest_string_value */
	T6 a349; /* yyvsc17 */
	T0* a350; /* yyvs17 */
	T0* a351; /* yyspecial_routines17 */
	T0* a352; /* last_et_real_constant_value */
	T6 a353; /* yyvsc18 */
	T0* a354; /* yyvs18 */
	T0* a355; /* yyspecial_routines18 */
	T0* a356; /* last_et_result_value */
	T6 a357; /* yyvsc19 */
	T0* a358; /* yyvs19 */
	T0* a359; /* yyspecial_routines19 */
	T0* a360; /* last_et_retry_instruction_value */
	T6 a361; /* yyvsc20 */
	T0* a362; /* yyvs20 */
	T0* a363; /* yyspecial_routines20 */
	T0* a364; /* last_et_symbol_operator_value */
	T6 a365; /* yyvsc21 */
	T0* a366; /* yyvs21 */
	T0* a367; /* yyspecial_routines21 */
	T0* a368; /* last_et_void_value */
	T6 a369; /* yyvsc22 */
	T0* a370; /* yyvs22 */
	T0* a371; /* yyspecial_routines22 */
	T0* a372; /* last_et_semicolon_symbol_value */
	T6 a373; /* yyvsc23 */
	T0* a374; /* yyvs23 */
	T0* a375; /* yyspecial_routines23 */
	T0* a376; /* last_et_bracket_symbol_value */
	T6 a377; /* yyvsc24 */
	T0* a378; /* yyvs24 */
	T0* a379; /* yyspecial_routines24 */
	T0* a380; /* last_et_question_mark_symbol_value */
	T6 a382; /* last_break_end */
	T6 a383; /* last_comment_end */
	T6 a385; /* ms_column */
	T6 a386; /* ms_line */
	T6 a391; /* break_kind */
	T0* a552; /* yyvs42 */
	T0* a553; /* yyvs78 */
	T0* a554; /* yyvs97 */
	T0* a555; /* yyvs101 */
	T0* a556; /* yyvs56 */
	T0* a557; /* yyvs53 */
	T0* a558; /* yyvs67 */
	T0* a559; /* yyvs86 */
	T6 a560; /* yyvsc78 */
	T0* a561; /* yyspecial_routines78 */
	T0* a562; /* yyvs79 */
	T0* a565; /* yyvs82 */
	T6 a566; /* yyvsc79 */
	T0* a567; /* yyspecial_routines79 */
	T0* a568; /* yyvs80 */
	T6 a569; /* yyvsc82 */
	T0* a570; /* yyspecial_routines82 */
	T0* a571; /* yyvs81 */
	T6 a572; /* yyvsc80 */
	T0* a573; /* yyspecial_routines80 */
	T0* a574; /* yyvs54 */
	T0* a575; /* yyvs96 */
	T6 a576; /* yyvsc81 */
	T0* a577; /* yyspecial_routines81 */
	T6 a579; /* yyvsc42 */
	T0* a580; /* yyspecial_routines42 */
	T6 a581; /* yyvsc76 */
	T0* a582; /* yyvs76 */
	T0* a583; /* yyspecial_routines76 */
	T0* a584; /* yyvs74 */
	T0* a586; /* yyvs75 */
	T6 a587; /* yyvsc75 */
	T0* a588; /* yyspecial_routines75 */
	T6 a589; /* yyvsc74 */
	T0* a590; /* yyspecial_routines74 */
	T0* a591; /* yyvs50 */
	T0* a593; /* yyvs49 */
	T6 a594; /* yyvsc49 */
	T0* a595; /* yyspecial_routines49 */
	T0* a596; /* yyvs70 */
	T0* a597; /* yyvs48 */
	T6 a599; /* yyvsc50 */
	T0* a600; /* yyspecial_routines50 */
	T0* a601; /* yyvs88 */
	T6 a603; /* yyvsc48 */
	T0* a604; /* yyspecial_routines48 */
	T0* a605; /* yyvs47 */
	T6 a606; /* yyvsc47 */
	T0* a607; /* yyspecial_routines47 */
	T6 a608; /* yyvsc97 */
	T0* a609; /* yyspecial_routines97 */
	T6 a610; /* yyvsc101 */
	T0* a611; /* yyspecial_routines101 */
	T0* a612; /* yyvs27 */
	T6 a614; /* yyvsc99 */
	T0* a615; /* yyvs99 */
	T0* a616; /* yyspecial_routines99 */
	T0* a617; /* yyvs107 */
	T0* a618; /* yyvs61 */
	T0* a619; /* yyvs87 */
	T0* a620; /* yyvs100 */
	T6 a621; /* yyvsc100 */
	T0* a622; /* yyspecial_routines100 */
	T6 a623; /* yyvsc107 */
	T0* a624; /* yyspecial_routines107 */
	T0* a625; /* yyvs106 */
	T0* a626; /* yyvs69 */
	T0* a627; /* yyvs64 */
	T6 a628; /* yyvsc106 */
	T0* a629; /* yyspecial_routines106 */
	T6 a630; /* yyvsc61 */
	T0* a631; /* yyspecial_routines61 */
	T0* a632; /* yyvs60 */
	T0* a633; /* yyvs44 */
	T6 a634; /* yyvsc60 */
	T0* a635; /* yyspecial_routines60 */
	T0* a636; /* yyvs68 */
	T6 a637; /* yyvsc68 */
	T0* a638; /* yyspecial_routines68 */
	T6 a639; /* yyvsc44 */
	T0* a640; /* yyspecial_routines44 */
	T0* a641; /* yyvs43 */
	T6 a642; /* yyvsc43 */
	T0* a643; /* yyspecial_routines43 */
	T6 a644; /* yyvsc87 */
	T0* a645; /* yyspecial_routines87 */
	T6 a646; /* yyvsc70 */
	T0* a647; /* yyspecial_routines70 */
	T6 a648; /* yyvsc56 */
	T0* a649; /* yyspecial_routines56 */
	T0* a650; /* yyvs55 */
	T6 a651; /* yyvsc55 */
	T0* a652; /* yyspecial_routines55 */
	T6 a653; /* yyvsc53 */
	T0* a654; /* yyspecial_routines53 */
	T0* a655; /* yyvs51 */
	T0* a656; /* yyvs52 */
	T6 a657; /* yyvsc52 */
	T0* a658; /* yyspecial_routines52 */
	T0* a659; /* yyvs112 */
	T6 a660; /* yyvsc51 */
	T0* a661; /* yyspecial_routines51 */
	T6 a662; /* yyvsc112 */
	T0* a663; /* yyspecial_routines112 */
	T0* a664; /* yyvs110 */
	T0* a665; /* yyvs111 */
	T6 a666; /* yyvsc111 */
	T0* a667; /* yyspecial_routines111 */
	T6 a668; /* yyvsc67 */
	T0* a669; /* yyspecial_routines67 */
	T0* a670; /* yyvs66 */
	T6 a671; /* yyvsc66 */
	T0* a672; /* yyspecial_routines66 */
	T0* a673; /* yyvs105 */
	T0* a675; /* yyvs104 */
	T0* a677; /* yyvs33 */
	T6 a678; /* yyvsc105 */
	T0* a679; /* yyspecial_routines105 */
	T0* a680; /* yyvs46 */
	T0* a682; /* yyvs103 */
	T0* a683; /* yyvs91 */
	T0* a684; /* yyvs45 */
	T0* a685; /* yyvs102 */
	T0* a686; /* yyvs73 */
	T0* a687; /* yyvs65 */
	T6 a689; /* yyvsc104 */
	T0* a690; /* yyspecial_routines104 */
	T6 a692; /* yyvsc65 */
	T0* a693; /* yyspecial_routines65 */
	T6 a694; /* yyvsc33 */
	T0* a695; /* yyspecial_routines33 */
	T6 a696; /* yyvsc69 */
	T0* a697; /* yyspecial_routines69 */
	T6 a700; /* yyvsc64 */
	T0* a701; /* yyspecial_routines64 */
	T0* a702; /* yyvs32 */
	T6 a703; /* yyvsc32 */
	T0* a704; /* yyspecial_routines32 */
	T6 a707; /* yyvsc73 */
	T0* a708; /* yyspecial_routines73 */
	T0* a709; /* yyvs72 */
	T0* a710; /* yyvs71 */
	T6 a712; /* yyvsc71 */
	T0* a713; /* yyspecial_routines71 */
	T6 a714; /* yyvsc72 */
	T0* a715; /* yyspecial_routines72 */
	T6 a716; /* yyvsc91 */
	T0* a717; /* yyspecial_routines91 */
	T0* a719; /* yyvs90 */
	T0* a720; /* yyvs89 */
	T6 a721; /* yyvsc89 */
	T0* a722; /* yyspecial_routines89 */
	T6 a723; /* yyvsc90 */
	T0* a724; /* yyspecial_routines90 */
	T0* a725; /* yyvs62 */
	T6 a726; /* yyvsc103 */
	T0* a727; /* yyspecial_routines103 */
	T6 a729; /* yyvsc102 */
	T0* a730; /* yyspecial_routines102 */
	T6 a732; /* yyvsc86 */
	T0* a733; /* yyspecial_routines86 */
	T6 a735; /* yyvsc92 */
	T0* a736; /* yyvs92 */
	T0* a737; /* yyspecial_routines92 */
	T6 a739; /* yyvsc113 */
	T0* a740; /* yyvs113 */
	T0* a741; /* yyspecial_routines113 */
	T6 a742; /* yyvsc45 */
	T0* a743; /* yyspecial_routines45 */
	T6 a745; /* yyvsc110 */
	T0* a746; /* yyspecial_routines110 */
	T6 a747; /* yyvsc27 */
	T0* a748; /* yyspecial_routines27 */
	T0* a749; /* yyvs26 */
	T6 a750; /* yyvsc26 */
	T0* a751; /* yyspecial_routines26 */
	T6 a752; /* yyvsc88 */
	T0* a753; /* yyspecial_routines88 */
	T0* a754; /* yyvs85 */
	T0* a755; /* yyvs37 */
	T6 a756; /* yyvsc85 */
	T0* a757; /* yyspecial_routines85 */
	T0* a758; /* yyvs35 */
	T0* a759; /* yyvs116 */
	T0* a760; /* yyvs77 */
	T0* a761; /* yyvs84 */
	T0* a762; /* yyvs57 */
	T0* a764; /* yyvs25 */
	T6 a765; /* yyvsc54 */
	T0* a766; /* yyspecial_routines54 */
	T6 a767; /* yyvsc77 */
	T0* a768; /* yyspecial_routines77 */
	T0* a769; /* yyvs59 */
	T0* a770; /* yyvs58 */
	T6 a771; /* yyvsc59 */
	T0* a772; /* yyspecial_routines59 */
	T6 a773; /* yyvsc58 */
	T0* a774; /* yyspecial_routines58 */
	T0* a775; /* yyvs115 */
	T6 a776; /* yyvsc84 */
	T0* a777; /* yyspecial_routines84 */
	T6 a778; /* yyvsc115 */
	T0* a779; /* yyspecial_routines115 */
	T0* a780; /* yyvs114 */
	T0* a781; /* yyvs41 */
	T6 a782; /* yyvsc114 */
	T0* a783; /* yyspecial_routines114 */
	T6 a784; /* yyvsc41 */
	T0* a785; /* yyspecial_routines41 */
	T0* a786; /* yyvs38 */
	T0* a787; /* yyvs40 */
	T6 a788; /* yyvsc40 */
	T0* a789; /* yyspecial_routines40 */
	T0* a790; /* yyvs39 */
	T6 a791; /* yyvsc38 */
	T0* a792; /* yyspecial_routines38 */
	T6 a793; /* yyvsc39 */
	T0* a794; /* yyspecial_routines39 */
	T0* a795; /* yyvs108 */
	T0* a796; /* yyvs95 */
	T6 a797; /* yyvsc57 */
	T0* a798; /* yyspecial_routines57 */
	T6 a799; /* yyvsc95 */
	T0* a800; /* yyspecial_routines95 */
	T0* a801; /* yyvs94 */
	T6 a802; /* yyvsc94 */
	T0* a803; /* yyspecial_routines94 */
	T6 a806; /* yyvsc62 */
	T0* a807; /* yyspecial_routines62 */
	T6 a808; /* yyvsc37 */
	T0* a809; /* yyspecial_routines37 */
	T6 a810; /* yyvsc108 */
	T0* a811; /* yyspecial_routines108 */
	T0* a812; /* yyvs98 */
	T6 a813; /* yyvsc25 */
	T0* a814; /* yyspecial_routines25 */
	T0* a815; /* yyvs63 */
	T6 a816; /* yyvsc63 */
	T0* a817; /* yyspecial_routines63 */
	T6 a819; /* yyvsc116 */
	T0* a820; /* yyspecial_routines116 */
	T0* a823; /* yyvs36 */
	T0* a824; /* yyvs83 */
	T0* a825; /* yyvs93 */
	T0* a826; /* yyvs109 */
	T0* a827; /* yyvs34 */
	T6 a828; /* yyvsc35 */
	T0* a829; /* yyspecial_routines35 */
	T6 a830; /* yyvsc34 */
	T0* a831; /* yyspecial_routines34 */
	T6 a832; /* yyvsc98 */
	T0* a833; /* yyspecial_routines98 */
	T6 a834; /* yyvsc93 */
	T0* a835; /* yyspecial_routines93 */
	T6 a836; /* yyvsc96 */
	T0* a837; /* yyspecial_routines96 */
	T6 a838; /* yyvsc109 */
	T0* a839; /* yyspecial_routines109 */
	T6 a840; /* yyvsc46 */
	T0* a841; /* yyspecial_routines46 */
	T0* a842; /* yyvs30 */
	T6 a843; /* yyvsc36 */
	T0* a844; /* yyspecial_routines36 */
	T0* a845; /* yyvs31 */
	T6 a847; /* yyvsc83 */
	T0* a848; /* yyspecial_routines83 */
	T6 a849; /* yyvsc31 */
	T0* a850; /* yyspecial_routines31 */
	T6 a851; /* yyvsc30 */
	T0* a852; /* yyspecial_routines30 */
	T0* a853; /* yyvs28 */
	T0* a854; /* yyvs29 */
	T6 a855; /* yyvsc29 */
	T0* a856; /* yyspecial_routines29 */
	T6 a857; /* yyvsc28 */
	T0* a858; /* yyspecial_routines28 */
};

/* Struct for type ET_CLASS_TYPE */
struct S159 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* eiffel_class */
};

/* Struct for type ET_ACTUAL_PARAMETER_LIST */
struct S160 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_GENERIC_CLASS_TYPE */
struct S161 {
	int id;
	T0* a3; /* eiffel_class */
	T0* a4; /* actual_parameters */
	T0* a7; /* type_mark */
	T0* a8; /* name */
	T0* a9; /* unresolved_type */
};

/* Struct for type ET_EXTERNAL_FUNCTION */
struct S163 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a6; /* extended_name */
	T0* a7; /* declared_type */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a11; /* clients */
	T0* a12; /* implementation_feature */
	T6 a13; /* builtin_code */
	T0* a14; /* is_keyword */
	T0* a15; /* assigner */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* alias_clause */
	T0* a20; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a33; /* semicolon */
	T0* a34; /* feature_clause */
	T0* a35; /* other_seeds */
	T6 a36; /* id */
	T6 a37; /* version */
	T0* a38; /* frozen_keyword */
	T0* a39; /* first_precursor */
	T0* a40; /* other_precursors */
	T0* a41; /* synonym */
	T1 a42; /* assertions_checked */
	T1 a43; /* has_assertions_error */
};

/* Struct for type ET_KEYWORD */
struct S166 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
};

/* Struct for type ET_DYNAMIC_TYPE_SET_LIST */
struct S168 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_TYPE_CHECKER */
struct S169 {
	int id;
	T0* a1; /* current_type */
	T0* a2; /* current_class_impl */
	T0* a3; /* current_feature_impl */
	T0* a5; /* universe */
	T1 a7; /* has_fatal_error */
};

/* Struct for type KL_NULL_TEXT_OUTPUT_STREAM */
struct S170 {
	int id;
	T0* a1; /* name */
};

/* Struct for type KL_STRING_OUTPUT_STREAM */
struct S171 {
	int id;
	T0* a1; /* string */
};

/* Struct for type DS_ARRAYED_LIST [ET_IDENTIFIER] */
struct S172 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_DYNAMIC_TYPE_LIST */
struct S173 {
	int id;
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type DS_ARRAYED_STACK [ET_EXPRESSION] */
struct S174 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_EXPRESSION] */
struct S175 {
	int id;
	T6 a1; /* capacity */
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [INTEGER] */
struct S176 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER] */
struct S177 {
	int id;
	T6 a5; /* position */
	T0* a7; /* internal_cursor */
	T0* a12; /* item_storage */
	T6 a13; /* last_position */
	T6 a14; /* capacity */
	T6 a17; /* slots_position */
	T6 a19; /* count */
	T6 a20; /* free_slot */
	T6 a21; /* modulus */
	T6 a22; /* clashes_previous_position */
	T0* a23; /* key_equality_tester */
	T0* a26; /* equality_tester */
	T0* a27; /* internal_keys */
	T6 a28; /* found_position */
	T0* a31; /* clashes */
	T0* a32; /* slots */
	T0* a33; /* key_storage */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S178 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* storage */
	T0* a9; /* special_routines */
	T6 a10; /* capacity */
	T6 a13; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_AGENT] */
struct S180 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type ET_CURRENT */
struct S182 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a9; /* index */
};

/* Struct for type ET_ACTUAL_ARGUMENT_LIST */
struct S183 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a6; /* left_symbol */
	T0* a8; /* right_symbol */
};

/* Struct for type ET_CALL_INSTRUCTION */
struct S184 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
};

/* Struct for type ET_CALL_EXPRESSION */
struct S186 {
	int id;
	T0* a1; /* target */
	T0* a2; /* qualified_name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TYPE] */
struct S187 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE] */
struct S188 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T6 a17; /* count */
	T0* a18; /* special_item_routines */
	T0* a19; /* clashes */
	T0* a21; /* slots */
	T6 a22; /* found_position */
	T6 a30; /* slots_position */
	T6 a32; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_HASH_SET [ET_FEATURE] */
struct S189 {
	int id;
	T6 a2; /* position */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T0* a9; /* internal_cursor */
	T6 a11; /* count */
	T6 a13; /* slots_position */
	T6 a14; /* clashes_previous_position */
	T0* a19; /* special_item_routines */
	T0* a20; /* item_storage */
	T0* a21; /* clashes */
	T0* a23; /* slots */
	T6 a24; /* found_position */
	T0* a26; /* equality_tester */
};

/* Struct for type DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE] */
struct S190 {
	int id;
	T0* a4; /* internal_cursor */
	T0* a11; /* key_storage */
	T0* a12; /* item_storage */
	T6 a13; /* count */
	T6 a14; /* last_position */
	T6 a15; /* free_slot */
	T6 a17; /* position */
	T6 a18; /* capacity */
	T6 a21; /* slots_position */
	T0* a23; /* equality_tester */
	T0* a24; /* key_equality_tester */
	T0* a25; /* internal_keys */
	T6 a26; /* found_position */
	T0* a27; /* clashes */
	T6 a28; /* modulus */
	T0* a29; /* slots */
	T6 a35; /* clashes_previous_position */
	T0* a39; /* special_item_routines */
	T0* a40; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE] */
struct S191 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_HASH_SET [STRING] */
struct S192 {
	int id;
	T0* a3; /* internal_cursor */
	T0* a8; /* item_storage */
	T6 a9; /* capacity */
	T6 a10; /* modulus */
	T6 a12; /* last_position */
	T6 a13; /* free_slot */
	T6 a15; /* position */
	T0* a17; /* equality_tester */
	T6 a18; /* count */
	T6 a21; /* slots_position */
	T0* a25; /* special_item_routines */
	T0* a26; /* clashes */
	T0* a28; /* slots */
	T6 a29; /* found_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type KL_STRING_EQUALITY_TESTER */
struct S193 {
	int id;
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, STRING] */
struct S194 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T6 a19; /* count */
	T6 a20; /* last_position */
	T6 a21; /* free_slot */
	T6 a22; /* capacity */
	T6 a25; /* slots_position */
	T6 a29; /* modulus */
	T6 a30; /* clashes_previous_position */
	T0* a31; /* equality_tester */
	T6 a36; /* found_position */
	T0* a37; /* clashes */
	T0* a38; /* slots */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type RX_PCRE_REGULAR_EXPRESSION */
struct S195 {
	int id;
	T0* a3; /* subject */
	T6 a4; /* subject_end */
	T6 a5; /* subject_start */
	T0* a6; /* offset_vector */
	T6 a8; /* offset_vector_count */
	T6 a9; /* brastart_capacity */
	T0* a10; /* brastart_vector */
	T6 a11; /* brastart_lower */
	T6 a12; /* brastart_count */
	T6 a13; /* eptr_capacity */
	T0* a14; /* eptr_vector */
	T6 a15; /* eptr_lower */
	T6 a16; /* eptr_upper */
	T0* a17; /* byte_code */
	T0* a18; /* pattern */
	T6 a22; /* subexpression_count */
	T6 a23; /* pattern_count */
	T6 a24; /* pattern_position */
	T6 a25; /* code_index */
	T6 a26; /* maxbackrefs */
	T6 a27; /* optchanged */
	T6 a29; /* first_character */
	T6 a30; /* required_character */
	T6 a31; /* regexp_countlits */
	T0* a32; /* start_bits */
	T0* a35; /* error_message */
	T1 a41; /* is_anchored */
	T0* a48; /* character_case_mapping */
	T0* a49; /* word_set */
	T6 a50; /* subject_next_start */
	T6 a51; /* match_count */
	T6 a53; /* error_code */
	T6 a54; /* error_position */
	T1 a65; /* is_startline */
	T1 a68; /* is_caseless */
	T1 a69; /* is_multiline */
	T1 a70; /* is_dotall */
	T1 a71; /* is_extended */
	T1 a72; /* is_empty_allowed */
	T1 a73; /* is_dollar_endonly */
	T1 a74; /* is_bol */
	T1 a75; /* is_eol */
	T1 a76; /* is_greedy */
	T1 a77; /* is_strict */
	T1 a78; /* is_ichanged */
	T6 a144; /* first_matched_index */
	T6 a223; /* eptr */
	T6 a224; /* offset_top */
	T1 a225; /* is_matching_caseless */
	T1 a226; /* is_matching_multiline */
	T1 a227; /* is_matching_dotall */
};

/* Struct for type KL_TEXT_OUTPUT_FILE */
struct S196 {
	int id;
	T6 a3; /* mode */
	T0* a8; /* name */
	T0* a11; /* string_name */
	T14 a15; /* file_pointer */
	T1 a17; /* descriptor_available */
};

/* Struct for type ET_DYNAMIC_TUPLE_TYPE */
struct S197 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* item_type_sets */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a18; /* procedures */
	T0* a20; /* first_type */
	T0* a21; /* other_types */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type UT_TEMPLATE_EXPANDER */
struct S198 {
	int id;
};

/* Struct for type UT_CANNOT_WRITE_TO_FILE_ERROR */
struct S199 {
	int id;
	T0* a1; /* parameters */
};

/* Struct for type ET_DYNAMIC_FEATURE_LIST */
struct S200 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR_LIST */
struct S201 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
};

/* Struct for type ET_DYNAMIC_PRECURSOR */
struct S202 {
	int id;
	T1 a1; /* is_generated */
	T0* a3; /* target_type */
	T0* a4; /* static_feature */
	T0* a6; /* current_feature */
	T6 a7; /* id */
	T1 a8; /* is_regular */
	T1 a9; /* is_static */
	T1 a10; /* is_creation */
	T0* a12; /* result_type_set */
	T0* a14; /* dynamic_type_sets */
	T6 a18; /* builtin_code */
	T0* a19; /* first_precursor */
	T0* a20; /* other_precursors */
	T1 a21; /* is_built */
	T0* a23; /* parent_type */
	T1 a49; /* is_current_type_needed */
};

/* Struct for type ET_DYNAMIC_SPECIAL_TYPE */
struct S203 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* item_type_set */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a18; /* procedures */
	T0* a20; /* first_type */
	T0* a21; /* other_types */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_FUNCTION_TYPE */
struct S204 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* result_type_set */
	T0* a10; /* open_operand_type_sets */
	T0* a11; /* base_type */
	T0* a13; /* base_class */
	T0* a19; /* procedures */
	T0* a21; /* first_type */
	T0* a22; /* other_types */
	T0* a24; /* next_type */
	T1 a26; /* has_static */
	T0* a27; /* query_calls */
	T0* a28; /* procedure_calls */
};

/* Struct for type ET_DYNAMIC_PROCEDURE_TYPE */
struct S205 {
	int id;
	T6 a4; /* id */
	T1 a6; /* is_alive */
	T0* a8; /* queries */
	T0* a9; /* open_operand_type_sets */
	T0* a10; /* base_type */
	T0* a12; /* base_class */
	T0* a18; /* procedures */
	T0* a20; /* first_type */
	T0* a21; /* other_types */
	T0* a23; /* next_type */
	T1 a25; /* has_static */
	T0* a26; /* query_calls */
	T0* a27; /* procedure_calls */
};

/* Struct for type ET_RESULT */
struct S206 {
	int id;
	T2 a1; /* code */
	T0* a3; /* text */
	T6 a4; /* compressed_position */
	T6 a5; /* index */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_QUERY_CALL */
struct S207 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
	T0* a8; /* result_type_set */
};

/* Struct for type ET_FORMAL_ARGUMENT_LIST */
struct S209 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_ARGUMENT */
struct S214 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type DS_QUICK_SORTER [INTEGER] */
struct S215 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL */
struct S217 {
	int id;
	T0* a1; /* target_type_set */
	T0* a2; /* next */
	T0* a3; /* static_call */
	T0* a4; /* current_feature */
	T0* a6; /* current_type */
};

/* Struct for type ARRAY [STRING] */
struct S221 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_DYNAMIC_STANDALONE_TYPE_SET */
struct S222 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* other_types */
	T0* a4; /* internal_other_types */
};

/* Struct for type ET_CONSTANT_ATTRIBUTE */
struct S223 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* constant */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T1 a23; /* implementation_checked */
	T1 a24; /* has_implementation_error */
	T0* a25; /* semicolon */
	T0* a26; /* feature_clause */
	T0* a27; /* first_indexing */
	T0* a28; /* other_seeds */
	T6 a29; /* id */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* synonym */
	T1 a35; /* assertions_checked */
	T1 a38; /* has_assertions_error */
};

/* Struct for type ET_UNIQUE_ATTRIBUTE */
struct S225 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* is_keyword */
	T0* a7; /* unique_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* assigner */
	T6 a13; /* first_seed */
	T6 a15; /* id */
	T1 a24; /* implementation_checked */
	T1 a25; /* has_implementation_error */
	T0* a26; /* semicolon */
	T0* a27; /* feature_clause */
	T0* a28; /* first_indexing */
	T0* a29; /* other_seeds */
	T6 a30; /* version */
	T0* a31; /* frozen_keyword */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* synonym */
	T1 a35; /* assertions_checked */
	T1 a38; /* has_assertions_error */
};

/* Struct for type ET_ATTRIBUTE */
struct S226 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* declared_type */
	T0* a5; /* clients */
	T0* a7; /* implementation_class */
	T0* a8; /* implementation_feature */
	T0* a9; /* assigner */
	T6 a11; /* first_seed */
	T1 a21; /* implementation_checked */
	T1 a22; /* has_implementation_error */
	T0* a23; /* semicolon */
	T0* a24; /* feature_clause */
	T0* a25; /* first_indexing */
	T0* a26; /* other_seeds */
	T6 a27; /* id */
	T6 a28; /* version */
	T0* a29; /* frozen_keyword */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T0* a32; /* synonym */
	T1 a33; /* assertions_checked */
	T1 a36; /* has_assertions_error */
};

/* Struct for type UT_INTEGER_FORMATTER */
struct S234 {
	int id;
};

/* Struct for type DS_CELL [INTEGER] */
struct S235 {
	int id;
	T6 a1; /* item */
};

/* Struct for type DS_ARRAYED_LIST [ET_INLINE_AGENT] */
struct S237 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PROCEDURE] */
struct S238 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S239 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_QUERY] */
struct S240 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* internal_cursor */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]] */
struct S241 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a8; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_FEATURE] */
struct S242 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
	T0* a9; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT] */
struct S243 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type ET_NESTED_TYPE_CONTEXT */
struct S244 {
	int id;
	T0* a1; /* root_context */
	T6 a2; /* count */
	T0* a3; /* storage */
};

/* Struct for type UNIX_FILE_INFO */
struct S246 {
	int id;
	T0* a2; /* buffered_file_info */
	T0* a5; /* file_name */
};

/* Struct for type ET_AST_FACTORY */
struct S248 {
	int id;
};

/* Struct for type ET_XACE_EXTERNALS */
struct S249 {
	int id;
	T0* a1; /* c_compiler_options */
	T0* a2; /* include_directories */
	T0* a3; /* link_libraries */
};

/* Struct for type ET_XACE_CLUSTERS */
struct S250 {
	int id;
	T0* a1; /* clusters */
};

/* Struct for type ET_XACE_CLUSTER */
struct S253 {
	int id;
	T0* a1; /* name */
	T0* a2; /* pathname */
	T1 a3; /* is_relative */
	T0* a4; /* library_prefix */
	T0* a6; /* cluster_prefix */
	T0* a7; /* class_options */
	T1 a8; /* is_abstract */
	T1 a9; /* is_recursive */
	T1 a10; /* is_read_only */
	T0* a11; /* options */
	T0* a12; /* subclusters */
	T0* a13; /* libraries */
	T1 a14; /* overridden_constraint_enabled */
	T1 a17; /* is_override */
	T0* a25; /* parent */
	T1 a36; /* is_implicit */
	T0* a38; /* provider_constraint */
	T0* a39; /* dependant_constraint */
	T1 a40; /* is_mounted */
};

/* Struct for type ET_XACE_OPTIONS */
struct S254 {
	int id;
	T0* a22; /* declared_c_compiler_options */
	T0* a25; /* declared_header */
	T0* a28; /* declared_link */
	T0* a30; /* declared_abstract */
	T0* a32; /* declared_recursive */
	T0* a34; /* declared_read_only */
	T6 a36; /* declared_fst_expansion_factor */
	T6 a37; /* declared_heap_size */
	T6 a38; /* declared_inlining_size */
	T6 a39; /* declared_stack_size */
	T0* a40; /* declared_address_expression */
	T0* a41; /* declared_arguments */
	T0* a42; /* declared_array_optimization */
	T0* a43; /* declared_assembly */
	T0* a44; /* declared_assertion */
	T0* a45; /* declared_callback */
	T0* a46; /* declared_case_insensitive */
	T0* a47; /* declared_check_vape */
	T0* a48; /* declared_clean */
	T0* a49; /* declared_cls_compliant */
	T0* a50; /* declared_component */
	T0* a51; /* declared_console_application */
	T0* a52; /* declared_create_keyword_extension */
	T0* a53; /* declared_culture */
	T0* a54; /* declared_dead_code_removal */
	T0* a55; /* declared_debug_option */
	T0* a56; /* declared_debug_tag */
	T0* a57; /* declared_debugger */
	T0* a58; /* declared_document */
	T0* a59; /* declared_dotnet_naming_convention */
	T0* a60; /* declared_dynamic_runtime */
	T0* a61; /* declared_exception_trace */
	T0* a62; /* declared_exclude */
	T0* a63; /* declared_export_option */
	T0* a64; /* declared_finalize_option */
	T0* a65; /* declared_flat_fst_optimization */
	T0* a66; /* declared_fst_optimization */
	T0* a67; /* declared_garbage_collector */
	T0* a68; /* declared_gc_info */
	T0* a69; /* declared_high_memory_compiler */
	T0* a70; /* declared_il_verifiable */
	T0* a71; /* declared_include */
	T0* a72; /* declared_inlining */
	T0* a73; /* declared_jumps_optimization */
	T0* a74; /* declared_layout */
	T0* a75; /* declared_layout_optimization */
	T0* a76; /* declared_leaves_optimization */
	T0* a77; /* declared_line_generation */
	T0* a78; /* declared_linker */
	T0* a79; /* declared_linux_fpu_double_precision */
	T0* a80; /* declared_manifest_string_trace */
	T0* a81; /* declared_map */
	T0* a82; /* declared_metadata_cache_path */
	T0* a83; /* declared_msil_assembly_compatibility */
	T0* a84; /* declared_msil_clr_version */
	T0* a85; /* declared_msil_generation */
	T0* a86; /* declared_msil_generation_version */
	T0* a87; /* declared_multithreaded */
	T0* a88; /* declared_namespace */
	T0* a89; /* declared_no_default_lib */
	T0* a90; /* declared_override_cluster */
	T0* a91; /* declared_portable_code_generation */
	T0* a92; /* declared_precompiled */
	T0* a93; /* declared_prefix_option */
	T0* a94; /* declared_profile */
	T0* a95; /* declared_public_key_token */
	T0* a96; /* declared_reloads_optimization */
	T0* a97; /* declared_shared_library_definition */
	T0* a98; /* declared_split */
	T0* a99; /* declared_storable_filename */
	T0* a100; /* declared_strip_option */
	T0* a101; /* declared_target */
	T0* a102; /* declared_trace */
	T0* a103; /* declared_use_cluster_name_as_namespace */
	T0* a104; /* declared_use_full_cluster_name_as_namespace */
	T0* a105; /* declared_verbose */
	T0* a106; /* declared_version */
	T0* a107; /* declared_visible_filename */
	T0* a108; /* declared_warning */
	T0* a109; /* declared_wedit */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARY */
struct S255 {
	int id;
	T0* a1; /* pathname */
	T0* a2; /* library */
	T0* a3; /* position */
	T0* a4; /* library_prefix */
	T1 a5; /* is_root */
};

/* Struct for type ET_XACE_MOUNTED_LIBRARIES */
struct S256 {
	int id;
	T0* a1; /* libraries */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY] */
struct S257 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type XM_ATTRIBUTE */
struct S258 {
	int id;
	T0* a1; /* name */
	T0* a2; /* namespace */
	T0* a3; /* value */
	T0* a4; /* parent */
};

/* Struct for type DS_LINKED_LIST_CURSOR [XM_NODE] */
struct S259 {
	int id;
	T1 a1; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
	T0* a7; /* container */
	T1 a8; /* before */
};

/* Struct for type ET_XACE_LIBRARY */
struct S261 {
	int id;
	T0* a1; /* library_prefix */
	T0* a3; /* name */
	T0* a4; /* options */
	T0* a5; /* clusters */
	T0* a6; /* libraries */
};

/* Struct for type DS_HASH_TABLE [INTEGER, STRING] */
struct S262 {
	int id;
	T6 a4; /* found_position */
	T0* a8; /* item_storage */
	T0* a9; /* key_storage */
	T6 a10; /* position */
	T0* a11; /* key_equality_tester */
	T0* a12; /* internal_keys */
	T6 a13; /* free_slot */
	T6 a14; /* last_position */
	T6 a19; /* count */
	T6 a20; /* capacity */
	T0* a22; /* equality_tester */
	T6 a23; /* modulus */
	T6 a24; /* slots_position */
	T6 a25; /* clashes_previous_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a30; /* internal_cursor */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type ET_XACE_CLASS_OPTIONS */
struct S265 {
	int id;
	T0* a1; /* feature_options */
	T0* a2; /* class_name */
	T0* a3; /* options */
};

/* Struct for type ET_XACE_BOOLEAN_EXPECTED_ERROR */
struct S266 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR */
struct S267 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR */
struct S268 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR */
struct S269 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING */
struct S270 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_CLASS_NAME_TESTER */
struct S271 {
	int id;
};

/* Struct for type ET_AST_NULL_PROCESSOR */
struct S273 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_FEATURE_FLATTENER */
struct S274 {
	int id;
	T0* a1; /* named_features */
	T0* a3; /* queries */
	T0* a4; /* procedures */
	T0* a5; /* aliased_features */
	T0* a7; /* clients_list */
	T0* a8; /* client_names */
	T0* a10; /* feature_adaptation_resolver */
	T0* a11; /* dotnet_feature_adaptation_resolver */
	T0* a12; /* identifier_type_resolver */
	T0* a13; /* anchored_type_checker */
	T0* a14; /* signature_checker */
	T0* a15; /* parent_checker */
	T0* a16; /* formal_parameter_checker */
	T0* a17; /* precursor_checker */
	T0* a18; /* universe */
	T0* a19; /* current_class */
};

/* Struct for type ET_INTERFACE_CHECKER */
struct S275 {
	int id;
	T0* a1; /* parent_checker3 */
	T0* a2; /* universe */
	T0* a3; /* current_class */
};

/* Struct for type ET_IMPLEMENTATION_CHECKER */
struct S276 {
	int id;
	T0* a1; /* feature_checker */
	T0* a2; /* supplier_builder */
	T0* a3; /* current_class */
	T0* a4; /* no_suppliers */
	T1 a5; /* flat_mode */
	T1 a6; /* flat_dbc_mode */
	T1 a7; /* suppliers_enabled */
	T0* a8; /* universe */
	T1 a12; /* short_mode */
};

/* Struct for type ET_PROVIDER_CHECKER */
struct S277 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
};

/* Struct for type ET_ANCESTOR_BUILDER */
struct S278 {
	int id;
	T0* a1; /* class_sorter */
	T0* a2; /* ancestors */
	T0* a3; /* parent_checker */
	T0* a4; /* formal_parameter_checker */
	T0* a5; /* parent_context */
	T0* a6; /* universe */
	T0* a7; /* current_class */
};

/* Struct for type DT_DATE_TIME_DURATION */
struct S282 {
	int id;
	T6 a3; /* year */
	T6 a4; /* month */
	T6 a5; /* day */
	T6 a6; /* hour */
	T6 a7; /* minute */
	T6 a8; /* second */
	T6 a9; /* millisecond */
};

/* Struct for type ET_EIFFEL_PREPARSER */
struct S283 {
	int id;
	T1 a1; /* overriding_class_added */
	T1 a2; /* use_assign_keyword */
	T1 a3; /* use_attribute_keyword */
	T1 a4; /* use_convert_keyword */
	T1 a5; /* use_create_keyword */
	T1 a6; /* use_recast_keyword */
	T1 a7; /* use_reference_keyword */
	T1 a8; /* use_void_keyword */
	T6 a10; /* last_text_count */
	T6 a11; /* last_literal_start */
	T0* a12; /* filename */
	T0* a13; /* universe */
	T0* a14; /* ast_factory */
	T0* a15; /* error_handler */
	T0* a21; /* input_buffer */
	T0* a23; /* last_classname */
	T6 a25; /* yy_start_state */
	T6 a26; /* yy_line */
	T6 a27; /* yy_column */
	T6 a28; /* yy_position */
	T6 a29; /* line */
	T6 a30; /* column */
	T6 a31; /* position */
	T0* a33; /* yy_state_stack */
	T6 a35; /* yy_end */
	T6 a36; /* yy_start */
	T6 a37; /* last_token */
	T1 a44; /* yy_more_flag */
	T6 a45; /* yy_more_len */
	T6 a46; /* yy_state_count */
	T0* a47; /* yy_ec */
	T0* a48; /* yy_content_area */
	T0* a49; /* yy_content */
	T0* a50; /* yy_accept */
	T6 a51; /* yy_last_accepting_state */
	T6 a52; /* yy_last_accepting_cpos */
	T0* a53; /* yy_chk */
	T0* a54; /* yy_base */
	T0* a55; /* yy_def */
	T0* a56; /* yy_meta */
	T0* a58; /* yy_nxt */
	T6 a60; /* yy_lp */
	T0* a61; /* yy_acclist */
	T6 a64; /* yy_looking_for_trail_begin */
	T6 a66; /* yy_full_match */
	T6 a67; /* yy_full_state */
	T6 a68; /* yy_full_lp */
	T1 a74; /* yy_rejected */
	T1 a75; /* class_keyword_found */
	T6 a76; /* last_literal_end */
	T0* a77; /* verbatim_marker */
	T0* a78; /* verbatim_open_white_characters */
	T0* a79; /* verbatim_close_white_characters */
	T6 a88; /* ms_column */
	T6 a89; /* ms_line */
	T6 a93; /* last_break_end */
	T6 a94; /* last_comment_end */
};

/* Struct for type DS_HASH_SET_CURSOR [STRING] */
struct S284 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [STRING] */
struct S285 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a6; /* container */
};

/* Struct for type ET_NONE_GROUP */
struct S286 {
	int id;
	T0* a1; /* name */
};

/* Struct for type ET_PARENT */
struct S287 {
	int id;
	T0* a1; /* type */
	T0* a2; /* actual_parameters */
	T0* a3; /* renames */
	T0* a4; /* exports */
	T0* a5; /* undefines */
	T0* a6; /* redefines */
	T0* a7; /* selects */
	T0* a9; /* end_keyword */
};

/* Struct for type ET_TUPLE_TYPE */
struct S288 {
	int id;
	T0* a1; /* tuple_keyword */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_RENAME_LIST */
struct S289 {
	int id;
	T0* a1; /* rename_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_EXPORT_LIST */
struct S290 {
	int id;
	T0* a1; /* export_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_KEYWORD_FEATURE_NAME_LIST */
struct S291 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_PARENT_LIST */
struct S292 {
	int id;
	T0* a1; /* inherit_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_BUILTIN_CONVERT_FEATURE */
struct S294 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* type */
};

/* Struct for type ARRAY [INTEGER] */
struct S295 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type ET_BASE_TYPE_LIST */
struct S296 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_DO_PROCEDURE */
struct S297 {
	int id;
	T0* a5; /* arguments */
	T0* a7; /* extended_name */
	T6 a8; /* hash_code */
	T0* a9; /* end_keyword */
	T0* a11; /* clients */
	T0* a12; /* implementation_class */
	T0* a13; /* implementation_feature */
	T0* a14; /* is_keyword */
	T0* a15; /* obsolete_message */
	T0* a16; /* preconditions */
	T0* a17; /* locals */
	T0* a18; /* compound */
	T0* a19; /* postconditions */
	T0* a20; /* rescue_clause */
	T0* a21; /* first_indexing */
	T6 a23; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* has_assertions_error */
	T1 a41; /* assertions_checked */
	T0* a42; /* synonym */
};

/* Struct for type KL_COMPARABLE_COMPARATOR [INTEGER] */
struct S299 {
	int id;
};

/* Struct for type ET_DEFERRED_PROCEDURE */
struct S302 {
	int id;
	T0* a1; /* implementation_feature */
	T0* a6; /* arguments */
	T0* a8; /* extended_name */
	T0* a9; /* deferred_keyword */
	T6 a11; /* hash_code */
	T0* a12; /* end_keyword */
	T0* a13; /* clients */
	T0* a14; /* implementation_class */
	T0* a15; /* is_keyword */
	T0* a16; /* obsolete_message */
	T0* a17; /* preconditions */
	T0* a18; /* postconditions */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a26; /* implementation_checked */
	T1 a27; /* has_implementation_error */
	T0* a30; /* first_precursor */
	T0* a31; /* other_precursors */
	T0* a32; /* semicolon */
	T0* a33; /* feature_clause */
	T0* a34; /* other_seeds */
	T0* a35; /* frozen_keyword */
	T6 a36; /* id */
	T6 a37; /* version */
	T1 a38; /* has_assertions_error */
	T1 a39; /* assertions_checked */
	T0* a40; /* synonym */
};

/* Struct for type ET_DYNAMIC_PUSH_TYPE_SET */
struct S303 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a7; /* other_types */
	T0* a8; /* targets */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_OPTION] */
struct S304 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_OPTION] */
struct S306 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_OPTION] */
struct S307 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S308 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S309 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S310 {
	int id;
};

/* Struct for type XM_NAMESPACE_RESOLVER */
struct S311 {
	int id;
	T0* a1; /* next */
	T0* a2; /* context */
	T0* a3; /* element_prefix */
	T0* a5; /* element_local_part */
	T1 a9; /* forward_xmlns */
	T0* a11; /* attributes_prefix */
	T0* a13; /* attributes_local_part */
	T0* a14; /* attributes_value */
};

/* Struct for type SPECIAL [XM_CALLBACKS_FILTER] */
struct S312 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [XM_CALLBACKS_FILTER] */
struct S313 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type XM_CALLBACKS_NULL */
struct S314 {
	int id;
};

/* Struct for type ET_XACE_OPTION_NAMES */
struct S315 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING] */
struct S318 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING] */
struct S320 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_XACE_LIBRARY] */
struct S321 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY] */
struct S322 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER */
struct S323 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a14; /* character_entity */
	T0* a16; /* input_stream */
	T0* a17; /* input_resolver */
	T1 a25; /* yy_more_flag */
	T6 a26; /* yy_more_len */
	T6 a27; /* yy_end */
	T6 a28; /* yy_start */
	T6 a29; /* yy_line */
	T6 a30; /* yy_column */
	T6 a31; /* yy_position */
	T0* a32; /* input_buffer */
	T0* a34; /* yy_state_stack */
	T6 a35; /* yy_state_count */
	T0* a36; /* yy_ec */
	T0* a37; /* yy_content_area */
	T0* a38; /* yy_content */
	T0* a39; /* yy_accept */
	T6 a40; /* yy_last_accepting_state */
	T6 a41; /* yy_last_accepting_cpos */
	T0* a42; /* yy_chk */
	T0* a43; /* yy_base */
	T0* a44; /* yy_def */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_nxt */
	T6 a49; /* yy_lp */
	T0* a50; /* yy_acclist */
	T6 a53; /* yy_looking_for_trail_begin */
	T6 a55; /* yy_full_match */
	T6 a56; /* yy_full_state */
	T6 a57; /* yy_full_lp */
	T1 a63; /* yy_rejected */
	T0* a65; /* last_error */
	T0* a66; /* start_conditions */
};

/* Struct for type XM_DEFAULT_POSITION */
struct S324 {
	int id;
	T0* a1; /* source_name */
	T6 a2; /* row */
	T6 a3; /* column */
	T6 a4; /* byte_index */
};

/* Struct for type DS_BILINKED_LIST [XM_POSITION] */
struct S326 {
	int id;
	T0* a2; /* first_cell */
	T0* a3; /* internal_cursor */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_LINKED_STACK [XM_EIFFEL_SCANNER] */
struct S327 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S328 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T6 a8; /* count */
	T6 a9; /* last_position */
	T6 a10; /* free_slot */
	T6 a11; /* capacity */
	T6 a14; /* slots_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* internal_keys */
	T6 a20; /* modulus */
	T6 a21; /* clashes_previous_position */
	T0* a23; /* internal_cursor */
	T6 a25; /* found_position */
	T0* a26; /* key_storage */
	T0* a27; /* clashes */
	T0* a28; /* slots */
	T0* a31; /* equality_tester */
	T0* a33; /* special_item_routines */
	T0* a34; /* special_key_routines */
};

/* Struct for type XM_NULL_EXTERNAL_RESOLVER */
struct S330 {
	int id;
};

/* Struct for type XM_EIFFEL_PARSER_NAME */
struct S331 {
	int id;
	T1 a2; /* use_namespaces */
	T6 a3; /* count */
	T0* a4; /* first */
	T0* a5; /* second */
	T0* a6; /* tail */
};

/* Struct for type XM_EIFFEL_DECLARATION */
struct S332 {
	int id;
	T0* a1; /* version */
	T0* a3; /* encoding */
	T1 a5; /* stand_alone */
};

/* Struct for type XM_DTD_EXTERNAL_ID */
struct S333 {
	int id;
	T0* a1; /* system_id */
	T0* a2; /* public_id */
};

/* Struct for type DS_HASH_SET [XM_EIFFEL_PARSER_NAME] */
struct S334 {
	int id;
	T6 a2; /* position */
	T0* a4; /* equality_tester */
	T6 a5; /* count */
	T6 a6; /* capacity */
	T6 a8; /* free_slot */
	T6 a9; /* last_position */
	T6 a14; /* modulus */
	T6 a15; /* slots_position */
	T6 a16; /* clashes_previous_position */
	T0* a20; /* internal_cursor */
	T6 a22; /* found_position */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a26; /* item_storage */
	T0* a27; /* special_item_routines */
};

/* Struct for type XM_DTD_ELEMENT_CONTENT */
struct S335 {
	int id;
	T0* a1; /* items */
	T2 a2; /* repetition */
	T0* a3; /* name */
	T2 a4; /* type */
	T1 a5; /* is_character_data_allowed */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT] */
struct S336 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type XM_DTD_ATTRIBUTE_CONTENT */
struct S337 {
	int id;
	T0* a1; /* name */
	T2 a2; /* type */
	T1 a3; /* is_list_type */
	T0* a4; /* enumeration_list */
	T2 a5; /* value */
	T0* a6; /* default_value */
};

/* Struct for type DS_BILINKED_LIST [STRING] */
struct S338 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
	T0* a7; /* equality_tester */
};

/* Struct for type SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S339 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME] */
struct S340 {
	int id;
};

/* Struct for type SPECIAL [XM_EIFFEL_DECLARATION] */
struct S341 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION] */
struct S342 {
	int id;
};

/* Struct for type SPECIAL [BOOLEAN] */
struct S343 {
	int id;
	T6 z1; /* count */
	T1 z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S344 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [BOOLEAN] */
struct S345 {
	int id;
};

/* Struct for type SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S346 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S347 {
	int id;
};

/* Struct for type SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S348 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT] */
struct S349 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S351 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S353 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S354 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT] */
struct S355 {
	int id;
};

/* Struct for type SPECIAL [DS_BILINKED_LIST [STRING]] */
struct S356 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]] */
struct S357 {
	int id;
};

/* Struct for type XM_EIFFEL_ENTITY_DEF */
struct S358 {
	int id;
	T0* a1; /* literal_name */
	T0* a2; /* value */
	T0* a3; /* resolver */
	T0* a4; /* external_id */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T0* a35; /* yy_nxt */
	T0* a37; /* yy_chk */
	T0* a39; /* yy_base */
	T0* a41; /* yy_def */
	T0* a43; /* yy_ec */
	T0* a45; /* yy_meta */
	T0* a47; /* yy_accept */
	T0* a49; /* yy_content */
	T0* a50; /* yy_content_area */
	T6 a57; /* last_token */
	T0* a58; /* last_value */
	T0* a64; /* input_filter */
	T0* a67; /* input_stream */
	T0* a68; /* input_resolver */
	T0* a88; /* yy_acclist */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID] */
struct S359 {
	int id;
};

/* Struct for type XM_DTD_CALLBACKS_NULL */
struct S361 {
	int id;
};

/* Struct for type XM_EIFFEL_SCANNER_DTD */
struct S362 {
	int id;
	T6 a2; /* last_token */
	T0* a3; /* last_value */
	T0* a7; /* input_name */
	T6 a8; /* position */
	T6 a9; /* column */
	T6 a10; /* line */
	T0* a12; /* input_filter */
	T6 a13; /* yy_start_state */
	T0* a15; /* character_entity */
	T0* a17; /* input_stream */
	T0* a18; /* input_resolver */
	T1 a20; /* decl_start_sent */
	T1 a22; /* decl_end_sent */
	T1 a30; /* yy_more_flag */
	T6 a31; /* yy_more_len */
	T6 a32; /* yy_end */
	T6 a33; /* yy_start */
	T6 a34; /* yy_line */
	T6 a35; /* yy_column */
	T6 a36; /* yy_position */
	T0* a37; /* input_buffer */
	T0* a39; /* yy_state_stack */
	T6 a40; /* yy_state_count */
	T0* a41; /* yy_ec */
	T0* a42; /* yy_content_area */
	T0* a43; /* yy_content */
	T0* a44; /* yy_accept */
	T6 a45; /* yy_last_accepting_state */
	T6 a46; /* yy_last_accepting_cpos */
	T0* a47; /* yy_chk */
	T0* a48; /* yy_base */
	T0* a49; /* yy_def */
	T0* a50; /* yy_meta */
	T0* a52; /* yy_nxt */
	T6 a54; /* yy_lp */
	T0* a55; /* yy_acclist */
	T6 a58; /* yy_looking_for_trail_begin */
	T6 a60; /* yy_full_match */
	T6 a61; /* yy_full_state */
	T6 a62; /* yy_full_lp */
	T1 a68; /* yy_rejected */
	T0* a70; /* last_error */
	T0* a71; /* start_conditions */
};

/* Struct for type XM_EIFFEL_PE_ENTITY_DEF */
struct S364 {
	int id;
	T0* a1; /* resolver */
	T0* a2; /* external_id */
	T0* a3; /* literal_name */
	T0* a4; /* value */
	T0* a5; /* character_entity */
	T0* a7; /* input_buffer */
	T1 a8; /* in_use */
	T0* a9; /* input_name */
	T0* a10; /* last_error */
	T0* a11; /* start_conditions */
	T6 a12; /* yy_start_state */
	T6 a13; /* yy_line */
	T6 a14; /* yy_column */
	T6 a15; /* yy_position */
	T6 a16; /* line */
	T6 a17; /* column */
	T6 a18; /* position */
	T1 a19; /* yy_more_flag */
	T6 a20; /* yy_more_len */
	T6 a21; /* yy_last_accepting_state */
	T6 a22; /* yy_last_accepting_cpos */
	T1 a23; /* yy_rejected */
	T6 a24; /* yy_state_count */
	T6 a25; /* yy_full_match */
	T6 a26; /* yy_lp */
	T6 a27; /* yy_looking_for_trail_begin */
	T6 a28; /* yy_full_lp */
	T6 a29; /* yy_full_state */
	T0* a31; /* yy_state_stack */
	T6 a33; /* yy_end */
	T6 a34; /* yy_start */
	T1 a35; /* pre_sent */
	T1 a36; /* post_sent */
	T0* a37; /* yy_nxt */
	T0* a39; /* yy_chk */
	T0* a41; /* yy_base */
	T0* a43; /* yy_def */
	T0* a45; /* yy_ec */
	T0* a47; /* yy_meta */
	T0* a49; /* yy_accept */
	T0* a51; /* yy_content */
	T0* a52; /* yy_content_area */
	T6 a58; /* last_token */
	T0* a59; /* last_value */
	T0* a65; /* input_filter */
	T0* a69; /* input_stream */
	T0* a70; /* input_resolver */
	T0* a91; /* yy_acclist */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING] */
struct S365 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [INTEGER] */
struct S366 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [STRING] */
struct S367 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [STRING] */
struct S368 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_HASH_SET_CURSOR [INTEGER] */
struct S369 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_EQUALITY_TESTER [ET_IDENTIFIER] */
struct S371 {
	int id;
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S373 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S375 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_IDENTIFIER] */
struct S376 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type TO_SPECIAL [ANY] */
struct S377 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IDENTIFIER] */
struct S378 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_CLUSTER] */
struct S379 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY] */
struct S380 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTERS] */
struct S381 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_CLUSTER] */
struct S382 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_EXCLUDE] */
struct S383 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES] */
struct S384 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY] */
struct S385 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME] */
struct S387 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_CLASS] */
struct S389 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLASS_NAME] */
struct S390 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS] */
struct S391 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME] */
struct S392 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE] */
struct S393 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE] */
struct S394 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE] */
struct S395 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_FORMAL_PARAMETER_LIST */
struct S396 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* left_bracket */
	T0* a7; /* right_bracket */
};

/* Struct for type MANAGED_POINTER */
struct S397 {
	int id;
	T14 a1; /* item */
	T6 a3; /* count */
	T1 a4; /* is_shared */
};

/* Struct for type DS_ARRAYED_STACK [INTEGER] */
struct S398 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST] */
struct S399 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST] */
struct S400 {
	int id;
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_KEYWORD] */
struct S401 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_STACK [ET_SYMBOL] */
struct S402 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
};

/* Struct for type DS_ARRAYED_LIST [ET_ASSERTION_ITEM] */
struct S403 {
	int id;
	T6 a3; /* count */
	T0* a5; /* storage */
	T0* a6; /* special_routines */
	T6 a7; /* capacity */
	T0* a8; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE] */
struct S404 {
	int id;
	T0* a2; /* storage */
	T0* a3; /* special_routines */
	T6 a4; /* capacity */
	T0* a5; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS] */
struct S405 {
	int id;
	T6 a1; /* count */
	T0* a4; /* internal_cursor */
	T0* a9; /* item_storage */
	T6 a10; /* capacity */
	T6 a11; /* modulus */
	T6 a13; /* last_position */
	T6 a14; /* free_slot */
	T6 a16; /* position */
	T6 a18; /* slots_position */
	T0* a22; /* special_item_routines */
	T0* a23; /* clashes */
	T0* a25; /* slots */
	T6 a26; /* found_position */
	T6 a31; /* clashes_previous_position */
	T0* a35; /* equality_tester */
};

/* Struct for type DS_ARRAYED_LIST [ET_XACE_CLUSTER] */
struct S407 {
	int id;
	T6 a1; /* count */
	T0* a3; /* storage */
	T0* a4; /* special_routines */
	T6 a5; /* capacity */
	T0* a6; /* internal_cursor */
};

/* Struct for type KL_DIRECTORY */
struct S409 {
	int id;
	T1 a2; /* end_of_input */
	T0* a3; /* last_entry */
	T6 a5; /* mode */
	T0* a7; /* name */
	T0* a9; /* string_name */
	T0* a10; /* entry_buffer */
	T0* a13; /* lastentry */
	T14 a16; /* directory_pointer */
};

/* Struct for type KL_EIFFEL_COMPILER */
struct S410 {
	int id;
};

/* Struct for type ET_CLUSTER_DEPENDENCE_CONSTRAINT */
struct S411 {
	int id;
	T0* a1; /* current_cluster */
	T0* a2; /* group_names */
};

/* Struct for type ET_CLASS_NAME_LIST */
struct S413 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type ET_CLIENTS */
struct S414 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FEATURE_CLAUSE */
struct S415 {
	int id;
	T0* a1; /* feature_keyword */
	T0* a3; /* clients */
};

/* Struct for type SPECIAL [ET_KEYWORD] */
struct S417 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD] */
struct S418 {
	int id;
};

/* Struct for type ET_AGENT_KEYWORD */
struct S419 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
};

/* Struct for type SPECIAL [ET_AGENT_KEYWORD] */
struct S420 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD] */
struct S421 {
	int id;
};

/* Struct for type ET_PRECURSOR_KEYWORD */
struct S422 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* name */
	T6 a9; /* seed */
};

/* Struct for type SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S423 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD] */
struct S424 {
	int id;
};

/* Struct for type ET_SYMBOL */
struct S425 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SYMBOL] */
struct S426 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL] */
struct S427 {
	int id;
};

/* Struct for type SPECIAL [ET_POSITION] */
struct S428 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSITION] */
struct S429 {
	int id;
};

/* Struct for type ET_BIT_CONSTANT */
struct S430 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_BIT_CONSTANT] */
struct S431 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT] */
struct S432 {
	int id;
};

/* Struct for type SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S434 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT] */
struct S435 {
	int id;
};

/* Struct for type SPECIAL [ET_BREAK] */
struct S437 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BREAK] */
struct S438 {
	int id;
};

/* Struct for type SPECIAL [ET_CHARACTER_CONSTANT] */
struct S440 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT] */
struct S441 {
	int id;
};

/* Struct for type SPECIAL [ET_CURRENT] */
struct S442 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CURRENT] */
struct S443 {
	int id;
};

/* Struct for type ET_FREE_OPERATOR */
struct S444 {
	int id;
	T2 a1; /* code */
	T6 a3; /* hash_code */
	T6 a9; /* compressed_position */
	T0* a10; /* free_operator_name */
	T6 a16; /* seed */
};

/* Struct for type SPECIAL [ET_FREE_OPERATOR] */
struct S445 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR] */
struct S446 {
	int id;
};

/* Struct for type SPECIAL [ET_INTEGER_CONSTANT] */
struct S448 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT] */
struct S449 {
	int id;
};

/* Struct for type ET_KEYWORD_OPERATOR */
struct S450 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_KEYWORD_OPERATOR] */
struct S451 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR] */
struct S452 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING] */
struct S453 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING] */
struct S454 {
	int id;
};

/* Struct for type SPECIAL [ET_REAL_CONSTANT] */
struct S456 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT] */
struct S457 {
	int id;
};

/* Struct for type SPECIAL [ET_RESULT] */
struct S458 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RESULT] */
struct S459 {
	int id;
};

/* Struct for type ET_RETRY_INSTRUCTION */
struct S460 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
};

/* Struct for type SPECIAL [ET_RETRY_INSTRUCTION] */
struct S461 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION] */
struct S462 {
	int id;
};

/* Struct for type ET_SYMBOL_OPERATOR */
struct S463 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a15; /* seed */
};

/* Struct for type SPECIAL [ET_SYMBOL_OPERATOR] */
struct S464 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR] */
struct S465 {
	int id;
};

/* Struct for type ET_VOID */
struct S466 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type SPECIAL [ET_VOID] */
struct S467 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VOID] */
struct S468 {
	int id;
};

/* Struct for type ET_SEMICOLON_SYMBOL */
struct S469 {
	int id;
	T2 a1; /* code */
	T6 a3; /* compressed_position */
};

/* Struct for type SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S470 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL] */
struct S471 {
	int id;
};

/* Struct for type ET_BRACKET_SYMBOL */
struct S472 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a17; /* seed */
};

/* Struct for type SPECIAL [ET_BRACKET_SYMBOL] */
struct S473 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL] */
struct S474 {
	int id;
};

/* Struct for type ET_QUESTION_MARK_SYMBOL */
struct S475 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T6 a10; /* index */
};

/* Struct for type SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S476 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL] */
struct S477 {
	int id;
};

/* Struct for type ET_C3_CHARACTER_CONSTANT */
struct S478 {
	int id;
	T0* a1; /* literal */
	T2 a2; /* value */
	T6 a7; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* type */
	T0* a22; /* cast_type */
};

/* Struct for type ET_REGULAR_MANIFEST_STRING */
struct S479 {
	int id;
	T0* a1; /* value */
	T6 a6; /* compressed_position */
	T6 a8; /* index */
	T0* a21; /* cast_type */
	T0* a25; /* type */
};

/* Struct for type ET_VERBATIM_STRING */
struct S480 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T0* a3; /* marker */
	T0* a4; /* open_white_characters */
	T0* a5; /* close_white_characters */
	T1 a6; /* is_left_aligned */
	T6 a11; /* compressed_position */
	T6 a13; /* index */
	T0* a26; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_SPECIAL_MANIFEST_STRING */
struct S481 {
	int id;
	T0* a1; /* literal */
	T0* a2; /* value */
	T6 a7; /* compressed_position */
	T6 a9; /* index */
	T0* a22; /* cast_type */
	T0* a26; /* type */
};

/* Struct for type ET_REGULAR_INTEGER_CONSTANT */
struct S482 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_UNDERSCORED_INTEGER_CONSTANT */
struct S483 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a30; /* type */
};

/* Struct for type ET_HEXADECIMAL_INTEGER_CONSTANT */
struct S484 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T1 a9; /* has_value_error */
	T6 a10; /* value */
	T6 a11; /* index */
	T0* a12; /* sign */
	T0* a14; /* cast_type */
	T0* a31; /* type */
};

/* Struct for type ET_REGULAR_REAL_CONSTANT */
struct S485 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_UNDERSCORED_REAL_CONSTANT */
struct S486 {
	int id;
	T0* a1; /* literal */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a8; /* sign */
	T0* a10; /* cast_type */
	T0* a19; /* type */
};

/* Struct for type ET_TRUE_CONSTANT */
struct S488 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_FALSE_CONSTANT */
struct S489 {
	int id;
	T2 a1; /* code */
	T6 a7; /* compressed_position */
	T0* a8; /* text */
	T6 a9; /* index */
};

/* Struct for type ET_C1_CHARACTER_CONSTANT */
struct S490 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type ET_C2_CHARACTER_CONSTANT */
struct S491 {
	int id;
	T2 a1; /* value */
	T6 a6; /* compressed_position */
	T6 a7; /* index */
	T0* a20; /* type */
	T0* a21; /* cast_type */
};

/* Struct for type SPECIAL [ET_INDEXING_LIST] */
struct S493 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_OBSOLETE] */
struct S495 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_LIST] */
struct S496 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATOR_LIST */
struct S497 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_CREATOR_LIST] */
struct S498 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FEATURE_LIST */
struct S499 {
	int id;
	T0* a1; /* convert_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S500 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_FEATURE_CLAUSE_LIST */
struct S501 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S502 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INVARIANTS */
struct S503 {
	int id;
	T0* a1; /* implementation_class */
	T0* a2; /* invariant_keyword */
	T0* a4; /* storage */
	T6 a5; /* count */
	T1 a7; /* assertions_checked */
	T1 a8; /* implementation_checked */
	T1 a9; /* has_assertions_error */
	T1 a10; /* has_implementation_error */
};

/* Struct for type SPECIAL [ET_INVARIANTS] */
struct S504 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_LIST] */
struct S505 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_ITEM] */
struct S507 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_LIST] */
struct S509 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM] */
struct S511 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM] */
struct S515 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST] */
struct S516 {
	int id;
};

/* Struct for type SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S518 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM] */
struct S519 {
	int id;
};

/* Struct for type ET_CREATE_EXPRESSION */
struct S520 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* creation_call */
	T0* a3; /* create_keyword */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_CREATE_EXPRESSION] */
struct S521 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CUSTOM_ATTRIBUTE */
struct S522 {
	int id;
	T0* a1; /* creation_expression */
	T0* a2; /* settings */
	T0* a3; /* end_keyword */
};

/* Struct for type ET_MANIFEST_TUPLE */
struct S523 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_TUPLE] */
struct S524 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM] */
struct S525 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S526 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST] */
struct S527 {
	int id;
};

/* Struct for type ET_FORMAL_PARAMETER */
struct S528 {
	int id;
	T0* a1; /* name */
	T6 a2; /* index */
	T0* a3; /* type_mark */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER] */
struct S529 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S531 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM] */
struct S532 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER] */
struct S534 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_TYPE] */
struct S535 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINED_FORMAL_PARAMETER */
struct S536 {
	int id;
	T0* a1; /* arrow_symbol */
	T0* a3; /* constraint */
	T0* a4; /* creation_procedures */
	T0* a5; /* type_mark */
	T0* a6; /* name */
	T6 a7; /* index */
	T0* a10; /* constraint_base_type */
};

/* Struct for type ET_CONSTRAINT_CREATOR */
struct S537 {
	int id;
	T0* a1; /* create_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S538 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR] */
struct S539 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S541 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_ACTUAL_PARAMETER_LIST */
struct S542 {
	int id;
	T0* a1; /* left_bracket */
	T0* a3; /* right_bracket */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S543 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONSTRAINT_NAMED_TYPE */
struct S544 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE] */
struct S545 {
	int id;
};

/* Struct for type SPECIAL [ET_LIKE_TYPE] */
struct S547 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BIT_N */
struct S548 {
	int id;
	T0* a2; /* constant */
	T6 a3; /* size */
	T0* a5; /* bit_keyword */
};

/* Struct for type ET_BIT_FEATURE */
struct S549 {
	int id;
	T0* a1; /* bit_keyword */
	T0* a3; /* name */
	T6 a4; /* size */
	T0* a28; /* constant */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S550 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S552 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S554 {
	int id;
};

/* Struct for type ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER */
struct S555 {
	int id;
	T0* a1; /* label */
	T0* a2; /* colon */
	T0* a3; /* type */
};

/* Struct for type ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER */
struct S556 {
	int id;
	T0* a1; /* label */
	T0* a2; /* comma */
	T0* a3; /* type */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_OBSOLETE] */
struct S557 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_LIST] */
struct S558 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S559 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT] */
struct S560 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT] */
struct S561 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_LIST] */
struct S562 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXPORT_LIST] */
struct S563 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S564 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PARENT_ITEM] */
struct S565 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_ITEM] */
struct S566 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_LIST] */
struct S567 {
	int id;
};

/* Struct for type SPECIAL [ET_RENAME_ITEM] */
struct S569 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FEATURE_NAME] */
struct S570 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S571 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_RENAME */
struct S572 {
	int id;
	T0* a1; /* old_name */
	T0* a2; /* as_keyword */
	T0* a4; /* new_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME_ITEM] */
struct S573 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT_LIST] */
struct S574 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPORT] */
struct S576 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CLIENTS] */
struct S577 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALL_EXPORT */
struct S578 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* all_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPORT] */
struct S579 {
	int id;
};

/* Struct for type ET_FEATURE_EXPORT */
struct S580 {
	int id;
	T0* a1; /* clients_clause */
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type SPECIAL [ET_FEATURE_EXPORT] */
struct S581 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT] */
struct S583 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLIENTS] */
struct S584 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_ITEM] */
struct S586 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM] */
struct S587 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S588 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM] */
struct S589 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR_LIST] */
struct S590 {
	int id;
};

/* Struct for type ET_CREATOR */
struct S591 {
	int id;
	T0* a1; /* creation_keyword */
	T0* a3; /* clients */
	T0* a4; /* storage */
	T6 a5; /* count */
};

/* Struct for type SPECIAL [ET_CREATOR] */
struct S592 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATOR] */
struct S593 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST] */
struct S594 {
	int id;
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE] */
struct S596 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S598 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM] */
struct S599 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE_LIST] */
struct S601 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CONVERT_FUNCTION */
struct S602 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* colon */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE] */
struct S603 {
	int id;
};

/* Struct for type ET_CONVERT_PROCEDURE */
struct S604 {
	int id;
	T0* a1; /* name */
	T0* a2; /* types */
	T0* a3; /* left_parenthesis */
	T0* a5; /* right_parenthesis */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_LIST] */
struct S605 {
	int id;
};

/* Struct for type SPECIAL [ET_TYPE] */
struct S606 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_TYPE_ITEM] */
struct S608 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE_ITEM] */
struct S609 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST] */
struct S610 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE_CLAUSE] */
struct S611 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE] */
struct S612 {
	int id;
};

/* Struct for type SPECIAL [ET_QUERY] */
struct S613 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_PROCEDURE] */
struct S614 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_ASSIGNER] */
struct S617 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_QUERY] */
struct S618 {
	int id;
};

/* Struct for type SPECIAL [ET_CONSTANT] */
struct S619 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_PRECONDITIONS */
struct S621 {
	int id;
	T0* a1; /* require_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* else_keyword */
};

/* Struct for type SPECIAL [ET_PRECONDITIONS] */
struct S622 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE_LIST */
struct S623 {
	int id;
	T0* a1; /* local_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S624 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_COMPOUND */
struct S625 {
	int id;
	T0* a1; /* keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_COMPOUND] */
struct S626 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_POSTCONDITIONS */
struct S627 {
	int id;
	T0* a1; /* ensure_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
	T0* a6; /* then_keyword */
};

/* Struct for type SPECIAL [ET_POSTCONDITIONS] */
struct S628 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_DO_FUNCTION */
struct S629 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* is_keyword */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* has_assertions_error */
	T1 a47; /* assertions_checked */
	T0* a48; /* synonym */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S630 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_FUNCTION */
struct S631 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* declared_type */
	T0* a6; /* end_keyword */
	T0* a8; /* clients */
	T0* a9; /* implementation_class */
	T0* a10; /* implementation_feature */
	T0* a11; /* is_keyword */
	T0* a12; /* assigner */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* locals */
	T0* a16; /* compound */
	T0* a17; /* postconditions */
	T0* a18; /* rescue_clause */
	T0* a19; /* first_indexing */
	T6 a21; /* first_seed */
	T1 a30; /* implementation_checked */
	T1 a31; /* has_implementation_error */
	T0* a38; /* first_precursor */
	T0* a39; /* other_precursors */
	T0* a40; /* semicolon */
	T0* a41; /* feature_clause */
	T0* a42; /* other_seeds */
	T0* a43; /* frozen_keyword */
	T6 a44; /* id */
	T6 a45; /* version */
	T1 a46; /* has_assertions_error */
	T1 a47; /* assertions_checked */
	T0* a48; /* synonym */
};

/* Struct for type ET_DEFERRED_FUNCTION */
struct S632 {
	int id;
	T0* a1; /* deferred_keyword */
	T0* a3; /* extended_name */
	T6 a4; /* hash_code */
	T0* a6; /* arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_class */
	T0* a11; /* implementation_feature */
	T0* a12; /* is_keyword */
	T0* a13; /* assigner */
	T0* a14; /* obsolete_message */
	T0* a15; /* preconditions */
	T0* a16; /* postconditions */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a36; /* first_precursor */
	T0* a37; /* other_precursors */
	T0* a38; /* semicolon */
	T0* a39; /* feature_clause */
	T0* a40; /* other_seeds */
	T0* a41; /* frozen_keyword */
	T6 a42; /* id */
	T6 a43; /* version */
	T1 a44; /* has_assertions_error */
	T1 a45; /* assertions_checked */
	T0* a46; /* synonym */
};

/* Struct for type SPECIAL [ET_EXTERNAL_ALIAS] */
struct S635 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PROCEDURE] */
struct S636 {
	int id;
};

/* Struct for type ET_ONCE_PROCEDURE */
struct S637 {
	int id;
	T0* a1; /* extended_name */
	T6 a2; /* hash_code */
	T0* a4; /* arguments */
	T0* a5; /* end_keyword */
	T0* a7; /* clients */
	T0* a8; /* implementation_class */
	T0* a9; /* implementation_feature */
	T0* a10; /* is_keyword */
	T0* a11; /* obsolete_message */
	T0* a12; /* preconditions */
	T0* a13; /* locals */
	T0* a14; /* compound */
	T0* a15; /* postconditions */
	T0* a16; /* rescue_clause */
	T0* a17; /* first_indexing */
	T6 a19; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a34; /* semicolon */
	T0* a35; /* feature_clause */
	T0* a36; /* other_seeds */
	T0* a37; /* frozen_keyword */
	T6 a38; /* id */
	T6 a39; /* version */
	T1 a40; /* has_assertions_error */
	T1 a41; /* assertions_checked */
	T0* a42; /* synonym */
};

/* Struct for type ET_EXTERNAL_PROCEDURE */
struct S638 {
	int id;
	T0* a1; /* language */
	T0* a2; /* implementation_class */
	T0* a4; /* arguments */
	T0* a5; /* extended_name */
	T6 a6; /* hash_code */
	T0* a7; /* end_keyword */
	T0* a9; /* clients */
	T0* a10; /* implementation_feature */
	T6 a11; /* builtin_code */
	T0* a12; /* is_keyword */
	T0* a13; /* obsolete_message */
	T0* a14; /* preconditions */
	T0* a15; /* postconditions */
	T0* a16; /* alias_clause */
	T0* a17; /* first_indexing */
	T6 a20; /* first_seed */
	T1 a28; /* implementation_checked */
	T1 a29; /* has_implementation_error */
	T0* a32; /* first_precursor */
	T0* a33; /* other_precursors */
	T0* a35; /* semicolon */
	T0* a36; /* feature_clause */
	T0* a37; /* other_seeds */
	T0* a38; /* frozen_keyword */
	T6 a39; /* id */
	T6 a40; /* version */
	T1 a41; /* has_assertions_error */
	T1 a42; /* assertions_checked */
	T0* a43; /* synonym */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS] */
struct S639 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSIGNER] */
struct S640 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE_NAME] */
struct S641 {
	int id;
};

/* Struct for type ET_PREFIX_NAME */
struct S642 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a15; /* seed */
};

/* Struct for type ET_PREFIX_FREE_NAME */
struct S643 {
	int id;
	T0* a1; /* prefix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a17; /* seed */
};

/* Struct for type ET_INFIX_NAME */
struct S644 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a18; /* seed */
};

/* Struct for type ET_INFIX_FREE_NAME */
struct S645 {
	int id;
	T0* a1; /* infix_keyword */
	T0* a3; /* operator_name */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a38; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME] */
struct S646 {
	int id;
};

/* Struct for type ET_ALIAS_NAME */
struct S647 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a56; /* seed */
};

/* Struct for type SPECIAL [ET_ALIAS_NAME] */
struct S648 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ALIASED_FEATURE_NAME */
struct S649 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* alias_name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ALIAS_NAME] */
struct S650 {
	int id;
};

/* Struct for type ET_ALIAS_FREE_NAME */
struct S651 {
	int id;
	T0* a1; /* alias_keyword */
	T0* a3; /* alias_string */
	T2 a4; /* code */
	T6 a6; /* hash_code */
	T6 a16; /* seed */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST] */
struct S652 {
	int id;
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S654 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_FORMAL_ARGUMENT] */
struct S655 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT] */
struct S657 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM] */
struct S658 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST] */
struct S659 {
	int id;
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S661 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOCAL_VARIABLE */
struct S662 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type SPECIAL [ET_LOCAL_VARIABLE] */
struct S663 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE] */
struct S665 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM] */
struct S666 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION] */
struct S667 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PRECONDITIONS] */
struct S668 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS] */
struct S669 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INVARIANTS] */
struct S670 {
	int id;
};

/* Struct for type ET_LOOP_INVARIANTS */
struct S671 {
	int id;
	T0* a1; /* invariant_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_LOOP_INVARIANTS] */
struct S672 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS] */
struct S673 {
	int id;
};

/* Struct for type ET_VARIANT */
struct S674 {
	int id;
	T0* a1; /* variant_keyword */
	T0* a3; /* tag */
	T0* a4; /* expression */
};

/* Struct for type SPECIAL [ET_VARIANT] */
struct S675 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_VARIANT] */
struct S676 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_COMPOUND] */
struct S677 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_TYPE] */
struct S678 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST] */
struct S679 {
	int id;
};

/* Struct for type SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S680 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM] */
struct S682 {
	int id;
};

/* Struct for type ET_LABELED_ACTUAL_PARAMETER */
struct S683 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_LIKE_FEATURE */
struct S685 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* name */
	T6 a26; /* seed */
	T1 a28; /* is_procedure */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_TYPE] */
struct S686 {
	int id;
};

/* Struct for type ET_LIKE_CURRENT */
struct S687 {
	int id;
	T0* a1; /* like_keyword */
	T0* a3; /* current_keyword */
};

/* Struct for type SPECIAL [ET_INSTRUCTION] */
struct S689 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CALL_EXPRESSION] */
struct S690 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNER_INSTRUCTION */
struct S691 {
	int id;
	T0* a1; /* call */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
	T0* a5; /* name */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSTRUCTION] */
struct S693 {
	int id;
};

/* Struct for type ET_BRACKET_EXPRESSION */
struct S694 {
	int id;
	T0* a1; /* target */
	T0* a2; /* name */
	T0* a3; /* arguments */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [ET_BRACKET_EXPRESSION] */
struct S695 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_WRITABLE] */
struct S696 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ASSIGNMENT */
struct S697 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_symbol */
};

/* Struct for type ET_ASSIGNMENT_ATTEMPT */
struct S698 {
	int id;
	T0* a1; /* target */
	T0* a2; /* source */
	T0* a3; /* assign_attempt_symbol */
};

/* Struct for type ET_IF_INSTRUCTION */
struct S699 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
	T0* a3; /* end_keyword */
	T0* a5; /* elseif_parts */
	T0* a6; /* else_compound */
};

/* Struct for type SPECIAL [ET_IF_INSTRUCTION] */
struct S700 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_INSPECT_INSTRUCTION */
struct S701 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* when_parts */
	T0* a3; /* end_keyword */
	T0* a5; /* else_compound */
};

/* Struct for type SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S702 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_LOOP_INSTRUCTION */
struct S704 {
	int id;
	T0* a1; /* from_compound */
	T0* a2; /* until_conditional */
	T0* a3; /* loop_compound */
	T0* a4; /* end_keyword */
	T0* a6; /* invariant_part */
	T0* a7; /* variant_part */
};

/* Struct for type ET_DEBUG_INSTRUCTION */
struct S705 {
	int id;
	T0* a1; /* keys */
	T0* a2; /* compound */
	T0* a3; /* end_keyword */
};

/* Struct for type SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S706 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHECK_INSTRUCTION */
struct S707 {
	int id;
	T0* a1; /* check_keyword */
	T0* a3; /* end_keyword */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_BANG_INSTRUCTION */
struct S709 {
	int id;
	T0* a1; /* type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* left_bang */
	T0* a6; /* right_bang */
};

/* Struct for type ET_QUALIFIED_CALL */
struct S710 {
	int id;
	T0* a1; /* qualified_name */
	T0* a2; /* arguments */
};

/* Struct for type SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S711 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CREATE_INSTRUCTION */
struct S713 {
	int id;
	T0* a1; /* creation_type */
	T0* a2; /* target */
	T0* a3; /* creation_call */
	T0* a4; /* create_keyword */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION] */
struct S714 {
	int id;
};

/* Struct for type ET_ELSEIF_PART_LIST */
struct S715 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION] */
struct S716 {
	int id;
};

/* Struct for type SPECIAL [ET_ELSEIF_PART_LIST] */
struct S717 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ELSEIF_PART */
struct S718 {
	int id;
	T0* a1; /* conditional */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_ELSEIF_PART] */
struct S719 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST] */
struct S720 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ELSEIF_PART] */
struct S721 {
	int id;
};

/* Struct for type ET_WHEN_PART_LIST */
struct S722 {
	int id;
	T6 a1; /* count */
	T0* a2; /* storage */
};

/* Struct for type SPECIAL [ET_WHEN_PART_LIST] */
struct S723 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION] */
struct S724 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST] */
struct S725 {
	int id;
};

/* Struct for type ET_WHEN_PART */
struct S726 {
	int id;
	T0* a1; /* choices */
	T0* a2; /* then_compound */
};

/* Struct for type SPECIAL [ET_WHEN_PART] */
struct S727 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_CHOICE_LIST */
struct S728 {
	int id;
	T0* a1; /* when_keyword */
	T6 a3; /* count */
	T0* a4; /* storage */
};

/* Struct for type SPECIAL [ET_CHOICE_LIST] */
struct S729 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WHEN_PART] */
struct S730 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_LIST] */
struct S731 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE] */
struct S733 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_CHOICE_ITEM] */
struct S735 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM] */
struct S736 {
	int id;
};

/* Struct for type SPECIAL [ET_CHOICE_CONSTANT] */
struct S738 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE] */
struct S739 {
	int id;
};

/* Struct for type ET_CHOICE_RANGE */
struct S740 {
	int id;
	T0* a1; /* lower */
	T0* a2; /* upper */
	T0* a3; /* dotdot */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT] */
struct S741 {
	int id;
};

/* Struct for type ET_STATIC_CALL_EXPRESSION */
struct S742 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S743 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_MANIFEST_STRING_LIST */
struct S744 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S745 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION] */
struct S746 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST] */
struct S747 {
	int id;
};

/* Struct for type SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S749 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM] */
struct S750 {
	int id;
};

/* Struct for type ET_PRECURSOR_INSTRUCTION */
struct S751 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T0* a6; /* parent_type */
};

/* Struct for type ET_STATIC_CALL_INSTRUCTION */
struct S753 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* feature_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION] */
struct S754 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION] */
struct S755 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION] */
struct S756 {
	int id;
};

/* Struct for type ET_PRECURSOR_EXPRESSION */
struct S757 {
	int id;
	T0* a1; /* parent_name */
	T0* a2; /* arguments */
	T0* a3; /* precursor_keyword */
	T1 a5; /* is_parent_prefixed */
	T6 a6; /* index */
	T0* a10; /* parent_type */
};

/* Struct for type ET_PARENTHESIZED_EXPRESSION */
struct S758 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* expression */
	T0* a4; /* right_parenthesis */
	T6 a5; /* index */
};

/* Struct for type SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S759 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST] */
struct S760 {
	int id;
};

/* Struct for type SPECIAL [ET_EXPRESSION_ITEM] */
struct S761 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM] */
struct S762 {
	int id;
};

/* Struct for type ET_FEATURE_ADDRESS */
struct S763 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type ET_CURRENT_ADDRESS */
struct S764 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* current_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_RESULT_ADDRESS */
struct S765 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* result_keyword */
	T6 a4; /* index */
};

/* Struct for type ET_EXPRESSION_ADDRESS */
struct S766 {
	int id;
	T0* a1; /* dollar */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_WRITABLE] */
struct S767 {
	int id;
};

/* Struct for type ET_INFIX_EXPRESSION */
struct S768 {
	int id;
	T0* a1; /* left */
	T0* a2; /* name */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_INFIX_AND_THEN_OPERATOR */
struct S770 {
	int id;
	T0* a1; /* and_keyword */
	T0* a3; /* then_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_INFIX_OR_ELSE_OPERATOR */
struct S771 {
	int id;
	T0* a1; /* or_keyword */
	T0* a3; /* else_keyword */
	T6 a4; /* seed */
};

/* Struct for type ET_EQUALITY_EXPRESSION */
struct S772 {
	int id;
	T0* a1; /* left */
	T0* a2; /* operator */
	T0* a3; /* right */
	T6 a4; /* index */
};

/* Struct for type ET_PREFIX_EXPRESSION */
struct S773 {
	int id;
	T0* a1; /* name */
	T0* a2; /* expression */
	T6 a3; /* index */
};

/* Struct for type ET_OLD_EXPRESSION */
struct S774 {
	int id;
	T0* a1; /* old_keyword */
	T0* a3; /* expression */
	T6 a4; /* index */
};

/* Struct for type ET_CALL_AGENT */
struct S775 {
	int id;
	T0* a1; /* agent_keyword */
	T0* a3; /* qualified_name */
	T0* a4; /* arguments */
	T0* a5; /* target */
	T6 a6; /* index */
	T0* a9; /* implicit_result */
};

/* Struct for type SPECIAL [ET_CALL_AGENT] */
struct S776 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_INLINE_AGENT] */
struct S778 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_ONCE_MANIFEST_STRING */
struct S779 {
	int id;
	T0* a1; /* once_keyword */
	T0* a3; /* manifest_string */
	T6 a4; /* index */
};

/* Struct for type ET_MANIFEST_ARRAY */
struct S780 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
	T6 a7; /* index */
};

/* Struct for type SPECIAL [ET_MANIFEST_ARRAY] */
struct S781 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_STRIP_EXPRESSION */
struct S782 {
	int id;
	T0* a1; /* strip_keyword */
	T0* a3; /* left_parenthesis */
	T0* a4; /* right_parenthesis */
	T6 a5; /* count */
	T0* a6; /* storage */
	T6 a8; /* index */
};

/* Struct for type SPECIAL [ET_STRIP_EXPRESSION] */
struct S783 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_BRACKET_ARGUMENT_LIST */
struct S784 {
	int id;
	T0* a1; /* left_symbol */
	T0* a3; /* right_symbol */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S785 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION] */
struct S786 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST] */
struct S787 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION] */
struct S788 {
	int id;
};

/* Struct for type ET_MANIFEST_TYPE */
struct S789 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY] */
struct S790 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE] */
struct S791 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION] */
struct S792 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CONSTANT] */
struct S793 {
	int id;
};

/* Struct for type ET_AGENT_ARGUMENT_OPERAND_LIST */
struct S794 {
	int id;
	T0* a1; /* left_parenthesis */
	T0* a3; /* right_parenthesis */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S795 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CALL_AGENT] */
struct S796 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_TARGET] */
struct S797 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ET_AGENT_OPEN_TARGET */
struct S798 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T6 a5; /* index */
};

/* Struct for type ET_DO_FUNCTION_INLINE_AGENT */
struct S799 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_INLINE_AGENT] */
struct S800 {
	int id;
};

/* Struct for type ET_ONCE_FUNCTION_INLINE_AGENT */
struct S801 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* declared_type */
	T0* a3; /* end_keyword */
	T0* a5; /* implicit_result */
	T0* a6; /* agent_keyword */
	T0* a7; /* preconditions */
	T0* a8; /* locals */
	T0* a9; /* compound */
	T0* a10; /* postconditions */
	T0* a11; /* rescue_clause */
	T0* a12; /* target */
	T0* a13; /* actual_arguments */
	T6 a14; /* index */
};

/* Struct for type ET_EXTERNAL_FUNCTION_INLINE_AGENT */
struct S802 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* declared_type */
	T0* a8; /* end_keyword */
	T0* a10; /* implicit_result */
	T0* a11; /* target */
	T0* a12; /* actual_arguments */
	T6 a13; /* index */
};

/* Struct for type ET_DO_PROCEDURE_INLINE_AGENT */
struct S803 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_ONCE_PROCEDURE_INLINE_AGENT */
struct S804 {
	int id;
	T0* a1; /* formal_arguments */
	T0* a2; /* end_keyword */
	T0* a4; /* agent_keyword */
	T0* a5; /* preconditions */
	T0* a6; /* locals */
	T0* a7; /* compound */
	T0* a8; /* postconditions */
	T0* a9; /* rescue_clause */
	T0* a10; /* target */
	T0* a11; /* actual_arguments */
	T6 a12; /* index */
};

/* Struct for type ET_EXTERNAL_PROCEDURE_INLINE_AGENT */
struct S805 {
	int id;
	T0* a1; /* language */
	T0* a2; /* agent_keyword */
	T0* a3; /* preconditions */
	T0* a4; /* alias_clause */
	T0* a5; /* postconditions */
	T0* a6; /* formal_arguments */
	T0* a7; /* end_keyword */
	T0* a9; /* target */
	T0* a10; /* actual_arguments */
	T6 a11; /* index */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_TARGET] */
struct S806 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S807 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S808 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S810 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S811 {
	int id;
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND] */
struct S812 {
	int id;
};

/* Struct for type ET_AGENT_TYPED_OPEN_ARGUMENT */
struct S813 {
	int id;
	T0* a1; /* type */
	T0* a2; /* left_brace */
	T0* a4; /* right_brace */
	T0* a5; /* question_mark */
	T6 a8; /* index */
};

/* Struct for type ET_TAGGED_ASSERTION */
struct S815 {
	int id;
	T0* a1; /* tag */
	T0* a2; /* expression */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S818 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET] */
struct S819 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER] */
struct S822 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION] */
struct S823 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [INTEGER] */
struct S824 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
struct S826 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER] */
struct S828 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S830 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a4; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S831 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S832 {
	int id;
};

/* Struct for type SPECIAL [ET_AGENT] */
struct S833 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT] */
struct S834 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_AGENT] */
struct S835 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE] */
struct S837 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE] */
struct S838 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S839 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE] */
struct S840 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE] */
struct S841 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FEATURE] */
struct S843 {
	int id;
};

/* Struct for type SPECIAL [ET_FEATURE] */
struct S844 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S845 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE] */
struct S847 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type SPECIAL [ET_DYNAMIC_FEATURE] */
struct S849 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE] */
struct S850 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE] */
struct S851 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, STRING] */
struct S852 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING] */
struct S854 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type RX_BYTE_CODE */
struct S857 {
	int id;
	T6 a1; /* count */
	T0* a6; /* byte_code */
	T0* a7; /* character_sets */
	T6 a8; /* capacity */
	T6 a10; /* character_sets_count */
	T6 a11; /* character_sets_capacity */
};

/* Struct for type RX_CASE_MAPPING */
struct S858 {
	int id;
	T0* a3; /* lower_table */
	T0* a4; /* flip_table */
};

/* Struct for type RX_CHARACTER_SET */
struct S859 {
	int id;
	T0* a2; /* set */
};

/* Struct for type SPECIAL [RX_CHARACTER_SET] */
struct S861 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type ARRAY [RX_CHARACTER_SET] */
struct S862 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT] */
struct S865 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE] */
struct S866 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S867 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S868 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S869 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_QUERY] */
struct S870 {
	int id;
	T6 a1; /* position */
	T0* a3; /* next_cursor */
	T0* a5; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]] */
struct S871 {
	int id;
};

/* Struct for type SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S872 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]] */
struct S873 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FEATURE] */
struct S874 {
	int id;
	T0* a1; /* container */
	T0* a2; /* next_cursor */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S875 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT] */
struct S876 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT] */
struct S877 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type STRING_TO_INTEGER_CONVERTOR */
struct S878 {
	int id;
	T11 a3; /* part1 */
	T6 a4; /* sign */
	T11 a5; /* part2 */
	T6 a6; /* last_state */
	T1 a7; /* internal_overflowed */
	T0* a9; /* leading_separators */
	T0* a10; /* trailing_separators */
	T1 a11; /* leading_separators_acceptable */
	T1 a12; /* trailing_separators_acceptable */
	T6 a13; /* conversion_type */
};

/* Struct for type C_STRING */
struct S881 {
	int id;
	T6 a1; /* count */
	T0* a2; /* managed_data */
};

/* Struct for type ET_SYSTEM_ERROR */
struct S882 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_INTERNAL_ERROR */
struct S883 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
};

/* Struct for type ET_VALIDITY_ERROR */
struct S884 {
	int id;
	T1 a1; /* ise_reported */
	T1 a2; /* se_reported */
	T1 a3; /* ve_reported */
	T1 a4; /* ge_reported */
	T0* a6; /* default_template */
	T0* a9; /* parameters */
	T0* a11; /* current_class */
	T0* a12; /* class_impl */
	T0* a13; /* position */
	T0* a15; /* code */
	T0* a18; /* etl_code */
	T1 a59; /* ise_fatal */
	T1 a60; /* se_fatal */
	T1 a61; /* ve_fatal */
	T1 a62; /* ge_fatal */
};

/* Struct for type ET_CLUSTER_ERROR */
struct S885 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* cluster */
};

/* Struct for type ET_SYNTAX_ERROR */
struct S886 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a11; /* filename */
	T0* a12; /* position */
	T1 a13; /* ise_reported */
	T1 a14; /* ise_fatal */
	T1 a15; /* se_reported */
	T1 a16; /* se_fatal */
	T1 a17; /* ve_reported */
	T1 a18; /* ve_fatal */
	T1 a19; /* ge_reported */
	T1 a20; /* ge_fatal */
};

/* Struct for type ET_XACE_FEATURE_OPTIONS */
struct S887 {
	int id;
	T0* a1; /* feature_name */
	T0* a2; /* options */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS] */
struct S888 {
	int id;
	T6 a2; /* count */
	T0* a3; /* internal_cursor */
	T0* a5; /* first_cell */
	T0* a6; /* last_cell */
};

/* Struct for type ET_XACE_WRONG_ROOT_ELEMENT_ERROR */
struct S889 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ATTRIBUTE_ERROR */
struct S890 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_ELEMENT_ERROR */
struct S891 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_MISSING_ELEMENT_ERROR */
struct S892 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING */
struct S893 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING */
struct S894 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_UNKNOWN_OPTION_NAME_WARNING */
struct S895 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING */
struct S896 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER */
struct S897 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET */
struct S898 {
	int id;
	T0* a1; /* static_type */
	T0* a2; /* first_type */
	T0* a3; /* agent_type */
	T0* a8; /* other_types */
};

/* Struct for type DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S900 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S901 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a6; /* last_cell */
	T6 a7; /* count */
};

/* Struct for type DS_PAIR [XM_POSITION, XM_NODE] */
struct S902 {
	int id;
	T0* a1; /* first */
	T0* a2; /* second */
};

/* Struct for type UC_UTF8_ROUTINES */
struct S903 {
	int id;
};

/* Struct for type UC_UTF8_STRING */
struct S904 {
	int id;
	T6 a2; /* count */
	T0* a6; /* area */
	T6 a22; /* byte_count */
	T6 a35; /* internal_hash_code */
	T6 a39; /* last_byte_index_input */
	T6 a40; /* last_byte_index_result */
};

/* Struct for type XM_EIFFEL_INPUT_STREAM */
struct S905 {
	int id;
	T0* a1; /* last_string */
	T6 a12; /* encoding */
	T0* a19; /* utf_queue */
	T0* a20; /* impl */
};

/* Struct for type KL_CHARACTER_BUFFER */
struct S906 {
	int id;
	T0* a3; /* as_special */
	T0* a6; /* area */
};

/* Struct for type KL_CHARACTER_ROUTINES */
struct S907 {
	int id;
};

/* Struct for type KL_STDIN_FILE */
struct S908 {
	int id;
	T1 a1; /* end_of_file */
	T0* a2; /* name */
	T2 a3; /* last_character */
	T0* a5; /* character_buffer */
	T14 a10; /* file_pointer */
	T6 a15; /* mode */
};

/* Struct for type ET_FILE_POSITION */
struct S909 {
	int id;
	T0* a2; /* filename */
	T6 a10; /* compressed_position */
};

/* Struct for type ET_CONSTRAINT_GENERIC_NAMED_TYPE */
struct S911 {
	int id;
	T0* a1; /* type_mark */
	T0* a2; /* name */
	T0* a3; /* actual_parameters */
};

/* Struct for type ET_FORMAL_PARAMETER_TYPE */
struct S913 {
	int id;
	T0* a3; /* name */
	T6 a4; /* index */
};

/* Struct for type KL_ARRAY_ROUTINES [INTEGER] */
struct S915 {
	int id;
};

/* Struct for type ARRAY [ET_TYPE] */
struct S916 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type TYPED_POINTER [SPECIAL [CHARACTER]] */
struct S918 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type ET_BRACED_TYPE_LIST */
struct S919 {
	int id;
	T0* a1; /* left_brace */
	T0* a3; /* right_brace */
	T6 a4; /* count */
	T0* a5; /* storage */
};

/* Struct for type ET_FORMAL_COMMA_ARGUMENT */
struct S920 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LOCAL_COMMA_VARIABLE */
struct S921 {
	int id;
	T0* a1; /* name_item */
	T0* a2; /* declared_type */
	T1 a6; /* is_used */
};

/* Struct for type ET_LABELED_COMMA_ACTUAL_PARAMETER */
struct S922 {
	int id;
	T0* a1; /* label_item */
	T0* a2; /* declared_type */
};

/* Struct for type ET_KEYWORD_EXPRESSION */
struct S923 {
	int id;
	T0* a1; /* keyword */
	T0* a2; /* expression */
};

/* Struct for type DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS] */
struct S925 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type UT_TRISTATE */
struct S926 {
	int id;
	T2 a4; /* value */
};

/* Struct for type SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S927 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY] */
struct S928 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY] */
struct S929 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, STRING] */
struct S930 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, STRING] */
struct S932 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S934 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a36; /* slots_position */
	T6 a37; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_NAME_TESTER */
struct S935 {
	int id;
};

/* Struct for type DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S937 {
	int id;
	T0* a1; /* key_equality_tester */
	T0* a2; /* internal_keys */
	T0* a3; /* equality_tester */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a26; /* slots_position */
	T6 a28; /* count */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type ET_ALIAS_NAME_TESTER */
struct S938 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS_NAME_LIST] */
struct S940 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a7; /* count */
};

/* Struct for type DS_HASH_SET [ET_CLASS_NAME] */
struct S941 {
	int id;
	T6 a1; /* capacity */
	T6 a2; /* modulus */
	T6 a4; /* last_position */
	T6 a5; /* free_slot */
	T6 a7; /* position */
	T0* a8; /* internal_cursor */
	T0* a10; /* equality_tester */
	T0* a11; /* special_item_routines */
	T0* a12; /* item_storage */
	T0* a13; /* clashes */
	T0* a15; /* slots */
	T6 a16; /* found_position */
	T6 a18; /* count */
	T6 a29; /* slots_position */
	T6 a33; /* clashes_previous_position */
};

/* Struct for type ET_FEATURE_ADAPTATION_RESOLVER */
struct S942 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* rename_table */
	T0* a5; /* export_table */
	T0* a6; /* undefine_table */
	T0* a7; /* redefine_table */
	T0* a8; /* select_table */
	T0* a9; /* replicable_features */
	T1 a10; /* has_fatal_error */
	T0* a11; /* free_parent_feature */
	T0* a12; /* parent_feature_list */
	T0* a13; /* free_inherited_feature */
	T0* a14; /* inherited_feature_list */
	T0* a15; /* free_redeclared_feature */
	T0* a16; /* redeclared_feature_list */
};

/* Struct for type ET_DOTNET_FEATURE_ADAPTATION_RESOLVER */
struct S943 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* dotnet_features */
	T0* a4; /* other_dotnet_features */
	T1 a5; /* has_fatal_error */
	T0* a6; /* free_parent_feature */
	T0* a7; /* parent_feature_list */
	T0* a8; /* free_inherited_feature */
	T0* a9; /* inherited_feature_list */
	T0* a10; /* free_redeclared_feature */
	T0* a11; /* redeclared_feature_list */
};

/* Struct for type ET_IDENTIFIER_TYPE_RESOLVER */
struct S944 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_feature */
};

/* Struct for type ET_ANCHORED_TYPE_CHECKER */
struct S945 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* anchored_type_sorter */
	T0* a3; /* universe */
	T0* a5; /* current_anchored_type */
};

/* Struct for type ET_SIGNATURE_CHECKER */
struct S946 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* parent_context */
	T1 a4; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER2 */
struct S947 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER2 */
struct S948 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
};

/* Struct for type ET_PRECURSOR_CHECKER */
struct S949 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* current_feature */
	T1 a5; /* has_fatal_error */
};

/* Struct for type ET_PARENT_CHECKER3 */
struct S950 {
	int id;
	T1 a1; /* has_fatal_error */
	T0* a2; /* current_class */
	T0* a3; /* classes_to_be_processed */
	T0* a4; /* universe */
};

/* Struct for type ET_FEATURE_CHECKER */
struct S951 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* type_checker */
	T0* a3; /* current_class */
	T0* a4; /* current_type */
	T0* a5; /* current_feature */
	T0* a7; /* current_feature_impl */
	T0* a8; /* current_class_impl */
	T0* a9; /* enclosing_inline_agents */
	T0* a10; /* overloaded_procedures */
	T0* a11; /* unused_overloaded_procedures_list */
	T0* a12; /* overloaded_queries */
	T0* a13; /* unused_overloaded_queries_list */
	T0* a14; /* best_overloaded_features */
	T0* a15; /* unused_contexts */
	T0* a16; /* current_context */
	T1 a18; /* has_fatal_error */
	T1 a19; /* in_assertion */
	T1 a20; /* in_invariant */
	T1 a22; /* in_precondition */
	T1 a23; /* in_postcondition */
	T0* a24; /* current_target_type */
	T1 a25; /* in_precursor */
	T0* a26; /* current_inline_agent */
	T1 a27; /* in_rescue */
};

/* Struct for type ET_SUPPLIER_BUILDER */
struct S952 {
	int id;
	T0* a1; /* universe */
	T0* a2; /* current_class */
	T0* a3; /* supplier_classes */
	T0* a5; /* type_checker */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS] */
struct S953 {
	int id;
	T0* a1; /* items */
	T0* a2; /* indexes */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* sorted_items */
	T0* a7; /* cycle */
};

/* Struct for type DS_HASH_TABLE [ET_BASE_TYPE, INTEGER] */
struct S954 {
	int id;
	T0* a1; /* equality_tester */
	T0* a2; /* key_equality_tester */
	T0* a3; /* internal_keys */
	T6 a4; /* capacity */
	T6 a5; /* modulus */
	T6 a7; /* last_position */
	T6 a8; /* free_slot */
	T6 a10; /* position */
	T0* a11; /* internal_cursor */
	T0* a13; /* special_item_routines */
	T0* a14; /* item_storage */
	T0* a15; /* special_key_routines */
	T0* a16; /* key_storage */
	T0* a17; /* clashes */
	T0* a19; /* slots */
	T6 a20; /* found_position */
	T6 a21; /* count */
	T6 a31; /* slots_position */
	T6 a32; /* clashes_previous_position */
};

/* Struct for type ET_PARENT_CHECKER1 */
struct S955 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* universe */
	T1 a3; /* has_fatal_error */
	T0* a4; /* current_parent */
};

/* Struct for type ET_FORMAL_PARAMETER_CHECKER1 */
struct S956 {
	int id;
	T0* a1; /* current_class */
	T0* a2; /* formal_parameter_sorter */
	T0* a3; /* direct_formal_parameter_sorter */
	T0* a4; /* universe */
	T1 a5; /* has_fatal_error */
	T0* a7; /* current_formal */
};

/* Struct for type SPECIAL [ET_BASE_TYPE] */
struct S961 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_BASE_TYPE] */
struct S962 {
	int id;
};

/* Struct for type TO_SPECIAL [AP_OPTION] */
struct S963 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST] */
struct S964 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_NAMESPACE_RESOLVER_CONTEXT */
struct S965 {
	int id;
	T0* a5; /* context */
};

/* Struct for type DS_LINKED_QUEUE [STRING] */
struct S967 {
	int id;
	T0* a3; /* first_cell */
	T6 a4; /* count */
	T0* a5; /* last_cell */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING] */
struct S968 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_XACE_LIBRARY] */
struct S969 {
	int id;
	T0* a1; /* area */
};

/* Struct for type XM_EIFFEL_CHARACTER_ENTITY */
struct S970 {
	int id;
	T6 a5; /* code */
};

/* Struct for type DS_LINKED_STACK [INTEGER] */
struct S971 {
	int id;
	T6 a3; /* count */
	T0* a4; /* first_cell */
};

/* Struct for type DS_BILINKABLE [XM_POSITION] */
struct S972 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_POSITION] */
struct S973 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [XM_EIFFEL_SCANNER] */
struct S974 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S975 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S976 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S978 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF] */
struct S980 {
	int id;
};

/* Struct for type KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME] */
struct S981 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME] */
struct S982 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT] */
struct S983 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT] */
struct S984 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT] */
struct S985 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [STRING] */
struct S986 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a5; /* current_cell */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_BILINKABLE [STRING] */
struct S987 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_PARSER_NAME] */
struct S988 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_DECLARATION] */
struct S989 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [BOOLEAN] */
struct S990 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]] */
struct S991 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ELEMENT_CONTENT] */
struct S992 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]] */
struct S993 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT] */
struct S994 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_BILINKED_LIST [STRING]] */
struct S995 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [XM_DTD_EXTERNAL_ID] */
struct S996 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER] */
struct S998 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER] */
struct S999 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY] */
struct S1000 {
	int id;
	T0* a1; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME] */
struct S1001 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS] */
struct S1002 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME] */
struct S1003 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE] */
struct S1004 {
	int id;
	T0* a1; /* area */
};

/* Struct for type EXCEPTIONS */
struct S1005 {
	int id;
};

/* Struct for type SPECIAL [ET_ASSERTION_ITEM] */
struct S1006 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM] */
struct S1007 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM] */
struct S1008 {
	int id;
	T0* a1; /* next_cursor */
	T6 a2; /* position */
	T0* a3; /* container */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE] */
struct S1009 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS] */
struct S1010 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_XACE_CLUSTER] */
struct S1011 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER] */
struct S1012 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER] */
struct S1013 {
	int id;
	T0* a1; /* container */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD] */
struct S1015 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_KEYWORD] */
struct S1016 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECURSOR_KEYWORD] */
struct S1017 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL] */
struct S1018 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSITION] */
struct S1019 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BIT_CONSTANT] */
struct S1020 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BOOLEAN_CONSTANT] */
struct S1021 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BREAK] */
struct S1022 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHARACTER_CONSTANT] */
struct S1023 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CURRENT] */
struct S1024 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FREE_OPERATOR] */
struct S1025 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INTEGER_CONSTANT] */
struct S1026 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_OPERATOR] */
struct S1027 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING] */
struct S1028 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_REAL_CONSTANT] */
struct S1029 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RESULT] */
struct S1030 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RETRY_INSTRUCTION] */
struct S1031 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SYMBOL_OPERATOR] */
struct S1032 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VOID] */
struct S1033 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_SEMICOLON_SYMBOL] */
struct S1034 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_SYMBOL] */
struct S1035 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUESTION_MARK_SYMBOL] */
struct S1036 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_LIST] */
struct S1038 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_ITEM] */
struct S1039 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_LIST] */
struct S1040 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM] */
struct S1041 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INDEXING_TERM_ITEM] */
struct S1042 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_LIST] */
struct S1043 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM] */
struct S1044 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_PARAMETER] */
struct S1045 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_CREATOR] */
struct S1046 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_TYPE] */
struct S1048 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST] */
struct S1049 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM] */
struct S1050 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_OBSOLETE] */
struct S1051 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_LIST] */
struct S1052 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT] */
struct S1053 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_ITEM] */
struct S1054 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_LIST] */
struct S1055 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_RENAME_ITEM] */
struct S1056 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT_LIST] */
struct S1057 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPORT] */
struct S1058 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_EXPORT] */
struct S1059 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLIENTS] */
struct S1060 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_ITEM] */
struct S1061 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST] */
struct S1062 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME_ITEM] */
struct S1063 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR_LIST] */
struct S1064 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATOR] */
struct S1065 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_LIST] */
struct S1066 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE_ITEM] */
struct S1067 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONVERT_FEATURE] */
struct S1068 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_LIST] */
struct S1069 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE_ITEM] */
struct S1070 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE_LIST] */
struct S1071 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_CLAUSE] */
struct S1072 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_QUERY] */
struct S1073 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PROCEDURE] */
struct S1078 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTERNAL_ALIAS] */
struct S1079 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ASSIGNER] */
struct S1080 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE_NAME] */
struct S1081 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXTENDED_FEATURE_NAME] */
struct S1082 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ALIAS_NAME] */
struct S1083 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST] */
struct S1084 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT] */
struct S1085 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM] */
struct S1086 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_LIST] */
struct S1087 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE] */
struct S1088 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM] */
struct S1089 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PRECONDITIONS] */
struct S1090 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_POSTCONDITIONS] */
struct S1091 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INVARIANTS] */
struct S1092 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LOOP_INVARIANTS] */
struct S1093 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_VARIANT] */
struct S1094 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_COMPOUND] */
struct S1095 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_TYPE] */
struct S1096 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST] */
struct S1097 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM] */
struct S1098 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_TYPE] */
struct S1099 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSTRUCTION] */
struct S1100 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CREATE_EXPRESSION] */
struct S1101 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_IF_INSTRUCTION] */
struct S1102 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART_LIST] */
struct S1103 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ELSEIF_PART] */
struct S1104 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INSPECT_INSTRUCTION] */
struct S1105 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART_LIST] */
struct S1106 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WHEN_PART] */
struct S1108 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_LIST] */
struct S1109 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_ITEM] */
struct S1110 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE] */
struct S1111 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CHOICE_CONSTANT] */
struct S1112 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DEBUG_INSTRUCTION] */
struct S1114 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_LIST] */
struct S1115 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_STRING_ITEM] */
struct S1116 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION] */
struct S1117 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_EXPRESSION] */
struct S1118 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STATIC_CALL_EXPRESSION] */
struct S1119 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST] */
struct S1120 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_EXPRESSION_ITEM] */
struct S1121 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_WRITABLE] */
struct S1122 {
	int id;
	T0* a1; /* area */
};

/* Struct for type ET_AGENT_IMPLICIT_CURRENT_TARGET */
struct S1123 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* index */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_EXPRESSION] */
struct S1124 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST] */
struct S1125 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION] */
struct S1126 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_ARRAY] */
struct S1127 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_MANIFEST_TUPLE] */
struct S1128 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_STRIP_EXPRESSION] */
struct S1129 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CONSTANT] */
struct S1130 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_CALL_AGENT] */
struct S1132 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_INLINE_AGENT] */
struct S1133 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_TARGET] */
struct S1134 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST] */
struct S1135 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM] */
struct S1136 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND] */
struct S1137 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TYPE_SET] */
struct S1138 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER] */
struct S1139 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET] */
struct S1140 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_AGENT] */
struct S1141 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE] */
struct S1142 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_FEATURE] */
struct S1143 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE] */
struct S1144 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_FEATURE] */
struct S1145 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING] */
struct S1146 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]] */
struct S1147 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]] */
struct S1148 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_NESTED_TYPE_CONTEXT] */
struct S1149 {
	int id;
	T0* a1; /* area */
};

/* Struct for type UC_UNICODE_ROUTINES */
struct S1150 {
	int id;
};

/* Struct for type ET_XACE_INVALID_EXPRESSION_ERROR */
struct S1151 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type INTEGER_OVERFLOW_CHECKER */
struct S1155 {
	int id;
	T0* a7; /* integer_overflow_state1 */
	T0* a8; /* integer_overflow_state2 */
	T0* a10; /* natural_overflow_state1 */
	T0* a11; /* natural_overflow_state2 */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS] */
struct S1156 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_FEATURE_OPTIONS] */
struct S1157 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_LINKED_QUEUE [CHARACTER] */
struct S1160 {
	int id;
	T6 a1; /* count */
	T0* a3; /* first_cell */
	T0* a5; /* last_cell */
};

/* Struct for type UC_UTF16_ROUTINES */
struct S1161 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS] */
struct S1162 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_LINKABLE [ET_XACE_CLASS_OPTIONS] */
struct S1163 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY] */
struct S1164 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING] */
struct S1165 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1167 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1169 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE] */
struct S1170 {
	int id;
};

/* Struct for type SPECIAL [ET_FLATTENED_FEATURE] */
struct S1172 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1173 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1175 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST] */
struct S1176 {
	int id;
};

/* Struct for type SPECIAL [ET_CLASS_NAME_LIST] */
struct S1177 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST] */
struct S1178 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_CLASS_NAME] */
struct S1179 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
	T0* a3; /* next_cursor */
};

/* Struct for type DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME] */
struct S1180 {
	int id;
	T6 a6; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a11; /* internal_cursor */
	T0* a14; /* item_storage */
	T0* a16; /* key_equality_tester */
	T0* a17; /* internal_keys */
	T6 a18; /* position */
	T6 a19; /* last_position */
	T6 a20; /* free_slot */
	T6 a22; /* modulus */
	T6 a29; /* slots_position */
	T0* a30; /* equality_tester */
	T6 a31; /* clashes_previous_position */
	T0* a34; /* key_storage */
	T0* a35; /* clashes */
	T0* a36; /* slots */
	T0* a38; /* special_item_routines */
	T0* a39; /* special_key_routines */
};

/* Struct for type DS_HASH_SET [ET_FEATURE_NAME] */
struct S1181 {
	int id;
	T6 a5; /* capacity */
	T6 a7; /* count */
	T6 a8; /* found_position */
	T0* a10; /* internal_cursor */
	T0* a15; /* item_storage */
	T6 a16; /* modulus */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T0* a22; /* equality_tester */
	T0* a29; /* special_item_routines */
	T0* a30; /* clashes */
	T0* a32; /* slots */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME] */
struct S1182 {
	int id;
	T6 a1; /* count */
	T6 a8; /* capacity */
	T6 a9; /* found_position */
	T0* a13; /* internal_cursor */
	T0* a17; /* key_storage */
	T0* a18; /* item_storage */
	T0* a20; /* key_equality_tester */
	T0* a21; /* internal_keys */
	T6 a22; /* position */
	T6 a23; /* last_position */
	T6 a24; /* free_slot */
	T6 a26; /* modulus */
	T0* a32; /* equality_tester */
	T6 a33; /* slots_position */
	T6 a34; /* clashes_previous_position */
	T0* a38; /* clashes */
	T0* a39; /* slots */
	T0* a41; /* special_item_routines */
	T0* a42; /* special_key_routines */
};

/* Struct for type DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1183 {
	int id;
	T0* a6; /* internal_cursor */
	T6 a10; /* found_position */
	T0* a15; /* item_storage */
	T0* a16; /* key_storage */
	T6 a17; /* count */
	T6 a18; /* last_position */
	T6 a19; /* free_slot */
	T6 a20; /* position */
	T6 a21; /* capacity */
	T0* a27; /* equality_tester */
	T0* a28; /* key_equality_tester */
	T0* a29; /* internal_keys */
	T0* a34; /* clashes */
	T6 a35; /* modulus */
	T0* a36; /* slots */
	T6 a37; /* slots_position */
	T6 a38; /* clashes_previous_position */
	T0* a42; /* special_item_routines */
	T0* a43; /* special_key_routines */
};

/* Struct for type ET_DOTNET_SIGNATURE_TESTER */
struct S1184 {
	int id;
	T0* a1; /* universe */
};

/* Struct for type DS_HASH_SET [ET_DOTNET_FEATURE] */
struct S1185 {
	int id;
	T6 a1; /* capacity */
	T6 a4; /* found_position */
	T0* a7; /* item_storage */
	T6 a8; /* modulus */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T0* a13; /* internal_cursor */
	T0* a15; /* equality_tester */
	T6 a16; /* count */
	T6 a23; /* slots_position */
	T0* a24; /* special_item_routines */
	T0* a25; /* clashes */
	T0* a27; /* slots */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1187 {
	int id;
	T6 a3; /* found_position */
	T0* a6; /* item_storage */
	T0* a7; /* key_equality_tester */
	T0* a8; /* internal_keys */
	T6 a9; /* count */
	T6 a10; /* last_position */
	T6 a11; /* free_slot */
	T6 a12; /* position */
	T6 a13; /* capacity */
	T6 a16; /* slots_position */
	T0* a18; /* equality_tester */
	T0* a19; /* internal_cursor */
	T0* a21; /* key_storage */
	T0* a22; /* clashes */
	T6 a23; /* modulus */
	T0* a24; /* slots */
	T6 a25; /* clashes_previous_position */
	T0* a32; /* special_item_routines */
	T0* a33; /* special_key_routines */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER] */
struct S1188 {
	int id;
	T0* a2; /* cycle */
	T0* a3; /* counts */
	T0* a4; /* successors */
	T0* a5; /* items */
	T0* a6; /* sorted_items */
	T0* a7; /* indexes */
};

/* Struct for type ET_REDECLARED_FEATURE */
struct S1189 {
	int id;
	T0* a1; /* flattened_feature */
	T0* a2; /* parent_feature */
	T6 a3; /* first_seed */
	T0* a4; /* other_seeds */
	T0* a5; /* next */
	T1 a6; /* is_selected */
	T0* a7; /* replicated_features */
	T0* a8; /* replicated_seeds */
};

/* Struct for type DS_ARRAYED_LIST [ET_CLASS] */
struct S1190 {
	int id;
	T6 a3; /* count */
	T0* a6; /* storage */
	T0* a7; /* special_routines */
	T6 a8; /* capacity */
	T0* a9; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_CLASS] */
struct S1191 {
	int id;
	T6 a2; /* position */
	T6 a4; /* count */
	T6 a5; /* last_position */
	T6 a6; /* free_slot */
	T6 a8; /* modulus */
	T6 a14; /* capacity */
	T6 a16; /* slots_position */
	T6 a17; /* clashes_previous_position */
	T0* a18; /* key_equality_tester */
	T0* a19; /* equality_tester */
	T0* a20; /* internal_keys */
	T0* a21; /* internal_cursor */
	T6 a23; /* found_position */
	T0* a24; /* item_storage */
	T0* a25; /* key_storage */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a29; /* special_item_routines */
	T0* a30; /* special_key_routines */
};

/* Struct for type DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]] */
struct S1192 {
	int id;
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
	T6 a9; /* count */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER] */
struct S1194 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER] */
struct S1196 {
	int id;
	T0* a3; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER] */
struct S1197 {
	int id;
	T0* a3; /* cycle */
	T0* a4; /* sorted_items */
	T0* a5; /* items */
	T0* a6; /* counts */
	T0* a7; /* successors */
	T0* a8; /* indexes */
};

/* Struct for type TO_SPECIAL [ET_BASE_TYPE] */
struct S1198 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]] */
struct S1200 {
	int id;
	T6 a2; /* count */
	T0* a4; /* last_cell */
	T0* a5; /* internal_cursor */
	T0* a7; /* first_cell */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]] */
struct S1201 {
	int id;
	T1 a1; /* before */
	T0* a3; /* current_cell */
	T0* a4; /* next_cursor */
	T0* a5; /* container */
	T1 a6; /* after */
};

/* Struct for type DS_LINKABLE [INTEGER] */
struct S1203 {
	int id;
	T6 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING] */
struct S1204 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [XM_EIFFEL_ENTITY_DEF] */
struct S1205 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT] */
struct S1206 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
};

/* Struct for type DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT] */
struct S1207 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
	T0* a3; /* left */
};

/* Struct for type TO_SPECIAL [ET_ASSERTION_ITEM] */
struct S1210 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_XACE_CLUSTER] */
struct S1211 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [NATURAL_8] */
struct S1217 {
	int id;
	T6 z1; /* count */
	T8 z2[1]; /* item */
};

/* Struct for type STRING_SEARCHER */
struct S1218 {
	int id;
	T0* a2; /* deltas */
};

/* Struct for type DS_HASH_SET [XM_NAMESPACE] */
struct S1220 {
	int id;
	T6 a3; /* position */
	T0* a6; /* item_storage */
	T0* a7; /* equality_tester */
	T6 a8; /* last_position */
	T6 a9; /* capacity */
	T6 a12; /* slots_position */
	T6 a14; /* count */
	T6 a15; /* modulus */
	T6 a16; /* clashes_previous_position */
	T6 a21; /* free_slot */
	T0* a22; /* internal_cursor */
	T6 a24; /* found_position */
	T0* a26; /* clashes */
	T0* a27; /* slots */
	T0* a28; /* special_item_routines */
};

/* Struct for type XM_COMMENT */
struct S1221 {
	int id;
	T0* a1; /* data */
	T0* a2; /* parent */
};

/* Struct for type XM_PROCESSING_INSTRUCTION */
struct S1222 {
	int id;
	T0* a1; /* target */
	T0* a2; /* data */
	T0* a3; /* parent */
};

/* Struct for type XM_CHARACTER_DATA */
struct S1223 {
	int id;
	T0* a1; /* content */
	T0* a2; /* parent */
};

/* Struct for type XM_NAMESPACE */
struct S1224 {
	int id;
	T0* a2; /* uri */
	T0* a4; /* ns_prefix */
};

/* Struct for type ET_FEATURE_IDS */
struct S1225 {
	int id;
	T6 a1; /* count */
	T0* a4; /* feature_ids */
};

/* Struct for type ET_FEATURE_LIST */
struct S1226 {
	int id;
	T0* a2; /* storage */
	T6 a3; /* count */
};

/* Struct for type ET_PARENT_FEATURE */
struct S1227 {
	int id;
	T0* a3; /* next */
	T0* a4; /* precursor_feature */
	T0* a5; /* parent */
	T0* a6; /* new_name */
	T0* a7; /* undefine_name */
	T0* a8; /* redefine_name */
	T0* a9; /* select_name */
	T0* a10; /* merged_feature */
};

/* Struct for type DS_QUICK_SORTER [ET_QUERY] */
struct S1228 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type DS_QUICK_SORTER [ET_PROCEDURE] */
struct S1229 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type ET_INHERITED_FEATURE */
struct S1230 {
	int id;
	T0* a1; /* next */
	T0* a2; /* parent_feature */
	T0* a3; /* flattened_feature */
	T0* a4; /* flattened_parent */
	T6 a5; /* first_seed */
	T0* a6; /* other_seeds */
	T1 a7; /* is_selected */
	T0* a8; /* replicated_features */
	T0* a9; /* replicated_seeds */
};

/* Struct for type ET_DYNAMIC_TARGET_LIST */
struct S1236 {
	int id;
	T6 a2; /* count */
	T0* a4; /* storage */
};

/* Struct for type TYPED_POINTER [NATURAL_8] */
struct S1237 {
	int id;
	T14 a1; /* to_pointer */
};

/* Struct for type ET_CONVERT_EXPRESSION */
struct S1240 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_INFIX_CAST_EXPRESSION */
struct S1241 {
	int id;
	T6 a2; /* index */
	T0* a3; /* expression */
	T0* a4; /* type */
};

/* Struct for type ET_COMPRESSED_POSITION */
struct S1244 {
	int id;
	T6 a3; /* compressed_position */
};

/* Struct for type DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]] */
struct S1245 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type ET_REPLICATED_FEATURE */
struct S1247 {
	int id;
	T0* a1; /* features */
	T6 a2; /* selected_count */
};

/* Struct for type DS_LINKED_LIST [ET_ADAPTED_FEATURE] */
struct S1248 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_PARENT_FEATURE] */
struct S1249 {
	int id;
	T0* a1; /* special_routines */
	T0* a2; /* storage */
	T6 a3; /* capacity */
	T0* a4; /* internal_cursor */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST [ET_DOTNET_FEATURE] */
struct S1251 {
	int id;
	T0* a1; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER] */
struct S1252 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type DS_LINKED_LIST [ET_PARENT_FEATURE] */
struct S1253 {
	int id;
	T0* a2; /* internal_cursor */
	T0* a4; /* first_cell */
	T0* a5; /* last_cell */
	T6 a6; /* count */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1254 {
	int id;
	T1 a1; /* after */
	T0* a3; /* current_cell */
	T0* a4; /* container */
	T1 a5; /* before */
	T0* a6; /* next_cursor */
};

/* Struct for type ARRAY [BOOLEAN] */
struct S1255 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_ARRAYED_LIST [ET_FORMAL_PARAMETER] */
struct S1256 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
	T0* a5; /* special_routines */
	T6 a6; /* capacity */
	T0* a7; /* internal_cursor */
};

/* Struct for type SPECIAL [ARRAY [INTEGER]] */
struct S1257 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [SPECIAL [ARRAY [INTEGER]]] */
struct S1258 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type SPECIAL [NATURAL_64] */
struct S1259 {
	int id;
	T6 z1; /* count */
	T11 z2[1]; /* item */
};

/* Struct for type ARRAY [NATURAL_64] */
struct S1260 {
	int id;
	T0* a1; /* area */
	T6 a2; /* lower */
	T6 a3; /* upper */
};

/* Struct for type DS_LINKABLE [CHARACTER] */
struct S1261 {
	int id;
	T2 a1; /* item */
	T0* a2; /* right */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME] */
struct S1263 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_FLATTENED_FEATURE] */
struct S1264 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME] */
struct S1265 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_CLASS_NAME_LIST] */
struct S1266 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1267 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_RENAME] */
struct S1268 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME] */
struct S1270 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_RENAME] */
struct S1272 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [ET_FEATURE_NAME] */
struct S1273 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1274 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME] */
struct S1275 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1277 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1278 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1280 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE] */
struct S1282 {
	int id;
};

/* Struct for type SPECIAL [ET_DOTNET_FEATURE] */
struct S1283 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE] */
struct S1284 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE] */
struct S1285 {
	int id;
};

/* Struct for type SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1286 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1288 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1290 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1291 {
	int id;
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1293 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_CLASS] */
struct S1294 {
	int id;
	T6 a1; /* position */
	T0* a2; /* next_cursor */
	T0* a3; /* container */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS] */
struct S1295 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS] */
struct S1297 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type SPECIAL [DS_LINKABLE [INTEGER]] */
struct S1298 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]] */
struct S1299 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]] */
struct S1300 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER] */
struct S1302 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER] */
struct S1303 {
	int id;
	T6 a1; /* count */
	T6 a2; /* last_position */
	T6 a3; /* free_slot */
	T6 a5; /* position */
	T6 a7; /* modulus */
	T6 a13; /* capacity */
	T6 a15; /* slots_position */
	T0* a16; /* equality_tester */
	T0* a17; /* key_equality_tester */
	T0* a18; /* internal_keys */
	T0* a19; /* internal_cursor */
	T6 a21; /* found_position */
	T0* a22; /* item_storage */
	T0* a23; /* key_storage */
	T0* a24; /* clashes */
	T0* a25; /* slots */
	T0* a27; /* special_item_routines */
	T0* a28; /* special_key_routines */
	T6 a29; /* clashes_previous_position */
};

/* Struct for type DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]] */
struct S1304 {
	int id;
	T0* a1; /* item */
	T0* a2; /* left */
	T0* a3; /* right */
};

/* Struct for type ET_DOTNET_ASSEMBLY_ERROR */
struct S1306 {
	int id;
	T0* a2; /* default_template */
	T0* a5; /* parameters */
	T0* a7; /* code */
	T0* a9; /* etl_code */
	T0* a12; /* assembly */
};

/* Struct for type AP_OPTION_COMPARATOR */
struct S1307 {
	int id;
};

/* Struct for type DS_QUICK_SORTER [AP_OPTION] */
struct S1308 {
	int id;
	T0* a1; /* comparator */
};

/* Struct for type STD_FILES */
struct S1316 {
	int id;
	T0* a2; /* default_output */
};

/* Struct for type PLATFORM */
struct S1317 {
	int id;
};

/* Struct for type DS_LINKABLE [XM_NODE] */
struct S1319 {
	int id;
	T0* a1; /* right */
	T0* a2; /* item */
};

/* Struct for type XM_NODE_TYPER */
struct S1320 {
	int id;
	T0* a1; /* element */
	T0* a3; /* xml_attribute */
	T0* a5; /* composite */
	T0* a6; /* document */
	T0* a7; /* character_data */
	T0* a8; /* processing_instruction */
	T0* a9; /* comment */
};

/* Struct for type SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1327 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR] */
struct S1328 {
	int id;
};

/* Struct for type ET_SEEDED_QUERY_COMPARATOR */
struct S1329 {
	int id;
};

/* Struct for type ET_SEEDED_PROCEDURE_COMPARATOR */
struct S1332 {
	int id;
};

/* Struct for type KL_STRING_INPUT_STREAM */
struct S1336 {
	int id;
	T1 a1; /* end_of_input */
	T2 a3; /* last_character */
	T0* a6; /* string */
	T6 a7; /* location */
};

/* Struct for type ET_CONVERT_TO_EXPRESSION */
struct S1339 {
	int id;
	T6 a1; /* index */
	T0* a2; /* convert_feature */
	T0* a3; /* expression */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST */
struct S1348 {
	int id;
	T6 a1; /* count */
	T0* a4; /* storage */
};

/* Struct for type ET_AGENT_IMPLICIT_OPEN_ARGUMENT */
struct S1349 {
	int id;
	T0* a1; /* agent_expression */
	T6 a2; /* argument_index */
	T6 a4; /* index */
};

/* Struct for type SPECIAL [XM_NAMESPACE] */
struct S1353 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_EQUALITY_TESTER [XM_NAMESPACE] */
struct S1354 {
	int id;
};

/* Struct for type DS_HASH_SET_CURSOR [XM_NAMESPACE] */
struct S1355 {
	int id;
	T0* a1; /* container */
	T6 a2; /* position */
};

/* Struct for type KL_SPECIAL_ROUTINES [XM_NAMESPACE] */
struct S1356 {
	int id;
};

/* Struct for type SPECIAL [ET_DYNAMIC_TARGET] */
struct S1357 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET] */
struct S1358 {
	int id;
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE] */
struct S1359 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_ADAPTED_FEATURE] */
struct S1360 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE] */
struct S1361 {
	int id;
};

/* Struct for type SPECIAL [ET_PARENT_FEATURE] */
struct S1362 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE] */
struct S1363 {
	int id;
	T0* a3; /* container */
	T6 a4; /* position */
	T0* a6; /* next_cursor */
};

/* Struct for type DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE] */
struct S1364 {
	int id;
	T0* a1; /* container */
	T1 a2; /* before */
	T1 a3; /* after */
	T0* a4; /* current_cell */
	T0* a5; /* next_cursor */
};

/* Struct for type DS_LINKABLE [ET_DOTNET_FEATURE] */
struct S1365 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

/* Struct for type SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1366 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER] */
struct S1367 {
	int id;
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER] */
struct S1368 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER] */
struct S1369 {
	int id;
	T0* a1; /* next_cursor */
	T0* a4; /* container */
	T6 a5; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME] */
struct S1372 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_RENAME] */
struct S1373 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME] */
struct S1374 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER] */
struct S1375 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [ET_REPLICABLE_FEATURE] */
struct S1376 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DOTNET_FEATURE] */
struct S1377 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE] */
struct S1378 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]] */
struct S1379 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1381 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1383 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS] */
struct S1384 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type TO_SPECIAL [DS_LINKABLE [INTEGER]] */
struct S1385 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER] */
struct S1388 {
	int id;
	T0* a1; /* table */
	T0* a2; /* equality_tester */
	T0* a3; /* internal_cursor */
};

/* Struct for type DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
struct S1390 {
	int id;
	T0* a1; /* next_cursor */
	T0* a2; /* container */
	T6 a3; /* position */
};

/* Struct for type ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR */
struct S1391 {
	int id;
	T0* a5; /* parameters */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_PRECURSOR] */
struct S1398 {
	int id;
	T0* a1; /* area */
};

/* Struct for type SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1399 {
	int id;
	T6 z1; /* count */
	T0* z2[1]; /* item */
};

/* Struct for type KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1400 {
	int id;
};

/* Struct for type TO_SPECIAL [XM_NAMESPACE] */
struct S1401 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_DYNAMIC_TARGET] */
struct S1402 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_PARENT_FEATURE] */
struct S1403 {
	int id;
	T0* a1; /* area */
};

/* Struct for type TO_SPECIAL [ET_LIKE_IDENTIFIER] */
struct S1404 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER] */
struct S1409 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER] */
struct S1411 {
	int id;
	T0* a1; /* container */
	T0* a2; /* table_cursor */
};

/* Struct for type CONSOLE */
struct S1412 {
	int id;
	T14 a1; /* file_pointer */
	T0* a3; /* name */
	T6 a4; /* mode */
};

/* Struct for type TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT] */
struct S1413 {
	int id;
	T0* a1; /* area */
};

/* Struct for type DS_LINKABLE [ET_PARENT_FEATURE] */
struct S1416 {
	int id;
	T0* a1; /* item */
	T0* a2; /* right */
};

typedef struct {
	int id;
	EIF_BOOLEAN is_special;
} EIF_TYPE;


extern T0* gems(char* s, T6 c);
/* Call to ANY.same_type */
extern T1 T19x28T0(T0* C, T0* a1);
/* Call to KI_CHARACTER_INPUT_STREAM.name */
extern T0* T27x1654(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_to_string */
extern T6 T27x1643T0T6T6(T0* C, T0* a1, T6 a2, T6 a3);
/* Call to KI_CHARACTER_INPUT_STREAM.end_of_input */
extern T1 T27x1652(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.last_character */
extern T2 T27x1655(T0* C);
/* Call to UT_ERROR.default_message */
extern T0* T63x8491(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T144x11421T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.base_type */
extern T0* T144x11407(T0* C);
/* Call to ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T144x11403T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T144x11400(T0* C);
/* Call to ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T144x11420T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.hash_code */
extern T6 T144x23(T0* C);
/* Call to ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T144x11418T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T144x11419T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.queries */
extern T0* T144x11409(T0* C);
/* Call to ET_DYNAMIC_TYPE.base_class */
extern T0* T144x11408(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_expanded */
extern T1 T144x11437(T0* C);
/* Call to ET_DYNAMIC_TYPE.id */
extern T6 T144x11416(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_special */
extern T1 T144x11401(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_generic */
extern T1 T144x11399(T0* C);
/* Call to ET_DYNAMIC_TYPE.next_type */
extern T0* T144x11430(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedure_calls */
extern T0* T144x11423(T0* C);
/* Call to ET_DYNAMIC_TYPE.query_calls */
extern T0* T144x11422(T0* C);
/* Call to ET_DYNAMIC_TYPE.procedures */
extern T0* T144x11410(T0* C);
/* Call to ET_DYNAMIC_TYPE.is_alive */
extern T1 T144x11396(T0* C);
/* Call to ET_DYNAMIC_TYPE.static_type */
extern T0* T144x11440(T0* C);
/* Call to ET_DYNAMIC_TYPE.has_static */
extern T1 T144x11402(T0* C);
/* Call to ET_BASE_TYPE.to_text */
extern T0* T145x5939(T0* C);
/* Call to ET_BASE_TYPE.direct_base_class */
extern T0* T145x5883T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.base_type_index_of_label */
extern T6 T145x5889T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.upper_name */
extern T0* T145x5879(T0* C);
/* Call to ET_BASE_TYPE.name */
extern T0* T145x5878(T0* C);
/* Call to ET_BASE_TYPE.position */
extern T0* T145x5943(T0* C);
/* Call to ET_BASE_TYPE.actual_parameter_count */
extern T6 T145x5825(T0* C);
/* Call to ET_BASE_TYPE.base_type_actual */
extern T0* T145x5887T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.conforms_to_type */
extern T1 T145x5925T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.reference_conforms_to_type */
extern T1 T145x5930T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.context_same_base_bit_type */
extern T1 T145x6001T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_base_tuple_type */
extern T1 T145x6004T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type */
extern T0* T145x5979T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_base_class_type */
extern T1 T145x6002T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_bit_type */
extern T1 T145x6007T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_tuple_type */
extern T1 T145x6010T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_class_type */
extern T1 T145x6008T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T145x6009T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_conforms_to_type */
extern T1 T145x6005T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_is_type_reference */
extern T1 T145x5989T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_base_type_index_of_label */
extern T6 T145x5982T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.actual_parameters */
extern T0* T145x5818(T0* C);
/* Call to ET_BASE_TYPE.resolved_formal_parameters */
extern T0* T145x5974T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.is_generic */
extern T1 T145x5826(T0* C);
/* Call to ET_BASE_TYPE.conforms_to_context */
extern T1 T145x6006T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_BASE_TYPE.context_same_named_bit_type */
extern T1 T145x5997T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_tuple_type */
extern T1 T145x6000T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_same_named_class_type */
extern T1 T145x5998T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_class */
extern T0* T145x5978T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_formal_parameter_type */
extern T1 T145x5999T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.context_base_type_actual */
extern T0* T145x5980T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_BASE_TYPE.context_base_type_actual_count */
extern T6 T145x5984T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_named_type */
extern T0* T145x5983T0(T0* C, T0* a1);
/* Call to ET_BASE_TYPE.context_same_named_type */
extern T1 T145x5994T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_BASE_TYPE.same_syntactical_type */
extern T1 T145x5908T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_BASE_TYPE.is_expanded */
extern T1 T145x5829(T0* C);
/* Call to ET_BASE_TYPE.same_base_type */
extern T1 T145x5910T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_QUERY.first_seed */
extern T6 T147x11545(T0* C);
/* Call to ET_QUERY.lower_name */
extern T0* T147x11464(T0* C);
/* Call to ET_QUERY.name */
extern T0* T147x11542(T0* C);
/* Call to ET_QUERY.type */
extern T0* T147x11543(T0* C);
/* Call to ET_QUERY.overloaded_alias_name */
extern T0* T147x11469(T0* C);
/* Call to ET_QUERY.alias_name */
extern T0* T147x11465(T0* C);
/* Call to ET_QUERY.overloaded_name */
extern T0* T147x11468(T0* C);
/* Call to ET_QUERY.hash_code */
extern T6 T147x23(T0* C);
/* Call to ET_QUERY.arguments */
extern T0* T147x11544(T0* C);
/* Call to ET_QUERY.is_exported_to */
extern T1 T147x11505T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_QUERY.arguments_count */
extern T6 T147x11504(T0* C);
/* Call to ET_QUERY.is_attribute */
extern T1 T147x11494(T0* C);
/* Call to ET_QUERY.assigner */
extern T0* T147x11623(T0* C);
/* Call to ET_QUERY.has_seed */
extern T1 T147x11540T6(T0* C, T6 a1);
/* Call to ET_QUERY.implementation_feature */
extern T0* T147x11556(T0* C);
/* Call to ET_QUERY.is_unique_attribute */
extern T1 T147x11496(T0* C);
/* Call to ET_QUERY.is_constant_attribute */
extern T1 T147x11495(T0* C);
/* Call to ET_QUERY.implementation_class */
extern T0* T147x11555(T0* C);
/* Call to ET_QUERY.is_once */
extern T1 T147x11498(T0* C);
/* Call to ET_QUERY.is_infixable */
extern T1 T147x11499(T0* C);
/* Call to ET_QUERY.is_prefixable */
extern T1 T147x11500(T0* C);
/* Call to ET_QUERY.is_bracketable */
extern T1 T147x11501(T0* C);
/* Call to ET_QUERY.is_frozen */
extern T1 T147x11491(T0* C);
/* Call to ET_QUERY.is_deferred */
extern T1 T147x11492(T0* C);
/* Call to ET_QUERY.new_synonym */
extern T0* T147x11527T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.is_exported_to */
extern T1 T149x11505T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_PROCEDURE.first_seed */
extern T6 T149x11545(T0* C);
/* Call to ET_PROCEDURE.arguments_count */
extern T6 T149x11504(T0* C);
/* Call to ET_PROCEDURE.name */
extern T0* T149x11542(T0* C);
/* Call to ET_PROCEDURE.overloaded_alias_name */
extern T0* T149x11469(T0* C);
/* Call to ET_PROCEDURE.alias_name */
extern T0* T149x11465(T0* C);
/* Call to ET_PROCEDURE.overloaded_name */
extern T0* T149x11468(T0* C);
/* Call to ET_PROCEDURE.hash_code */
extern T6 T149x23(T0* C);
/* Call to ET_PROCEDURE.arguments */
extern T0* T149x11544(T0* C);
/* Call to ET_PROCEDURE.is_creation_exported_to */
extern T1 T149x11507T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_PROCEDURE.has_seed */
extern T1 T149x11540T6(T0* C, T6 a1);
/* Call to ET_PROCEDURE.is_frozen */
extern T1 T149x11491(T0* C);
/* Call to ET_PROCEDURE.is_deferred */
extern T1 T149x11492(T0* C);
/* Call to ET_PROCEDURE.new_synonym */
extern T0* T149x11527T0(T0* C, T0* a1);
/* Call to ET_TYPE.same_named_type */
extern T1 T154x5909T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.position */
extern T0* T154x5943(T0* C);
/* Call to ET_TYPE.base_class */
extern T0* T154x5884T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.to_text */
extern T0* T154x5939(T0* C);
/* Call to ET_TYPE.reference_conforms_from_tuple_type */
extern T1 T154x5934T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_index_of_label */
extern T6 T154x5889T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE.reference_conforms_from_class_type */
extern T1 T154x5932T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.last_leaf */
extern T0* T154x5947(T0* C);
/* Call to ET_TYPE.reference_conforms_to_type */
extern T1 T154x5930T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_named_type */
extern T1 T154x5897(T0* C);
/* Call to ET_TYPE.is_base_type */
extern T1 T154x5898(T0* C);
/* Call to ET_TYPE.same_base_bit_type */
extern T1 T154x5921T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_base_tuple_type */
extern T1 T154x5924T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type */
extern T0* T154x5885T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_class_type */
extern T1 T154x5922T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_bit_type */
extern T1 T154x5926T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_tuple_type */
extern T1 T154x5929T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_class_type */
extern T1 T154x5927T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_from_formal_parameter_type */
extern T1 T154x5928T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.conforms_to_type */
extern T1 T154x5925T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.is_type_reference */
extern T1 T154x5900T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.resolved_formal_parameters */
extern T0* T154x5974T0(T0* C, T0* a1);
/* Call to ET_TYPE.is_type_expanded */
extern T1 T154x5899T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.direct_base_class */
extern T0* T154x5883T0(T0* C, T0* a1);
/* Call to ET_TYPE.named_type */
extern T0* T154x5890T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.is_like_current */
extern T1 T154x5896(T0* C);
/* Call to ET_TYPE.shallow_named_type */
extern T0* T154x5891T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T154x5933T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.reference_conforms_from_bit_type */
extern T1 T154x5931T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.base_type_actual */
extern T0* T154x5887T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_TYPE.base_type_actual_count */
extern T6 T154x5895T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_base_type */
extern T1 T154x5910T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_bit_type */
extern T1 T154x5917T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_tuple_type */
extern T1 T154x5920T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_class_type */
extern T1 T154x5918T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_named_formal_parameter_type */
extern T1 T154x5919T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.has_formal_types */
extern T1 T154x5903T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.has_anchored_type */
extern T1 T154x5901T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE.same_syntactical_type */
extern T1 T154x5908T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_formal_parameter_type */
extern T1 T154x5913T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_current */
extern T1 T154x5914T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_like_feature */
extern T1 T154x5915T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_bit_type */
extern T1 T154x5911T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_tuple_type */
extern T1 T154x5916T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE.same_syntactical_class_type */
extern T1 T154x5912T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_TYPE_CONTEXT.named_type */
extern T0* T155x5983T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.root_context */
extern T0* T155x5976(T0* C);
/* Call to ET_TYPE_CONTEXT.base_type_actual */
extern T0* T155x5980T6T0(T0* C, T6 a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.base_type_actual_count */
extern T6 T155x5984T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_tuple_type */
extern T1 T155x6015T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T155x5982T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_class_type */
extern T1 T155x6013T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_class */
extern T0* T155x5978T0(T0* C, T0* a1);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_bit_type */
extern T1 T155x6012T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T155x6007T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_to_type */
extern T1 T155x6005T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_to_type */
extern T1 T155x6011T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T155x6010T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T155x6008T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T155x6009T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.reference_conforms_from_formal_parameter_type */
extern T1 T155x6014T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_type */
extern T1 T155x5996T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_bit_type */
extern T1 T155x6001T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_bit_type */
extern T1 T155x5997T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T155x5999T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T155x6004T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T155x6000T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_class_type */
extern T1 T155x5998T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_base_class_type */
extern T1 T155x6002T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.same_named_type */
extern T1 T155x5994T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_TYPE_CONTEXT.base_type */
extern T0* T155x5979T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.name */
extern T0* T156x10955(T0* C);
/* Call to ET_FEATURE_NAME.first_leaf */
extern T0* T156x5946(T0* C);
/* Call to ET_FEATURE_NAME.last_leaf */
extern T0* T156x5947(T0* C);
/* Call to ET_FEATURE_NAME.same_feature_name */
extern T1 T156x10953T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.seed */
extern T6 T156x10957(T0* C);
/* Call to ET_FEATURE_NAME.lower_name */
extern T0* T156x10956(T0* C);
/* Call to ET_FEATURE_NAME.position */
extern T0* T156x5943(T0* C);
/* Call to ET_FEATURE_NAME.is_tuple_label */
extern T1 T156x10962(T0* C);
/* Call to ET_FEATURE_NAME.is_local */
extern T1 T156x10960(T0* C);
/* Call to ET_FEATURE_NAME.is_argument */
extern T1 T156x10961(T0* C);
/* Call to ET_FEATURE_NAME.hash_code */
extern T6 T156x23(T0* C);
/* Call to ET_FEATURE_NAME.local_name */
extern T0* T156x10993(T0* C);
/* Call to ET_FEATURE_NAME.argument_name */
extern T0* T156x10994(T0* C);
/* Call to ET_FEATURE_NAME.is_prefix */
extern T1 T156x10983(T0* C);
/* Call to ET_FEATURE_NAME.is_infix */
extern T1 T156x10963(T0* C);
/* Call to ET_CLASS_TYPE.actual_parameters */
extern T0* T159x5818(T0* C);
/* Call to ET_CLASS_TYPE.is_generic */
extern T1 T159x5826(T0* C);
/* Call to ET_CLASS_TYPE.direct_base_class */
extern T0* T159x5883T0(T0* C, T0* a1);
/* Call to ET_CLASS_TYPE.to_text */
extern T0* T159x5939(T0* C);
/* Call to ET_CLASS_TYPE.name */
extern T0* T159x5878(T0* C);
/* Call to ET_CLASS_TYPE.upper_name */
extern T0* T159x5879(T0* C);
/* Call to ET_CLASS_TYPE.is_expanded */
extern T1 T159x5829(T0* C);
/* Call to ET_CLASS_TYPE.is_named_type */
extern T1 T159x5897(T0* C);
/* Call to ET_CLASS_TYPE.is_separate */
extern T1 T159x5797(T0* C);
/* Call to ET_CLASS_TYPE.position */
extern T0* T159x5943(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.static_type */
extern T0* T162x11440(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.other_types */
extern T0* T162x11442(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.first_type */
extern T0* T162x11441(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.count */
extern T6 T162x11445(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_expanded */
extern T1 T162x11438(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.is_expanded */
extern T1 T162x11437(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.special_type */
extern T0* T162x11444(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.has_type */
extern T1 T162x11435T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE_SET.is_subset */
extern T1 T162x11439T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.label */
extern T0* T164x5962(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.type */
extern T0* T164x5961(T0* C);
/* Call to ET_ACTUAL_PARAMETER_ITEM.resolved_formal_parameters_with_type */
extern T0* T164x5963T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER_ITEM.actual_parameter */
extern T0* T164x5960(T0* C);
/* Call to ET_AST_PROCESSOR.universe */
extern T0* T167x6809(T0* C);
/* Call to ET_FEATURE.lower_name */
extern T0* T179x11464(T0* C);
/* Call to ET_FEATURE.name */
extern T0* T179x11542(T0* C);
/* Call to ET_FEATURE.has_seed */
extern T1 T179x11540T6(T0* C, T6 a1);
/* Call to ET_FEATURE.extended_name */
extern T0* T179x11466(T0* C);
/* Call to ET_FEATURE.clients */
extern T0* T179x11557(T0* C);
/* Call to ET_FEATURE.version */
extern T6 T179x11476(T0* C);
/* Call to ET_FEATURE.first_seed */
extern T6 T179x11545(T0* C);
/* Call to ET_FEATURE.is_deferred */
extern T1 T179x11492(T0* C);
/* Call to ET_FEATURE.alias_name */
extern T0* T179x11465(T0* C);
/* Call to ET_FEATURE.implementation_class */
extern T0* T179x11555(T0* C);
/* Call to ET_FEATURE.is_procedure */
extern T1 T179x11497(T0* C);
/* Call to ET_FEATURE.arguments */
extern T0* T179x11544(T0* C);
/* Call to ET_FEATURE.is_exported_to */
extern T1 T179x11505T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE.other_seeds */
extern T0* T179x11546(T0* C);
/* Call to ET_FEATURE.is_unique_attribute */
extern T1 T179x11496(T0* C);
/* Call to ET_FEATURE.is_constant_attribute */
extern T1 T179x11495(T0* C);
/* Call to ET_FEATURE.type */
extern T0* T179x11543(T0* C);
/* Call to ET_FEATURE.is_attribute */
extern T1 T179x11494(T0* C);
/* Call to ET_FEATURE.id */
extern T6 T179x11475(T0* C);
/* Call to ET_FEATURE.has_implementation_error */
extern T1 T179x11559(T0* C);
/* Call to ET_FEATURE.implementation_checked */
extern T1 T179x11558(T0* C);
/* Call to ET_FEATURE.implementation_feature */
extern T0* T179x11556(T0* C);
/* Call to ET_FEATURE.other_precursors */
extern T0* T179x11478(T0* C);
/* Call to ET_FEATURE.first_precursor */
extern T0* T179x11554(T0* C);
/* Call to ET_FEATURE.postconditions */
extern T0* T179x11472(T0* C);
/* Call to ET_FEATURE.preconditions */
extern T0* T179x11471(T0* C);
/* Call to ET_FEATURE.is_frozen */
extern T1 T179x11491(T0* C);
/* Call to ET_FEATURE.is_infixable */
extern T1 T179x11499(T0* C);
/* Call to ET_FEATURE.is_prefixable */
extern T1 T179x11500(T0* C);
/* Call to ET_FEATURE.is_bracketable */
extern T1 T179x11501(T0* C);
/* Call to ET_FEATURE.renamed_feature */
extern T0* T179x11528T0(T0* C, T0* a1);
/* Call to ET_FEATURE.undefined_feature */
extern T0* T179x11529T0(T0* C, T0* a1);
/* Call to ET_FEATURE.same_version */
extern T1 T179x11511T0(T0* C, T0* a1);
/* Call to ET_FEATURE.is_dotnet */
extern T1 T179x11539(T0* C);
/* Call to ET_FEATURE.is_once */
extern T1 T179x11498(T0* C);
/* Call to ET_FEATURE.hash_code */
extern T6 T179x23(T0* C);
/* Call to ET_EXPRESSION.last_leaf */
extern T0* T181x5947(T0* C);
/* Call to ET_EXPRESSION.position */
extern T0* T181x5943(T0* C);
/* Call to ET_EXPRESSION.is_current */
extern T1 T181x11016(T0* C);
/* Call to ET_EXPRESSION.index */
extern T6 T181x11033(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.last_leaf */
extern T0* T185x5947(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.position */
extern T0* T185x5943(T0* C);
/* Call to ET_QUALIFIED_FEATURE_NAME.feature_name */
extern T0* T185x11000(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.actual_argument */
extern T0* T208x11027T6(T0* C, T6 a1);
/* Call to ET_ARGUMENT_OPERANDS.count */
extern T6 T208x11028(T0* C);
/* Call to ET_ARGUMENT_OPERANDS.is_empty */
extern T1 T208x11026(T0* C);
/* Call to ET_CALL_COMPONENT.arguments */
extern T0* T210x11085(T0* C);
/* Call to ET_CALL_COMPONENT.name */
extern T0* T210x11084(T0* C);
/* Call to ET_CALL_COMPONENT.position */
extern T0* T210x5943(T0* C);
/* Call to ET_CALL_NAME.seed */
extern T6 T211x10957(T0* C);
/* Call to ET_CALL_NAME.lower_name */
extern T0* T211x10956(T0* C);
/* Call to ET_CALL_NAME.position */
extern T0* T211x5943(T0* C);
/* Call to ET_CALL_NAME.is_tuple_label */
extern T1 T211x10962(T0* C);
/* Call to ET_CALL_NAME.precursor_keyword */
extern T0* T211x10992(T0* C);
/* Call to ET_CALL_NAME.is_precursor */
extern T1 T211x10990(T0* C);
/* Call to ET_CALL_NAME.is_infix_implies */
extern T1 T211x10971(T0* C);
/* Call to ET_CALL_NAME.is_infix_or */
extern T1 T211x10976(T0* C);
/* Call to ET_CALL_NAME.is_infix_or_else */
extern T1 T211x10977(T0* C);
/* Call to ET_CALL_NAME.is_infix_and */
extern T1 T211x10964(T0* C);
/* Call to ET_CALL_NAME.is_infix_and_then */
extern T1 T211x10965(T0* C);
/* Call to ET_CALL_NAME.is_prefix_not */
extern T1 T211x10987(T0* C);
/* Call to ET_CALL_NAME.is_prefix_plus */
extern T1 T211x10985(T0* C);
/* Call to ET_CALL_NAME.is_prefix_minus */
extern T1 T211x10984(T0* C);
/* Call to ET_CALL_NAME.is_infix_dotdot */
extern T1 T211x10982(T0* C);
/* Call to ET_CALL_NAME.is_infix_xor */
extern T1 T211x10981(T0* C);
/* Call to ET_CALL_NAME.is_infix_times */
extern T1 T211x10980(T0* C);
/* Call to ET_CALL_NAME.is_infix_power */
extern T1 T211x10979(T0* C);
/* Call to ET_CALL_NAME.is_infix_plus */
extern T1 T211x10978(T0* C);
/* Call to ET_CALL_NAME.is_infix_mod */
extern T1 T211x10975(T0* C);
/* Call to ET_CALL_NAME.is_infix_minus */
extern T1 T211x10974(T0* C);
/* Call to ET_CALL_NAME.is_infix_lt */
extern T1 T211x10973(T0* C);
/* Call to ET_CALL_NAME.is_infix_le */
extern T1 T211x10972(T0* C);
/* Call to ET_CALL_NAME.is_infix_gt */
extern T1 T211x10970(T0* C);
/* Call to ET_CALL_NAME.is_infix_ge */
extern T1 T211x10969(T0* C);
/* Call to ET_CALL_NAME.is_infix_divide */
extern T1 T211x10967(T0* C);
/* Call to ET_CALL_NAME.is_infix_div */
extern T1 T211x10966(T0* C);
/* Call to ET_CALL_NAME.is_bracket */
extern T1 T211x10988(T0* C);
/* Call to ET_AGENT.implicit_target_position */
extern T0* T218x16649(T0* C);
/* Call to ET_AGENT.is_inline_agent */
extern T1 T218x16646(T0* C);
/* Call to ET_AGENT.arguments */
extern T0* T218x16641(T0* C);
/* Call to ET_AGENT.index */
extern T6 T218x11033(T0* C);
/* Call to ET_AGENT.target */
extern T0* T218x16640(T0* C);
/* Call to ET_AGENT.is_qualified_call */
extern T1 T218x16643(T0* C);
/* Call to ET_AGENT.implicit_result */
extern T0* T218x16642(T0* C);
/* Call to ET_CONSTANT.is_bit_constant */
extern T1 T219x16656(T0* C);
/* Call to ET_CONSTANT.is_string_constant */
extern T1 T219x16655(T0* C);
/* Call to ET_CONSTANT.is_real_constant */
extern T1 T219x16654(T0* C);
/* Call to ET_CONSTANT.is_integer_constant */
extern T1 T219x16653(T0* C);
/* Call to ET_CONSTANT.is_character_constant */
extern T1 T219x16652(T0* C);
/* Call to ET_CONSTANT.is_boolean_constant */
extern T1 T219x16651(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.count */
extern T6 T220x11028(T0* C);
/* Call to ET_ACTUAL_ARGUMENTS.actual_argument */
extern T0* T220x11027T6(T0* C, T6 a1);
/* Call to ET_ACTUAL_ARGUMENTS.is_empty */
extern T1 T220x11026(T0* C);
/* Call to ET_MANIFEST_STRING.position */
extern T0* T224x5943(T0* C);
/* Call to ET_MANIFEST_STRING.index */
extern T6 T224x11033(T0* C);
/* Call to ET_MANIFEST_STRING.value */
extern T0* T224x16684(T0* C);
/* Call to ET_OPERAND.index */
extern T6 T227x11033(T0* C);
/* Call to ET_AGENT_TARGET.position */
extern T0* T228x5943(T0* C);
/* Call to ET_AGENT_TARGET.index */
extern T6 T228x11033(T0* C);
/* Call to ET_AGENT_TARGET.is_open_operand */
extern T1 T228x11032(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.is_open_operand */
extern T1 T230x11032(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.index */
extern T6 T230x11033(T0* C);
/* Call to ET_EXPRESSION_ITEM.position */
extern T0* T231x5943(T0* C);
/* Call to ET_EXPRESSION_ITEM.expression */
extern T0* T231x11018(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_implementation_error */
extern T1 T236x11559(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_feature */
extern T0* T236x11556(T0* C);
/* Call to ET_STANDALONE_CLOSURE.has_assertions_error */
extern T1 T236x11561(T0* C);
/* Call to ET_STANDALONE_CLOSURE.implementation_class */
extern T0* T236x11555(T0* C);
/* Call to ET_STANDALONE_CLOSURE.locals */
extern T0* T236x11572(T0* C);
/* Call to ET_STANDALONE_CLOSURE.arguments */
extern T0* T236x11571(T0* C);
/* Call to ET_STANDALONE_CLOSURE.as_feature */
extern T0* T236x11568(T0* C);
/* Call to ET_STANDALONE_CLOSURE.is_feature */
extern T1 T236x11552(T0* C);
/* Call to ET_STANDALONE_CLOSURE.type */
extern T0* T236x11570(T0* C);
/* Call to ET_STANDALONE_CLOSURE.first_precursor */
extern T0* T236x11554(T0* C);
/* Call to ET_STANDALONE_CLOSURE.clients */
extern T0* T236x11557(T0* C);
/* Call to ET_STANDALONE_CLOSURE.assertions_checked */
extern T1 T236x11560(T0* C);
/* Call to ET_POSITION.column */
extern T6 T245x11069(T0* C);
/* Call to ET_POSITION.line */
extern T6 T245x11068(T0* C);
/* Call to ET_POSITION.is_null */
extern T1 T245x11070(T0* C);
/* Call to ET_POSITION.to_text */
extern T0* T245x11074(T0* C);
/* Call to XM_NODE.parent */
extern T0* T260x9547(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.alias_name */
extern T0* T298x10998(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.feature_name */
extern T0* T298x10997(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.position */
extern T0* T298x5943(T0* C);
/* Call to ET_EXTENDED_FEATURE_NAME.same_extended_feature_name */
extern T1 T298x10999T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.start_condition */
extern T6 T323x5087(T0* C);
/* Call to XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T323x18574T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.end_of_file */
extern T1 T323x5092(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_value */
extern T0* T323x18585(T0* C);
/* Call to XM_EIFFEL_SCANNER.last_token */
extern T6 T323x5083(T0* C);
/* Call to XM_EIFFEL_SCANNER.error_position */
extern T0* T323x18583(T0* C);
/* Call to ET_CHARACTER_CONSTANT.index */
extern T6 T439x11033(T0* C);
/* Call to ET_CHARACTER_CONSTANT.value */
extern T2 T439x19808(T0* C);
/* Call to ET_INTEGER_CONSTANT.is_negative */
extern T1 T447x20112(T0* C);
/* Call to ET_INTEGER_CONSTANT.index */
extern T6 T447x11033(T0* C);
/* Call to ET_INTEGER_CONSTANT.value */
extern T6 T447x20104(T0* C);
/* Call to ET_INTEGER_CONSTANT.has_value_error */
extern T1 T447x20114(T0* C);
/* Call to ET_INTEGER_CONSTANT.literal */
extern T0* T447x20103(T0* C);
/* Call to ET_INTEGER_CONSTANT.position */
extern T0* T447x5943(T0* C);
/* Call to ET_INTEGER_CONSTANT.sign */
extern T0* T447x20105(T0* C);
/* Call to ET_CONSTRAINT_TYPE.resolved_syntactical_constraint */
extern T0* T533x5971T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_FEATURE_NAME_ITEM.position */
extern T0* T540x5943(T0* C);
/* Call to ET_FEATURE_NAME_ITEM.feature_name */
extern T0* T540x10997(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.resolved_syntactical_constraint_with_type */
extern T0* T551x5969T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.type */
extern T0* T551x5967(T0* C);
/* Call to ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM.position */
extern T0* T551x5968(T0* C);
/* Call to ET_CONVERT_FEATURE.name */
extern T0* T595x18231(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_from */
extern T1 T595x18229(T0* C);
/* Call to ET_CONVERT_FEATURE.is_convert_to */
extern T1 T595x18230(T0* C);
/* Call to ET_TYPE_ITEM.type */
extern T0* T607x5942(T0* C);
/* Call to ET_DECLARED_TYPE.resolved_formal_parameters */
extern T0* T615x5974T0(T0* C, T0* a1);
/* Call to ET_DECLARED_TYPE.type */
extern T0* T615x5973(T0* C);
/* Call to ET_ASSIGNER.feature_name */
extern T0* T616x11002(T0* C);
/* Call to ET_AST_LEAF.last_position */
extern T0* T620x5945(T0* C);
/* Call to ET_AST_LEAF.position */
extern T0* T620x5943(T0* C);
/* Call to ET_EXTERNAL_LANGUAGE.manifest_string */
extern T0* T633x16695(T0* C);
/* Call to ET_EXTERNAL_ALIAS.manifest_string */
extern T0* T634x16696(T0* C);
/* Call to ET_ALIAS_NAME.same_alias_name */
extern T1 T647x21201T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.is_infix_minus */
extern T1 T647x10974(T0* C);
/* Call to ET_ALIAS_NAME.is_infix_plus */
extern T1 T647x10978(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_minus */
extern T1 T647x10984(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix_plus */
extern T1 T647x10985(T0* C);
/* Call to ET_ALIAS_NAME.lower_name */
extern T0* T647x10956(T0* C);
/* Call to ET_ALIAS_NAME.position */
extern T0* T647x5943(T0* C);
/* Call to ET_ALIAS_NAME.same_call_name */
extern T1 T647x10991T0(T0* C, T0* a1);
/* Call to ET_ALIAS_NAME.hash_code */
extern T6 T647x23(T0* C);
/* Call to ET_ALIAS_NAME.is_infix */
extern T1 T647x10963(T0* C);
/* Call to ET_ALIAS_NAME.is_infixable */
extern T1 T647x21187(T0* C);
/* Call to ET_ALIAS_NAME.is_prefixable */
extern T1 T647x21186(T0* C);
/* Call to ET_ALIAS_NAME.is_bracket */
extern T1 T647x10988(T0* C);
/* Call to ET_ALIAS_NAME.is_prefix */
extern T1 T647x10983(T0* C);
/* Call to ET_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T681x5956T0(T0* C, T0* a1);
/* Call to ET_ACTUAL_PARAMETER.type */
extern T0* T681x5961(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.name */
extern T0* T692x11084(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.target */
extern T0* T692x11083(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments_count */
extern T6 T692x11082(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.arguments */
extern T0* T692x11085(T0* C);
/* Call to ET_FEATURE_CALL_EXPRESSION.index */
extern T6 T692x11033(T0* C);
/* Call to ET_CONDITIONAL.expression */
extern T0* T703x11019(T0* C);
/* Call to ET_TARGET_TYPE.position */
extern T0* T712x5943(T0* C);
/* Call to ET_TARGET_TYPE.last_leaf */
extern T0* T712x5947(T0* C);
/* Call to ET_TARGET_TYPE.type */
extern T0* T712x5975(T0* C);
/* Call to ET_CHOICE.upper */
extern T0* T732x11045(T0* C);
/* Call to ET_CHOICE.is_range */
extern T1 T732x11043(T0* C);
/* Call to ET_CHOICE.lower */
extern T0* T732x11044(T0* C);
/* Call to ET_CHOICE_ITEM.choice */
extern T0* T734x11047(T0* C);
/* Call to ET_CHOICE_CONSTANT.position */
extern T0* T737x5943(T0* C);
/* Call to ET_OPERATOR.position */
extern T0* T769x5943(T0* C);
/* Call to ET_INLINE_AGENT.implicit_result */
extern T0* T777x16642(T0* C);
/* Call to ET_INLINE_AGENT.formal_arguments */
extern T0* T777x11571(T0* C);
/* Call to ET_INLINE_AGENT.actual_arguments */
extern T0* T777x16641(T0* C);
/* Call to ET_INLINE_AGENT.target */
extern T0* T777x16640(T0* C);
/* Call to ET_INLINE_AGENT.locals */
extern T0* T777x11572(T0* C);
/* Call to ET_INLINE_AGENT.type */
extern T0* T777x11570(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND_ITEM.agent_actual_argument */
extern T0* T809x11036(T0* C);
/* Call to ET_ASSERTION_ITEM.position */
extern T0* T814x5943(T0* C);
/* Call to ET_ASSERTION_ITEM.assertion */
extern T0* T814x11023(T0* C);
/* Call to ET_ASSERTION.expression */
extern T0* T816x11021(T0* C);
/* Call to ET_CLOSURE.locals */
extern T0* T820x11572(T0* C);
/* Call to ET_CLOSURE.arguments */
extern T0* T820x11571(T0* C);
/* Call to ET_CLOSURE.type */
extern T0* T820x11570(T0* C);
/* Call to ET_GROUP.is_override */
extern T1 T910x11175(T0* C);
/* Call to ET_GROUP.dotnet_assembly */
extern T0* T910x11187(T0* C);
/* Call to ET_GROUP.full_lower_name */
extern T0* T910x11183T2(T0* C, T2 a1);
/* Call to ET_GROUP.full_pathname */
extern T0* T910x11184(T0* C);
/* Call to ET_GROUP.cluster */
extern T0* T910x11186(T0* C);
/* Call to ET_GROUP.is_none */
extern T1 T910x11174(T0* C);
/* Call to ET_GROUP.is_cluster */
extern T1 T910x11172(T0* C);
/* Call to ET_GROUP.is_dotnet_assembly */
extern T1 T910x11173(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.index */
extern T6 T913x20727(T0* C);
/* Call to ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T913x5900T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.reference_conforms_from_tuple_type */
extern T1 T917x5934T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_type_index_of_label */
extern T6 T917x5889T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_class_type */
extern T1 T917x5932T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.to_text */
extern T0* T917x5939(T0* C);
/* Call to ET_NAMED_TYPE.base_type_actual */
extern T0* T917x5887T6T0T0(T0* C, T6 a1, T0* a2, T0* a3);
/* Call to ET_NAMED_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T917x5933T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_type */
extern T1 T917x5910T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_from_bit_type */
extern T1 T917x5931T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_bit_type */
extern T1 T917x5926T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_tuple_type */
extern T1 T917x5929T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_reference */
extern T1 T917x5900T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.conforms_to_type */
extern T1 T917x5925T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.reference_conforms_to_type */
extern T1 T917x5930T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_class_type */
extern T1 T917x5927T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.conforms_from_formal_parameter_type */
extern T1 T917x5928T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.is_type_expanded */
extern T1 T917x5899T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_like_current */
extern T1 T917x5914T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_like_feature */
extern T1 T917x5915T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_bit_type */
extern T1 T917x5917T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_bit_type */
extern T1 T917x5911T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_tuple_type */
extern T1 T917x5920T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_tuple_type */
extern T1 T917x5916T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_class_type */
extern T1 T917x5918T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.has_formal_types */
extern T1 T917x5903T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.has_anchored_type */
extern T1 T917x5901T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_class_type */
extern T1 T917x5912T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_bit_type */
extern T1 T917x5921T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.base_class */
extern T0* T917x5884T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_NAMED_TYPE.same_syntactical_formal_parameter_type */
extern T1 T917x5913T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_formal_parameter_type */
extern T1 T917x5919T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_tuple_type */
extern T1 T917x5924T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_base_class_type */
extern T1 T917x5922T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_named_type */
extern T1 T917x5909T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_NAMED_TYPE.same_syntactical_type */
extern T1 T917x5908T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to ET_FLATTENED_FEATURE.adapted_feature */
extern T0* T1171x11551(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_adapted */
extern T1 T1171x11538(T0* C);
/* Call to ET_FLATTENED_FEATURE.flattened_feature */
extern T0* T1171x11547(T0* C);
/* Call to ET_FLATTENED_FEATURE.inherited_feature */
extern T0* T1171x11549(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_inherited */
extern T1 T1171x11536(T0* C);
/* Call to ET_FLATTENED_FEATURE.redeclared_feature */
extern T0* T1171x11550(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_redeclared */
extern T1 T1171x11537(T0* C);
/* Call to ET_FLATTENED_FEATURE.is_immediate */
extern T1 T1171x11535(T0* C);
/* Call to ET_FLATTENED_FEATURE.immediate_feature */
extern T0* T1171x11548(T0* C);
/* Call to ET_ROUTINE.implementation_feature */
extern T0* T1235x11556(T0* C);
/* Call to ET_FREE_NAME.free_operator_name */
extern T0* T1239x19835(T0* C);
/* Call to ET_FREE_NAME.hash_code */
extern T6 T1239x23(T0* C);
/* Call to ET_FREE_NAME.is_infix_freeop */
extern T1 T1239x10968(T0* C);
/* Call to ET_REPLICABLE_FEATURE.first_feature */
extern T0* T1246x24575(T0* C);
/* Call to ET_REPLICABLE_FEATURE.replicated_feature */
extern T0* T1246x24574(T0* C);
/* Call to ET_REPLICABLE_FEATURE.has_replication */
extern T1 T1246x24573(T0* C);
/* Call to ET_REPLICABLE_FEATURE.selected_count */
extern T6 T1246x24576(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.compound */
extern T0* T1314x22368(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.rescue_clause */
extern T0* T1314x22370(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.locals */
extern T0* T1314x11572(T0* C);
/* Call to ET_INTERNAL_ROUTINE_INLINE_AGENT.implicit_result */
extern T0* T1314x16642(T0* C);
/* Call to ET_INTERNAL_ROUTINE.compound */
extern T0* T1315x18382(T0* C);
/* Call to ET_INTERNAL_ROUTINE.rescue_clause */
extern T0* T1315x18384(T0* C);
/* Call to ET_INTERNAL_ROUTINE.locals */
extern T0* T1315x11572(T0* C);
/* Call to ET_INTERNAL_ROUTINE.arguments */
extern T0* T1315x11544(T0* C);
/* Call to ET_INTERNAL_ROUTINE.implementation_feature */
extern T0* T1315x11556(T0* C);
/* Call to ET_INTERNAL_ROUTINE.is_once */
extern T1 T1315x11498(T0* C);
/* Call to ET_ADDRESS_EXPRESSION.index */
extern T6 T1345x11033(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.type */
extern T0* T1346x11570(T0* C);
/* Call to ET_QUERY_INLINE_AGENT.formal_arguments */
extern T0* T1346x11571(T0* C);
/* Call to ET_PROCEDURE_INLINE_AGENT.formal_arguments */
extern T0* T1347x11571(T0* C);
/* Call to ET_AST_NODE.position */
extern T0* T1397x5943(T0* C);
/* Call to KI_CHARACTER_INPUT_STREAM.read_character */
extern void T27x1646(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_new_line */
extern void T70x8621(T0* C);
/* Call to KI_TEXT_OUTPUT_STREAM.put_character */
extern void T70x8614T2(T0* C, T2 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_string */
extern void T70x8606T0(T0* C, T0* a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_integer */
extern void T70x8608T6(T0* C, T6 a1);
/* Call to KI_TEXT_OUTPUT_STREAM.put_line */
extern void T70x8620T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS_FILTER.set_next */
extern void T97x9831T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_xml_declaration */
extern void T98x9887T0T0T1(T0* C, T0* a1, T0* a2, T1 a3);
/* Call to XM_CALLBACKS.on_error */
extern void T98x9888T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start_tag_finish */
extern void T98x9893(T0* C);
/* Call to XM_CALLBACKS.on_finish */
extern void T98x9886(T0* C);
/* Call to XM_CALLBACKS.on_attribute */
extern void T98x9892T0T0T0T0(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* Call to XM_CALLBACKS.on_end_tag */
extern void T98x9894T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_start_tag */
extern void T98x9891T0T0T0(T0* C, T0* a1, T0* a2, T0* a3);
/* Call to XM_CALLBACKS.on_content */
extern void T98x9895T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_processing_instruction */
extern void T98x9889T0T0(T0* C, T0* a1, T0* a2);
/* Call to XM_CALLBACKS.on_comment */
extern void T98x9890T0(T0* C, T0* a1);
/* Call to XM_CALLBACKS.on_start */
extern void T98x9885(T0* C);
/* Call to ET_DYNAMIC_TYPE.put_query_call */
extern void T144x11424T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.put_procedure_call */
extern void T144x11425T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_alive */
extern void T144x11404(T0* C);
/* Call to ET_DYNAMIC_TYPE.set_static */
extern void T144x11406T1(T0* C, T1 a1);
/* Call to ET_DYNAMIC_TYPE.put_target */
extern void T144x11446T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_DYNAMIC_TYPE.set_next_type */
extern void T144x11431T0(T0* C, T0* a1);
/* Call to ET_DYNAMIC_TYPE.set_id */
extern void T144x11417T6(T0* C, T6 a1);
/* Call to ET_BASE_TYPE.reset */
extern void T145x5882(T0* C);
/* Call to ET_BASE_TYPE.process */
extern void T145x5952T0(T0* C, T0* a1);
/* Call to ET_QUERY.reset_assertions_checked */
extern void T147x11567(T0* C);
/* Call to ET_QUERY.reset_implementation_checked */
extern void T147x11564(T0* C);
/* Call to ET_QUERY.reset */
extern void T147x11461(T0* C);
/* Call to ET_QUERY.set_frozen_keyword */
extern void T147x11522T0(T0* C, T0* a1);
/* Call to ET_PROCEDURE.reset_assertions_checked */
extern void T149x11567(T0* C);
/* Call to ET_PROCEDURE.reset_implementation_checked */
extern void T149x11564(T0* C);
/* Call to ET_PROCEDURE.reset */
extern void T149x11461(T0* C);
/* Call to ET_PROCEDURE.set_frozen_keyword */
extern void T149x11522T0(T0* C, T0* a1);
/* Call to ET_TYPE.process */
extern void T154x5952T0(T0* C, T0* a1);
/* Call to ET_TYPE.reset */
extern void T154x5882(T0* C);
/* Call to ET_TYPE.append_to_string */
extern void T154x5940T0(T0* C, T0* a1);
/* Call to ET_FEATURE_NAME.set_seed */
extern void T156x10958T6(T0* C, T6 a1);
/* Call to ET_FEATURE_NAME.reset */
extern void T156x10954(T0* C);
/* Call to ET_DYNAMIC_TYPE_SET.put_target */
extern void T162x11446T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_AST_PROCESSOR.process_convert_to_expression */
extern void T167x6865T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_retry_instruction */
extern void T167x6979T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_instruction */
extern void T167x6846T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_cast_expression */
extern void T167x6922T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_convert_expression */
extern void T167x6860T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter_type */
extern void T167x6909T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_instruction */
extern void T167x6983T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_instruction */
extern void T167x6964T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_instruction */
extern void T167x6867T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bang_instruction */
extern void T167x6831T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_check_instruction */
extern void T167x6847T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_debug_instruction */
extern void T167x6873T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_loop_instruction */
extern void T167x6944T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_inspect_instruction */
extern void T167x6928T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_if_instruction */
extern void T167x6916T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment_attempt */
extern void T167x6829T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assignment */
extern void T167x6828T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_assigner_instruction */
extern void T167x6827T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_current */
extern void T167x6938T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_like_feature */
extern void T167x6939T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_feature */
extern void T167x6833T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_n */
extern void T167x6834T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constrained_formal_parameter */
extern void T167x6858T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_formal_parameter */
extern void T167x6906T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_tuple_type */
extern void T167x6990T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_generic_class_type */
extern void T167x6911T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class_type */
extern void T167x6853T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure_inline_agent */
extern void T167x6895T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure_inline_agent */
extern void T167x6956T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure_inline_agent */
extern void T167x6879T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function_inline_agent */
extern void T167x6893T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function_inline_agent */
extern void T167x6953T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function_inline_agent */
extern void T167x6877T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_type */
extern void T167x6950T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_strip_expression */
extern void T167x6984T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_array */
extern void T167x6946T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_manifest_string */
extern void T167x6954T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_agent */
extern void T167x6844T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_old_expression */
extern void T167x6951T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_prefix_expression */
extern void T167x6966T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_equality_expression */
extern void T167x6887T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_infix_expression */
extern void T167x6924T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_expression_address */
extern void T167x6889T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result_address */
extern void T167x6978T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current_address */
extern void T167x6871T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_feature_address */
extern void T167x6897T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_parenthesized_expression */
extern void T167x6959T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_precursor_expression */
extern void T167x6963T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_static_call_expression */
extern void T167x6982T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bracket_expression */
extern void T167x6839T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_procedure */
extern void T167x6894T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_procedure */
extern void T167x6955T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_function */
extern void T167x6874T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_once_function */
extern void T167x6952T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_function */
extern void T167x6876T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_manifest_tuple */
extern void T167x6949T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_create_expression */
extern void T167x6866T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c2_character_constant */
extern void T167x6842T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c1_character_constant */
extern void T167x6841T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_false_constant */
extern void T167x6896T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_true_constant */
extern void T167x6989T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_real_constant */
extern void T167x6993T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_real_constant */
extern void T167x6973T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_hexadecimal_integer_constant */
extern void T167x6912T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_underscored_integer_constant */
extern void T167x6992T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_integer_constant */
extern void T167x6971T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_special_manifest_string */
extern void T167x6981T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_verbatim_string */
extern void T167x6996T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_regular_manifest_string */
extern void T167x6972T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_c3_character_constant */
extern void T167x6843T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_void */
extern void T167x6997T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_bit_constant */
extern void T167x6832T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_deferred_procedure */
extern void T167x6875T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_do_procedure */
extern void T167x6878T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_attribute */
extern void T167x6830T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_unique_attribute */
extern void T167x6994T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_constant_attribute */
extern void T167x6857T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_call_expression */
extern void T167x6845T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_external_function */
extern void T167x6892T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_class */
extern void T167x6851T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_result */
extern void T167x6977T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_current */
extern void T167x6870T0(T0* C, T0* a1);
/* Call to ET_AST_PROCESSOR.process_identifier */
extern void T167x6913T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_error */
extern void T179x11563(T0* C);
/* Call to ET_FEATURE.set_implementation_checked */
extern void T179x11562(T0* C);
/* Call to ET_FEATURE.process */
extern void T179x5952T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_assertions_error */
extern void T179x11566(T0* C);
/* Call to ET_FEATURE.set_assertions_checked */
extern void T179x11565(T0* C);
/* Call to ET_FEATURE.set_other_seeds */
extern void T179x11519T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_seed */
extern void T179x11518T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_clients */
extern void T179x11510T0(T0* C, T0* a1);
/* Call to ET_FEATURE.resolve_inherited_signature */
extern void T179x11530T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_version */
extern void T179x11515T6(T0* C, T6 a1);
/* Call to ET_FEATURE.set_other_precursors */
extern void T179x11521T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_first_precursor */
extern void T179x11520T0(T0* C, T0* a1);
/* Call to ET_FEATURE.reset_postconditions */
extern void T179x11526(T0* C);
/* Call to ET_FEATURE.reset_preconditions */
extern void T179x11525(T0* C);
/* Call to ET_FEATURE.set_implementation_class */
extern void T179x11516T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_implementation_feature */
extern void T179x11517T0(T0* C, T0* a1);
/* Call to ET_FEATURE.set_id */
extern void T179x11512T6(T0* C, T6 a1);
/* Call to ET_EXPRESSION.process */
extern void T181x5952T0(T0* C, T0* a1);
/* Call to ET_EXPRESSION.reset */
extern void T181x11020(T0* C);
/* Call to ET_CALL_NAME.set_seed */
extern void T211x10958T6(T0* C, T6 a1);
/* Call to ET_AGENT.set_arguments */
extern void T218x16648T0(T0* C, T0* a1);
/* Call to ET_AGENT.process */
extern void T218x5952T0(T0* C, T0* a1);
/* Call to ET_CONSTANT.process */
extern void T219x5952T0(T0* C, T0* a1);
/* Call to ET_MANIFEST_STRING.set_index */
extern void T224x11034T6(T0* C, T6 a1);
/* Call to ET_OPERAND.set_index */
extern void T227x11034T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.process */
extern void T228x5952T0(T0* C, T0* a1);
/* Call to ET_AGENT_TARGET.set_index */
extern void T228x11034T6(T0* C, T6 a1);
/* Call to ET_AGENT_TARGET.reset */
extern void T228x11031(T0* C);
/* Call to ET_AGENT_ARGUMENT_OPERAND.process */
extern void T230x5952T0(T0* C, T0* a1);
/* Call to ET_AGENT_ARGUMENT_OPERAND.reset */
extern void T230x11031(T0* C);
/* Call to XM_NODE.node_set_parent */
extern void T260x9555T0(T0* C, T0* a1);
/* Call to XM_NODE.process */
extern void T260x9557T0(T0* C, T0* a1);
/* Call to ET_EXTENDED_FEATURE_NAME.reset */
extern void T298x10996(T0* C);
/* Call to KI_CHARACTER_OUTPUT_STREAM.put_character */
extern void T301x8614T2(T0* C, T2 a1);
/* Call to XM_EIFFEL_SCANNER.close_input */
extern void T323x18570(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T323x18569T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.set_encoding */
extern void T323x18575T0(T0* C, T0* a1);
/* Call to XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T323x18566(T0* C);
/* Call to XM_EIFFEL_SCANNER.read_token */
extern void T323x5098(T0* C);
/* Call to XM_EIFFEL_SCANNER.set_input_stream */
extern void T323x18568T0(T0* C, T0* a1);
/* Call to ET_CHARACTER_CONSTANT.set_index */
extern void T439x11034T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.set_index */
extern void T447x11034T6(T0* C, T6 a1);
/* Call to ET_INTEGER_CONSTANT.compute_value */
extern void T447x20118(T0* C);
/* Call to ET_INTEGER_CONSTANT.set_type */
extern void T447x20117T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_sign */
extern void T447x20115T0(T0* C, T0* a1);
/* Call to ET_INTEGER_CONSTANT.set_cast_type */
extern void T447x20116T0(T0* C, T0* a1);
/* Call to ET_ASSIGNER.reset */
extern void T616x11001(T0* C);
/* Call to ET_ALIAS_NAME.reset */
extern void T647x10954(T0* C);
/* Call to ET_ALIAS_NAME.set_infix */
extern void T647x21199(T0* C);
/* Call to ET_ALIAS_NAME.set_prefix */
extern void T647x21198(T0* C);
/* Call to ET_INSTRUCTION.process */
extern void T688x5952T0(T0* C, T0* a1);
/* Call to ET_INSTRUCTION.reset */
extern void T688x11087(T0* C);
/* Call to ET_CHOICE.reset */
extern void T732x11042(T0* C);
/* Call to ET_CHOICE_CONSTANT.reset */
extern void T737x11042(T0* C);
/* Call to ET_OPERATOR.reset */
extern void T769x10954(T0* C);
/* Call to ET_ASSERTION.process */
extern void T816x5952T0(T0* C, T0* a1);
/* Call to ET_ASSERTION.reset */
extern void T816x11020(T0* C);
/* Call to ET_DYNAMIC_TARGET.put_type */
extern void T1213x11449T0T0(T0* C, T0* a1, T0* a2);
/* Call to ET_ADDRESS_EXPRESSION.set_index */
extern void T1345x11034T6(T0* C, T6 a1);
/* GEC.execute */
extern T0* T21c26(void);
/* GEC.report_cannot_read_error */
extern void T21f32(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error */
extern void T24f8(T0* C, T0* a1);
/* UT_ERROR_HANDLER.report_error_message */
extern void T24f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_line */
extern void T72f10(T0* C, T0* a1);
/* KL_STDERR_FILE.put_new_line */
extern void T72f14(T0* C);
/* KL_STDERR_FILE.put_string */
extern void T72f11(T0* C, T0* a1);
/* KL_STDERR_FILE.old_put_string */
extern void T72f15(T0* C, T0* a1);
/* KL_STDERR_FILE.console_ps */
extern void T72f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_ROUTINES.as_string */
extern T0* T26f6(T0* C, T0* a1);
/* UC_UTF8_STRING.string */
extern T0* T904f1(T0* C);
/* UC_UTF8_STRING.next_byte_index */
extern T6 T904f27(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_byte_count */
extern T6 T903f3(T0* C, T2 a1);
/* CHARACTER_8.infix "<=" */
extern T1 T2f7(T2* C, T2 a1);
/* CHARACTER_8.infix "<" */
extern T1 T2f5(T2* C, T2 a1);
/* UC_UTF8_STRING.utf8 */
extern unsigned char ge346os9250;
extern T0* ge346ov9250;
extern T0* T904f32(T0* C);
/* UC_UTF8_ROUTINES.default_create */
extern T0* T903c36(void);
/* KL_INTEGER_ROUTINES.to_character */
extern T2 T139f1(T0* C, T6 a1);
/* INTEGER_32.to_character */
extern T2 T6f15(T6* C);
/* UC_UTF8_STRING.integer_ */
extern unsigned char ge282os2769;
extern T0* ge282ov2769;
extern T0* T904f26(T0* C);
/* KL_INTEGER_ROUTINES.default_create */
extern T0* T139c6(void);
/* INTEGER_32.infix "<=" */
extern T1 T6f6(T6* C, T6 a1);
/* KL_PLATFORM.maximum_character_code */
extern unsigned char ge413os11280;
extern T6 ge413ov11280;
extern T6 T138f1(T0* C);
/* KL_PLATFORM.old_maximum_character_code */
extern T6 T138f2(T0* C);
/* UC_UTF8_STRING.platform */
extern unsigned char ge336os1659;
extern T0* ge336ov1659;
extern T0* T904f25(T0* C);
/* KL_PLATFORM.default_create */
extern T0* T138c5(void);
/* UC_UTF8_STRING.item_code_at_byte_index */
extern T6 T904f24(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.encoded_next_value */
extern T6 T903f6(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.encoded_first_value */
extern T6 T903f4(T0* C, T2 a1);
/* STRING_8.append_character */
extern void T17f38(T0* C, T2 a1);
/* STRING_8.resize */
extern void T17f43(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].aliased_resized_area */
extern T0* T15f3(T0* C, T6 a1);
/* INTEGER_32.infix ">=" */
extern T1 T6f5(T6* C, T6 a1);
/* STRING_8.additional_space */
extern T6 T17f12(T0* C);
/* INTEGER_32.max */
extern T6 T6f16(T6* C, T6 a1);
/* STRING_8.capacity */
extern T6 T17f11(T0* C);
/* UC_UTF8_STRING.byte_item */
extern T2 T904f23(T0* C, T6 a1);
/* UC_UTF8_STRING.old_item */
extern T2 T904f38(T0* C, T6 a1);
/* UC_UTF8_STRING.set_count */
extern void T904f68(T0* C, T6 a1);
/* UC_UTF8_STRING.reset_byte_index_cache */
extern void T904f78(T0* C);
/* STRING_8.make */
extern void T17f39(T0* C, T6 a1);
/* STRING_8.make */
extern T0* T17c39(T6 a1);
/* STRING_8.make_area */
extern void T17f44(T0* C, T6 a1);
/* SPECIAL [CHARACTER_8].make */
extern T0* T15c9(T6 a1);
/* STRING_8.string */
extern T0* T17f14(T0* C);
/* STRING_8.append */
extern void T17f42(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].copy_data */
extern void T15f8(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [CHARACTER_8].move_data */
extern void T15f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].overlapping_move */
extern void T15f13(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [CHARACTER_8].non_overlapping_move */
extern void T15f12(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.as_string */
extern T0* T904f11(T0* C);
/* UC_UTF8_STRING.to_utf8 */
extern T0* T904f31(T0* C);
/* KL_ANY_ROUTINES.same_types */
extern T1 T75f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.any_ */
extern unsigned char ge277os1658;
extern T0* ge277ov1658;
extern T0* T26f2(T0* C);
/* KL_ANY_ROUTINES.default_create */
extern T0* T75c4(void);
/* KL_STDERR_FILE.string_ */
extern unsigned char ge285os1583;
extern T0* ge285ov1583;
extern T0* T72f1(T0* C);
/* KL_STRING_ROUTINES.default_create */
extern T0* T26c19(void);
/* UT_ERROR_HANDLER.message */
extern T0* T24f5(T0* C, T0* a1);
/* UT_VERSION_NUMBER.default_message */
extern T0* T64f2(T0* C);
/* UT_VERSION_NUMBER.message */
extern T0* T64f4(T0* C, T0* a1);
/* UT_VERSION_NUMBER.arguments */
extern unsigned char ge331os1575;
extern T0* ge331ov1575;
extern T0* T64f6(T0* C);
/* KL_ARGUMENTS.make */
extern T0* T23c4(void);
/* KL_ARGUMENTS.argument */
extern T0* T23f2(T0* C, T6 a1);
/* KL_STRING_ROUTINES.appended_string */
extern T0* T26f11(T0* C, T0* a1, T0* a2);
/* STRING_8.append_string */
extern void T17f37(T0* C, T0* a1);
/* KL_STRING_ROUTINES.concat */
extern T0* T26f8(T0* C, T0* a1, T0* a2);
/* STRING_8.infix "+" */
extern T0* T17f7(T0* C, T0* a1);
/* STRING_8.new_string */
extern T0* T17f10(T0* C, T6 a1);
/* UC_UTF8_STRING.prefixed_string */
extern T0* T904f13(T0* C, T0* a1);
/* UC_UTF8_STRING.make */
extern void T904f60(T0* C, T6 a1);
/* UC_UTF8_STRING.make */
extern T0* T904c60(T6 a1);
/* UC_UTF8_STRING.old_set_count */
extern void T904f72(T0* C, T6 a1);
/* UC_UTF8_STRING.byte_capacity */
extern T6 T904f46(T0* C);
/* UC_UTF8_STRING.capacity */
extern T6 T904f46p1(T0* C);
/* UC_UTF8_STRING.make */
extern void T904f60p1(T0* C, T6 a1);
/* UC_UTF8_STRING.make_area */
extern void T904f79(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.substring_byte_count */
extern T6 T903f22(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_ROUTINES.code_byte_count */
extern T6 T903f24(T0* C, T6 a1);
/* UC_UTF8_STRING.item_code */
extern T6 T904f3(T0* C, T6 a1);
/* STRING_8.item_code */
extern T6 T17f4(T0* C, T6 a1);
/* UC_UTF8_STRING.shifted_byte_index */
extern T6 T904f50(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.byte_index */
extern T6 T904f28(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.dummy_uc_string */
extern unsigned char ge358os23639;
extern T0* ge358ov23639;
extern T0* T903f27(T0* C);
/* UC_STRING.make_empty */
extern T0* T74c8(void);
/* UC_STRING.make */
extern void T74f9(T0* C, T6 a1);
/* UC_STRING.old_set_count */
extern void T74f12(T0* C, T6 a1);
/* UC_STRING.set_count */
extern void T74f11(T0* C, T6 a1);
/* UC_STRING.byte_capacity */
extern T6 T74f2(T0* C);
/* UC_STRING.capacity */
extern T6 T74f2p1(T0* C);
/* UC_STRING.make */
extern void T74f9p1(T0* C, T6 a1);
/* UC_STRING.make_area */
extern void T74f13(T0* C, T6 a1);
/* UC_STRING.reset_byte_index_cache */
extern void T74f10(T0* C);
/* UC_UTF8_ROUTINES.character_byte_count */
extern T6 T903f23(T0* C, T2 a1);
/* UC_UTF8_STRING.item */
extern T2 T904f7(T0* C, T6 a1);
/* UC_UTF8_STRING.character_item_at_byte_index */
extern T2 T904f30(T0* C, T6 a1);
/* UC_UTF8_ROUTINES.any_ */
extern T0* T903f25(T0* C);
/* UC_UTF8_STRING.infix "+" */
extern T0* T904f12(T0* C, T0* a1);
/* UC_UTF8_STRING.append_string */
extern void T904f57(T0* C, T0* a1);
/* UC_UTF8_STRING.dummy_uc_string */
extern unsigned char ge427os9188;
extern T0* ge427ov9188;
extern T0* T904f47(T0* C);
/* UC_UTF8_STRING.append_substring */
extern void T904f59(T0* C, T0* a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_substring_at_byte_index */
extern void T904f77(T0* C, T0* a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* UC_UTF8_STRING.put_code_at_byte_index */
extern void T904f85(T0* C, T6 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_character_at_byte_index */
extern void T904f76(T0* C, T2 a1, T6 a2, T6 a3);
/* UC_UTF8_STRING.put_byte */
extern void T904f86(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.old_put */
extern void T904f75(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.resize_byte_storage */
extern void T904f74(T0* C, T6 a1);
/* UC_UTF8_STRING.resize */
extern void T904f87(T0* C, T6 a1);
/* UC_UTF8_STRING.cloned_string */
extern T0* T904f37(T0* C);
/* UC_UTF8_STRING.twin */
extern T0* T904f15(T0* C);
/* UC_UTF8_STRING.copy */
extern void T904f66(T0* C, T0* a1);
/* UC_UTF8_STRING.copy */
extern void T904f66p1(T0* C, T0* a1);
/* SPECIAL [CHARACTER_8].twin */
extern T0* T15f4(T0* C);
/* UC_UTF8_STRING.append_string */
extern void T904f57p1(T0* C, T0* a1);
/* UC_UTF8_STRING.append */
extern void T904f73(T0* C, T0* a1);
/* UC_UTF8_STRING.additional_space */
extern T6 T904f49(T0* C);
/* ISE_RUNTIME.check_assert */
extern T1 T1159s1(T1 a1);
/* UC_UTF8_STRING.any_ */
extern T0* T904f44(T0* C);
/* ARRAY [STRING].item */
extern T0* T221f5(T0* C, T6 a1);
/* ARRAY [STRING].valid_index */
extern T1 T221f4(T0* C, T6 a1);
/* UC_UTF8_STRING.to_integer */
extern T6 T904f34(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parsed_integer */
extern T6 T878f1(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.parse_string_with_type */
extern void T878f17(T0* C, T0* a1, T6 a2);
/* STRING_TO_INTEGER_CONVERTOR.parse_character */
extern void T878f23(T0* C, T2 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflowed */
extern T1 T878f15(T0* C);
/* INTEGER_OVERFLOW_CHECKER.will_overflow */
extern T1 T1155f1(T0* C, T11 a1, T11 a2, T6 a3, T6 a4);
/* NATURAL_64.infix ">" */
extern T1 T11f4(T11* C, T11 a1);
/* ARRAY [NATURAL_64].item */
extern T11 T1260f4(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.overflow_checker */
extern unsigned char ge2062os22490;
extern T0* ge2062ov22490;
extern T0* T878f14(T0* C);
/* INTEGER_OVERFLOW_CHECKER.make */
extern T0* T1155c13(void);
/* NATURAL_64.to_natural_64 */
extern T11 T11f7(T11* C);
/* NATURAL_32.to_natural_64 */
extern T11 T10f4(T10* C);
/* NATURAL_16.to_natural_64 */
extern T11 T9f3(T9* C);
/* NATURAL_8.to_natural_64 */
extern T11 T8f11(T8* C);
/* INTEGER_64.to_natural_64 */
extern T11 T7f3(T7* C);
/* INTEGER_16.to_natural_64 */
extern T11 T5f3(T5* C);
/* ARRAY [NATURAL_64].put */
extern void T1260f6(T0* C, T11 a1, T6 a2);
/* INTEGER_8.to_natural_64 */
extern T11 T4f3(T4* C);
/* ARRAY [NATURAL_64].make */
extern T0* T1260c5(T6 a1, T6 a2);
/* ARRAY [NATURAL_64].make_area */
extern void T1260f7(T0* C, T6 a1);
/* SPECIAL [NATURAL_64].make */
extern T0* T1259c2(T6 a1);
/* STRING_8.has */
extern T1 T17f31(T0* C, T2 a1);
/* CHARACTER_8.is_digit */
extern T1 T2f10(T2* C);
/* NATURAL_8.infix ">" */
extern T1 T8f3(T8* C, T8 a1);
/* NATURAL_8.infix "&" */
extern T8 T8f2(T8* C, T8 a1);
/* CHARACTER_8.character_types */
extern T8 T2f13(T2* C, T6 a1);
/* CHARACTER_8.internal_character_types */
extern unsigned char ge43os93;
extern T0* ge43ov93;
extern T0* T2f17(T2* C);
/* NATURAL_8.infix "|" */
extern T8 T8f4(T8* C, T8 a1);
/* SPECIAL [NATURAL_8].make */
extern T0* T1217c2(T6 a1);
/* INTEGER_32.to_natural_64 */
extern T11 T6f25(T6* C);
/* UC_UTF8_STRING.code */
extern T10 T904f43(T0* C, T6 a1);
/* STRING_8.code */
extern T10 T17f30(T0* C, T6 a1);
/* INTEGER_32.to_natural_32 */
extern T10 T6f28(T6* C);
/* STRING_TO_INTEGER_CONVERTOR.reset */
extern void T878f22(T0* C, T6 a1);
/* UC_UTF8_STRING.ctoi_convertor */
extern unsigned char ge2059os1256;
extern T0* ge2059ov1256;
extern T0* T904f42(T0* C);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators_acceptable */
extern void T878f21(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators_acceptable */
extern void T878f20(T0* C, T1 a1);
/* STRING_TO_INTEGER_CONVERTOR.set_trailing_separators */
extern void T878f19(T0* C, T0* a1);
/* STRING_8.make_from_string */
extern T0* T17c58(T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.set_leading_separators */
extern void T878f18(T0* C, T0* a1);
/* STRING_TO_INTEGER_CONVERTOR.make */
extern T0* T878c16(void);
/* STRING_8.to_integer */
extern T6 T17f16(T0* C);
/* STRING_8.ctoi_convertor */
extern T0* T17f20(T0* C);
/* UC_UTF8_STRING.is_integer */
extern T1 T904f33(T0* C);
/* UC_UTF8_STRING.is_valid_integer_or_natural */
extern T1 T904f41(T0* C, T6 a1);
/* STRING_TO_INTEGER_CONVERTOR.is_integral_integer */
extern T1 T878f2(T0* C);
/* STRING_8.is_integer */
extern T1 T17f24(T0* C);
/* STRING_8.is_valid_integer_or_natural */
extern T1 T17f27(T0* C, T6 a1);
/* KL_STRING_ROUTINES.append_substring_to_string */
extern void T26f23(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* KL_STRING_ROUTINES.appended_substring */
extern T0* T26f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* UC_UTF8_STRING.new_empty_string */
extern T0* T904f14(T0* C, T6 a1);
/* UC_UTF8_STRING.append_character */
extern void T904f58(T0* C, T2 a1);
/* STRING_8.item */
extern T2 T17f9(T0* C, T6 a1);
/* KL_STRING_ROUTINES.new_empty_string */
extern T0* T26f9(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.old_wipe_out */
extern void T904f61(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T904f80(T0* C);
/* UC_UTF8_STRING.wipe_out */
extern void T904f61p1(T0* C);
/* STRING_8.wipe_out */
extern void T17f51(T0* C);
/* KL_STRING_ROUTINES.cloned_string */
extern T0* T26f7(T0* C, T0* a1);
/* STRING_8.twin */
extern T0* T17f23(T0* C);
/* STRING_8.copy */
extern void T17f54(T0* C, T0* a1);
/* UT_VERSION_NUMBER.string_ */
extern T0* T64f5(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.make */
extern T0* T62c7(T0* a1);
/* ARRAY [STRING].put */
extern void T221f8(T0* C, T0* a1, T6 a2);
/* ARRAY [STRING].make */
extern T0* T221c7(T6 a1, T6 a2);
/* ARRAY [STRING].make_area */
extern void T221f9(T0* C, T6 a1);
/* SPECIAL [STRING].make */
extern T0* T102c5(T6 a1);
/* GEC.process_universe */
extern void T21f31(T0* C, T0* a1);
/* KL_SHELL_COMMAND.execute */
extern void T57f13(T0* C);
/* KL_SHELL_COMMAND.operating_system */
extern unsigned char ge335os1578;
extern T0* ge335ov1578;
extern T0* T57f6(T0* C);
/* KL_OPERATING_SYSTEM.default_create */
extern T0* T60c7(void);
/* KL_SHELL_COMMAND.system */
extern void T57f14(T0* C, T0* a1);
/* KL_SHELL_COMMAND.system_call */
extern T6 T57f9(T0* C, T14 a1);
/* UC_UTF8_STRING.to_c */
extern T0* T904f9(T0* C);
/* STRING_8.to_c */
extern T0* T17f3(T0* C);
/* KL_SHELL_COMMAND.default_shell */
extern unsigned char ge2178os4648;
extern T0* ge2178ov4648;
extern T0* T57f8(T0* C);
/* KL_SHELL_COMMAND.get */
extern T0* T57f10(T0* C, T0* a1);
/* STRING_8.make_from_c */
extern T0* T17c46(T14 a1);
/* STRING_8.from_c */
extern void T17f49(T0* C, T14 a1);
/* C_STRING.read_string_into */
extern void T881f6(T0* C, T0* a1);
/* C_STRING.read_substring_into */
extern void T881f8(T0* C, T0* a1, T6 a2, T6 a3);
/* STRING_8.put_code */
extern void T17f59(T0* C, T10 a1, T6 a2);
/* NATURAL_8.to_natural_32 */
extern T10 T8f1(T8* C);
/* MANAGED_POINTER.read_natural_8 */
extern T8 T397f5(T0* C, T6 a1);
/* TYPED_POINTER [NATURAL_8].memory_copy */
extern void T1237f2(T1237* C, T14 a1, T6 a2);
/* TYPED_POINTER [NATURAL_8].c_memcpy */
extern void T1237f3(T1237* C, T14 a1, T14 a2, T6 a3);
/* C_STRING.share_from_pointer */
extern void T881f5(T0* C, T14 a1);
/* C_STRING.share_from_pointer_and_count */
extern void T881f7(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.set_from_pointer */
extern void T397f10(T0* C, T14 a1, T6 a2);
/* MANAGED_POINTER.share_from_pointer */
extern T0* T397c9(T14 a1, T6 a2);
/* C_STRING.c_strlen */
extern T6 T881f3(T0* C, T14 a1);
/* STRING_8.c_string_provider */
extern unsigned char ge2059os1255;
extern T0* ge2059ov1255;
extern T0* T17f22(T0* C);
/* C_STRING.make_empty */
extern T0* T881c4(T6 a1);
/* MANAGED_POINTER.make */
extern T0* T397c8(T6 a1);
/* EXCEPTIONS.raise */
extern void T1005f3(T0* C, T0* a1);
/* EXCEPTIONS.eraise */
extern void T1005f4(T0* C, T14 a1, T6 a2);
/* EXCEPTIONS.default_create */
extern T0* T1005c2(void);
/* MANAGED_POINTER.default_pointer */
extern T14 T397f2(T0* C);
/* POINTER.memory_calloc */
extern T14 T14f6(T14* C, T6 a1, T6 a2);
/* POINTER.c_calloc */
extern T14 T14f7(T14* C, T6 a1, T6 a2);
/* KL_SHELL_COMMAND.eif_getenv */
extern T14 T57f11(T0* C, T14 a1);
/* UC_UTF8_STRING.old_is_empty */
extern T1 T904f10(T0* C);
/* STRING_8.is_empty */
extern T1 T17f6(T0* C);
/* KL_SHELL_COMMAND.make */
extern T0* T57c12(T0* a1);
/* KL_SHELL_COMMAND.string_ */
extern T0* T57f3(T0* C);
/* KL_UNIX_FILE_SYSTEM.absolute_pathname */
extern T0* T66f1(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.pathname */
extern T0* T66f7(T0* C, T0* a1, T0* a2);
/* KL_UNIX_FILE_SYSTEM.string_ */
extern T0* T66f11(T0* C);
/* KL_UNIX_FILE_SYSTEM.cwd */
extern T0* T66f6(T0* C);
/* EXECUTION_ENVIRONMENT.current_working_directory */
extern T0* T110f2(T0* C);
/* KL_UNIX_FILE_SYSTEM.execution_environment */
extern unsigned char ge394os8432;
extern T0* ge394ov8432;
extern T0* T66f12(T0* C);
/* EXECUTION_ENVIRONMENT.default_create */
extern T0* T110c4(void);
/* KL_UNIX_FILE_SYSTEM.is_absolute_pathname */
extern T1 T66f5(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.absolute_pathname */
extern T0* T65f1(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.current_drive */
extern T0* T65f10(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_directory_separator */
extern T1 T65f13(T0* C, T2 a1);
/* KL_WINDOWS_FILE_SYSTEM.string_ */
extern T0* T65f9(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.pathname */
extern T0* T65f8(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.cwd */
extern T0* T65f7(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.execution_environment */
extern T0* T65f15(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_relative_pathname */
extern T1 T65f6(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.is_absolute_pathname */
extern T1 T65f5(T0* C, T0* a1);
/* GEC.file_system */
extern unsigned char ge314os1579;
extern T0* ge314ov1579;
extern T0* T21f22(T0* C);
/* GEC.unix_file_system */
extern unsigned char ge314os1582;
extern T0* ge314ov1582;
extern T0* T21f25(T0* C);
/* KL_UNIX_FILE_SYSTEM.make */
extern T0* T66c16(void);
/* KL_OPERATING_SYSTEM.is_unix */
extern unsigned char ge410os8400;
extern T1 ge410ov8400;
extern T1 T60f2(T0* C);
/* KL_OPERATING_SYSTEM.current_working_directory */
extern T0* T60f4(T0* C);
/* KL_OPERATING_SYSTEM.execution_environment */
extern unsigned char ge410os8404;
extern T0* ge410ov8404;
extern T0* T60f5(T0* C);
/* STRING_8.is_equal */
extern T1 T17f18(T0* C, T0* a1);
/* STRING_8.str_strict_cmp */
extern T6 T17f21(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_OPERATING_SYSTEM.variable_value */
extern T0* T60f3(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.get */
extern T0* T110f1(T0* C, T0* a1);
/* EXECUTION_ENVIRONMENT.eif_getenv */
extern T14 T110f3(T0* C, T14 a1);
/* GEC.windows_file_system */
extern unsigned char ge314os1580;
extern T0* ge314ov1580;
extern T0* T21f24(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.make */
extern T0* T65c20(void);
/* KL_OPERATING_SYSTEM.is_windows */
extern unsigned char ge410os8399;
extern T1 ge410ov8399;
extern T1 T60f1(T0* C);
/* GEC.operating_system */
extern T0* T21f21(T0* C);
/* GEC.no_c_compile */
extern T1 T21f20(T0* C);
/* AP_FLAG.was_found */
extern T1 T32f1(T0* C);
/* ET_C_GENERATOR.generate */
extern void T56f292(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].wipe_out */
extern void T76f27(T0* C);
/* DS_ARRAYED_LIST [STRING].clear_items */
extern void T76f33(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_all_cursors_after */
extern void T76f32(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].set_next_cursor */
extern void T285f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].set_position */
extern void T285f8(T0* C, T6 a1);
/* ET_C_GENERATOR.generate_compilation_script */
extern void T56f296(T0* C, T0* a1);
/* ET_C_GENERATOR.report_cannot_write_error */
extern void T56f298(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error */
extern void T52f163(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T52f192(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_error_message */
extern void T52f192p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.message */
extern T0* T52f17(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error */
extern void T28f163(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_error_message */
extern void T28f192p1(T0* C, T0* a1);
/* ET_ERROR_HANDLER.message */
extern T0* T28f17(T0* C, T0* a1);
/* ET_C_GENERATOR.error_handler */
extern T0* T56f62(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.make */
extern T0* T199c7(T0* a1);
/* ET_C_GENERATOR.set_fatal_error */
extern void T56f297(T0* C);
/* KL_TEXT_OUTPUT_FILE.close */
extern void T196f26(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_close */
extern void T196f33(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_close */
extern void T196f36(T0* C, T14 a1);
/* DS_HASH_TABLE [STRING, STRING].replace */
extern void T40f58(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].item_storage_put */
extern void T40f43(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].search_position */
extern void T40f42(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].clashes_item */
extern T6 T40f17(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].hash_position */
extern T6 T40f8(T0* C, T0* a1);
/* UC_UTF8_STRING.hash_code */
extern T6 T904f17(T0* C);
/* UC_UTF8_STRING.hash_code */
extern T6 T904f17p1(T0* C);
/* INTEGER_32.infix "|<<" */
extern T6 T6f17(T6* C, T6 a1);
/* STRING_8.hash_code */
extern T6 T17f15(T0* C);
/* KL_STRING_EQUALITY_TESTER.test */
extern T1 T193f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.test */
extern T1 T43f1(T0* C, T0* a1, T0* a2);
/* UC_STRING_EQUALITY_TESTER.string_ */
extern T0* T43f2(T0* C);
/* DS_HASH_TABLE [STRING, STRING].key_storage_item */
extern T0* T40f16(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].slots_item */
extern T6 T40f10(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].unset_found_item */
extern void T40f41(T0* C);
/* UT_TEMPLATE_EXPANDER.expand_from_values */
extern T0* T198f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].value */
extern T0* T40f34(T0* C, T0* a1);
/* UT_TEMPLATE_EXPANDER.string_ */
extern T0* T198f2(T0* C);
/* ET_C_GENERATOR.template_expander */
extern unsigned char ge1048os7252;
extern T0* ge1048ov7252;
extern T0* T56f61(T0* C);
/* UT_TEMPLATE_EXPANDER.make */
extern T0* T198c3(void);
/* KL_TEXT_OUTPUT_FILE.is_open_write */
extern T1 T196f1(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_open_write */
extern T1 T196f2(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T196f21(T0* C);
/* KL_TEXT_OUTPUT_FILE.is_closed */
extern T1 T196f12(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_is_closed */
extern T1 T196f19(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_write */
extern void T196f30(T0* C);
/* KL_TEXT_OUTPUT_FILE.default_pointer */
extern T14 T196f16(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_write */
extern void T196f30p1(T0* C);
/* KL_TEXT_OUTPUT_FILE.file_open */
extern T14 T196f18(T0* C, T14 a1, T6 a2);
/* KL_TEXT_OUTPUT_FILE.make */
extern T0* T196c20(T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_make */
extern void T196f29(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.string_ */
extern T0* T196f9(T0* C);
/* ET_C_GENERATOR.operating_system */
extern T0* T56f60(T0* C);
/* DS_HASH_TABLE [STRING, STRING].has */
extern T1 T40f32(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].item */
extern T0* T40f31(T0* C, T0* a1);
/* DS_HASH_TABLE [STRING, STRING].item_storage_item */
extern T0* T40f35(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].force */
extern void T40f57(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].key_storage_put */
extern void T40f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].slots_put */
extern void T40f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].clashes_put */
extern void T40f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [STRING, STRING].resize */
extern void T40f44(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].clashes_resize */
extern void T40f52(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [INTEGER].resize */
extern T0* T105f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [INTEGER].resized_area */
extern T0* T103f4(T0* C, T6 a1);
/* SPECIAL [INTEGER].copy_data */
extern void T103f10(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [INTEGER].move_data */
extern void T103f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].overlapping_move */
extern void T103f12(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].non_overlapping_move */
extern void T103f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [INTEGER].make */
extern T0* T103c7(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].special_integer_ */
extern unsigned char ge283os4591;
extern T0* ge283ov4591;
extern T0* T40f27(T0* C);
/* KL_SPECIAL_ROUTINES [INTEGER].default_create */
extern T0* T105c4(void);
/* DS_HASH_TABLE [STRING, STRING].key_storage_resize */
extern void T40f51(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].resize */
extern T0* T106f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [STRING].resized_area */
extern T0* T102f3(T0* C, T6 a1);
/* SPECIAL [STRING].copy_data */
extern void T102f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [STRING].move_data */
extern void T102f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING].overlapping_move */
extern void T102f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [STRING].non_overlapping_move */
extern void T102f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [STRING, STRING].item_storage_resize */
extern void T40f50(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].slots_resize */
extern void T40f49(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].new_modulus */
extern T6 T40f19(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].new_capacity */
extern T6 T40f7(T0* C, T6 a1);
/* KL_EXECUTION_ENVIRONMENT.interpreted_string */
extern T0* T45f4(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.variable_value */
extern T0* T45f1(T0* C, T0* a1);
/* KL_EXECUTION_ENVIRONMENT.environment_impl */
extern unsigned char ge392os4644;
extern T0* ge392ov4644;
extern T0* T45f2(T0* C);
/* KL_EXECUTION_ENVIRONMENT.string_ */
extern T0* T45f3(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.replace_all */
extern T0* T195f1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replace_all_to_string */
extern void T195f301(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_substring */
extern void T195f312(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_it */
extern void T195f327(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_start */
extern T1 T195f146(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_internal */
extern T6 T195f228(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_type */
extern T6 T195f292(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.match_not_repeated_characters */
extern T6 T195f291(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_PCRE_REGULAR_EXPRESSION.infinity */
extern unsigned char ge1153os15586;
extern T6 ge1153ov15586;
extern T6 T195f55(T0* C);
/* KL_PLATFORM.maximum_integer */
extern unsigned char ge413os11282;
extern T6 ge413ov11282;
extern T6 T138f3(T0* C);
/* KL_PLATFORM.old_maximum_integer */
extern T6 T138f4(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.platform */
extern T0* T195f191(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_characters */
extern T6 T195f290(T0* C, T6 a1, T6 a2, T6 a3, T1 a4);
/* RX_BYTE_CODE.character_item */
extern T6 T857f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_classes */
extern T6 T195f289(T0* C, T6 a1);
/* RX_BYTE_CODE.character_set_has */
extern T1 T857f5(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.match_repeated_refs */
extern T6 T195f288(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_ref */
extern T6 T195f294(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.space_set */
extern unsigned char ge1159os15753;
extern T0* ge1159ov15753;
extern T0* T195f147(T0* C);
/* RX_CHARACTER_SET.make */
extern T0* T859c4(T0* a1);
/* RX_CHARACTER_SET.add_string */
extern void T859f10(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_character */
extern void T859f9(T0* C, T6 a1);
/* RX_CHARACTER_SET.make_empty */
extern void T859f5(T0* C);
/* RX_CHARACTER_SET.make_empty */
extern T0* T859c5(void);
/* KL_SPECIAL_ROUTINES [BOOLEAN].make */
extern T0* T345f1(T0* C, T6 a1);
/* TO_SPECIAL [BOOLEAN].make_area */
extern T0* T990c2(T6 a1);
/* SPECIAL [BOOLEAN].make */
extern T0* T343c4(T6 a1);
/* RX_CHARACTER_SET.special_boolean_ */
extern unsigned char ge283os4589;
extern T0* ge283ov4589;
extern T0* T859f3(T0* C);
/* KL_SPECIAL_ROUTINES [BOOLEAN].default_create */
extern T0* T345c3(void);
/* RX_PCRE_REGULAR_EXPRESSION.digit_set */
extern unsigned char ge1159os15745;
extern T0* ge1159ov15745;
extern T0* T195f163(T0* C);
/* RX_CHARACTER_SET.has */
extern T1 T859f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ims_options */
extern void T195f325(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_dotall */
extern T1 T195f81(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_multiline */
extern T1 T195f80(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_caseless */
extern T1 T195f79(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_match_count */
extern void T195f334(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_next_start */
extern void T195f333(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_recursive */
extern T6 T195f287(T0* C, T6 a1, T1 a2, T1 a3);
/* RX_BYTE_CODE.integer_item */
extern T6 T857f2(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.next_matching_alternate */
extern T6 T195f285(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.match_additional_bracket */
extern T6 T195f266(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.opcode_item */
extern T6 T857f3(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.special_integer_ */
extern T0* T195f7(T0* C);
/* RX_CASE_MAPPING.flip_case */
extern T6 T858f2(T0* C, T6 a1);
/* RX_CASE_MAPPING.to_lower */
extern T6 T858f1(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_end_position */
extern T6 T195f47(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.append_replacement_to_string */
extern void T195f313(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.append_captured_substring_to_string */
extern void T195f328(T0* C, T0* a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_start_position */
extern T6 T195f46(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_matched */
extern T1 T195f45(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.string_ */
extern T0* T195f2(T0* C);
/* ET_C_GENERATOR.execution_environment */
extern unsigned char ge334os1576;
extern T0* ge334ov1576;
extern T0* T56f59(T0* C);
/* KL_EXECUTION_ENVIRONMENT.default_create */
extern T0* T45c5(void);
/* ET_C_GENERATOR.string_ */
extern T0* T56f58(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.match */
extern void T195f300(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].item */
extern T0* T76f6(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T195f299(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile */
extern void T195f299p1(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_startline */
extern void T195f311(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.has_startline */
extern T1 T195f44(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.first_significant_code */
extern T6 T195f186(T0* C, T6 a1, T6 a2, T1 a3);
/* RX_PCRE_REGULAR_EXPRESSION.find_firstchar */
extern T6 T195f43(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_anchored */
extern void T195f310(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.can_anchored */
extern T1 T195f42(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.ims_options */
extern T6 T195f40(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_dotall */
extern T6 T195f127(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_multiline */
extern T6 T195f125(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_option_caseless */
extern T6 T195f123(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_regexp */
extern void T195f309(T0* C, T6 a1, T1 a2, T1 a3, T6 a4);
/* RX_BYTE_CODE.set_count */
extern void T857f18(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.find_fixed_code_length */
extern T6 T195f60(T0* C, T6 a1);
/* RX_BYTE_CODE.put_integer */
extern void T857f17(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_branch */
extern void T195f326(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.meta_set */
extern unsigned char ge1159os15754;
extern T0* ge1159ov15754;
extern T0* T195f143(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.maxlit */
extern unsigned char ge1153os15587;
extern T6 ge1153ov15587;
extern T6 T195f142(T0* C);
/* RX_BYTE_CODE.append_character */
extern void T857f19(T0* C, T6 a1);
/* RX_BYTE_CODE.put_character */
extern void T857f25(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.resize_byte_code */
extern void T857f24(T0* C, T6 a1);
/* RX_BYTE_CODE.special_integer_ */
extern T0* T857f9(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_escape */
extern T6 T195f137(T0* C, T6 a1, T1 a2);
/* RX_PCRE_REGULAR_EXPRESSION.scan_hex_number */
extern T6 T195f218(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.xdigit_set */
extern unsigned char ge1159os15747;
extern T0* ge1159ov15747;
extern T0* T195f240(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.scan_octal_number */
extern T6 T195f217(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.escape_character */
extern T6 T195f213(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.to_option_ims */
extern T6 T195f130(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_ichanged */
extern void T195f324(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_dotall */
extern T6 T195f128(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_multiline */
extern T6 T195f126(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.unset_option_caseless */
extern T6 T195f124(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.scan_decimal_number */
extern T6 T195f105(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.compile_repeats */
extern void T195f331(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5);
/* RX_BYTE_CODE.append_subcopy */
extern void T857f23(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.put_opcode */
extern void T857f22(T0* C, T6 a1, T6 a2);
/* RX_BYTE_CODE.move_right */
extern void T857f21(T0* C, T6 a1, T6 a2);
/* RX_PCRE_REGULAR_EXPRESSION.compile_single_repeat */
extern void T195f332(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* RX_PCRE_REGULAR_EXPRESSION.compile_character_class */
extern void T195f330(T0* C);
/* RX_BYTE_CODE.append_character_set */
extern void T857f20(T0* C, T0* a1, T1 a2);
/* RX_BYTE_CODE.resize_character_sets */
extern void T857f26(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [BOOLEAN].resize */
extern T0* T345f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [BOOLEAN].resized_area */
extern T0* T343f3(T0* C, T6 a1);
/* SPECIAL [BOOLEAN].copy_data */
extern void T343f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [BOOLEAN].move_data */
extern void T343f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].overlapping_move */
extern void T343f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [BOOLEAN].non_overlapping_move */
extern void T343f9(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_BYTE_CODE.special_boolean_ */
extern T0* T857f12(T0* C);
/* RX_CHARACTER_SET.add_set */
extern void T859f8(T0* C, T0* a1);
/* RX_CHARACTER_SET.add_negated_set */
extern void T859f7(T0* C, T0* a1);
/* ARRAY [RX_CHARACTER_SET].item */
extern T0* T862f4(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.class_sets */
extern unsigned char ge1159os15756;
extern T0* ge1159ov15756;
extern T0* T195f155(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.default_word_set */
extern unsigned char ge1159os15741;
extern T0* ge1159ov15741;
extern T0* T195f21(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.punct_set */
extern unsigned char ge1159os15751;
extern T0* ge1159ov15751;
extern T0* T195f239(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.print_set */
extern unsigned char ge1159os15750;
extern T0* ge1159ov15750;
extern T0* T195f238(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.graph_set */
extern unsigned char ge1159os15749;
extern T0* ge1159ov15749;
extern T0* T195f237(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.cntrl_set */
extern unsigned char ge1159os15748;
extern T0* ge1159ov15748;
extern T0* T195f236(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.ascii_set */
extern unsigned char ge1159os15752;
extern T0* ge1159ov15752;
extern T0* T195f235(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alnum_set */
extern unsigned char ge1159os15746;
extern T0* ge1159ov15746;
extern T0* T195f234(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.upper_set */
extern unsigned char ge1159os15742;
extern T0* ge1159ov15742;
extern T0* T195f233(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.lower_set */
extern unsigned char ge1159os15743;
extern T0* ge1159ov15743;
extern T0* T195f232(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.alpha_set */
extern unsigned char ge1159os15744;
extern T0* ge1159ov15744;
extern T0* T195f230(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_name */
extern T6 T195f153(T0* C, T6 a1, T6 a2);
/* ARRAY [STRING].count */
extern T6 T221f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.class_names */
extern unsigned char ge1159os15755;
extern T0* ge1159ov15755;
extern T0* T195f231(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.check_posix_syntax */
extern T6 T195f151(T0* C, T6 a1);
/* RX_CHARACTER_SET.wipe_out */
extern void T859f6(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.actual_set */
extern unsigned char ge1153os15585;
extern T0* ge1153ov15585;
extern T0* T195f148(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.compile_counted_repeats */
extern T1 T195f83(T0* C, T6 a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.scan_comment */
extern void T195f329(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.is_option_undef */
extern T1 T195f57(T0* C, T6 a1);
/* RX_BYTE_CODE.append_integer */
extern void T857f16(T0* C, T6 a1);
/* RX_BYTE_CODE.append_opcode */
extern void T857f15(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_error */
extern void T195f308(T0* C, T0* a1, T6 a2, T6 a3);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_internal_options */
extern void T195f307(T0* C);
/* RX_BYTE_CODE.wipe_out */
extern void T857f14(T0* C);
/* KL_STRING_ROUTINES.wipe_out */
extern void T26f20(T0* C, T0* a1);
/* UC_UTF8_STRING.old_clear_all */
extern void T904f65(T0* C);
/* STRING_8.clear_all */
extern void T17f50(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T195f306(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.wipe_out */
extern void T195f306p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern T0* T195c298(void);
/* KL_SPECIAL_ROUTINES [INTEGER].make */
extern T0* T105f2(T0* C, T6 a1);
/* TO_SPECIAL [INTEGER].make_area */
extern T0* T366c2(T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.make */
extern void T195f298p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_default_options */
extern void T195f305(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.set_strict */
extern void T195f323(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_greedy */
extern void T195f322(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_eol */
extern void T195f321(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_bol */
extern void T195f320(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dollar_endonly */
extern void T195f319(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_empty_allowed */
extern void T195f318(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_extended */
extern void T195f317(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_dotall */
extern void T195f316(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_multiline */
extern void T195f315(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_caseless */
extern void T195f314(T0* C, T1 a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_word_set */
extern void T195f304(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.set_character_case_mapping */
extern void T195f303(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.default_character_case_mapping */
extern unsigned char ge1159os15740;
extern T0* ge1159ov15740;
extern T0* T195f20(T0* C);
/* RX_CASE_MAPPING.make */
extern T0* T858c6(T0* a1, T0* a2);
/* RX_CASE_MAPPING.add */
extern void T858f8(T0* C, T0* a1, T0* a2);
/* RX_CASE_MAPPING.make_default */
extern void T858f7(T0* C);
/* RX_CASE_MAPPING.clear */
extern void T858f9(T0* C);
/* RX_CASE_MAPPING.special_integer_ */
extern T0* T858f5(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T195f302(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.reset */
extern void T195f302p1(T0* C);
/* RX_PCRE_REGULAR_EXPRESSION.empty_pattern */
extern unsigned char ge1153os15584;
extern T0* ge1153ov15584;
extern T0* T195f19(T0* C);
/* STRING_8.put */
extern void T17f53(T0* C, T2 a1, T6 a2);
/* RX_BYTE_CODE.make */
extern T0* T857c13(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].set_key_equality_tester */
extern void T40f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].internal_set_equality_tester */
extern void T100f6(T0* C, T0* a1);
/* ET_C_GENERATOR.string_equality_tester */
extern unsigned char ge286os7253;
extern T0* ge286ov7253;
extern T0* T56f41(T0* C);
/* KL_STRING_EQUALITY_TESTER.default_create */
extern T0* T193c2(void);
/* DS_HASH_TABLE [STRING, STRING].make_map */
extern void T40f37(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_map */
extern T0* T40c37(T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_with_equality_testers */
extern void T40f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].make */
extern T0* T100c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [STRING, STRING].new_cursor */
extern T0* T100f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [STRING, STRING].make */
extern T0* T365c3(T0* a1);
/* DS_HASH_TABLE [STRING, STRING].new_cursor */
extern T0* T40f26(T0* C);
/* DS_HASH_TABLE_CURSOR [STRING, STRING].make */
extern T0* T104c3(T0* a1);
/* DS_HASH_TABLE [STRING, STRING].make_sparse_container */
extern void T40f48(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_slots */
extern void T40f56(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_clashes */
extern void T40f55(T0* C, T6 a1);
/* DS_HASH_TABLE [STRING, STRING].make_key_storage */
extern void T40f54(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].make */
extern T0* T106f2(T0* C, T6 a1);
/* TO_SPECIAL [STRING].make_area */
extern T0* T367c2(T6 a1);
/* KL_SPECIAL_ROUTINES [STRING].default_create */
extern T0* T106c3(void);
/* DS_HASH_TABLE [STRING, STRING].make_item_storage */
extern void T40f53(T0* C, T6 a1);
/* ET_C_GENERATOR.c_config */
extern T0* T56f57(T0* C);
/* ET_C_GENERATOR.report_cannot_read_error */
extern void T56f471(T0* C, T0* a1);
/* UC_UTF8_STRING.index_of */
extern T6 T904f18(T0* C, T2 a1, T6 a2);
/* UC_UTF8_STRING.index_of_item_code */
extern T6 T904f36(T0* C, T6 a1, T6 a2);
/* STRING_8.index_of */
extern T6 T17f26(T0* C, T2 a1, T6 a2);
/* KL_UNIX_FILE_SYSTEM.has_extension */
extern T1 T66f4(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.has_extension */
extern T1 T65f4(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].put */
extern void T40f59(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.right_adjust */
extern void T26f22(T0* C, T0* a1);
/* UC_UTF8_STRING.keep_head */
extern void T904f64(T0* C, T6 a1);
/* STRING_8.keep_head */
extern void T17f47(T0* C, T6 a1);
/* KL_STRING_ROUTINES.left_adjust */
extern void T26f21(T0* C, T0* a1);
/* UC_UTF8_STRING.remove_head */
extern void T904f63(T0* C, T6 a1);
/* UC_UTF8_STRING.keep_tail */
extern void T904f83(T0* C, T6 a1);
/* UC_UTF8_STRING.move_bytes_left */
extern void T904f81(T0* C, T6 a1, T6 a2);
/* STRING_8.remove_head */
extern void T17f52(T0* C, T6 a1);
/* STRING_8.keep_tail */
extern void T17f56(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.read_line */
extern void T22f47(T0* C);
/* KL_TEXT_INPUT_FILE.unread_character */
extern void T22f50(T0* C, T2 a1);
/* KL_LINKABLE [CHARACTER].put_right */
extern void T67f4(T0* C, T0* a1);
/* KL_LINKABLE [CHARACTER].make */
extern T0* T67c3(T2 a1);
/* KL_UNIX_FILE_SYSTEM.nested_pathname */
extern T0* T66f3(T0* C, T0* a1, T0* a2);
/* KL_WINDOWS_FILE_SYSTEM.nested_pathname */
extern T0* T65f3(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.file_system */
extern T0* T56f109(T0* C);
/* ET_C_GENERATOR.unix_file_system */
extern T0* T56f252(T0* C);
/* ET_C_GENERATOR.windows_file_system */
extern T0* T56f251(T0* C);
/* ET_C_GENERATOR.generate_c_code */
extern void T56f295(T0* C, T0* a1);
/* ET_C_GENERATOR.dummy_feature */
extern unsigned char ge957os6525;
extern T0* ge957ov6525;
extern T0* T56f11(T0* C);
/* ET_DYNAMIC_FEATURE.make */
extern T0* T150c58(T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_COMMA_ARGUMENT.name */
extern T0* T920f5(T0* C);
/* ET_IDENTIFIER.identifier */
extern T0* T119f45(T0* C);
/* ET_FORMAL_ARGUMENT.name */
extern T0* T214f5(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.put_last */
extern void T168f10(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.type */
extern T0* T920f4(T0* C);
/* ET_FORMAL_ARGUMENT.type */
extern T0* T214f4(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.formal_argument */
extern T0* T209f7(T0* C, T6 a1);
/* ET_FORMAL_COMMA_ARGUMENT.formal_argument */
extern T0* T920f3(T0* C);
/* ET_FORMAL_ARGUMENT.formal_argument */
extern T0* T214f3(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.item */
extern T0* T209f11(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.make_with_capacity */
extern T0* T168c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].make */
extern T0* T819f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE_SET].make_area */
extern T0* T1138c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].make */
extern T0* T818c4(T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.fixed_array */
extern unsigned char ge945os15099;
extern T0* ge945ov15099;
extern T0* T168f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].default_create */
extern T0* T819c3(void);
/* ET_DYNAMIC_FEATURE.empty_dynamic_type_sets */
extern unsigned char ge913os11711;
extern T0* ge913ov11711;
extern T0* T150f10(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.make */
extern T0* T168c12(void);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T142f2(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_dynamic_type_set */
extern T0* T59f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.make */
extern T0* T303c11(T0* a1);
/* ET_SYSTEM.dynamic_type */
extern T0* T53f36(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_index */
extern void T55f183(T0* C, T6 a1);
/* ET_SYSTEM.set_fatal_error */
extern void T53f56(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].force_last */
extern void T143f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].resize */
extern void T143f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].resize */
extern T0* T394f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE].resized_area */
extern T0* T393f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE].copy_data */
extern void T393f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE].move_data */
extern void T393f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].overlapping_move */
extern void T393f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].non_overlapping_move */
extern void T393f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE].make */
extern T0* T393c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T143f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].extendible */
extern T1 T143f8(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.make */
extern T0* T204c35(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_FUNCTION_TYPE.make_type */
extern void T204f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.empty_features */
extern unsigned char ge940os11434;
extern T0* ge940ov11434;
extern T0* T204f17(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.make */
extern T0* T200c11(void);
/* ET_DYNAMIC_PROCEDURE_TYPE.make */
extern T0* T205c35(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.make_type */
extern void T205f38(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.empty_features */
extern T0* T205f16(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.make */
extern T0* T197c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_TUPLE_TYPE.make_type */
extern void T197f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.empty_features */
extern T0* T197f16(T0* C);
/* ET_SYSTEM.empty_dynamic_type_sets */
extern unsigned char ge946os5595;
extern T0* ge946ov5595;
extern T0* T53f45(T0* C);
/* ET_DYNAMIC_TYPE.make */
extern T0* T144c32(T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.empty_features */
extern T0* T144f12(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.make */
extern T0* T203c34(T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_SPECIAL_TYPE.make_type */
extern void T203f37(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.empty_features */
extern T0* T203f16(T0* C);
/* ET_FORMAL_PARAMETER_LIST.type */
extern T0* T396f10(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.item */
extern T0* T396f3(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.type */
extern T0* T160f7(T0* C, T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.item */
extern T0* T160f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].item */
extern T0* T143f2(T0* C, T6 a1);
/* ET_DO_PROCEDURE.make */
extern T0* T297c68(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.any_clients */
extern unsigned char ge781os12950;
extern T0* ge781ov12950;
extern T0* T157f614(T0* C);
/* ET_CLASS_NAME_LIST.put_first */
extern void T413f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.any_class_name */
extern unsigned char ge781os12400;
extern T0* ge781ov12400;
extern T0* T157f45(T0* C);
/* ET_CLASS_NAME_LIST.make_with_capacity */
extern T0* T413c13(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].make */
extern T0* T587f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_ITEM].make_area */
extern T0* T1061c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].make */
extern T0* T586c4(T6 a1);
/* ET_CLASS_NAME_LIST.fixed_array */
extern unsigned char ge796os6093;
extern T0* ge796ov6093;
extern T0* T413f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].default_create */
extern T0* T587c3(void);
/* ET_TOKEN_CONSTANTS.end_keyword */
extern unsigned char ge781os12610;
extern T0* ge781ov12610;
extern T0* T157f109(T0* C);
/* ET_KEYWORD.make_end */
extern T0* T166c23(void);
/* ET_KEYWORD.make_token */
extern void T166f24(T0* C, T0* a1);
/* ET_KEYWORD.make_leaf */
extern void T166f25(T0* C);
/* ET_KEYWORD.tokens */
extern unsigned char ge776os2690;
extern T0* ge776ov2690;
extern T0* T166f2(T0* C);
/* ET_TOKEN_CONSTANTS.default_create */
extern T0* T157c791(void);
/* ET_DO_PROCEDURE.tokens */
extern T0* T297f10(T0* C);
/* ET_IDENTIFIER.make */
extern T0* T119c94(T0* a1);
/* ET_IDENTIFIER.make_with_hash_code */
extern void T119f102(T0* C, T0* a1, T6 a2);
/* ET_IDENTIFIER.make_with_hash_code */
extern T0* T119c102(T0* a1, T6 a2);
/* ET_IDENTIFIER.make_leaf */
extern void T119f103(T0* C);
/* ET_IDENTIFIER.new_hash_code */
extern T6 T119f3(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.bit_or */
extern T6 T139f3(T0* C, T6 a1, T6 a2);
/* ET_IDENTIFIER.integer_ */
extern T0* T119f25(T0* C);
/* KL_CHARACTER_ROUTINES.as_upper */
extern T2 T907f1(T0* C, T2 a1);
/* CHARACTER_8.upper */
extern T2 T2f8(T2* C);
/* CHARACTER_8.is_lower */
extern T1 T2f11(T2* C);
/* ET_IDENTIFIER.character_ */
extern unsigned char ge280os2768;
extern T0* ge280ov2768;
extern T0* T119f24(T0* C);
/* KL_CHARACTER_ROUTINES.default_create */
extern T0* T907c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].wipe_out */
extern void T190f42(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_wipe_out */
extern void T190f52(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_wipe_out */
extern void T190f51(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_wipe_out */
extern void T190f50(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_wipe_out */
extern void T190f49(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].unset_found_item */
extern void T190f48(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].move_all_cursors_after */
extern void T190f47(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_next_cursor */
extern void T845f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].set_position */
extern void T845f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].wipe_out */
extern void T189f32(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_wipe_out */
extern void T189f43(T0* C);
/* DS_HASH_SET [ET_FEATURE].clashes_wipe_out */
extern void T189f42(T0* C);
/* DS_HASH_SET [ET_FEATURE].key_storage_wipe_out */
extern void T189f41(T0* C);
/* DS_HASH_SET [ET_FEATURE].item_storage_wipe_out */
extern void T189f40(T0* C);
/* DS_HASH_SET [ET_FEATURE].unset_found_item */
extern void T189f38(T0* C);
/* DS_HASH_SET [ET_FEATURE].move_all_cursors_after */
extern void T189f39(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_next_cursor */
extern void T841f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE].set_position */
extern void T841f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].wipe_out */
extern void T194f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_wipe_out */
extern void T194f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_wipe_out */
extern void T194f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_wipe_out */
extern void T194f58(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_wipe_out */
extern void T194f57(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].unset_found_item */
extern void T194f56(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].move_all_cursors_after */
extern void T194f55(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].set_next_cursor */
extern void T852f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].set_position */
extern void T852f5(T0* C, T6 a1);
/* DS_HASH_SET [STRING].wipe_out */
extern void T192f42(T0* C);
/* DS_HASH_SET [STRING].slots_wipe_out */
extern void T192f55(T0* C);
/* DS_HASH_SET [STRING].clashes_wipe_out */
extern void T192f54(T0* C);
/* DS_HASH_SET [STRING].key_storage_wipe_out */
extern void T192f53(T0* C);
/* DS_HASH_SET [STRING].item_storage_wipe_out */
extern void T192f52(T0* C);
/* DS_HASH_SET [STRING].unset_found_item */
extern void T192f48(T0* C);
/* DS_HASH_SET [STRING].move_all_cursors_after */
extern void T192f51(T0* C);
/* DS_HASH_SET_CURSOR [STRING].set_next_cursor */
extern void T284f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING].set_position */
extern void T284f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].forth */
extern void T194f47(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_forth */
extern void T194f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].add_traversing_cursor */
extern void T194f68(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].remove_traversing_cursor */
extern void T194f67(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_item */
extern T6 T194f27(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_for_iteration */
extern T0* T194f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_key */
extern T0* T194f9(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_item */
extern T0* T194f14(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_for_iteration */
extern T1 T194f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_item */
extern T1 T194f8(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_item */
extern T1 T194f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].after */
extern T1 T194f1(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_after */
extern T1 T194f7(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].start */
extern void T194f46(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_start */
extern void T194f53(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].cursor_off */
extern T1 T194f33(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].is_empty */
extern T1 T194f32(T0* C);
/* DS_HASH_SET [STRING].forth */
extern void T192f41(T0* C);
/* DS_HASH_SET [STRING].cursor_forth */
extern void T192f50(T0* C, T0* a1);
/* DS_HASH_SET [STRING].add_traversing_cursor */
extern void T192f62(T0* C, T0* a1);
/* DS_HASH_SET [STRING].remove_traversing_cursor */
extern void T192f61(T0* C, T0* a1);
/* DS_HASH_SET [STRING].clashes_item */
extern T6 T192f23(T0* C, T6 a1);
/* ET_C_GENERATOR.include_runtime_c_file */
extern void T56f313(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.include_file */
extern void T56f351(T0* C, T0* a1, T0* a2);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T170f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.append */
extern void T170f9p1(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.read_string */
extern void T22f49(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_read_to_string */
extern T6 T22f28(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.file_gss */
extern T6 T22f34(T0* C, T14 a1, T14 a2, T6 a3);
/* SPECIAL [CHARACTER_8].item_address */
extern T14 T15f5(T0* C, T6 a1);
/* STRING_8.set_count */
extern void T17f48(T0* C, T6 a1);
/* KL_TEXT_INPUT_FILE.old_end_of_file */
extern T1 T22f27(T0* C);
/* KL_TEXT_INPUT_FILE.file_feof */
extern T1 T22f33(T0* C, T14 a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T196f28(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.append */
extern void T196f28p1(T0* C, T0* a1);
/* DS_HASH_SET [STRING].item_for_iteration */
extern T0* T192f2(T0* C);
/* DS_HASH_SET [STRING].cursor_item */
extern T0* T192f5(T0* C, T0* a1);
/* DS_HASH_SET [STRING].item_storage_item */
extern T0* T192f7(T0* C, T6 a1);
/* DS_HASH_SET [STRING].after */
extern T1 T192f1(T0* C);
/* DS_HASH_SET [STRING].cursor_after */
extern T1 T192f4(T0* C, T0* a1);
/* DS_HASH_SET [STRING].start */
extern void T192f40(T0* C);
/* DS_HASH_SET [STRING].cursor_start */
extern void T192f49(T0* C, T0* a1);
/* DS_HASH_SET [STRING].cursor_off */
extern T1 T192f31(T0* C, T0* a1);
/* DS_HASH_SET [STRING].is_empty */
extern T1 T192f30(T0* C);
/* ET_C_GENERATOR.print_main_function */
extern void T56f312(T0* C);
/* ET_C_GENERATOR.dedent */
extern void T56f336(T0* C);
/* ET_C_GENERATOR.print_creation_expression */
extern void T56f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_EXPRESSION].wipe_out */
extern void T175f14(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].clear_items */
extern void T175f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].move_all_cursors_after */
extern void T175f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_next_cursor */
extern void T823f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].set_position */
extern void T823f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attachment_expression */
extern void T56f443(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_boxed_expression */
extern void T56f466(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_access */
extern void T56f354(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_attribute_item_name */
extern void T56f322(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_cast */
extern void T56f464(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_name */
extern void T56f319(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_cast */
extern void T56f335(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_type_name */
extern void T56f315(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_expression */
extern void T56f355(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_giaaa_error */
extern void T52f158(T0* C);
/* ET_NULL_ERROR_HANDLER.report_internal_error */
extern void T52f190(T0* C, T0* a1);
/* KL_STANDARD_FILES.error */
extern unsigned char ge317os8689;
extern T0* ge317ov8689;
extern T0* T71f1(T0* C);
/* KL_STDERR_FILE.make */
extern T0* T72c9(void);
/* KL_STDERR_FILE.make_open_stderr */
extern void T72f13(T0* C, T0* a1);
/* KL_STDERR_FILE.set_write_mode */
extern void T72f18(T0* C);
/* KL_STDERR_FILE.console_def */
extern T14 T72f3(T0* C, T6 a1);
/* KL_STDERR_FILE.old_make */
extern void T72f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.std */
extern unsigned char ge315os1577;
extern T0* ge315ov1577;
extern T0* T52f2(T0* C);
/* KL_STANDARD_FILES.default_create */
extern T0* T71c4(void);
/* ET_INTERNAL_ERROR.make_giaaa */
extern T0* T883c12(void);
/* ET_ERROR_HANDLER.report_giaaa_error */
extern void T28f158(T0* C);
/* ET_ERROR_HANDLER.report_internal_error */
extern void T28f190(T0* C, T0* a1);
/* ET_ERROR_HANDLER.std */
extern T0* T28f5(T0* C);
/* ET_DYNAMIC_PRECURSOR.argument_type_set */
extern T0* T202f13(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE_SET_LIST.item */
extern T0* T168f2(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.argument_type_set */
extern T0* T150f8(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.dynamic_type_set */
extern T0* T202f5(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.current_keyword */
extern unsigned char ge781os12604;
extern T0* ge781ov12604;
extern T0* T157f10(T0* C);
/* ET_CURRENT.make */
extern T0* T182c26(void);
/* ET_CURRENT.make_token */
extern void T182f28(T0* C, T0* a1);
/* ET_CURRENT.make_leaf */
extern void T182f29(T0* C);
/* ET_CURRENT.tokens */
extern T0* T182f2(T0* C);
/* ET_DYNAMIC_PRECURSOR.tokens */
extern T0* T202f27(T0* C);
/* ET_DYNAMIC_FEATURE.dynamic_type_set */
extern T0* T150f3(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE.tokens */
extern T0* T150f9(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].item */
extern T0* T175f4(T0* C, T6 a1);
/* ET_C_GENERATOR.print_creation_procedure_name */
extern void T56f463(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.new_temp_variable */
extern T0* T56f232(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].force_last */
extern void T172f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].resize */
extern void T172f12(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].resize */
extern T0* T121f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IDENTIFIER].resized_area */
extern T0* T120f2(T0* C, T6 a1);
/* SPECIAL [ET_IDENTIFIER].copy_data */
extern void T120f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IDENTIFIER].move_data */
extern void T120f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].overlapping_move */
extern void T120f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].non_overlapping_move */
extern void T120f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IDENTIFIER].make */
extern T0* T120c4(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_capacity */
extern T6 T172f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].extendible */
extern T1 T172f8(T0* C, T6 a1);
/* ET_IDENTIFIER.set_temporary */
extern void T119f101(T0* C, T1 a1);
/* INTEGER_32.out */
extern T0* T6f11(T6* C);
/* STRING_8.append_integer */
extern void T17f41(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].item */
extern T0* T172f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].replace */
extern void T143f13(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.same_declaration_types */
extern T1 T56f253(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_writable */
extern void T56f462(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_access */
extern void T56f334(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_name */
extern void T56f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.tokens */
extern T0* T56f29(T0* C);
/* ET_C_GENERATOR.print_local_variable */
extern void T56f469(T0* C, T0* a1);
/* ET_C_GENERATOR.print_local_name */
extern void T56f470(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.in_target */
extern T1 T56f250(T0* C);
/* ET_C_GENERATOR.print_temporary_variable */
extern void T56f468(T0* C, T0* a1);
/* ET_IDENTIFIER.is_temporary */
extern T1 T119f18(T0* C);
/* ET_C_GENERATOR.print_formal_argument */
extern void T56f467(T0* C, T0* a1);
/* ET_C_GENERATOR.print_argument_name */
extern void T56f341(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].force */
extern void T174f9(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].resize */
extern void T174f11(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].resize */
extern T0* T754f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION].resized_area */
extern T0* T667f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION].copy_data */
extern void T667f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION].move_data */
extern void T667f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].overlapping_move */
extern void T667f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].non_overlapping_move */
extern void T667f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION].make */
extern T0* T667c4(T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].new_capacity */
extern T6 T174f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].extendible */
extern T1 T174f6(T0* C, T6 a1);
/* ET_C_GENERATOR.fill_call_operands */
extern void T56f461(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].prune */
extern void T174f10(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_EXPRESSION].clear_items */
extern void T174f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_EXPRESSION].i_th */
extern T0* T174f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].put_last */
extern void T175f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].resize */
extern void T175f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_operand */
extern void T56f460(T0* C, T0* a1);
/* ET_C_GENERATOR.print_temp_name */
extern void T56f330(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.temp_variable */
extern unsigned char ge957os6521;
extern T0* ge957ov6521;
extern T0* T56f93(T0* C);
/* ET_C_GENERATOR.print_type_declaration */
extern void T56f321(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_eif_object_type_name */
extern void T56f314(T0* C, T0* a1);
/* ET_C_GENERATOR.print_indentation */
extern void T56f328(T0* C);
/* ET_C_GENERATOR.indent */
extern void T56f327(T0* C);
/* ET_C_GENERATOR.print_getypes_array */
extern void T56f311(T0* C);
/* ET_C_GENERATOR.print_geconst_function */
extern void T56f310(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].forth */
extern void T190f44(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_forth */
extern void T190f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].add_traversing_cursor */
extern void T190f63(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].remove_traversing_cursor */
extern void T190f62(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_item */
extern T6 T190f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_for_iteration */
extern T0* T190f3(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_item */
extern T0* T190f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_item */
extern T0* T190f10(T0* C, T6 a1);
/* ET_C_GENERATOR.print_once_value_name */
extern void T56f348(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_once_status_name */
extern void T56f349(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_FEATURE].has */
extern T1 T189f1(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].search_position */
extern void T189f33(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].clashes_item */
extern T6 T189f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].hash_position */
extern T6 T189f17(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_item */
extern T0* T189f16(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_item */
extern T0* T189f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_equality_tester */
extern T0* T189f15(T0* C);
/* DS_HASH_SET [ET_FEATURE].slots_item */
extern T6 T189f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_for_iteration */
extern T0* T190f2(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_key */
extern T0* T190f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_item */
extern T0* T190f9(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].after */
extern T1 T190f1(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_after */
extern T1 T190f5(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].start */
extern void T190f43(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_start */
extern void T190f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].cursor_off */
extern T1 T190f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].is_empty */
extern T1 T190f30(T0* C);
/* ET_C_GENERATOR.print_constants_declaration */
extern void T56f309(T0* C);
/* ET_C_GENERATOR.print_gevoid_function */
extern void T56f308(T0* C);
/* ET_C_GENERATOR.print_current_name */
extern void T56f339(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].wipe_out */
extern void T188f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_wipe_out */
extern void T188f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_wipe_out */
extern void T188f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_wipe_out */
extern void T188f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_wipe_out */
extern void T188f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].unset_found_item */
extern void T188f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].move_all_cursors_after */
extern void T188f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_next_cursor */
extern void T838f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].set_position */
extern void T838f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].forth */
extern void T188f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_forth */
extern void T188f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].add_traversing_cursor */
extern void T188f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].remove_traversing_cursor */
extern void T188f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_item */
extern T6 T188f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gemt_function */
extern void T56f307(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_tuple_item_access */
extern void T56f347(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_tuple_item_name */
extern void T56f326(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_attribute_type_id_access */
extern void T56f331(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_type_id_name */
extern void T56f320(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.result_keyword */
extern unsigned char ge781os12640;
extern T0* ge781ov12640;
extern T0* T157f17(T0* C);
/* ET_RESULT.make */
extern T0* T206c24(void);
/* ET_RESULT.make_token */
extern void T206f26(T0* C, T0* a1);
/* ET_RESULT.make_leaf */
extern void T206f27(T0* C);
/* ET_RESULT.tokens */
extern T0* T206f2(T0* C);
/* ET_C_GENERATOR.print_result_name */
extern void T56f329(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_for_iteration */
extern T0* T188f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_item */
extern T0* T188f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_item */
extern T0* T188f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].after */
extern T1 T188f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_after */
extern T1 T188f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].start */
extern void T188f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_start */
extern void T188f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].cursor_off */
extern T1 T188f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].is_empty */
extern T1 T188f23(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].wipe_out */
extern void T187f39(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_wipe_out */
extern void T187f51(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_wipe_out */
extern void T187f50(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_wipe_out */
extern void T187f49(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_wipe_out */
extern void T187f48(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].unset_found_item */
extern void T187f44(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T187f47(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T837f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T837f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].forth */
extern void T187f38(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_forth */
extern void T187f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].add_traversing_cursor */
extern void T187f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].remove_traversing_cursor */
extern void T187f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_item */
extern T6 T187f25(T0* C, T6 a1);
/* ET_C_GENERATOR.print_gema_function */
extern void T56f306(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.item */
extern T0* T200f2(T0* C, T6 a1);
/* ET_C_GENERATOR.print_attribute_special_item_access */
extern void T56f333(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_item_name */
extern void T56f325(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_access */
extern void T56f332(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_attribute_special_count_name */
extern void T56f324(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.first */
extern T0* T200f3(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_for_iteration */
extern T0* T187f2(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_item */
extern T0* T187f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_item */
extern T0* T187f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].after */
extern T1 T187f1(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_after */
extern T1 T187f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].start */
extern void T187f37(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_start */
extern void T187f45(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].cursor_off */
extern T1 T187f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].is_empty */
extern T1 T187f23(T0* C);
/* ET_C_GENERATOR.print_feature */
extern void T56f305(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].wipe_out */
extern void T180f12(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].clear_items */
extern void T180f14(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_AGENT].move_all_cursors_after */
extern void T180f13(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_next_cursor */
extern void T835f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].set_position */
extern void T835f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_declaration */
extern void T56f346(T0* C, T6 a1, T0* a2);
/* ET_C_GENERATOR.print_agent_closed_operand_access */
extern void T56f459(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_creation_name */
extern void T56f458(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_routine_name */
extern void T56f441(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].wipe_out */
extern void T143f12(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].clear_items */
extern void T143f16(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].move_all_cursors_after */
extern void T143f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_next_cursor */
extern void T395f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].set_position */
extern void T395f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_agent_body_declaration */
extern void T56f457(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.put_first */
extern void T183f15(T0* C, T0* a1);
/* ET_ACTUAL_ARGUMENT_LIST.resize */
extern void T183f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].resize */
extern T0* T762f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPRESSION_ITEM].resized_area */
extern T0* T761f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPRESSION_ITEM].copy_data */
extern void T761f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPRESSION_ITEM].move_data */
extern void T761f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].overlapping_move */
extern void T761f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].non_overlapping_move */
extern void T761f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPRESSION_ITEM].make */
extern T0* T761c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].make */
extern T0* T762f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION_ITEM].make_area */
extern T0* T1121c2(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge646os6093;
extern T0* ge646ov6093;
extern T0* T183f9(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION_ITEM].default_create */
extern T0* T762c3(void);
/* ET_ACTUAL_ARGUMENT_LIST.capacity */
extern T6 T183f1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.wipe_out */
extern void T183f13(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand_name */
extern void T56f456(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_agent_function_name */
extern void T56f455(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_type_name */
extern void T56f454(T0* C, T6 a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_agent_closed_operand_name */
extern void T56f453(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.is_attribute */
extern T1 T202f15(T0* C);
/* ET_DYNAMIC_PRECURSOR.is_builtin */
extern T1 T202f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_attribute */
extern T1 T150f17(T0* C);
/* ET_DYNAMIC_FEATURE.is_builtin */
extern T1 T150f18(T0* C);
/* KL_STRING_ROUTINES.replaced_all_substrings */
extern T0* T26f10(T0* C, T0* a1, T0* a2, T0* a3);
/* KL_STRING_ROUTINES.substring_index */
extern T6 T26f12(T0* C, T0* a1, T0* a2, T6 a3);
/* KL_STRING_ROUTINES.platform */
extern T0* T26f13(T0* C);
/* UC_UTF8_STRING.substring_index */
extern T6 T904f20(T0* C, T0* a1, T6 a2);
/* STRING_8.substring_index */
extern T6 T17f28(T0* C, T0* a1, T6 a2);
/* STRING_SEARCHER.substring_index */
extern T6 T1218f1(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* STRING_SEARCHER.substring_index_with_deltas */
extern T6 T1218f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* NATURAL_32.to_integer_32 */
extern T6 T10f7(T10* C);
/* STRING_SEARCHER.internal_initialize_deltas */
extern void T1218f6(T0* C, T0* a1, T6 a2, T0* a3);
/* SPECIAL [INTEGER].fill_with */
extern void T103f9(T0* C, T6 a1, T6 a2, T6 a3);
/* STRING_8.string_searcher */
extern unsigned char ge2059os1254;
extern T0* ge2059ov1254;
extern T0* T17f32(T0* C);
/* STRING_SEARCHER.make */
extern T0* T1218c5(void);
/* ET_IDENTIFIER.set_agent_closed_operand */
extern void T119f98(T0* C, T1 a1);
/* ET_IDENTIFIER.set_agent_open_operand */
extern void T119f95(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_AGENT].item */
extern T0* T180f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_semistrict */
extern T1 T202f2(T0* C);
/* ET_DYNAMIC_FEATURE.is_semistrict */
extern T1 T150f40(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].remove_last */
extern void T191f14(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].move_last_cursors_after */
extern void T191f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_next_cursor */
extern void T851f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].set_position */
extern void T851f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].last */
extern T0* T191f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].is_empty */
extern T1 T191f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].force_last */
extern void T191f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].resize */
extern void T191f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].resize */
extern T0* T850f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_FEATURE].resized_area */
extern T0* T849f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_FEATURE].copy_data */
extern void T849f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_FEATURE].move_data */
extern void T849f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].overlapping_move */
extern void T849f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].non_overlapping_move */
extern void T849f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_FEATURE].make */
extern T0* T849c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_capacity */
extern T6 T191f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].extendible */
extern T1 T191f9(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_generated */
extern void T202f61(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_generated */
extern void T150f61(T0* C, T1 a1);
/* ET_C_GENERATOR.print_polymorphic_procedure_calls */
extern void T56f304(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].wipe_out */
extern void T177f45(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_wipe_out */
extern void T177f60(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_wipe_out */
extern void T177f59(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_wipe_out */
extern void T177f58(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_wipe_out */
extern void T177f57(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].unset_found_item */
extern void T177f48(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].move_all_cursors_after */
extern void T177f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].set_next_cursor */
extern void T826f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].set_position */
extern void T826f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].wipe_out */
extern void T176f18(T0* C);
/* DS_ARRAYED_LIST [INTEGER].clear_items */
extern void T176f21(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].move_all_cursors_after */
extern void T176f20(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].set_next_cursor */
extern void T824f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].set_position */
extern void T824f5(T0* C, T6 a1);
/* ET_C_GENERATOR.print_binary_search_polymorphic_calls */
extern void T56f344(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T6 a5);
/* ET_C_GENERATOR.print_query_call */
extern void T56f343(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_target_expression */
extern void T56f442(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_item_call */
extern void T56f440(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_64_call */
extern void T56f439(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_floor_real_32_call */
extern void T56f438(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_64_call */
extern void T56f437(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_ceiling_real_32_call */
extern void T56f436(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_to_double_call */
extern void T56f435(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_real_call */
extern void T56f434(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_64_call */
extern void T56f433(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_truncated_to_integer_call */
extern void T56f432(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_lt_call */
extern void T56f431(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_identity_call */
extern void T56f430(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_opposite_call */
extern void T56f429(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_power_call */
extern void T56f428(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_divide_call */
extern void T56f427(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_times_call */
extern void T56f426(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_minus_call */
extern void T56f425(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_plus_call */
extern void T56f424(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_item_call */
extern void T56f423(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_32_call */
extern void T56f422(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_to_character_8_call */
extern void T56f421(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_natural_32_code_call */
extern void T56f420(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_character_code_call */
extern void T56f419(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_item_call */
extern void T56f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_not_call */
extern void T56f417(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_xor_call */
extern void T56f416(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_right_call */
extern void T56f415(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_shift_left_call */
extern void T56f414(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_and_call */
extern void T56f413(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_bit_or_call */
extern void T56f412(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_64_call */
extern void T56f411(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_32_call */
extern void T56f410(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_16_call */
extern void T56f409(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_integer_8_call */
extern void T56f408(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_64_call */
extern void T56f407(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_32_call */
extern void T56f406(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_16_call */
extern void T56f405(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_as_natural_8_call */
extern void T56f404(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_double_call */
extern void T56f403(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_64_call */
extern void T56f402(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_32_call */
extern void T56f401(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_real_call */
extern void T56f400(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_32_call */
extern void T56f399(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_to_character_8_call */
extern void T56f398(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_identity_call */
extern void T56f397(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_opposite_call */
extern void T56f396(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_lt_call */
extern void T56f395(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_power_call */
extern void T56f394(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_mod_call */
extern void T56f393(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_div_call */
extern void T56f392(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_divide_call */
extern void T56f391(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_times_call */
extern void T56f390(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_minus_call */
extern void T56f389(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_integer_plus_call */
extern void T56f388(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_function_item_call */
extern void T56f387(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_wide_character_bytes_call */
extern void T56f386(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_real_bytes_call */
extern void T56f385(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_pointer_bytes_call */
extern void T56f384(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_integer_bytes_call */
extern void T56f383(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_character_bytes_call */
extern void T56f382(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_boolean_bytes_call */
extern void T56f381(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_windows_call */
extern void T56f380(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_vms_call */
extern void T56f379(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_unix_call */
extern void T56f378(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_dotnet_call */
extern void T56f377(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_platform_is_thread_capable_call */
extern void T56f376(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_arguments_argument_count_call */
extern void T56f375(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_hash_code_call */
extern void T56f374(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_to_integer_32_call */
extern void T56f373(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_plus_call */
extern void T56f372(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_item_call */
extern void T56f371(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_item_call */
extern void T56f370(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_boolean_not_call */
extern void T56f369(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_implies_call */
extern void T56f368(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_xor_call */
extern void T56f367(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_else_call */
extern void T56f366(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_or_call */
extern void T56f365(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_then_call */
extern void T56f364(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_boolean_and_call */
extern void T56f363(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_element_size_call */
extern void T56f362(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_count_call */
extern void T56f361(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_item_call */
extern void T56f360(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type_call */
extern void T56f359(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_string */
extern void T56f465(T0* C, T0* a1);
/* UT_INTEGER_FORMATTER.put_octal_integer */
extern void T234f2(T0* C, T0* a1, T6 a2);
/* ET_C_GENERATOR.integer_formatter_ */
extern unsigned char ge249os7255;
extern T0* ge249ov7255;
extern T0* T56f249(T0* C);
/* UT_INTEGER_FORMATTER.default_create */
extern T0* T234c1(void);
/* ET_C_GENERATOR.print_builtin_any_generator_call */
extern void T56f358(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_is_equal_call */
extern void T56f357(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_same_type_call */
extern void T56f356(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].force_last */
extern void T190f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_put */
extern void T190f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_put */
extern void T190f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_put */
extern void T190f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_item */
extern T6 T190f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].hash_position */
extern T6 T190f20(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].resize */
extern void T190f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].clashes_resize */
extern void T190f67(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].special_integer_ */
extern T0* T190f38(T0* C);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].key_storage_resize */
extern void T190f66(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].resize */
extern T0* T843f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE].resized_area */
extern T0* T844f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE].copy_data */
extern void T844f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE].move_data */
extern void T844f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].overlapping_move */
extern void T844f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].non_overlapping_move */
extern void T844f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE].make */
extern T0* T844c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_resize */
extern void T190f65(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].resize */
extern T0* T793f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTANT].resized_area */
extern T0* T619f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTANT].copy_data */
extern void T619f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTANT].move_data */
extern void T619f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].overlapping_move */
extern void T619f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].non_overlapping_move */
extern void T619f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTANT].make */
extern T0* T619c4(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].slots_resize */
extern void T190f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_modulus */
extern T6 T190f36(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_capacity */
extern T6 T190f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].item_storage_put */
extern void T190f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].search_position */
extern void T190f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].first */
extern T0* T175f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item */
extern T0* T177f4(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_item */
extern T0* T177f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].search_position */
extern void T177f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_item */
extern T6 T177f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].hash_position */
extern T6 T177f16(T0* C, T6 a1);
/* INTEGER_32.hash_code */
extern T6 T6f18(T6* C);
/* INTEGER_32.infix "&" */
extern T6 T6f22(T6* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_item */
extern T6 T177f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_item */
extern T6 T177f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].item */
extern T6 T176f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].sort */
extern void T176f17(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER].sort */
extern void T215f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [INTEGER].sort_with_comparator */
extern void T215f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [INTEGER].subsort_with_comparator */
extern void T215f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* ARRAY [INTEGER].force */
extern void T295f12(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].auto_resize */
extern void T295f14(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].capacity */
extern T6 T295f7(T0* C);
/* SPECIAL [INTEGER].aliased_resized_area */
extern T0* T103f3(T0* C, T6 a1);
/* ARRAY [INTEGER].make_area */
extern void T295f13(T0* C, T6 a1);
/* ARRAY [INTEGER].additional_space */
extern T6 T295f6(T0* C);
/* INTEGER_32.min */
extern T6 T6f20(T6* C, T6 a1);
/* ARRAY [INTEGER].empty_area */
extern T1 T295f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER].swap */
extern void T176f23(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].replace */
extern void T176f22(T0* C, T6 a1, T6 a2);
/* KL_COMPARABLE_COMPARATOR [INTEGER].less_than */
extern T1 T299f1(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].item */
extern T6 T295f4(T0* C, T6 a1);
/* ARRAY [INTEGER].put */
extern void T295f11(T0* C, T6 a1, T6 a2);
/* ARRAY [INTEGER].make */
extern T0* T295c10(T6 a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].is_empty */
extern T1 T176f11(T0* C);
/* ET_C_GENERATOR.polymorphic_type_id_sorter */
extern unsigned char ge957os6248;
extern T0* ge957ov6248;
extern T0* T56f102(T0* C);
/* DS_QUICK_SORTER [INTEGER].make */
extern T0* T215c2(T0* a1);
/* KL_COMPARABLE_COMPARATOR [INTEGER].make */
extern T0* T299c2(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].forth */
extern void T177f44(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_forth */
extern void T177f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].add_traversing_cursor */
extern void T177f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].remove_traversing_cursor */
extern void T177f66(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].go_before */
extern void T178f18(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_go_before */
extern void T178f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].remove_traversing_cursor */
extern void T178f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_next_cursor */
extern void T830f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].set_position */
extern void T830f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].off */
extern T1 T830f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_off */
extern T1 T178f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_before */
extern T1 T178f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_after */
extern T1 T178f4(T0* C, T0* a1);
/* ET_C_GENERATOR.print_procedure_call */
extern void T56f345(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_sized_real_set_item_call */
extern void T56f452(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.builtin_feature */
extern T6 T56f246(T0* C, T6 a1, T6 a2);
/* ET_C_GENERATOR.print_builtin_sized_character_set_item_call */
extern void T56f451(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_sized_integer_set_item_call */
extern void T56f450(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_C_GENERATOR.print_builtin_procedure_call_call */
extern void T56f449(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_set_item_call */
extern void T56f448(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_pointer_feature */
extern T6 T56f245(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_boolean_set_item_call */
extern void T56f447(T0* C, T0* a1);
/* ET_C_GENERATOR.builtin_boolean_feature */
extern T6 T56f244(T0* C, T6 a1);
/* ET_C_GENERATOR.print_builtin_special_put_call */
extern void T56f446(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_copy_call */
extern void T56f445(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_copy_call */
extern void T56f444(T0* C, T0* a1);
/* ET_C_GENERATOR.set_polymorphic_call_dynamic_type_sets */
extern void T56f342(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type_set */
extern void T222f13(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_standalone_type */
extern void T222f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.force_last */
extern void T173f12(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].make */
extern T0* T394f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TYPE].make_area */
extern T0* T1004c2(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.fixed_array */
extern unsigned char ge942os15099;
extern T0* ge942ov15099;
extern T0* T173f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE].default_create */
extern T0* T394c3(void);
/* ET_DYNAMIC_TYPE_LIST.capacity */
extern T6 T173f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has */
extern T1 T173f1(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.put_last */
extern void T173f11(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.make_with_capacity */
extern T0* T173c10(T6 a1);
/* ET_DYNAMIC_TYPE_LIST.wipe_out */
extern void T173f13(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.reset */
extern void T222f12(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.append_last */
extern void T173f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item_for_iteration */
extern T0* T178f2(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_item */
extern T0* T178f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].item */
extern T0* T178f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].finish */
extern void T178f21(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_finish */
extern void T178f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].add_traversing_cursor */
extern void T178f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].force_last */
extern void T178f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern void T178f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].resize */
extern T0* T832f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].resized_area */
extern T0* T831f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].copy_data */
extern void T831f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].move_data */
extern void T831f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].overlapping_move */
extern void T831f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].non_overlapping_move */
extern void T831f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T831c4(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_capacity */
extern T6 T178f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].extendible */
extern T1 T178f12(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.make */
extern T0* T222c11(T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].after */
extern T1 T178f1(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].forth */
extern void T178f19(T0* C);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].cursor_forth */
extern void T178f23(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.put */
extern void T168f14(T0* C, T0* a1, T6 a2);
/* ET_DYNAMIC_TYPE_SET_LIST.is_empty */
extern T1 T168f3(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.resize */
extern void T168f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TYPE_SET].resize */
extern T0* T819f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].resized_area */
extern T0* T818f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].copy_data */
extern void T818f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].move_data */
extern void T818f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].overlapping_move */
extern void T818f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TYPE_SET].non_overlapping_move */
extern void T818f8(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_DYNAMIC_TYPE_SET_LIST.capacity */
extern T6 T168f6(T0* C);
/* ET_DYNAMIC_TYPE_SET_LIST.wipe_out */
extern void T168f11(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_for_iteration */
extern T0* T177f3(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_item */
extern T0* T177f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].after */
extern T1 T177f2(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_after */
extern T1 T177f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].start */
extern void T177f43(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_start */
extern void T177f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].cursor_off */
extern T1 T177f35(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].is_empty */
extern T1 T177f34(T0* C);
/* ET_C_GENERATOR.fill_call_formal_arguments */
extern void T56f340(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].force_last */
extern void T175f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_capacity */
extern T6 T175f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].extendible */
extern T1 T175f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_name */
extern void T56f338(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.print_call_name_comment */
extern void T56f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.seeded_procedure */
extern T0* T55f21(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.seeded_feature */
extern T0* T148f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.set_next */
extern void T217f10(T0* C, T0* a1);
/* ET_C_GENERATOR.same_declared_signature */
extern T1 T56f99(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_LIST.item */
extern T0* T173f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].force_last */
extern void T177f42(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_put */
extern void T177f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_put */
extern void T177f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_put */
extern void T177f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].resize */
extern void T177f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].clashes_resize */
extern void T177f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].special_integer_ */
extern T0* T177f38(T0* C);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].key_storage_resize */
extern void T177f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_resize */
extern void T177f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].slots_resize */
extern void T177f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_modulus */
extern T6 T177f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_capacity */
extern T6 T177f15(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].item_storage_put */
extern void T177f49(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [INTEGER].force_last */
extern void T176f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].resize */
extern void T176f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].new_capacity */
extern T6 T176f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].extendible */
extern T1 T176f8(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].has */
extern T1 T177f1(T0* C, T6 a1);
/* ET_C_GENERATOR.print_polymorphic_query_calls */
extern void T56f303(T0* C);
/* ET_CLASS.seeded_query */
extern T0* T55f17(T0* C, T6 a1);
/* ET_QUERY_LIST.seeded_feature */
extern T0* T146f5(T0* C, T6 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.set_next */
extern void T207f11(T0* C, T0* a1);
/* ET_C_GENERATOR.print_gems_function */
extern void T56f302(T0* C);
/* ET_C_GENERATOR.print_types */
extern void T56f301(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_struct_name */
extern void T56f318(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_geboxed_function */
extern void T56f317(T0* C, T0* a1);
/* ET_C_GENERATOR.print_boxed_attribute_type_id_access */
extern void T56f353(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_boxed_type_declaration */
extern void T56f352(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_struct_name */
extern void T56f316(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.double_class_name */
extern unsigned char ge781os12408;
extern T0* ge781ov12408;
extern T0* T157f16(T0* C);
/* ET_TOKEN_CONSTANTS.real_class_name */
extern unsigned char ge781os12427;
extern T0* ge781ov12427;
extern T0* T157f15(T0* C);
/* ET_TOKEN_CONSTANTS.natural_class_name */
extern unsigned char ge781os12417;
extern T0* ge781ov12417;
extern T0* T157f14(T0* C);
/* ET_TOKEN_CONSTANTS.integer_class_name */
extern unsigned char ge781os12411;
extern T0* ge781ov12411;
extern T0* T157f13(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_class_name */
extern unsigned char ge781os12440;
extern T0* ge781ov12440;
extern T0* T157f12(T0* C);
/* ET_IDENTIFIER.upper_name */
extern T0* T119f16(T0* C);
/* UC_UTF8_STRING.as_upper */
extern T0* T904f19(T0* C);
/* UC_UTF8_STRING.to_upper */
extern void T904f69(T0* C);
/* UC_UTF8_STRING.move_bytes_right */
extern void T904f82(T0* C, T6 a1, T6 a2);
/* UC_UNICODE_ROUTINES.upper_code */
extern T6 T1150f3(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.upper_codes */
extern unsigned char ge363os24378;
extern T0* ge363ov24378;
extern T0* T1150f9(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_plane */
extern unsigned char ge363os24377;
extern T0* ge363ov24377;
extern T0* T1150f15(T0* C);
/* UC_UNICODE_ROUTINES.empty_upper_code_segment */
extern unsigned char ge363os24366;
extern T0* ge363ov24366;
extern T0* T1150f37(T0* C);
/* KL_INTEGER_ROUTINES.to_integer */
extern T6 T139f5(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.integer_ */
extern T0* T1150f46(T0* C);
/* SPECIAL [ARRAY [INTEGER]].make */
extern T0* T1257c2(T6 a1);
/* UC_UNICODE_ROUTINES.upper_code_plane_1 */
extern unsigned char ge363os24376;
extern T0* ge363ov24376;
extern T0* T1150f14(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_1_segment_4 */
extern unsigned char ge363os24375;
extern T0* ge363ov24375;
extern T0* T1150f45(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0 */
extern unsigned char ge363os24374;
extern T0* ge363ov24374;
extern T0* T1150f13(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_255 */
extern unsigned char ge363os24373;
extern T0* ge363ov24373;
extern T0* T1150f44(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_45 */
extern unsigned char ge363os24372;
extern T0* ge363ov24372;
extern T0* T1150f43(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_44 */
extern unsigned char ge363os24371;
extern T0* ge363ov24371;
extern T0* T1150f42(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_36 */
extern unsigned char ge363os24370;
extern T0* ge363ov24370;
extern T0* T1150f41(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_33 */
extern unsigned char ge363os24369;
extern T0* ge363ov24369;
extern T0* T1150f40(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_31 */
extern unsigned char ge363os24368;
extern T0* ge363ov24368;
extern T0* T1150f39(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_30 */
extern unsigned char ge363os24367;
extern T0* ge363ov24367;
extern T0* T1150f38(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_5 */
extern unsigned char ge363os24365;
extern T0* ge363ov24365;
extern T0* T1150f36(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_4 */
extern unsigned char ge363os24364;
extern T0* ge363ov24364;
extern T0* T1150f35(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_3 */
extern unsigned char ge363os24363;
extern T0* ge363ov24363;
extern T0* T1150f34(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_2 */
extern unsigned char ge363os24362;
extern T0* ge363ov24362;
extern T0* T1150f33(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_1 */
extern unsigned char ge363os24361;
extern T0* ge363ov24361;
extern T0* T1150f32(T0* C);
/* UC_UNICODE_ROUTINES.upper_code_plane_0_segment_0 */
extern unsigned char ge363os24360;
extern T0* ge363ov24360;
extern T0* T1150f31(T0* C);
/* SPECIAL [SPECIAL [ARRAY [INTEGER]]].make */
extern T0* T1258c2(T6 a1);
/* UC_UTF8_STRING.unicode */
extern unsigned char ge343os2770;
extern T0* ge343ov2770;
extern T0* T904f48(T0* C);
/* UC_UNICODE_ROUTINES.default_create */
extern T0* T1150c47(void);
/* STRING_8.as_upper */
extern T0* T17f25(T0* C);
/* STRING_8.to_upper */
extern void T17f55(T0* C);
/* CHARACTER_8.infix ">=" */
extern T1 T2f4(T2* C, T2 a1);
/* ET_TOKEN_CONSTANTS.character_class_name */
extern unsigned char ge781os12405;
extern T0* ge781ov12405;
extern T0* T157f11(T0* C);
/* ET_C_GENERATOR.include_runtime_header_file */
extern void T56f300(T0* C, T0* a1, T1 a2, T0* a3);
/* DS_HASH_TABLE [BOOLEAN, STRING].replace */
extern void T194f50(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_put */
extern void T194f61(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].search_position */
extern void T194f51(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].hash_position */
extern T6 T194f24(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [STRING].test */
extern T1 T44f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_item */
extern T6 T194f28(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item */
extern T1 T194f5(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].force */
extern void T194f49(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_put */
extern void T194f65(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_put */
extern void T194f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_put */
extern void T194f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, STRING].resize */
extern void T194f62(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].clashes_resize */
extern void T194f72(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].special_integer_ */
extern T0* T194f41(T0* C);
/* DS_HASH_TABLE [BOOLEAN, STRING].key_storage_resize */
extern void T194f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].item_storage_resize */
extern void T194f70(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].slots_resize */
extern void T194f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_modulus */
extern T6 T194f39(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_capacity */
extern T6 T194f23(T0* C, T6 a1);
/* DS_HASH_SET [STRING].force */
extern void T192f43(T0* C, T0* a1);
/* DS_HASH_SET [STRING].slots_put */
extern void T192f60(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].clashes_put */
extern void T192f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].slots_item */
extern T6 T192f24(T0* C, T6 a1);
/* DS_HASH_SET [STRING].hash_position */
extern T6 T192f20(T0* C, T0* a1);
/* DS_HASH_SET [STRING].resize */
extern void T192f58(T0* C, T6 a1);
/* DS_HASH_SET [STRING].clashes_resize */
extern void T192f66(T0* C, T6 a1);
/* DS_HASH_SET [STRING].special_integer_ */
extern T0* T192f27(T0* C);
/* DS_HASH_SET [STRING].key_storage_resize */
extern void T192f65(T0* C, T6 a1);
/* DS_HASH_SET [STRING].item_storage_resize */
extern void T192f64(T0* C, T6 a1);
/* DS_HASH_SET [STRING].key_storage_item */
extern T0* T192f36(T0* C, T6 a1);
/* DS_HASH_SET [STRING].slots_resize */
extern void T192f63(T0* C, T6 a1);
/* DS_HASH_SET [STRING].new_modulus */
extern T6 T192f11(T0* C, T6 a1);
/* DS_HASH_SET [STRING].new_capacity */
extern T6 T192f19(T0* C, T6 a1);
/* DS_HASH_SET [STRING].item_storage_put */
extern void T192f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [STRING].search_position */
extern void T192f56(T0* C, T0* a1);
/* DS_HASH_SET [STRING].key_equality_tester */
extern T0* T192f35(T0* C);
/* STRING_8.same_string */
extern T1 T17f5(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].has */
extern T1 T194f4(T0* C, T0* a1);
/* ET_C_GENERATOR.generate_ids */
extern void T56f299(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.item */
extern T0* T201f2(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_id */
extern void T202f65(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_id */
extern void T150f64(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].force_last */
extern void T76f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].resize */
extern void T76f28(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].new_capacity */
extern T6 T76f18(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].extendible */
extern T1 T76f17(T0* C, T6 a1);
/* ET_C_GENERATOR.set_finalize */
extern void T56f291(T0* C, T1 a1);
/* GEC.is_finalize */
extern T1 T21f19(T0* C);
/* ET_C_GENERATOR.make */
extern T0* T56c290(T0* a1);
/* ET_C_GENERATOR.make_external_regexps */
extern void T56f294(T0* C);
/* DS_ARRAYED_LIST [STRING].make */
extern void T76f22(T0* C, T6 a1);
/* DS_ARRAYED_LIST [STRING].make */
extern T0* T76c22(T6 a1);
/* DS_ARRAYED_LIST [STRING].new_cursor */
extern T0* T76f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].make */
extern T0* T285c7(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].set_key_equality_tester */
extern void T194f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].internal_set_equality_tester */
extern void T854f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make */
extern T0* T194c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_with_equality_testers */
extern void T194f52(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].make */
extern T0* T854c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, STRING].new_cursor */
extern T0* T854f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, STRING].make */
extern T0* T1146c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].new_cursor */
extern T0* T194f40(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, STRING].make */
extern T0* T852c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_sparse_container */
extern void T194f66(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_slots */
extern void T194f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_clashes */
extern void T194f75(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_key_storage */
extern void T194f74(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, STRING].make_item_storage */
extern void T194f73(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [STRING].default_create */
extern T0* T44c2(void);
/* DS_HASH_SET [STRING].set_equality_tester */
extern void T192f39(T0* C, T0* a1);
/* DS_HASH_SET [STRING].make */
extern T0* T192c38(T6 a1);
/* DS_HASH_SET [STRING].new_cursor */
extern T0* T192f16(T0* C);
/* DS_HASH_SET_CURSOR [STRING].make */
extern T0* T284c6(T0* a1);
/* DS_HASH_SET [STRING].make_slots */
extern void T192f47(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_clashes */
extern void T192f46(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_key_storage */
extern void T192f45(T0* C, T6 a1);
/* DS_HASH_SET [STRING].make_item_storage */
extern void T192f44(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].make */
extern T0* T191c12(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_FEATURE].new_cursor */
extern T0* T191f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_FEATURE].make */
extern T0* T851c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].make */
extern T0* T850f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_FEATURE].make_area */
extern T0* T1145c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_FEATURE].default_create */
extern T0* T850c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_map */
extern T0* T190c41(T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_with_equality_testers */
extern void T190f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].make */
extern T0* T847c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T847f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T1144c3(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].new_cursor */
extern T0* T190f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CONSTANT, ET_FEATURE].make */
extern T0* T845c4(T0* a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_sparse_container */
extern void T190f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_slots */
extern void T190f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_clashes */
extern void T190f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_key_storage */
extern void T190f69(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].make */
extern T0* T843f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE].make_area */
extern T0* T1143c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE].default_create */
extern T0* T843c3(void);
/* DS_HASH_TABLE [ET_CONSTANT, ET_FEATURE].make_item_storage */
extern void T190f68(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].make */
extern T0* T793f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTANT].make_area */
extern T0* T1130c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTANT].default_create */
extern T0* T793c3(void);
/* DS_HASH_SET [ET_FEATURE].make */
extern T0* T189c31(T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_cursor */
extern T0* T189f10(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE].make */
extern T0* T841c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE].make_slots */
extern void T189f37(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].special_integer_ */
extern T0* T189f22(T0* C);
/* DS_HASH_SET [ET_FEATURE].new_modulus */
extern T6 T189f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_clashes */
extern void T189f36(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_key_storage */
extern void T189f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].make_item_storage */
extern void T189f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T188c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_cursor */
extern T0* T188f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T838c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_slots */
extern void T188f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].special_integer_ */
extern T0* T188f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_modulus */
extern T6 T188f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_clashes */
extern void T188f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_key_storage */
extern void T188f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].make_item_storage */
extern void T188f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T840f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make_area */
extern T0* T1142c2(T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].make */
extern T0* T839c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].default_create */
extern T0* T840c3(void);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make */
extern T0* T187c36(T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T187f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T837c4(T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_slots */
extern void T187f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].special_integer_ */
extern T0* T187f20(T0* C);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_modulus */
extern T6 T187f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_clashes */
extern void T187f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_key_storage */
extern void T187f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].make_item_storage */
extern void T187f40(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.make */
extern T0* T186c22(T0* a1, T0* a2, T0* a3);
/* ET_CALL_EXPRESSION.make_qualified_call */
extern void T186f23(T0* C, T0* a1, T0* a2);
/* ET_CALL_INSTRUCTION.make */
extern T0* T184c8(T0* a1, T0* a2, T0* a3);
/* ET_CALL_INSTRUCTION.make_qualified_call */
extern void T184f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T183c12(T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.make_with_capacity */
extern void T183f12p1(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.right_parenthesis_symbol */
extern unsigned char ge781os12587;
extern T0* ge781ov12587;
extern T0* T157f561(T0* C);
/* ET_SYMBOL.make_right_parenthesis */
extern T0* T425c60(void);
/* ET_SYMBOL.make_leaf */
extern void T425f57(T0* C);
/* ET_SYMBOL.tokens */
extern T0* T425f2(T0* C);
/* ET_TOKEN_CONSTANTS.left_parenthesis_symbol */
extern unsigned char ge781os12582;
extern T0* ge781ov12582;
extern T0* T157f560(T0* C);
/* ET_SYMBOL.make_left_parenthesis */
extern T0* T425c59(void);
/* ET_ACTUAL_ARGUMENT_LIST.tokens */
extern T0* T183f7(T0* C);
/* DS_ARRAYED_LIST [ET_AGENT].make */
extern T0* T180c11(T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].new_cursor */
extern T0* T180f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_AGENT].make */
extern T0* T835c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].make */
extern T0* T834f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT].make_area */
extern T0* T1141c2(T6 a1);
/* SPECIAL [ET_AGENT].make */
extern T0* T833c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].default_create */
extern T0* T834c3(void);
/* ET_DYNAMIC_FEATURE.set_dynamic_type_sets */
extern void T150f59(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T178c17(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_STANDALONE_TYPE_SET].new_cursor */
extern T0* T178f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T830c5(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].make */
extern T0* T832f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_STANDALONE_TYPE_SET].make_area */
extern T0* T1140c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_STANDALONE_TYPE_SET].default_create */
extern T0* T832c3(void);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_map */
extern T0* T177c41(T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_with_equality_testers */
extern void T177f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T828c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_DYNAMIC_TYPE, INTEGER].new_cursor */
extern T0* T828f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T1139c3(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].new_cursor */
extern T0* T177f37(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_DYNAMIC_TYPE, INTEGER].make */
extern T0* T826c4(T0* a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_sparse_container */
extern void T177f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_slots */
extern void T177f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_clashes */
extern void T177f70(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_key_storage */
extern void T177f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_DYNAMIC_TYPE, INTEGER].make_item_storage */
extern void T177f68(T0* C, T6 a1);
/* DS_ARRAYED_LIST [INTEGER].make */
extern T0* T176c15(T6 a1);
/* DS_ARRAYED_LIST [INTEGER].new_cursor */
extern T0* T176f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [INTEGER].make */
extern T0* T824c4(T0* a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].make */
extern T0* T175c13(T6 a1);
/* DS_ARRAYED_LIST [ET_EXPRESSION].new_cursor */
extern T0* T175f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_EXPRESSION].make */
extern T0* T823c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].make */
extern T0* T754f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPRESSION].make_area */
extern T0* T1117c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPRESSION].default_create */
extern T0* T754c3(void);
/* DS_ARRAYED_STACK [ET_EXPRESSION].make */
extern T0* T174c8(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].make */
extern T0* T143c11(T6 a1);
/* DS_ARRAYED_LIST [ET_DYNAMIC_TYPE].new_cursor */
extern T0* T143f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_DYNAMIC_TYPE].make */
extern T0* T395c4(T0* a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].make */
extern T0* T172c10(T6 a1);
/* DS_ARRAYED_LIST [ET_IDENTIFIER].new_cursor */
extern T0* T172f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_IDENTIFIER].make */
extern T0* T822c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].make */
extern T0* T121f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IDENTIFIER].make_area */
extern T0* T378c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IDENTIFIER].default_create */
extern T0* T121c3(void);
/* KL_STRING_OUTPUT_STREAM.make */
extern T0* T171c4(T0* a1);
/* ET_C_GENERATOR.null_output_stream */
extern unsigned char ge316os2440;
extern T0* ge316ov2440;
extern T0* T56f7(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.make */
extern T0* T170c3(T0* a1);
/* ET_TYPE_CHECKER.make */
extern T0* T169c13(T0* a1);
/* ET_TYPE_CHECKER.dummy_feature */
extern unsigned char ge902os15175;
extern T0* ge902ov15175;
extern T0* T169f4(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern T0* T302c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.deferred_keyword */
extern unsigned char ge781os12606;
extern T0* ge781ov12606;
extern T0* T157f606(T0* C);
/* ET_KEYWORD.make_deferred */
extern T0* T166c69(void);
/* ET_DEFERRED_PROCEDURE.tokens */
extern T0* T302f10(T0* C);
/* ET_DEFERRED_PROCEDURE.make */
extern void T302f67p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.current_class */
extern T0* T169f6(T0* C);
/* ET_TYPE_CHECKER.make */
extern void T169f13p1(T0* C, T0* a1);
/* ET_C_GENERATOR.make_processor */
extern void T56f293(T0* C, T0* a1);
/* ET_CLASS.lower_name */
extern T0* T55f43(T0* C);
/* ET_SYSTEM.compile */
extern void T53f49(T0* C);
/* ET_SYSTEM.compile_system */
extern void T53f52(T0* C);
/* ET_SYSTEM.build_dynamic_type_sets */
extern void T53f55(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T142f12(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_dynamic_type_sets */
extern void T59f201(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_validity */
extern void T59f204(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_call_validity */
extern void T59f209(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_catcall_target_validity */
extern void T59f210(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_catcall_error */
extern void T59f211(T0* C, T0* a1, T0* a2, T6 a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_catcall_error */
extern void T52f164(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info_message */
extern void T52f193(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_line */
extern void T73f10(T0* C, T0* a1);
/* KL_STDOUT_FILE.put_new_line */
extern void T73f14(T0* C);
/* KL_STDOUT_FILE.put_string */
extern void T73f11(T0* C, T0* a1);
/* KL_STDOUT_FILE.old_put_string */
extern void T73f15(T0* C, T0* a1);
/* KL_STDOUT_FILE.console_ps */
extern void T73f19(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDOUT_FILE.string_ */
extern T0* T73f1(T0* C);
/* ET_ERROR_HANDLER.report_catcall_error */
extern void T28f164(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info_message */
extern void T28f193(T0* C, T0* a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.position */
extern T0* T207f7(T0* C);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.position */
extern T0* T217f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.string_ */
extern T0* T59f53(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.shared_error_message */
extern unsigned char ge941os7612;
extern T0* ge941ov7612;
extern T0* T59f52(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.error_handler */
extern T0* T59f51(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_fatal_error */
extern void T59f208(T0* C);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.seeded_dynamic_feature */
extern T0* T207f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.seeded_dynamic_feature */
extern T0* T217f5(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_feature_name */
extern unsigned char ge941os7829;
extern T0* ge941ov7829;
extern T0* T59f50(T0* C);
/* ET_IDENTIFIER.same_class_name */
extern T1 T119f30(T0* C, T0* a1);
/* KL_STRING_ROUTINES.same_case_insensitive */
extern T1 T26f14(T0* C, T0* a1, T0* a2);
/* CHARACTER_8.lower */
extern T2 T2f9(T2* C);
/* CHARACTER_8.is_upper */
extern T1 T2f12(T2* C);
/* UC_UNICODE_ROUTINES.lower_code */
extern T6 T1150f1(T0* C, T6 a1);
/* UC_UNICODE_ROUTINES.lower_codes */
extern unsigned char ge361os24356;
extern T0* ge361ov24356;
extern T0* T1150f4(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_plane */
extern unsigned char ge361os24355;
extern T0* ge361ov24355;
extern T0* T1150f12(T0* C);
/* UC_UNICODE_ROUTINES.empty_lower_code_segment */
extern unsigned char ge361os24344;
extern T0* ge361ov24344;
extern T0* T1150f22(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1 */
extern unsigned char ge361os24354;
extern T0* ge361ov24354;
extern T0* T1150f11(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_1_segment_4 */
extern unsigned char ge361os24353;
extern T0* ge361ov24353;
extern T0* T1150f30(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0 */
extern unsigned char ge361os24352;
extern T0* ge361ov24352;
extern T0* T1150f10(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_255 */
extern unsigned char ge361os24351;
extern T0* ge361ov24351;
extern T0* T1150f29(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_44 */
extern unsigned char ge361os24350;
extern T0* ge361ov24350;
extern T0* T1150f28(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_36 */
extern unsigned char ge361os24349;
extern T0* ge361ov24349;
extern T0* T1150f27(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_33 */
extern unsigned char ge361os24348;
extern T0* ge361ov24348;
extern T0* T1150f26(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_31 */
extern unsigned char ge361os24347;
extern T0* ge361ov24347;
extern T0* T1150f25(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_30 */
extern unsigned char ge361os24346;
extern T0* ge361ov24346;
extern T0* T1150f24(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_16 */
extern unsigned char ge361os24345;
extern T0* ge361ov24345;
extern T0* T1150f23(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_5 */
extern unsigned char ge361os24343;
extern T0* ge361ov24343;
extern T0* T1150f21(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_4 */
extern unsigned char ge361os24342;
extern T0* ge361ov24342;
extern T0* T1150f20(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_3 */
extern unsigned char ge361os24341;
extern T0* ge361ov24341;
extern T0* T1150f19(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_2 */
extern unsigned char ge361os24340;
extern T0* ge361ov24340;
extern T0* T1150f18(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_1 */
extern unsigned char ge361os24339;
extern T0* ge361ov24339;
extern T0* T1150f17(T0* C);
/* UC_UNICODE_ROUTINES.lower_code_plane_0_segment_0 */
extern unsigned char ge361os24338;
extern T0* ge361ov24338;
extern T0* T1150f16(T0* C);
/* KL_STRING_ROUTINES.unicode */
extern T0* T26f15(T0* C);
/* ET_IDENTIFIER.string_ */
extern T0* T119f38(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tilde_class_name */
extern unsigned char ge941os7828;
extern T0* ge941ov7828;
extern T0* T59f49(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_feature_dynamic_type_sets */
extern void T59f203(T0* C, T0* a1, T0* a2);
/* DS_CELL [INTEGER].put */
extern void T235f3(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.set_built */
extern void T202f68(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_built */
extern void T150f66(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_validity */
extern void T59f207(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_feature_validity */
extern void T59f206(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE.is_precursor */
extern T1 T150f42(T0* C);
/* ET_DYNAMIC_PRECURSOR.set_current_type_needed */
extern void T202f67(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_current_type_needed */
extern void T150f65(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_dynamic_type_sets */
extern void T202f62(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_SET_LIST.force_last */
extern void T168f9(T0* C, T0* a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_catcall_mode */
extern void T142f9(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_catcall_mode */
extern void T59f198(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_assertion */
extern void T142f11(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_assertion */
extern void T59f200(T0* C, T1 a1);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_no_debug */
extern void T142f10(T0* C, T1 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_no_debug */
extern void T59f199(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_creation */
extern void T202f63(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_creation */
extern void T150f60(T0* C, T1 a1);
/* ET_DYNAMIC_PRECURSOR.set_regular */
extern void T202f64(T0* C, T1 a1);
/* ET_CLASS.is_creation_directly_exported_to */
extern T1 T55f42(T0* C, T0* a1, T0* a2);
/* ET_CREATOR_LIST.is_directly_exported_to */
extern T1 T497f4(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.is_directly_exported_to */
extern T1 T591f7(T0* C, T0* a1, T0* a2);
/* ET_CREATOR.has_feature_name */
extern T1 T591f10(T0* C, T0* a1);
/* ET_CLIENTS.has_class */
extern T1 T414f7(T0* C, T0* a1);
/* ET_CLIENTS.has_class_name */
extern T1 T414f8(T0* C, T0* a1);
/* ET_IDENTIFIER.class_name */
extern T0* T119f79(T0* C);
/* ET_CLASS_NAME_LIST.has_class */
extern T1 T413f4(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.has_class_name */
extern T1 T413f5(T0* C, T0* a1);
/* ET_CREATOR.is_empty */
extern T1 T591f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc5a_error */
extern void T52f157(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_system_error */
extern void T52f189(T0* C, T0* a1);
/* KL_STANDARD_FILES.output */
extern unsigned char ge317os8688;
extern T0* ge317ov8688;
extern T0* T71f2(T0* C);
/* KL_STDOUT_FILE.make */
extern T0* T73c9(void);
/* KL_STDOUT_FILE.make_open_stdout */
extern void T73f13(T0* C, T0* a1);
/* KL_STDOUT_FILE.set_write_mode */
extern void T73f18(T0* C);
/* KL_STDOUT_FILE.console_def */
extern T14 T73f3(T0* C, T6 a1);
/* KL_STDOUT_FILE.old_make */
extern void T73f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_info */
extern void T52f195(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc5a */
extern T0* T882c31(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T52f12(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc5a_error */
extern void T28f157(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_system_error */
extern void T28f189(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_info */
extern void T28f195(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc5_error */
extern T1 T28f12(T0* C);
/* ET_CLASS.named_query */
extern T0* T55f39(T0* C, T0* a1);
/* ET_QUERY_LIST.named_feature */
extern T0* T146f6(T0* C, T0* a1);
/* ET_CLASS.named_procedure */
extern T0* T55f40(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.named_feature */
extern T0* T148f6(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vsrc1a_error */
extern void T52f156(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_vsrc1a */
extern T0* T882c30(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T52f11(T0* C);
/* ET_ERROR_HANDLER.report_vsrc1a_error */
extern void T28f156(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vsrc1_error */
extern T1 T28f11(T0* C);
/* ET_LACE_UNIVERSE.eiffel_parser */
extern T0* T51f8(T0* C);
/* ET_EIFFEL_PARSER.set_providers_enabled */
extern void T158f906(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_void_keyword */
extern void T158f905(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_reference_keyword */
extern void T158f904(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_recast_keyword */
extern void T158f903(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_create_keyword */
extern void T158f902(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_convert_keyword */
extern void T158f901(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_attribute_keyword */
extern void T158f900(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_use_assign_keyword */
extern void T158f899(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.set_error_handler */
extern void T158f898(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_ast_factory */
extern void T158f897(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_universe */
extern void T158f896(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.make_with_factory */
extern T0* T158c895(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.make_parser_skeleton */
extern void T158f910(T0* C);
/* ET_EIFFEL_PARSER.yy_build_parser_tables */
extern void T158f914(T0* C);
/* ET_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge963os13732;
extern T0* ge963ov13732;
extern T0* T158f68(T0* C);
/* ET_EIFFEL_PARSER.yyfixed_array */
extern T0* T158f867(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [INTEGER].to_special */
extern T0* T105f3(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yycheck_template_2 */
extern void T158f1742(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_array_subcopy */
extern void T158f1747(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* KL_ARRAY_ROUTINES [INTEGER].subcopy */
extern void T915f3(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* ARRAY [INTEGER].subcopy */
extern void T295f15(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* ET_EIFFEL_PARSER.integer_array_ */
extern unsigned char ge278os2685;
extern T0* ge278ov2685;
extern T0* T158f882(T0* C);
/* KL_ARRAY_ROUTINES [INTEGER].default_create */
extern T0* T915c2(void);
/* ET_EIFFEL_PARSER.yycheck_template_1 */
extern void T158f1741(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template */
extern unsigned char ge963os13729;
extern T0* ge963ov13729;
extern T0* T158f66(T0* C);
/* ET_EIFFEL_PARSER.yytable_template_2 */
extern void T158f1740(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yytable_template_1 */
extern void T158f1739(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge963os13728;
extern T0* ge963ov13728;
extern T0* T158f64(T0* C);
/* ET_EIFFEL_PARSER.yypact_template */
extern unsigned char ge963os13727;
extern T0* ge963ov13727;
extern T0* T158f62(T0* C);
/* ET_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge963os13726;
extern T0* ge963ov13726;
extern T0* T158f60(T0* C);
/* ET_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge963os13725;
extern T0* ge963ov13725;
extern T0* T158f58(T0* C);
/* ET_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge963os13724;
extern T0* ge963ov13724;
extern T0* T158f56(T0* C);
/* ET_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge963os13723;
extern T0* ge963ov13723;
extern T0* T158f54(T0* C);
/* ET_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge963os13722;
extern T0* ge963ov13722;
extern T0* T158f52(T0* C);
/* ET_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge963os13721;
extern T0* ge963ov13721;
extern T0* T158f50(T0* C);
/* ET_EIFFEL_PARSER.yy_create_value_stacks */
extern void T158f913(T0* C);
/* ET_EIFFEL_PARSER.special_integer_ */
extern T0* T158f41(T0* C);
/* ET_EIFFEL_PARSER.make_class_processor */
extern void T158f909(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.unknown_class */
extern T0* T158f39(T0* C);
/* ET_EIFFEL_PARSER.make_eiffel_scanner_with_factory */
extern void T158f908(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.make_with_buffer */
extern void T158f912(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_load_input_buffer */
extern void T158f919(T0* C);
/* ET_EIFFEL_PARSER.yy_set_content */
extern void T158f923(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.count */
extern T6 T906f4(T0* C);
/* ET_EIFFEL_PARSER.yy_initialize */
extern void T158f918(T0* C);
/* ET_EIFFEL_PARSER.yy_build_tables */
extern void T158f922(T0* C);
/* ET_EIFFEL_PARSER.yy_acclist_template */
extern unsigned char ge967os14587;
extern T0* ge967ov14587;
extern T0* T158f147(T0* C);
/* ET_EIFFEL_PARSER.yy_fixed_array */
extern T0* T158f870(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_accept_template */
extern unsigned char ge967os14586;
extern T0* ge967ov14586;
extern T0* T158f145(T0* C);
/* ET_EIFFEL_PARSER.yy_meta_template */
extern unsigned char ge967os14585;
extern T0* ge967ov14585;
extern T0* T158f143(T0* C);
/* ET_EIFFEL_PARSER.yy_ec_template */
extern unsigned char ge967os14584;
extern T0* ge967ov14584;
extern T0* T158f141(T0* C);
/* ET_EIFFEL_PARSER.yy_def_template */
extern unsigned char ge967os14583;
extern T0* ge967ov14583;
extern T0* T158f139(T0* C);
/* ET_EIFFEL_PARSER.yy_base_template */
extern unsigned char ge967os14582;
extern T0* ge967ov14582;
extern T0* T158f137(T0* C);
/* ET_EIFFEL_PARSER.yy_chk_template */
extern unsigned char ge967os14581;
extern T0* ge967ov14581;
extern T0* T158f135(T0* C);
/* ET_EIFFEL_PARSER.yy_nxt_template */
extern unsigned char ge967os14580;
extern T0* ge967ov14580;
extern T0* T158f133(T0* C);
/* ET_EIFFEL_PARSER.empty_buffer */
extern unsigned char ge166os5113;
extern T0* ge166ov5113;
extern T0* T158f34(T0* C);
/* YY_BUFFER.make */
extern T0* T114c12(T0* a1);
/* YY_BUFFER.make_from_buffer */
extern void T114f16(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.put */
extern void T906f11(T0* C, T2 a1, T6 a2);
/* KL_CHARACTER_BUFFER.fill_from_string */
extern void T906f14(T0* C, T0* a1, T6 a2);
/* STRING_8.subcopy */
extern void T17f61(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* YY_BUFFER.new_default_buffer */
extern T0* T114f9(T0* C, T6 a1);
/* KL_CHARACTER_BUFFER.make */
extern T0* T906c10(T6 a1);
/* KL_OPERATING_SYSTEM.is_dotnet */
extern unsigned char ge410os8401;
extern T1 ge410ov8401;
extern T1 T60f6(T0* C);
/* PLATFORM.default_create */
extern T0* T1317c2(void);
/* KL_CHARACTER_BUFFER.operating_system */
extern T0* T906f7(T0* C);
/* DS_HASH_SET [ET_CLASS].make */
extern T0* T405c37(T6 a1);
/* DS_HASH_SET [ET_CLASS].new_cursor */
extern T0* T405f17(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].make */
extern T0* T1010c6(T0* a1);
/* DS_HASH_SET [ET_CLASS].unset_found_item */
extern void T405f47(T0* C);
/* DS_HASH_SET [ET_CLASS].make_slots */
extern void T405f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].special_integer_ */
extern T0* T405f24(T0* C);
/* DS_HASH_SET [ET_CLASS].new_modulus */
extern T6 T405f12(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_clashes */
extern void T405f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_key_storage */
extern void T405f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].make_item_storage */
extern void T405f43(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].make */
extern T0* T391f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS].make_area */
extern T0* T1002c2(T6 a1);
/* SPECIAL [ET_CLASS].make */
extern T0* T389c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].default_create */
extern T0* T391c3(void);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].make */
extern T0* T404c11(T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_cursor */
extern T0* T404f6(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].make */
extern T0* T1009c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].make */
extern T0* T545f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_TYPE].make_area */
extern T0* T1048c2(T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].make */
extern T0* T535c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].default_create */
extern T0* T545c3(void);
/* DS_ARRAYED_LIST [ET_PROCEDURE].make */
extern T0* T238c18(T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_cursor */
extern T0* T238f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].make */
extern T0* T866c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].make */
extern T0* T636f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PROCEDURE].make_area */
extern T0* T1078c2(T6 a1);
/* SPECIAL [ET_PROCEDURE].make */
extern T0* T614c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].default_create */
extern T0* T636c3(void);
/* DS_ARRAYED_LIST [ET_QUERY].make */
extern T0* T240c18(T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_cursor */
extern T0* T240f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].make */
extern T0* T870c6(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].make */
extern T0* T618f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUERY].make_area */
extern T0* T1073c2(T6 a1);
/* SPECIAL [ET_QUERY].make */
extern T0* T613c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUERY].default_create */
extern T0* T618c3(void);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].make */
extern T0* T403c13(T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_cursor */
extern T0* T403f9(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].make */
extern T0* T1008c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].make */
extern T0* T1007f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSERTION_ITEM].make_area */
extern T0* T1210c2(T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].make */
extern T0* T1006c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].default_create */
extern T0* T1007c3(void);
/* DS_ARRAYED_STACK [ET_SYMBOL].make */
extern T0* T402c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].make */
extern T0* T427f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL].make_area */
extern T0* T1018c2(T6 a1);
/* SPECIAL [ET_SYMBOL].make */
extern T0* T426c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].default_create */
extern T0* T427c3(void);
/* DS_ARRAYED_STACK [ET_KEYWORD].make */
extern T0* T401c8(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].make */
extern T0* T418f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD].make_area */
extern T0* T1015c2(T6 a1);
/* SPECIAL [ET_KEYWORD].make */
extern T0* T417c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].default_create */
extern T0* T418c3(void);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T400c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T659f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_LIST].make_area */
extern T0* T1087c2(T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].make */
extern T0* T624c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].default_create */
extern T0* T659c3(void);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T399c9(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T652f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_LIST].make_area */
extern T0* T1084c2(T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].make */
extern T0* T630c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].default_create */
extern T0* T652c3(void);
/* DS_ARRAYED_STACK [INTEGER].make */
extern T0* T398c8(T6 a1);
/* ET_XACE_UNIVERSE.eiffel_parser */
extern T0* T48f8(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc4a_error */
extern void T52f155(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvsrc4a */
extern T0* T882c29(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T52f10(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc4a_error */
extern void T28f155(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvsrc4_error */
extern T1 T28f10(T0* C);
/* ET_CLASS.is_preparsed */
extern T1 T55f24(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc6a_error */
extern void T52f154(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM_ERROR.make_gvsrc6a */
extern T0* T882c28(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T52f9(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc6a_error */
extern void T28f154(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvsrc6_error */
extern T1 T28f9(T0* C);
/* ET_TOKEN_CONSTANTS.default_create_feature_name */
extern unsigned char ge781os12494;
extern T0* ge781ov12494;
extern T0* T157f1(T0* C);
/* ET_SYSTEM.tokens */
extern T0* T53f37(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvsrc3a_error */
extern void T52f153(T0* C);
/* ET_SYSTEM_ERROR.make_gvsrc3a */
extern T0* T882c27(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T52f8(T0* C);
/* ET_ERROR_HANDLER.report_gvsrc3a_error */
extern void T28f153(T0* C);
/* ET_ERROR_HANDLER.reportable_gvsrc3_error */
extern T1 T28f8(T0* C);
/* ET_SYSTEM.compile_kernel */
extern void T53f54(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_pointer_feature */
extern T6 T157f9(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.to_pointer_feature_name */
extern unsigned char ge781os12555;
extern T0* ge781ov12555;
extern T0* T157f7(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_item_feature_name */
extern unsigned char ge781os12534;
extern T0* ge781ov12534;
extern T0* T157f6(T0* C);
/* UT_VERSION.infix "<" */
extern T1 T58f5(T0* C, T0* a1);
/* UT_VERSION.build */
extern T6 T58f13(T0* C);
/* UT_VERSION.has_build */
extern T1 T58f12(T0* C);
/* UT_VERSION.revision */
extern T6 T58f11(T0* C);
/* UT_VERSION.has_revision */
extern T1 T58f10(T0* C);
/* UT_VERSION.minor */
extern T6 T58f9(T0* C);
/* UT_VERSION.has_minor */
extern T1 T58f8(T0* C);
/* UT_VERSION.major */
extern T6 T58f7(T0* C);
/* UT_VERSION.has_major */
extern T1 T58f6(T0* C);
/* ET_SYSTEM.ise_6_0_6_7057 */
extern unsigned char ge260os1594;
extern T0* ge260ov1594;
extern T0* T53f44(T0* C);
/* UT_VERSION.make */
extern T0* T58c17(T6 a1, T6 a2, T6 a3, T6 a4);
/* ET_LACE_UNIVERSE.is_ise */
extern T1 T51f37(T0* C);
/* ET_XACE_UNIVERSE.is_ise */
extern T1 T48f37(T0* C);
/* ET_TOKEN_CONSTANTS.upper_feature_name */
extern unsigned char ge781os12562;
extern T0* ge781ov12562;
extern T0* T157f5(T0* C);
/* ET_TOKEN_CONSTANTS.lower_feature_name */
extern unsigned char ge781os12529;
extern T0* ge781ov12529;
extern T0* T157f4(T0* C);
/* ET_TOKEN_CONSTANTS.count_feature_name */
extern unsigned char ge781os12492;
extern T0* ge781ov12492;
extern T0* T157f3(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkfe3a_error */
extern void T52f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_validity_error */
extern void T52f191(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvkfe3a */
extern T0* T884c614(T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_compilers */
extern void T884f630(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.filename */
extern T0* T884f22(T0* C);
/* ET_CLASS.is_in_cluster */
extern T1 T55f27(T0* C);
/* ET_VALIDITY_ERROR.default_message_template */
extern T0* T884f21(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.template_code */
extern T0* T884f17(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.null_position */
extern unsigned char ge949os23492;
extern T0* ge949ov23492;
extern T0* T884f14(T0* C);
/* ET_COMPRESSED_POSITION.make_default */
extern T0* T1244c8(void);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T52f16(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe3a_error */
extern void T28f162(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_validity_error */
extern void T28f191(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvkfe3_error */
extern T1 T28f16(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe1a_error */
extern void T52f161(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe1a */
extern T0* T884c613(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T52f15(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe1a_error */
extern void T28f161(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe1_error */
extern T1 T28f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe2a_error */
extern void T52f160(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe2a */
extern T0* T884c612(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T52f14(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe2a_error */
extern void T28f160(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe2_error */
extern T1 T28f14(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.area_feature_name */
extern unsigned char ge781os12467;
extern T0* ge781ov12467;
extern T0* T157f2(T0* C);
/* ET_GENERIC_CLASS_TYPE.make */
extern T0* T161c94(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.put_first */
extern void T160f24(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T160c23(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T160f23p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T682f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1098c2(T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].make */
extern T0* T680c4(T6 a1);
/* ET_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge834os6093;
extern T0* ge834ov6093;
extern T0* T160f6(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T682c3(void);
/* ET_TOKEN_CONSTANTS.right_bracket_symbol */
extern unsigned char ge781os12586;
extern T0* ge781ov12586;
extern T0* T157f558(T0* C);
/* ET_SYMBOL.make_right_bracket */
extern T0* T425c58(void);
/* ET_TOKEN_CONSTANTS.left_bracket_symbol */
extern unsigned char ge781os12581;
extern T0* ge781ov12581;
extern T0* T157f557(T0* C);
/* ET_BRACKET_SYMBOL.make */
extern T0* T472c81(void);
/* ET_BRACKET_SYMBOL.make_leaf */
extern void T472f83(T0* C);
/* ET_BRACKET_SYMBOL.tokens */
extern T0* T472f2(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T160f2(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvknl1a_error */
extern void T52f159(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.make_gvknl1a */
extern T0* T882c32(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T52f13(T0* C);
/* ET_ERROR_HANDLER.report_gvknl1a_error */
extern void T28f159(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvknl1_error */
extern T1 T28f13(T0* C);
/* ET_LACE_UNIVERSE.print_time */
extern void T51f157(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.out */
extern T0* T282f1(T0* C);
/* DT_DATE_TIME_DURATION.append_to_string */
extern void T282f18(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.append_time_to_string */
extern void T282f23(T0* C, T0* a1);
/* KL_INTEGER_ROUTINES.append_decimal_integer */
extern void T139f7(T0* C, T6 a1, T0* a2);
/* DT_DATE_TIME_DURATION.integer_ */
extern T0* T282f14(T0* C);
/* DT_DATE_TIME_DURATION.append_date_to_string */
extern void T282f22(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.set_canonical */
extern void T282f17(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.make_canonical_from_dates */
extern void T282f21(T0* C, T0* a1, T0* a2);
/* DT_DATE_TIME_DURATION.make_precise */
extern void T282f16(T0* C, T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise */
extern T0* T282c16(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6, T6 a7);
/* DT_DATE_TIME_DURATION.make_precise_time_duration */
extern void T282f20(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_DATE_TIME_DURATION.make_date_duration */
extern void T282f19(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.days_in_current_month */
extern T6 T152f43(T0* C);
/* DT_DATE_TIME.days_in_month */
extern T6 T152f45(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.leap_year */
extern T1 T152f38(T0* C, T6 a1);
/* DT_DATE_TIME.days_in_previous_month */
extern T6 T152f42(T0* C);
/* DT_DATE_TIME.infix "<" */
extern T1 T152f41(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond_count */
extern T6 T152f40(T0* C);
/* DT_DATE_TIME.day */
extern T6 T152f10(T0* C);
/* DT_DATE_TIME.month */
extern T6 T152f9(T0* C);
/* DT_DATE_TIME.year */
extern T6 T152f8(T0* C);
/* DT_DATE_TIME.add_duration */
extern void T152f62(T0* C, T0* a1);
/* DT_DATE_TIME.add_years_months_days */
extern void T152f65(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_from_epoch_days */
extern void T152f67(T0* C, T6 a1);
/* DT_DATE_TIME.epoch_to_y2k_days */
extern unsigned char ge371os12084;
extern T6 ge371ov12084;
extern T6 T152f47(T0* C);
/* DT_DATE_TIME.epoch_days */
extern T6 T152f11(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.epoch_days_at_month */
extern unsigned char ge371os12083;
extern T6 ge371ov12083;
extern T6 T152f24(T0* C);
/* DT_DATE_TIME.days_at_month */
extern T6 T152f23(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.epoch_leap_years */
extern unsigned char ge371os12082;
extern T6 ge371ov12082;
extern T6 T152f22(T0* C);
/* KL_INTEGER_ROUTINES.div */
extern T6 T139f4(T0* C, T6 a1, T6 a2);
/* DT_DATE_TIME.integer_ */
extern T0* T152f21(T0* C);
/* DT_DATE_TIME.set_year_month_day */
extern void T152f57(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.set_day */
extern void T152f66(T0* C, T6 a1);
/* DT_DATE_TIME_DURATION.millisecond_count */
extern T6 T282f15(T0* C);
/* DT_DATE_TIME.set_time */
extern void T152f61(T0* C, T0* a1);
/* DT_DATE_TIME.set_date */
extern void T152f60(T0* C, T0* a1);
/* DT_DATE_TIME_DURATION.tmp_date_time */
extern unsigned char ge1122os12278;
extern T0* ge1122ov12278;
extern T0* T282f2(T0* C);
/* DT_DATE_TIME.make */
extern T0* T152c59(T6 a1, T6 a2, T6 a3, T6 a4, T6 a5, T6 a6);
/* DT_DATE_TIME.make_time */
extern void T152f64(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.make_date */
extern void T152f63(T0* C, T6 a1, T6 a2, T6 a3);
/* DT_DATE_TIME.infix "-" */
extern T0* T152f1(T0* C, T0* a1);
/* DT_DATE_TIME.duration */
extern T0* T152f2(T0* C, T0* a1);
/* DT_DATE_TIME.millisecond */
extern T6 T152f7(T0* C);
/* DT_DATE_TIME.second */
extern T6 T152f6(T0* C);
/* DT_DATE_TIME.minute */
extern T6 T152f5(T0* C);
/* DT_DATE_TIME.hour */
extern T6 T152f4(T0* C);
/* DT_DATE_TIME.day_count */
extern T6 T152f3(T0* C);
/* ET_XACE_UNIVERSE.print_time */
extern void T48f161(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.preparse_single */
extern void T51f160(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assemblies */
extern void T897f4(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.consume */
extern void T137f15(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_gac_assembly */
extern void T897f7(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gaaaa_error */
extern void T52f211(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_assembly_error */
extern void T52f212(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.make_gaaaa */
extern T0* T1306c13(T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.full_lower_name */
extern T0* T137f7(T0* C, T2 a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.lower_name */
extern T0* T137f8(T0* C);
/* UC_UTF8_STRING.as_lower */
extern T0* T904f21(T0* C);
/* UC_UTF8_STRING.to_lower */
extern void T904f70(T0* C);
/* STRING_8.as_lower */
extern T0* T17f29(T0* C);
/* STRING_8.to_lower */
extern void T17f62(T0* C);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.name */
extern T0* T137f9(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.full_lower_name */
extern T0* T126f4(T0* C, T2 a1);
/* ET_LACE_DOTNET_ASSEMBLY.lower_name */
extern T0* T126f5(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.name */
extern T0* T126f6(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T52f35(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gaaaa_error */
extern void T28f211(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_assembly_error */
extern void T28f212(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gaaaa_error */
extern T1 T28f35(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.error_handler */
extern T0* T897f2(T0* C);
/* ET_LACE_DOTNET_ASSEMBLY.consume */
extern void T126f9(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_assembly */
extern void T897f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.assembly */
extern T0* T125f4(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].item */
extern T0* T380f9(T0* C, T6 a1);
/* ET_LACE_DOTNET_ASSEMBLIES.count */
extern T6 T125f3(T0* C);
/* ET_LACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T51f73(T0* C);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.make */
extern T0* T897c3(T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_clusters_single */
extern void T283f130(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_single */
extern void T283f139(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.build_dependant_constraint */
extern void T283f143(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_dependant_constraint */
extern void T253f54(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_dependant_constraint */
extern void T250f13(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_dependant_constraint */
extern void T123f47(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_dependant_constraint */
extern void T122f9(T0* C, T0* a1);
/* ET_CLUSTER_DEPENDENCE_CONSTRAINT.make */
extern T0* T411c3(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING].make_from_linear */
extern T0* T76c39(T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].forth */
extern void T108f9(T0* C);
/* DS_LINKED_LIST [STRING].cursor_forth */
extern void T107f12(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].add_traversing_cursor */
extern void T107f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].set_next_cursor */
extern void T108f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].remove_traversing_cursor */
extern void T107f14(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [STRING].set */
extern void T108f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [STRING].item */
extern T0* T108f2(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING].start */
extern void T108f8(T0* C);
/* DS_LINKED_LIST [STRING].cursor_start */
extern void T107f11(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].cursor_off */
extern T1 T107f7(T0* C, T0* a1);
/* DS_LINKED_LIST [STRING].new_cursor */
extern T0* T107f1(T0* C);
/* DS_LINKED_LIST_CURSOR [STRING].make */
extern T0* T108c7(T0* a1);
/* ST_SPLITTER.split */
extern T0* T41f1(T0* C, T0* a1);
/* ST_SPLITTER.do_split */
extern T0* T41f2(T0* C, T0* a1, T1 a2);
/* DS_LINKED_LIST [STRING].force_last */
extern void T107f10(T0* C, T0* a1);
/* DS_LINKABLE [STRING].put_right */
extern void T368f4(T0* C, T0* a1);
/* DS_LINKABLE [STRING].make */
extern T0* T368c3(T0* a1);
/* DS_LINKED_LIST [STRING].is_empty */
extern T1 T107f3(T0* C);
/* DS_HASH_SET [INTEGER].has */
extern T1 T109f1(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].search_position */
extern void T109f31(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].clashes_item */
extern T6 T109f12(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].hash_position */
extern T6 T109f19(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].key_storage_item */
extern T6 T109f18(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].item_storage_item */
extern T6 T109f27(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].key_equality_tester */
extern T0* T109f17(T0* C);
/* DS_HASH_SET [INTEGER].slots_item */
extern T6 T109f14(T0* C, T6 a1);
/* ST_SPLITTER.string_ */
extern T0* T41f5(T0* C);
/* DS_LINKED_LIST [STRING].make */
extern T0* T107c9(void);
/* ST_SPLITTER.set_separators */
extern void T41f10(T0* C, T0* a1);
/* DS_HASH_SET [INTEGER].put */
extern void T109f30(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].slots_put */
extern void T109f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].clashes_put */
extern void T109f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].item_storage_put */
extern void T109f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [INTEGER].unset_found_item */
extern void T109f36(T0* C);
/* DS_HASH_SET [INTEGER].make */
extern T0* T109c29(T6 a1);
/* DS_HASH_SET [INTEGER].new_cursor */
extern T0* T109f10(T0* C);
/* DS_HASH_SET_CURSOR [INTEGER].make */
extern T0* T369c3(T0* a1);
/* DS_HASH_SET [INTEGER].make_slots */
extern void T109f35(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].special_integer_ */
extern T0* T109f23(T0* C);
/* DS_HASH_SET [INTEGER].new_modulus */
extern T6 T109f6(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_clashes */
extern void T109f34(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_key_storage */
extern void T109f33(T0* C, T6 a1);
/* DS_HASH_SET [INTEGER].make_item_storage */
extern void T109f32(T0* C, T6 a1);
/* ST_SPLITTER.make */
extern T0* T41c9(void);
/* ET_EIFFEL_PREPARSER.build_provider_constraint */
extern void T283f142(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_provider_constraint */
extern void T253f53(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_provider_constraint */
extern void T250f12(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_provider_constraint */
extern void T123f46(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_provider_constraint */
extern void T122f8(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaaa_error */
extern void T52f166(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_cluster_error */
extern void T52f194(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.make_gcaaa */
extern T0* T885c17(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T52f20(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaaa_error */
extern void T28f166(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_cluster_error */
extern void T28f194(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gcaaa_error */
extern T1 T28f20(T0* C, T0* a1);
/* KL_DIRECTORY.close */
extern void T409f28(T0* C);
/* KL_DIRECTORY.old_close */
extern void T409f32(T0* C);
/* KL_DIRECTORY.default_pointer */
extern T14 T409f20(T0* C);
/* KL_DIRECTORY.dir_close */
extern void T409f33(T0* C, T14 a1);
/* ET_XACE_CLUSTER.add_recursive_cluster */
extern void T253f52(T0* C, T0* a1);
/* ET_XACE_CLUSTER.add_subcluster */
extern void T253f60(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_parent */
extern void T253f57(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.put_last */
extern void T250f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].force_last */
extern void T407f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].resize */
extern void T407f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].resize */
extern T0* T1012f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_CLUSTER].resized_area */
extern T0* T1011f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_CLUSTER].copy_data */
extern void T1011f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_CLUSTER].move_data */
extern void T1011f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].overlapping_move */
extern void T1011f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].non_overlapping_move */
extern void T1011f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_CLUSTER].make */
extern T0* T1011c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_capacity */
extern T6 T407f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].extendible */
extern T1 T407f8(T0* C, T6 a1);
/* ET_XACE_CLUSTER.set_subclusters */
extern void T253f49(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_parent */
extern void T250f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make_empty */
extern T0* T250c3(void);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].make */
extern T0* T407c10(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].new_cursor */
extern T0* T407f7(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_CLUSTER].make */
extern T0* T1013c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].make */
extern T0* T1012f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_CLUSTER].make_area */
extern T0* T1211c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_CLUSTER].default_create */
extern T0* T1012c3(void);
/* ET_XACE_CLUSTER.new_recursive_cluster */
extern T0* T253f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_read_only */
extern void T253f47(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_override */
extern void T253f62(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_implicit */
extern void T253f61(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_recursive */
extern void T253f46(T0* C, T1 a1);
/* ET_XACE_CLUSTER.set_options */
extern void T253f48(T0* C, T0* a1);
/* ET_XACE_CLUSTER.make */
extern T0* T253c41(T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_overridden_constraint_enabled */
extern void T253f51(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T250f9(T0* C, T1 a1);
/* ET_XACE_CLUSTER.string_ */
extern T0* T253f31(T0* C);
/* ET_LACE_CLUSTER.add_recursive_cluster */
extern void T123f48(T0* C, T0* a1);
/* ET_LACE_CLUSTER.add_subcluster */
extern void T123f44(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_parent */
extern void T123f45(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.put_last */
extern void T122f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].force_last */
extern void T379f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].resize */
extern void T379f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].resize */
extern T0* T132f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTER].resized_area */
extern T0* T130f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTER].copy_data */
extern void T130f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTER].move_data */
extern void T130f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].overlapping_move */
extern void T130f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].non_overlapping_move */
extern void T130f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTER].make */
extern T0* T130c4(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_capacity */
extern T6 T379f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].extendible */
extern T1 T379f7(T0* C, T6 a1);
/* ET_LACE_CLUSTER.set_subclusters */
extern void T123f41(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.set_parent */
extern void T122f5(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make_empty */
extern T0* T122c7(void);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].make */
extern T0* T379c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].new_cursor */
extern T0* T379f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_CLUSTER].make */
extern T0* T999c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].make */
extern T0* T132f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTER].make_area */
extern T0* T382c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTER].default_create */
extern T0* T132c3(void);
/* ET_LACE_CLUSTER.new_recursive_cluster */
extern T0* T123f35(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_exclude */
extern void T123f40(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_read_only */
extern void T123f39(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_override */
extern void T123f43(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_implicit */
extern void T123f49(T0* C, T1 a1);
/* ET_LACE_CLUSTER.set_recursive */
extern void T123f38(T0* C, T1 a1);
/* ET_LACE_CLUSTER.make */
extern T0* T123c36(T0* a1, T0* a2);
/* ET_LACE_CLUSTER.set_overridden_constraint_enabled */
extern void T123f42(T0* C, T1 a1);
/* ET_LACE_CLUSTERS.set_overridden_constraint_enabled */
extern void T122f6(T0* C, T1 a1);
/* ET_IDENTIFIER.set_position */
extern void T119f99(T0* C, T6 a1, T6 a2);
/* ET_LACE_CLUSTER.name */
extern T0* T123f13(T0* C);
/* ET_LACE_CLUSTER.string_ */
extern T0* T123f30(T0* C);
/* KL_UNIX_FILE_SYSTEM.directory_exists */
extern T1 T66f13(T0* C, T0* a1);
/* KL_DIRECTORY.exists */
extern T1 T409f21(T0* C);
/* KL_DIRECTORY.old_exists */
extern T1 T409f11(T0* C);
/* KL_DIRECTORY.eif_dir_exists */
extern T1 T409f22(T0* C, T14 a1);
/* KL_UNIX_FILE_SYSTEM.tmp_directory */
extern unsigned char ge394os8430;
extern T0* ge394ov8430;
extern T0* T66f14(T0* C);
/* KL_DIRECTORY.make */
extern void T409f24(T0* C, T0* a1);
/* KL_DIRECTORY.make */
extern T0* T409c24(T0* a1);
/* KL_DIRECTORY.old_make */
extern void T409f29(T0* C, T0* a1);
/* KL_DIRECTORY.string_ */
extern T0* T409f8(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.directory_exists */
extern T1 T65f17(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.tmp_directory */
extern T0* T65f18(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T253f24(T0* C, T0* a1);
/* DS_HASH_SET [STRING].has */
extern T1 T192f37(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_case_insensitive */
extern T1 T253f28(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET_CURSOR [STRING].forth */
extern void T284f10(T0* C);
/* DS_HASH_SET_CURSOR [STRING].go_after */
extern void T284f11(T0* C);
/* DS_HASH_SET [STRING].cursor_go_after */
extern void T192f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [STRING].item */
extern T0* T284f4(T0* C);
/* DS_HASH_SET_CURSOR [STRING].after */
extern T1 T284f3(T0* C);
/* DS_HASH_SET_CURSOR [STRING].start */
extern void T284f9(T0* C);
/* ET_XACE_CLUSTER.operating_system */
extern T0* T253f27(T0* C);
/* ET_XACE_OPTIONS.exclude */
extern T0* T254f111(T0* C);
/* ET_XACE_OPTIONS.default_exclude */
extern unsigned char ge1010os17710;
extern T0* ge1010ov17710;
extern T0* T254f112(T0* C);
/* ET_XACE_OPTIONS.string_equality_tester */
extern unsigned char ge348os1584;
extern T0* ge348ov1584;
extern T0* T254f19(T0* C);
/* UC_STRING_EQUALITY_TESTER.default_create */
extern T0* T43c3(void);
/* ET_XACE_OPTIONS.is_exclude_declared */
extern T1 T254f110(T0* C);
/* ET_XACE_CLUSTER.is_valid_directory_name */
extern T1 T253f24p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T123f26(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.has */
extern T1 T124f4(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.string_ */
extern T0* T124f5(T0* C);
/* ET_LACE_EXCLUDE.has_case_insensitive */
extern T1 T124f3(T0* C, T0* a1);
/* ET_LACE_CLUSTER.operating_system */
extern T0* T123f15(T0* C);
/* ET_LACE_CLUSTER.is_valid_directory_name */
extern T1 T123f26p1(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gcaab_error */
extern void T52f165(T0* C, T0* a1, T0* a2);
/* ET_CLUSTER_ERROR.make_gcaab */
extern T0* T885c16(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T52f19(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gcaab_error */
extern void T28f165(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gcaab_error */
extern T1 T28f19(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_single */
extern void T283f141(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_syntax_error */
extern void T52f183(T0* C, T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.make */
extern T0* T886c21(T0* a1, T0* a2);
/* ET_SYNTAX_ERROR.set_compilers */
extern void T886f22(T0* C, T1 a1);
/* ET_ERROR_HANDLER.report_syntax_error */
extern void T28f183(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.current_position */
extern T0* T283f24(T0* C);
/* ET_FILE_POSITION.make */
extern T0* T909c11(T0* a1, T6 a2, T6 a3);
/* ET_FILE_POSITION.make_compressed_position */
extern void T909f13(T0* C, T6 a1, T6 a2);
/* ET_FILE_POSITION.set_position */
extern void T909f15(T0* C, T6 a1, T6 a2);
/* ET_CLASS.add_overridden_class */
extern void T55f180(T0* C, T0* a1);
/* ET_CLASS.reset_after_parsed */
extern void T55f184(T0* C);
/* ET_CONVERT_FEATURE_LIST.reset */
extern void T499f10(T0* C);
/* ET_CONVERT_PROCEDURE.reset */
extern void T604f10(T0* C);
/* ET_BRACED_TYPE_LIST.reset */
extern void T919f12(T0* C);
/* ET_CONVERT_FUNCTION.reset */
extern void T602f9(T0* C);
/* ET_CONVERT_PROCEDURE.convert_feature */
extern T0* T604f6(T0* C);
/* ET_CONVERT_FUNCTION.convert_feature */
extern T0* T602f5(T0* C);
/* ET_CREATOR_LIST.reset */
extern void T497f11(T0* C);
/* ET_CREATOR.reset */
extern void T591f19(T0* C);
/* ET_INVARIANTS.reset */
extern void T503f25(T0* C);
/* ET_INVARIANTS.reset_implementation_checked */
extern void T503f27(T0* C);
/* ET_INVARIANTS.reset_assertions_checked */
extern void T503f26(T0* C);
/* ET_INVARIANTS.reset */
extern void T503f25p1(T0* C);
/* ET_PARENT_LIST.reset */
extern void T292f12(T0* C);
/* ET_PARENT.reset */
extern void T287f14(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.reset */
extern void T291f10(T0* C);
/* ET_EXPORT_LIST.reset */
extern void T290f9(T0* C);
/* ET_FEATURE_EXPORT.reset */
extern void T580f13(T0* C);
/* ET_ALL_EXPORT.reset */
extern void T578f8(T0* C);
/* ET_RENAME_LIST.reset */
extern void T289f10(T0* C);
/* ET_RENAME.reset */
extern void T572f7(T0* C);
/* ET_RENAME.rename_pair */
extern T0* T572f5(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.reset */
extern void T160f28(T0* C);
/* ET_PARENT.parent */
extern T0* T287f11(T0* C);
/* ET_FORMAL_PARAMETER_LIST.reset */
extern void T396f29(T0* C);
/* ET_PROCEDURE_LIST.reset */
extern void T148f11(T0* C);
/* ET_QUERY_LIST.reset */
extern void T146f11(T0* C);
/* ET_CLASS.reset_ancestors_built */
extern void T55f191(T0* C);
/* ET_TOKEN_CONSTANTS.empty_ancestors */
extern unsigned char ge781os12947;
extern T0* ge781ov12947;
extern T0* T157f105(T0* C);
/* ET_BASE_TYPE_LIST.make_with_capacity */
extern T0* T296c7(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].make */
extern T0* T962f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BASE_TYPE].make_area */
extern T0* T1198c2(T6 a1);
/* SPECIAL [ET_BASE_TYPE].make */
extern T0* T961c4(T6 a1);
/* ET_BASE_TYPE_LIST.fixed_array */
extern unsigned char ge836os15099;
extern T0* ge836ov15099;
extern T0* T296f3(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].default_create */
extern T0* T962c3(void);
/* ET_CLASS.tokens */
extern T0* T55f4(T0* C);
/* ET_CLASS.reset_features_flattened */
extern void T55f190(T0* C);
/* ET_CLASS.reset_interface_checked */
extern void T55f189(T0* C);
/* ET_CLASS.reset_implementation_checked */
extern void T55f188(T0* C);
/* ET_CLASS.reset_flat_implementation_checked */
extern void T55f187(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0h_error */
extern void T52f196(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0h */
extern T0* T884c617(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vscn_error */
extern T1 T52f27(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vscn0h_error */
extern void T28f196(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vscn_error */
extern T1 T28f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vscn0j_error */
extern void T52f201(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0j */
extern T0* T884c622(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0j_error */
extern void T28f201(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0c_error */
extern void T52f200(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0c */
extern T0* T884c621(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0c_error */
extern void T28f200(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vscn0f_error */
extern void T52f197(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vscn0f */
extern T0* T884c618(T0* a1);
/* ET_ERROR_HANDLER.report_vscn0f_error */
extern void T28f197(T0* C, T0* a1);
/* ET_CLASS.is_none */
extern T1 T55f44(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0b_error */
extern void T52f199(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0b */
extern T0* T884c620(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0b_error */
extern void T28f199(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_dotnet_assembly */
extern T1 T55f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vscn0a_error */
extern void T52f198(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vscn0a */
extern T0* T884c619(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vscn0a_error */
extern void T28f198(T0* C, T0* a1, T0* a2);
/* ET_CLASS.set_overridden_class */
extern void T55f173(T0* C, T0* a1);
/* ET_CLASS.set_master_class */
extern void T55f186(T0* C, T0* a1);
/* ET_CLASS.set_group */
extern void T55f176(T0* C, T0* a1);
/* ET_CLASS.set_time_stamp */
extern void T55f178(T0* C, T6 a1);
/* ET_CLASS.set_filename */
extern void T55f175(T0* C, T0* a1);
/* ET_CLASS.reset */
extern void T55f174(T0* C);
/* ET_CLASS.reset_preparsed */
extern void T55f193(T0* C);
/* ET_CLASS.reset_parsed */
extern void T55f192(T0* C);
/* ET_TOKEN_CONSTANTS.empty_procedures */
extern unsigned char ge781os12949;
extern T0* ge781ov12949;
extern T0* T157f107(T0* C);
/* ET_PROCEDURE_LIST.make_with_capacity */
extern T0* T148c8(T6 a1);
/* ET_PROCEDURE_LIST.fixed_array */
extern unsigned char ge720os6093;
extern T0* ge720ov6093;
extern T0* T148f3(T0* C);
/* ET_TOKEN_CONSTANTS.empty_queries */
extern unsigned char ge781os12948;
extern T0* ge781ov12948;
extern T0* T157f106(T0* C);
/* ET_QUERY_LIST.make_with_capacity */
extern T0* T146c8(T6 a1);
/* ET_QUERY_LIST.fixed_array */
extern unsigned char ge722os6093;
extern T0* ge722ov6093;
extern T0* T146f3(T0* C);
/* ET_TOKEN_CONSTANTS.class_keyword */
extern unsigned char ge781os12600;
extern T0* ge781ov12600;
extern T0* T157f108(T0* C);
/* ET_KEYWORD.make_class */
extern T0* T166c22(void);
/* ET_CLASS.cloned_class */
extern T0* T55f22(T0* C);
/* ET_CLASS.copy */
extern void T55f185(T0* C, T0* a1);
/* ET_CLASS.make_unknown */
extern T0* T55c161(T0* a1);
/* ET_TOKEN_CONSTANTS.unknown_class_name */
extern unsigned char ge781os12441;
extern T0* ge781ov12441;
extern T0* T157f80(T0* C);
/* ET_LACE_UNIVERSE.eiffel_class */
extern T0* T51f79(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].force_last */
extern void T141f42(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_put */
extern void T141f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_put */
extern void T141f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_put */
extern void T141f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_item */
extern T6 T141f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].hash_position */
extern T6 T141f11(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].resize */
extern void T141f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_resize */
extern void T141f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].special_integer_ */
extern T0* T141f29(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_resize */
extern void T141f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].resize */
extern T0* T392f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME].resized_area */
extern T0* T390f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME].copy_data */
extern void T390f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME].move_data */
extern void T390f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].overlapping_move */
extern void T390f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].non_overlapping_move */
extern void T390f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME].make */
extern T0* T390c4(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_resize */
extern void T141f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS].resize */
extern T0* T391f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS].resized_area */
extern T0* T389f2(T0* C, T6 a1);
/* SPECIAL [ET_CLASS].copy_data */
extern void T389f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS].move_data */
extern void T389f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].overlapping_move */
extern void T389f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS].non_overlapping_move */
extern void T389f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].key_storage_item */
extern T0* T141f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].clashes_item */
extern T6 T141f19(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].slots_resize */
extern void T141f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_modulus */
extern T6 T141f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_capacity */
extern T6 T141f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_put */
extern void T141f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search_position */
extern void T141f48(T0* C, T0* a1);
/* ET_CLASS_NAME_TESTER.test */
extern T1 T271f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].unset_found_item */
extern void T141f47(T0* C);
/* ET_AST_FACTORY.new_class */
extern T0* T248f313(T0* C, T0* a1, T6 a2);
/* ET_CLASS.make */
extern T0* T55c181(T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found_item */
extern T0* T141f33(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].item_storage_item */
extern T0* T141f37(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].found */
extern T1 T141f3(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].search */
extern void T141f43(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.eiffel_class */
extern T0* T48f78(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.read_token */
extern void T283f146(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_action */
extern void T283f153(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_silu_error */
extern void T52f182(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_silu_error */
extern void T28f182(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sifu_error */
extern void T52f181(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sifu_error */
extern void T28f181(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnp_error */
extern void T52f168(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnp_error */
extern void T28f168(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssnl_error */
extern void T52f179(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssnl_error */
extern void T28f179(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sssc_error */
extern void T52f178(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sssc_error */
extern void T28f178(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.more */
extern void T283f159(T0* C);
/* ET_EIFFEL_PREPARSER.is_verbatim_string_closer */
extern T1 T283f101(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PREPARSER.text_item */
extern T2 T283f126(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.report_syntax_error */
extern void T283f154(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.set_start_condition */
extern void T283f157(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.text_substring */
extern T0* T283f98(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].force_new */
extern void T262f41(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_put */
extern void T262f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_put */
extern void T262f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].slots_put */
extern void T262f46(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_put */
extern void T262f45(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, STRING].slots_item */
extern T6 T262f18(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].hash_position */
extern T6 T262f17(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_item */
extern T6 T262f16(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].resize */
extern void T262f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].clashes_resize */
extern void T262f54(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].special_integer_ */
extern T0* T262f32(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_resize */
extern void T262f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_resize */
extern void T262f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].key_storage_item */
extern T0* T262f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].slots_resize */
extern void T262f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_modulus */
extern T6 T262f28(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_capacity */
extern T6 T262f21(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].unset_found_item */
extern void T262f44(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].found_key */
extern T0* T262f3(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].found */
extern T1 T262f1(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].search */
extern void T262f38(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].search_position */
extern void T262f43(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.strings */
extern unsigned char ge968os14399;
extern T0* ge968ov14399;
extern T0* T283f125(T0* C);
/* ET_EIFFEL_PREPARSER.tokens */
extern T0* T283f128(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].set_key_equality_tester */
extern void T262f39(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].internal_set_equality_tester */
extern void T930f6(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.string_equality_tester */
extern T0* T283f127(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].make_map */
extern T0* T262c37(T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_with_equality_testers */
extern void T262f42(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].make */
extern T0* T930c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, STRING].new_cursor */
extern T0* T930f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, STRING].make */
extern T0* T1165c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].new_cursor */
extern T0* T262f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, STRING].make */
extern T0* T932c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_sparse_container */
extern void T262f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_slots */
extern void T262f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_clashes */
extern void T262f57(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_key_storage */
extern void T262f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].make_item_storage */
extern void T262f55(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.append_text_substring_to_string */
extern void T283f160(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.append_substring_to_string */
extern void T906f15(T0* C, T6 a1, T6 a2, T0* a3);
/* KL_CHARACTER_BUFFER.any_ */
extern T0* T906f8(T0* C);
/* ET_EIFFEL_PREPARSER.string_ */
extern T0* T283f124(T0* C);
/* ET_EIFFEL_PREPARSER.string_buffer */
extern unsigned char ge968os14400;
extern T0* ge968ov14400;
extern T0* T283f123(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sceq_error */
extern void T52f173(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sceq_error */
extern void T28f173(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scqq_error */
extern void T52f172(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scqq_error */
extern void T28f172(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scac_error */
extern void T52f171(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scac_error */
extern void T28f171(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_scas_error */
extern void T52f170(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scas_error */
extern void T28f170(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.set_syntax_error */
extern void T283f156(T0* C);
/* ET_EIFFEL_PREPARSER.text_count */
extern T6 T283f96(T0* C);
/* ET_AST_FACTORY.new_identifier */
extern T0* T248f55(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.last_identifier */
extern T0* T283f95(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].replace_found_item */
extern void T262f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, STRING].found_item */
extern T6 T262f2(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].item_storage_item */
extern T6 T262f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.last_identifier */
extern T0* T158f887(T0* C);
/* ET_EIFFEL_PARSER.strings */
extern T0* T158f874(T0* C);
/* ET_EIFFEL_PARSER.tokens */
extern T0* T158f859(T0* C);
/* ET_EIFFEL_PARSER.string_equality_tester */
extern T0* T158f881(T0* C);
/* ET_EIFFEL_PARSER.append_text_substring_to_string */
extern void T158f1743(T0* C, T6 a1, T6 a2, T0* a3);
/* ET_EIFFEL_PARSER.string_ */
extern T0* T158f873(T0* C);
/* ET_EIFFEL_PARSER.string_buffer */
extern T0* T158f872(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_line_column */
extern void T283f158(T0* C);
/* ET_EIFFEL_PREPARSER.yy_execute_eof_action */
extern void T283f152(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_sseq_error */
extern void T52f167(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sseq_error */
extern void T28f167(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PREPARSER.terminate */
extern void T283f155(T0* C);
/* ET_EIFFEL_PREPARSER.wrap */
extern T1 T283f73(T0* C);
/* ET_EIFFEL_PREPARSER.yy_refill_input_buffer */
extern void T283f151(T0* C);
/* ET_EIFFEL_PREPARSER.yy_set_content */
extern void T283f149(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.special_integer_ */
extern T0* T283f34(T0* C);
/* YY_FILE_BUFFER.fill */
extern void T113f20(T0* C);
/* KL_CHARACTER_BUFFER.fill_from_stream */
extern T6 T906f5(T0* C, T0* a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.compact_left */
extern void T113f22(T0* C);
/* KL_CHARACTER_BUFFER.move_left */
extern void T906f12(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.resize */
extern void T113f24(T0* C);
/* KL_CHARACTER_BUFFER.resize */
extern void T906f13(T0* C, T6 a1);
/* YY_FILE_BUFFER.default_capacity */
extern unsigned char ge161os10884;
extern T6 ge161ov10884;
extern T6 T113f10(T0* C);
/* YY_BUFFER.fill */
extern void T114f15(T0* C);
/* YY_FILE_BUFFER.set_index */
extern void T113f18(T0* C, T6 a1);
/* YY_BUFFER.set_index */
extern void T114f13(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_null_trans_state */
extern T6 T283f72(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_previous_state */
extern T6 T283f71(T0* C);
/* ET_EIFFEL_PREPARSER.fatal_error */
extern void T283f150(T0* C, T0* a1);
/* KL_CHARACTER_BUFFER.item */
extern T2 T906f1(T0* C, T6 a1);
/* ET_EIFFEL_PREPARSER.yy_load_input_buffer */
extern void T283f145(T0* C);
/* YY_FILE_BUFFER.set_file */
extern void T113f23(T0* C, T0* a1);
/* YY_FILE_BUFFER.flush */
extern void T113f25(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_buffer */
extern unsigned char ge970os14575;
extern T0* ge970ov14575;
extern T0* T283f22(T0* C);
/* YY_FILE_BUFFER.make */
extern T0* T113c17(T0* a1);
/* YY_FILE_BUFFER.make_with_size */
extern void T113f21(T0* C, T0* a1, T6 a2);
/* YY_FILE_BUFFER.new_default_buffer */
extern T0* T113f15(T0* C, T6 a1);
/* KL_STANDARD_FILES.input */
extern unsigned char ge317os8687;
extern T0* ge317ov8687;
extern T0* T71f3(T0* C);
/* KL_STDIN_FILE.make */
extern T0* T908c18(void);
/* KL_STDIN_FILE.make_open_stdin */
extern void T908f20(T0* C, T0* a1);
/* KL_STDIN_FILE.set_read_mode */
extern void T908f23(T0* C);
/* KL_STDIN_FILE.console_def */
extern T14 T908f13(T0* C, T6 a1);
/* KL_STDIN_FILE.old_make */
extern void T908f22(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.std */
extern T0* T283f119(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T283f147(T0* C);
/* YY_FILE_BUFFER.set_end_of_file */
extern void T113f26(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T283f147p1(T0* C);
/* ET_EIFFEL_PREPARSER.reset */
extern void T283f147p0(T0* C);
/* KL_TEXT_INPUT_FILE.time_stamp */
extern T6 T22f31(T0* C);
/* KL_TEXT_INPUT_FILE.date */
extern T6 T22f38(T0* C);
/* UNIX_FILE_INFO.date */
extern T6 T246f6(T0* C);
/* UNIX_FILE_INFO.file_info */
extern T6 T246f7(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.buffered_file_info */
extern unsigned char ge2042os1906;
extern T0* ge2042ov1906;
extern T0* T22f22(T0* C);
/* UNIX_FILE_INFO.make */
extern T0* T246c8(void);
/* UNIX_FILE_INFO.make_buffered_file_info */
extern void T246f10(T0* C, T6 a1);
/* UNIX_FILE_INFO.stat_size */
extern T6 T246f4(T0* C);
/* KL_TEXT_INPUT_FILE.set_buffer */
extern void T22f46(T0* C);
/* UNIX_FILE_INFO.update */
extern void T246f9(T0* C, T0* a1);
/* UNIX_FILE_INFO.file_stat */
extern void T246f11(T0* C, T14 a1, T14 a2);
/* KL_TEXT_INPUT_FILE.old_exists */
extern T1 T22f13(T0* C);
/* KL_TEXT_INPUT_FILE.file_exists */
extern T1 T22f21(T0* C, T14 a1);
/* KL_EIFFEL_COMPILER.is_se */
extern unsigned char ge391os19362;
extern T1 ge391ov19362;
extern T1 T410f1(T0* C);
/* KL_EIFFEL_COMPILER.vendor */
extern unsigned char ge391os19353;
extern T0* ge391ov19353;
extern T0* T410f2(T0* C);
/* ET_EIFFEL_PREPARSER.eiffel_compiler */
extern unsigned char ge332os14569;
extern T0* ge332ov14569;
extern T0* T283f20(T0* C);
/* KL_EIFFEL_COMPILER.default_create */
extern T0* T410c5(void);
/* KL_TEXT_INPUT_FILE.reset */
extern void T22f52(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_file */
extern T0* T283f19(T0* C);
/* KL_TEXT_INPUT_FILE.is_closed */
extern T1 T22f15(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_closed */
extern T1 T22f23(T0* C);
/* ET_EIFFEL_PREPARSER.shared_file */
extern unsigned char ge968os14430;
extern T0* ge968ov14430;
extern T0* T283f118(T0* C);
/* ET_EIFFEL_PREPARSER.file_system */
extern T0* T283f18(T0* C);
/* ET_EIFFEL_PREPARSER.unix_file_system */
extern T0* T283f117(T0* C);
/* ET_EIFFEL_PREPARSER.windows_file_system */
extern T0* T283f116(T0* C);
/* ET_EIFFEL_PREPARSER.operating_system */
extern T0* T283f115(T0* C);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T253f16(T0* C, T0* a1);
/* ET_XACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T253f16p1(T0* C, T0* a1);
/* ET_XACE_CLUSTER.has_eiffel_extension */
extern T1 T253f29(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T123f21(T0* C, T0* a1);
/* ET_LACE_CLUSTER.is_valid_eiffel_filename */
extern T1 T123f21p1(T0* C, T0* a1);
/* ET_LACE_CLUSTER.has_eiffel_extension */
extern T1 T123f29(T0* C, T0* a1);
/* KL_DIRECTORY.read_entry */
extern void T409f27(T0* C);
/* KL_DIRECTORY.readentry */
extern void T409f31(T0* C);
/* KL_DIRECTORY.dir_next */
extern T0* T409f19(T0* C, T14 a1);
/* KL_DIRECTORY.old_end_of_input */
extern T1 T409f15(T0* C);
/* KL_DIRECTORY.is_open_read */
extern T1 T409f1(T0* C);
/* KL_DIRECTORY.is_closed */
extern T1 T409f4(T0* C);
/* KL_DIRECTORY.open_read */
extern void T409f26(T0* C);
/* KL_DIRECTORY.old_open_read */
extern void T409f30(T0* C);
/* KL_DIRECTORY.dir_open */
extern T14 T409f17(T0* C, T14 a1);
/* KL_DIRECTORY.old_is_readable */
extern T1 T409f12(T0* C);
/* KL_DIRECTORY.eif_dir_is_readable */
extern T1 T409f23(T0* C, T14 a1);
/* KL_DIRECTORY.reset */
extern void T409f25(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.tmp_directory */
extern T0* T283f17(T0* C);
/* ET_EIFFEL_PREPARSER.shared_directory */
extern unsigned char ge966os18121;
extern T0* ge966ov18121;
extern T0* T283f113(T0* C);
/* ET_EIFFEL_PREPARSER.execution_environment */
extern T0* T283f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_preparsing_status */
extern void T52f207(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_preparsing_status */
extern void T28f207(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].item */
extern T0* T379f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].item */
extern T0* T407f2(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.eiffel_preparser */
extern T0* T51f78(T0* C);
/* ET_EIFFEL_PREPARSER.set_use_void_keyword */
extern void T283f137(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_reference_keyword */
extern void T283f136(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_recast_keyword */
extern void T283f135(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_create_keyword */
extern void T283f134(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_convert_keyword */
extern void T283f133(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_attribute_keyword */
extern void T283f132(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.set_use_assign_keyword */
extern void T283f131(T0* C, T1 a1);
/* ET_EIFFEL_PREPARSER.make_with_factory */
extern T0* T283c129(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PREPARSER.make_eiffel_scanner_with_factory */
extern void T283f138(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PREPARSER.make_with_buffer */
extern void T283f140(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_initialize */
extern void T283f144(T0* C);
/* ET_EIFFEL_PREPARSER.yy_build_tables */
extern void T283f148(T0* C);
/* ET_EIFFEL_PREPARSER.yy_acclist_template */
extern unsigned char ge965os18077;
extern T0* ge965ov18077;
extern T0* T283f87(T0* C);
/* ET_EIFFEL_PREPARSER.yy_fixed_array */
extern T0* T283f122(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.yy_accept_template */
extern unsigned char ge965os18076;
extern T0* ge965ov18076;
extern T0* T283f86(T0* C);
/* ET_EIFFEL_PREPARSER.yy_meta_template */
extern unsigned char ge965os18075;
extern T0* ge965ov18075;
extern T0* T283f85(T0* C);
/* ET_EIFFEL_PREPARSER.yy_ec_template */
extern unsigned char ge965os18074;
extern T0* ge965ov18074;
extern T0* T283f84(T0* C);
/* ET_EIFFEL_PREPARSER.yy_def_template */
extern unsigned char ge965os18073;
extern T0* ge965ov18073;
extern T0* T283f83(T0* C);
/* ET_EIFFEL_PREPARSER.yy_base_template */
extern unsigned char ge965os18072;
extern T0* ge965ov18072;
extern T0* T283f82(T0* C);
/* ET_EIFFEL_PREPARSER.yy_chk_template */
extern unsigned char ge965os18071;
extern T0* ge965ov18071;
extern T0* T283f81(T0* C);
/* ET_EIFFEL_PREPARSER.yy_nxt_template */
extern unsigned char ge965os18070;
extern T0* ge965ov18070;
extern T0* T283f80(T0* C);
/* ET_EIFFEL_PREPARSER.empty_buffer */
extern T0* T283f9(T0* C);
/* ET_XACE_UNIVERSE.preparse_single */
extern void T48f164(T0* C);
/* ET_XACE_UNIVERSE.dotnet_assembly_consumer */
extern T0* T48f67(T0* C);
/* ET_XACE_UNIVERSE.eiffel_preparser */
extern T0* T48f72(T0* C);
/* DT_SYSTEM_CLOCK.date_time_now */
extern T0* T153f1(T0* C);
/* DT_SYSTEM_CLOCK.set_date_time_to_now */
extern void T153f31(T0* C, T0* a1);
/* DT_DATE_TIME.set_precise_hour_minute_second */
extern void T152f58(T0* C, T6 a1, T6 a2, T6 a3, T6 a4);
/* DT_SYSTEM_CLOCK.set_local_time */
extern void T153f32(T0* C);
/* DT_SYSTEM_CLOCK.second_now */
extern T6 T153f16(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_sec */
extern T6 T153f29(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.minute_now */
extern T6 T153f15(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_min */
extern T6 T153f28(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.hour_now */
extern T6 T153f14(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_hour */
extern T6 T153f27(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.day_now */
extern T6 T153f13(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mday */
extern T6 T153f26(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.month_now */
extern T6 T153f12(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_mon */
extern T6 T153f25(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.year_now */
extern T6 T153f11(T0* C);
/* DT_SYSTEM_CLOCK.get_tm_year */
extern T6 T153f24(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.update */
extern void T153f33(T0* C);
/* POINTER.memory_free */
extern void T14f8(T14* C);
/* POINTER.default_pointer */
extern T14 T14f4(T14* C);
/* POINTER.c_free */
extern void T14f9(T14* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_millitm */
extern T6 T153f23(T0* C, T14 a1);
/* MANAGED_POINTER.make_from_pointer */
extern T0* T397c7(T14 a1, T6 a2);
/* POINTER.memory_copy */
extern void T14f11(T14* C, T14 a1, T6 a2);
/* POINTER.c_memcpy */
extern void T14f12(T14* C, T14 a1, T14 a2, T6 a3);
/* DT_SYSTEM_CLOCK.tm_structure_size */
extern T6 T153f22(T0* C);
/* DT_SYSTEM_CLOCK.localtime */
extern T14 T153f20(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.gmtime */
extern T14 T153f19(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.get_time */
extern void T153f35(T0* C, T14 a1, T14 a2);
/* DT_SYSTEM_CLOCK.ftime */
extern void T153f34(T0* C, T14 a1);
/* DT_SYSTEM_CLOCK.time_t_structure_size */
extern T6 T153f18(T0* C);
/* POINTER.memory_alloc */
extern T14 T14f1(T14* C, T6 a1);
/* POINTER.c_malloc */
extern T14 T14f2(T14* C, T6 a1);
/* DT_SYSTEM_CLOCK.timeb_structure_size */
extern T6 T153f17(T0* C);
/* DT_DATE_TIME.make_from_storage */
extern T0* T152c56(T6 a1, T6 a2);
/* DT_SHARED_SYSTEM_CLOCK.system_clock */
extern unsigned char ge1114os11965;
extern T0* ge1114ov11965;
extern T0* T151f1(T0* C);
/* DT_SYSTEM_CLOCK.make */
extern T0* T153c30(void);
/* DT_SHARED_SYSTEM_CLOCK.default_create */
extern T0* T151c2(void);
/* ET_SYSTEM.error_handler */
extern T0* T53f35(T0* C);
/* ET_SYSTEM.activate_dynamic_type_set_builder */
extern void T53f53(T0* C);
/* ET_LACE_UNIVERSE.activate_processors */
extern void T51f155(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_mode */
extern void T276f14(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make */
extern T0* T276c13(T0* a1);
/* ET_SUPPLIER_BUILDER.set */
extern void T952f7(T0* C, T0* a1, T0* a2);
/* ET_SUPPLIER_BUILDER.make */
extern T0* T952c6(T0* a1);
/* ET_SUPPLIER_BUILDER.dummy_suppliers */
extern unsigned char ge900os24156;
extern T0* ge900ov24156;
extern T0* T952f4(T0* C);
/* ET_FEATURE_CHECKER.make */
extern T0* T951c33(T0* a1);
/* ET_FEATURE_CHECKER.free_context */
extern void T951f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.reset */
extern void T244f34(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.wipe_out */
extern void T244f36(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].force_last */
extern void T243f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].resize */
extern void T243f15(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].resize */
extern T0* T876f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].resized_area */
extern T0* T875f3(T0* C, T6 a1);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].copy_data */
extern void T875f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].move_data */
extern void T875f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].overlapping_move */
extern void T875f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].non_overlapping_move */
extern void T875f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T875c4(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_capacity */
extern T6 T243f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].extendible */
extern T1 T243f9(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.new_context */
extern T0* T951f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].remove_last */
extern void T243f14(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].move_last_cursors_after */
extern void T243f16(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_next_cursor */
extern void T877f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].set_position */
extern void T877f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].last */
extern T0* T243f2(T0* C);
/* ET_NESTED_TYPE_CONTEXT.make_with_capacity */
extern T0* T244c33(T0* a1, T6 a2);
/* ET_NESTED_TYPE_CONTEXT.make_ast_list_with_capacity */
extern void T244f35(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE].make */
extern T0* T678f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE].make_area */
extern T0* T1096c2(T6 a1);
/* SPECIAL [ET_TYPE].make */
extern T0* T606c4(T6 a1);
/* ET_NESTED_TYPE_CONTEXT.fixed_array */
extern unsigned char ge865os15099;
extern T0* ge865ov15099;
extern T0* T244f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].default_create */
extern T0* T678c3(void);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].is_empty */
extern T1 T243f1(T0* C);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T243c12(T6 a1);
/* DS_ARRAYED_LIST [ET_NESTED_TYPE_CONTEXT].new_cursor */
extern T0* T243f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T877c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].make */
extern T0* T876f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_NESTED_TYPE_CONTEXT].make_area */
extern T0* T1149c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_NESTED_TYPE_CONTEXT].default_create */
extern T0* T876c3(void);
/* DS_ARRAYED_LIST [ET_FEATURE].make */
extern T0* T242c13(T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_cursor */
extern T0* T242f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].make */
extern T0* T874c4(T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T241c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_cursor */
extern T0* T241f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T873c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T871f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make_area */
extern T0* T1148c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].make */
extern T0* T872c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].default_create */
extern T0* T871c3(void);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T239c12(T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_cursor */
extern T0* T239f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T869c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T867f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make_area */
extern T0* T1147c2(T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].make */
extern T0* T868c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].default_create */
extern T0* T867c3(void);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].make */
extern T0* T237c13(T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_cursor */
extern T0* T237f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].make */
extern T0* T865c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].make */
extern T0* T800f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INLINE_AGENT].make_area */
extern T0* T1133c2(T6 a1);
/* SPECIAL [ET_INLINE_AGENT].make */
extern T0* T778c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].default_create */
extern T0* T800c3(void);
/* ET_FEATURE_CHECKER.dummy_feature */
extern unsigned char ge884os8124;
extern T0* ge884ov8124;
extern T0* T951f6(T0* C);
/* ET_IMPLEMENTATION_CHECKER.make_class_processor */
extern void T276f17(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.unknown_class */
extern T0* T276f9(T0* C);
/* ET_INTERFACE_CHECKER.make */
extern T0* T275c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern T0* T950c6(T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].make */
extern T0* T1190c18(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_cursor */
extern T0* T1190f10(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].make */
extern T0* T1294c7(T0* a1);
/* ET_PARENT_CHECKER3.make */
extern void T950f6p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.make */
extern void T275f7p1(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.unknown_class */
extern T0* T275f4(T0* C);
/* ET_FEATURE_FLATTENER.make */
extern T0* T274c26(T0* a1);
/* ET_PRECURSOR_CHECKER.make */
extern T0* T949c7(T0* a1);
/* ET_PRECURSOR_CHECKER.dummy_feature */
extern unsigned char ge897os24069;
extern T0* ge897ov24069;
extern T0* T949f4(T0* C);
/* ET_REDECLARED_FEATURE.make */
extern T0* T1189c27(T0* a1, T0* a2);
/* ET_PARENT_FEATURE.other_seeds */
extern T0* T1227f2(T0* C);
/* ET_PARENT_FEATURE.first_seed */
extern T6 T1227f1(T0* C);
/* ET_PARENT_FEATURE.make */
extern T0* T1227c22(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern T0* T948c6(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.make */
extern void T948f6p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.make */
extern T0* T947c6(T0* a1);
/* ET_PARENT_CHECKER2.make */
extern void T947f6p1(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.make */
extern T0* T946c6(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern T0* T945c6(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make_default */
extern T0* T1188c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].make */
extern void T1188f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].make */
extern T0* T1192c12(T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].new_cursor */
extern T0* T1192f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].make */
extern T0* T1300c4(T0* a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].make */
extern T0* T1299f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKABLE [INTEGER]].make_area */
extern T0* T1385c2(T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].make */
extern T0* T1298c5(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].default_create */
extern T0* T1299c3(void);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_map */
extern T0* T1293c35(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_with_equality_testers */
extern void T1293f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1381c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1381f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1409c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1293f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].make */
extern T0* T1383c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_sparse_container */
extern void T1293f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].unset_found_item */
extern void T1293f41(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_slots */
extern void T1293f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].special_integer_ */
extern T0* T1293f26(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].new_modulus */
extern T6 T1293f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_clashes */
extern void T1293f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_key_storage */
extern void T1293f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].make */
extern T0* T1367f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_IDENTIFIER].make_area */
extern T0* T1404c2(T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].make */
extern T0* T1366c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].default_create */
extern T0* T1367c3(void);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].make_item_storage */
extern void T1293f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].make */
extern T0* T1252c14(T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].new_cursor */
extern T0* T1252f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].make */
extern T0* T1368c7(T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.make */
extern void T945f6p1(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern T0* T944c6(T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.make */
extern void T944f6p1(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T943c16(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_key_equality_tester */
extern void T1187f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].internal_set_equality_tester */
extern void T1288f6(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_map */
extern T0* T1187c35(T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_with_equality_testers */
extern void T1187f40(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1288c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1288f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1378c3(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_cursor */
extern T0* T1187f30(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make */
extern T0* T1290c4(T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_sparse_container */
extern void T1187f53(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].unset_found_item */
extern void T1187f42(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_slots */
extern void T1187f61(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1187f31(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_modulus */
extern T6 T1187f28(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_clashes */
extern void T1187f60(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_key_storage */
extern void T1187f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].make */
extern T0* T1285f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DOTNET_FEATURE].make_area */
extern T0* T1377c2(T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].make */
extern T0* T1283c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].default_create */
extern T0* T1285c3(void);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].make_item_storage */
extern void T1187f58(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1291f2(T0* C, T6 a1);
/* TO_SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make_area */
extern T0* T1379c2(T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].make */
extern T0* T1286c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].default_create */
extern T0* T1291c3(void);
/* DS_HASH_SET [ET_DOTNET_FEATURE].set_equality_tester */
extern void T1185f33(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.make */
extern T0* T1184c3(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make */
extern T0* T1185c32(T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1185f14(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1284c4(T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].unset_found_item */
extern void T1185f42(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_slots */
extern void T1185f41(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].special_integer_ */
extern T0* T1185f26(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_modulus */
extern T6 T1185f9(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_clashes */
extern void T1185f40(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_key_storage */
extern void T1185f39(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].make_item_storage */
extern void T1185f38(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.make */
extern T0* T942c21(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_map */
extern T0* T1183c44(T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_with_equality_testers */
extern void T1183f51(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1280c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_REPLICABLE_FEATURE, INTEGER].new_cursor */
extern T0* T1280f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1375c3(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_cursor */
extern T0* T1183f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].make */
extern T0* T1277c4(T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_sparse_container */
extern void T1183f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].unset_found_item */
extern void T1183f55(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_slots */
extern void T1183f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].special_integer_ */
extern T0* T1183f41(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_modulus */
extern T6 T1183f39(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_clashes */
extern void T1183f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_key_storage */
extern void T1183f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].make_item_storage */
extern void T1183f73(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].make */
extern T0* T1282f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_REPLICABLE_FEATURE].make_area */
extern T0* T1376c2(T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].make */
extern T0* T1278c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].default_create */
extern T0* T1282c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1182f45(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1275f6(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_map */
extern T0* T1182c44(T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1182f53(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1275c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1275f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1374c3(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_cursor */
extern T0* T1182f43(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].make */
extern T0* T1274c4(T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_sparse_container */
extern void T1182f71(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].unset_found_item */
extern void T1182f59(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_slots */
extern void T1182f77(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].special_integer_ */
extern T0* T1182f40(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].new_modulus */
extern T6 T1182f25(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_clashes */
extern void T1182f76(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_key_storage */
extern void T1182f75(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].make */
extern T0* T641f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME].make_area */
extern T0* T1081c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME].make */
extern T0* T570c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].default_create */
extern T0* T641c3(void);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].make_item_storage */
extern void T1182f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].set_equality_tester */
extern void T1181f39(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make */
extern T0* T1181c38(T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].new_cursor */
extern T0* T1181f21(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].make */
extern T0* T1273c4(T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].unset_found_item */
extern void T1181f51(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].make_slots */
extern void T1181f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].special_integer_ */
extern T0* T1181f31(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].new_modulus */
extern T6 T1181f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_clashes */
extern void T1181f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_key_storage */
extern void T1181f48(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].make_item_storage */
extern void T1181f47(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].set_key_equality_tester */
extern void T1180f42(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1270f6(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.feature_name_tester */
extern unsigned char ge827os6016;
extern T0* ge827ov6016;
extern T0* T942f4(T0* C);
/* ET_FEATURE_NAME_TESTER.default_create */
extern T0* T935c2(void);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_map */
extern T0* T1180c41(T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_with_equality_testers */
extern void T1180f50(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1270c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1270f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1372c3(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_cursor */
extern T0* T1180f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].make */
extern T0* T1267c4(T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_sparse_container */
extern void T1180f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].unset_found_item */
extern void T1180f53(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_slots */
extern void T1180f77(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].special_integer_ */
extern T0* T1180f37(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].new_modulus */
extern T6 T1180f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_clashes */
extern void T1180f76(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_key_storage */
extern void T1180f75(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].make_item_storage */
extern void T1180f74(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].make */
extern T0* T1272f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME].make_area */
extern T0* T1373c2(T6 a1);
/* SPECIAL [ET_RENAME].make */
extern T0* T1268c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].default_create */
extern T0* T1272c3(void);
/* DS_HASH_SET [ET_CLASS_NAME].set_equality_tester */
extern void T941f40(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.class_name_tester */
extern unsigned char ge826os2689;
extern T0* ge826ov2689;
extern T0* T274f9(T0* C);
/* ET_CLASS_NAME_TESTER.default_create */
extern T0* T271c2(void);
/* DS_HASH_SET [ET_CLASS_NAME].make */
extern T0* T941c39(T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_cursor */
extern T0* T941f9(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].make */
extern T0* T1179c4(T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].unset_found_item */
extern void T941f45(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].make_slots */
extern void T941f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].special_integer_ */
extern T0* T941f14(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].new_modulus */
extern T6 T941f3(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_clashes */
extern void T941f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_key_storage */
extern void T941f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].make_item_storage */
extern void T941f41(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].make */
extern T0* T392f2(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME].make_area */
extern T0* T1003c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME].default_create */
extern T0* T392c3(void);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].make */
extern T0* T940c13(T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_cursor */
extern T0* T940f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].make */
extern T0* T1178c4(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].make */
extern T0* T1176f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLASS_NAME_LIST].make_area */
extern T0* T1266c2(T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].make */
extern T0* T1177c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].default_create */
extern T0* T1176c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_key_equality_tester */
extern void T937f36(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].internal_set_equality_tester */
extern void T1173f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.alias_name_tester */
extern unsigned char ge825os17983;
extern T0* ge825ov17983;
extern T0* T274f6(T0* C);
/* ET_ALIAS_NAME_TESTER.default_create */
extern T0* T938c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_map */
extern T0* T937c35(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_with_equality_testers */
extern void T937f37(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1173c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T1173f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1265c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_cursor */
extern T0* T937f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make */
extern T0* T1175c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_sparse_container */
extern void T937f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].unset_found_item */
extern void T937f43(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_slots */
extern void T937f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].special_integer_ */
extern T0* T937f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_modulus */
extern T6 T937f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_clashes */
extern void T937f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_key_storage */
extern void T937f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].make */
extern T0* T650f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ALIAS_NAME].make_area */
extern T0* T1083c2(T6 a1);
/* SPECIAL [ET_ALIAS_NAME].make */
extern T0* T648c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].default_create */
extern T0* T650c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].make_item_storage */
extern void T937f39(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].make */
extern T0* T1170f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FLATTENED_FEATURE].make_area */
extern T0* T1264c2(T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].make */
extern T0* T1172c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].default_create */
extern T0* T1170c3(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_key_equality_tester */
extern void T934f46(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].internal_set_equality_tester */
extern void T1167f6(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.feature_name_tester */
extern T0* T274f2(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_map */
extern T0* T934c45(T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_with_equality_testers */
extern void T934f47(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1167c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T1167f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1263c3(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_cursor */
extern T0* T934f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make */
extern T0* T1169c4(T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_sparse_container */
extern void T934f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].unset_found_item */
extern void T934f53(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_slots */
extern void T934f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].special_integer_ */
extern T0* T934f18(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_modulus */
extern T6 T934f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_clashes */
extern void T934f51(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_key_storage */
extern void T934f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].make_item_storage */
extern void T934f49(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.make */
extern void T274f26p1(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.unknown_class */
extern T0* T274f20(T0* C);
/* ET_ANCESTOR_BUILDER.make */
extern T0* T278c11(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern T0* T956c8(T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make_default */
extern T0* T1197c11(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].make */
extern void T1197f14(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_map */
extern T0* T1303c35(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_with_equality_testers */
extern void T1303f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1388c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1388f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1411c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1303f30(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].make */
extern T0* T1390c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_sparse_container */
extern void T1303f55(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].unset_found_item */
extern void T1303f41(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_slots */
extern void T1303f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].special_integer_ */
extern T0* T1303f26(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].new_modulus */
extern T6 T1303f6(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_clashes */
extern void T1303f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_key_storage */
extern void T1303f57(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].make */
extern T0* T534f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER].make_area */
extern T0* T1045c2(T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].make */
extern T0* T529c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].default_create */
extern T0* T534c3(void);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].make_item_storage */
extern void T1303f56(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].make */
extern T0* T1256c15(T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].new_cursor */
extern T0* T1256f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].make */
extern T0* T1369c7(T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.make */
extern void T956f8p1(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.make */
extern T0* T955c6(T0* a1);
/* ET_PARENT_CHECKER1.make */
extern void T955f6p1(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_map */
extern T0* T954c40(T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_with_equality_testers */
extern void T954f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER].make */
extern T0* T1194c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_BASE_TYPE, INTEGER].new_cursor */
extern T0* T1194f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_BASE_TYPE, INTEGER].make */
extern T0* T1302c3(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_cursor */
extern T0* T954f12(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].make */
extern T0* T1196c6(T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_sparse_container */
extern void T954f42(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].unset_found_item */
extern void T954f47(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_slots */
extern void T954f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].special_integer_ */
extern T0* T954f18(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_modulus */
extern T6 T954f6(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_clashes */
extern void T954f45(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_key_storage */
extern void T954f44(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].make_item_storage */
extern void T954f43(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make_default */
extern T0* T953c12(void);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].make */
extern void T953f13(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_map */
extern T0* T1191c36(T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_with_equality_testers */
extern void T1191f41(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS].make */
extern T0* T1295c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [INTEGER, ET_CLASS].new_cursor */
extern T0* T1295f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [INTEGER, ET_CLASS].make */
extern T0* T1384c3(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].new_cursor */
extern T0* T1191f31(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].make */
extern T0* T1297c4(T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_sparse_container */
extern void T1191f56(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].unset_found_item */
extern void T1191f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_slots */
extern void T1191f60(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].special_integer_ */
extern T0* T1191f28(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].new_modulus */
extern T6 T1191f7(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_clashes */
extern void T1191f59(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_key_storage */
extern void T1191f58(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].make_item_storage */
extern void T1191f57(T0* C, T6 a1);
/* ET_ANCESTOR_BUILDER.make */
extern void T278f11p1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.unknown_class */
extern T0* T278f8(T0* C);
/* ET_PROVIDER_CHECKER.make */
extern T0* T277c4(T0* a1);
/* ET_PROVIDER_CHECKER.make */
extern void T277f4p1(T0* C, T0* a1);
/* ET_PROVIDER_CHECKER.unknown_class */
extern T0* T277f3(T0* C);
/* ET_XACE_UNIVERSE.activate_processors */
extern void T48f159(T0* C);
/* ET_SYSTEM.compile_all */
extern void T53f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].forth */
extern void T140f8(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_forth */
extern void T141f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].add_traversing_cursor */
extern void T141f71(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_next_cursor */
extern void T140f10(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_traversing_cursor */
extern void T141f70(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].set_position */
extern void T140f9(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.item */
extern T0* T148f7(T0* C, T6 a1);
/* ET_QUERY_LIST.item */
extern T0* T146f7(T0* C, T6 a1);
/* ET_CLASS.is_deferred */
extern T1 T55f72(T0* C);
/* ET_CLASS.has_deferred_mark */
extern T1 T55f77(T0* C);
/* ET_KEYWORD.is_deferred */
extern T1 T166f13(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].item */
extern T0* T140f2(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_item */
extern T0* T141f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].after */
extern T1 T140f1(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_after */
extern T1 T141f34(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].start */
extern void T140f7(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_start */
extern void T141f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].cursor_off */
extern T1 T141f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].is_empty */
extern T1 T141f38(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T141f1(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T140c6(T0* a1);
/* ET_LACE_UNIVERSE.compile_degree_3 */
extern void T51f159(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_suppliers_enabled */
extern void T276f16(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.set_flat_dbc_mode */
extern void T276f15(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.compile_degree_3 */
extern void T48f163(T0* C);
/* ET_LACE_UNIVERSE.compile_degree_4 */
extern void T51f158(T0* C);
/* KL_STDOUT_FILE.put_integer */
extern void T73f12(T0* C, T6 a1);
/* KL_STDOUT_FILE.put_character */
extern void T73f16(T0* C, T2 a1);
/* KL_STDOUT_FILE.old_put_character */
extern void T73f20(T0* C, T2 a1);
/* KL_STDOUT_FILE.console_pc */
extern void T73f21(T0* C, T14 a1, T2 a2);
/* ET_XACE_UNIVERSE.compile_degree_4 */
extern void T48f162(T0* C);
/* ET_LACE_UNIVERSE.parse_all */
extern void T51f156(T0* C);
/* ET_EIFFEL_PARSER.parse_clusters */
extern void T158f907(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_cluster */
extern void T158f911(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_dependant_constraint */
extern void T158f917(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.build_provider_constraint */
extern void T158f916(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.parse_file */
extern void T158f915(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_EIFFEL_PARSER.yyparse */
extern void T158f920(T0* C);
/* ET_EIFFEL_PARSER.yy_pop_last_value */
extern void T158f932(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_push_error_value */
extern void T158f931(T0* C);
/* KL_SPECIAL_ROUTINES [ANY].resize */
extern T0* T118f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ANY].resized_area */
extern T0* T117f2(T0* C, T6 a1);
/* SPECIAL [ANY].copy_data */
extern void T117f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ANY].move_data */
extern void T117f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].overlapping_move */
extern void T117f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].non_overlapping_move */
extern void T117f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ANY].make */
extern T0* T117c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].make */
extern T0* T118f1(T0* C, T6 a1);
/* TO_SPECIAL [ANY].make_area */
extern T0* T377c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ANY].default_create */
extern T0* T118c3(void);
/* ET_EIFFEL_PARSER.yy_do_action */
extern void T158f930(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_601_800 */
extern void T158f949(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_748 */
extern void T158f1713(T0* C);
/* ET_EIFFEL_PARSER.add_counter */
extern void T158f1722(T0* C);
/* DS_ARRAYED_STACK [INTEGER].force */
extern void T398f11(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].resize */
extern void T398f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].new_capacity */
extern T6 T398f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].extendible */
extern T1 T398f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_747 */
extern void T158f1712(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_746 */
extern void T158f1711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_745 */
extern void T158f1710(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_744 */
extern void T158f1709(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_cast_type */
extern void T486f36(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_cast_type */
extern void T485f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_target_type */
extern T0* T248f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_743 */
extern void T158f1708(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.set_sign */
extern void T486f35(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_sign */
extern void T485f35(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_742 */
extern void T158f1707(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_741 */
extern void T158f1706(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_740 */
extern void T158f1705(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_739 */
extern void T158f1704(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_738 */
extern void T158f1703(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_737 */
extern void T158f1702(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_736 */
extern void T158f1701(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_735 */
extern void T158f1700(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_734 */
extern void T158f1699(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_733 */
extern void T158f1698(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_732 */
extern void T158f1697(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_731 */
extern void T158f1696(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_730 */
extern void T158f1695(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_729 */
extern void T158f1694(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_728 */
extern void T158f1693(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].resize */
extern T0* T441f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHARACTER_CONSTANT].resized_area */
extern T0* T440f2(T0* C, T6 a1);
/* SPECIAL [ET_CHARACTER_CONSTANT].copy_data */
extern void T440f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHARACTER_CONSTANT].move_data */
extern void T440f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].overlapping_move */
extern void T440f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].non_overlapping_move */
extern void T440f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHARACTER_CONSTANT].make */
extern T0* T440c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].make */
extern T0* T441f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHARACTER_CONSTANT].make_area */
extern T0* T1023c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHARACTER_CONSTANT].default_create */
extern T0* T441c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_727 */
extern void T158f1692(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_726 */
extern void T158f1691(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].resize */
extern T0* T454f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING].resized_area */
extern T0* T453f2(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING].copy_data */
extern void T453f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING].move_data */
extern void T453f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].overlapping_move */
extern void T453f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].non_overlapping_move */
extern void T453f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING].make */
extern T0* T453c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].make */
extern T0* T454f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING].make_area */
extern T0* T1028c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING].default_create */
extern T0* T454c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_725 */
extern void T158f1690(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_724 */
extern void T158f1689(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_723 */
extern void T158f1688(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_722 */
extern void T158f1687(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_721 */
extern void T158f1686(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_720 */
extern void T158f1685(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_719 */
extern void T158f1684(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_718 */
extern void T158f1683(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_717 */
extern void T158f1682(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_716 */
extern void T158f1681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_715 */
extern void T158f1680(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_714 */
extern void T158f1679(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_713 */
extern void T158f1678(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_712 */
extern void T158f1677(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_711 */
extern void T158f1676(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_710 */
extern void T158f1675(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_709 */
extern void T158f1674(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_708 */
extern void T158f1673(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_707 */
extern void T158f1672(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_706 */
extern void T158f1671(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_705 */
extern void T158f1670(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_704 */
extern void T158f1669(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_703 */
extern void T158f1668(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].resize */
extern T0* T812f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].resized_area */
extern T0* T808f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].copy_data */
extern void T808f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].move_data */
extern void T808f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].overlapping_move */
extern void T808f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].non_overlapping_move */
extern void T808f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T808c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].make */
extern T0* T812f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND].make_area */
extern T0* T1137c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND].default_create */
extern T0* T812c3(void);
/* ET_AST_FACTORY.new_agent_typed_open_argument */
extern T0* T248f310(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.make */
extern T0* T813c9(T0* a1);
/* ET_TOKEN_CONSTANTS.question_mark_symbol */
extern unsigned char ge781os12583;
extern T0* ge781ov12583;
extern T0* T157f742(T0* C);
/* ET_QUESTION_MARK_SYMBOL.make */
extern T0* T475c11(void);
/* ET_QUESTION_MARK_SYMBOL.make_leaf */
extern void T475f13(T0* C);
/* ET_QUESTION_MARK_SYMBOL.tokens */
extern T0* T475f2(T0* C);
/* ET_TOKEN_CONSTANTS.right_brace_symbol */
extern unsigned char ge781os12585;
extern T0* ge781ov12585;
extern T0* T157f569(T0* C);
/* ET_SYMBOL.make_right_brace */
extern T0* T425c66(void);
/* ET_TOKEN_CONSTANTS.left_brace_symbol */
extern unsigned char ge781os12580;
extern T0* ge781ov12580;
extern T0* T157f568(T0* C);
/* ET_SYMBOL.make_left_brace */
extern T0* T425c65(void);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.tokens */
extern T0* T813f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_702 */
extern void T158f1667(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_701 */
extern void T158f1666(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_700 */
extern void T158f1665(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].resize */
extern T0* T811f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].resized_area */
extern T0* T810f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].copy_data */
extern void T810f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].move_data */
extern void T810f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].overlapping_move */
extern void T810f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].non_overlapping_move */
extern void T810f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T810c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].make */
extern T0* T811f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].make_area */
extern T0* T1136c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_ITEM].default_create */
extern T0* T811c3(void);
/* ET_EIFFEL_PARSER.increment_counter */
extern void T158f1723(T0* C);
/* DS_ARRAYED_STACK [INTEGER].replace */
extern void T398f12(T0* C, T6 a1);
/* DS_ARRAYED_STACK [INTEGER].item */
extern T6 T398f1(T0* C);
/* ET_AST_FACTORY.new_agent_argument_operand_comma */
extern T0* T248f309(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_699 */
extern void T158f1664(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put_first */
extern void T794f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_698 */
extern void T158f1663(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].resize */
extern T0* T807f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].resized_area */
extern T0* T795f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].copy_data */
extern void T795f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].move_data */
extern void T795f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].overlapping_move */
extern void T795f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].non_overlapping_move */
extern void T795f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T795c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].make */
extern T0* T807f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].make_area */
extern T0* T1135c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_ARGUMENT_OPERAND_LIST].default_create */
extern T0* T807c3(void);
/* ET_AST_FACTORY.new_agent_argument_operands */
extern T0* T248f308(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern T0* T794c11(T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.make_with_capacity */
extern void T794f11p1(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.fixed_array */
extern unsigned char ge514os6093;
extern T0* ge514ov6093;
extern T0* T794f6(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.tokens */
extern T0* T794f2(T0* C);
/* ET_EIFFEL_PARSER.counter_value */
extern T6 T158f564(T0* C);
/* ET_EIFFEL_PARSER.last_symbol */
extern T0* T158f585(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].item */
extern T0* T402f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_697 */
extern void T158f1662(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_696 */
extern void T158f1661(T0* C);
/* ET_EIFFEL_PARSER.add_symbol */
extern void T158f1726(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].force */
extern void T402f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].resize */
extern void T402f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL].resize */
extern T0* T427f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL].resized_area */
extern T0* T426f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL].copy_data */
extern void T426f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL].move_data */
extern void T426f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].overlapping_move */
extern void T426f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL].non_overlapping_move */
extern void T426f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_SYMBOL].new_capacity */
extern T6 T402f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_SYMBOL].extendible */
extern T1 T402f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_695 */
extern void T158f1660(T0* C);
/* ET_EIFFEL_PARSER.remove_counter */
extern void T158f1720(T0* C);
/* DS_ARRAYED_STACK [INTEGER].remove */
extern void T398f10(T0* C);
/* ET_EIFFEL_PARSER.remove_symbol */
extern void T158f1725(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].remove */
extern void T402f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_694 */
extern void T158f1659(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_693 */
extern void T158f1658(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_692 */
extern void T158f1657(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].resize */
extern T0* T806f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_TARGET].resized_area */
extern T0* T797f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_TARGET].copy_data */
extern void T797f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_TARGET].move_data */
extern void T797f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].overlapping_move */
extern void T797f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].non_overlapping_move */
extern void T797f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_TARGET].make */
extern T0* T797c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].make */
extern T0* T806f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_TARGET].make_area */
extern T0* T1134c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_TARGET].default_create */
extern T0* T806c3(void);
/* ET_AST_FACTORY.new_agent_open_target */
extern T0* T248f301(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AGENT_OPEN_TARGET.make */
extern T0* T798c8(T0* a1);
/* ET_AGENT_OPEN_TARGET.tokens */
extern T0* T798f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_691 */
extern void T158f1656(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_690 */
extern void T158f1655(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_689 */
extern void T158f1654(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_688 */
extern void T158f1653(T0* C);
/* ET_EIFFEL_PARSER.new_agent_identifier_target */
extern T0* T158f846(T0* C, T0* a1);
/* ET_IDENTIFIER.set_local */
extern void T119f106(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.index_of */
extern T6 T623f6(T0* C, T0* a1);
/* ET_IDENTIFIER.same_identifier */
extern T1 T119f34(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.name */
extern T0* T921f5(T0* C);
/* ET_LOCAL_VARIABLE.name */
extern T0* T662f5(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.local_variable */
extern T0* T921f3(T0* C);
/* ET_LOCAL_VARIABLE.local_variable */
extern T0* T662f3(T0* C);
/* ET_EIFFEL_PARSER.last_local_variables */
extern T0* T158f880(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].item */
extern T0* T400f2(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].is_empty */
extern T1 T400f1(T0* C);
/* ET_IDENTIFIER.set_argument */
extern void T119f105(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT_LIST.index_of */
extern T6 T209f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.last_formal_arguments */
extern T0* T158f879(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].item */
extern T0* T399f2(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].is_empty */
extern T1 T399f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_687 */
extern void T158f1652(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INLINE_AGENT].resize */
extern T0* T800f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INLINE_AGENT].resized_area */
extern T0* T778f3(T0* C, T6 a1);
/* SPECIAL [ET_INLINE_AGENT].copy_data */
extern void T778f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INLINE_AGENT].move_data */
extern void T778f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].overlapping_move */
extern void T778f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INLINE_AGENT].non_overlapping_move */
extern void T778f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].remove */
extern void T399f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_686 */
extern void T158f1651(T0* C);
/* ET_AST_FACTORY.new_external_procedure_inline_agent */
extern T0* T248f307(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T805f33(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_alias_clause */
extern void T805f32(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T805f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T805f30(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make */
extern T0* T805c29(T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_procedure */
extern void T805f34(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T805f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T805f35(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.make */
extern T0* T1123c5(T0* a1);
/* ET_TOKEN_CONSTANTS.agent_keyword */
extern unsigned char ge781os12591;
extern T0* ge781ov12591;
extern T0* T157f739(T0* C);
/* ET_AGENT_KEYWORD.make */
extern T0* T419c13(void);
/* ET_AGENT_KEYWORD.make_token */
extern void T419f15(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.make_leaf */
extern void T419f16(T0* C);
/* ET_AGENT_KEYWORD.tokens */
extern T0* T419f2(T0* C);
/* ET_AST_FACTORY.new_external_language */
extern T0* T248f168(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_685 */
extern void T158f1650(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_684 */
extern void T158f1649(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].remove */
extern void T400f12(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_683 */
extern void T158f1648(T0* C);
/* ET_AST_FACTORY.new_once_procedure_inline_agent */
extern T0* T248f306(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T804f35(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T804f34(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_compound */
extern void T804f33(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_locals */
extern void T804f32(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T804f31(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T804f30(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make */
extern T0* T804c29(T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T804f3(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T804f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_682 */
extern void T158f1647(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_681 */
extern void T158f1646(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_680 */
extern void T158f1645(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_679 */
extern void T158f1644(T0* C);
/* ET_AST_FACTORY.new_do_procedure_inline_agent */
extern T0* T248f305(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_rescue_clause */
extern void T803f35(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_postconditions */
extern void T803f34(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_compound */
extern void T803f33(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_locals */
extern void T803f32(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_preconditions */
extern void T803f31(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_agent_keyword */
extern void T803f30(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.make */
extern T0* T803c29(T0* a1, T0* a2);
/* ET_DO_PROCEDURE_INLINE_AGENT.tokens */
extern T0* T803f3(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.make_inline_agent */
extern void T803f36(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_678 */
extern void T158f1643(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_677 */
extern void T158f1642(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_676 */
extern void T158f1641(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_675 */
extern void T158f1640(T0* C);
/* ET_AST_FACTORY.new_external_function_inline_agent */
extern T0* T248f304(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T802f34(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_alias_clause */
extern void T802f33(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T802f32(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T802f31(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make */
extern T0* T802c30(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_function */
extern void T802f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.tokens */
extern T0* T802f9(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T802f36(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_type */
extern T0* T248f161(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_674 */
extern void T158f1639(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_673 */
extern void T158f1638(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_672 */
extern void T158f1637(T0* C);
/* ET_AST_FACTORY.new_once_function_inline_agent */
extern T0* T248f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T801f36(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T801f35(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_compound */
extern void T801f34(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_locals */
extern void T801f33(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T801f32(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T801f31(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make */
extern T0* T801c30(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_FUNCTION_INLINE_AGENT.tokens */
extern T0* T801f4(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T801f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_671 */
extern void T158f1636(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_670 */
extern void T158f1635(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_669 */
extern void T158f1634(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_668 */
extern void T158f1633(T0* C);
/* ET_AST_FACTORY.new_do_function_inline_agent */
extern T0* T248f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10);
/* ET_DO_FUNCTION_INLINE_AGENT.set_rescue_clause */
extern void T799f36(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_postconditions */
extern void T799f35(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_compound */
extern void T799f34(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_locals */
extern void T799f33(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_preconditions */
extern void T799f32(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_agent_keyword */
extern void T799f31(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.make */
extern T0* T799c30(T0* a1, T0* a2, T0* a3);
/* ET_DO_FUNCTION_INLINE_AGENT.tokens */
extern T0* T799f4(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.make_inline_agent */
extern void T799f37(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_667 */
extern void T158f1632(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_666 */
extern void T158f1631(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_665 */
extern void T158f1630(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].resize */
extern T0* T796f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_AGENT].resized_area */
extern T0* T776f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_AGENT].copy_data */
extern void T776f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_AGENT].move_data */
extern void T776f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].overlapping_move */
extern void T776f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].non_overlapping_move */
extern void T776f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_AGENT].make */
extern T0* T776c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].make */
extern T0* T796f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_AGENT].make_area */
extern T0* T1132c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_AGENT].default_create */
extern T0* T796c3(void);
/* ET_AST_FACTORY.new_call_agent */
extern T0* T248f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_agent_keyword */
extern void T775f26(T0* C, T0* a1);
/* ET_CALL_AGENT.make */
extern T0* T775c25(T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.tokens */
extern T0* T775f2(T0* C);
/* ET_CALL_AGENT.make_unqualified */
extern T0* T775c24(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_664 */
extern void T158f1629(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_663 */
extern void T158f1628(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_662 */
extern void T158f1627(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_661 */
extern void T158f1626(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_660 */
extern void T158f1625(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_659 */
extern void T158f1624(T0* C);
/* ET_AST_FACTORY.new_dot_feature_name */
extern T0* T248f251(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_658 */
extern void T158f1623(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_657 */
extern void T158f1622(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_656 */
extern void T158f1621(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_655 */
extern void T158f1620(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_654 */
extern void T158f1619(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_653 */
extern void T158f1618(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_652 */
extern void T158f1617(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_651 */
extern void T158f1616(T0* C);
/* ET_STRIP_EXPRESSION.put_first */
extern void T782f23(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_650 */
extern void T158f1615(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].resize */
extern T0* T792f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STRIP_EXPRESSION].resized_area */
extern T0* T783f3(T0* C, T6 a1);
/* SPECIAL [ET_STRIP_EXPRESSION].copy_data */
extern void T783f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STRIP_EXPRESSION].move_data */
extern void T783f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].overlapping_move */
extern void T783f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].non_overlapping_move */
extern void T783f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STRIP_EXPRESSION].make */
extern T0* T783c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].make */
extern T0* T792f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STRIP_EXPRESSION].make_area */
extern T0* T1129c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STRIP_EXPRESSION].default_create */
extern T0* T792c3(void);
/* ET_AST_FACTORY.new_strip_expression */
extern T0* T248f299(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_STRIP_EXPRESSION.set_strip_keyword */
extern void T782f24(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern T0* T782c22(T6 a1);
/* ET_STRIP_EXPRESSION.make_with_capacity */
extern void T782f22p1(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].make */
extern T0* T589f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_NAME_ITEM].make_area */
extern T0* T1063c2(T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].make */
extern T0* T541c4(T6 a1);
/* ET_STRIP_EXPRESSION.fixed_array */
extern unsigned char ge804os6093;
extern T0* ge804ov6093;
extern T0* T782f7(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].default_create */
extern T0* T589c3(void);
/* ET_TOKEN_CONSTANTS.strip_keyword */
extern unsigned char ge781os12642;
extern T0* ge781ov12642;
extern T0* T157f741(T0* C);
/* ET_KEYWORD.make_strip */
extern T0* T166c31(void);
/* ET_STRIP_EXPRESSION.tokens */
extern T0* T782f2(T0* C);
/* ET_EIFFEL_PARSER.last_keyword */
extern T0* T158f563(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].item */
extern T0* T401f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_649 */
extern void T158f1614(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_648 */
extern void T158f1613(T0* C);
/* ET_EIFFEL_PARSER.add_keyword */
extern void T158f1721(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].force */
extern void T401f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].resize */
extern void T401f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD].resize */
extern T0* T418f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD].resized_area */
extern T0* T417f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD].copy_data */
extern void T417f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD].move_data */
extern void T417f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].overlapping_move */
extern void T417f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD].non_overlapping_move */
extern void T417f9(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_STACK [ET_KEYWORD].new_capacity */
extern T6 T401f7(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_KEYWORD].extendible */
extern T1 T401f6(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_647 */
extern void T158f1612(T0* C);
/* ET_EIFFEL_PARSER.remove_keyword */
extern void T158f1719(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].remove */
extern void T401f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_646 */
extern void T158f1611(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_645 */
extern void T158f1610(T0* C);
/* ET_MANIFEST_TUPLE.put_first */
extern void T523f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_644 */
extern void T158f1609(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].resize */
extern T0* T791f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_TUPLE].resized_area */
extern T0* T524f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_TUPLE].copy_data */
extern void T524f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_TUPLE].move_data */
extern void T524f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].overlapping_move */
extern void T524f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].non_overlapping_move */
extern void T524f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_TUPLE].make */
extern T0* T524c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].make */
extern T0* T791f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_TUPLE].make_area */
extern T0* T1128c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_TUPLE].default_create */
extern T0* T791c3(void);
/* ET_AST_FACTORY.new_manifest_tuple */
extern T0* T248f298(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_TUPLE.set_left_symbol */
extern void T523f23(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern T0* T523c21(T6 a1);
/* ET_MANIFEST_TUPLE.make_with_capacity */
extern void T523f21p1(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.fixed_array */
extern T0* T523f6(T0* C);
/* ET_MANIFEST_TUPLE.tokens */
extern T0* T523f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_643 */
extern void T158f1608(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_642 */
extern void T158f1607(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_641 */
extern void T158f1606(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_640 */
extern void T158f1605(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_639 */
extern void T158f1604(T0* C);
/* ET_MANIFEST_ARRAY.put_first */
extern void T780f22(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_638 */
extern void T158f1603(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].resize */
extern T0* T790f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_ARRAY].resized_area */
extern T0* T781f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_ARRAY].copy_data */
extern void T781f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_ARRAY].move_data */
extern void T781f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].overlapping_move */
extern void T781f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].non_overlapping_move */
extern void T781f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_ARRAY].make */
extern T0* T781c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].make */
extern T0* T790f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_ARRAY].make_area */
extern T0* T1127c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_ARRAY].default_create */
extern T0* T790c3(void);
/* ET_AST_FACTORY.new_manifest_array */
extern T0* T248f297(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_ARRAY.set_left_symbol */
extern void T780f23(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern T0* T780c21(T6 a1);
/* ET_MANIFEST_ARRAY.make_with_capacity */
extern void T780f21p1(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.fixed_array */
extern T0* T780f6(T0* C);
/* ET_TOKEN_CONSTANTS.right_array_symbol */
extern unsigned char ge781os12584;
extern T0* ge781ov12584;
extern T0* T157f571(T0* C);
/* ET_SYMBOL.make_right_array */
extern T0* T425c68(void);
/* ET_TOKEN_CONSTANTS.left_array_symbol */
extern unsigned char ge781os12579;
extern T0* ge781ov12579;
extern T0* T157f740(T0* C);
/* ET_SYMBOL.make_left_array */
extern T0* T425c56(void);
/* ET_MANIFEST_ARRAY.tokens */
extern T0* T780f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_637 */
extern void T158f1602(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_636 */
extern void T158f1601(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_635 */
extern void T158f1600(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_634 */
extern void T158f1599(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_633 */
extern void T158f1598(T0* C);
/* ET_AST_FACTORY.new_manifest_type */
extern T0* T248f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TYPE.make */
extern T0* T789c16(T0* a1);
/* ET_MANIFEST_TYPE.tokens */
extern T0* T789f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_632 */
extern void T158f1597(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].resize */
extern T0* T788f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].resized_area */
extern T0* T759f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].copy_data */
extern void T759f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].move_data */
extern void T759f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].overlapping_move */
extern void T759f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].non_overlapping_move */
extern void T759f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T759c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].make */
extern T0* T788f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENTHESIZED_EXPRESSION].make_area */
extern T0* T1126c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENTHESIZED_EXPRESSION].default_create */
extern T0* T788c3(void);
/* ET_AST_FACTORY.new_parenthesized_expression */
extern T0* T248f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENTHESIZED_EXPRESSION.set_left_parenthesis */
extern void T758f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.make */
extern T0* T758c16(T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.tokens */
extern T0* T758f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_631 */
extern void T158f1596(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.put_first */
extern void T784f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_630 */
extern void T158f1595(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].resize */
extern T0* T787f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].resized_area */
extern T0* T785f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].copy_data */
extern void T785f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].move_data */
extern void T785f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].overlapping_move */
extern void T785f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].non_overlapping_move */
extern void T785f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T785c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].make */
extern T0* T787f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_ARGUMENT_LIST].make_area */
extern T0* T1125c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_ARGUMENT_LIST].default_create */
extern T0* T787c3(void);
/* ET_AST_FACTORY.new_bracket_arguments */
extern T0* T248f294(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern T0* T784c11(T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.tokens */
extern T0* T784f2(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T784f11p1(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.make_with_capacity */
extern void T784f11p0(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.fixed_array */
extern T0* T784f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_629 */
extern void T158f1594(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_628 */
extern void T158f1593(T0* C);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].resize */
extern T0* T786f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_EXPRESSION].resized_area */
extern T0* T695f3(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_EXPRESSION].copy_data */
extern void T695f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_EXPRESSION].move_data */
extern void T695f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].overlapping_move */
extern void T695f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].non_overlapping_move */
extern void T695f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_EXPRESSION].make */
extern T0* T695c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].make */
extern T0* T786f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_EXPRESSION].make_area */
extern T0* T1124c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_EXPRESSION].default_create */
extern T0* T786c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_627 */
extern void T158f1592(T0* C);
/* ET_AST_FACTORY.new_bracket_expression */
extern T0* T248f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACKET_EXPRESSION.make */
extern T0* T694c16(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_626 */
extern void T158f1591(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_625 */
extern void T158f1590(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_624 */
extern void T158f1589(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_623 */
extern void T158f1588(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_622 */
extern void T158f1587(T0* C);
/* ET_AST_FACTORY.new_once_manifest_string */
extern T0* T248f292(T0* C, T0* a1, T0* a2);
/* ET_ONCE_MANIFEST_STRING.set_once_keyword */
extern void T779f16(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.make */
extern T0* T779c15(T0* a1);
/* ET_TOKEN_CONSTANTS.once_keyword */
extern unsigned char ge781os12630;
extern T0* ge781ov12630;
extern T0* T157f615(T0* C);
/* ET_KEYWORD.make_once */
extern T0* T166c26(void);
/* ET_ONCE_MANIFEST_STRING.tokens */
extern T0* T779f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_621 */
extern void T158f1586(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_620 */
extern void T158f1585(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_619 */
extern void T158f1584(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_618 */
extern void T158f1583(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_617 */
extern void T158f1582(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_616 */
extern void T158f1581(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_615 */
extern void T158f1580(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_614 */
extern void T158f1579(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_613 */
extern void T158f1578(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_612 */
extern void T158f1577(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_611 */
extern void T158f1576(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_610 */
extern void T158f1575(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_609 */
extern void T158f1574(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_608 */
extern void T158f1573(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_607 */
extern void T158f1572(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_606 */
extern void T158f1571(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_605 */
extern void T158f1570(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_604 */
extern void T158f1569(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_603 */
extern void T158f1568(T0* C);
/* ET_AST_FACTORY.new_old_expression */
extern T0* T248f291(T0* C, T0* a1, T0* a2);
/* ET_OLD_EXPRESSION.set_old_keyword */
extern void T774f16(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.make */
extern T0* T774c15(T0* a1);
/* ET_TOKEN_CONSTANTS.old_keyword */
extern unsigned char ge781os12629;
extern T0* ge781ov12629;
extern T0* T157f738(T0* C);
/* ET_KEYWORD.make_old */
extern T0* T166c29(void);
/* ET_OLD_EXPRESSION.tokens */
extern T0* T774f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_602 */
extern void T158f1567(T0* C);
/* ET_AST_FACTORY.new_prefix_expression */
extern T0* T248f289(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_EXPRESSION.make */
extern T0* T773c16(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_operator */
extern T0* T248f290(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_prefix */
extern void T444f51(T0* C);
/* ET_FREE_OPERATOR.tokens */
extern T0* T444f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_601 */
extern void T158f1566(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401_600 */
extern void T158f948(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_600 */
extern void T158f1565(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_minus_expression */
extern T0* T158f822(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_minus_operator */
extern T0* T248f331(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_minus */
extern void T463f73(T0* C);
/* ET_SYMBOL_OPERATOR.tokens */
extern T0* T463f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_599 */
extern void T158f1564(T0* C);
/* ET_EIFFEL_PARSER.new_prefix_plus_expression */
extern T0* T158f821(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_plus_operator */
extern T0* T248f330(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_prefix_plus */
extern void T463f72(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_598 */
extern void T158f1563(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_597 */
extern void T158f1562(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_596 */
extern void T158f1561(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_595 */
extern void T158f1560(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_594 */
extern void T158f1559(T0* C);
/* ET_AST_FACTORY.new_equality_expression */
extern T0* T248f288(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EQUALITY_EXPRESSION.make */
extern T0* T772c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_593 */
extern void T158f1558(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_592 */
extern void T158f1557(T0* C);
/* ET_AST_FACTORY.new_infix_expression */
extern T0* T248f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INFIX_EXPRESSION.make */
extern T0* T768c15(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_591 */
extern void T158f1556(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_operator */
extern T0* T248f287(T0* C, T0* a1, T0* a2);
/* ET_INFIX_OR_ELSE_OPERATOR.set_or_keyword */
extern void T771f32(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.make */
extern T0* T771c31(void);
/* ET_TOKEN_CONSTANTS.else_keyword */
extern unsigned char ge781os12608;
extern T0* ge781ov12608;
extern T0* T157f580(T0* C);
/* ET_KEYWORD.make_else */
extern T0* T166c43(void);
/* ET_TOKEN_CONSTANTS.or_keyword */
extern unsigned char ge781os12631;
extern T0* ge781ov12631;
extern T0* T157f737(T0* C);
/* ET_KEYWORD_OPERATOR.make_or */
extern T0* T450c46(void);
/* ET_KEYWORD_OPERATOR.make_token */
extern void T450f52(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_leaf */
extern void T450f53(T0* C);
/* ET_KEYWORD_OPERATOR.tokens */
extern T0* T450f2(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.tokens */
extern T0* T771f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_590 */
extern void T158f1555(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_operator */
extern T0* T248f286(T0* C, T0* a1, T0* a2);
/* ET_INFIX_AND_THEN_OPERATOR.set_and_keyword */
extern void T770f32(T0* C, T0* a1);
/* ET_INFIX_AND_THEN_OPERATOR.make */
extern T0* T770c31(void);
/* ET_TOKEN_CONSTANTS.then_keyword */
extern unsigned char ge781os12643;
extern T0* ge781ov12643;
extern T0* T157f583(T0* C);
/* ET_KEYWORD.make_then */
extern T0* T166c46(void);
/* ET_TOKEN_CONSTANTS.and_keyword */
extern unsigned char ge781os12592;
extern T0* ge781ov12592;
extern T0* T157f736(T0* C);
/* ET_KEYWORD_OPERATOR.make_and */
extern T0* T450c48(void);
/* ET_INFIX_AND_THEN_OPERATOR.tokens */
extern T0* T770f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_589 */
extern void T158f1554(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_588 */
extern void T158f1553(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_587 */
extern void T158f1552(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_586 */
extern void T158f1551(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_585 */
extern void T158f1550(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_584 */
extern void T158f1549(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_583 */
extern void T158f1548(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_582 */
extern void T158f1547(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_581 */
extern void T158f1546(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_580 */
extern void T158f1545(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_579 */
extern void T158f1544(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_578 */
extern void T158f1543(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_577 */
extern void T158f1542(T0* C);
/* ET_AST_FACTORY.new_infix_minus_operator */
extern T0* T248f285(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_minus */
extern void T463f71(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_576 */
extern void T158f1541(T0* C);
/* ET_AST_FACTORY.new_infix_plus_operator */
extern T0* T248f284(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_infix_plus */
extern void T463f70(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_575 */
extern void T158f1540(T0* C);
/* ET_AST_FACTORY.new_infix_free_operator */
extern T0* T248f282(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_infix */
extern void T444f50(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_574 */
extern void T158f1539(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_573 */
extern void T158f1538(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_572 */
extern void T158f1537(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].resize */
extern T0* T767f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WRITABLE].resized_area */
extern T0* T696f3(T0* C, T6 a1);
/* SPECIAL [ET_WRITABLE].copy_data */
extern void T696f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WRITABLE].move_data */
extern void T696f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].overlapping_move */
extern void T696f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].non_overlapping_move */
extern void T696f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WRITABLE].make */
extern T0* T696c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].make */
extern T0* T767f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WRITABLE].make_area */
extern T0* T1122c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WRITABLE].default_create */
extern T0* T767c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_571 */
extern void T158f1536(T0* C);
/* ET_EIFFEL_PARSER.new_writable */
extern T0* T158f818(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.set_used */
extern void T921f9(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE.set_used */
extern void T662f8(T0* C, T1 a1);
/* ET_LOCAL_VARIABLE_LIST.local_variable */
extern T0* T623f7(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.item */
extern T0* T623f10(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_570 */
extern void T158f1535(T0* C);
/* ET_AST_FACTORY.new_expression_address */
extern T0* T248f281(T0* C, T0* a1, T0* a2);
/* ET_EXPRESSION_ADDRESS.set_dollar */
extern void T766f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.make */
extern T0* T766c15(T0* a1);
/* ET_TOKEN_CONSTANTS.dollar_symbol */
extern unsigned char ge781os12576;
extern T0* ge781ov12576;
extern T0* T157f735(T0* C);
/* ET_SYMBOL.make_dollar */
extern T0* T425c54(void);
/* ET_EXPRESSION_ADDRESS.tokens */
extern T0* T766f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_569 */
extern void T158f1534(T0* C);
/* ET_AST_FACTORY.new_result_address */
extern T0* T248f280(T0* C, T0* a1, T0* a2);
/* ET_RESULT_ADDRESS.set_dollar */
extern void T765f16(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.make */
extern T0* T765c15(void);
/* ET_RESULT_ADDRESS.tokens */
extern T0* T765f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_568 */
extern void T158f1533(T0* C);
/* ET_AST_FACTORY.new_current_address */
extern T0* T248f279(T0* C, T0* a1, T0* a2);
/* ET_CURRENT_ADDRESS.set_dollar */
extern void T764f16(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.make */
extern T0* T764c15(void);
/* ET_CURRENT_ADDRESS.tokens */
extern T0* T764f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_567 */
extern void T158f1532(T0* C);
/* ET_AST_FACTORY.new_feature_address */
extern T0* T248f278(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADDRESS.set_dollar */
extern void T763f16(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.make */
extern T0* T763c15(T0* a1);
/* ET_FEATURE_ADDRESS.tokens */
extern T0* T763f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_566 */
extern void T158f1531(T0* C);
/* ET_AST_FACTORY.new_expression_comma */
extern T0* T248f277(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_565 */
extern void T158f1530(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_564 */
extern void T158f1529(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].resize */
extern T0* T760f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].resized_area */
extern T0* T711f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].copy_data */
extern void T711f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].move_data */
extern void T711f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].overlapping_move */
extern void T711f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].non_overlapping_move */
extern void T711f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T711c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].make */
extern T0* T760f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_ARGUMENT_LIST].make_area */
extern T0* T1120c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_ARGUMENT_LIST].default_create */
extern T0* T760c3(void);
/* ET_AST_FACTORY.new_actual_arguments */
extern T0* T248f276(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_563 */
extern void T158f1528(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_562 */
extern void T158f1527(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_561 */
extern void T158f1526(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_560 */
extern void T158f1525(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_559 */
extern void T158f1524(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_558 */
extern void T158f1523(T0* C);
/* ET_AST_FACTORY.new_call_expression */
extern T0* T248f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_557 */
extern void T158f1522(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_556 */
extern void T158f1521(T0* C);
/* ET_EIFFEL_PARSER.raise_error */
extern void T158f1734(T0* C);
/* ET_EIFFEL_PARSER.ise_5_7_59914 */
extern unsigned char ge260os1589;
extern T0* ge260ov1589;
extern T0* T158f681(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_555 */
extern void T158f1520(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_554 */
extern void T158f1519(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_553 */
extern void T158f1518(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_552 */
extern void T158f1517(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_551 */
extern void T158f1516(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_expression */
extern T0* T158f805(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.set_used */
extern void T920f10(T0* C, T1 a1);
/* ET_FORMAL_ARGUMENT.set_used */
extern void T214f9(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_550 */
extern void T158f1515(T0* C);
/* ET_AST_FACTORY.new_precursor_expression */
extern T0* T248f275(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_precursor_keyword */
extern void T757f20(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.set_parent_prefixed */
extern void T757f19(T0* C, T1 a1);
/* ET_PRECURSOR_EXPRESSION.make */
extern T0* T757c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.precursor_keyword */
extern unsigned char ge781os12632;
extern T0* ge781ov12632;
extern T0* T157f734(T0* C);
/* ET_PRECURSOR_KEYWORD.make */
extern T0* T422c18(void);
/* ET_PRECURSOR_KEYWORD.make_token */
extern void T422f20(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.make_leaf */
extern void T422f21(T0* C);
/* ET_PRECURSOR_KEYWORD.tokens */
extern T0* T422f2(T0* C);
/* ET_PRECURSOR_EXPRESSION.tokens */
extern T0* T757f4(T0* C);
/* ET_AST_FACTORY.new_precursor_class_name */
extern T0* T248f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_549 */
extern void T158f1514(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_548 */
extern void T158f1513(T0* C);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].resize */
extern T0* T756f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].resized_area */
extern T0* T743f3(T0* C, T6 a1);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].copy_data */
extern void T743f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].move_data */
extern void T743f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].overlapping_move */
extern void T743f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].non_overlapping_move */
extern void T743f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T743c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].make */
extern T0* T756f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_STATIC_CALL_EXPRESSION].make_area */
extern T0* T1119c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_STATIC_CALL_EXPRESSION].default_create */
extern T0* T756c3(void);
/* ET_AST_FACTORY.new_static_call_expression */
extern T0* T248f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_EXPRESSION.set_feature_keyword */
extern void T742f24(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.make */
extern T0* T742c23(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.make_qualified_call */
extern void T742f25(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_547 */
extern void T158f1512(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_546 */
extern void T158f1511(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].resize */
extern T0* T755f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CALL_EXPRESSION].resized_area */
extern T0* T690f3(T0* C, T6 a1);
/* SPECIAL [ET_CALL_EXPRESSION].copy_data */
extern void T690f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CALL_EXPRESSION].move_data */
extern void T690f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].overlapping_move */
extern void T690f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].non_overlapping_move */
extern void T690f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CALL_EXPRESSION].make */
extern T0* T690c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].make */
extern T0* T755f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CALL_EXPRESSION].make_area */
extern T0* T1118c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CALL_EXPRESSION].default_create */
extern T0* T755c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_545 */
extern void T158f1510(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_544 */
extern void T158f1509(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_543 */
extern void T158f1508(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].resize */
extern T0* T693f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSTRUCTION].resized_area */
extern T0* T689f3(T0* C, T6 a1);
/* SPECIAL [ET_INSTRUCTION].copy_data */
extern void T689f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSTRUCTION].move_data */
extern void T689f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].overlapping_move */
extern void T689f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].non_overlapping_move */
extern void T689f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSTRUCTION].make */
extern T0* T689c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].make */
extern T0* T693f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSTRUCTION].make_area */
extern T0* T1100c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSTRUCTION].default_create */
extern T0* T693c3(void);
/* ET_AST_FACTORY.new_static_call_instruction */
extern T0* T248f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.set_feature_keyword */
extern void T753f9(T0* C, T0* a1);
/* ET_STATIC_CALL_INSTRUCTION.make */
extern T0* T753c8(T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_INSTRUCTION.make_qualified_call */
extern void T753f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_542 */
extern void T158f1507(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_541 */
extern void T158f1506(T0* C);
/* ET_AST_FACTORY.new_precursor_instruction */
extern T0* T248f270(T0* C, T1 a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_INSTRUCTION.set_precursor_keyword */
extern void T751f10(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_prefixed */
extern void T751f9(T0* C, T1 a1);
/* ET_PRECURSOR_INSTRUCTION.make */
extern T0* T751c8(T0* a1, T0* a2);
/* ET_PRECURSOR_INSTRUCTION.tokens */
extern T0* T751f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_540 */
extern void T158f1505(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_539 */
extern void T158f1504(T0* C);
/* ET_AST_FACTORY.new_call_instruction */
extern T0* T248f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_538 */
extern void T158f1503(T0* C);
/* ET_EIFFEL_PARSER.new_unqualified_call_instruction */
extern T0* T158f804(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.set_instruction */
extern void T119f104(T0* C, T1 a1);
/* ET_EIFFEL_PARSER.yy_do_action_537 */
extern void T158f1502(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].resize */
extern T0* T750f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].resized_area */
extern T0* T749f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].copy_data */
extern void T749f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].move_data */
extern void T749f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].overlapping_move */
extern void T749f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].non_overlapping_move */
extern void T749f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].make */
extern T0* T749c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].make */
extern T0* T750f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_ITEM].make_area */
extern T0* T1116c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_ITEM].default_create */
extern T0* T750c3(void);
/* ET_AST_FACTORY.new_manifest_string_comma */
extern T0* T248f268(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_536 */
extern void T158f1501(T0* C);
/* ET_MANIFEST_STRING_LIST.put_first */
extern void T744f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_535 */
extern void T158f1500(T0* C);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].resize */
extern T0* T747f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_MANIFEST_STRING_LIST].resized_area */
extern T0* T745f3(T0* C, T6 a1);
/* SPECIAL [ET_MANIFEST_STRING_LIST].copy_data */
extern void T745f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_MANIFEST_STRING_LIST].move_data */
extern void T745f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].overlapping_move */
extern void T745f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].non_overlapping_move */
extern void T745f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_MANIFEST_STRING_LIST].make */
extern T0* T745c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].make */
extern T0* T747f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_MANIFEST_STRING_LIST].make_area */
extern T0* T1115c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_MANIFEST_STRING_LIST].default_create */
extern T0* T747c3(void);
/* ET_AST_FACTORY.new_manifest_string_list */
extern T0* T248f267(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern T0* T744c7(T6 a1);
/* ET_MANIFEST_STRING_LIST.tokens */
extern T0* T744f2(T0* C);
/* ET_MANIFEST_STRING_LIST.make_with_capacity */
extern void T744f7p1(T0* C, T6 a1);
/* ET_MANIFEST_STRING_LIST.fixed_array */
extern unsigned char ge656os6093;
extern T0* ge656ov6093;
extern T0* T744f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_534 */
extern void T158f1499(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_533 */
extern void T158f1498(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_532 */
extern void T158f1497(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_531 */
extern void T158f1496(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_530 */
extern void T158f1495(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].resize */
extern T0* T746f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DEBUG_INSTRUCTION].resized_area */
extern T0* T706f3(T0* C, T6 a1);
/* SPECIAL [ET_DEBUG_INSTRUCTION].copy_data */
extern void T706f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DEBUG_INSTRUCTION].move_data */
extern void T706f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].overlapping_move */
extern void T706f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].non_overlapping_move */
extern void T706f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DEBUG_INSTRUCTION].make */
extern T0* T706c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].make */
extern T0* T746f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DEBUG_INSTRUCTION].make_area */
extern T0* T1114c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DEBUG_INSTRUCTION].default_create */
extern T0* T746c3(void);
/* ET_AST_FACTORY.new_debug_instruction */
extern T0* T248f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEBUG_INSTRUCTION.make */
extern T0* T705c5(T0* a1, T0* a2);
/* ET_DEBUG_INSTRUCTION.tokens */
extern T0* T705f4(T0* C);
/* ET_AST_FACTORY.new_debug_compound */
extern T0* T248f265(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.debug_keyword */
extern unsigned char ge781os12605;
extern T0* ge781ov12605;
extern T0* T157f587(T0* C);
/* ET_KEYWORD.make_debug */
extern T0* T166c50(void);
/* ET_AST_FACTORY.tokens */
extern T0* T248f332(T0* C);
/* ET_COMPOUND.set_keyword */
extern void T625f9(T0* C, T0* a1);
/* ET_COMPOUND.make */
extern T0* T625c10(void);
/* ET_COMPOUND.make */
extern void T625f10p1(T0* C);
/* ET_TOKEN_CONSTANTS.do_keyword */
extern unsigned char ge781os12607;
extern T0* ge781ov12607;
extern T0* T157f577(T0* C);
/* ET_KEYWORD.make_do */
extern T0* T166c40(void);
/* ET_COMPOUND.tokens */
extern T0* T625f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_529 */
extern void T158f1494(T0* C);
/* ET_AST_FACTORY.new_compound */
extern T0* T248f236(T0* C, T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern T0* T625c7(T6 a1);
/* ET_COMPOUND.make_with_capacity */
extern void T625f7p1(T0* C, T6 a1);
/* ET_COMPOUND.fixed_array */
extern unsigned char ge743os6093;
extern T0* ge743ov6093;
extern T0* T625f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_528 */
extern void T158f1493(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].resize */
extern T0* T741f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_CONSTANT].resized_area */
extern T0* T738f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_CONSTANT].copy_data */
extern void T738f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_CONSTANT].move_data */
extern void T738f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].overlapping_move */
extern void T738f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].non_overlapping_move */
extern void T738f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_CONSTANT].make */
extern T0* T738c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].make */
extern T0* T741f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_CONSTANT].make_area */
extern T0* T1112c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_CONSTANT].default_create */
extern T0* T741c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_527 */
extern void T158f1492(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_526 */
extern void T158f1491(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_525 */
extern void T158f1490(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_524 */
extern void T158f1489(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_523 */
extern void T158f1488(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].resize */
extern T0* T739f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE].resized_area */
extern T0* T733f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE].copy_data */
extern void T733f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE].move_data */
extern void T733f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].overlapping_move */
extern void T733f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].non_overlapping_move */
extern void T733f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE].make */
extern T0* T733c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].make */
extern T0* T739f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE].make_area */
extern T0* T1111c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE].default_create */
extern T0* T739c3(void);
/* ET_AST_FACTORY.new_choice_range */
extern T0* T248f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CHOICE_RANGE.make */
extern T0* T740c7(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.dotdot_symbol */
extern unsigned char ge781os12578;
extern T0* ge781ov12578;
extern T0* T157f573(T0* C);
/* ET_SYMBOL.make_dotdot */
extern T0* T425c70(void);
/* ET_CHOICE_RANGE.tokens */
extern T0* T740f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_522 */
extern void T158f1487(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_521 */
extern void T158f1486(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].resize */
extern T0* T736f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_ITEM].resized_area */
extern T0* T735f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_ITEM].copy_data */
extern void T735f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_ITEM].move_data */
extern void T735f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].overlapping_move */
extern void T735f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].non_overlapping_move */
extern void T735f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_ITEM].make */
extern T0* T735c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].make */
extern T0* T736f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_ITEM].make_area */
extern T0* T1110c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_ITEM].default_create */
extern T0* T736c3(void);
/* ET_AST_FACTORY.new_choice_comma */
extern T0* T248f263(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_520 */
extern void T158f1485(T0* C);
/* ET_CHOICE_LIST.put_first */
extern void T728f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_519 */
extern void T158f1484(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].resize */
extern T0* T731f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CHOICE_LIST].resized_area */
extern T0* T729f3(T0* C, T6 a1);
/* SPECIAL [ET_CHOICE_LIST].copy_data */
extern void T729f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CHOICE_LIST].move_data */
extern void T729f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].overlapping_move */
extern void T729f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].non_overlapping_move */
extern void T729f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CHOICE_LIST].make */
extern T0* T729c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].make */
extern T0* T731f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CHOICE_LIST].make_area */
extern T0* T1109c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CHOICE_LIST].default_create */
extern T0* T731c3(void);
/* ET_AST_FACTORY.new_choice_list */
extern T0* T248f262(T0* C, T0* a1, T6 a2);
/* ET_CHOICE_LIST.set_when_keyword */
extern void T728f10(T0* C, T0* a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern T0* T728c8(T6 a1);
/* ET_CHOICE_LIST.make_with_capacity */
extern void T728f8p1(T0* C, T6 a1);
/* ET_CHOICE_LIST.fixed_array */
extern unsigned char ge741os6093;
extern T0* ge741ov6093;
extern T0* T728f5(T0* C);
/* ET_TOKEN_CONSTANTS.when_keyword */
extern unsigned char ge781os12650;
extern T0* ge781ov12650;
extern T0* T157f584(T0* C);
/* ET_KEYWORD.make_when */
extern T0* T166c47(void);
/* ET_CHOICE_LIST.tokens */
extern T0* T728f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_518 */
extern void T158f1483(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_517 */
extern void T158f1482(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_516 */
extern void T158f1481(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_515 */
extern void T158f1480(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_514 */
extern void T158f1479(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].resize */
extern T0* T730f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART].resized_area */
extern T0* T727f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART].copy_data */
extern void T727f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART].move_data */
extern void T727f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].overlapping_move */
extern void T727f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].non_overlapping_move */
extern void T727f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART].make */
extern T0* T727c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].make */
extern T0* T730f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART].make_area */
extern T0* T1108c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART].default_create */
extern T0* T730c3(void);
/* ET_AST_FACTORY.new_when_part */
extern T0* T248f261(T0* C, T0* a1, T0* a2);
/* ET_WHEN_PART.make */
extern T0* T726c3(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_513 */
extern void T158f1478(T0* C);
/* ET_WHEN_PART_LIST.put_first */
extern void T722f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_512 */
extern void T158f1477(T0* C);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].resize */
extern T0* T725f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_WHEN_PART_LIST].resized_area */
extern T0* T723f3(T0* C, T6 a1);
/* SPECIAL [ET_WHEN_PART_LIST].copy_data */
extern void T723f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_WHEN_PART_LIST].move_data */
extern void T723f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].overlapping_move */
extern void T723f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].non_overlapping_move */
extern void T723f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_WHEN_PART_LIST].make */
extern T0* T723c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].make */
extern T0* T725f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_WHEN_PART_LIST].make_area */
extern T0* T1106c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_WHEN_PART_LIST].default_create */
extern T0* T725c3(void);
/* ET_AST_FACTORY.new_when_part_list */
extern T0* T248f260(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.make_with_capacity */
extern T0* T722c5(T6 a1);
/* ET_WHEN_PART_LIST.fixed_array */
extern unsigned char ge764os6093;
extern T0* ge764ov6093;
extern T0* T722f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_511 */
extern void T158f1476(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_510 */
extern void T158f1475(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_509 */
extern void T158f1474(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].resize */
extern T0* T724f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INSPECT_INSTRUCTION].resized_area */
extern T0* T702f3(T0* C, T6 a1);
/* SPECIAL [ET_INSPECT_INSTRUCTION].copy_data */
extern void T702f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INSPECT_INSTRUCTION].move_data */
extern void T702f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].overlapping_move */
extern void T702f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].non_overlapping_move */
extern void T702f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INSPECT_INSTRUCTION].make */
extern T0* T702c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].make */
extern T0* T724f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INSPECT_INSTRUCTION].make_area */
extern T0* T1105c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INSPECT_INSTRUCTION].default_create */
extern T0* T724c3(void);
/* ET_AST_FACTORY.new_inspect_instruction */
extern T0* T248f259(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_INSPECT_INSTRUCTION.set_else_compound */
extern void T701f8(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.make */
extern T0* T701c7(T0* a1, T0* a2);
/* ET_INSPECT_INSTRUCTION.tokens */
extern T0* T701f4(T0* C);
/* ET_AST_FACTORY.new_conditional */
extern T0* T248f247(T0* C, T0* a1, T0* a2);
/* ET_KEYWORD_EXPRESSION.make */
extern T0* T923c3(T0* a1, T0* a2);
/* ET_KEYWORD.is_inspect */
extern T1 T166f12(T0* C);
/* ET_KEYWORD.is_if */
extern T1 T166f11(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_508 */
extern void T158f1473(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_507 */
extern void T158f1472(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].resize */
extern T0* T721f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART].resized_area */
extern T0* T719f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART].copy_data */
extern void T719f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART].move_data */
extern void T719f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].overlapping_move */
extern void T719f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].non_overlapping_move */
extern void T719f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART].make */
extern T0* T719c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].make */
extern T0* T721f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART].make_area */
extern T0* T1104c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART].default_create */
extern T0* T721c3(void);
/* ET_AST_FACTORY.new_elseif_part */
extern T0* T248f258(T0* C, T0* a1, T0* a2);
/* ET_ELSEIF_PART.make */
extern T0* T718c4(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_506 */
extern void T158f1471(T0* C);
/* ET_ELSEIF_PART_LIST.put_first */
extern void T715f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_505 */
extern void T158f1470(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].resize */
extern T0* T720f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ELSEIF_PART_LIST].resized_area */
extern T0* T717f3(T0* C, T6 a1);
/* SPECIAL [ET_ELSEIF_PART_LIST].copy_data */
extern void T717f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ELSEIF_PART_LIST].move_data */
extern void T717f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].overlapping_move */
extern void T717f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].non_overlapping_move */
extern void T717f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ELSEIF_PART_LIST].make */
extern T0* T717c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].make */
extern T0* T720f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ELSEIF_PART_LIST].make_area */
extern T0* T1103c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ELSEIF_PART_LIST].default_create */
extern T0* T720c3(void);
/* ET_AST_FACTORY.new_elseif_part_list */
extern T0* T248f257(T0* C, T6 a1);
/* ET_ELSEIF_PART_LIST.make_with_capacity */
extern T0* T715c5(T6 a1);
/* ET_ELSEIF_PART_LIST.fixed_array */
extern unsigned char ge748os6093;
extern T0* ge748ov6093;
extern T0* T715f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_504 */
extern void T158f1469(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_503 */
extern void T158f1468(T0* C);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].resize */
extern T0* T716f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_IF_INSTRUCTION].resized_area */
extern T0* T700f3(T0* C, T6 a1);
/* SPECIAL [ET_IF_INSTRUCTION].copy_data */
extern void T700f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_IF_INSTRUCTION].move_data */
extern void T700f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].overlapping_move */
extern void T700f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].non_overlapping_move */
extern void T700f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_IF_INSTRUCTION].make */
extern T0* T700c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].make */
extern T0* T716f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_IF_INSTRUCTION].make_area */
extern T0* T1102c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_IF_INSTRUCTION].default_create */
extern T0* T716c3(void);
/* ET_AST_FACTORY.new_if_instruction */
extern T0* T248f256(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_IF_INSTRUCTION.set_else_compound */
extern void T699f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.set_elseif_parts */
extern void T699f9(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.make */
extern T0* T699c8(T0* a1, T0* a2);
/* ET_IF_INSTRUCTION.tokens */
extern T0* T699f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_502 */
extern void T158f1467(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_501 */
extern void T158f1466(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_500 */
extern void T158f1465(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_499 */
extern void T158f1464(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].resize */
extern T0* T714f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATE_EXPRESSION].resized_area */
extern T0* T521f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATE_EXPRESSION].copy_data */
extern void T521f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATE_EXPRESSION].move_data */
extern void T521f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].overlapping_move */
extern void T521f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].non_overlapping_move */
extern void T521f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATE_EXPRESSION].make */
extern T0* T521c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].make */
extern T0* T714f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATE_EXPRESSION].make_area */
extern T0* T1101c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATE_EXPRESSION].default_create */
extern T0* T714c3(void);
/* ET_AST_FACTORY.new_create_expression */
extern T0* T248f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATE_EXPRESSION.set_create_keyword */
extern void T520f19(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.make */
extern T0* T520c18(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.create_keyword */
extern unsigned char ge781os12602;
extern T0* ge781ov12602;
extern T0* T157f592(T0* C);
/* ET_KEYWORD.make_create */
extern T0* T166c55(void);
/* ET_CREATE_EXPRESSION.tokens */
extern T0* T520f4(T0* C);
/* ET_AST_FACTORY.new_qualified_call */
extern T0* T248f252(T0* C, T0* a1, T0* a2);
/* ET_QUALIFIED_CALL.make */
extern T0* T710c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_498 */
extern void T158f1463(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_497 */
extern void T158f1462(T0* C);
/* ET_AST_FACTORY.new_create_instruction */
extern T0* T248f254(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.set_create_keyword */
extern void T713f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.make */
extern T0* T713c11(T0* a1, T0* a2, T0* a3);
/* ET_CREATE_INSTRUCTION.tokens */
extern T0* T713f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_496 */
extern void T158f1461(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_495 */
extern void T158f1460(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_494 */
extern void T158f1459(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_493 */
extern void T158f1458(T0* C);
/* ET_AST_FACTORY.new_bang_instruction */
extern T0* T248f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BANG_INSTRUCTION.set_left_bang */
extern void T709f12(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.make */
extern T0* T709c11(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.bang_symbol */
extern unsigned char ge781os12573;
extern T0* ge781ov12573;
extern T0* T157f567(T0* C);
/* ET_SYMBOL.make_bang */
extern T0* T425c64(void);
/* ET_BANG_INSTRUCTION.tokens */
extern T0* T709f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_492 */
extern void T158f1457(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_491 */
extern void T158f1456(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_490 */
extern void T158f1455(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_489 */
extern void T158f1454(T0* C);
/* ET_AST_FACTORY.new_null_instruction */
extern T0* T248f249(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_488 */
extern void T158f1453(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_487 */
extern void T158f1452(T0* C);
/* ET_EIFFEL_PARSER.new_check_instruction */
extern T0* T158f763(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].wipe_out */
extern void T403f14(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].clear_items */
extern void T403f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_all_cursors_after */
extern void T403f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_next_cursor */
extern void T1008f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_ASSERTION_ITEM].set_position */
extern void T1008f5(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.put_first */
extern void T707f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].item */
extern T0* T403f4(T0* C, T6 a1);
/* ET_AST_FACTORY.new_check_instruction */
extern T0* T248f329(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CHECK_INSTRUCTION.set_check_keyword */
extern void T707f11(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern T0* T707c9(T6 a1);
/* ET_CHECK_INSTRUCTION.make_with_capacity */
extern void T707f9p1(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.fixed_array */
extern unsigned char ge538os6093;
extern T0* ge538ov6093;
extern T0* T707f6(T0* C);
/* ET_TOKEN_CONSTANTS.check_keyword */
extern unsigned char ge781os12599;
extern T0* ge781ov12599;
extern T0* T157f586(T0* C);
/* ET_KEYWORD.make_check */
extern T0* T166c49(void);
/* ET_CHECK_INSTRUCTION.tokens */
extern T0* T707f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_486 */
extern void T158f1451(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_485 */
extern void T158f1450(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_484 */
extern void T158f1449(T0* C);
/* ET_AST_FACTORY.new_loop_instruction */
extern T0* T248f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LOOP_INSTRUCTION.set_variant_part */
extern void T704f11(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.set_invariant_part */
extern void T704f10(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.make */
extern T0* T704c9(T0* a1, T0* a2, T0* a3);
/* ET_LOOP_INSTRUCTION.tokens */
extern T0* T704f5(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_483 */
extern void T158f1448(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_482 */
extern void T158f1447(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_481 */
extern void T158f1446(T0* C);
/* ET_AST_FACTORY.new_assignment_attempt */
extern T0* T248f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT_ATTEMPT.make */
extern T0* T698c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_attempt_symbol */
extern unsigned char ge781os12572;
extern T0* ge781ov12572;
extern T0* T157f575(T0* C);
/* ET_SYMBOL.make_assign_attempt */
extern T0* T425c72(void);
/* ET_ASSIGNMENT_ATTEMPT.tokens */
extern T0* T698f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_480 */
extern void T158f1445(T0* C);
/* ET_AST_FACTORY.new_assignment */
extern T0* T248f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNMENT.make */
extern T0* T697c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.assign_symbol */
extern unsigned char ge781os12571;
extern T0* ge781ov12571;
extern T0* T157f574(T0* C);
/* ET_SYMBOL.make_assign */
extern T0* T425c71(void);
/* ET_ASSIGNMENT.tokens */
extern T0* T697f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_479 */
extern void T158f1444(T0* C);
/* ET_AST_FACTORY.new_assigner_instruction */
extern T0* T248f244(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.make */
extern T0* T691c13(T0* a1, T0* a2);
/* ET_ASSIGNER_INSTRUCTION.dummy_name */
extern unsigned char ge731os21806;
extern T0* ge731ov21806;
extern T0* T691f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.tokens */
extern T0* T691f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_478 */
extern void T158f1443(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_477 */
extern void T158f1442(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_476 */
extern void T158f1441(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_475 */
extern void T158f1440(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_474 */
extern void T158f1439(T0* C);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].resize */
extern T0* T677f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_COMPOUND].resized_area */
extern T0* T626f3(T0* C, T6 a1);
/* SPECIAL [ET_COMPOUND].copy_data */
extern void T626f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_COMPOUND].move_data */
extern void T626f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].overlapping_move */
extern void T626f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].non_overlapping_move */
extern void T626f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_COMPOUND].make */
extern T0* T626c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].make */
extern T0* T677f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_COMPOUND].make_area */
extern T0* T1095c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_COMPOUND].default_create */
extern T0* T677c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_473 */
extern void T158f1438(T0* C);
/* ET_COMPOUND.put_first */
extern void T625f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_472 */
extern void T158f1437(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_471 */
extern void T158f1436(T0* C);
/* ET_AST_FACTORY.new_loop_compound */
extern T0* T248f243(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.loop_keyword */
extern unsigned char ge781os12627;
extern T0* ge781ov12627;
extern T0* T157f582(T0* C);
/* ET_KEYWORD.make_loop */
extern T0* T166c45(void);
/* ET_EIFFEL_PARSER.yy_do_action_470 */
extern void T158f1435(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_469 */
extern void T158f1434(T0* C);
/* ET_AST_FACTORY.new_from_compound */
extern T0* T248f242(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.from_keyword */
extern unsigned char ge781os12616;
extern T0* ge781ov12616;
extern T0* T157f581(T0* C);
/* ET_KEYWORD.make_from */
extern T0* T166c44(void);
/* ET_EIFFEL_PARSER.yy_do_action_468 */
extern void T158f1433(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_467 */
extern void T158f1432(T0* C);
/* ET_AST_FACTORY.new_rescue_compound */
extern T0* T248f241(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.rescue_keyword */
extern unsigned char ge781os12639;
extern T0* ge781ov12639;
extern T0* T157f598(T0* C);
/* ET_KEYWORD.make_rescue */
extern T0* T166c61(void);
/* ET_EIFFEL_PARSER.yy_do_action_466 */
extern void T158f1431(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_465 */
extern void T158f1430(T0* C);
/* ET_AST_FACTORY.new_else_compound */
extern T0* T248f240(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_464 */
extern void T158f1429(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_463 */
extern void T158f1428(T0* C);
/* ET_AST_FACTORY.new_then_compound */
extern T0* T248f239(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_462 */
extern void T158f1427(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_461 */
extern void T158f1426(T0* C);
/* ET_AST_FACTORY.new_once_compound */
extern T0* T248f238(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_460 */
extern void T158f1425(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_459 */
extern void T158f1424(T0* C);
/* ET_AST_FACTORY.new_do_compound */
extern T0* T248f237(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_458 */
extern void T158f1423(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_457 */
extern void T158f1422(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].resize */
extern T0* T686f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_TYPE].resized_area */
extern T0* T547f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_TYPE].copy_data */
extern void T547f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_TYPE].move_data */
extern void T547f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].overlapping_move */
extern void T547f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].non_overlapping_move */
extern void T547f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_TYPE].make */
extern T0* T547c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].make */
extern T0* T686f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LIKE_TYPE].make_area */
extern T0* T1099c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_TYPE].default_create */
extern T0* T686c3(void);
/* ET_AST_FACTORY.new_like_current */
extern T0* T248f235(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.set_like_keyword */
extern void T687f59(T0* C, T0* a1);
/* ET_LIKE_CURRENT.make */
extern T0* T687c58(void);
/* ET_TOKEN_CONSTANTS.like_keyword */
extern unsigned char ge781os12625;
extern T0* ge781ov12625;
extern T0* T157f733(T0* C);
/* ET_KEYWORD.make_like */
extern T0* T166c30(void);
/* ET_LIKE_CURRENT.tokens */
extern T0* T687f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_456 */
extern void T158f1421(T0* C);
/* ET_AST_FACTORY.new_like_feature */
extern T0* T248f234(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.set_like_keyword */
extern void T685f63(T0* C, T0* a1);
/* ET_LIKE_FEATURE.make */
extern T0* T685c62(T0* a1);
/* ET_LIKE_FEATURE.tokens */
extern T0* T685f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_455 */
extern void T158f1420(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T682f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T680f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T680f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].move_data */
extern void T680f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T680f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T680f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_labeled_actual_parameter_semicolon */
extern T0* T248f233(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_actual_parameter */
extern T0* T248f230(T0* C, T0* a1, T0* a2);
/* ET_LABELED_ACTUAL_PARAMETER.make */
extern T0* T683c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_454 */
extern void T158f1419(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_453 */
extern void T158f1418(T0* C);
/* ET_EIFFEL_PARSER.add_to_actual_parameter_list */
extern void T158f1737(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_labeled_comma_actual_parameter */
extern T0* T248f232(T0* C, T0* a1, T0* a2);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T922c8(T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.first */
extern T0* T160f12(T0* C);
/* ET_AST_FACTORY.new_label_comma */
extern T0* T248f231(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T160f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_452 */
extern void T158f1417(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_451 */
extern void T158f1416(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_450 */
extern void T158f1415(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_449 */
extern void T158f1414(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_448 */
extern void T158f1413(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].resize */
extern T0* T679f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T559f3(T0* C, T6 a1);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].copy_data */
extern void T559f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].move_data */
extern void T559f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T559f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T559f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T559c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].make */
extern T0* T679f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1097c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T679c3(void);
/* ET_AST_FACTORY.new_actual_parameters */
extern T0* T248f228(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T160f26(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_447 */
extern void T158f1412(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_446 */
extern void T158f1411(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_445 */
extern void T158f1410(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_444 */
extern void T158f1409(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_443 */
extern void T158f1408(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_442 */
extern void T158f1407(T0* C);
/* ET_AST_FACTORY.new_actual_parameter_comma */
extern T0* T248f229(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_441 */
extern void T158f1406(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_440 */
extern void T158f1405(T0* C);
/* ET_AST_FACTORY.new_tuple_type */
extern T0* T248f227(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.set_tuple_keyword */
extern void T288f89(T0* C, T0* a1);
/* ET_TUPLE_TYPE.make */
extern T0* T288c88(T0* a1);
/* ET_TOKEN_CONSTANTS.tuple_keyword */
extern unsigned char ge781os12644;
extern T0* ge781ov12644;
extern T0* T157f676(T0* C);
/* ET_TUPLE_TYPE.tokens */
extern T0* T288f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_439 */
extern void T158f1404(T0* C);
/* ET_EIFFEL_PARSER.new_named_type */
extern T0* T158f744(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_class_type */
extern T0* T248f318(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.make */
extern T0* T159c93(T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_generic_class_type */
extern T0* T248f317(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.set_in_system */
extern void T55f179(T0* C, T1 a1);
/* DS_HASH_SET [ET_CLASS].force_last */
extern void T405f42(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].slots_put */
extern void T405f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].clashes_put */
extern void T405f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].slots_item */
extern T6 T405f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].hash_position */
extern T6 T405f21(T0* C, T0* a1);
/* ET_CLASS.hash_code */
extern T6 T55f71(T0* C);
/* DS_HASH_SET [ET_CLASS].resize */
extern void T405f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_resize */
extern void T405f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_resize */
extern void T405f67(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_resize */
extern void T405f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].key_storage_item */
extern T0* T405f33(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_item */
extern T0* T405f8(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].clashes_item */
extern T6 T405f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].slots_resize */
extern void T405f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].new_capacity */
extern T6 T405f20(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].item_storage_put */
extern void T405f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].search_position */
extern void T405f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].key_equality_tester */
extern T0* T405f32(T0* C);
/* ET_AST_FACTORY.new_formal_parameter_type */
extern T0* T248f328(T0* C, T0* a1, T6 a2);
/* ET_FORMAL_PARAMETER_TYPE.make */
extern T0* T913c55(T0* a1, T6 a2);
/* ET_CLASS.formal_parameter */
extern T0* T55f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter_by_name */
extern T0* T396f14(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.formal_parameter */
extern T0* T536f8(T0* C);
/* ET_FORMAL_PARAMETER.formal_parameter */
extern T0* T528f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_438 */
extern void T158f1403(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_437 */
extern void T158f1402(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_436 */
extern void T158f1401(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_435 */
extern void T158f1400(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_434 */
extern void T158f1399(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_433 */
extern void T158f1398(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_432 */
extern void T158f1397(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_431 */
extern void T158f1396(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_430 */
extern void T158f1395(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE].resize */
extern T0* T678f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE].resized_area */
extern T0* T606f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE].copy_data */
extern void T606f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE].move_data */
extern void T606f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].overlapping_move */
extern void T606f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE].non_overlapping_move */
extern void T606f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_429 */
extern void T158f1394(T0* C);
/* ET_AST_FACTORY.new_bit_feature */
extern T0* T248f128(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.set_bit_keyword */
extern void T549f97(T0* C, T0* a1);
/* ET_BIT_FEATURE.make */
extern T0* T549c96(T0* a1);
/* ET_TOKEN_CONSTANTS.bit_keyword */
extern unsigned char ge781os12598;
extern T0* ge781ov12598;
extern T0* T157f721(T0* C);
/* ET_BIT_FEATURE.tokens */
extern T0* T549f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_428 */
extern void T158f1393(T0* C);
/* ET_EIFFEL_PARSER.new_bit_n */
extern T0* T158f602(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0d_error */
extern void T52f204(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.set_ve_reported */
extern void T884f627(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ge_reported */
extern void T884f626(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.set_ise_reported */
extern void T884f624(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_vtbt0d */
extern T0* T884c625(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T52f29(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtbt0d_error */
extern void T28f204(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtbt_error */
extern T1 T28f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0c_error */
extern void T52f203(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0c */
extern T0* T884c623(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0c_error */
extern void T28f203(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.set_fatal_error */
extern void T158f1715(T0* C, T0* a1);
/* ET_CLASS.set_syntax_error */
extern void T55f167(T0* C);
/* ET_CLASS.set_parsed */
extern void T55f166(T0* C);
/* ET_BIT_N.has_size_error */
extern T1 T548f1(T0* C);
/* ET_BIT_N.compute_size */
extern void T548f96(T0* C);
/* ET_AST_FACTORY.new_bit_n */
extern T0* T248f316(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.set_bit_keyword */
extern void T548f97(T0* C, T0* a1);
/* ET_BIT_N.make */
extern T0* T548c95(T0* a1);
/* ET_BIT_N.tokens */
extern T0* T548f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_427 */
extern void T158f1392(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_426 */
extern void T158f1391(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_425 */
extern void T158f1390(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_424 */
extern void T158f1389(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_423 */
extern void T158f1388(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_422 */
extern void T158f1387(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_421 */
extern void T158f1386(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_420 */
extern void T158f1385(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_419 */
extern void T158f1384(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_418 */
extern void T158f1383(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_417 */
extern void T158f1382(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_416 */
extern void T158f1381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_415 */
extern void T158f1380(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_414 */
extern void T158f1379(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_413 */
extern void T158f1378(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_412 */
extern void T158f1377(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_411 */
extern void T158f1376(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_410 */
extern void T158f1375(T0* C);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].resize */
extern T0* T676f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VARIANT].resized_area */
extern T0* T675f2(T0* C, T6 a1);
/* SPECIAL [ET_VARIANT].copy_data */
extern void T675f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VARIANT].move_data */
extern void T675f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].overlapping_move */
extern void T675f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].non_overlapping_move */
extern void T675f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VARIANT].make */
extern T0* T675c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].make */
extern T0* T676f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VARIANT].make_area */
extern T0* T1094c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VARIANT].default_create */
extern T0* T676c3(void);
/* ET_AST_FACTORY.new_variant */
extern T0* T248f226(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VARIANT.set_variant_keyword */
extern void T674f6(T0* C, T0* a1);
/* ET_VARIANT.make */
extern T0* T674c5(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.variant_keyword */
extern unsigned char ge781os12648;
extern T0* ge781ov12648;
extern T0* T157f604(T0* C);
/* ET_KEYWORD.make_variant */
extern T0* T166c67(void);
/* ET_VARIANT.tokens */
extern T0* T674f2(T0* C);
/* ET_AST_FACTORY.new_tag */
extern T0* T248f117(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_409 */
extern void T158f1374(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_408 */
extern void T158f1373(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_407 */
extern void T158f1372(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_406 */
extern void T158f1371(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].resize */
extern T0* T673f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOOP_INVARIANTS].resized_area */
extern T0* T672f2(T0* C, T6 a1);
/* SPECIAL [ET_LOOP_INVARIANTS].copy_data */
extern void T672f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOOP_INVARIANTS].move_data */
extern void T672f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].overlapping_move */
extern void T672f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].non_overlapping_move */
extern void T672f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOOP_INVARIANTS].make */
extern T0* T672c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].make */
extern T0* T673f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOOP_INVARIANTS].make_area */
extern T0* T1093c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOOP_INVARIANTS].default_create */
extern T0* T673c3(void);
/* ET_EIFFEL_PARSER.new_loop_invariants */
extern T0* T158f738(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.put_first */
extern void T671f9(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_invariants */
extern T0* T248f327(T0* C, T0* a1, T6 a2);
/* ET_LOOP_INVARIANTS.set_invariant_keyword */
extern void T671f10(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern T0* T671c8(T6 a1);
/* ET_LOOP_INVARIANTS.make_with_capacity */
extern void T671f8p1(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.fixed_array */
extern T0* T671f5(T0* C);
/* ET_TOKEN_CONSTANTS.invariant_keyword */
extern unsigned char ge781os12623;
extern T0* ge781ov12623;
extern T0* T157f613(T0* C);
/* ET_KEYWORD.make_invariant */
extern T0* T166c76(void);
/* ET_LOOP_INVARIANTS.tokens */
extern T0* T671f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_405 */
extern void T158f1370(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_404 */
extern void T158f1369(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_403 */
extern void T158f1368(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_402 */
extern void T158f1367(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].resize */
extern T0* T670f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INVARIANTS].resized_area */
extern T0* T504f3(T0* C, T6 a1);
/* SPECIAL [ET_INVARIANTS].copy_data */
extern void T504f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INVARIANTS].move_data */
extern void T504f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].overlapping_move */
extern void T504f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].non_overlapping_move */
extern void T504f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INVARIANTS].make */
extern T0* T504c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].make */
extern T0* T670f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INVARIANTS].make_area */
extern T0* T1092c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INVARIANTS].default_create */
extern T0* T670c3(void);
/* ET_EIFFEL_PARSER.new_invariants */
extern T0* T158f734(T0* C, T0* a1);
/* ET_INVARIANTS.put_first */
extern void T503f22(T0* C, T0* a1);
/* ET_AST_FACTORY.new_invariants */
extern T0* T248f326(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_INVARIANTS.set_invariant_keyword */
extern void T503f23(T0* C, T0* a1);
/* ET_INVARIANTS.make_with_capacity */
extern T0* T503c21(T0* a1, T6 a2);
/* ET_INVARIANTS.make_assertions_with_capacity */
extern void T503f24(T0* C, T6 a1);
/* ET_INVARIANTS.fixed_array */
extern T0* T503f6(T0* C);
/* ET_INVARIANTS.tokens */
extern T0* T503f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_401 */
extern void T158f1366(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201_400 */
extern void T158f947(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_400 */
extern void T158f1365(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_399 */
extern void T158f1364(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_398 */
extern void T158f1363(T0* C);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].resize */
extern T0* T669f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSTCONDITIONS].resized_area */
extern T0* T628f3(T0* C, T6 a1);
/* SPECIAL [ET_POSTCONDITIONS].copy_data */
extern void T628f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSTCONDITIONS].move_data */
extern void T628f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].overlapping_move */
extern void T628f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].non_overlapping_move */
extern void T628f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSTCONDITIONS].make */
extern T0* T628c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].make */
extern T0* T669f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSTCONDITIONS].make_area */
extern T0* T1091c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSTCONDITIONS].default_create */
extern T0* T669c3(void);
/* ET_EIFFEL_PARSER.new_postconditions */
extern T0* T158f731(T0* C, T0* a1, T0* a2);
/* ET_POSTCONDITIONS.put_first */
extern void T627f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_postconditions */
extern T0* T248f325(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_POSTCONDITIONS.set_then_keyword */
extern void T627f16(T0* C, T0* a1);
/* ET_POSTCONDITIONS.set_ensure_keyword */
extern void T627f15(T0* C, T0* a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern T0* T627c13(T6 a1);
/* ET_POSTCONDITIONS.make_with_capacity */
extern void T627f13p1(T0* C, T6 a1);
/* ET_POSTCONDITIONS.fixed_array */
extern T0* T627f5(T0* C);
/* ET_TOKEN_CONSTANTS.ensure_keyword */
extern unsigned char ge781os12611;
extern T0* ge781ov12611;
extern T0* T157f724(T0* C);
/* ET_KEYWORD.make_ensure */
extern T0* T166c32(void);
/* ET_POSTCONDITIONS.tokens */
extern T0* T627f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_397 */
extern void T158f1362(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_396 */
extern void T158f1361(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_395 */
extern void T158f1360(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_394 */
extern void T158f1359(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_393 */
extern void T158f1358(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].resize */
extern T0* T668f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECONDITIONS].resized_area */
extern T0* T622f3(T0* C, T6 a1);
/* SPECIAL [ET_PRECONDITIONS].copy_data */
extern void T622f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECONDITIONS].move_data */
extern void T622f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].overlapping_move */
extern void T622f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].non_overlapping_move */
extern void T622f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECONDITIONS].make */
extern T0* T622c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].make */
extern T0* T668f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECONDITIONS].make_area */
extern T0* T1090c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECONDITIONS].default_create */
extern T0* T668c3(void);
/* ET_EIFFEL_PARSER.new_preconditions */
extern T0* T158f728(T0* C, T0* a1, T0* a2);
/* ET_PRECONDITIONS.put_first */
extern void T621f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_preconditions */
extern T0* T248f324(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_PRECONDITIONS.set_else_keyword */
extern void T621f16(T0* C, T0* a1);
/* ET_PRECONDITIONS.set_require_keyword */
extern void T621f15(T0* C, T0* a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern T0* T621c13(T6 a1);
/* ET_PRECONDITIONS.make_with_capacity */
extern void T621f13p1(T0* C, T6 a1);
/* ET_PRECONDITIONS.fixed_array */
extern T0* T621f5(T0* C);
/* ET_TOKEN_CONSTANTS.require_keyword */
extern unsigned char ge781os12638;
extern T0* ge781ov12638;
extern T0* T157f723(T0* C);
/* ET_KEYWORD.make_require */
extern T0* T166c35(void);
/* ET_PRECONDITIONS.tokens */
extern T0* T621f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_392 */
extern void T158f1357(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_391 */
extern void T158f1356(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_390 */
extern void T158f1355(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_389 */
extern void T158f1354(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_388 */
extern void T158f1353(T0* C);
/* ET_EIFFEL_PARSER.add_tagged_assertion */
extern void T158f1736(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].force_last */
extern void T403f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].resize */
extern void T403f21(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSERTION_ITEM].resize */
extern T0* T1007f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSERTION_ITEM].resized_area */
extern T0* T1006f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSERTION_ITEM].copy_data */
extern void T1006f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSERTION_ITEM].move_data */
extern void T1006f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].overlapping_move */
extern void T1006f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSERTION_ITEM].non_overlapping_move */
extern void T1006f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].new_capacity */
extern T6 T403f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].extendible */
extern T1 T403f10(T0* C, T6 a1);
/* ET_AST_FACTORY.new_assertion_semicolon */
extern T0* T248f311(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_tagged_assertion */
extern T0* T248f312(T0* C, T0* a1);
/* ET_TAGGED_ASSERTION.make */
extern T0* T815c5(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_387 */
extern void T158f1352(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_386 */
extern void T158f1351(T0* C);
/* ET_EIFFEL_PARSER.add_expression_assertion */
extern void T158f1735(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].remove_last */
extern void T403f16(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].move_last_cursors_after */
extern void T403f20(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].replace */
extern void T403f15(T0* C, T0* a1, T6 a2);
/* ET_TAGGED_ASSERTION.set_expression */
extern void T815f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].last */
extern T0* T403f2(T0* C);
/* DS_ARRAYED_LIST [ET_ASSERTION_ITEM].is_empty */
extern T1 T403f1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_385 */
extern void T158f1350(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_384 */
extern void T158f1349(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_383 */
extern void T158f1348(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_382 */
extern void T158f1347(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_381 */
extern void T158f1346(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_380 */
extern void T158f1345(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].resize */
extern T0* T666f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].resized_area */
extern T0* T661f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].copy_data */
extern void T661f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].move_data */
extern void T661f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].overlapping_move */
extern void T661f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].non_overlapping_move */
extern void T661f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T661c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].make */
extern T0* T666f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE_ITEM].make_area */
extern T0* T1089c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_ITEM].default_create */
extern T0* T666c3(void);
/* ET_AST_FACTORY.new_local_variable_semicolon */
extern T0* T248f225(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_local_variable */
extern T0* T248f224(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_VARIABLE.make */
extern T0* T662c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_379 */
extern void T158f1344(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_378 */
extern void T158f1343(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].resize */
extern T0* T665f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE].resized_area */
extern T0* T663f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE].copy_data */
extern void T663f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE].move_data */
extern void T663f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].overlapping_move */
extern void T663f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].non_overlapping_move */
extern void T663f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE].make */
extern T0* T663c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].make */
extern T0* T665f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LOCAL_VARIABLE].make_area */
extern T0* T1088c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE].default_create */
extern T0* T665c3(void);
/* ET_AST_FACTORY.new_local_comma_variable */
extern T0* T248f223(T0* C, T0* a1, T0* a2);
/* ET_LOCAL_COMMA_VARIABLE.make */
extern T0* T921c7(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.dummy_type */
extern unsigned char ge964os14352;
extern T0* ge964ov14352;
extern T0* T158f711(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_377 */
extern void T158f1342(T0* C);
/* ET_AST_FACTORY.new_local_name_comma */
extern T0* T248f222(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_376 */
extern void T158f1341(T0* C);
/* ET_LOCAL_VARIABLE_LIST.put_first */
extern void T623f12(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_375 */
extern void T158f1340(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_374 */
extern void T158f1339(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.set_declared_type */
extern void T921f8(T0* C, T0* a1);
/* ET_LOCAL_COMMA_VARIABLE.type */
extern T0* T921f4(T0* C);
/* ET_LOCAL_VARIABLE.type */
extern T0* T662f4(T0* C);
/* ET_LOCAL_VARIABLE_LIST.first */
extern T0* T623f9(T0* C);
/* ET_LOCAL_VARIABLE_LIST.is_empty */
extern T1 T623f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_373 */
extern void T158f1338(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_372 */
extern void T158f1337(T0* C);
/* KL_SPECIAL_ROUTINES [ET_LOCAL_VARIABLE_LIST].resize */
extern T0* T659f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].resized_area */
extern T0* T624f3(T0* C, T6 a1);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].copy_data */
extern void T624f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].move_data */
extern void T624f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].overlapping_move */
extern void T624f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].non_overlapping_move */
extern void T624f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_local_variables */
extern T0* T158f718(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].force */
extern void T400f11(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].resize */
extern void T400f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].new_capacity */
extern T6 T400f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].extendible */
extern T1 T400f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_local_variables */
extern T0* T248f323(T0* C, T0* a1, T6 a2);
/* ET_LOCAL_VARIABLE_LIST.set_local_keyword */
extern void T623f13(T0* C, T0* a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern T0* T623c11(T6 a1);
/* ET_LOCAL_VARIABLE_LIST.make_with_capacity */
extern void T623f11p1(T0* C, T6 a1);
/* ET_LOCAL_VARIABLE_LIST.fixed_array */
extern unsigned char ge713os6093;
extern T0* ge713ov6093;
extern T0* T623f5(T0* C);
/* ET_TOKEN_CONSTANTS.local_keyword */
extern unsigned char ge781os12626;
extern T0* ge781ov12626;
extern T0* T157f589(T0* C);
/* ET_KEYWORD.make_local */
extern T0* T166c52(void);
/* ET_LOCAL_VARIABLE_LIST.tokens */
extern T0* T623f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_371 */
extern void T158f1336(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_370 */
extern void T158f1335(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_369 */
extern void T158f1334(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_368 */
extern void T158f1333(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_367 */
extern void T158f1332(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_366 */
extern void T158f1331(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].resize */
extern T0* T658f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].resized_area */
extern T0* T654f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].copy_data */
extern void T654f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].move_data */
extern void T654f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].overlapping_move */
extern void T654f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].non_overlapping_move */
extern void T654f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T654c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].make */
extern T0* T658f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT_ITEM].make_area */
extern T0* T1086c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_ITEM].default_create */
extern T0* T658c3(void);
/* ET_AST_FACTORY.new_formal_argument_semicolon */
extern T0* T248f221(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_formal_argument */
extern T0* T248f220(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_ARGUMENT.make */
extern T0* T214c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_365 */
extern void T158f1330(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_364 */
extern void T158f1329(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].resize */
extern T0* T657f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT].resized_area */
extern T0* T655f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT].copy_data */
extern void T655f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT].move_data */
extern void T655f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].overlapping_move */
extern void T655f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].non_overlapping_move */
extern void T655f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT].make */
extern T0* T655c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].make */
extern T0* T657f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_ARGUMENT].make_area */
extern T0* T1085c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT].default_create */
extern T0* T657c3(void);
/* ET_AST_FACTORY.new_formal_comma_argument */
extern T0* T248f219(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_COMMA_ARGUMENT.make */
extern T0* T920c8(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_363 */
extern void T158f1328(T0* C);
/* ET_AST_FACTORY.new_argument_name_comma */
extern T0* T248f218(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_362 */
extern void T158f1327(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.put_first */
extern void T209f14(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_361 */
extern void T158f1326(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_360 */
extern void T158f1325(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.set_declared_type */
extern void T920f9(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.first */
extern T0* T209f10(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.is_empty */
extern T1 T209f9(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_359 */
extern void T158f1324(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_358 */
extern void T158f1323(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_ARGUMENT_LIST].resize */
extern T0* T652f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].resized_area */
extern T0* T630f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].copy_data */
extern void T630f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].move_data */
extern void T630f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].overlapping_move */
extern void T630f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].non_overlapping_move */
extern void T630f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_formal_arguments */
extern T0* T158f706(T0* C, T0* a1, T0* a2, T6 a3);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].force */
extern void T399f12(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].resize */
extern void T399f14(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].new_capacity */
extern T6 T399f8(T0* C, T6 a1);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].extendible */
extern T1 T399f7(T0* C, T6 a1);
/* ET_AST_FACTORY.new_formal_arguments */
extern T0* T248f322(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern T0* T209c13(T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.make_with_capacity */
extern void T209f13p1(T0* C, T6 a1);
/* ET_FORMAL_ARGUMENT_LIST.fixed_array */
extern unsigned char ge702os6093;
extern T0* ge702ov6093;
extern T0* T209f6(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.tokens */
extern T0* T209f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_357 */
extern void T158f1322(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_356 */
extern void T158f1321(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_355 */
extern void T158f1320(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_354 */
extern void T158f1319(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_353 */
extern void T158f1318(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ALIAS_NAME].resize */
extern T0* T650f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ALIAS_NAME].resized_area */
extern T0* T648f3(T0* C, T6 a1);
/* SPECIAL [ET_ALIAS_NAME].copy_data */
extern void T648f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ALIAS_NAME].move_data */
extern void T648f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].overlapping_move */
extern void T648f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ALIAS_NAME].non_overlapping_move */
extern void T648f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_alias_name */
extern T0* T158f705(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_alias_free_name */
extern T0* T158f878(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_alias_free_name */
extern T0* T248f216(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_FREE_NAME.set_alias_keyword */
extern void T651f45(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.make_infix */
extern T0* T651c44(T0* a1);
/* KL_STRING_ROUTINES.case_insensitive_hash_code */
extern T6 T26f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.string_ */
extern T0* T651f7(T0* C);
/* ET_ALIAS_FREE_NAME.tokens */
extern T0* T651f5(T0* C);
/* ET_ALIAS_FREE_NAME.default_keyword */
extern unsigned char ge786os21203;
extern T0* ge786ov21203;
extern T0* T651f2(T0* C);
/* ET_TOKEN_CONSTANTS.alias_keyword */
extern unsigned char ge781os12593;
extern T0* ge781ov12593;
extern T0* T157f585(T0* C);
/* ET_KEYWORD.make_alias */
extern T0* T166c48(void);
/* ET_EIFFEL_PARSER.yy_do_action_352 */
extern void T158f1317(T0* C);
/* ET_AST_FACTORY.new_alias_bracket_name */
extern T0* T248f217(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.set_alias_keyword */
extern void T647f62(T0* C, T0* a1);
/* ET_ALIAS_NAME.make_bracket */
extern T0* T647c81(T0* a1);
/* ET_ALIAS_NAME.tokens */
extern T0* T647f5(T0* C);
/* ET_ALIAS_NAME.default_keyword */
extern T0* T647f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_351 */
extern void T158f1316(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_350 */
extern void T158f1315(T0* C);
/* ET_AST_FACTORY.new_alias_dotdot_name */
extern T0* T248f215(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_dotdot */
extern T0* T647c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_349 */
extern void T158f1314(T0* C);
/* ET_AST_FACTORY.new_alias_xor_name */
extern T0* T248f214(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_xor */
extern T0* T647c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_348 */
extern void T158f1313(T0* C);
/* ET_AST_FACTORY.new_alias_implies_name */
extern T0* T248f213(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_implies */
extern T0* T647c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_347 */
extern void T158f1312(T0* C);
/* ET_AST_FACTORY.new_alias_or_else_name */
extern T0* T248f212(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or_else */
extern T0* T647c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_346 */
extern void T158f1311(T0* C);
/* ET_AST_FACTORY.new_alias_or_name */
extern T0* T248f211(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_or */
extern T0* T647c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_345 */
extern void T158f1310(T0* C);
/* ET_AST_FACTORY.new_alias_and_then_name */
extern T0* T248f210(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and_then */
extern T0* T647c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_344 */
extern void T158f1309(T0* C);
/* ET_AST_FACTORY.new_alias_and_name */
extern T0* T248f209(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_and */
extern T0* T647c74(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_343 */
extern void T158f1308(T0* C);
/* ET_AST_FACTORY.new_alias_ge_name */
extern T0* T248f208(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_ge */
extern T0* T647c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_342 */
extern void T158f1307(T0* C);
/* ET_AST_FACTORY.new_alias_gt_name */
extern T0* T248f207(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_gt */
extern T0* T647c72(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_341 */
extern void T158f1306(T0* C);
/* ET_AST_FACTORY.new_alias_le_name */
extern T0* T248f206(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_le */
extern T0* T647c71(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_340 */
extern void T158f1305(T0* C);
/* ET_AST_FACTORY.new_alias_lt_name */
extern T0* T248f205(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_lt */
extern T0* T647c70(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_339 */
extern void T158f1304(T0* C);
/* ET_AST_FACTORY.new_alias_power_name */
extern T0* T248f204(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_power */
extern T0* T647c69(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_338 */
extern void T158f1303(T0* C);
/* ET_AST_FACTORY.new_alias_mod_name */
extern T0* T248f203(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_mod */
extern T0* T647c68(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_337 */
extern void T158f1302(T0* C);
/* ET_AST_FACTORY.new_alias_div_name */
extern T0* T248f202(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_div */
extern T0* T647c67(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_336 */
extern void T158f1301(T0* C);
/* ET_AST_FACTORY.new_alias_divide_name */
extern T0* T248f201(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_divide */
extern T0* T647c66(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_335 */
extern void T158f1300(T0* C);
/* ET_AST_FACTORY.new_alias_times_name */
extern T0* T248f200(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_times */
extern T0* T647c65(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_334 */
extern void T158f1299(T0* C);
/* ET_AST_FACTORY.new_alias_minus_name */
extern T0* T248f199(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_minus */
extern T0* T647c64(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_333 */
extern void T158f1298(T0* C);
/* ET_AST_FACTORY.new_alias_plus_name */
extern T0* T248f198(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_plus */
extern T0* T647c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_332 */
extern void T158f1297(T0* C);
/* ET_AST_FACTORY.new_alias_not_name */
extern T0* T248f197(T0* C, T0* a1, T0* a2);
/* ET_ALIAS_NAME.make_not */
extern T0* T647c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_331 */
extern void T158f1296(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].resize */
extern T0* T646f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].resized_area */
extern T0* T571f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].copy_data */
extern void T571f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].move_data */
extern void T571f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].overlapping_move */
extern void T571f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].non_overlapping_move */
extern void T571f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T571c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].make */
extern T0* T646f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTENDED_FEATURE_NAME].make_area */
extern T0* T1082c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTENDED_FEATURE_NAME].default_create */
extern T0* T646c3(void);
/* ET_AST_FACTORY.new_aliased_feature_name */
extern T0* T248f196(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.make */
extern T0* T649c6(T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_330 */
extern void T158f1295(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_329 */
extern void T158f1294(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME].resize */
extern T0* T641f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME].resized_area */
extern T0* T570f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME].copy_data */
extern void T570f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME].move_data */
extern void T570f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].overlapping_move */
extern void T570f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME].non_overlapping_move */
extern void T570f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_invalid_infix_name */
extern T0* T158f699(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_infix_free_name */
extern T0* T158f877(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_infix_free_name */
extern T0* T248f195(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.set_infix_keyword */
extern void T645f61(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.make */
extern T0* T645c60(T0* a1);
/* ET_INFIX_FREE_NAME.string_ */
extern T0* T645f7(T0* C);
/* ET_INFIX_FREE_NAME.tokens */
extern T0* T645f5(T0* C);
/* ET_INFIX_FREE_NAME.default_keyword */
extern unsigned char ge813os21203;
extern T0* ge813ov21203;
extern T0* T645f2(T0* C);
/* ET_TOKEN_CONSTANTS.infix_keyword */
extern unsigned char ge781os12620;
extern T0* ge781ov12620;
extern T0* T157f588(T0* C);
/* ET_KEYWORD.make_infix */
extern T0* T166c51(void);
/* ET_EIFFEL_PARSER.yy_do_action_328 */
extern void T158f1293(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_327 */
extern void T158f1292(T0* C);
/* ET_EIFFEL_PARSER.new_invalid_prefix_name */
extern T0* T158f698(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.new_prefix_free_name */
extern T0* T158f876(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_prefix_free_name */
extern T0* T248f177(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_FREE_NAME.set_prefix_keyword */
extern void T643f61(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.make */
extern T0* T643c60(T0* a1);
/* ET_PREFIX_FREE_NAME.string_ */
extern T0* T643f7(T0* C);
/* ET_PREFIX_FREE_NAME.tokens */
extern T0* T643f5(T0* C);
/* ET_PREFIX_FREE_NAME.default_keyword */
extern unsigned char ge823os21203;
extern T0* ge823ov21203;
extern T0* T643f2(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_keyword */
extern unsigned char ge781os12633;
extern T0* ge781ov12633;
extern T0* T157f595(T0* C);
/* ET_KEYWORD.make_prefix */
extern T0* T166c58(void);
/* ET_EIFFEL_PARSER.yy_do_action_326 */
extern void T158f1291(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_325 */
extern void T158f1290(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_324 */
extern void T158f1289(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_323 */
extern void T158f1288(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_322 */
extern void T158f1287(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_321 */
extern void T158f1286(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_320 */
extern void T158f1285(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_319 */
extern void T158f1284(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_318 */
extern void T158f1283(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_317 */
extern void T158f1282(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_316 */
extern void T158f1281(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_315 */
extern void T158f1280(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_314 */
extern void T158f1279(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_313 */
extern void T158f1278(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_312 */
extern void T158f1277(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_311 */
extern void T158f1276(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_310 */
extern void T158f1275(T0* C);
/* ET_AST_FACTORY.new_infix_xor_name */
extern T0* T248f194(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.set_infix_keyword */
extern void T644f74(T0* C, T0* a1);
/* ET_INFIX_NAME.make_xor */
extern T0* T644c90(T0* a1);
/* ET_INFIX_NAME.tokens */
extern T0* T644f5(T0* C);
/* ET_INFIX_NAME.default_keyword */
extern T0* T644f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_309 */
extern void T158f1274(T0* C);
/* ET_AST_FACTORY.new_infix_implies_name */
extern T0* T248f193(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_implies */
extern T0* T644c89(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_308 */
extern void T158f1273(T0* C);
/* ET_AST_FACTORY.new_infix_or_else_name */
extern T0* T248f192(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or_else */
extern T0* T644c88(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_307 */
extern void T158f1272(T0* C);
/* ET_AST_FACTORY.new_infix_or_name */
extern T0* T248f191(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_or */
extern T0* T644c87(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_306 */
extern void T158f1271(T0* C);
/* ET_AST_FACTORY.new_infix_and_then_name */
extern T0* T248f190(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and_then */
extern T0* T644c86(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_305 */
extern void T158f1270(T0* C);
/* ET_AST_FACTORY.new_infix_and_name */
extern T0* T248f189(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_and */
extern T0* T644c85(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_304 */
extern void T158f1269(T0* C);
/* ET_AST_FACTORY.new_infix_ge_name */
extern T0* T248f188(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_ge */
extern T0* T644c84(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_303 */
extern void T158f1268(T0* C);
/* ET_AST_FACTORY.new_infix_gt_name */
extern T0* T248f187(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_gt */
extern T0* T644c83(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_302 */
extern void T158f1267(T0* C);
/* ET_AST_FACTORY.new_infix_le_name */
extern T0* T248f186(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_le */
extern T0* T644c82(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_301 */
extern void T158f1266(T0* C);
/* ET_AST_FACTORY.new_infix_lt_name */
extern T0* T248f185(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_lt */
extern T0* T644c81(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_300 */
extern void T158f1265(T0* C);
/* ET_AST_FACTORY.new_infix_power_name */
extern T0* T248f184(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_power */
extern T0* T644c80(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_299 */
extern void T158f1264(T0* C);
/* ET_AST_FACTORY.new_infix_mod_name */
extern T0* T248f183(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_mod */
extern T0* T644c79(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_298 */
extern void T158f1263(T0* C);
/* ET_AST_FACTORY.new_infix_div_name */
extern T0* T248f182(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_div */
extern T0* T644c78(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_297 */
extern void T158f1262(T0* C);
/* ET_AST_FACTORY.new_infix_divide_name */
extern T0* T248f181(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_divide */
extern T0* T644c77(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_296 */
extern void T158f1261(T0* C);
/* ET_AST_FACTORY.new_infix_times_name */
extern T0* T248f180(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_times */
extern T0* T644c76(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_295 */
extern void T158f1260(T0* C);
/* ET_AST_FACTORY.new_infix_minus_name */
extern T0* T248f179(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_minus */
extern T0* T644c75(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_294 */
extern void T158f1259(T0* C);
/* ET_AST_FACTORY.new_infix_plus_name */
extern T0* T248f178(T0* C, T0* a1, T0* a2);
/* ET_INFIX_NAME.make_plus */
extern T0* T644c73(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_293 */
extern void T158f1258(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_292 */
extern void T158f1257(T0* C);
/* ET_AST_FACTORY.new_prefix_minus_name */
extern T0* T248f176(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.set_prefix_keyword */
extern void T642f60(T0* C, T0* a1);
/* ET_PREFIX_NAME.make_minus */
extern T0* T642c62(T0* a1);
/* ET_PREFIX_NAME.tokens */
extern T0* T642f5(T0* C);
/* ET_PREFIX_NAME.default_keyword */
extern T0* T642f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_291 */
extern void T158f1256(T0* C);
/* ET_AST_FACTORY.new_prefix_plus_name */
extern T0* T248f175(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_plus */
extern T0* T642c61(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_290 */
extern void T158f1255(T0* C);
/* ET_AST_FACTORY.new_prefix_not_name */
extern T0* T248f174(T0* C, T0* a1, T0* a2);
/* ET_PREFIX_NAME.make_not */
extern T0* T642c59(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_289 */
extern void T158f1254(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_288 */
extern void T158f1253(T0* C);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].resize */
extern T0* T640f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_ASSIGNER].resized_area */
extern T0* T617f3(T0* C, T6 a1);
/* SPECIAL [ET_ASSIGNER].copy_data */
extern void T617f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_ASSIGNER].move_data */
extern void T617f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].overlapping_move */
extern void T617f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].non_overlapping_move */
extern void T617f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_ASSIGNER].make */
extern T0* T617c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].make */
extern T0* T640f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_ASSIGNER].make_area */
extern T0* T1080c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_ASSIGNER].default_create */
extern T0* T640c3(void);
/* ET_AST_FACTORY.new_assigner */
extern T0* T248f173(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_287 */
extern void T158f1252(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_286 */
extern void T158f1251(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].resize */
extern T0* T639f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXTERNAL_ALIAS].resized_area */
extern T0* T635f3(T0* C, T6 a1);
/* SPECIAL [ET_EXTERNAL_ALIAS].copy_data */
extern void T635f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXTERNAL_ALIAS].move_data */
extern void T635f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].overlapping_move */
extern void T635f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].non_overlapping_move */
extern void T635f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXTERNAL_ALIAS].make */
extern T0* T635c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].make */
extern T0* T639f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXTERNAL_ALIAS].make_area */
extern T0* T1079c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXTERNAL_ALIAS].default_create */
extern T0* T639c3(void);
/* ET_AST_FACTORY.new_external_alias */
extern T0* T248f172(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_285 */
extern void T158f1250(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_284 */
extern void T158f1249(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_283 */
extern void T158f1248(T0* C);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].resize */
extern T0* T471f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SEMICOLON_SYMBOL].resized_area */
extern T0* T470f2(T0* C, T6 a1);
/* SPECIAL [ET_SEMICOLON_SYMBOL].copy_data */
extern void T470f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SEMICOLON_SYMBOL].move_data */
extern void T470f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].overlapping_move */
extern void T470f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].non_overlapping_move */
extern void T470f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SEMICOLON_SYMBOL].make */
extern T0* T470c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].make */
extern T0* T471f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SEMICOLON_SYMBOL].make_area */
extern T0* T1034c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SEMICOLON_SYMBOL].default_create */
extern T0* T471c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_282 */
extern void T158f1247(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_281 */
extern void T158f1246(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_280 */
extern void T158f1245(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PROCEDURE].resize */
extern T0* T636f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PROCEDURE].resized_area */
extern T0* T614f3(T0* C, T6 a1);
/* SPECIAL [ET_PROCEDURE].copy_data */
extern void T614f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PROCEDURE].move_data */
extern void T614f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].overlapping_move */
extern void T614f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PROCEDURE].non_overlapping_move */
extern void T614f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_procedure */
extern T0* T158f691(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EIFFEL_PARSER.set_builtin_procedure */
extern void T158f1746(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvkbu1a_error */
extern void T52f205(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkbu1a */
extern T0* T884c628(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T52f31(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbu1a_error */
extern void T28f205(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkbu1_error */
extern T1 T28f31(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_builtin_code */
extern void T638f71(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_procedure */
extern void T158f1781(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.out_feature_name */
extern unsigned char ge781os12532;
extern T0* ge781ov12532;
extern T0* T157f438(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_64_feature_name */
extern unsigned char ge781os12497;
extern T0* ge781ov12497;
extern T0* T157f554(T0* C);
/* ET_TOKEN_CONSTANTS.floor_real_32_feature_name */
extern unsigned char ge781os12496;
extern T0* ge781ov12496;
extern T0* T157f552(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_64_feature_name */
extern unsigned char ge781os12487;
extern T0* ge781ov12487;
extern T0* T157f550(T0* C);
/* ET_TOKEN_CONSTANTS.ceiling_real_32_feature_name */
extern unsigned char ge781os12486;
extern T0* ge781ov12486;
extern T0* T157f548(T0* C);
/* ET_TOKEN_CONSTANTS.to_double_feature_name */
extern unsigned char ge781os12552;
extern T0* ge781ov12552;
extern T0* T157f499(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_real_feature_name */
extern unsigned char ge781os12560;
extern T0* ge781ov12560;
extern T0* T157f545(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_64_feature_name */
extern unsigned char ge781os12559;
extern T0* ge781ov12559;
extern T0* T157f543(T0* C);
/* ET_TOKEN_CONSTANTS.truncated_to_integer_feature_name */
extern unsigned char ge781os12558;
extern T0* ge781ov12558;
extern T0* T157f541(T0* C);
/* ET_TOKEN_CONSTANTS.infix_lt_feature_name */
extern unsigned char ge781os12510;
extern T0* ge781ov12510;
extern T0* T157f489(T0* C);
/* ET_REGULAR_MANIFEST_STRING.make */
extern T0* T479c31(T0* a1);
/* ET_REGULAR_MANIFEST_STRING.make_leaf */
extern void T479f33(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_plus_feature_name */
extern unsigned char ge781os12537;
extern T0* ge781ov12537;
extern T0* T157f529(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_minus_feature_name */
extern unsigned char ge781os12535;
extern T0* ge781ov12535;
extern T0* T157f487(T0* C);
/* ET_TOKEN_CONSTANTS.infix_power_feature_name */
extern unsigned char ge781os12516;
extern T0* ge781ov12516;
extern T0* T157f485(T0* C);
/* ET_TOKEN_CONSTANTS.infix_divide_feature_name */
extern unsigned char ge781os12505;
extern T0* ge781ov12505;
extern T0* T157f479(T0* C);
/* ET_TOKEN_CONSTANTS.infix_times_feature_name */
extern unsigned char ge781os12517;
extern T0* ge781ov12517;
extern T0* T157f477(T0* C);
/* ET_TOKEN_CONSTANTS.infix_minus_feature_name */
extern unsigned char ge781os12511;
extern T0* ge781ov12511;
extern T0* T157f475(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvkbs0a_error */
extern void T52f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvkbs0a */
extern T0* T884c629(T0* a1, T0* a2, T0* a3, T0* a4);
/* ARRAY [ET_TYPE].item */
extern T0* T916f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T52f32(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkbs0a_error */
extern void T28f206(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvkbs_error */
extern T1 T28f32(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.like_current */
extern unsigned char ge781os12565;
extern T0* ge781ov12565;
extern T0* T157f368(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_feature */
extern T6 T157f405(T0* C, T6 a1, T6 a2);
/* ET_TOKEN_CONSTANTS.infix_plus_feature_name */
extern unsigned char ge781os12515;
extern T0* ge781ov12515;
extern T0* T157f434(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_procedure */
extern void T158f1780(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_TOKEN_CONSTANTS.item_feature_name */
extern unsigned char ge781os12527;
extern T0* ge781ov12527;
extern T0* T157f33(T0* C);
/* ET_TOKEN_CONSTANTS.set_item_feature_name */
extern unsigned char ge781os12543;
extern T0* ge781ov12543;
extern T0* T157f406(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_procedure */
extern void T158f1779(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.bit_not_feature_name */
extern unsigned char ge781os12479;
extern T0* ge781ov12479;
extern T0* T157f527(T0* C);
/* ET_TOKEN_CONSTANTS.bit_xor_feature_name */
extern unsigned char ge781os12483;
extern T0* ge781ov12483;
extern T0* T157f525(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_right_feature_name */
extern unsigned char ge781os12482;
extern T0* ge781ov12482;
extern T0* T157f523(T0* C);
/* ET_TOKEN_CONSTANTS.bit_shift_left_feature_name */
extern unsigned char ge781os12481;
extern T0* ge781ov12481;
extern T0* T157f521(T0* C);
/* ET_TOKEN_CONSTANTS.bit_and_feature_name */
extern unsigned char ge781os12478;
extern T0* ge781ov12478;
extern T0* T157f519(T0* C);
/* ET_TOKEN_CONSTANTS.bit_or_feature_name */
extern unsigned char ge781os12480;
extern T0* ge781ov12480;
extern T0* T157f517(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_64_feature_name */
extern unsigned char ge781os12477;
extern T0* ge781ov12477;
extern T0* T157f515(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_32_feature_name */
extern unsigned char ge781os12476;
extern T0* ge781ov12476;
extern T0* T157f513(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_16_feature_name */
extern unsigned char ge781os12475;
extern T0* ge781ov12475;
extern T0* T157f511(T0* C);
/* ET_TOKEN_CONSTANTS.as_integer_8_feature_name */
extern unsigned char ge781os12474;
extern T0* ge781ov12474;
extern T0* T157f509(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_64_feature_name */
extern unsigned char ge781os12473;
extern T0* ge781ov12473;
extern T0* T157f507(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_32_feature_name */
extern unsigned char ge781os12472;
extern T0* ge781ov12472;
extern T0* T157f505(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_16_feature_name */
extern unsigned char ge781os12471;
extern T0* ge781ov12471;
extern T0* T157f503(T0* C);
/* ET_TOKEN_CONSTANTS.as_natural_8_feature_name */
extern unsigned char ge781os12470;
extern T0* ge781ov12470;
extern T0* T157f501(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_64_feature_name */
extern unsigned char ge781os12557;
extern T0* ge781ov12557;
extern T0* T157f497(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_32_feature_name */
extern unsigned char ge781os12556;
extern T0* ge781ov12556;
extern T0* T157f495(T0* C);
/* ET_TOKEN_CONSTANTS.to_real_feature_name */
extern unsigned char ge781os12554;
extern T0* ge781ov12554;
extern T0* T157f493(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_32_feature_name */
extern unsigned char ge781os12551;
extern T0* ge781ov12551;
extern T0* T157f414(T0* C);
/* ET_TOKEN_CONSTANTS.to_character_8_feature_name */
extern unsigned char ge781os12550;
extern T0* ge781ov12550;
extern T0* T157f412(T0* C);
/* ET_TOKEN_CONSTANTS.infix_mod_feature_name */
extern unsigned char ge781os12512;
extern T0* ge781ov12512;
extern T0* T157f483(T0* C);
/* ET_TOKEN_CONSTANTS.infix_div_feature_name */
extern unsigned char ge781os12504;
extern T0* ge781ov12504;
extern T0* T157f481(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_procedure */
extern void T158f1778(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_procedure */
extern void T158f1777(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.builtin_function_feature */
extern T6 T157f39(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_procedure_procedure */
extern void T158f1776(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_2 */
extern unsigned char ge781os12567;
extern T0* ge781ov12567;
extern T0* T157f470(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_procedure_feature */
extern T6 T157f44(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.call_feature_name */
extern unsigned char ge781os12485;
extern T0* ge781ov12485;
extern T0* T157f41(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_platform_procedure */
extern void T158f1775(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.wide_character_bytes_feature_name */
extern unsigned char ge781os12564;
extern T0* ge781ov12564;
extern T0* T157f468(T0* C);
/* ET_TOKEN_CONSTANTS.is_thread_capable_feature_name */
extern unsigned char ge781os12523;
extern T0* ge781ov12523;
extern T0* T157f466(T0* C);
/* ET_TOKEN_CONSTANTS.real_bytes_feature_name */
extern unsigned char ge781os12540;
extern T0* ge781ov12540;
extern T0* T157f464(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_bytes_feature_name */
extern unsigned char ge781os12533;
extern T0* ge781ov12533;
extern T0* T157f462(T0* C);
/* ET_TOKEN_CONSTANTS.integer_bytes_feature_name */
extern unsigned char ge781os12519;
extern T0* ge781ov12519;
extern T0* T157f460(T0* C);
/* ET_TOKEN_CONSTANTS.character_bytes_feature_name */
extern unsigned char ge781os12488;
extern T0* ge781ov12488;
extern T0* T157f458(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_bytes_feature_name */
extern unsigned char ge781os12484;
extern T0* ge781ov12484;
extern T0* T157f456(T0* C);
/* ET_TOKEN_CONSTANTS.is_windows_feature_name */
extern unsigned char ge781os12526;
extern T0* ge781ov12526;
extern T0* T157f454(T0* C);
/* ET_TOKEN_CONSTANTS.is_vms_feature_name */
extern unsigned char ge781os12525;
extern T0* ge781ov12525;
extern T0* T157f452(T0* C);
/* ET_TOKEN_CONSTANTS.is_unix_feature_name */
extern unsigned char ge781os12524;
extern T0* ge781ov12524;
extern T0* T157f450(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_platform_feature */
extern T6 T157f449(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.is_dotnet_feature_name */
extern unsigned char ge781os12522;
extern T0* ge781ov12522;
extern T0* T157f447(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_arguments_procedure */
extern void T158f1774(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.argument_count_feature_name */
extern unsigned char ge781os12469;
extern T0* ge781ov12469;
extern T0* T157f445(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_arguments_feature */
extern T6 T157f444(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.argument_feature_name */
extern unsigned char ge781os12468;
extern T0* ge781ov12468;
extern T0* T157f442(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_procedure */
extern void T158f1773(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.hash_code_feature_name */
extern unsigned char ge781os12500;
extern T0* ge781ov12500;
extern T0* T157f440(T0* C);
/* ET_TOKEN_CONSTANTS.to_integer_32_feature_name */
extern unsigned char ge781os12553;
extern T0* ge781ov12553;
extern T0* T157f436(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_procedure */
extern void T158f1772(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_procedure */
extern void T158f1771(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.infix_xor_feature_name */
extern unsigned char ge781os12518;
extern T0* ge781ov12518;
extern T0* T157f431(T0* C);
/* ET_TOKEN_CONSTANTS.prefix_not_feature_name */
extern unsigned char ge781os12536;
extern T0* ge781ov12536;
extern T0* T157f427(T0* C);
/* ET_TOKEN_CONSTANTS.infix_implies_feature_name */
extern unsigned char ge781os12508;
extern T0* ge781ov12508;
extern T0* T157f429(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_else_feature_name */
extern unsigned char ge781os12514;
extern T0* ge781ov12514;
extern T0* T157f425(T0* C);
/* ET_TOKEN_CONSTANTS.infix_or_feature_name */
extern unsigned char ge781os12513;
extern T0* ge781ov12513;
extern T0* T157f423(T0* C);
/* ET_TOKEN_CONSTANTS.infix_and_then_feature_name */
extern unsigned char ge781os12502;
extern T0* ge781ov12502;
extern T0* T157f421(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_boolean_feature */
extern T6 T157f417(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.infix_and_feature_name */
extern unsigned char ge781os12501;
extern T0* ge781ov12501;
extern T0* T157f419(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_procedure */
extern void T158f1770(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_procedure */
extern void T158f1769(T0* C, T0* a1, T6 a2);
/* ET_TOKEN_CONSTANTS.natural_32_code_feature_name */
extern unsigned char ge781os12531;
extern T0* ge781ov12531;
extern T0* T157f410(T0* C);
/* ET_TOKEN_CONSTANTS.code_feature_name */
extern unsigned char ge781os12489;
extern T0* ge781ov12489;
extern T0* T157f408(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_procedure */
extern void T158f1768(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_procedure */
extern void T158f1767(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.aliased_resized_area_feature_name */
extern unsigned char ge781os12466;
extern T0* ge781ov12466;
extern T0* T157f399(T0* C);
/* ET_TOKEN_CONSTANTS.element_size_feature_name */
extern unsigned char ge781os12495;
extern T0* ge781ov12495;
extern T0* T157f397(T0* C);
/* ET_TOKEN_CONSTANTS.formal_parameter_1 */
extern unsigned char ge781os12566;
extern T0* ge781ov12566;
extern T0* T157f395(T0* C);
/* ET_TOKEN_CONSTANTS.put_feature_name */
extern unsigned char ge781os12538;
extern T0* ge781ov12538;
extern T0* T157f36(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_special_feature */
extern T6 T157f394(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.make_feature_name */
extern unsigned char ge781os12530;
extern T0* ge781ov12530;
extern T0* T157f401(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_type_procedure */
extern void T158f1766(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.type_class_name */
extern unsigned char ge781os12438;
extern T0* ge781ov12438;
extern T0* T157f71(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_type_feature */
extern T6 T157f392(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.generating_type_feature_name */
extern unsigned char ge781os12498;
extern T0* ge781ov12498;
extern T0* T157f377(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_any_procedure */
extern void T158f1765(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.deep_twin_feature_name */
extern unsigned char ge781os12493;
extern T0* ge781ov12493;
extern T0* T157f386(T0* C);
/* ET_TOKEN_CONSTANTS.is_deep_equal_feature_name */
extern unsigned char ge781os12521;
extern T0* ge781ov12521;
extern T0* T157f384(T0* C);
/* ET_TOKEN_CONSTANTS.standard_twin_feature_name */
extern unsigned char ge781os12547;
extern T0* ge781ov12547;
extern T0* T157f382(T0* C);
/* ET_TOKEN_CONSTANTS.tagged_out_feature_name */
extern unsigned char ge781os12548;
extern T0* ge781ov12548;
extern T0* T157f380(T0* C);
/* ET_TOKEN_CONSTANTS.generator_feature_name */
extern unsigned char ge781os12499;
extern T0* ge781ov12499;
extern T0* T157f375(T0* C);
/* ET_TOKEN_CONSTANTS.conforms_to_feature_name */
extern unsigned char ge781os12490;
extern T0* ge781ov12490;
extern T0* T157f373(T0* C);
/* ET_TOKEN_CONSTANTS.same_type_feature_name */
extern unsigned char ge781os12542;
extern T0* ge781ov12542;
extern T0* T157f371(T0* C);
/* ET_TOKEN_CONSTANTS.standard_is_equal_feature_name */
extern unsigned char ge781os12546;
extern T0* ge781ov12546;
extern T0* T157f369(T0* C);
/* ET_TOKEN_CONSTANTS.twin_feature_name */
extern unsigned char ge781os12561;
extern T0* ge781ov12561;
extern T0* T157f365(T0* C);
/* ET_TOKEN_CONSTANTS.copy_feature_name */
extern unsigned char ge781os12491;
extern T0* ge781ov12491;
extern T0* T157f179(T0* C);
/* ET_TOKEN_CONSTANTS.builtin_any_feature */
extern T6 T157f367(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.standard_copy_feature_name */
extern unsigned char ge781os12545;
extern T0* ge781ov12545;
extern T0* T157f388(T0* C);
/* ET_AST_FACTORY.new_external_procedure */
extern T0* T248f321(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14);
/* ET_EXTERNAL_PROCEDURE.set_first_indexing */
extern void T638f78(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_alias_clause */
extern void T638f76(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_postconditions */
extern void T638f75(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_preconditions */
extern void T638f74(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_obsolete_message */
extern void T638f73(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_is_keyword */
extern void T638f72(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.is_keyword */
extern unsigned char ge781os12624;
extern T0* ge781ov12624;
extern T0* T157f579(T0* C);
/* ET_KEYWORD.make_is */
extern T0* T166c42(void);
/* ET_EXTERNAL_PROCEDURE.make */
extern T0* T638c70(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.tokens */
extern T0* T638f8(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_279 */
extern void T158f1244(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_278 */
extern void T158f1243(T0* C);
/* ET_AST_FACTORY.new_deferred_procedure */
extern T0* T248f171(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13);
/* ET_DEFERRED_PROCEDURE.set_first_indexing */
extern void T302f73(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_postconditions */
extern void T302f71(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_preconditions */
extern void T302f70(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_obsolete_message */
extern void T302f69(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_is_keyword */
extern void T302f68(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_277 */
extern void T158f1242(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_276 */
extern void T158f1241(T0* C);
/* ET_AST_FACTORY.new_once_procedure */
extern T0* T248f170(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_ONCE_PROCEDURE.set_first_indexing */
extern void T637f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_rescue_clause */
extern void T637f75(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_postconditions */
extern void T637f74(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_compound */
extern void T637f73(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_locals */
extern void T637f72(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_preconditions */
extern void T637f71(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_obsolete_message */
extern void T637f70(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_is_keyword */
extern void T637f69(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.make */
extern T0* T637c68(T0* a1, T0* a2, T0* a3);
/* ET_ONCE_PROCEDURE.tokens */
extern T0* T637f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_275 */
extern void T158f1240(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_274 */
extern void T158f1239(T0* C);
/* ET_AST_FACTORY.new_do_procedure */
extern T0* T248f169(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DO_PROCEDURE.set_first_indexing */
extern void T297f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_rescue_clause */
extern void T297f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_postconditions */
extern void T297f74(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_compound */
extern void T297f73(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_locals */
extern void T297f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_preconditions */
extern void T297f71(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_obsolete_message */
extern void T297f70(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_is_keyword */
extern void T297f69(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_273 */
extern void T158f1238(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_272 */
extern void T158f1237(T0* C);
/* KL_SPECIAL_ROUTINES [ET_QUERY].resize */
extern T0* T618f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUERY].resized_area */
extern T0* T613f3(T0* C, T6 a1);
/* SPECIAL [ET_QUERY].copy_data */
extern void T613f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUERY].move_data */
extern void T613f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].overlapping_move */
extern void T613f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUERY].non_overlapping_move */
extern void T613f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.new_external_function */
extern T0* T158f688(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EIFFEL_PARSER.set_builtin_function */
extern void T158f1745(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_builtin_code */
extern void T163f72(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_function */
extern void T158f1764(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_real_ref_function */
extern void T158f1763(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_function */
extern void T158f1762(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_integer_ref_function */
extern void T158f1761(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_function_function */
extern void T158f1760(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.formal_parameter_3 */
extern unsigned char ge781os12568;
extern T0* ge781ov12568;
extern T0* T157f471(T0* C);
/* ET_EIFFEL_PARSER.set_builtin_procedure_function */
extern void T158f1759(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_platform_function */
extern void T158f1758(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_arguments_function */
extern void T158f1757(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_function */
extern void T158f1756(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_pointer_ref_function */
extern void T158f1755(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_function */
extern void T158f1754(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_boolean_ref_function */
extern void T158f1753(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_function */
extern void T158f1752(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.set_builtin_sized_character_ref_function */
extern void T158f1751(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_EIFFEL_PARSER.set_builtin_special_function */
extern void T158f1750(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_type_function */
extern void T158f1749(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_builtin_any_function */
extern void T158f1748(T0* C, T0* a1);
/* ET_AST_FACTORY.new_external_function */
extern T0* T248f320(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16);
/* ET_EXTERNAL_FUNCTION.set_first_indexing */
extern void T163f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_alias_clause */
extern void T163f78(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_postconditions */
extern void T163f77(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_preconditions */
extern void T163f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_obsolete_message */
extern void T163f75(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_assigner */
extern void T163f74(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_is_keyword */
extern void T163f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.make */
extern T0* T163c71(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_EXTERNAL_FUNCTION.tokens */
extern T0* T163f10(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_271 */
extern void T158f1236(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_270 */
extern void T158f1235(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_269 */
extern void T158f1234(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_268 */
extern void T158f1233(T0* C);
/* ET_AST_FACTORY.new_deferred_function */
extern T0* T248f167(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15);
/* ET_DEFERRED_FUNCTION.set_first_indexing */
extern void T632f75(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_postconditions */
extern void T632f73(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_preconditions */
extern void T632f72(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_obsolete_message */
extern void T632f71(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_assigner */
extern void T632f70(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_is_keyword */
extern void T632f69(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.make */
extern T0* T632c68(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DEFERRED_FUNCTION.tokens */
extern T0* T632f2(T0* C);
/* ET_DEFERRED_FUNCTION.make */
extern void T632f68p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EIFFEL_PARSER.yy_do_action_267 */
extern void T158f1232(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_266 */
extern void T158f1231(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_265 */
extern void T158f1230(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_264 */
extern void T158f1229(T0* C);
/* ET_AST_FACTORY.new_once_function */
extern T0* T248f166(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_ONCE_FUNCTION.set_first_indexing */
extern void T631f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_rescue_clause */
extern void T631f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_postconditions */
extern void T631f76(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_compound */
extern void T631f75(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_locals */
extern void T631f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_preconditions */
extern void T631f73(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_obsolete_message */
extern void T631f72(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_assigner */
extern void T631f71(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_is_keyword */
extern void T631f70(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.make */
extern T0* T631c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ONCE_FUNCTION.tokens */
extern T0* T631f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_263 */
extern void T158f1228(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_262 */
extern void T158f1227(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_261 */
extern void T158f1226(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_260 */
extern void T158f1225(T0* C);
/* ET_AST_FACTORY.new_do_function */
extern T0* T248f165(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9, T0* a10, T0* a11, T0* a12, T0* a13, T0* a14, T0* a15, T0* a16, T0* a17);
/* ET_DO_FUNCTION.set_first_indexing */
extern void T629f79(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_rescue_clause */
extern void T629f77(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_postconditions */
extern void T629f76(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_compound */
extern void T629f75(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_locals */
extern void T629f74(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_preconditions */
extern void T629f73(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_obsolete_message */
extern void T629f72(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_assigner */
extern void T629f71(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_is_keyword */
extern void T629f70(T0* C, T0* a1);
/* ET_DO_FUNCTION.make */
extern T0* T629c69(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DO_FUNCTION.tokens */
extern T0* T629f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_259 */
extern void T158f1224(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_258 */
extern void T158f1223(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_257 */
extern void T158f1222(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_256 */
extern void T158f1221(T0* C);
/* ET_AST_FACTORY.new_unique_attribute */
extern T0* T248f164(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_UNIQUE_ATTRIBUTE.set_assigner */
extern void T225f68(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.make */
extern T0* T225c67(T0* a1, T0* a2, T0* a3);
/* ET_TOKEN_CONSTANTS.unique_keyword */
extern unsigned char ge781os12646;
extern T0* ge781ov12646;
extern T0* T157f743(T0* C);
/* ET_KEYWORD.make_unique */
extern T0* T166c34(void);
/* ET_UNIQUE_ATTRIBUTE.tokens */
extern T0* T225f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_255 */
extern void T158f1220(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_254 */
extern void T158f1219(T0* C);
/* ET_AST_FACTORY.new_constant_attribute */
extern T0* T248f163(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_CONSTANT_ATTRIBUTE.set_assigner */
extern void T223f68(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.make */
extern T0* T223c67(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTANT_ATTRIBUTE.tokens */
extern T0* T223f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_253 */
extern void T158f1218(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_252 */
extern void T158f1217(T0* C);
/* ET_AST_FACTORY.new_attribute */
extern T0* T248f162(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ATTRIBUTE.set_assigner */
extern void T226f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.make */
extern T0* T226c65(T0* a1, T0* a2, T0* a3);
/* ET_ATTRIBUTE.tokens */
extern T0* T226f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_251 */
extern void T158f1216(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_250 */
extern void T158f1215(T0* C);
/* ET_EIFFEL_PARSER.register_procedure_synonym */
extern void T158f1733(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].back */
extern void T238f24(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_back */
extern void T238f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].add_traversing_cursor */
extern void T238f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_next_cursor */
extern void T866f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_traversing_cursor */
extern void T238f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].set_position */
extern void T866f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left */
extern void T238f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_left_cursor */
extern void T238f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put */
extern void T238f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_right */
extern void T238f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_right */
extern void T238f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].put_last */
extern void T238f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].index */
extern T6 T866f4(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_index */
extern T6 T238f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].resize */
extern void T238f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].new_capacity */
extern T6 T238f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].extendible */
extern T1 T238f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].forth */
extern void T238f22(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_forth */
extern void T238f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].before */
extern T1 T238f3(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_before */
extern T1 T238f6(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.register_feature */
extern void T51f170(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.register_feature */
extern void T48f190(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_procedure_synonym */
extern T0* T158f676(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_PROCEDURE.is_builtin */
extern T1 T638f34(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_249 */
extern void T158f1214(T0* C);
/* ET_AST_FACTORY.new_extended_feature_name_comma */
extern T0* T248f160(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_248 */
extern void T158f1213(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_247 */
extern void T158f1212(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_246 */
extern void T158f1211(T0* C);
/* ET_EIFFEL_PARSER.register_procedure */
extern void T158f1732(T0* C, T0* a1);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].wipe_out */
extern void T400f10(T0* C);
/* DS_ARRAYED_STACK [ET_LOCAL_VARIABLE_LIST].clear_items */
extern void T400f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].wipe_out */
extern void T399f10(T0* C);
/* DS_ARRAYED_STACK [ET_FORMAL_ARGUMENT_LIST].clear_items */
extern void T399f13(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].finish */
extern void T238f21(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_finish */
extern void T238f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PROCEDURE].off */
extern T1 T866f2(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_off */
extern T1 T238f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].cursor_after */
extern T1 T238f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].force_last */
extern void T238f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_245 */
extern void T158f1210(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_244 */
extern void T158f1209(T0* C);
/* ET_EIFFEL_PARSER.register_query_synonym */
extern void T158f1731(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].back */
extern void T240f24(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_back */
extern void T240f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].add_traversing_cursor */
extern void T240f32(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_next_cursor */
extern void T870f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_traversing_cursor */
extern void T240f33(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].set_position */
extern void T870f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left */
extern void T240f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_left_cursor */
extern void T240f30(T0* C, T0* a1, T0* a2);
/* DS_ARRAYED_LIST [ET_QUERY].put */
extern void T240f34(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_right */
extern void T240f37(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_right */
extern void T240f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].put_last */
extern void T240f35(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].index */
extern T6 T870f4(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_index */
extern T6 T240f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].resize */
extern void T240f27(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].new_capacity */
extern T6 T240f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].extendible */
extern T1 T240f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].forth */
extern void T240f22(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_forth */
extern void T240f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].before */
extern T1 T240f3(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_before */
extern T1 T240f6(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_query_synonym */
extern T0* T158f674(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_builtin */
extern T1 T163f32(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_243 */
extern void T158f1208(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_242 */
extern void T158f1207(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_241 */
extern void T158f1206(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_240 */
extern void T158f1205(T0* C);
/* ET_EIFFEL_PARSER.register_query */
extern void T158f1730(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].finish */
extern void T240f21(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_finish */
extern void T240f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_QUERY].off */
extern T1 T870f2(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_off */
extern T1 T240f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].cursor_after */
extern T1 T240f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].force_last */
extern void T240f20(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_239 */
extern void T158f1204(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_238 */
extern void T158f1203(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_237 */
extern void T158f1202(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_236 */
extern void T158f1201(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_235 */
extern void T158f1200(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_234 */
extern void T158f1199(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].resize */
extern T0* T612f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE].resized_area */
extern T0* T611f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE].copy_data */
extern void T611f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE].move_data */
extern void T611f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].overlapping_move */
extern void T611f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].non_overlapping_move */
extern void T611f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE].make */
extern T0* T611c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].make */
extern T0* T612f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE].make_area */
extern T0* T1072c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE].default_create */
extern T0* T612c3(void);
/* ET_AST_FACTORY.new_feature_clause */
extern T0* T248f159(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CLAUSE.make */
extern T0* T415c4(T0* a1);
/* ET_TOKEN_CONSTANTS.feature_keyword */
extern unsigned char ge781os12615;
extern T0* ge781ov12615;
extern T0* T157f601(T0* C);
/* ET_KEYWORD.make_feature */
extern T0* T166c64(void);
/* ET_FEATURE_CLAUSE.tokens */
extern T0* T415f2(T0* C);
/* ET_AST_FACTORY.new_any_clients */
extern T0* T248f151(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_233 */
extern void T158f1198(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_232 */
extern void T158f1197(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_231 */
extern void T158f1196(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_230 */
extern void T158f1195(T0* C);
/* ET_FEATURE_CLAUSE_LIST.put_first */
extern void T501f5(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_229 */
extern void T158f1194(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].resize */
extern T0* T610f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].resized_area */
extern T0* T502f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].copy_data */
extern void T502f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].move_data */
extern void T502f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].overlapping_move */
extern void T502f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].non_overlapping_move */
extern void T502f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T502c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].make */
extern T0* T610f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_CLAUSE_LIST].make_area */
extern T0* T1071c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_CLAUSE_LIST].default_create */
extern T0* T610c3(void);
/* ET_AST_FACTORY.new_feature_clauses */
extern T0* T248f158(T0* C, T6 a1);
/* ET_FEATURE_CLAUSE_LIST.make_with_capacity */
extern T0* T501c4(T6 a1);
/* ET_FEATURE_CLAUSE_LIST.fixed_array */
extern unsigned char ge567os6093;
extern T0* ge567ov6093;
extern T0* T501f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_228 */
extern void T158f1193(T0* C);
/* ET_EIFFEL_PARSER.set_class_features */
extern void T158f1729(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].wipe_out */
extern void T238f19(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].clear_items */
extern void T238f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_all_cursors_after */
extern void T238f25(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].wipe_out */
extern void T240f19(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].clear_items */
extern void T240f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_all_cursors_after */
extern void T240f25(T0* C);
/* ET_CLASS.set_procedures */
extern void T55f171(T0* C, T0* a1);
/* ET_PROCEDURE_LIST.set_declared_count */
extern void T148f10(T0* C, T6 a1);
/* ET_PROCEDURE_LIST.put_first */
extern void T148f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].item */
extern T0* T238f2(T0* C, T6 a1);
/* ET_CLASS.set_queries */
extern void T55f170(T0* C, T0* a1);
/* ET_QUERY_LIST.set_declared_count */
extern void T146f10(T0* C, T6 a1);
/* ET_QUERY_LIST.put_first */
extern void T146f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_QUERY].item */
extern T0* T240f2(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_227 */
extern void T158f1192(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_226 */
extern void T158f1191(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_225 */
extern void T158f1190(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].resize */
extern T0* T609f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_ITEM].resized_area */
extern T0* T608f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_ITEM].copy_data */
extern void T608f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_ITEM].move_data */
extern void T608f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].overlapping_move */
extern void T608f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].non_overlapping_move */
extern void T608f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_ITEM].make */
extern T0* T608c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].make */
extern T0* T609f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_ITEM].make_area */
extern T0* T1070c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_ITEM].default_create */
extern T0* T609c3(void);
/* ET_AST_FACTORY.new_type_comma */
extern T0* T248f157(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_224 */
extern void T158f1189(T0* C);
/* ET_BRACED_TYPE_LIST.put_first */
extern void T919f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_223 */
extern void T158f1188(T0* C);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].resize */
extern T0* T605f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_TYPE_LIST].resized_area */
extern T0* T601f3(T0* C, T6 a1);
/* SPECIAL [ET_TYPE_LIST].copy_data */
extern void T601f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_TYPE_LIST].move_data */
extern void T601f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].overlapping_move */
extern void T601f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].non_overlapping_move */
extern void T601f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_TYPE_LIST].make */
extern T0* T601c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].make */
extern T0* T605f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_TYPE_LIST].make_area */
extern T0* T1069c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_TYPE_LIST].default_create */
extern T0* T605c3(void);
/* ET_AST_FACTORY.new_convert_types */
extern T0* T248f156(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_BRACED_TYPE_LIST.set_left_brace */
extern void T919f10(T0* C, T0* a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern T0* T919c8(T6 a1);
/* ET_BRACED_TYPE_LIST.make_with_capacity */
extern void T919f8p1(T0* C, T6 a1);
/* ET_BRACED_TYPE_LIST.fixed_array */
extern unsigned char ge872os6093;
extern T0* ge872ov6093;
extern T0* T919f6(T0* C);
/* ET_BRACED_TYPE_LIST.tokens */
extern T0* T919f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_222 */
extern void T158f1187(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_221 */
extern void T158f1186(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_220 */
extern void T158f1185(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_219 */
extern void T158f1184(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].resize */
extern T0* T603f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE].resized_area */
extern T0* T596f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE].copy_data */
extern void T596f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE].move_data */
extern void T596f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].overlapping_move */
extern void T596f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].non_overlapping_move */
extern void T596f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE].make */
extern T0* T596c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].make */
extern T0* T603f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE].make_area */
extern T0* T1068c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE].default_create */
extern T0* T603c3(void);
/* ET_AST_FACTORY.new_convert_procedure */
extern T0* T248f155(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_PROCEDURE.make */
extern T0* T604c9(T0* a1, T0* a2);
/* ET_CONVERT_PROCEDURE.tokens */
extern T0* T604f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_218 */
extern void T158f1183(T0* C);
/* ET_AST_FACTORY.new_convert_function */
extern T0* T248f154(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_FUNCTION.make */
extern T0* T602c8(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.colon_symbol */
extern unsigned char ge781os12574;
extern T0* ge781ov12574;
extern T0* T157f566(T0* C);
/* ET_SYMBOL.make_colon */
extern T0* T425c63(void);
/* ET_CONVERT_FUNCTION.tokens */
extern T0* T602f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_217 */
extern void T158f1182(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].resize */
extern T0* T599f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].resized_area */
extern T0* T598f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].copy_data */
extern void T598f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].move_data */
extern void T598f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].overlapping_move */
extern void T598f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].non_overlapping_move */
extern void T598f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T598c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].make */
extern T0* T599f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_ITEM].make_area */
extern T0* T1067c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_ITEM].default_create */
extern T0* T599c3(void);
/* ET_AST_FACTORY.new_convert_feature_comma */
extern T0* T248f153(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_216 */
extern void T158f1181(T0* C);
/* ET_CONVERT_FEATURE_LIST.put_first */
extern void T499f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_215 */
extern void T158f1180(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].resize */
extern T0* T594f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].resized_area */
extern T0* T500f3(T0* C, T6 a1);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].copy_data */
extern void T500f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].move_data */
extern void T500f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].overlapping_move */
extern void T500f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].non_overlapping_move */
extern void T500f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].make */
extern T0* T500c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].make */
extern T0* T594f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONVERT_FEATURE_LIST].make_area */
extern T0* T1066c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONVERT_FEATURE_LIST].default_create */
extern T0* T594c3(void);
/* ET_AST_FACTORY.new_convert_features */
extern T0* T248f152(T0* C, T0* a1, T6 a2);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern T0* T499c8(T6 a1);
/* ET_CONVERT_FEATURE_LIST.make_with_capacity */
extern void T499f8p1(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.fixed_array */
extern unsigned char ge558os6093;
extern T0* ge558ov6093;
extern T0* T499f5(T0* C);
/* ET_TOKEN_CONSTANTS.convert_keyword */
extern unsigned char ge781os12601;
extern T0* ge781ov12601;
extern T0* T157f600(T0* C);
/* ET_KEYWORD.make_convert */
extern T0* T166c63(void);
/* ET_CONVERT_FEATURE_LIST.tokens */
extern T0* T499f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_214 */
extern void T158f1179(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_213 */
extern void T158f1178(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_212 */
extern void T158f1177(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_211 */
extern void T158f1176(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_210 */
extern void T158f1175(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_209 */
extern void T158f1174(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_NAME_ITEM].resize */
extern T0* T589f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_NAME_ITEM].resized_area */
extern T0* T541f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_NAME_ITEM].copy_data */
extern void T541f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_NAME_ITEM].move_data */
extern void T541f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].overlapping_move */
extern void T541f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_NAME_ITEM].non_overlapping_move */
extern void T541f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_feature_name_comma */
extern T0* T248f148(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_208 */
extern void T158f1173(T0* C);
/* ET_CREATOR.put_first */
extern void T591f17(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_207 */
extern void T158f1172(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].resize */
extern T0* T593f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR].resized_area */
extern T0* T592f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR].copy_data */
extern void T592f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR].move_data */
extern void T592f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].overlapping_move */
extern void T592f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].non_overlapping_move */
extern void T592f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR].make */
extern T0* T592c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].make */
extern T0* T593f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR].make_area */
extern T0* T1065c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR].default_create */
extern T0* T593c3(void);
/* ET_AST_FACTORY.new_creator */
extern T0* T248f150(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CREATOR.make_with_capacity */
extern T0* T591c16(T0* a1, T6 a2);
/* ET_CREATOR.make_feature_name_list_with_capacity */
extern void T591f18(T0* C, T6 a1);
/* ET_CREATOR.fixed_array */
extern T0* T591f6(T0* C);
/* ET_TOKEN_CONSTANTS.creation_keyword */
extern unsigned char ge781os12603;
extern T0* ge781ov12603;
extern T0* T157f605(T0* C);
/* ET_KEYWORD.make_creation */
extern T0* T166c68(void);
/* ET_CREATOR.tokens */
extern T0* T591f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_206 */
extern void T158f1171(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_205 */
extern void T158f1170(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_204 */
extern void T158f1169(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_203 */
extern void T158f1168(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_202 */
extern void T158f1167(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_201 */
extern void T158f1166(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_1_200 */
extern void T158f946(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_200 */
extern void T158f1165(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_199 */
extern void T158f1164(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_198 */
extern void T158f1163(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_197 */
extern void T158f1162(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_196 */
extern void T158f1161(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_195 */
extern void T158f1160(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_194 */
extern void T158f1159(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_193 */
extern void T158f1158(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].resize */
extern T0* T590f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CREATOR_LIST].resized_area */
extern T0* T498f3(T0* C, T6 a1);
/* SPECIAL [ET_CREATOR_LIST].copy_data */
extern void T498f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CREATOR_LIST].move_data */
extern void T498f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].overlapping_move */
extern void T498f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].non_overlapping_move */
extern void T498f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CREATOR_LIST].make */
extern T0* T498c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].make */
extern T0* T590f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CREATOR_LIST].make_area */
extern T0* T1064c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CREATOR_LIST].default_create */
extern T0* T590c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_192 */
extern void T158f1157(T0* C);
/* ET_CREATOR_LIST.put_first */
extern void T497f10(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_191 */
extern void T158f1156(T0* C);
/* ET_AST_FACTORY.new_creators */
extern T0* T248f149(T0* C, T6 a1);
/* ET_CREATOR_LIST.make_with_capacity */
extern T0* T497c9(T6 a1);
/* ET_CREATOR_LIST.fixed_array */
extern unsigned char ge562os6093;
extern T0* ge562ov6093;
extern T0* T497f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_190 */
extern void T158f1155(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_189 */
extern void T158f1154(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_188 */
extern void T158f1153(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_187 */
extern void T158f1152(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_186 */
extern void T158f1151(T0* C);
/* ET_KEYWORD_FEATURE_NAME_LIST.put_first */
extern void T291f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_185 */
extern void T158f1150(T0* C);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].resize */
extern T0* T588f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].resized_area */
extern T0* T564f3(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].copy_data */
extern void T564f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].move_data */
extern void T564f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].overlapping_move */
extern void T564f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].non_overlapping_move */
extern void T564f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T564c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].make */
extern T0* T588f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].make_area */
extern T0* T1062c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_FEATURE_NAME_LIST].default_create */
extern T0* T588c3(void);
/* ET_AST_FACTORY.new_keyword_feature_name_list */
extern T0* T248f147(T0* C, T0* a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern T0* T291c8(T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.make_with_capacity */
extern void T291f8p1(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.fixed_array */
extern T0* T291f5(T0* C);
/* ET_TOKEN_CONSTANTS.redefine_keyword */
extern unsigned char ge781os12635;
extern T0* ge781ov12635;
extern T0* T157f610(T0* C);
/* ET_KEYWORD.make_redefine */
extern T0* T166c73(void);
/* ET_KEYWORD_FEATURE_NAME_LIST.tokens */
extern T0* T291f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_184 */
extern void T158f1149(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_183 */
extern void T158f1148(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_182 */
extern void T158f1147(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_181 */
extern void T158f1146(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_180 */
extern void T158f1145(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_179 */
extern void T158f1144(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_178 */
extern void T158f1143(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_177 */
extern void T158f1142(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_176 */
extern void T158f1141(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_175 */
extern void T158f1140(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_174 */
extern void T158f1139(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_173 */
extern void T158f1138(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_172 */
extern void T158f1137(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_171 */
extern void T158f1136(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_170 */
extern void T158f1135(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_169 */
extern void T158f1134(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_168 */
extern void T158f1133(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_ITEM].resize */
extern T0* T587f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_ITEM].resized_area */
extern T0* T586f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_ITEM].copy_data */
extern void T586f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_ITEM].move_data */
extern void T586f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].overlapping_move */
extern void T586f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_ITEM].non_overlapping_move */
extern void T586f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_AST_FACTORY.new_class_name_comma */
extern T0* T248f146(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_167 */
extern void T158f1132(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_166 */
extern void T158f1131(T0* C);
/* ET_CLIENTS.put_first */
extern void T414f21(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_165 */
extern void T158f1130(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_164 */
extern void T158f1129(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].resize */
extern T0* T584f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLIENTS].resized_area */
extern T0* T577f3(T0* C, T6 a1);
/* SPECIAL [ET_CLIENTS].copy_data */
extern void T577f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLIENTS].move_data */
extern void T577f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].overlapping_move */
extern void T577f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].non_overlapping_move */
extern void T577f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLIENTS].make */
extern T0* T577c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].make */
extern T0* T584f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CLIENTS].make_area */
extern T0* T1060c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLIENTS].default_create */
extern T0* T584c3(void);
/* ET_AST_FACTORY.new_clients */
extern T0* T248f145(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CLIENTS.set_left_brace */
extern void T414f19(T0* C, T0* a1);
/* ET_CLIENTS.make_with_capacity */
extern T0* T414c20(T6 a1);
/* ET_CLIENTS.make_with_capacity */
extern void T414f20p1(T0* C, T6 a1);
/* ET_CLIENTS.fixed_array */
extern T0* T414f6(T0* C);
/* ET_CLIENTS.tokens */
extern T0* T414f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_163 */
extern void T158f1128(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_162 */
extern void T158f1127(T0* C);
/* ET_AST_FACTORY.new_none_clients */
extern T0* T248f144(T0* C, T0* a1, T0* a2);
/* ET_CLIENTS.make */
extern T0* T414c18(void);
/* ET_CLIENTS.make */
extern void T414f18p1(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_161 */
extern void T158f1126(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_160 */
extern void T158f1125(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_159 */
extern void T158f1124(T0* C);
/* ET_FEATURE_EXPORT.put_first */
extern void T580f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_158 */
extern void T158f1123(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].resize */
extern T0* T583f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FEATURE_EXPORT].resized_area */
extern T0* T581f3(T0* C, T6 a1);
/* SPECIAL [ET_FEATURE_EXPORT].copy_data */
extern void T581f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FEATURE_EXPORT].move_data */
extern void T581f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].overlapping_move */
extern void T581f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].non_overlapping_move */
extern void T581f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FEATURE_EXPORT].make */
extern T0* T581c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].make */
extern T0* T583f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FEATURE_EXPORT].make_area */
extern T0* T1059c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FEATURE_EXPORT].default_create */
extern T0* T583c3(void);
/* ET_AST_FACTORY.new_feature_export */
extern T0* T248f142(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_with_capacity */
extern T0* T580c10(T0* a1, T6 a2);
/* ET_FEATURE_EXPORT.make_feature_name_list_with_capacity */
extern void T580f12(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.fixed_array */
extern T0* T580f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_157 */
extern void T158f1122(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_156 */
extern void T158f1121(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].resize */
extern T0* T579f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT].resized_area */
extern T0* T576f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT].copy_data */
extern void T576f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT].move_data */
extern void T576f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].overlapping_move */
extern void T576f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].non_overlapping_move */
extern void T576f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT].make */
extern T0* T576c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].make */
extern T0* T579f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT].make_area */
extern T0* T1058c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT].default_create */
extern T0* T579c3(void);
/* ET_AST_FACTORY.new_null_export */
extern T0* T248f143(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_155 */
extern void T158f1120(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_154 */
extern void T158f1119(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_153 */
extern void T158f1118(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_152 */
extern void T158f1117(T0* C);
/* ET_AST_FACTORY.new_all_export */
extern T0* T248f141(T0* C, T0* a1, T0* a2);
/* ET_ALL_EXPORT.make */
extern T0* T578c7(T0* a1);
/* ET_TOKEN_CONSTANTS.all_keyword */
extern unsigned char ge781os12594;
extern T0* ge781ov12594;
extern T0* T157f722(T0* C);
/* ET_KEYWORD.make_all */
extern T0* T166c28(void);
/* ET_ALL_EXPORT.tokens */
extern T0* T578f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_151 */
extern void T158f1116(T0* C);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].resize */
extern T0* T574f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_EXPORT_LIST].resized_area */
extern T0* T563f3(T0* C, T6 a1);
/* SPECIAL [ET_EXPORT_LIST].copy_data */
extern void T563f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_EXPORT_LIST].move_data */
extern void T563f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].overlapping_move */
extern void T563f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].non_overlapping_move */
extern void T563f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_EXPORT_LIST].make */
extern T0* T563c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].make */
extern T0* T574f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_EXPORT_LIST].make_area */
extern T0* T1057c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_EXPORT_LIST].default_create */
extern T0* T574c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_150 */
extern void T158f1115(T0* C);
/* ET_EXPORT_LIST.put_first */
extern void T290f8(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_149 */
extern void T158f1114(T0* C);
/* ET_AST_FACTORY.new_exports */
extern T0* T248f140(T0* C, T0* a1, T6 a2);
/* ET_EXPORT_LIST.make_with_capacity */
extern T0* T290c7(T6 a1);
/* ET_EXPORT_LIST.make_with_capacity */
extern void T290f7p1(T0* C, T6 a1);
/* ET_EXPORT_LIST.fixed_array */
extern unsigned char ge565os6093;
extern T0* ge565ov6093;
extern T0* T290f5(T0* C);
/* ET_TOKEN_CONSTANTS.export_keyword */
extern unsigned char ge781os12613;
extern T0* ge781ov12613;
extern T0* T157f594(T0* C);
/* ET_KEYWORD.make_export */
extern T0* T166c57(void);
/* ET_EXPORT_LIST.tokens */
extern T0* T290f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_148 */
extern void T158f1113(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_147 */
extern void T158f1112(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_146 */
extern void T158f1111(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_145 */
extern void T158f1110(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_144 */
extern void T158f1109(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_143 */
extern void T158f1108(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].resize */
extern T0* T573f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_ITEM].resized_area */
extern T0* T569f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_ITEM].copy_data */
extern void T569f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_ITEM].move_data */
extern void T569f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].overlapping_move */
extern void T569f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].non_overlapping_move */
extern void T569f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_ITEM].make */
extern T0* T569c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].make */
extern T0* T573f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_ITEM].make_area */
extern T0* T1056c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_ITEM].default_create */
extern T0* T573c3(void);
/* ET_AST_FACTORY.new_rename_comma */
extern T0* T248f139(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_RENAME.make */
extern T0* T572c6(T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.as_keyword */
extern unsigned char ge781os12595;
extern T0* ge781ov12595;
extern T0* T157f576(T0* C);
/* ET_KEYWORD.make_as */
extern T0* T166c39(void);
/* ET_RENAME.tokens */
extern T0* T572f3(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_142 */
extern void T158f1107(T0* C);
/* ET_AST_FACTORY.new_rename */
extern T0* T248f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_141 */
extern void T158f1106(T0* C);
/* ET_RENAME_LIST.put_first */
extern void T289f9(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_140 */
extern void T158f1105(T0* C);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].resize */
extern T0* T567f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME_LIST].resized_area */
extern T0* T562f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME_LIST].copy_data */
extern void T562f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME_LIST].move_data */
extern void T562f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].overlapping_move */
extern void T562f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].non_overlapping_move */
extern void T562f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME_LIST].make */
extern T0* T562c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].make */
extern T0* T567f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RENAME_LIST].make_area */
extern T0* T1055c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME_LIST].default_create */
extern T0* T567c3(void);
/* ET_AST_FACTORY.new_renames */
extern T0* T248f137(T0* C, T0* a1, T6 a2);
/* ET_RENAME_LIST.make_with_capacity */
extern T0* T289c8(T6 a1);
/* ET_RENAME_LIST.make_with_capacity */
extern void T289f8p1(T0* C, T6 a1);
/* ET_RENAME_LIST.fixed_array */
extern unsigned char ge590os6093;
extern T0* ge590ov6093;
extern T0* T289f5(T0* C);
/* ET_TOKEN_CONSTANTS.rename_keyword */
extern unsigned char ge781os12637;
extern T0* ge781ov12637;
extern T0* T157f597(T0* C);
/* ET_KEYWORD.make_rename */
extern T0* T166c60(void);
/* ET_RENAME_LIST.tokens */
extern T0* T289f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_139 */
extern void T158f1104(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_138 */
extern void T158f1103(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_137 */
extern void T158f1102(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_136 */
extern void T158f1101(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_135 */
extern void T158f1100(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].resize */
extern T0* T566f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_ITEM].resized_area */
extern T0* T565f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_ITEM].copy_data */
extern void T565f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_ITEM].move_data */
extern void T565f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].overlapping_move */
extern void T565f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].non_overlapping_move */
extern void T565f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_ITEM].make */
extern T0* T565c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].make */
extern T0* T566f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_ITEM].make_area */
extern T0* T1054c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_ITEM].default_create */
extern T0* T566c3(void);
/* ET_AST_FACTORY.new_parent_semicolon */
extern T0* T248f136(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_134 */
extern void T158f1099(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_133 */
extern void T158f1098(T0* C);
/* ET_PARENT_LIST.put_first */
extern void T292f11(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_132 */
extern void T158f1097(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_131 */
extern void T158f1096(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_130 */
extern void T158f1095(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].resize */
extern T0* T558f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT_LIST].resized_area */
extern T0* T496f3(T0* C, T6 a1);
/* SPECIAL [ET_PARENT_LIST].copy_data */
extern void T496f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT_LIST].move_data */
extern void T496f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].overlapping_move */
extern void T496f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].non_overlapping_move */
extern void T496f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT_LIST].make */
extern T0* T496c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].make */
extern T0* T558f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_LIST].make_area */
extern T0* T1052c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_LIST].default_create */
extern T0* T558c3(void);
/* ET_AST_FACTORY.new_parents */
extern T0* T248f135(T0* C, T0* a1, T6 a2);
/* ET_PARENT_LIST.make_with_capacity */
extern T0* T292c10(T6 a1);
/* ET_PARENT_LIST.make_with_capacity */
extern void T292f10p1(T0* C, T6 a1);
/* ET_PARENT_LIST.fixed_array */
extern unsigned char ge585os6093;
extern T0* ge585ov6093;
extern T0* T292f5(T0* C);
/* ET_TOKEN_CONSTANTS.inherit_keyword */
extern unsigned char ge781os12621;
extern T0* ge781ov12621;
extern T0* T157f602(T0* C);
/* ET_KEYWORD.make_inherit */
extern T0* T166c65(void);
/* ET_PARENT_LIST.tokens */
extern T0* T292f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_129 */
extern void T158f1094(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_128 */
extern void T158f1093(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_127 */
extern void T158f1092(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_126 */
extern void T158f1091(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_125 */
extern void T158f1090(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_124 */
extern void T158f1089(T0* C);
/* KL_SPECIAL_ROUTINES [ET_PARENT].resize */
extern T0* T561f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PARENT].resized_area */
extern T0* T560f2(T0* C, T6 a1);
/* SPECIAL [ET_PARENT].copy_data */
extern void T560f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PARENT].move_data */
extern void T560f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].overlapping_move */
extern void T560f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].non_overlapping_move */
extern void T560f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PARENT].make */
extern T0* T560c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].make */
extern T0* T561f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT].make_area */
extern T0* T1053c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT].default_create */
extern T0* T561c3(void);
/* ET_EIFFEL_PARSER.new_parent */
extern T0* T158f613(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8);
/* ET_AST_FACTORY.new_parent */
extern T0* T248f319(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_PARENT.make */
extern T0* T287c12(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_PARENT.tokens */
extern T0* T287f10(T0* C);
/* ET_PARENT.has_feature_adaptation */
extern T1 T287f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T396f12(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.has_derived_parameters */
extern T1 T160f11(T0* C);
/* ET_CLASS.has_formal_parameter */
extern T1 T55f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.has_formal_parameter */
extern T1 T396f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_123 */
extern void T158f1088(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_122 */
extern void T158f1087(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_121 */
extern void T158f1086(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_120 */
extern void T158f1085(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_119 */
extern void T158f1084(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_118 */
extern void T158f1083(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_117 */
extern void T158f1082(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_116 */
extern void T158f1081(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_115 */
extern void T158f1080(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_114 */
extern void T158f1079(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_113 */
extern void T158f1078(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_112 */
extern void T158f1077(T0* C);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].resize */
extern T0* T557f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_OBSOLETE].resized_area */
extern T0* T495f3(T0* C, T6 a1);
/* SPECIAL [ET_OBSOLETE].copy_data */
extern void T495f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_OBSOLETE].move_data */
extern void T495f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].overlapping_move */
extern void T495f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].non_overlapping_move */
extern void T495f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_OBSOLETE].make */
extern T0* T495c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].make */
extern T0* T557f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_OBSOLETE].make_area */
extern T0* T1051c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_OBSOLETE].default_create */
extern T0* T557c3(void);
/* ET_AST_FACTORY.new_obsolete_message */
extern T0* T248f134(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_111 */
extern void T158f1076(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_110 */
extern void T158f1075(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resize */
extern T0* T554f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].resized_area */
extern T0* T552f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].copy_data */
extern void T552f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].move_data */
extern void T552f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].overlapping_move */
extern void T552f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].non_overlapping_move */
extern void T552f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T552c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make */
extern T0* T554f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].make_area */
extern T0* T1050c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].default_create */
extern T0* T554c3(void);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter_semicolon */
extern T0* T248f133(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_labeled_actual_parameter */
extern T0* T248f131(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.make */
extern T0* T555c6(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_109 */
extern void T158f1074(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_108 */
extern void T158f1073(T0* C);
/* ET_EIFFEL_PARSER.add_to_constraint_actual_parameter_list */
extern void T158f1728(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.put_first */
extern void T542f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_constraint_labeled_comma_actual_parameter */
extern T0* T248f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.make */
extern T0* T556c6(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.first */
extern T0* T542f8(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.is_empty */
extern T1 T542f7(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_107 */
extern void T158f1072(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_106 */
extern void T158f1071(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_105 */
extern void T158f1070(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_104 */
extern void T158f1069(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_103 */
extern void T158f1068(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resize */
extern T0* T550f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].resized_area */
extern T0* T543f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].copy_data */
extern void T543f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].move_data */
extern void T543f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].overlapping_move */
extern void T543f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].non_overlapping_move */
extern void T543f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T543c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make */
extern T0* T550f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].make_area */
extern T0* T1049c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].default_create */
extern T0* T550c3(void);
/* ET_AST_FACTORY.new_constraint_actual_parameters */
extern T0* T248f129(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.set_left_bracket */
extern void T542f14(T0* C, T0* a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern T0* T542c12(T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.make_with_capacity */
extern void T542f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge847os6093;
extern T0* ge847ov6093;
extern T0* T542f6(T0* C);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.tokens */
extern T0* T542f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_102 */
extern void T158f1067(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_101 */
extern void T158f1066(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_100 */
extern void T158f1065(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_99 */
extern void T158f1064(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_98 */
extern void T158f1063(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_97 */
extern void T158f1062(T0* C);
/* ET_AST_FACTORY.new_constraint_actual_parameter_comma */
extern T0* T248f130(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_96 */
extern void T158f1061(T0* C);
/* ET_EIFFEL_PARSER.new_constraint_named_type */
extern T0* T158f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_AST_FACTORY.new_constraint_named_type */
extern T0* T248f315(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.make */
extern T0* T544c7(T0* a1, T0* a2);
/* ET_AST_FACTORY.new_constraint_generic_named_type */
extern T0* T248f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.make */
extern T0* T911c8(T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.yy_do_action_95 */
extern void T158f1060(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_94 */
extern void T158f1059(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_93 */
extern void T158f1058(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_92 */
extern void T158f1057(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_91 */
extern void T158f1056(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_90 */
extern void T158f1055(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_89 */
extern void T158f1054(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_88 */
extern void T158f1053(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_TYPE].resize */
extern T0* T545f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_TYPE].resized_area */
extern T0* T535f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_TYPE].copy_data */
extern void T535f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_TYPE].move_data */
extern void T535f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].overlapping_move */
extern void T535f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_TYPE].non_overlapping_move */
extern void T535f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.yy_do_action_87 */
extern void T158f1052(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_86 */
extern void T158f1051(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_85 */
extern void T158f1050(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_84 */
extern void T158f1049(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_83 */
extern void T158f1048(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_82 */
extern void T158f1047(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_81 */
extern void T158f1046(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_80 */
extern void T158f1045(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_79 */
extern void T158f1044(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_78 */
extern void T158f1043(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_77 */
extern void T158f1042(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_76 */
extern void T158f1041(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_75 */
extern void T158f1040(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_74 */
extern void T158f1039(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_73 */
extern void T158f1038(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_72 */
extern void T158f1037(T0* C);
/* ET_CONSTRAINT_CREATOR.put_first */
extern void T537f13(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_71 */
extern void T158f1036(T0* C);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].resize */
extern T0* T539f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CONSTRAINT_CREATOR].resized_area */
extern T0* T538f3(T0* C, T6 a1);
/* SPECIAL [ET_CONSTRAINT_CREATOR].copy_data */
extern void T538f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CONSTRAINT_CREATOR].move_data */
extern void T538f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].overlapping_move */
extern void T538f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].non_overlapping_move */
extern void T538f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CONSTRAINT_CREATOR].make */
extern T0* T538c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].make */
extern T0* T539f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CONSTRAINT_CREATOR].make_area */
extern T0* T1046c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CONSTRAINT_CREATOR].default_create */
extern T0* T539c3(void);
/* ET_AST_FACTORY.new_constraint_creator */
extern T0* T248f127(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern T0* T537c12(T6 a1);
/* ET_CONSTRAINT_CREATOR.make_with_capacity */
extern void T537f12p1(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.fixed_array */
extern T0* T537f6(T0* C);
/* ET_CONSTRAINT_CREATOR.tokens */
extern T0* T537f2(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_70 */
extern void T158f1035(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_69 */
extern void T158f1034(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_68 */
extern void T158f1033(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_67 */
extern void T158f1032(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_66 */
extern void T158f1031(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER].resize */
extern T0* T534f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER].resized_area */
extern T0* T529f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER].copy_data */
extern void T529f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER].move_data */
extern void T529f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].overlapping_move */
extern void T529f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER].non_overlapping_move */
extern void T529f9(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_EIFFEL_PARSER.register_constraint */
extern void T158f1727(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].force_last */
extern void T404f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].resize */
extern void T404f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].new_capacity */
extern T6 T404f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].extendible */
extern T1 T404f8(T0* C, T6 a1);
/* ET_AST_FACTORY.new_constrained_formal_parameter */
extern T0* T248f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_type_mark */
extern void T536f66(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make */
extern T0* T536c65(T0* a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.make_unconstrained */
extern void T536f67(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.arrow_symbol */
extern unsigned char ge781os12570;
extern T0* ge781ov12570;
extern T0* T157f572(T0* C);
/* ET_SYMBOL.make_arrow */
extern T0* T425c69(void);
/* ET_CONSTRAINED_FORMAL_PARAMETER.tokens */
extern T0* T536f2(T0* C);
/* ET_EIFFEL_PARSER.dummy_constraint */
extern T0* T158f592(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_65 */
extern void T158f1030(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_64 */
extern void T158f1029(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_63 */
extern void T158f1028(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_62 */
extern void T158f1027(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_61 */
extern void T158f1026(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_60 */
extern void T158f1025(T0* C);
/* ET_AST_FACTORY.new_formal_parameter */
extern T0* T248f125(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.set_type_mark */
extern void T528f64(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.make */
extern T0* T528c63(T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_59 */
extern void T158f1024(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_58 */
extern void T158f1023(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_57 */
extern void T158f1022(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].resize */
extern T0* T532f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].resized_area */
extern T0* T531f3(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].copy_data */
extern void T531f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].move_data */
extern void T531f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].overlapping_move */
extern void T531f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].non_overlapping_move */
extern void T531f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T531c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].make */
extern T0* T532f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_ITEM].make_area */
extern T0* T1044c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_ITEM].default_create */
extern T0* T532c3(void);
/* ET_AST_FACTORY.new_formal_parameter_comma */
extern T0* T248f124(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_56 */
extern void T158f1021(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T396f26(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_index */
extern void T536f69(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.set_index */
extern void T528f65(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.capacity */
extern T6 T396f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.put_first */
extern void T396f26p1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_55 */
extern void T158f1020(T0* C);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].resize */
extern T0* T527f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].resized_area */
extern T0* T526f2(T0* C, T6 a1);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].copy_data */
extern void T526f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].move_data */
extern void T526f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].overlapping_move */
extern void T526f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].non_overlapping_move */
extern void T526f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T526c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].make */
extern T0* T527f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FORMAL_PARAMETER_LIST].make_area */
extern T0* T1043c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FORMAL_PARAMETER_LIST].default_create */
extern T0* T527c3(void);
/* ET_AST_FACTORY.new_formal_parameters */
extern T0* T248f123(T0* C, T0* a1, T0* a2, T6 a3);
/* ET_FORMAL_PARAMETER_LIST.set_left_bracket */
extern void T396f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern T0* T396c24(T6 a1);
/* ET_FORMAL_PARAMETER_LIST.make_with_capacity */
extern void T396f24p1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.fixed_array */
extern unsigned char ge572os6093;
extern T0* ge572ov6093;
extern T0* T396f8(T0* C);
/* ET_FORMAL_PARAMETER_LIST.tokens */
extern T0* T396f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_54 */
extern void T158f1019(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_53 */
extern void T158f1018(T0* C);
/* ET_EIFFEL_PARSER.set_formal_parameters */
extern void T158f1724(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].wipe_out */
extern void T404f12(T0* C);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].clear_items */
extern void T404f15(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].move_all_cursors_after */
extern void T404f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_next_cursor */
extern void T1009f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CONSTRAINT_TYPE].set_position */
extern void T1009f5(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.remove */
extern void T396f25(T0* C, T6 a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint */
extern void T536f68(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CONSTRAINT_TYPE].item */
extern T0* T404f1(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_LIST.formal_parameter */
extern T0* T396f2(T0* C, T6 a1);
/* ET_CLASS.set_formal_parameters */
extern void T55f169(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_52 */
extern void T158f1017(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_51 */
extern void T158f1016(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_50 */
extern void T158f1015(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_49 */
extern void T158f1014(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_48 */
extern void T158f1013(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_47 */
extern void T158f1012(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_46 */
extern void T158f1011(T0* C);
/* ET_CLASS.set_external_keyword */
extern void T55f165(T0* C, T0* a1);
/* ET_CLASS.set_frozen_keyword */
extern void T55f164(T0* C, T0* a1);
/* ET_CLASS.set_class_mark */
extern void T55f172(T0* C, T0* a1);
/* ET_CLASS.set_class_keyword */
extern void T55f163(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.new_class */
extern T0* T158f578(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_compilation_status */
extern void T52f202(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_compilation_status */
extern void T28f202(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_in_override_cluster */
extern T1 T55f29(T0* C);
/* ET_CLASS.set_name */
extern void T55f177(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.none_class */
extern T0* T158f875(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_45 */
extern void T158f1010(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_44 */
extern void T158f1009(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_43 */
extern void T158f1008(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_42 */
extern void T158f1007(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].resize */
extern T0* T525f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_ITEM].resized_area */
extern T0* T518f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_ITEM].copy_data */
extern void T518f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_ITEM].move_data */
extern void T518f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].overlapping_move */
extern void T518f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].non_overlapping_move */
extern void T518f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_ITEM].make */
extern T0* T518c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].make */
extern T0* T525f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_ITEM].make_area */
extern T0* T1042c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_ITEM].default_create */
extern T0* T525c3(void);
/* ET_AST_FACTORY.new_indexing_term_comma */
extern T0* T248f122(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_41 */
extern void T158f1006(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].resize */
extern T0* T519f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM].resized_area */
extern T0* T515f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM].copy_data */
extern void T515f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM].move_data */
extern void T515f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].overlapping_move */
extern void T515f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].non_overlapping_move */
extern void T515f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM].make */
extern T0* T515c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].make */
extern T0* T519f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM].make_area */
extern T0* T1041c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM].default_create */
extern T0* T519c3(void);
/* ET_AST_FACTORY.new_custom_attribute */
extern T0* T248f121(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CUSTOM_ATTRIBUTE.make */
extern T0* T522c5(T0* a1, T0* a2);
/* ET_CUSTOM_ATTRIBUTE.tokens */
extern T0* T522f4(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_40 */
extern void T158f1005(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_39 */
extern void T158f1004(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_38 */
extern void T158f1003(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_37 */
extern void T158f1002(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_36 */
extern void T158f1001(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_35 */
extern void T158f1000(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_34 */
extern void T158f999(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_33 */
extern void T158f998(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_32 */
extern void T158f997(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_31 */
extern void T158f996(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].resize */
extern T0* T516f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_TERM_LIST].resized_area */
extern T0* T509f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_TERM_LIST].copy_data */
extern void T509f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_TERM_LIST].move_data */
extern void T509f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].overlapping_move */
extern void T509f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].non_overlapping_move */
extern void T509f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_TERM_LIST].make */
extern T0* T509c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].make */
extern T0* T516f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_TERM_LIST].make_area */
extern T0* T1040c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_TERM_LIST].default_create */
extern T0* T516c3(void);
/* ET_AST_FACTORY.new_indexing_terms */
extern T0* T248f120(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_action_30 */
extern void T158f995(T0* C);
/* ET_AST_FACTORY.new_indexing_semicolon */
extern T0* T248f119(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_29 */
extern void T158f994(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_28 */
extern void T158f993(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].resize */
extern T0* T511f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_ITEM].resized_area */
extern T0* T507f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_ITEM].copy_data */
extern void T507f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_ITEM].move_data */
extern void T507f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].overlapping_move */
extern void T507f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].non_overlapping_move */
extern void T507f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_ITEM].make */
extern T0* T507c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].make */
extern T0* T511f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_ITEM].make_area */
extern T0* T1039c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_ITEM].default_create */
extern T0* T511c3(void);
/* ET_AST_FACTORY.new_tagged_indexing */
extern T0* T248f118(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.yy_do_action_27 */
extern void T158f992(T0* C);
/* ET_AST_FACTORY.new_indexing */
extern T0* T248f116(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_26 */
extern void T158f991(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_25 */
extern void T158f990(T0* C);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].resize */
extern T0* T505f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INDEXING_LIST].resized_area */
extern T0* T493f3(T0* C, T6 a1);
/* SPECIAL [ET_INDEXING_LIST].copy_data */
extern void T493f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INDEXING_LIST].move_data */
extern void T493f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].overlapping_move */
extern void T493f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].non_overlapping_move */
extern void T493f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INDEXING_LIST].make */
extern T0* T493c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].make */
extern T0* T505f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INDEXING_LIST].make_area */
extern T0* T1038c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INDEXING_LIST].default_create */
extern T0* T505c3(void);
/* ET_EIFFEL_PARSER.yy_do_action_24 */
extern void T158f989(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_23 */
extern void T158f988(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_22 */
extern void T158f987(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_21 */
extern void T158f986(T0* C);
/* ET_AST_FACTORY.new_indexings */
extern T0* T248f115(T0* C, T0* a1, T6 a2);
/* ET_EIFFEL_PARSER.yy_do_action_20 */
extern void T158f985(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_19 */
extern void T158f984(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_18 */
extern void T158f983(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_17 */
extern void T158f982(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_16 */
extern void T158f981(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_15 */
extern void T158f980(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_14 */
extern void T158f979(T0* C);
/* ET_EIFFEL_PARSER.set_class_providers */
extern void T158f1718(T0* C);
/* DS_HASH_SET [ET_CLASS].wipe_out */
extern void T405f38(T0* C);
/* DS_HASH_SET [ET_CLASS].slots_wipe_out */
extern void T405f52(T0* C);
/* DS_HASH_SET [ET_CLASS].clashes_wipe_out */
extern void T405f51(T0* C);
/* DS_HASH_SET [ET_CLASS].key_storage_wipe_out */
extern void T405f50(T0* C);
/* DS_HASH_SET [ET_CLASS].item_storage_wipe_out */
extern void T405f49(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors_after */
extern void T405f48(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_next_cursor */
extern void T1010f8(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].set_position */
extern void T1010f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].forth */
extern void T405f41(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_forth */
extern void T405f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].add_traversing_cursor */
extern void T405f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_traversing_cursor */
extern void T405f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].put_last */
extern void T405f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].compress */
extern void T405f56(T0* C);
/* DS_HASH_SET [ET_CLASS].move_all_cursors */
extern void T405f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].key_storage_put */
extern void T405f63(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS].item_for_iteration */
extern T0* T405f3(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_item */
extern T0* T405f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].after */
extern T1 T405f2(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_after */
extern T1 T405f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].start */
extern void T405f39(T0* C);
/* DS_HASH_SET [ET_CLASS].cursor_start */
extern void T405f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].cursor_off */
extern T1 T405f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].is_empty */
extern T1 T405f27(T0* C);
/* ET_CLASS.set_providers */
extern void T55f168(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_13 */
extern void T158f978(T0* C);
/* ET_EIFFEL_PARSER.set_class_to_inheritance_end */
extern void T158f1717(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EIFFEL_PARSER.set_class_to_end */
extern void T158f1716(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7, T0* a8, T0* a9);
/* ET_NULL_ERROR_HANDLER.report_gvkfe5a_error */
extern void T52f188(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe5a */
extern T0* T884c616(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T52f22(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe5a_error */
extern void T28f188(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe5_error */
extern T1 T28f22(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_void_seed */
extern void T51f169(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_void_seed */
extern void T48f189(T0* C, T6 a1);
/* ET_TOKEN_CONSTANTS.void_feature_name */
extern unsigned char ge781os12563;
extern T0* ge781ov12563;
extern T0* T157f180(T0* C);
/* ET_LACE_UNIVERSE.set_copy_seed */
extern void T51f168(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_copy_seed */
extern void T48f188(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvkfe4a_error */
extern void T52f187(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvkfe4a */
extern T0* T884c615(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T52f21(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvkfe4a_error */
extern void T28f187(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvkfe4_error */
extern T1 T28f21(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_create_seed */
extern void T51f167(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_default_create_seed */
extern void T48f187(T0* C, T6 a1);
/* ET_CLASS.set_end_keyword */
extern void T55f206(T0* C, T0* a1);
/* ET_CLASS.set_second_indexing */
extern void T55f205(T0* C, T0* a1);
/* ET_CLASS.set_invariants */
extern void T55f204(T0* C, T0* a1);
/* ET_CLASS.set_feature_clauses */
extern void T55f203(T0* C, T0* a1);
/* ET_CLASS.set_convert_features */
extern void T55f202(T0* C, T0* a1);
/* ET_CLASS.set_creators */
extern void T55f201(T0* C, T0* a1);
/* ET_CLASS.set_parents */
extern void T55f200(T0* C, T0* a1);
/* ET_CLASS.set_obsolete_message */
extern void T55f199(T0* C, T0* a1);
/* ET_PARENT.set_end_keyword */
extern void T287f13(T0* C, T0* a1);
/* ET_PARENT_LIST.last */
extern T0* T292f9(T0* C);
/* ET_PARENT_LIST.is_empty */
extern T1 T292f6(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_12 */
extern void T158f977(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_11 */
extern void T158f976(T0* C);
/* ET_CLASS.set_first_indexing */
extern void T55f198(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_10 */
extern void T158f975(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_9 */
extern void T158f974(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_8 */
extern void T158f973(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_7 */
extern void T158f972(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_6 */
extern void T158f971(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_5 */
extern void T158f970(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_4 */
extern void T158f969(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_3 */
extern void T158f968(T0* C);
/* ET_EIFFEL_PARSER.yy_do_action_2 */
extern void T158f967(T0* C);
/* ET_CLASS.set_leading_break */
extern void T55f197(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_do_action_1 */
extern void T158f966(T0* C);
/* ET_EIFFEL_PARSER.yy_push_last_value */
extern void T158f929(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].resize */
extern T0* T477f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].resized_area */
extern T0* T476f2(T0* C, T6 a1);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].copy_data */
extern void T476f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].move_data */
extern void T476f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].overlapping_move */
extern void T476f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].non_overlapping_move */
extern void T476f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T476c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].make */
extern T0* T477f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_QUESTION_MARK_SYMBOL].make_area */
extern T0* T1036c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_QUESTION_MARK_SYMBOL].default_create */
extern T0* T477c3(void);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].resize */
extern T0* T474f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BRACKET_SYMBOL].resized_area */
extern T0* T473f2(T0* C, T6 a1);
/* SPECIAL [ET_BRACKET_SYMBOL].copy_data */
extern void T473f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BRACKET_SYMBOL].move_data */
extern void T473f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].overlapping_move */
extern void T473f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].non_overlapping_move */
extern void T473f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BRACKET_SYMBOL].make */
extern T0* T473c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].make */
extern T0* T474f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BRACKET_SYMBOL].make_area */
extern T0* T1035c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BRACKET_SYMBOL].default_create */
extern T0* T474c3(void);
/* KL_SPECIAL_ROUTINES [ET_VOID].resize */
extern T0* T468f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_VOID].resized_area */
extern T0* T467f2(T0* C, T6 a1);
/* SPECIAL [ET_VOID].copy_data */
extern void T467f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_VOID].move_data */
extern void T467f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].overlapping_move */
extern void T467f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].non_overlapping_move */
extern void T467f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_VOID].make */
extern T0* T467c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].make */
extern T0* T468f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_VOID].make_area */
extern T0* T1033c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_VOID].default_create */
extern T0* T468c3(void);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].resize */
extern T0* T465f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_SYMBOL_OPERATOR].resized_area */
extern T0* T464f2(T0* C, T6 a1);
/* SPECIAL [ET_SYMBOL_OPERATOR].copy_data */
extern void T464f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_SYMBOL_OPERATOR].move_data */
extern void T464f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].overlapping_move */
extern void T464f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].non_overlapping_move */
extern void T464f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_SYMBOL_OPERATOR].make */
extern T0* T464c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].make */
extern T0* T465f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_SYMBOL_OPERATOR].make_area */
extern T0* T1032c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_SYMBOL_OPERATOR].default_create */
extern T0* T465c3(void);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].resize */
extern T0* T462f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RETRY_INSTRUCTION].resized_area */
extern T0* T461f2(T0* C, T6 a1);
/* SPECIAL [ET_RETRY_INSTRUCTION].copy_data */
extern void T461f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RETRY_INSTRUCTION].move_data */
extern void T461f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].overlapping_move */
extern void T461f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].non_overlapping_move */
extern void T461f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RETRY_INSTRUCTION].make */
extern T0* T461c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].make */
extern T0* T462f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RETRY_INSTRUCTION].make_area */
extern T0* T1031c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RETRY_INSTRUCTION].default_create */
extern T0* T462c3(void);
/* KL_SPECIAL_ROUTINES [ET_RESULT].resize */
extern T0* T459f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RESULT].resized_area */
extern T0* T458f2(T0* C, T6 a1);
/* SPECIAL [ET_RESULT].copy_data */
extern void T458f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RESULT].move_data */
extern void T458f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].overlapping_move */
extern void T458f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].non_overlapping_move */
extern void T458f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RESULT].make */
extern T0* T458c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].make */
extern T0* T459f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_RESULT].make_area */
extern T0* T1030c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RESULT].default_create */
extern T0* T459c3(void);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].resize */
extern T0* T457f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REAL_CONSTANT].resized_area */
extern T0* T456f2(T0* C, T6 a1);
/* SPECIAL [ET_REAL_CONSTANT].copy_data */
extern void T456f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REAL_CONSTANT].move_data */
extern void T456f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].overlapping_move */
extern void T456f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].non_overlapping_move */
extern void T456f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REAL_CONSTANT].make */
extern T0* T456c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].make */
extern T0* T457f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_REAL_CONSTANT].make_area */
extern T0* T1029c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REAL_CONSTANT].default_create */
extern T0* T457c3(void);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].resize */
extern T0* T452f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_KEYWORD_OPERATOR].resized_area */
extern T0* T451f2(T0* C, T6 a1);
/* SPECIAL [ET_KEYWORD_OPERATOR].copy_data */
extern void T451f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_KEYWORD_OPERATOR].move_data */
extern void T451f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].overlapping_move */
extern void T451f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].non_overlapping_move */
extern void T451f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_KEYWORD_OPERATOR].make */
extern T0* T451c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].make */
extern T0* T452f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_KEYWORD_OPERATOR].make_area */
extern T0* T1027c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_KEYWORD_OPERATOR].default_create */
extern T0* T452c3(void);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].resize */
extern T0* T449f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_INTEGER_CONSTANT].resized_area */
extern T0* T448f2(T0* C, T6 a1);
/* SPECIAL [ET_INTEGER_CONSTANT].copy_data */
extern void T448f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_INTEGER_CONSTANT].move_data */
extern void T448f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].overlapping_move */
extern void T448f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].non_overlapping_move */
extern void T448f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_INTEGER_CONSTANT].make */
extern T0* T448c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].make */
extern T0* T449f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_INTEGER_CONSTANT].make_area */
extern T0* T1026c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_INTEGER_CONSTANT].default_create */
extern T0* T449c3(void);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].resize */
extern T0* T446f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FREE_OPERATOR].resized_area */
extern T0* T445f2(T0* C, T6 a1);
/* SPECIAL [ET_FREE_OPERATOR].copy_data */
extern void T445f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FREE_OPERATOR].move_data */
extern void T445f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].overlapping_move */
extern void T445f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].non_overlapping_move */
extern void T445f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FREE_OPERATOR].make */
extern T0* T445c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].make */
extern T0* T446f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_FREE_OPERATOR].make_area */
extern T0* T1025c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FREE_OPERATOR].default_create */
extern T0* T446c3(void);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].resize */
extern T0* T443f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CURRENT].resized_area */
extern T0* T442f2(T0* C, T6 a1);
/* SPECIAL [ET_CURRENT].copy_data */
extern void T442f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CURRENT].move_data */
extern void T442f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].overlapping_move */
extern void T442f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].non_overlapping_move */
extern void T442f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CURRENT].make */
extern T0* T442c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].make */
extern T0* T443f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_CURRENT].make_area */
extern T0* T1024c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CURRENT].default_create */
extern T0* T443c3(void);
/* KL_SPECIAL_ROUTINES [ET_BREAK].resize */
extern T0* T438f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BREAK].resized_area */
extern T0* T437f2(T0* C, T6 a1);
/* SPECIAL [ET_BREAK].copy_data */
extern void T437f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BREAK].move_data */
extern void T437f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].overlapping_move */
extern void T437f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].non_overlapping_move */
extern void T437f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BREAK].make */
extern T0* T437c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].make */
extern T0* T438f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BREAK].make_area */
extern T0* T1022c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BREAK].default_create */
extern T0* T438c3(void);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].resize */
extern T0* T435f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BOOLEAN_CONSTANT].resized_area */
extern T0* T434f2(T0* C, T6 a1);
/* SPECIAL [ET_BOOLEAN_CONSTANT].copy_data */
extern void T434f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BOOLEAN_CONSTANT].move_data */
extern void T434f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].overlapping_move */
extern void T434f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].non_overlapping_move */
extern void T434f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BOOLEAN_CONSTANT].make */
extern T0* T434c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].make */
extern T0* T435f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BOOLEAN_CONSTANT].make_area */
extern T0* T1021c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BOOLEAN_CONSTANT].default_create */
extern T0* T435c3(void);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].resize */
extern T0* T432f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BIT_CONSTANT].resized_area */
extern T0* T431f2(T0* C, T6 a1);
/* SPECIAL [ET_BIT_CONSTANT].copy_data */
extern void T431f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BIT_CONSTANT].move_data */
extern void T431f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].overlapping_move */
extern void T431f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].non_overlapping_move */
extern void T431f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BIT_CONSTANT].make */
extern T0* T431c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].make */
extern T0* T432f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_BIT_CONSTANT].make_area */
extern T0* T1020c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BIT_CONSTANT].default_create */
extern T0* T432c3(void);
/* KL_SPECIAL_ROUTINES [ET_POSITION].resize */
extern T0* T429f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_POSITION].resized_area */
extern T0* T428f2(T0* C, T6 a1);
/* SPECIAL [ET_POSITION].copy_data */
extern void T428f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_POSITION].move_data */
extern void T428f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].overlapping_move */
extern void T428f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].non_overlapping_move */
extern void T428f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_POSITION].make */
extern T0* T428c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].make */
extern T0* T429f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_POSITION].make_area */
extern T0* T1019c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_POSITION].default_create */
extern T0* T429c3(void);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].resize */
extern T0* T424f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_PRECURSOR_KEYWORD].resized_area */
extern T0* T423f2(T0* C, T6 a1);
/* SPECIAL [ET_PRECURSOR_KEYWORD].copy_data */
extern void T423f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_PRECURSOR_KEYWORD].move_data */
extern void T423f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].overlapping_move */
extern void T423f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].non_overlapping_move */
extern void T423f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_PRECURSOR_KEYWORD].make */
extern T0* T423c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].make */
extern T0* T424f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PRECURSOR_KEYWORD].make_area */
extern T0* T1017c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PRECURSOR_KEYWORD].default_create */
extern T0* T424c3(void);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].resize */
extern T0* T421f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT_KEYWORD].resized_area */
extern T0* T420f2(T0* C, T6 a1);
/* SPECIAL [ET_AGENT_KEYWORD].copy_data */
extern void T420f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT_KEYWORD].move_data */
extern void T420f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].overlapping_move */
extern void T420f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].non_overlapping_move */
extern void T420f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT_KEYWORD].make */
extern T0* T420c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].make */
extern T0* T421f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_KEYWORD].make_area */
extern T0* T1016c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_KEYWORD].default_create */
extern T0* T421c3(void);
/* ET_EIFFEL_PARSER.accept */
extern void T158f928(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action */
extern void T158f926(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_error */
extern void T158f945(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.report_syntax_error */
extern void T158f951(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.set_syntax_error */
extern void T158f955(T0* C);
/* ET_EIFFEL_PARSER.current_position */
extern T0* T158f381(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1200_1399 */
extern void T158f944(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.report_eof_expected_error */
extern void T158f965(T0* C);
/* ET_EIFFEL_PARSER.yy_do_error_action_1000_1199 */
extern void T158f943(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_800_999 */
extern void T158f942(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_600_799 */
extern void T158f941(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_400_599 */
extern void T158f940(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_200_399 */
extern void T158f939(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_do_error_action_0_199 */
extern void T158f938(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.read_token */
extern void T158f925(T0* C);
/* ET_EIFFEL_PARSER.yy_execute_action */
extern void T158f937(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.less */
extern void T158f964(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.process_break */
extern void T158f953(T0* C);
/* ET_AST_FACTORY.new_comment */
extern T0* T248f14(T0* C, T0* a1);
/* ET_AST_FACTORY.new_break */
extern T0* T248f13(T0* C, T0* a1);
/* ET_AST_FACTORY.new_underscored_real_constant */
extern T0* T248f12(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_position */
extern void T486f33(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_REAL_CONSTANT.make */
extern T0* T486c32(T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.make_leaf */
extern void T486f34(T0* C);
/* ET_EIFFEL_PARSER.last_literal */
extern T0* T158f883(T0* C);
/* ET_AST_FACTORY.new_regular_real_constant */
extern T0* T248f11(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_position */
extern void T485f33(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_REAL_CONSTANT.make */
extern T0* T485c32(T0* a1);
/* ET_REGULAR_REAL_CONSTANT.make_leaf */
extern void T485f34(T0* C);
/* ET_AST_FACTORY.new_hexadecimal_integer_constant */
extern T0* T248f10(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_position */
extern void T484f41(T0* C, T6 a1, T6 a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make */
extern T0* T484c40(T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.make_leaf */
extern void T484f42(T0* C);
/* ET_AST_FACTORY.new_underscored_integer_constant */
extern T0* T248f9(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_position */
extern void T483f42(T0* C, T6 a1, T6 a2);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make */
extern T0* T483c41(T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.make_leaf */
extern void T483f43(T0* C);
/* ET_AST_FACTORY.new_regular_integer_constant */
extern T0* T248f8(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_position */
extern void T482f42(T0* C, T6 a1, T6 a2);
/* ET_REGULAR_INTEGER_CONSTANT.make */
extern T0* T482c41(T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.make_leaf */
extern void T482f43(T0* C);
/* ET_AST_FACTORY.new_bit_constant */
extern T0* T248f7(T0* C, T0* a1);
/* ET_BIT_CONSTANT.set_position */
extern void T430f29(T0* C, T6 a1, T6 a2);
/* ET_BIT_CONSTANT.make */
extern T0* T430c28(T0* a1);
/* ET_BIT_CONSTANT.make_leaf */
extern void T430f30(T0* C);
/* ET_NULL_ERROR_HANDLER.report_ssel_error */
extern void T52f180(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssel_error */
extern void T28f180(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sscu_error */
extern void T52f177(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sscu_error */
extern void T28f177(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssac_error */
extern void T52f176(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssac_error */
extern void T28f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssas_error */
extern void T52f175(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssas_error */
extern void T28f175(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_ssao_error */
extern void T52f174(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_ssao_error */
extern void T28f174(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_special_manifest_string */
extern T0* T248f6(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.set_position */
extern void T481f33(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_special_manifest_string */
extern T0* T158f886(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.make */
extern T0* T481c32(T0* a1, T0* a2);
/* ET_SPECIAL_MANIFEST_STRING.make_leaf */
extern void T481f34(T0* C);
/* ET_EIFFEL_PARSER.integer_ */
extern T0* T158f889(T0* C);
/* ET_AST_FACTORY.new_verbatim_string */
extern T0* T248f5(T0* C, T0* a1, T0* a2, T0* a3, T1 a4, T0* a5);
/* ET_VERBATIM_STRING.set_position */
extern void T480f37(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_verbatim_string */
extern T0* T158f885(T0* C, T0* a1, T0* a2, T0* a3, T1 a4);
/* ET_VERBATIM_STRING.make */
extern T0* T480c36(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T1 a6);
/* ET_VERBATIM_STRING.make_leaf */
extern void T480f38(T0* C);
/* ET_EIFFEL_PARSER.is_verbatim_string_closer */
extern T1 T158f406(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.text */
extern T0* T158f404(T0* C);
/* ET_EIFFEL_PARSER.append_text_to_string */
extern void T158f1744(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.text_substring */
extern T0* T158f402(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.process_regular_manifest_string */
extern void T158f963(T0* C, T6 a1);
/* ET_AST_FACTORY.new_regular_manifest_string */
extern T0* T248f4(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.set_position */
extern void T479f32(T0* C, T6 a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_scao_error */
extern void T52f169(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scao_error */
extern void T28f169(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_c3_character_constant */
extern T0* T248f3(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.set_position */
extern void T478f36(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.last_c3_character_constant */
extern T0* T158f884(T0* C);
/* ET_C3_CHARACTER_CONSTANT.make */
extern T0* T478c35(T0* a1, T2 a2);
/* ET_C3_CHARACTER_CONSTANT.make_leaf */
extern void T478f37(T0* C);
/* ET_EIFFEL_PARSER.process_c2_character_constant */
extern void T158f962(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c2_character_constant */
extern T0* T248f114(T0* C, T2 a1, T0* a2);
/* ET_C2_CHARACTER_CONSTANT.set_position */
extern void T491f35(T0* C, T6 a1, T6 a2);
/* ET_C2_CHARACTER_CONSTANT.make */
extern T0* T491c34(T2 a1);
/* ET_C2_CHARACTER_CONSTANT.make_leaf */
extern void T491f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_scsc_error */
extern void T52f186(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_scsc_error */
extern void T28f186(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_sccu_error */
extern void T52f185(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sccu_error */
extern void T28f185(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.process_c1_character_constant */
extern void T158f961(T0* C, T2 a1);
/* ET_AST_FACTORY.new_c1_character_constant */
extern T0* T248f113(T0* C, T2 a1, T0* a2);
/* ET_C1_CHARACTER_CONSTANT.set_position */
extern void T490f35(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.make */
extern T0* T490c34(T2 a1);
/* ET_C1_CHARACTER_CONSTANT.make_leaf */
extern void T490f36(T0* C);
/* ET_NULL_ERROR_HANDLER.report_sctq_error */
extern void T52f184(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_sctq_error */
extern void T28f184(T0* C, T0* a1, T0* a2);
/* ET_AST_FACTORY.new_free_operator */
extern T0* T248f2(T0* C, T0* a1);
/* ET_FREE_OPERATOR.set_position */
extern void T444f47(T0* C, T6 a1, T6 a2);
/* ET_FREE_OPERATOR.make_prefix */
extern T0* T444c46(T0* a1);
/* ET_FREE_OPERATOR.string_ */
extern T0* T444f4(T0* C);
/* ET_FREE_OPERATOR.make_token */
extern void T444f48(T0* C, T0* a1);
/* ET_FREE_OPERATOR.make_leaf */
extern void T444f49(T0* C);
/* ET_EIFFEL_PARSER.set_start_condition */
extern void T158f954(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.more */
extern void T158f960(T0* C);
/* ET_EIFFEL_PARSER.process_identifier */
extern void T158f959(T0* C, T6 a1);
/* ET_AST_FACTORY.new_reference_keyword */
extern T0* T248f112(T0* C, T0* a1);
/* ET_KEYWORD.set_position */
extern void T166f27(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD.make_reference */
extern T0* T166c38(void);
/* ET_AST_FACTORY.new_precursor_keyword */
extern T0* T248f111(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_position */
extern void T422f19(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_invariant_keyword */
extern T0* T248f110(T0* C, T0* a1);
/* ET_AST_FACTORY.new_attribute_keyword */
extern T0* T248f109(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.attribute_keyword */
extern unsigned char ge781os12597;
extern T0* ge781ov12597;
extern T0* T157f612(T0* C);
/* ET_KEYWORD.make_attribute */
extern T0* T166c75(void);
/* ET_AST_FACTORY.new_undefine_keyword */
extern T0* T248f108(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.undefine_keyword */
extern unsigned char ge781os12645;
extern T0* ge781ov12645;
extern T0* T157f611(T0* C);
/* ET_KEYWORD.make_undefine */
extern T0* T166c74(void);
/* ET_AST_FACTORY.new_separate_keyword */
extern T0* T248f107(T0* C, T0* a1);
/* ET_KEYWORD.make_separate */
extern T0* T166c37(void);
/* ET_AST_FACTORY.new_redefine_keyword */
extern T0* T248f106(T0* C, T0* a1);
/* ET_AST_FACTORY.new_obsolete_keyword */
extern T0* T248f105(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.obsolete_keyword */
extern unsigned char ge781os12628;
extern T0* ge781ov12628;
extern T0* T157f609(T0* C);
/* ET_KEYWORD.make_obsolete */
extern T0* T166c72(void);
/* ET_AST_FACTORY.new_indexing_keyword */
extern T0* T248f104(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.indexing_keyword */
extern unsigned char ge781os12619;
extern T0* ge781ov12619;
extern T0* T157f608(T0* C);
/* ET_KEYWORD.make_indexing */
extern T0* T166c71(void);
/* ET_AST_FACTORY.new_external_keyword */
extern T0* T248f103(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.external_keyword */
extern unsigned char ge781os12614;
extern T0* ge781ov12614;
extern T0* T157f607(T0* C);
/* ET_KEYWORD.make_external */
extern T0* T166c70(void);
/* ET_AST_FACTORY.new_expanded_keyword */
extern T0* T248f102(T0* C, T0* a1);
/* ET_KEYWORD.make_expanded */
extern T0* T166c36(void);
/* ET_AST_FACTORY.new_deferred_keyword */
extern T0* T248f101(T0* C, T0* a1);
/* ET_AST_FACTORY.new_creation_keyword */
extern T0* T248f100(T0* C, T0* a1);
/* ET_AST_FACTORY.new_variant_keyword */
extern T0* T248f99(T0* C, T0* a1);
/* ET_AST_FACTORY.new_require_keyword */
extern T0* T248f98(T0* C, T0* a1);
/* ET_AST_FACTORY.new_inspect_keyword */
extern T0* T248f97(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.inspect_keyword */
extern unsigned char ge781os12622;
extern T0* ge781ov12622;
extern T0* T157f603(T0* C);
/* ET_KEYWORD.make_inspect */
extern T0* T166c66(void);
/* ET_AST_FACTORY.new_inherit_keyword */
extern T0* T248f96(T0* C, T0* a1);
/* ET_AST_FACTORY.new_implies_keyword */
extern T0* T248f95(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.set_position */
extern void T450f47(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_OPERATOR.make_implies */
extern T0* T450c51(void);
/* ET_AST_FACTORY.new_feature_keyword */
extern T0* T248f94(T0* C, T0* a1);
/* ET_AST_FACTORY.new_convert_keyword */
extern T0* T248f93(T0* C, T0* a1);
/* ET_AST_FACTORY.new_current_keyword */
extern T0* T248f92(T0* C, T0* a1);
/* ET_CURRENT.set_position */
extern void T182f30(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_unique_keyword */
extern T0* T248f91(T0* C, T0* a1);
/* ET_AST_FACTORY.new_select_keyword */
extern T0* T248f90(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.select_keyword */
extern unsigned char ge781os12641;
extern T0* ge781ov12641;
extern T0* T157f599(T0* C);
/* ET_KEYWORD.make_select */
extern T0* T166c62(void);
/* ET_AST_FACTORY.new_result_keyword */
extern T0* T248f89(T0* C, T0* a1);
/* ET_RESULT.set_position */
extern void T206f28(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_rescue_keyword */
extern T0* T248f88(T0* C, T0* a1);
/* ET_AST_FACTORY.new_rename_keyword */
extern T0* T248f87(T0* C, T0* a1);
/* ET_AST_FACTORY.new_recast_keyword */
extern T0* T248f86(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.recast_keyword */
extern unsigned char ge781os12634;
extern T0* ge781ov12634;
extern T0* T157f596(T0* C);
/* ET_KEYWORD.make_recast */
extern T0* T166c59(void);
/* ET_AST_FACTORY.new_prefix_keyword */
extern T0* T248f85(T0* C, T0* a1);
/* ET_AST_FACTORY.new_frozen_keyword */
extern T0* T248f84(T0* C, T0* a1);
/* ET_KEYWORD.make_frozen */
extern T0* T166c33(void);
/* ET_AST_FACTORY.new_export_keyword */
extern T0* T248f83(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ensure_keyword */
extern T0* T248f82(T0* C, T0* a1);
/* ET_AST_FACTORY.new_elseif_keyword */
extern T0* T248f81(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.elseif_keyword */
extern unsigned char ge781os12609;
extern T0* ge781ov12609;
extern T0* T157f593(T0* C);
/* ET_KEYWORD.make_elseif */
extern T0* T166c56(void);
/* ET_AST_FACTORY.new_create_keyword */
extern T0* T248f80(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_keyword */
extern T0* T248f79(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.assign_keyword */
extern unsigned char ge781os12596;
extern T0* ge781ov12596;
extern T0* T157f591(T0* C);
/* ET_KEYWORD.make_assign */
extern T0* T166c54(void);
/* ET_AST_FACTORY.new_until_keyword */
extern T0* T248f78(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.until_keyword */
extern unsigned char ge781os12647;
extern T0* ge781ov12647;
extern T0* T157f590(T0* C);
/* ET_KEYWORD.make_until */
extern T0* T166c53(void);
/* ET_AST_FACTORY.new_strip_keyword */
extern T0* T248f77(T0* C, T0* a1);
/* ET_AST_FACTORY.new_retry_keyword */
extern T0* T248f76(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.set_position */
extern void T460f13(T0* C, T6 a1, T6 a2);
/* ET_RETRY_INSTRUCTION.make */
extern T0* T460c12(void);
/* ET_RETRY_INSTRUCTION.make_token */
extern void T460f14(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.make_leaf */
extern void T460f15(T0* C);
/* ET_RETRY_INSTRUCTION.tokens */
extern T0* T460f2(T0* C);
/* ET_AST_FACTORY.new_local_keyword */
extern T0* T248f75(T0* C, T0* a1);
/* ET_AST_FACTORY.new_infix_keyword */
extern T0* T248f74(T0* C, T0* a1);
/* ET_AST_FACTORY.new_false_keyword */
extern T0* T248f73(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.set_position */
extern void T489f31(T0* C, T6 a1, T6 a2);
/* ET_FALSE_CONSTANT.make */
extern T0* T489c30(void);
/* ET_FALSE_CONSTANT.make_token */
extern void T489f32(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.make_leaf */
extern void T489f33(T0* C);
/* ET_FALSE_CONSTANT.tokens */
extern T0* T489f2(T0* C);
/* ET_AST_FACTORY.new_debug_keyword */
extern T0* T248f72(T0* C, T0* a1);
/* ET_AST_FACTORY.new_class_keyword */
extern T0* T248f71(T0* C, T0* a1);
/* ET_AST_FACTORY.new_check_keyword */
extern T0* T248f70(T0* C, T0* a1);
/* ET_AST_FACTORY.new_alias_keyword */
extern T0* T248f69(T0* C, T0* a1);
/* ET_AST_FACTORY.new_agent_keyword */
extern T0* T248f68(T0* C, T0* a1);
/* ET_AGENT_KEYWORD.set_position */
extern void T419f14(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_when_keyword */
extern T0* T248f67(T0* C, T0* a1);
/* ET_AST_FACTORY.new_void_keyword */
extern T0* T248f66(T0* C, T0* a1);
/* ET_VOID.set_position */
extern void T466f25(T0* C, T6 a1, T6 a2);
/* ET_VOID.make */
extern T0* T466c24(void);
/* ET_VOID.make_token */
extern void T466f26(T0* C, T0* a1);
/* ET_VOID.make_leaf */
extern void T466f27(T0* C);
/* ET_VOID.tokens */
extern T0* T466f2(T0* C);
/* ET_AST_FACTORY.new_true_keyword */
extern T0* T248f65(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.set_position */
extern void T488f31(T0* C, T6 a1, T6 a2);
/* ET_TRUE_CONSTANT.make */
extern T0* T488c30(void);
/* ET_TRUE_CONSTANT.make_token */
extern void T488f32(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.make_leaf */
extern void T488f33(T0* C);
/* ET_TRUE_CONSTANT.tokens */
extern T0* T488f2(T0* C);
/* ET_AST_FACTORY.new_then_keyword */
extern T0* T248f64(T0* C, T0* a1);
/* ET_AST_FACTORY.new_loop_keyword */
extern T0* T248f63(T0* C, T0* a1);
/* ET_AST_FACTORY.new_like_keyword */
extern T0* T248f62(T0* C, T0* a1);
/* ET_AST_FACTORY.new_from_keyword */
extern T0* T248f61(T0* C, T0* a1);
/* ET_AST_FACTORY.new_else_keyword */
extern T0* T248f60(T0* C, T0* a1);
/* ET_AST_FACTORY.new_xor_keyword */
extern T0* T248f59(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_xor */
extern T0* T450c50(void);
/* ET_AST_FACTORY.new_old_keyword */
extern T0* T248f58(T0* C, T0* a1);
/* ET_AST_FACTORY.new_not_keyword */
extern T0* T248f57(T0* C, T0* a1);
/* ET_KEYWORD_OPERATOR.make_not */
extern T0* T450c49(void);
/* ET_AST_FACTORY.new_end_keyword */
extern T0* T248f56(T0* C, T0* a1);
/* ET_AST_FACTORY.new_all_keyword */
extern T0* T248f54(T0* C, T0* a1);
/* ET_AST_FACTORY.new_and_keyword */
extern T0* T248f53(T0* C, T0* a1);
/* ET_AST_FACTORY.new_or_keyword */
extern T0* T248f52(T0* C, T0* a1);
/* ET_AST_FACTORY.new_is_keyword */
extern T0* T248f51(T0* C, T0* a1);
/* ET_AST_FACTORY.new_if_keyword */
extern T0* T248f50(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.if_keyword */
extern unsigned char ge781os12618;
extern T0* ge781ov12618;
extern T0* T157f578(T0* C);
/* ET_KEYWORD.make_if */
extern T0* T166c41(void);
/* ET_AST_FACTORY.new_do_keyword */
extern T0* T248f49(T0* C, T0* a1);
/* ET_AST_FACTORY.new_as_keyword */
extern T0* T248f48(T0* C, T0* a1);
/* ET_AST_FACTORY.new_once_keyword */
extern T0* T248f1(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_two_char_symbol */
extern void T158f958(T0* C, T2 a1, T2 a2);
/* ET_AST_FACTORY.new_assign_attempt_symbol */
extern T0* T248f47(T0* C, T0* a1);
/* ET_AST_FACTORY.new_assign_symbol */
extern T0* T248f46(T0* C, T0* a1);
/* ET_AST_FACTORY.new_dotdot_symbol */
extern T0* T248f45(T0* C, T0* a1);
/* ET_AST_FACTORY.new_arrow_symbol */
extern T0* T248f44(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_array_symbol */
extern T0* T248f43(T0* C, T0* a1);
/* ET_SYMBOL.set_position */
extern void T425f53(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_le_symbol */
extern T0* T248f42(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.set_position */
extern void T463f58(T0* C, T6 a1, T6 a2);
/* ET_SYMBOL_OPERATOR.make_le */
extern T0* T463c68(void);
/* ET_SYMBOL_OPERATOR.make_leaf */
extern void T463f69(T0* C);
/* ET_AST_FACTORY.new_right_array_symbol */
extern T0* T248f41(T0* C, T0* a1);
/* ET_AST_FACTORY.new_ge_symbol */
extern T0* T248f40(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_ge */
extern T0* T463c67(void);
/* ET_AST_FACTORY.new_mod_symbol */
extern T0* T248f39(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_mod */
extern T0* T463c66(void);
/* ET_AST_FACTORY.new_not_equal_symbol */
extern T0* T248f38(T0* C, T0* a1);
/* ET_SYMBOL.make_not_equal */
extern T0* T425c55(void);
/* ET_AST_FACTORY.new_div_symbol */
extern T0* T248f37(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_div */
extern T0* T463c65(void);
/* ET_EIFFEL_PARSER.text_count */
extern T6 T158f389(T0* C);
/* ET_EIFFEL_PARSER.yy_set_line_column */
extern void T158f957(T0* C);
/* ET_EIFFEL_PARSER.process_one_char_symbol */
extern void T158f956(T0* C, T2 a1);
/* ET_AST_FACTORY.new_tilde_symbol */
extern T0* T248f36(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.tilde_symbol */
extern unsigned char ge781os12589;
extern T0* ge781ov12589;
extern T0* T157f570(T0* C);
/* ET_SYMBOL.make_tilde */
extern T0* T425c67(void);
/* ET_AST_FACTORY.new_dollar_symbol */
extern T0* T248f35(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_bracket_symbol */
extern T0* T248f34(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_bracket_symbol */
extern T0* T248f33(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.set_position */
extern void T472f82(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_right_brace_symbol */
extern T0* T248f32(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_brace_symbol */
extern T0* T248f31(T0* C, T0* a1);
/* ET_AST_FACTORY.new_right_parenthesis_symbol */
extern T0* T248f30(T0* C, T0* a1);
/* ET_AST_FACTORY.new_left_parenthesis_symbol */
extern T0* T248f29(T0* C, T0* a1);
/* ET_AST_FACTORY.new_question_mark_symbol */
extern T0* T248f28(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.set_position */
extern void T475f12(T0* C, T6 a1, T6 a2);
/* ET_AST_FACTORY.new_bang_symbol */
extern T0* T248f27(T0* C, T0* a1);
/* ET_AST_FACTORY.new_colon_symbol */
extern T0* T248f26(T0* C, T0* a1);
/* ET_AST_FACTORY.new_comma_symbol */
extern T0* T248f25(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.comma_symbol */
extern unsigned char ge781os12575;
extern T0* ge781ov12575;
extern T0* T157f565(T0* C);
/* ET_SYMBOL.make_comma */
extern T0* T425c62(void);
/* ET_AST_FACTORY.new_semicolon_symbol */
extern T0* T248f24(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.semicolon_symbol */
extern T0* T157f564(T0* C);
/* ET_SEMICOLON_SYMBOL.make */
extern T0* T469c4(void);
/* ET_SEMICOLON_SYMBOL.make_leaf */
extern void T469f5(T0* C);
/* ET_SEMICOLON_SYMBOL.tokens */
extern T0* T469f2(T0* C);
/* ET_AST_FACTORY.new_dot_symbol */
extern T0* T248f23(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.dot_symbol */
extern unsigned char ge781os12577;
extern T0* ge781ov12577;
extern T0* T157f563(T0* C);
/* ET_SYMBOL.make_dot */
extern T0* T425c61(void);
/* ET_AST_FACTORY.new_lt_symbol */
extern T0* T248f22(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_lt */
extern T0* T463c64(void);
/* ET_AST_FACTORY.new_gt_symbol */
extern T0* T248f21(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_gt */
extern T0* T463c63(void);
/* ET_AST_FACTORY.new_equal_symbol */
extern T0* T248f20(T0* C, T0* a1);
/* ET_SYMBOL.make_equal */
extern T0* T425c52(void);
/* ET_AST_FACTORY.new_power_symbol */
extern T0* T248f19(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_power */
extern T0* T463c62(void);
/* ET_AST_FACTORY.new_divide_symbol */
extern T0* T248f18(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_divide */
extern T0* T463c61(void);
/* ET_AST_FACTORY.new_times_symbol */
extern T0* T248f17(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_times */
extern T0* T463c60(void);
/* ET_AST_FACTORY.new_plus_symbol */
extern T0* T248f16(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_plus */
extern T0* T463c59(void);
/* ET_AST_FACTORY.new_minus_symbol */
extern T0* T248f15(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.make_minus */
extern T0* T463c57(void);
/* ET_EIFFEL_PARSER.text_item */
extern T2 T158f388(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_execute_eof_action */
extern void T158f936(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.terminate */
extern void T158f952(T0* C);
/* ET_EIFFEL_PARSER.wrap */
extern T1 T158f281(T0* C);
/* ET_EIFFEL_PARSER.yy_refill_input_buffer */
extern void T158f935(T0* C);
/* ET_EIFFEL_PARSER.yy_null_trans_state */
extern T6 T158f280(T0* C, T6 a1);
/* ET_EIFFEL_PARSER.yy_previous_state */
extern T6 T158f279(T0* C);
/* ET_EIFFEL_PARSER.fatal_error */
extern void T158f934(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.yy_init_value_stacks */
extern void T158f924(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_all */
extern void T158f933(T0* C);
/* ET_EIFFEL_PARSER.clear_all */
extern void T158f950(T0* C);
/* ET_EIFFEL_PARSER.clear_stacks */
extern void T158f1714(T0* C);
/* ET_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T158f1738(T0* C);
/* SPECIAL [ET_WRITABLE].clear_all */
extern void T696f6(T0* C);
/* SPECIAL [ET_WHEN_PART_LIST].clear_all */
extern void T723f6(T0* C);
/* SPECIAL [ET_WHEN_PART].clear_all */
extern void T727f6(T0* C);
/* SPECIAL [ET_VARIANT].clear_all */
extern void T675f6(T0* C);
/* SPECIAL [ET_TYPE_LIST].clear_all */
extern void T601f6(T0* C);
/* SPECIAL [ET_TYPE_ITEM].clear_all */
extern void T608f6(T0* C);
/* SPECIAL [ET_TYPE].clear_all */
extern void T606f6(T0* C);
/* SPECIAL [ET_STRIP_EXPRESSION].clear_all */
extern void T783f6(T0* C);
/* SPECIAL [ET_STATIC_CALL_EXPRESSION].clear_all */
extern void T743f6(T0* C);
/* SPECIAL [ET_RENAME_LIST].clear_all */
extern void T562f6(T0* C);
/* SPECIAL [ET_RENAME_ITEM].clear_all */
extern void T569f6(T0* C);
/* SPECIAL [ET_QUERY].clear_all */
extern void T613f6(T0* C);
/* SPECIAL [ET_PROCEDURE].clear_all */
extern void T614f6(T0* C);
/* SPECIAL [ET_PRECONDITIONS].clear_all */
extern void T622f6(T0* C);
/* SPECIAL [ET_POSTCONDITIONS].clear_all */
extern void T628f6(T0* C);
/* SPECIAL [ET_PARENT_LIST].clear_all */
extern void T496f6(T0* C);
/* SPECIAL [ET_PARENT_ITEM].clear_all */
extern void T565f6(T0* C);
/* SPECIAL [ET_PARENT].clear_all */
extern void T560f6(T0* C);
/* SPECIAL [ET_PARENTHESIZED_EXPRESSION].clear_all */
extern void T759f6(T0* C);
/* SPECIAL [ET_OBSOLETE].clear_all */
extern void T495f6(T0* C);
/* SPECIAL [ET_MANIFEST_TUPLE].clear_all */
extern void T524f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_LIST].clear_all */
extern void T745f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING_ITEM].clear_all */
extern void T749f6(T0* C);
/* SPECIAL [ET_MANIFEST_ARRAY].clear_all */
extern void T781f6(T0* C);
/* SPECIAL [ET_LOOP_INVARIANTS].clear_all */
extern void T672f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_LIST].clear_all */
extern void T624f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE_ITEM].clear_all */
extern void T661f6(T0* C);
/* SPECIAL [ET_LOCAL_VARIABLE].clear_all */
extern void T663f6(T0* C);
/* SPECIAL [ET_LIKE_TYPE].clear_all */
extern void T547f6(T0* C);
/* SPECIAL [ET_KEYWORD_FEATURE_NAME_LIST].clear_all */
extern void T564f6(T0* C);
/* SPECIAL [ET_INVARIANTS].clear_all */
extern void T504f6(T0* C);
/* SPECIAL [ET_INSTRUCTION].clear_all */
extern void T689f6(T0* C);
/* SPECIAL [ET_INSPECT_INSTRUCTION].clear_all */
extern void T702f6(T0* C);
/* SPECIAL [ET_INLINE_AGENT].clear_all */
extern void T778f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_LIST].clear_all */
extern void T509f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM_ITEM].clear_all */
extern void T518f6(T0* C);
/* SPECIAL [ET_INDEXING_TERM].clear_all */
extern void T515f6(T0* C);
/* SPECIAL [ET_INDEXING_ITEM].clear_all */
extern void T507f6(T0* C);
/* SPECIAL [ET_INDEXING_LIST].clear_all */
extern void T493f6(T0* C);
/* SPECIAL [ET_IF_INSTRUCTION].clear_all */
extern void T700f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_LIST].clear_all */
extern void T526f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER_ITEM].clear_all */
extern void T531f6(T0* C);
/* SPECIAL [ET_FORMAL_PARAMETER].clear_all */
extern void T529f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_LIST].clear_all */
extern void T630f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT_ITEM].clear_all */
extern void T654f6(T0* C);
/* SPECIAL [ET_FORMAL_ARGUMENT].clear_all */
extern void T655f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME_ITEM].clear_all */
extern void T541f6(T0* C);
/* SPECIAL [ET_FEATURE_NAME].clear_all */
extern void T570f6(T0* C);
/* SPECIAL [ET_FEATURE_EXPORT].clear_all */
extern void T581f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE_LIST].clear_all */
extern void T502f6(T0* C);
/* SPECIAL [ET_FEATURE_CLAUSE].clear_all */
extern void T611f6(T0* C);
/* SPECIAL [ET_EXTERNAL_ALIAS].clear_all */
extern void T635f6(T0* C);
/* SPECIAL [ET_EXTENDED_FEATURE_NAME].clear_all */
extern void T571f6(T0* C);
/* SPECIAL [ET_EXPRESSION_ITEM].clear_all */
extern void T761f6(T0* C);
/* SPECIAL [ET_EXPRESSION].clear_all */
extern void T667f6(T0* C);
/* SPECIAL [ET_EXPORT_LIST].clear_all */
extern void T563f6(T0* C);
/* SPECIAL [ET_EXPORT].clear_all */
extern void T576f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART_LIST].clear_all */
extern void T717f6(T0* C);
/* SPECIAL [ET_ELSEIF_PART].clear_all */
extern void T719f6(T0* C);
/* SPECIAL [ET_DEBUG_INSTRUCTION].clear_all */
extern void T706f6(T0* C);
/* SPECIAL [ET_CREATOR_LIST].clear_all */
extern void T498f6(T0* C);
/* SPECIAL [ET_CREATOR].clear_all */
extern void T592f6(T0* C);
/* SPECIAL [ET_CREATE_EXPRESSION].clear_all */
extern void T521f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_LIST].clear_all */
extern void T500f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE_ITEM].clear_all */
extern void T598f6(T0* C);
/* SPECIAL [ET_CONVERT_FEATURE].clear_all */
extern void T596f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_TYPE].clear_all */
extern void T535f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_CREATOR].clear_all */
extern void T538f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_LIST].clear_all */
extern void T543f6(T0* C);
/* SPECIAL [ET_CONSTRAINT_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T552f6(T0* C);
/* SPECIAL [ET_CONSTANT].clear_all */
extern void T619f6(T0* C);
/* SPECIAL [ET_COMPOUND].clear_all */
extern void T626f6(T0* C);
/* SPECIAL [ET_CLIENTS].clear_all */
extern void T577f6(T0* C);
/* SPECIAL [ET_CLASS_NAME_ITEM].clear_all */
extern void T586f6(T0* C);
/* SPECIAL [ET_CLASS].clear_all */
extern void T389f6(T0* C);
/* SPECIAL [ET_CHOICE_LIST].clear_all */
extern void T729f6(T0* C);
/* SPECIAL [ET_CHOICE_ITEM].clear_all */
extern void T735f6(T0* C);
/* SPECIAL [ET_CHOICE_CONSTANT].clear_all */
extern void T738f6(T0* C);
/* SPECIAL [ET_CHOICE].clear_all */
extern void T733f6(T0* C);
/* SPECIAL [ET_CALL_EXPRESSION].clear_all */
extern void T690f6(T0* C);
/* SPECIAL [ET_CALL_AGENT].clear_all */
extern void T776f6(T0* C);
/* SPECIAL [ET_BRACKET_EXPRESSION].clear_all */
extern void T695f6(T0* C);
/* SPECIAL [ET_BRACKET_ARGUMENT_LIST].clear_all */
extern void T785f6(T0* C);
/* SPECIAL [ET_ASSIGNER].clear_all */
extern void T617f6(T0* C);
/* SPECIAL [ET_ALIAS_NAME].clear_all */
extern void T648f6(T0* C);
/* SPECIAL [ET_AGENT_TARGET].clear_all */
extern void T797f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_LIST].clear_all */
extern void T795f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND_ITEM].clear_all */
extern void T810f6(T0* C);
/* SPECIAL [ET_AGENT_ARGUMENT_OPERAND].clear_all */
extern void T808f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_LIST].clear_all */
extern void T559f6(T0* C);
/* SPECIAL [ET_ACTUAL_PARAMETER_ITEM].clear_all */
extern void T680f6(T0* C);
/* SPECIAL [ET_ACTUAL_ARGUMENT_LIST].clear_all */
extern void T711f6(T0* C);
/* SPECIAL [ET_QUESTION_MARK_SYMBOL].clear_all */
extern void T476f6(T0* C);
/* SPECIAL [ET_BRACKET_SYMBOL].clear_all */
extern void T473f6(T0* C);
/* SPECIAL [ET_SEMICOLON_SYMBOL].clear_all */
extern void T470f6(T0* C);
/* SPECIAL [ET_VOID].clear_all */
extern void T467f6(T0* C);
/* SPECIAL [ET_SYMBOL_OPERATOR].clear_all */
extern void T464f6(T0* C);
/* SPECIAL [ET_RETRY_INSTRUCTION].clear_all */
extern void T461f6(T0* C);
/* SPECIAL [ET_RESULT].clear_all */
extern void T458f6(T0* C);
/* SPECIAL [ET_REAL_CONSTANT].clear_all */
extern void T456f6(T0* C);
/* SPECIAL [ET_MANIFEST_STRING].clear_all */
extern void T453f6(T0* C);
/* SPECIAL [ET_KEYWORD_OPERATOR].clear_all */
extern void T451f6(T0* C);
/* SPECIAL [ET_INTEGER_CONSTANT].clear_all */
extern void T448f6(T0* C);
/* SPECIAL [ET_IDENTIFIER].clear_all */
extern void T120f6(T0* C);
/* SPECIAL [ET_FREE_OPERATOR].clear_all */
extern void T445f6(T0* C);
/* SPECIAL [ET_CURRENT].clear_all */
extern void T442f6(T0* C);
/* SPECIAL [ET_CHARACTER_CONSTANT].clear_all */
extern void T440f6(T0* C);
/* SPECIAL [ET_BREAK].clear_all */
extern void T437f6(T0* C);
/* SPECIAL [ET_BOOLEAN_CONSTANT].clear_all */
extern void T434f6(T0* C);
/* SPECIAL [ET_BIT_CONSTANT].clear_all */
extern void T431f6(T0* C);
/* SPECIAL [ET_POSITION].clear_all */
extern void T428f6(T0* C);
/* SPECIAL [ET_SYMBOL].clear_all */
extern void T426f6(T0* C);
/* SPECIAL [ET_PRECURSOR_KEYWORD].clear_all */
extern void T423f6(T0* C);
/* SPECIAL [ET_AGENT_KEYWORD].clear_all */
extern void T420f6(T0* C);
/* SPECIAL [ET_KEYWORD].clear_all */
extern void T417f6(T0* C);
/* SPECIAL [ANY].clear_all */
extern void T117f6(T0* C);
/* ET_EIFFEL_PARSER.abort */
extern void T158f927(T0* C);
/* ET_EIFFEL_PARSER.eiffel_buffer */
extern T0* T158f71(T0* C);
/* ET_EIFFEL_PARSER.std */
extern T0* T158f868(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].wipe_out */
extern void T402f9(T0* C);
/* DS_ARRAYED_STACK [ET_SYMBOL].clear_items */
extern void T402f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [ET_KEYWORD].wipe_out */
extern void T401f9(T0* C);
/* DS_ARRAYED_STACK [ET_KEYWORD].clear_items */
extern void T401f12(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_STACK [INTEGER].wipe_out */
extern void T398f9(T0* C);
/* DS_ARRAYED_STACK [INTEGER].clear_items */
extern void T398f13(T0* C, T6 a1, T6 a2);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921p1(T0* C);
/* ET_EIFFEL_PARSER.reset */
extern void T158f921p0(T0* C);
/* ET_EIFFEL_PARSER.eiffel_compiler */
extern T0* T158f47(T0* C);
/* ET_EIFFEL_PARSER.tmp_file */
extern T0* T158f46(T0* C);
/* ET_EIFFEL_PARSER.shared_file */
extern T0* T158f865(T0* C);
/* ET_EIFFEL_PARSER.file_system */
extern T0* T158f45(T0* C);
/* ET_EIFFEL_PARSER.unix_file_system */
extern T0* T158f864(T0* C);
/* ET_EIFFEL_PARSER.windows_file_system */
extern T0* T158f863(T0* C);
/* ET_EIFFEL_PARSER.operating_system */
extern T0* T158f862(T0* C);
/* ET_EIFFEL_PARSER.tmp_directory */
extern T0* T158f44(T0* C);
/* ET_EIFFEL_PARSER.shared_directory */
extern unsigned char ge964os14354;
extern T0* ge964ov14354;
extern T0* T158f860(T0* C);
/* ET_EIFFEL_PARSER.execution_environment */
extern T0* T158f43(T0* C);
/* ET_XACE_UNIVERSE.parse_all */
extern void T48f160(T0* C);
/* ET_SYSTEM.set_dynamic_type_set_builder */
extern void T53f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make */
extern T0* T59c197(T0* a1);
/* DS_CELL [INTEGER].make */
extern T0* T235c2(T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_feature */
extern unsigned char ge941os7827;
extern T0* ge941ov7827;
extern T0* T59f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_feature */
extern T0* T59f36(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dummy_dynamic_type */
extern unsigned char ge941os7826;
extern T0* ge941ov7826;
extern T0* T59f4(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.make_feature_checker */
extern void T59f202(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.free_context */
extern void T59f205(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.new_context */
extern T0* T59f47(T0* C, T0* a1);
/* ET_SYSTEM.set_catcall_mode */
extern void T53f47(T0* C, T1 a1);
/* GEC.is_cat */
extern T1 T21f18(T0* C);
/* ET_SYSTEM.make */
extern T0* T53c46(T0* a1);
/* ET_SYSTEM.make_basic_types */
extern void T53f50(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.make */
extern T0* T142c8(T0* a1);
/* GEC.is_verbose */
extern T1 T21f17(T0* C);
/* ET_LACE_UNIVERSE.set_ise_version */
extern void T51f154(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_keyword_usage */
extern void T51f171(T0* C);
/* ET_LACE_UNIVERSE.set_ecma_version */
extern void T51f182(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T51f181(T0* C);
/* ET_TOKEN_CONSTANTS.double_ref_class_name */
extern unsigned char ge781os12447;
extern T0* ge781ov12447;
extern T0* T157f99(T0* C);
/* ET_TOKEN_CONSTANTS.real_ref_class_name */
extern unsigned char ge781os12462;
extern T0* ge781ov12462;
extern T0* T157f98(T0* C);
/* ET_TOKEN_CONSTANTS.natural_ref_class_name */
extern unsigned char ge781os12454;
extern T0* ge781ov12454;
extern T0* T157f95(T0* C);
/* ET_TOKEN_CONSTANTS.integer_ref_class_name */
extern unsigned char ge781os12449;
extern T0* ge781ov12449;
extern T0* T157f90(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.make */
extern T0* T294c6(T0* a1);
/* ET_BRACED_TYPE_LIST.make */
extern T0* T919c11(void);
/* ET_BRACED_TYPE_LIST.make */
extern void T919f11p1(T0* C);
/* ET_TOKEN_CONSTANTS.wide_character_ref_class_name */
extern unsigned char ge781os12465;
extern T0* ge781ov12465;
extern T0* T157f85(T0* C);
/* ET_TOKEN_CONSTANTS.character_ref_class_name */
extern unsigned char ge781os12443;
extern T0* ge781ov12443;
extern T0* T157f84(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove */
extern void T141f45(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_position */
extern void T141f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_forth */
extern void T141f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_all_cursors */
extern void T141f67(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].move_cursors_after */
extern void T141f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].internal_set_key_equality_tester */
extern void T141f60(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].internal_set_equality_tester */
extern void T387f6(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.string_class_name */
extern unsigned char ge781os12432;
extern T0* ge781ov12432;
extern T0* T157f52(T0* C);
/* ET_LACE_UNIVERSE.tokens */
extern T0* T51f82(T0* C);
/* ET_LACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T51f180(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].remove_found_item */
extern void T141f44(T0* C);
/* ET_LACE_UNIVERSE.ise_5_7_60362 */
extern unsigned char ge260os1590;
extern T0* ge260ov1590;
extern T0* T51f70(T0* C);
/* ET_LACE_UNIVERSE.set_use_void_keyword */
extern void T51f179(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_reference_keyword */
extern void T51f178(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_recast_keyword */
extern void T51f177(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_create_keyword */
extern void T51f176(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_convert_keyword */
extern void T51f175(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_attribute_keyword */
extern void T51f174(T0* C, T1 a1);
/* ET_LACE_UNIVERSE.set_use_assign_keyword */
extern void T51f173(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_ise_version */
extern void T48f158(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_keyword_usage */
extern void T48f173(T0* C);
/* ET_XACE_UNIVERSE.set_ecma_version */
extern void T48f184(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_default_aliased_sized_basic_classes */
extern void T48f183(T0* C);
/* ET_XACE_UNIVERSE.tokens */
extern T0* T48f77(T0* C);
/* ET_XACE_UNIVERSE.set_non_aliased_sized_basic_classes */
extern void T48f182(T0* C);
/* ET_XACE_UNIVERSE.ise_5_7_60362 */
extern T0* T48f64(T0* C);
/* ET_XACE_UNIVERSE.set_use_void_keyword */
extern void T48f181(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_reference_keyword */
extern void T48f180(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_recast_keyword */
extern void T48f179(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_create_keyword */
extern void T48f178(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_convert_keyword */
extern void T48f177(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_attribute_keyword */
extern void T48f176(T0* C, T1 a1);
/* ET_XACE_UNIVERSE.set_use_assign_keyword */
extern void T48f175(T0* C, T1 a1);
/* GEC.ise_latest */
extern unsigned char ge260os1597;
extern T0* ge260ov1597;
extern T0* T21f16(T0* C);
/* UT_VERSION.make_latest */
extern T0* T58c16(void);
/* ET_NULL_ERROR_HANDLER.set_ise */
extern void T52f152(T0* C);
/* ET_ERROR_HANDLER.set_ise */
extern void T28f152(T0* C);
/* ET_LACE_UNIVERSE.set_error_handler */
extern void T51f153(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_error_handler */
extern void T48f157(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.make_standard */
extern T0* T52c151(void);
/* GEC.is_silent */
extern T1 T21f15(T0* C);
/* KL_TEXT_INPUT_FILE.close */
extern void T22f41(T0* C);
/* KL_TEXT_INPUT_FILE.old_close */
extern void T22f44(T0* C);
/* KL_TEXT_INPUT_FILE.file_close */
extern void T22f45(T0* C, T14 a1);
/* GEC.parse_ace_file */
extern void T21f30(T0* C, T0* a1);
/* ET_LACE_PARSER.syntax_error */
extern T1 T49f1(T0* C);
/* ET_LACE_PARSER.parse_file */
extern void T49f215(T0* C, T0* a1);
/* ET_LACE_PARSER.yyparse */
extern void T49f219(T0* C);
/* ET_LACE_PARSER.yy_pop_last_value */
extern void T49f232(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_push_error_value */
extern void T49f231(T0* C);
/* ET_LACE_PARSER.yy_do_action */
extern void T49f230(T0* C, T6 a1);
/* ET_LACE_PARSER.add_external_value */
extern void T49f244(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.object_option */
extern unsigned char ge987os4880;
extern T0* ge987ov4880;
extern T0* T49f195(T0* C);
/* ET_LACE_PARSER.new_identifier */
extern T0* T49f171(T0* C, T0* a1);
/* ET_LACE_PARSER.include_path_option */
extern unsigned char ge987os4877;
extern T0* ge987ov4877;
extern T0* T49f194(T0* C);
/* ET_LACE_PARSER.new_gac_assembly */
extern T0* T49f147(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_public_key_token */
extern void T137f14(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_culture */
extern void T137f13(T0* C, T0* a1);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_assembly_version */
extern void T137f12(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_gac_assembly */
extern T0* T111f8(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.make */
extern T0* T137c10(T0* a1, T0* a2);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].resize */
extern T0* T136f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].resized_area */
extern T0* T135f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].copy_data */
extern void T135f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].move_data */
extern void T135f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].overlapping_move */
extern void T135f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].non_overlapping_move */
extern void T135f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T135c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T136f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLY].make_area */
extern T0* T385c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLY].default_create */
extern T0* T136c3(void);
/* ET_LACE_DOTNET_GAC_ASSEMBLY.set_classname_prefix */
extern void T137f11(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLY.set_classname_prefix */
extern void T126f8(T0* C, T0* a1);
/* ET_LACE_PARSER.new_assembly */
extern T0* T49f144(T0* C, T0* a1, T0* a2);
/* ET_LACE_AST_FACTORY.new_assembly */
extern T0* T111f7(T0* C, T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLY.make */
extern T0* T126c7(T0* a1, T0* a2);
/* ET_LACE_DOTNET_ASSEMBLIES.put_last */
extern void T125f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].force_last */
extern void T380f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].resize */
extern void T380f13(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_capacity */
extern T6 T380f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].extendible */
extern T1 T380f7(T0* C, T6 a1);
/* ET_LACE_PARSER.new_assemblies */
extern T0* T49f143(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_assemblies */
extern T0* T111f6(T0* C, T0* a1);
/* ET_LACE_DOTNET_ASSEMBLIES.make */
extern T0* T125c5(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].put_last */
extern void T380f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T380c10(T6 a1);
/* DS_ARRAYED_LIST [ET_LACE_DOTNET_ASSEMBLY].new_cursor */
extern T0* T380f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LACE_DOTNET_ASSEMBLY].make */
extern T0* T1000c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].resize */
extern T0* T134f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].resized_area */
extern T0* T128f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].copy_data */
extern void T128f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].move_data */
extern void T128f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].overlapping_move */
extern void T128f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].non_overlapping_move */
extern void T128f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T128c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].make */
extern T0* T134f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].make_area */
extern T0* T384c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_DOTNET_ASSEMBLIES].default_create */
extern T0* T134c3(void);
/* ET_LACE_EXCLUDE.put_last */
extern void T124f7(T0* C, T0* a1);
/* ET_LACE_EXCLUDE.make */
extern T0* T124c6(void);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].resize */
extern T0* T133f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_EXCLUDE].resized_area */
extern T0* T131f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_EXCLUDE].copy_data */
extern void T131f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_EXCLUDE].move_data */
extern void T131f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].overlapping_move */
extern void T131f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].non_overlapping_move */
extern void T131f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_EXCLUDE].make */
extern T0* T131c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].make */
extern T0* T133f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_EXCLUDE].make_area */
extern T0* T383c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_EXCLUDE].default_create */
extern T0* T133c3(void);
/* ET_LACE_PARSER.new_cluster */
extern T0* T49f137(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].force_last */
extern void T112f38(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_put */
extern void T112f51(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_put */
extern void T112f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_put */
extern void T112f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_item */
extern T6 T112f16(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].hash_position */
extern T6 T112f14(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].resize */
extern void T112f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_resize */
extern void T112f56(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].special_integer_ */
extern T0* T112f31(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_resize */
extern void T112f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_resize */
extern void T112f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_item */
extern T0* T112f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_item */
extern T6 T112f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_resize */
extern void T112f53(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_modulus */
extern T6 T112f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_capacity */
extern T6 T112f13(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_put */
extern void T112f47(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search_position */
extern void T112f46(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].test */
extern T1 T371f1(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER.is_equal */
extern T1 T119f32(T0* C, T0* a1);
/* ET_IDENTIFIER.any_ */
extern T0* T119f39(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].unset_found_item */
extern void T112f41(T0* C);
/* ET_LACE_AST_FACTORY.new_cluster */
extern T0* T111f5(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.new_qualified_subcluster */
extern T0* T49f134(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LACE_PARSER.report_error */
extern void T49f243(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error */
extern void T50f7(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.report_error_message */
extern void T50f8(T0* C, T0* a1);
/* ET_LACE_ERROR_HANDLER.message */
extern T0* T50f5(T0* C, T0* a1);
/* UT_MESSAGE.make */
extern T0* T99c7(T0* a1);
/* ET_LACE_PARSER.integer_ */
extern T0* T49f191(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found_item */
extern T0* T112f2(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_item */
extern T0* T112f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].found */
extern T1 T112f1(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].search */
extern void T112f37(T0* C, T0* a1);
/* ET_LACE_CLUSTER.set_abstract */
extern void T123f37(T0* C, T1 a1);
/* ET_LACE_PARSER.new_clusters */
extern T0* T49f132(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_clusters */
extern T0* T111f4(T0* C, T0* a1);
/* ET_LACE_CLUSTERS.make */
extern T0* T122c3(T0* a1);
/* DS_ARRAYED_LIST [ET_LACE_CLUSTER].put_last */
extern void T379f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].resize */
extern T0* T129f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LACE_CLUSTERS].resized_area */
extern T0* T127f3(T0* C, T6 a1);
/* SPECIAL [ET_LACE_CLUSTERS].copy_data */
extern void T127f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LACE_CLUSTERS].move_data */
extern void T127f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].overlapping_move */
extern void T127f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].non_overlapping_move */
extern void T127f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LACE_CLUSTERS].make */
extern T0* T127c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].make */
extern T0* T129f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_LACE_CLUSTERS].make_area */
extern T0* T381c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LACE_CLUSTERS].default_create */
extern T0* T129c3(void);
/* ET_LACE_PARSER.new_default_value */
extern T0* T49f128(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.metadata_cache_path_option */
extern unsigned char ge987os4878;
extern T0* ge987ov4878;
extern T0* T49f208(T0* C);
/* ET_LACE_PARSER.msil_clr_version_option */
extern unsigned char ge987os4879;
extern T0* ge987ov4879;
extern T0* T49f206(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].force_last */
extern void T115f40(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_put */
extern void T115f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_put */
extern void T115f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].slots_item */
extern T6 T115f21(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].hash_position */
extern T6 T115f19(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].resize */
extern void T115f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_resize */
extern void T115f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].special_integer_ */
extern T0* T115f24(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_resize */
extern void T115f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_resize */
extern void T115f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_item */
extern T0* T115f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_item */
extern T0* T115f7(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_item */
extern T6 T115f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].slots_resize */
extern void T115f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_modulus */
extern T6 T115f11(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_capacity */
extern T6 T115f18(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_put */
extern void T115f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_IDENTIFIER].search_position */
extern void T115f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].key_equality_tester */
extern T0* T115f33(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].unset_found_item */
extern void T115f45(T0* C);
/* ET_LACE_PARSER.override_cluster_option */
extern unsigned char ge987os4881;
extern T0* ge987ov4881;
extern T0* T49f205(T0* C);
/* ET_LACE_UNIVERSE.set_root_creation */
extern void T51f164(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_root_class */
extern void T51f163(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_system_name */
extern void T51f162(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_dotnet_assemblies */
extern void T51f161(T0* C, T0* a1);
/* ET_LACE_PARSER.new_universe */
extern T0* T49f126(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_external_object_pathnames */
extern void T51f166(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.set_external_include_pathnames */
extern void T51f165(T0* C, T0* a1);
/* ET_LACE_AST_FACTORY.new_universe */
extern T0* T111f3(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.make_with_factory */
extern T0* T51c152(T0* a1, T0* a2, T0* a3);
/* ET_AST_NULL_PROCESSOR.make */
extern T0* T273c2(T0* a1);
/* ET_LACE_UNIVERSE.make_basic_classes */
extern void T51f172(T0* C);
/* ET_TOKEN_CONSTANTS.hashable_class_name */
extern unsigned char ge781os12448;
extern T0* ge781ov12448;
extern T0* T157f104(T0* C);
/* ET_TOKEN_CONSTANTS.part_comparable_class_name */
extern unsigned char ge781os12460;
extern T0* ge781ov12460;
extern T0* T157f103(T0* C);
/* ET_TOKEN_CONSTANTS.comparable_class_name */
extern unsigned char ge781os12446;
extern T0* ge781ov12446;
extern T0* T157f102(T0* C);
/* ET_TOKEN_CONSTANTS.numeric_class_name */
extern unsigned char ge781os12459;
extern T0* ge781ov12459;
extern T0* T157f101(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_ref_class_name */
extern unsigned char ge781os12461;
extern T0* ge781ov12461;
extern T0* T157f100(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_ref_class_name */
extern unsigned char ge781os12464;
extern T0* ge781ov12464;
extern T0* T157f97(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_ref_class_name */
extern unsigned char ge781os12463;
extern T0* ge781ov12463;
extern T0* T157f96(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_ref_class_name */
extern unsigned char ge781os12458;
extern T0* ge781ov12458;
extern T0* T157f94(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_ref_class_name */
extern unsigned char ge781os12457;
extern T0* ge781ov12457;
extern T0* T157f93(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_ref_class_name */
extern unsigned char ge781os12456;
extern T0* ge781ov12456;
extern T0* T157f92(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_ref_class_name */
extern unsigned char ge781os12455;
extern T0* ge781ov12455;
extern T0* T157f91(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_ref_class_name */
extern unsigned char ge781os12453;
extern T0* ge781ov12453;
extern T0* T157f89(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_ref_class_name */
extern unsigned char ge781os12452;
extern T0* ge781ov12452;
extern T0* T157f88(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_ref_class_name */
extern unsigned char ge781os12451;
extern T0* ge781ov12451;
extern T0* T157f87(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_ref_class_name */
extern unsigned char ge781os12450;
extern T0* ge781ov12450;
extern T0* T157f86(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_ref_class_name */
extern unsigned char ge781os12445;
extern T0* ge781ov12445;
extern T0* T157f83(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_ref_class_name */
extern unsigned char ge781os12444;
extern T0* ge781ov12444;
extern T0* T157f82(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_ref_class_name */
extern unsigned char ge781os12442;
extern T0* ge781ov12442;
extern T0* T157f81(T0* C);
/* ET_TOKEN_CONSTANTS.system_string_class_name */
extern unsigned char ge781os12436;
extern T0* ge781ov12436;
extern T0* T157f79(T0* C);
/* ET_TOKEN_CONSTANTS.system_object_class_name */
extern unsigned char ge781os12435;
extern T0* ge781ov12435;
extern T0* T157f78(T0* C);
/* ET_TOKEN_CONSTANTS.platform_class_name */
extern unsigned char ge781os12423;
extern T0* ge781ov12423;
extern T0* T157f77(T0* C);
/* ET_TOKEN_CONSTANTS.arguments_class_name */
extern unsigned char ge781os12401;
extern T0* ge781ov12401;
extern T0* T157f76(T0* C);
/* ET_TOKEN_CONSTANTS.function_class_name */
extern unsigned char ge781os12409;
extern T0* ge781ov12409;
extern T0* T157f75(T0* C);
/* ET_TOKEN_CONSTANTS.predicate_class_name */
extern unsigned char ge781os12425;
extern T0* ge781ov12425;
extern T0* T157f74(T0* C);
/* ET_TOKEN_CONSTANTS.procedure_class_name */
extern unsigned char ge781os12426;
extern T0* ge781ov12426;
extern T0* T157f73(T0* C);
/* ET_TOKEN_CONSTANTS.routine_class_name */
extern unsigned char ge781os12430;
extern T0* ge781ov12430;
extern T0* T157f72(T0* C);
/* ET_TOKEN_CONSTANTS.typed_pointer_class_name */
extern unsigned char ge781os12439;
extern T0* ge781ov12439;
extern T0* T157f70(T0* C);
/* ET_TOKEN_CONSTANTS.pointer_class_name */
extern unsigned char ge781os12424;
extern T0* ge781ov12424;
extern T0* T157f69(T0* C);
/* ET_TOKEN_CONSTANTS.real_64_class_name */
extern unsigned char ge781os12429;
extern T0* ge781ov12429;
extern T0* T157f68(T0* C);
/* ET_TOKEN_CONSTANTS.real_32_class_name */
extern unsigned char ge781os12428;
extern T0* ge781ov12428;
extern T0* T157f67(T0* C);
/* ET_TOKEN_CONSTANTS.natural_64_class_name */
extern unsigned char ge781os12421;
extern T0* ge781ov12421;
extern T0* T157f66(T0* C);
/* ET_TOKEN_CONSTANTS.natural_32_class_name */
extern unsigned char ge781os12420;
extern T0* ge781ov12420;
extern T0* T157f65(T0* C);
/* ET_TOKEN_CONSTANTS.natural_16_class_name */
extern unsigned char ge781os12419;
extern T0* ge781ov12419;
extern T0* T157f64(T0* C);
/* ET_TOKEN_CONSTANTS.natural_8_class_name */
extern unsigned char ge781os12418;
extern T0* ge781ov12418;
extern T0* T157f63(T0* C);
/* ET_TOKEN_CONSTANTS.integer_64_class_name */
extern unsigned char ge781os12415;
extern T0* ge781ov12415;
extern T0* T157f62(T0* C);
/* ET_TOKEN_CONSTANTS.integer_32_class_name */
extern unsigned char ge781os12414;
extern T0* ge781ov12414;
extern T0* T157f61(T0* C);
/* ET_TOKEN_CONSTANTS.integer_16_class_name */
extern unsigned char ge781os12413;
extern T0* ge781ov12413;
extern T0* T157f60(T0* C);
/* ET_TOKEN_CONSTANTS.integer_8_class_name */
extern unsigned char ge781os12412;
extern T0* ge781ov12412;
extern T0* T157f59(T0* C);
/* ET_TOKEN_CONSTANTS.character_32_class_name */
extern unsigned char ge781os12407;
extern T0* ge781ov12407;
extern T0* T157f58(T0* C);
/* ET_TOKEN_CONSTANTS.character_8_class_name */
extern unsigned char ge781os12406;
extern T0* ge781ov12406;
extern T0* T157f57(T0* C);
/* ET_TOKEN_CONSTANTS.boolean_class_name */
extern unsigned char ge781os12404;
extern T0* ge781ov12404;
extern T0* T157f56(T0* C);
/* ET_TOKEN_CONSTANTS.native_array_class_name */
extern unsigned char ge781os12416;
extern T0* ge781ov12416;
extern T0* T157f55(T0* C);
/* ET_TOKEN_CONSTANTS.special_class_name */
extern unsigned char ge781os12431;
extern T0* ge781ov12431;
extern T0* T157f54(T0* C);
/* ET_TOKEN_CONSTANTS.array_class_name */
extern unsigned char ge781os12402;
extern T0* ge781ov12402;
extern T0* T157f53(T0* C);
/* ET_TOKEN_CONSTANTS.string_32_class_name */
extern unsigned char ge781os12434;
extern T0* ge781ov12434;
extern T0* T157f51(T0* C);
/* ET_TOKEN_CONSTANTS.string_8_class_name */
extern unsigned char ge781os12433;
extern T0* ge781ov12433;
extern T0* T157f50(T0* C);
/* ET_TOKEN_CONSTANTS.bit_class_name */
extern unsigned char ge781os12403;
extern T0* ge781ov12403;
extern T0* T157f49(T0* C);
/* ET_TOKEN_CONSTANTS.tuple_class_name */
extern unsigned char ge781os12437;
extern T0* ge781ov12437;
extern T0* T157f48(T0* C);
/* ET_NONE_GROUP.make */
extern T0* T286c12(void);
/* ET_NONE_GROUP.make_builtin */
extern void T286f13(T0* C, T0* a1);
/* ET_TOKEN_CONSTANTS.none_class_name */
extern unsigned char ge781os12422;
extern T0* ge781ov12422;
extern T0* T157f47(T0* C);
/* ET_TOKEN_CONSTANTS.general_class_name */
extern unsigned char ge781os12410;
extern T0* ge781ov12410;
extern T0* T157f46(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].set_key_equality_tester */
extern void T141f41(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.class_name_tester */
extern T0* T51f61(T0* C);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_map */
extern T0* T141c40(T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_with_equality_testers */
extern void T141f46(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T387c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_CLASS, ET_CLASS_NAME].new_cursor */
extern T0* T387f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_CLASS, ET_CLASS_NAME].make */
extern T0* T1001c3(T0* a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_sparse_container */
extern void T141f55(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_slots */
extern void T141f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_clashes */
extern void T141f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_key_storage */
extern void T141f63(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_CLASS, ET_CLASS_NAME].make_item_storage */
extern void T141f62(T0* C, T6 a1);
/* ET_LACE_AST_FACTORY.new_ast_factory */
extern T0* T111f2(T0* C);
/* ET_AST_FACTORY.make */
extern T0* T248c333(void);
/* ET_LACE_AST_FACTORY.new_error_handler */
extern T0* T111f1(T0* C);
/* ET_ERROR_HANDLER.make_standard */
extern T0* T28c151(void);
/* DS_HASH_SET [ET_IDENTIFIER].forth */
extern void T115f39(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_forth */
extern void T115f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].add_traversing_cursor */
extern void T115f59(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_next_cursor */
extern void T376f6(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].remove_traversing_cursor */
extern void T115f58(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].set_position */
extern void T376f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].item_for_iteration */
extern T0* T115f2(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_item */
extern T0* T115f5(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].after */
extern T1 T115f1(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_after */
extern T1 T115f4(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].start */
extern void T115f38(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_start */
extern void T115f51(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].cursor_off */
extern T1 T115f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].is_empty */
extern T1 T115f27(T0* C);
/* ET_LACE_PARSER.yy_push_last_value */
extern void T49f229(T0* C, T6 a1);
/* ET_LACE_PARSER.accept */
extern void T49f228(T0* C);
/* ET_LACE_PARSER.yy_do_error_action */
extern void T49f226(T0* C, T6 a1);
/* ET_LACE_PARSER.report_eof_expected_error */
extern void T49f242(T0* C);
/* ET_LACE_PARSER.read_token */
extern void T49f225(T0* C);
/* ET_LACE_PARSER.yy_execute_action */
extern void T49f241(T0* C, T6 a1);
/* ET_LACE_PARSER.text_item */
extern T2 T49f193(T0* C, T6 a1);
/* ET_LACE_PARSER.string_ */
extern T0* T49f12(T0* C);
/* ET_LACE_PARSER.platform */
extern T0* T49f190(T0* C);
/* ET_LACE_PARSER.set_start_condition */
extern void T49f248(T0* C, T6 a1);
/* ET_LACE_PARSER.text_substring */
extern T0* T49f187(T0* C, T6 a1, T6 a2);
/* KL_CHARACTER_BUFFER.substring */
extern T0* T906f2(T0* C, T6 a1, T6 a2);
/* ET_LACE_PARSER.text */
extern T0* T49f170(T0* C);
/* ET_LACE_PARSER.text_count */
extern T6 T49f162(T0* C);
/* ET_LACE_PARSER.yy_execute_eof_action */
extern void T49f240(T0* C, T6 a1);
/* ET_LACE_PARSER.terminate */
extern void T49f247(T0* C);
/* ET_LACE_PARSER.wrap */
extern T1 T49f113(T0* C);
/* ET_LACE_PARSER.yy_refill_input_buffer */
extern void T49f239(T0* C);
/* ET_LACE_PARSER.yy_set_content */
extern void T49f237(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_null_trans_state */
extern T6 T49f112(T0* C, T6 a1);
/* ET_LACE_PARSER.yy_previous_state */
extern T6 T49f111(T0* C);
/* ET_LACE_PARSER.fatal_error */
extern void T49f238(T0* C, T0* a1);
/* KL_STDERR_FILE.put_character */
extern void T72f12(T0* C, T2 a1);
/* KL_STDERR_FILE.old_put_character */
extern void T72f16(T0* C, T2 a1);
/* KL_STDERR_FILE.console_pc */
extern void T72f20(T0* C, T14 a1, T2 a2);
/* ET_LACE_PARSER.std */
extern T0* T49f159(T0* C);
/* ET_LACE_PARSER.special_integer_ */
extern T0* T49f40(T0* C);
/* ET_LACE_PARSER.yy_init_value_stacks */
extern void T49f224(T0* C);
/* ET_LACE_PARSER.yy_clear_all */
extern void T49f233(T0* C);
/* ET_LACE_PARSER.clear_all */
extern void T49f245(T0* C);
/* ET_LACE_PARSER.clear_stacks */
extern void T49f249(T0* C);
/* ET_LACE_PARSER.yy_clear_value_stacks */
extern void T49f251(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLIES].clear_all */
extern void T128f6(T0* C);
/* SPECIAL [ET_LACE_DOTNET_ASSEMBLY].clear_all */
extern void T135f6(T0* C);
/* SPECIAL [ET_LACE_EXCLUDE].clear_all */
extern void T131f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTERS].clear_all */
extern void T127f6(T0* C);
/* SPECIAL [ET_LACE_CLUSTER].clear_all */
extern void T130f6(T0* C);
/* ET_LACE_PARSER.abort */
extern void T49f227(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].wipe_out */
extern void T115f37(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].slots_wipe_out */
extern void T115f50(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].clashes_wipe_out */
extern void T115f49(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].key_storage_wipe_out */
extern void T115f48(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].item_storage_wipe_out */
extern void T115f47(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].move_all_cursors_after */
extern void T115f46(T0* C);
/* ET_LACE_PARSER.set_input_buffer */
extern void T49f218(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_load_input_buffer */
extern void T49f223(T0* C);
/* YY_BUFFER.set_position */
extern void T114f14(T0* C, T6 a1, T6 a2, T6 a3);
/* YY_FILE_BUFFER.set_position */
extern void T113f19(T0* C, T6 a1, T6 a2, T6 a3);
/* ET_LACE_PARSER.new_file_buffer */
extern T0* T49f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].wipe_out */
extern void T112f36(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].slots_wipe_out */
extern void T112f45(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].clashes_wipe_out */
extern void T112f44(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].key_storage_wipe_out */
extern void T112f43(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].item_storage_wipe_out */
extern void T112f42(T0* C);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].move_all_cursors_after */
extern void T112f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_next_cursor */
extern void T375f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].set_position */
extern void T375f5(T0* C, T6 a1);
/* ET_LACE_PARSER.reset */
extern void T49f217(T0* C);
/* ET_LACE_PARSER.reset_compressed_scanner_skeleton */
extern void T49f222(T0* C);
/* ET_LACE_PARSER.make */
extern T0* T49c214(T0* a1);
/* ET_LACE_PARSER.make_with_factory */
extern void T49f216(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_parser_skeleton */
extern void T49f221(T0* C);
/* ET_LACE_PARSER.yy_build_parser_tables */
extern void T49f236(T0* C);
/* ET_LACE_PARSER.yycheck_template */
extern unsigned char ge986os4819;
extern T0* ge986ov4819;
extern T0* T49f158(T0* C);
/* ET_LACE_PARSER.yyfixed_array */
extern T0* T49f211(T0* C, T0* a1);
/* ET_LACE_PARSER.yytable_template */
extern unsigned char ge986os4818;
extern T0* ge986ov4818;
extern T0* T49f157(T0* C);
/* ET_LACE_PARSER.yypgoto_template */
extern unsigned char ge986os4817;
extern T0* ge986ov4817;
extern T0* T49f156(T0* C);
/* ET_LACE_PARSER.yypact_template */
extern unsigned char ge986os4816;
extern T0* ge986ov4816;
extern T0* T49f155(T0* C);
/* ET_LACE_PARSER.yydefgoto_template */
extern unsigned char ge986os4815;
extern T0* ge986ov4815;
extern T0* T49f154(T0* C);
/* ET_LACE_PARSER.yydefact_template */
extern unsigned char ge986os4814;
extern T0* ge986ov4814;
extern T0* T49f153(T0* C);
/* ET_LACE_PARSER.yytypes2_template */
extern unsigned char ge986os4813;
extern T0* ge986ov4813;
extern T0* T49f152(T0* C);
/* ET_LACE_PARSER.yytypes1_template */
extern unsigned char ge986os4812;
extern T0* ge986ov4812;
extern T0* T49f151(T0* C);
/* ET_LACE_PARSER.yyr1_template */
extern unsigned char ge986os4811;
extern T0* ge986ov4811;
extern T0* T49f150(T0* C);
/* ET_LACE_PARSER.yytranslate_template */
extern unsigned char ge986os4810;
extern T0* ge986ov4810;
extern T0* T49f149(T0* C);
/* ET_LACE_PARSER.yy_create_value_stacks */
extern void T49f235(T0* C);
/* ET_LACE_PARSER.make_lace_scanner */
extern void T49f220(T0* C, T0* a1, T0* a2);
/* ET_LACE_PARSER.make_with_buffer */
extern void T49f234(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_initialize */
extern void T49f246(T0* C);
/* ET_LACE_PARSER.yy_build_tables */
extern void T49f250(T0* C);
/* ET_LACE_PARSER.yy_accept_template */
extern unsigned char ge988os5256;
extern T0* ge988ov5256;
extern T0* T49f203(T0* C);
/* ET_LACE_PARSER.yy_fixed_array */
extern T0* T49f213(T0* C, T0* a1);
/* ET_LACE_PARSER.yy_meta_template */
extern unsigned char ge988os5255;
extern T0* ge988ov5255;
extern T0* T49f202(T0* C);
/* ET_LACE_PARSER.yy_ec_template */
extern unsigned char ge988os5254;
extern T0* ge988ov5254;
extern T0* T49f201(T0* C);
/* ET_LACE_PARSER.yy_def_template */
extern unsigned char ge988os5253;
extern T0* ge988ov5253;
extern T0* T49f200(T0* C);
/* ET_LACE_PARSER.yy_base_template */
extern unsigned char ge988os5252;
extern T0* ge988ov5252;
extern T0* T49f199(T0* C);
/* ET_LACE_PARSER.yy_chk_template */
extern unsigned char ge988os5251;
extern T0* ge988ov5251;
extern T0* T49f198(T0* C);
/* ET_LACE_PARSER.yy_nxt_template */
extern unsigned char ge988os5250;
extern T0* ge988ov5250;
extern T0* T49f197(T0* C);
/* ET_LACE_PARSER.empty_buffer */
extern T0* T49f59(T0* C);
/* DS_HASH_SET [ET_IDENTIFIER].make */
extern T0* T115c36(T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].new_cursor */
extern T0* T115f16(T0* C);
/* DS_HASH_SET_CURSOR [ET_IDENTIFIER].make */
extern T0* T376c4(T0* a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_slots */
extern void T115f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_clashes */
extern void T115f43(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_key_storage */
extern void T115f42(T0* C, T6 a1);
/* DS_HASH_SET [ET_IDENTIFIER].make_item_storage */
extern void T115f41(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T112c35(T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_with_equality_testers */
extern void T112f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T373c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T373f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T998c3(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].new_cursor */
extern T0* T112f30(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_LACE_CLUSTER, ET_IDENTIFIER].make */
extern T0* T375c4(T0* a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_sparse_container */
extern void T112f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_slots */
extern void T112f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_clashes */
extern void T112f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_key_storage */
extern void T112f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_LACE_CLUSTER, ET_IDENTIFIER].make_item_storage */
extern void T112f57(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [ET_IDENTIFIER].default_create */
extern T0* T371c2(void);
/* ET_LACE_AST_FACTORY.make */
extern T0* T111c11(void);
/* ET_LACE_ERROR_HANDLER.make_standard */
extern T0* T50c6(void);
/* ET_LACE_ERROR_HANDLER.std */
extern T0* T50f2(T0* C);
/* GEC.parse_ecf_file */
extern void T21f29(T0* C, T0* a1);
/* GEC.parse_xace_file */
extern void T21f28(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.has_error */
extern T1 T39f1(T0* C);
/* ET_XACE_UNIVERSE_PARSER.parse_file */
extern void T38f231(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.last_error_extended_description */
extern T0* T96f2(T0* C);
/* XM_EIFFEL_PARSER.string_ */
extern T0* T96f7(T0* C);
/* XM_EIFFEL_PARSER.last_error_description */
extern T0* T96f6(T0* C);
/* XM_EIFFEL_PARSER.safe_error_component */
extern T0* T96f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_safe_error_character */
extern T1 T96f12(T0* C, T2 a1);
/* STRING_8.make_empty */
extern T0* T17c36(void);
/* XM_EIFFEL_PARSER.position */
extern T0* T96f4(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].first */
extern T0* T326f1(T0* C);
/* XM_EIFFEL_PARSER.positions */
extern T0* T96f9(T0* C);
/* XM_EIFFEL_PARSER.new_positions */
extern T0* T96f15(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].remove */
extern void T327f7(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].item */
extern T0* T327f2(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].is_empty */
extern T1 T327f1(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].force_last */
extern void T326f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].put_right */
extern void T972f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].attach_left */
extern void T972f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_POSITION].make */
extern T0* T972c4(T0* a1);
/* DS_BILINKED_LIST [XM_POSITION].is_empty */
extern T1 T326f5(T0* C);
/* DS_BILINKED_LIST [XM_POSITION].make */
extern T0* T326c8(void);
/* DS_BILINKED_LIST [XM_POSITION].new_cursor */
extern T0* T326f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_POSITION].make */
extern T0* T973c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].copy */
extern void T327f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].put_right */
extern void T974f4(T0* C, T0* a1);
/* DS_LINKABLE [XM_EIFFEL_SCANNER].make */
extern T0* T974c3(T0* a1);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].make */
extern T0* T327c5(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_parser_error */
extern void T39f9(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error */
extern void T39f10(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T39f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_error_message */
extern void T39f11p1(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.message */
extern T0* T39f7(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.last_error */
extern T0* T88f4(T0* C);
/* ET_XACE_VALIDATOR.validate_system_doc */
extern void T91f32(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_root_element_error */
extern void T39f19(T0* C, T0* a1, T0* a2);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.make */
extern T0* T889c7(T0* a1, T0* a2);
/* XM_DEFAULT_POSITION.out */
extern T0* T324f5(T0* C);
/* XM_DEFAULT_POSITION.string_ */
extern T0* T324f6(T0* C);
/* XM_POSITION_TABLE.item */
extern T0* T86f1(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].forth */
extern void T900f10(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_forth */
extern void T901f11(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].add_traversing_cursor */
extern void T901f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_next_cursor */
extern void T900f13(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].remove_traversing_cursor */
extern void T901f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set */
extern void T900f11(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].go_after */
extern void T900f9(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_go_after */
extern void T901f10(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].set_after */
extern void T900f12(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_off */
extern T1 T901f3(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].item */
extern T0* T900f2(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].start */
extern void T900f8(T0* C);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].cursor_start */
extern void T901f9(T0* C, T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].new_cursor */
extern T0* T901f1(T0* C);
/* DS_LINKED_LIST_CURSOR [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T900c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_system */
extern void T91f35(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].forth */
extern void T259f11(T0* C);
/* XM_DOCUMENT.cursor_forth */
extern void T84f24(T0* C, T0* a1);
/* XM_DOCUMENT.add_traversing_cursor */
extern void T84f28(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_next_cursor */
extern void T259f16(T0* C, T0* a1);
/* XM_DOCUMENT.remove_traversing_cursor */
extern void T84f29(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set */
extern void T259f17(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_ELEMENT.cursor_forth */
extern void T85f46(T0* C, T0* a1);
/* XM_ELEMENT.add_traversing_cursor */
extern void T85f48(T0* C, T0* a1);
/* XM_ELEMENT.remove_traversing_cursor */
extern void T85f49(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_element_error */
extern void T39f21(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.make */
extern T0* T891c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.validate_external */
extern void T91f38(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_export */
extern void T91f42(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_feature */
extern unsigned char ge1041os3915;
extern T0* ge1041ov3915;
extern T0* T91f29(T0* C);
/* ET_XACE_VALIDATOR.uc_class */
extern unsigned char ge1041os3890;
extern T0* ge1041ov3890;
extern T0* T91f27(T0* C);
/* ET_XACE_VALIDATOR.uc_export */
extern unsigned char ge1041os3913;
extern T0* ge1041ov3913;
extern T0* T91f26(T0* C);
/* ET_XACE_VALIDATOR.uc_link_library */
extern unsigned char ge1041os3916;
extern T0* ge1041ov3916;
extern T0* T91f25(T0* C);
/* ET_XACE_VALIDATOR.uc_location */
extern unsigned char ge1041os3899;
extern T0* ge1041ov3899;
extern T0* T91f13(T0* C);
/* ET_XACE_VALIDATOR.uc_include_dir */
extern unsigned char ge1041os3912;
extern T0* ge1041ov3912;
extern T0* T91f24(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_element_obsoleted_by_element_warning */
extern void T39f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning */
extern void T39f17(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_warning_message */
extern void T39f18(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T270c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_external */
extern unsigned char ge1041os3903;
extern T0* ge1041ov3903;
extern T0* T91f11(T0* C);
/* ET_XACE_VALIDATOR.validate_option */
extern void T91f37(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_optimize */
extern unsigned char ge1041os3911;
extern T0* ge1041ov3911;
extern T0* T91f23(T0* C);
/* ET_XACE_VALIDATOR.uc_debug */
extern unsigned char ge1041os3910;
extern T0* ge1041ov3910;
extern T0* T91f22(T0* C);
/* ET_XACE_VALIDATOR.uc_check */
extern unsigned char ge1041os3909;
extern T0* ge1041ov3909;
extern T0* T91f21(T0* C);
/* ET_XACE_VALIDATOR.uc_loop */
extern unsigned char ge1041os3908;
extern T0* ge1041ov3908;
extern T0* T91f20(T0* C);
/* ET_XACE_VALIDATOR.uc_invariant */
extern unsigned char ge1041os3907;
extern T0* ge1041ov3907;
extern T0* T91f19(T0* C);
/* ET_XACE_VALIDATOR.uc_ensure */
extern unsigned char ge1041os3906;
extern T0* ge1041ov3906;
extern T0* T91f18(T0* C);
/* ET_XACE_VALIDATOR.uc_require */
extern unsigned char ge1041os3905;
extern T0* ge1041ov3905;
extern T0* T91f17(T0* C);
/* ET_XACE_VALIDATOR.uc_value */
extern unsigned char ge1041os3895;
extern T0* ge1041ov3895;
extern T0* T91f16(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_unknown_option_warning */
extern void T39f25(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.make */
extern T0* T895c8(T0* a1, T0* a2);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.uc_name */
extern unsigned char ge1041os3894;
extern T0* ge1041ov3894;
extern T0* T895f7(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].has */
extern T1 T262f35(T0* C, T0* a1);
/* ET_XACE_OPTION_NAMES.option_codes */
extern unsigned char ge1011os4082;
extern T0* ge1011ov4082;
extern T0* T315f1(T0* C);
/* DS_HASH_TABLE [INTEGER, STRING].put_new */
extern void T262f40(T0* C, T6 a1, T0* a2);
/* ET_XACE_OPTION_NAMES.string_equality_tester */
extern T0* T315f29(T0* C);
/* ET_XACE_VALIDATOR.options */
extern unsigned char ge998os9966;
extern T0* ge998ov9966;
extern T0* T91f15(T0* C);
/* ET_XACE_OPTION_NAMES.default_create */
extern T0* T315c192(void);
/* XM_ELEMENT.attribute_by_name */
extern T0* T85f5(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].go_after */
extern void T259f12(T0* C);
/* XM_DOCUMENT.cursor_go_after */
extern void T84f25(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_after */
extern void T259f15(T0* C);
/* XM_DOCUMENT.cursor_off */
extern T1 T84f14(T0* C, T0* a1);
/* XM_ELEMENT.cursor_go_after */
extern void T85f47(T0* C, T0* a1);
/* XM_ELEMENT.cursor_off */
extern T1 T85f25(T0* C, T0* a1);
/* XM_ELEMENT.attribute_same_name */
extern T1 T85f9(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_string */
extern T1 T85f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.string_equality_tester */
extern T0* T85f13(T0* C);
/* XM_NODE_TYPER.is_attribute */
extern T1 T1320f2(T0* C);
/* XM_NODE_TYPER.default_create */
extern T0* T1320c10(void);
/* ET_XACE_VALIDATOR.uc_option */
extern unsigned char ge1041os3902;
extern T0* ge1041ov3902;
extern T0* T91f10(T0* C);
/* ET_XACE_VALIDATOR.validate_mount */
extern void T91f36(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_exclude */
extern void T91f41(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_exclude_element_warning */
extern void T39f24(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.make */
extern T0* T894c7(T0* a1);
/* ET_XACE_VALIDATOR.uc_exclude */
extern unsigned char ge1041os3917;
extern T0* ge1041ov3917;
extern T0* T91f14(T0* C);
/* ET_XACE_VALIDATOR.uc_mount */
extern unsigned char ge1041os3898;
extern T0* ge1041ov3898;
extern T0* T91f9(T0* C);
/* ET_XACE_VALIDATOR.validate_cluster */
extern void T91f39(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_class */
extern void T91f43(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_feature */
extern void T91f44(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_obsolete_cluster_element_warning */
extern void T39f23(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.make */
extern T0* T893c7(T0* a1);
/* ET_XACE_VALIDATOR.validate_named_cluster */
extern void T91f34(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_non_empty_attribute_expected_error */
extern void T39f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.make */
extern T0* T267c7(T0* a1, T0* a2, T0* a3);
/* ET_XACE_VALIDATOR.uc_cluster */
extern unsigned char ge1041os3893;
extern T0* ge1041ov3893;
extern T0* T91f5(T0* C);
/* ET_XACE_VALIDATOR.uc_description */
extern unsigned char ge1041os3901;
extern T0* ge1041ov3901;
extern T0* T91f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].item */
extern T0* T259f2(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].start */
extern void T259f10(T0* C);
/* XM_DOCUMENT.cursor_start */
extern void T84f23(T0* C, T0* a1);
/* XM_ELEMENT.cursor_start */
extern void T85f45(T0* C, T0* a1);
/* XM_ELEMENT.new_cursor */
extern T0* T85f8(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].make */
extern T0* T259c9(T0* a1);
/* ET_XACE_VALIDATOR.validate_root */
extern void T91f40(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_creation */
extern unsigned char ge1041os3891;
extern T0* ge1041ov3891;
extern T0* T91f28(T0* C);
/* XM_ELEMENT.element_by_name */
extern T0* T85f7(T0* C, T0* a1);
/* XM_ELEMENT.named_same_name */
extern T1 T85f10(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.same_namespace */
extern T1 T85f12(T0* C, T0* a1);
/* XM_NAMESPACE.is_equal */
extern T1 T1224f1(T0* C, T0* a1);
/* XM_NAMESPACE.string_ */
extern T0* T1224f3(T0* C);
/* XM_ELEMENT.has_namespace */
extern T1 T85f14(T0* C);
/* XM_NODE_TYPER.is_element */
extern T1 T1320f4(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_element_error */
extern void T39f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ELEMENT_ERROR.make */
extern T0* T892c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_element_by_name */
extern T1 T85f6(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_root */
extern unsigned char ge1041os3889;
extern T0* ge1041ov3889;
extern T0* T91f12(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_missing_attribute_error */
extern void T39f20(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.make */
extern T0* T890c7(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.has_attribute_by_name */
extern T1 T85f4(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.uc_name */
extern T0* T91f7(T0* C);
/* ET_XACE_VALIDATOR.uc_system */
extern unsigned char ge1041os3888;
extern T0* ge1041ov3888;
extern T0* T91f6(T0* C);
/* ET_XACE_VALIDATOR.string_ */
extern T0* T91f3(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].wipe_out */
extern void T93f37(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_wipe_out */
extern void T93f45(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_wipe_out */
extern void T93f44(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_wipe_out */
extern void T93f43(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_wipe_out */
extern void T93f42(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].unset_found_item */
extern void T93f41(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].move_all_cursors_after */
extern void T93f40(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].set_next_cursor */
extern void T320f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].set_position */
extern void T320f5(T0* C, T6 a1);
/* ET_XACE_UNIVERSE.set_root_class_name */
extern void T48f165(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_class */
extern void T48f185(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_universe */
extern T0* T38f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.replace_all_characters */
extern T0* T38f17(T0* C, T0* a1, T2 a2, T2 a3);
/* UC_UTF8_STRING.put */
extern void T904f62(T0* C, T2 a1, T6 a2);
/* ET_XACE_UNIVERSE.merge_externals */
extern void T48f167(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.merge_externals */
extern void T256f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].item */
extern T0* T257f3(T0* C, T6 a1);
/* ET_XACE_CLUSTERS.merge_externals */
extern void T250f4(T0* C, T0* a1);
/* ET_XACE_CLUSTER.merge_externals */
extern void T253f55(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].forth */
extern void T285f11(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_forth */
extern void T76f31(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].add_traversing_cursor */
extern void T76f37(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].remove_traversing_cursor */
extern void T76f38(T0* C, T0* a1);
/* ET_XACE_EXTERNALS.put_link_library */
extern void T249f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].item */
extern T0* T285f5(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_item */
extern T0* T76f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].after */
extern T1 T285f4(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_after */
extern T1 T76f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [STRING].start */
extern void T285f10(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_start */
extern void T76f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].is_empty */
extern T1 T76f19(T0* C);
/* DS_ARRAYED_LIST_CURSOR [STRING].off */
extern T1 T285f2(T0* C);
/* DS_ARRAYED_LIST [STRING].cursor_off */
extern T1 T76f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [STRING].cursor_before */
extern T1 T76f13(T0* C, T0* a1);
/* ET_XACE_OPTIONS.link */
extern T0* T254f12(T0* C);
/* ET_XACE_OPTIONS.default_link */
extern unsigned char ge1010os17730;
extern T0* ge1010ov17730;
extern T0* T254f29(T0* C);
/* DS_ARRAYED_LIST [STRING].set_equality_tester */
extern void T76f40(T0* C, T0* a1);
/* ET_XACE_OPTIONS.is_link_declared */
extern T1 T254f27(T0* C);
/* ET_XACE_EXTERNALS.put_include_directory */
extern void T249f6(T0* C, T0* a1);
/* ET_XACE_OPTIONS.header */
extern T0* T254f11(T0* C);
/* ET_XACE_OPTIONS.default_header */
extern unsigned char ge1010os17719;
extern T0* ge1010ov17719;
extern T0* T254f26(T0* C);
/* ET_XACE_OPTIONS.is_header_declared */
extern T1 T254f24(T0* C);
/* ET_XACE_EXTERNALS.put_c_compiler_options */
extern void T249f5(T0* C, T0* a1);
/* ET_XACE_OPTIONS.c_compiler_options */
extern T0* T254f10(T0* C);
/* ET_XACE_OPTIONS.default_c_compiler_options */
extern unsigned char ge1010os17701;
extern T0* ge1010ov17701;
extern T0* T254f23(T0* C);
/* ET_XACE_OPTIONS.is_c_compiler_options_declared */
extern T1 T254f21(T0* C);
/* ET_XACE_EXTERNALS.make */
extern T0* T249c4(void);
/* ET_XACE_UNIVERSE.mount_libraries */
extern void T48f166(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.mount_libraries */
extern void T256f8(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.mount_libraries */
extern void T250f11(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_library_prefix */
extern void T253f58(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.set_library_prefix */
extern void T250f10(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_mounted */
extern void T253f59(T0* C, T1 a1);
/* ET_XACE_CLUSTERS.set_mounted */
extern void T250f14(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.fill_system */
extern void T38f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.set_libraries */
extern void T48f172(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_options */
extern void T48f171(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_creation_procedure_name */
extern void T48f170(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_root_creation */
extern void T48f186(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_system_name */
extern void T48f169(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_clusters */
extern void T48f168(T0* C, T0* a1);
/* ET_XACE_LIBRARY.merge_libraries */
extern void T261f13(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.merge_libraries */
extern void T256f10(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_root */
extern void T255f10(T0* C, T1 a1);
/* ET_XACE_MOUNTED_LIBRARY.cloned_object */
extern T0* T255f6(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.twin */
extern T0* T255f7(T0* C);
/* ET_XACE_MOUNTED_LIBRARY.copy */
extern void T255f11(T0* C, T0* a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_multiple_library_prefix_error */
extern void T39f29(T0* C, T0* a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.make */
extern T0* T1391c7(T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARIES.string_ */
extern T0* T256f4(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.item */
extern T0* T256f3(T0* C, T0* a1);
/* ET_XACE_MOUNTED_LIBRARIES.set_root */
extern void T256f7(T0* C, T1 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].is_empty */
extern T1 T257f1(T0* C);
/* ET_XACE_CLUSTERS.merge_libraries */
extern void T250f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.merge_libraries */
extern void T253f56(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_externals */
extern void T38f235(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_CLUSTER.put_class_option */
extern void T253f44(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].put_last */
extern void T925f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].put_right */
extern void T1163f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1163c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].is_empty */
extern T1 T925f3(T0* C);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].make */
extern T0* T925c7(void);
/* DS_LINKED_LIST [ET_XACE_CLASS_OPTIONS].new_cursor */
extern T0* T925f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_CLASS_OPTIONS].make */
extern T0* T1162c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_export */
extern T0* T38f134(T0* C, T0* a1, T0* a2);
/* ET_XACE_OPTIONS.set_export_option */
extern void T254f139(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].is_empty */
extern T1 T888f1(T0* C);
/* ET_XACE_CLASS_OPTIONS.put_feature_option */
extern void T265f5(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].put_last */
extern void T888f8(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].put_right */
extern void T1157f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1157c3(T0* a1);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T888c7(void);
/* DS_LINKED_LIST [ET_XACE_FEATURE_OPTIONS].new_cursor */
extern T0* T888f4(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_XACE_FEATURE_OPTIONS].make */
extern T0* T1156c3(T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_exported_feature */
extern T0* T38f227(T0* C, T0* a1, T0* a2);
/* ET_XACE_AST_FACTORY.new_feature_options */
extern T0* T83f8(T0* C, T0* a1, T0* a2);
/* ET_XACE_FEATURE_OPTIONS.make */
extern T0* T887c3(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_alias */
extern unsigned char ge1041os3914;
extern T0* ge1041ov3914;
extern T0* T38f229(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_feature */
extern T0* T38f226(T0* C);
/* ET_XACE_AST_FACTORY.new_class_options */
extern T0* T83f7(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLASS_OPTIONS.make */
extern T0* T265c4(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_export */
extern T0* T38f133(T0* C);
/* ET_XACE_OPTIONS.set_header */
extern void T254f147(T0* C, T0* a1);
/* DS_HASH_SET [STRING].force_last */
extern void T192f68(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_include_dir */
extern T0* T38f132(T0* C);
/* ET_XACE_OPTIONS.set_link */
extern void T254f158(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_location */
extern T0* T38f131(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_link_library */
extern T0* T38f130(T0* C);
/* ET_XACE_AST_FACTORY.new_options */
extern T0* T83f3(T0* C);
/* ET_XACE_OPTIONS.make */
extern T0* T254c113(void);
/* ET_XACE_UNIVERSE_PARSER.uc_external */
extern T0* T38f31(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_options */
extern T0* T38f30(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.fill_options */
extern void T38f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.uc_debug */
extern T0* T38f129(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_optimize */
extern T0* T38f128(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_check */
extern T0* T38f126(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_loop */
extern T0* T38f123(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_invariant */
extern T0* T38f121(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_ensure */
extern T0* T38f119(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_enable */
extern unsigned char ge1041os3904;
extern T0* ge1041ov3904;
extern T0* T38f117(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_require */
extern T0* T38f116(T0* C);
/* ET_XACE_OPTIONS.set_wedit */
extern void T254f193(T0* C, T1 a1);
/* UT_TRISTATE.set_false */
extern void T926f7(T0* C);
/* UT_TRISTATE.set_true */
extern void T926f6(T0* C);
/* UT_TRISTATE.make_undefined */
extern T0* T926c5(void);
/* UT_TRISTATE.set_undefined */
extern void T926f8(T0* C);
/* ET_XACE_OPTIONS.set_warning */
extern void T254f192(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_warning */
extern unsigned char ge1010os17604;
extern T0* ge1010ov17604;
extern T0* T254f9(T0* C);
/* DS_HASH_SET [STRING].put_last */
extern void T192f67(T0* C, T0* a1);
/* DS_HASH_SET [STRING].compress */
extern void T192f69(T0* C);
/* DS_HASH_SET [STRING].move_all_cursors */
extern void T192f71(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [STRING].key_storage_put */
extern void T192f70(T0* C, T0* a1, T6 a2);
/* ET_XACE_OPTIONS.options */
extern T0* T254f20(T0* C);
/* ET_XACE_OPTIONS.set_visible_filename */
extern void T254f191(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_version */
extern void T254f190(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_verbose */
extern void T254f189(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_full_cluster_name_as_namespace */
extern void T254f188(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_use_cluster_name_as_namespace */
extern void T254f187(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_trace */
extern void T254f186(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_target */
extern void T254f185(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_target */
extern unsigned char ge1010os17602;
extern T0* ge1010ov17602;
extern T0* T254f8(T0* C);
/* ET_XACE_OPTIONS.set_strip_option */
extern void T254f184(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_storable_filename */
extern void T254f183(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_stack_size */
extern void T254f182(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_split */
extern void T254f181(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_shared_library_definition */
extern void T254f180(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_reloads_optimization */
extern void T254f179(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_recursive */
extern void T254f178(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_read_only */
extern void T254f177(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_public_key_token */
extern void T254f176(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_profile */
extern void T254f175(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_prefix_option */
extern void T254f174(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_precompiled */
extern void T254f173(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_portable_code_generation */
extern void T254f172(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_override_cluster */
extern void T254f171(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_no_default_lib */
extern void T254f170(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_namespace */
extern void T254f169(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_multithreaded */
extern void T254f168(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_generation_version */
extern void T254f167(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_generation */
extern void T254f166(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_msil_clr_version */
extern void T254f165(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_msil_assembly_compatibility */
extern void T254f164(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_metadata_cache_path */
extern void T254f163(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_map */
extern void T254f162(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_manifest_string_trace */
extern void T254f161(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linux_fpu_double_precision */
extern void T254f160(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_linker */
extern void T254f159(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_linker */
extern unsigned char ge1010os17601;
extern T0* ge1010ov17601;
extern T0* T254f7(T0* C);
/* ET_XACE_OPTIONS.set_line_generation */
extern void T254f157(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_leaves_optimization */
extern void T254f156(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout_optimization */
extern void T254f155(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_layout */
extern void T254f154(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_layout */
extern unsigned char ge1010os17600;
extern T0* ge1010ov17600;
extern T0* T254f6(T0* C);
/* ET_XACE_OPTIONS.set_jumps_optimization */
extern void T254f153(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_inlining_size */
extern void T254f152(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_inlining */
extern void T254f151(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_inlining */
extern unsigned char ge1010os17599;
extern T0* ge1010ov17599;
extern T0* T254f5(T0* C);
/* ET_XACE_OPTIONS.set_include */
extern void T254f150(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_il_verifiable */
extern void T254f149(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_high_memory_compiler */
extern void T254f148(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_heap_size */
extern void T254f146(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_gc_info */
extern void T254f145(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_garbage_collector */
extern void T254f144(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_garbage_collector */
extern unsigned char ge1010os17598;
extern T0* ge1010ov17598;
extern T0* T254f4(T0* C);
/* ET_XACE_OPTIONS.set_fst_optimization */
extern void T254f143(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_positive_integer_expected_error */
extern void T39f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.make */
extern T0* T269c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_OPTIONS.set_fst_expansion_factor */
extern void T254f142(T0* C, T6 a1);
/* ET_XACE_OPTIONS.set_flat_fst_optimization */
extern void T254f141(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_finalize_option */
extern void T254f140(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_exclude */
extern void T254f138(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_exception_trace */
extern void T254f137(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dynamic_runtime */
extern void T254f136(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dotnet_naming_convention */
extern void T254f135(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_document */
extern void T254f134(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debugger */
extern void T254f133(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_debug_tag */
extern void T254f132(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_debug_option */
extern void T254f131(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_dead_code_removal */
extern void T254f130(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_dead_code_removal */
extern unsigned char ge1010os17597;
extern T0* ge1010ov17597;
extern T0* T254f3(T0* C);
/* ET_XACE_OPTIONS.set_c_compiler_options */
extern void T254f129(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_culture */
extern void T254f128(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_create_keyword_extension */
extern void T254f127(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_console_application */
extern void T254f126(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_component */
extern void T254f125(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_cls_compliant */
extern void T254f124(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_clean */
extern void T254f123(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_check_vape */
extern void T254f122(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_case_insensitive */
extern void T254f121(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_callback */
extern void T254f120(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_callback */
extern unsigned char ge1010os17596;
extern T0* ge1010ov17596;
extern T0* T254f2(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_wrong_attribute_value_error */
extern void T39f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.make */
extern T0* T268c7(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.string_ */
extern T0* T268f4(T0* C);
/* ET_XACE_OPTIONS.set_assertion */
extern void T254f119(T0* C, T0* a1);
/* ET_XACE_OPTIONS.valid_assertion */
extern unsigned char ge1010os17595;
extern T0* ge1010ov17595;
extern T0* T254f1(T0* C);
/* ET_XACE_OPTIONS.set_assembly */
extern void T254f118(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_array_optimization */
extern void T254f117(T0* C, T1 a1);
/* ET_XACE_OPTIONS.set_arguments */
extern void T254f116(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_address_expression */
extern void T254f115(T0* C, T1 a1);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_boolean_expected_error */
extern void T39f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.make */
extern T0* T266c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_UNIVERSE_PARSER.is_false */
extern T1 T38f115(T0* C, T0* a1);
/* ET_XACE_OPTIONS.set_abstract */
extern void T254f114(T0* C, T1 a1);
/* ET_XACE_UNIVERSE_PARSER.is_true */
extern T1 T38f114(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.option_codes */
extern T0* T38f33(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_equality_tester */
extern T0* T38f13(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_value */
extern T0* T38f32(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_option */
extern T0* T38f29(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.put_last */
extern void T256f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].force_last */
extern void T257f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].resize */
extern void T257f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].resize */
extern T0* T928f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].resized_area */
extern T0* T927f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].copy_data */
extern void T927f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].move_data */
extern void T927f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].overlapping_move */
extern void T927f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].non_overlapping_move */
extern void T927f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T927c4(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_capacity */
extern T6 T257f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].extendible */
extern T1 T257f9(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_mounted_libraries */
extern T0* T83f2(T0* C);
/* ET_XACE_MOUNTED_LIBRARIES.make_empty */
extern T0* T256c5(void);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T257c11(T6 a1);
/* DS_ARRAYED_LIST [ET_XACE_MOUNTED_LIBRARY].new_cursor */
extern T0* T257f8(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T929c2(T0* a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].make */
extern T0* T928f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_MOUNTED_LIBRARY].make_area */
extern T0* T1164c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_MOUNTED_LIBRARY].default_create */
extern T0* T928c3(void);
/* ET_XACE_UNIVERSE_PARSER.new_mount */
extern T0* T38f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_MOUNTED_LIBRARY.set_library_prefix */
extern void T255f9(T0* C, T0* a1);
/* ET_XACE_AST_FACTORY.new_mounted_library */
extern T0* T83f6(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_MOUNTED_LIBRARY.make */
extern T0* T255c8(T0* a1, T0* a2, T0* a3);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_cannot_read_file_error */
extern void T39f27(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.parse_library */
extern void T95f222(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_library */
extern void T95f223(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY.set_libraries */
extern void T261f12(T0* C, T0* a1);
/* ET_XACE_LIBRARY.set_clusters */
extern void T261f11(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.fill_externals */
extern void T95f225(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.new_export */
extern T0* T95f124(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_exported_feature */
extern T0* T95f217(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_alias */
extern T0* T95f219(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_feature */
extern T0* T95f216(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_class */
extern T0* T95f127(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_export */
extern T0* T95f123(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_include_dir */
extern T0* T95f122(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_location */
extern T0* T95f121(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_link_library */
extern T0* T95f120(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_external */
extern T0* T95f21(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_options */
extern T0* T95f20(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.fill_options */
extern void T95f224(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_LIBRARY_PARSER.uc_debug */
extern T0* T95f119(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_optimize */
extern T0* T95f118(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_check */
extern T0* T95f116(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_loop */
extern T0* T95f113(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_invariant */
extern T0* T95f111(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_ensure */
extern T0* T95f109(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_enable */
extern T0* T95f107(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_require */
extern T0* T95f106(T0* C);
/* ET_XACE_LIBRARY_PARSER.is_false */
extern T1 T95f105(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.is_true */
extern T1 T95f104(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.option_codes */
extern T0* T95f23(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_equality_tester */
extern T0* T95f4(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_value */
extern T0* T95f22(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_option */
extern T0* T95f19(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_mount */
extern T0* T95f18(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.execution_environment */
extern T0* T95f131(T0* C);
/* ET_XACE_LIBRARY_PARSER.uc_mount */
extern T0* T95f17(T0* C);
/* ET_XACE_LIBRARY.set_library_prefix */
extern void T261f10(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_prefix */
extern unsigned char ge1041os3900;
extern T0* ge1041ov3900;
extern T0* T95f16(T0* C);
/* ET_XACE_LIBRARY.set_options */
extern void T261f9(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.new_cluster */
extern T0* T95f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_CLUSTER.set_libraries */
extern void T253f50(T0* C, T0* a1);
/* ET_XACE_OPTIONS.read_only */
extern T1 T254f18(T0* C);
/* UT_TRISTATE.is_true */
extern T1 T926f2(T0* C);
/* ET_XACE_OPTIONS.is_read_only_declared */
extern T1 T254f17(T0* C);
/* UT_TRISTATE.is_undefined */
extern T1 T926f1(T0* C);
/* UT_TRISTATE.is_false */
extern T1 T926f3(T0* C);
/* ET_XACE_OPTIONS.recursive */
extern T1 T254f16(T0* C);
/* ET_XACE_OPTIONS.is_recursive_declared */
extern T1 T254f15(T0* C);
/* ET_XACE_CLUSTER.set_abstract */
extern void T253f45(T0* C, T1 a1);
/* ET_XACE_OPTIONS.abstract */
extern T1 T254f14(T0* C);
/* ET_XACE_OPTIONS.is_abstract_declared */
extern T1 T254f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.new_class */
extern T0* T95f128(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.new_feature */
extern T0* T95f218(T0* C, T0* a1, T0* a2);
/* ET_XACE_CLUSTER.set_cluster_prefix */
extern void T253f43(T0* C, T0* a1);
/* ET_XACE_CLUSTER.set_relative */
extern void T253f42(T0* C, T1 a1);
/* ET_XACE_LIBRARY_PARSER.uc_relative */
extern unsigned char ge1041os3897;
extern T0* ge1041ov3897;
extern T0* T95f126(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_attribute_obsoleted_by_element_warning */
extern void T39f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.make */
extern T0* T896c7(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_XACE_LIBRARY_PARSER.uc_abstract */
extern unsigned char ge1041os3896;
extern T0* ge1041ov3896;
extern T0* T95f125(T0* C);
/* ET_XACE_AST_FACTORY.new_cluster */
extern T0* T83f4(T0* C, T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.uc_cluster */
extern T0* T95f13(T0* C);
/* ET_XACE_LIBRARY_PARSER.string_ */
extern T0* T95f12(T0* C);
/* ET_XACE_LIBRARY.set_name */
extern void T261f8(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.uc_name */
extern T0* T95f11(T0* C);
/* ET_XACE_UNIVERSE_PARSER.execution_environment */
extern T0* T38f141(T0* C);
/* UC_UTF8_STRING.has_substring */
extern T1 T904f52(T0* C, T0* a1);
/* STRING_8.has_substring */
extern T1 T17f34(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].force_new */
extern void T93f52(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_put */
extern void T93f58(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_put */
extern void T93f57(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_put */
extern void T93f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_put */
extern void T93f55(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_item */
extern T6 T93f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].hash_position */
extern T6 T93f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_item */
extern T6 T93f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].resize */
extern void T93f54(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].clashes_resize */
extern void T93f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].special_integer_ */
extern T0* T93f22(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_resize */
extern void T93f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_resize */
extern void T93f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].resize */
extern T0* T322f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_XACE_LIBRARY].resized_area */
extern T0* T321f3(T0* C, T6 a1);
/* SPECIAL [ET_XACE_LIBRARY].copy_data */
extern void T321f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_XACE_LIBRARY].move_data */
extern void T321f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].overlapping_move */
extern void T321f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].non_overlapping_move */
extern void T321f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_XACE_LIBRARY].make */
extern T0* T321c4(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].key_storage_item */
extern T0* T93f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].slots_resize */
extern void T93f59(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_modulus */
extern T6 T93f18(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_capacity */
extern T6 T93f26(T0* C, T6 a1);
/* ET_XACE_AST_FACTORY.new_library */
extern T0* T83f5(T0* C);
/* ET_XACE_LIBRARY.make */
extern T0* T261c7(void);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].found_item */
extern T0* T93f24(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].item_storage_item */
extern T0* T93f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].found */
extern T1 T93f23(T0* C);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].search */
extern void T93f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].search_position */
extern void T93f53(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_prefix */
extern T0* T38f137(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_mount */
extern T0* T38f27(T0* C);
/* ET_XACE_AST_FACTORY.new_clusters */
extern T0* T83f1(T0* C, T0* a1);
/* ET_XACE_CLUSTERS.make */
extern T0* T250c5(T0* a1);
/* DS_ARRAYED_LIST [ET_XACE_CLUSTER].put_last */
extern void T407f11(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.new_cluster */
extern T0* T38f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE_PARSER.new_class */
extern T0* T38f138(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.new_feature */
extern T0* T38f228(T0* C, T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.uc_relative */
extern T0* T38f136(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_abstract */
extern T0* T38f135(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_cluster */
extern T0* T38f24(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_creation */
extern T0* T38f23(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_class */
extern T0* T38f22(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_root */
extern T0* T38f21(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_name */
extern T0* T38f20(T0* C);
/* ET_XACE_UNIVERSE.make_with_factory */
extern T0* T48c156(T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.make_basic_classes */
extern void T48f174(T0* C);
/* ET_XACE_UNIVERSE.class_name_tester */
extern T0* T48f55(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_ast_factory */
extern T0* T38f16(T0* C);
/* ET_XACE_UNIVERSE_PARSER.new_eiffel_error_handler */
extern T0* T38f15(T0* C);
/* XM_ELEMENT.set_name */
extern void T85f30(T0* C, T0* a1);
/* ET_XACE_UNIVERSE_PARSER.uc_system */
extern T0* T38f9(T0* C);
/* ET_XACE_PREPROCESSOR.preprocess_element */
extern void T92f11(T0* C, T0* a1, T0* a2);
/* XM_ELEMENT.remove_at_cursor */
extern void T85f31(T0* C, T0* a1);
/* XM_ELEMENT.move_all_cursors */
extern void T85f38(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [XM_NODE].set_current_cell */
extern void T259f13(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put */
extern void T1319f6(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].put_right */
extern void T1319f4(T0* C, T0* a1);
/* XM_ELEMENT.set_last_cell */
extern void T85f37(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].forget_right */
extern void T1319f5(T0* C);
/* XM_ELEMENT.remove_last */
extern void T85f36(T0* C);
/* XM_ELEMENT.move_last_cursors_after */
extern void T85f43(T0* C);
/* XM_ELEMENT.wipe_out */
extern void T85f41(T0* C);
/* XM_ELEMENT.move_all_cursors_after */
extern void T85f44(T0* C);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_last */
extern T1 T259f4(T0* C);
/* XM_DOCUMENT.cursor_is_last */
extern T1 T84f12(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_last */
extern T1 T85f24(T0* C, T0* a1);
/* XM_ELEMENT.remove_first */
extern void T85f35(T0* C);
/* XM_ELEMENT.set_first_cell */
extern void T85f42(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].is_first */
extern T1 T259f3(T0* C);
/* XM_DOCUMENT.cursor_is_first */
extern T1 T84f11(T0* C, T0* a1);
/* XM_ELEMENT.cursor_is_first */
extern T1 T85f23(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.should_strip_element */
extern T1 T92f3(T0* C, T0* a1, T0* a2);
/* ET_XACE_DEFAULT_ERROR_HANDLER.report_invalid_expression_error */
extern void T39f28(T0* C, T0* a1, T0* a2);
/* ET_XACE_INVALID_EXPRESSION_ERROR.make */
extern T0* T1151c7(T0* a1, T0* a2);
/* ET_XACE_PREPROCESSOR.is_expression_true */
extern T1 T92f8(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.template_expander */
extern T0* T92f4(T0* C);
/* ET_XACE_PREPROCESSOR.string_ */
extern T0* T92f9(T0* C);
/* UC_UTF8_STRING.occurrences */
extern T6 T904f53(T0* C, T2 a1);
/* UC_UTF8_STRING.code_occurrences */
extern T6 T904f54(T0* C, T6 a1);
/* STRING_8.occurrences */
extern T6 T17f35(T0* C, T2 a1);
/* ET_XACE_PREPROCESSOR.is_valid_expression */
extern T1 T92f7(T0* C, T0* a1);
/* ET_XACE_PREPROCESSOR.uc_unless */
extern unsigned char ge1041os3919;
extern T0* ge1041ov3919;
extern T0* T92f6(T0* C);
/* ET_XACE_PREPROCESSOR.uc_if */
extern unsigned char ge1041os3918;
extern T0* ge1041ov3918;
extern T0* T92f5(T0* C);
/* ET_XACE_PREPROCESSOR.expand_attribute_variables */
extern void T92f12(T0* C, T0* a1);
/* XM_ATTRIBUTE.set_value */
extern void T258f7(T0* C, T0* a1);
/* ET_XACE_VALIDATOR.validate_library_doc */
extern void T91f31(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.validate_library */
extern void T91f33(T0* C, T0* a1, T0* a2);
/* ET_XACE_VALIDATOR.uc_library */
extern unsigned char ge1041os3892;
extern T0* ge1041ov3892;
extern T0* T91f4(T0* C);
/* ET_XACE_UNIVERSE_PARSER.uc_library */
extern T0* T38f6(T0* C);
/* ET_XACE_UNIVERSE_PARSER.string_ */
extern T0* T38f5(T0* C);
/* XM_TREE_CALLBACKS_PIPE.document */
extern T0* T88f2(T0* C);
/* XM_EIFFEL_PARSER.is_correct */
extern T1 T96f1(T0* C);
/* XM_EIFFEL_PARSER.parse_from_stream */
extern void T96f203(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.parse_with_events */
extern void T96f209(T0* C);
/* XM_EIFFEL_PARSER.on_finish */
extern void T96f215(T0* C);
/* XM_EIFFEL_PARSER.parse */
extern void T96f214(T0* C);
/* XM_EIFFEL_PARSER.yy_pop_last_value */
extern void T96f224(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.yy_push_error_value */
extern void T96f223(T0* C);
/* XM_EIFFEL_PARSER.yy_do_action */
extern void T96f222(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_notation_declaration */
extern void T96f252(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_notation_declaration */
extern void T361f8(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.set_public */
extern void T333f6(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].resize */
extern T0* T359f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_EXTERNAL_ID].resized_area */
extern T0* T344f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_EXTERNAL_ID].copy_data */
extern void T344f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_EXTERNAL_ID].move_data */
extern void T344f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].overlapping_move */
extern void T344f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].non_overlapping_move */
extern void T344f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_EXTERNAL_ID].make */
extern T0* T344c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].make */
extern T0* T359f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_EXTERNAL_ID].make_area */
extern T0* T996c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_EXTERNAL_ID].default_create */
extern T0* T359c3(void);
/* XM_DTD_EXTERNAL_ID.set_system */
extern void T333f5(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_dtd_external_id */
extern T0* T96f169(T0* C);
/* XM_DTD_EXTERNAL_ID.make */
extern T0* T333c4(void);
/* XM_EIFFEL_PARSER.when_pe_entity_declared */
extern void T96f251(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].force */
extern void T328f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_put */
extern void T328f53(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_put */
extern void T328f52(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_put */
extern void T328f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_item */
extern T6 T328f17(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_item */
extern T6 T328f16(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].hash_position */
extern T6 T328f13(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].resize */
extern void T328f50(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_resize */
extern void T328f58(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].special_integer_ */
extern T0* T328f32(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_resize */
extern void T328f57(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_resize */
extern void T328f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].resize */
extern T0* T980f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].resized_area */
extern T0* T975f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].copy_data */
extern void T975f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].move_data */
extern void T975f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].overlapping_move */
extern void T975f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].non_overlapping_move */
extern void T975f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T975c4(T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_item */
extern T0* T328f22(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_resize */
extern void T328f55(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_modulus */
extern T6 T328f29(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_capacity */
extern T6 T328f12(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_put */
extern void T328f49(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].search_position */
extern void T328f41(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].unset_found_item */
extern void T328f44(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].has */
extern T1 T328f1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_def */
extern T0* T364c208(T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.make_literal */
extern void T364f210(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.default_create */
extern T0* T330c4(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_scanner */
extern void T364f211(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T364f213(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset_sent */
extern void T364f216(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T364f213p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T364f213p0(T0* C);
/* DS_LINKED_STACK [INTEGER].make */
extern T0* T971c5(void);
/* XM_EIFFEL_PE_ENTITY_DEF.reset */
extern void T364f213p2(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.make_with_buffer */
extern void T364f212(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_load_input_buffer */
extern void T364f215(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_content */
extern void T364f218(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.special_integer_ */
extern T0* T364f32(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_initialize */
extern void T364f214(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_build_tables */
extern void T364f217(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_accept_template */
extern unsigned char ge1279os18533;
extern T0* ge1279ov18533;
extern T0* T364f50(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_fixed_array */
extern T0* T364f53(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_meta_template */
extern unsigned char ge1279os18532;
extern T0* ge1279ov18532;
extern T0* T364f48(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_ec_template */
extern unsigned char ge1279os18531;
extern T0* ge1279ov18531;
extern T0* T364f46(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_def_template */
extern unsigned char ge1279os18530;
extern T0* ge1279ov18530;
extern T0* T364f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_base_template */
extern unsigned char ge1279os18529;
extern T0* ge1279ov18529;
extern T0* T364f42(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template */
extern unsigned char ge1279os18526;
extern T0* ge1279ov18526;
extern T0* T364f40(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_2 */
extern void T364f222(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_array_subcopy */
extern void T364f223(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_PE_ENTITY_DEF.integer_array_ */
extern T0* T364f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_chk_template_1 */
extern void T364f221(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template */
extern unsigned char ge1279os18523;
extern T0* ge1279ov18523;
extern T0* T364f38(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_2 */
extern void T364f220(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_nxt_template_1 */
extern void T364f219(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.empty_buffer */
extern T0* T364f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.make */
extern T0* T970c8(void);
/* XM_EIFFEL_PE_ENTITY_DEF.make_external */
extern void T364f209(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.is_external */
extern T1 T358f51(T0* C);
/* XM_EIFFEL_PARSER.new_external_entity */
extern T0* T96f168(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.make_external */
extern T0* T358c207(T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_scanner */
extern void T358f208(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T358f210(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T358f210p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.reset */
extern void T358f210p0(T0* C);
/* XM_EIFFEL_ENTITY_DEF.make_with_buffer */
extern void T358f209(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_load_input_buffer */
extern void T358f212(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_content */
extern void T358f214(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.special_integer_ */
extern T0* T358f32(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_initialize */
extern void T358f211(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_build_tables */
extern void T358f213(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_accept_template */
extern T0* T358f48(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_fixed_array */
extern T0* T358f52(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_meta_template */
extern T0* T358f46(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_ec_template */
extern T0* T358f44(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_def_template */
extern T0* T358f42(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_base_template */
extern T0* T358f40(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template */
extern T0* T358f38(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_2 */
extern void T358f218(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_array_subcopy */
extern void T358f219(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_ENTITY_DEF.integer_array_ */
extern T0* T358f54(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_chk_template_1 */
extern void T358f217(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template */
extern T0* T358f36(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_2 */
extern void T358f216(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.yy_nxt_template_1 */
extern void T358f215(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.empty_buffer */
extern T0* T358f6(T0* C);
/* XM_EIFFEL_PARSER.on_entity_declaration */
extern void T96f250(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_DTD_CALLBACKS_NULL.on_entity_declaration */
extern void T361f7(T0* C, T0* a1, T1 a2, T0* a3, T0* a4, T0* a5);
/* XM_EIFFEL_PARSER.when_entity_declared */
extern void T96f249(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.new_literal_entity */
extern T0* T96f167(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_ENTITY_DEF.make_literal */
extern T0* T358c206(T0* a1, T0* a2);
/* XM_DTD_ATTRIBUTE_CONTENT.set_default_value */
extern void T337f26(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_fixed */
extern void T337f25(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_implied */
extern void T337f24(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_value_required */
extern void T337f23(T0* C);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].resize */
extern T0* T357f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [STRING]].resized_area */
extern T0* T356f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [STRING]].copy_data */
extern void T356f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [STRING]].move_data */
extern void T356f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].overlapping_move */
extern void T356f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].non_overlapping_move */
extern void T356f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [STRING]].make */
extern T0* T356c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].make */
extern T0* T357f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [STRING]].make_area */
extern T0* T995c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [STRING]].default_create */
extern T0* T357c3(void);
/* DS_BILINKED_LIST [STRING].force_last */
extern void T338f12(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].put_right */
extern void T987f5(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].attach_left */
extern void T987f6(T0* C, T0* a1);
/* DS_BILINKABLE [STRING].make */
extern T0* T987c4(T0* a1);
/* DS_BILINKED_LIST [STRING].is_empty */
extern T1 T338f3(T0* C);
/* XM_EIFFEL_PARSER.new_string_bilinked_list */
extern T0* T96f162(T0* C);
/* DS_BILINKED_LIST [STRING].set_equality_tester */
extern void T338f13(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.string_equality_tester */
extern T0* T96f180(T0* C);
/* DS_BILINKED_LIST [STRING].make */
extern T0* T338c11(void);
/* DS_BILINKED_LIST [STRING].new_cursor */
extern T0* T338f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].make */
extern T0* T986c7(T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration_list */
extern void T337f22(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.set_enumeration */
extern void T337f27(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.default_enumeration_list */
extern unsigned char ge1191os19007;
extern T0* ge1191ov19007;
extern T0* T337f7(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_notation */
extern void T337f21(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_token */
extern void T337f20(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_entity */
extern void T337f19(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_list_type */
extern void T337f18(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id_ref */
extern void T337f17(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_id */
extern void T337f16(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_data */
extern void T337f15(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content */
extern T0* T96f160(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.make */
extern T0* T337c12(void);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].resize */
extern T0* T355f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].resized_area */
extern T0* T353f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].copy_data */
extern void T353f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].move_data */
extern void T353f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].overlapping_move */
extern void T353f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].non_overlapping_move */
extern void T353f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T353c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T355f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].make_area */
extern T0* T994c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ATTRIBUTE_CONTENT].default_create */
extern T0* T355c3(void);
/* XM_DTD_ATTRIBUTE_CONTENT.copy_default */
extern void T337f14(T0* C, T0* a1);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_implied */
extern T1 T337f11(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_required */
extern T1 T337f10(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.has_default_value */
extern T1 T337f9(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.is_value_fixed */
extern T1 T337f8(T0* C);
/* XM_DTD_ATTRIBUTE_CONTENT.set_name */
extern void T337f13(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resize */
extern T0* T354f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].resized_area */
extern T0* T351f3(T0* C, T6 a1);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].copy_data */
extern void T351f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].move_data */
extern void T351f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].overlapping_move */
extern void T351f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].non_overlapping_move */
extern void T351f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T351c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make */
extern T0* T354f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].make_area */
extern T0* T993c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].default_create */
extern T0* T354c3(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].force_last */
extern void T336f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].put_right */
extern void T985f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].attach_left */
extern void T985f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T985c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].is_empty */
extern T1 T336f3(T0* C);
/* XM_EIFFEL_PARSER.new_dtd_attribute_content_list */
extern T0* T96f153(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T336c8(void);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].new_cursor */
extern T0* T336f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].make */
extern T0* T984c7(T0* a1);
/* XM_EIFFEL_PARSER.on_attribute_declarations */
extern void T96f248(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].forth */
extern void T984f9(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_forth */
extern void T336f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].add_traversing_cursor */
extern void T336f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set_next_cursor */
extern void T984f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].remove_traversing_cursor */
extern void T336f13(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].set */
extern void T984f10(T0* C, T0* a1, T1 a2, T1 a3);
/* XM_EIFFEL_PARSER.on_attribute_declaration */
extern void T96f258(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_DTD_CALLBACKS_NULL.on_attribute_declaration */
extern void T361f9(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].item */
extern T0* T984f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ATTRIBUTE_CONTENT].start */
extern void T984f8(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_start */
extern void T336f10(T0* C, T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT].cursor_off */
extern T1 T336f7(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_more */
extern void T335f11(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_mixed */
extern T0* T335c10(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_mixed */
extern void T335f21(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_choice */
extern void T335f19(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_list */
extern void T335f16(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_default */
extern void T335f22(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one */
extern void T335f12(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_sequence */
extern void T335f20(T0* C);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T983c7(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].new_cursor */
extern T0* T983f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1206c3(T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_sequence */
extern T0* T335c9(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_last */
extern void T983f9(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].put_right */
extern void T1207f5(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].attach_left */
extern void T1207f6(T0* C, T0* a1);
/* DS_BILINKABLE [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T1207c4(T0* a1);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].is_empty */
extern T1 T983f3(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_choice */
extern T0* T335c8(void);
/* DS_BILINKED_LIST [XM_DTD_ELEMENT_CONTENT].force_first */
extern void T983f8(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.element_name */
extern T0* T96f147(T0* C, T0* a1);
/* XM_DTD_ELEMENT_CONTENT.make_name */
extern T0* T335c15(T0* a1);
/* XM_EIFFEL_PARSER.set_element_repetition */
extern void T96f247(T0* C, T0* a1, T0* a2);
/* XM_DTD_ELEMENT_CONTENT.set_zero_or_one */
extern void T335f14(T0* C);
/* XM_DTD_ELEMENT_CONTENT.set_one_or_more */
extern void T335f13(T0* C);
/* XM_DTD_ELEMENT_CONTENT.make_any */
extern T0* T335c7(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_any */
extern void T335f18(T0* C);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].resize */
extern T0* T349f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].resized_area */
extern T0* T348f3(T0* C, T6 a1);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].copy_data */
extern void T348f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].move_data */
extern void T348f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].overlapping_move */
extern void T348f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].non_overlapping_move */
extern void T348f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T348c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].make */
extern T0* T349f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_DTD_ELEMENT_CONTENT].make_area */
extern T0* T992c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_DTD_ELEMENT_CONTENT].default_create */
extern T0* T349c3(void);
/* XM_DTD_ELEMENT_CONTENT.make_empty */
extern T0* T335c6(void);
/* XM_DTD_ELEMENT_CONTENT.set_content_empty */
extern void T335f17(T0* C);
/* XM_EIFFEL_PARSER.on_element_declaration */
extern void T96f246(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_element_declaration */
extern void T361f6(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_attribute */
extern void T96f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].has */
extern T1 T334f1(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].search_position */
extern void T334f33(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_item */
extern T6 T334f11(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].hash_position */
extern T6 T334f12(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.hash_code */
extern T6 T331f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.item */
extern T0* T331f13(T0* C, T6 a1);
/* DS_BILINKED_LIST [STRING].item */
extern T0* T338f8(T0* C, T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].test */
extern T1 T981f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_item */
extern T0* T334f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_item */
extern T0* T334f29(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_equality_tester */
extern T0* T334f17(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_item */
extern T6 T334f13(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resize */
extern T0* T347f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].resized_area */
extern T0* T346f2(T0* C, T6 a1);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].copy_data */
extern void T346f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].move_data */
extern void T346f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].overlapping_move */
extern void T346f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].non_overlapping_move */
extern void T346f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T346c4(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make */
extern T0* T347f1(T0* C, T6 a1);
/* TO_SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].make_area */
extern T0* T991c2(T6 a1);
/* KL_SPECIAL_ROUTINES [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].default_create */
extern T0* T347c3(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].force_new */
extern void T334f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_put */
extern void T334f39(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_put */
extern void T334f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_put */
extern void T334f37(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].resize */
extern void T334f36(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].clashes_resize */
extern void T334f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].special_integer_ */
extern T0* T334f28(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].key_storage_resize */
extern void T334f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].item_storage_resize */
extern void T334f45(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].slots_resize */
extern void T334f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_modulus */
extern T6 T334f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_capacity */
extern T6 T334f7(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].unset_found_item */
extern void T334f35(T0* C);
/* XM_EIFFEL_PARSER.new_name_set */
extern T0* T96f134(T0* C);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_equal */
extern T0* T334c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T981c2(void);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make */
extern void T334f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].new_cursor */
extern T0* T334f21(T0* C);
/* DS_HASH_SET_CURSOR [XM_EIFFEL_PARSER_NAME].make */
extern T0* T982c3(T0* a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_slots */
extern void T334f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_clashes */
extern void T334f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_key_storage */
extern void T334f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_EIFFEL_PARSER_NAME].make_item_storage */
extern void T334f40(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.on_start_tag */
extern void T96f244(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER.on_end_tag */
extern void T96f243(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_EIFFEL_PARSER_NAME.local_part */
extern T0* T331f12(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].forth */
extern void T986f9(T0* C);
/* DS_BILINKED_LIST [STRING].cursor_forth */
extern void T338f15(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].add_traversing_cursor */
extern void T338f16(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING].set_next_cursor */
extern void T986f11(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].remove_traversing_cursor */
extern void T338f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [STRING].set */
extern void T986f10(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [STRING].item */
extern T0* T986f4(T0* C);
/* DS_BILINKED_LIST_CURSOR [STRING].start */
extern void T986f8(T0* C);
/* DS_BILINKED_LIST [STRING].cursor_start */
extern void T338f14(T0* C, T0* a1);
/* DS_BILINKED_LIST [STRING].cursor_off */
extern T1 T338f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.string_ */
extern T0* T331f17(T0* C);
/* XM_EIFFEL_PARSER_NAME.last */
extern T0* T331f16(T0* C);
/* DS_BILINKED_LIST [STRING].last */
extern T0* T338f9(T0* C);
/* XM_EIFFEL_PARSER_NAME.ns_prefix */
extern T0* T331f11(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_namespace_name */
extern T1 T331f15(T0* C);
/* XM_EIFFEL_PARSER.on_start_tag_finish */
extern void T96f242(T0* C);
/* XM_EIFFEL_PARSER_NAME.is_equal */
extern T1 T331f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.same_string */
extern T1 T331f14(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.string_equality_tester */
extern T0* T331f8(T0* C);
/* XM_EIFFEL_PARSER.when_external_dtd */
extern void T96f241(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.last_error */
extern T0* T330f2(T0* C);
/* XM_EIFFEL_PARSER.null_resolver */
extern unsigned char ge1277os10121;
extern T0* ge1277ov10121;
extern T0* T96f23(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern T0* T362c198(void);
/* XM_EIFFEL_SCANNER_DTD.set_start_condition */
extern void T362f205(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.make_scanner */
extern void T362f198p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T362f207(T0* C);
/* XM_EIFFEL_SCANNER_DTD.reset */
extern void T362f207p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.make_with_buffer */
extern void T362f206(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_load_input_buffer */
extern void T362f217(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_content */
extern void T362f218(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.special_integer_ */
extern T0* T362f184(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_initialize */
extern void T362f216(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_build_tables */
extern void T362f221(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_accept_template */
extern T0* T362f192(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_fixed_array */
extern T0* T362f195(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_meta_template */
extern T0* T362f191(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_ec_template */
extern T0* T362f190(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_def_template */
extern T0* T362f189(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_base_template */
extern T0* T362f188(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template */
extern T0* T362f187(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_2 */
extern void T362f225(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_array_subcopy */
extern void T362f226(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER_DTD.integer_array_ */
extern T0* T362f197(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_chk_template_1 */
extern void T362f224(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template */
extern T0* T362f186(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_2 */
extern void T362f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.yy_nxt_template_1 */
extern void T362f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.empty_buffer */
extern T0* T362f16(T0* C);
/* DS_LINKED_STACK [XM_EIFFEL_SCANNER].force */
extern void T327f8(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.has_error */
extern T1 T330f1(T0* C);
/* XM_EIFFEL_PARSER.resolve_external_id */
extern void T96f257(T0* C, T0* a1, T0* a2);
/* XM_NULL_EXTERNAL_RESOLVER.resolve */
extern void T330f6(T0* C, T0* a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_public */
extern void T330f5(T0* C, T0* a1, T0* a2);
/* XM_DTD_EXTERNAL_ID.is_public */
extern T1 T333f3(T0* C);
/* XM_EIFFEL_PARSER.on_dtd_end */
extern void T96f240(T0* C);
/* XM_DTD_CALLBACKS_NULL.on_dtd_end */
extern void T361f5(T0* C);
/* XM_EIFFEL_PARSER.on_doctype */
extern void T96f239(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.on_doctype */
extern void T361f4(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_DTD_CALLBACKS_NULL.make */
extern T0* T361c1(void);
/* XM_EIFFEL_DECLARATION.set_encoding */
extern void T332f9(T0* C, T0* a1);
/* XM_EIFFEL_DECLARATION.set_stand_alone */
extern void T332f8(T0* C, T1 a1);
/* XM_EIFFEL_DECLARATION.set_version */
extern void T332f11(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].resize */
extern T0* T342f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_DECLARATION].resized_area */
extern T0* T341f3(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_DECLARATION].copy_data */
extern void T341f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_DECLARATION].move_data */
extern void T341f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].overlapping_move */
extern void T341f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].non_overlapping_move */
extern void T341f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_DECLARATION].make */
extern T0* T341c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].make */
extern T0* T342f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_DECLARATION].make_area */
extern T0* T989c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_DECLARATION].default_create */
extern T0* T342c3(void);
/* XM_EIFFEL_DECLARATION.make */
extern T0* T332c7(void);
/* XM_EIFFEL_DECLARATION.process */
extern void T332f10(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_xml_declaration */
extern void T96f261(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_EIFFEL_PARSER.apply_encoding */
extern void T96f238(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_content */
extern void T96f237(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_dtd_processing_instruction */
extern void T96f236(T0* C, T0* a1, T0* a2);
/* XM_DTD_CALLBACKS_NULL.on_dtd_processing_instruction */
extern void T361f3(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_processing_instruction */
extern void T96f235(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER.on_dtd_comment */
extern void T96f234(T0* C, T0* a1);
/* XM_DTD_CALLBACKS_NULL.on_dtd_comment */
extern void T361f2(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_comment */
extern void T96f233(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.entity_referenced_in_entity_value */
extern T0* T96f117(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.defined_entity_referenced */
extern T0* T96f194(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.external_entity_to_string */
extern T0* T96f200(T0* C, T0* a1);
/* STRING_8.remove */
extern void T17f60(T0* C, T6 a1);
/* XM_NULL_EXTERNAL_RESOLVER.resolve_finish */
extern void T330f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_string */
extern void T905f29(T0* C, T6 a1);
/* KL_INTEGER_ROUTINES.platform */
extern T0* T139f2(T0* C);
/* XM_EIFFEL_PARSER.integer_ */
extern T0* T96f201(T0* C);
/* XM_EIFFEL_INPUT_STREAM.make_from_stream */
extern T0* T905c28(T0* a1);
/* DS_LINKED_QUEUE [CHARACTER].make */
extern T0* T1160c6(void);
/* XM_NULL_EXTERNAL_RESOLVER.last_stream */
extern T0* T330f3(T0* C);
/* XM_EIFFEL_ENTITY_DEF.is_literal */
extern T1 T358f62(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_literal */
extern T1 T364f63(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_external */
extern T1 T364f66(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item */
extern T0* T328f2(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_item */
extern T0* T328f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.force_error */
extern void T96f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.report_error */
extern void T96f230(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.on_error */
extern void T96f256(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.setup_error_state */
extern void T96f255(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.onstring_utf8 */
extern T0* T96f96(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.maximum_item_code */
extern T6 T96f189(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_latin1 */
extern T1 T96f188(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_from_utf8 */
extern T0* T96f184(T0* C, T0* a1);
/* UC_UTF8_STRING.make_from_utf8 */
extern T0* T904c55(T0* a1);
/* UC_UTF8_STRING.append_utf8 */
extern void T904f71(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.valid_utf8 */
extern T1 T903f1(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.is_encoded_next_byte */
extern T1 T903f10(T0* C, T2 a1);
/* UC_UTF8_ROUTINES.is_encoded_second_byte */
extern T1 T903f5(T0* C, T2 a1, T2 a2);
/* UC_UTF8_ROUTINES.is_encoded_first_byte */
extern T1 T903f2(T0* C, T2 a1);
/* XM_EIFFEL_PARSER.utf8 */
extern T0* T96f187(T0* C);
/* XM_EIFFEL_PARSER.is_string_mode_ascii */
extern T1 T96f185(T0* C);
/* XM_EIFFEL_PARSER.onstring_ascii */
extern T0* T96f94(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.is_string_mode_unicode */
extern T1 T96f183(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string */
extern T0* T96f115(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_string */
extern unsigned char ge1277os10189;
extern T0* ge1277ov10189;
extern T0* T96f193(T0* C);
/* XM_EIFFEL_PARSER.shared_empty_string_uc */
extern unsigned char ge1277os10190;
extern T0* ge1277ov10190;
extern T0* T96f192(T0* C);
/* XM_EIFFEL_PARSER.new_unicode_string_empty */
extern T0* T96f199(T0* C);
/* UC_UTF8_STRING.make_empty */
extern T0* T904c56(void);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].resize */
extern T0* T340f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].resized_area */
extern T0* T339f2(T0* C, T6 a1);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].copy_data */
extern void T339f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].move_data */
extern void T339f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].overlapping_move */
extern void T339f10(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].non_overlapping_move */
extern void T339f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].make */
extern T0* T339c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].make */
extern T0* T340f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_PARSER_NAME].make_area */
extern T0* T988c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_PARSER_NAME].default_create */
extern T0* T340c3(void);
/* XM_EIFFEL_PARSER.namespace_force_last */
extern void T96f231(T0* C, T0* a1, T0* a2);
/* XM_EIFFEL_PARSER_NAME.force_last */
extern void T331f19(T0* C, T0* a1);
/* XM_EIFFEL_PARSER_NAME.new_string_bilinked_list */
extern T0* T331f7(T0* C);
/* XM_EIFFEL_PARSER_NAME.can_force_last */
extern T1 T331f1(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.new_namespace_name */
extern T0* T96f111(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern void T331f20(T0* C);
/* XM_EIFFEL_PARSER_NAME.make_no_namespaces */
extern T0* T331c20(void);
/* XM_EIFFEL_PARSER_NAME.make_namespaces */
extern T0* T331c18(void);
/* XM_EIFFEL_PARSER.yy_push_last_value */
extern void T96f221(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.accept */
extern void T96f220(T0* C);
/* XM_EIFFEL_PARSER.yy_do_error_action */
extern void T96f218(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.report_eof_expected_error */
extern void T96f229(T0* C);
/* XM_EIFFEL_PARSER.read_token */
extern void T96f217(T0* C);
/* XM_EIFFEL_PARSER.process_attribute_entity */
extern void T96f228(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity_scanner */
extern void T96f254(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_start_condition */
extern void T358f221(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_start_condition */
extern void T364f225(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_error */
extern T1 T358f55(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.has_error */
extern T1 T364f56(T0* C);
/* XM_EIFFEL_ENTITY_DEF.apply_input_buffer */
extern void T358f220(T0* C);
/* KL_STRING_INPUT_STREAM.make */
extern T0* T1336c8(T0* a1);
/* UC_UTF8_ROUTINES.to_utf8 */
extern T0* T903f35(T0* C, T0* a1);
/* UC_UTF8_ROUTINES.append_code_to_utf8 */
extern void T903f37(T0* C, T0* a1, T6 a2);
/* UC_UTF8_ROUTINES.integer_ */
extern T0* T903f29(T0* C);
/* XM_EIFFEL_ENTITY_DEF.utf8 */
extern T0* T358f66(T0* C);
/* XM_EIFFEL_ENTITY_DEF.fatal_error */
extern void T358f228(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.apply_input_buffer */
extern void T364f224(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.utf8 */
extern T0* T364f68(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.fatal_error */
extern void T364f232(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_entity */
extern void T96f227(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.process_pe_entity */
extern void T96f226(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.special_integer_ */
extern T0* T96f29(T0* C);
/* XM_EIFFEL_PARSER.yy_init_value_stacks */
extern void T96f216(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_all */
extern void T96f225(T0* C);
/* XM_EIFFEL_PARSER.clear_all */
extern void T96f253(T0* C);
/* XM_EIFFEL_PARSER.clear_stacks */
extern void T96f259(T0* C);
/* XM_EIFFEL_PARSER.yy_clear_value_stacks */
extern void T96f260(T0* C);
/* SPECIAL [XM_EIFFEL_DECLARATION].clear_all */
extern void T341f6(T0* C);
/* SPECIAL [BOOLEAN].clear_all */
extern void T343f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [STRING]].clear_all */
extern void T356f6(T0* C);
/* SPECIAL [DS_BILINKED_LIST [XM_DTD_ATTRIBUTE_CONTENT]].clear_all */
extern void T351f6(T0* C);
/* SPECIAL [XM_DTD_ATTRIBUTE_CONTENT].clear_all */
extern void T353f6(T0* C);
/* SPECIAL [XM_DTD_ELEMENT_CONTENT].clear_all */
extern void T348f6(T0* C);
/* SPECIAL [XM_DTD_EXTERNAL_ID].clear_all */
extern void T344f6(T0* C);
/* SPECIAL [STRING].clear_all */
extern void T102f6(T0* C);
/* SPECIAL [DS_HASH_SET [XM_EIFFEL_PARSER_NAME]].clear_all */
extern void T346f6(T0* C);
/* SPECIAL [XM_EIFFEL_PARSER_NAME].clear_all */
extern void T339f6(T0* C);
/* XM_EIFFEL_PARSER.abort */
extern void T96f219(T0* C);
/* XM_EIFFEL_PARSER.on_start */
extern void T96f213(T0* C);
/* XM_CALLBACKS_NULL.make */
extern T0* T314c1(void);
/* XM_EIFFEL_PARSER.reset_error_state */
extern void T96f212(T0* C);
/* XM_EIFFEL_PARSER.reset */
extern void T96f208(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].wipe_out */
extern void T328f38(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].slots_wipe_out */
extern void T328f48(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].clashes_wipe_out */
extern void T328f47(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].key_storage_wipe_out */
extern void T328f46(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].item_storage_wipe_out */
extern void T328f45(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].move_all_cursors_after */
extern void T328f43(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].set_next_cursor */
extern void T978f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].set_position */
extern void T978f5(T0* C, T6 a1);
/* XM_EIFFEL_PARSER.make_scanner */
extern void T96f206(T0* C);
/* XM_EIFFEL_SCANNER.make_scanner */
extern T0* T323c196(void);
/* XM_EIFFEL_SCANNER.reset */
extern void T323f204(T0* C);
/* XM_EIFFEL_SCANNER.reset */
extern void T323f204p1(T0* C);
/* XM_EIFFEL_SCANNER.make_with_buffer */
extern void T323f203(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_load_input_buffer */
extern void T323f212(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_content */
extern void T323f213(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.special_integer_ */
extern T0* T323f182(T0* C);
/* XM_EIFFEL_SCANNER.yy_initialize */
extern void T323f211(T0* C);
/* XM_EIFFEL_SCANNER.yy_build_tables */
extern void T323f219(T0* C);
/* XM_EIFFEL_SCANNER.yy_accept_template */
extern T0* T323f190(T0* C);
/* XM_EIFFEL_SCANNER.yy_fixed_array */
extern T0* T323f193(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_meta_template */
extern T0* T323f189(T0* C);
/* XM_EIFFEL_SCANNER.yy_ec_template */
extern T0* T323f188(T0* C);
/* XM_EIFFEL_SCANNER.yy_def_template */
extern T0* T323f187(T0* C);
/* XM_EIFFEL_SCANNER.yy_base_template */
extern T0* T323f186(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template */
extern T0* T323f185(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_2 */
extern void T323f223(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_array_subcopy */
extern void T323f224(T0* C, T0* a1, T0* a2, T6 a3, T6 a4, T6 a5);
/* XM_EIFFEL_SCANNER.integer_array_ */
extern T0* T323f195(T0* C);
/* XM_EIFFEL_SCANNER.yy_chk_template_1 */
extern void T323f222(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template */
extern T0* T323f184(T0* C);
/* XM_EIFFEL_SCANNER.yy_nxt_template_2 */
extern void T323f221(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.yy_nxt_template_1 */
extern void T323f220(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.empty_buffer */
extern T0* T323f15(T0* C);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables */
extern T0* T38c230(T0* a1, T0* a2);
/* ET_XACE_UNIVERSE_PARSER.make_with_variables_and_factory */
extern void T38f232(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_TO_TREE_FILTER.enable_position_table */
extern void T90f10(T0* C, T0* a1);
/* XM_POSITION_TABLE.make */
extern T0* T86c3(void);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T901c8(void);
/* XM_EIFFEL_PARSER.set_callbacks */
extern void T96f205(T0* C, T0* a1);
/* XM_TREE_CALLBACKS_PIPE.make */
extern T0* T88c10(void);
/* XM_TREE_CALLBACKS_PIPE.callbacks_pipe */
extern T0* T88f9(T0* C, T0* a1);
/* ARRAY [XM_CALLBACKS_FILTER].item */
extern T0* T313f4(T0* C, T6 a1);
/* XM_CALLBACKS_TO_TREE_FILTER.make_null */
extern T0* T90c9(void);
/* XM_TREE_CALLBACKS_PIPE.new_stop_on_error */
extern T0* T88f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.make_null */
extern T0* T89c4(void);
/* XM_TREE_CALLBACKS_PIPE.new_namespace_resolver */
extern T0* T88f6(T0* C);
/* XM_NAMESPACE_RESOLVER.make_null */
extern T0* T311c25(void);
/* XM_EIFFEL_PARSER.set_string_mode_mixed */
extern void T96f204(T0* C);
/* XM_EIFFEL_PARSER.make */
extern T0* T96c202(void);
/* XM_EIFFEL_PARSER.new_entities_table */
extern T0* T96f20(T0* C);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].set_key_equality_tester */
extern void T328f40(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].internal_set_equality_tester */
extern void T976f6(T0* C, T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_map_default */
extern T0* T328c37(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_map */
extern void T328f42(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_with_equality_testers */
extern void T328f54(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T976c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [XM_EIFFEL_ENTITY_DEF, STRING].new_cursor */
extern T0* T976f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T1204c3(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].new_cursor */
extern T0* T328f35(T0* C);
/* DS_HASH_TABLE_CURSOR [XM_EIFFEL_ENTITY_DEF, STRING].make */
extern T0* T978c4(T0* a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_sparse_container */
extern void T328f59(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_slots */
extern void T328f63(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_clashes */
extern void T328f62(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_key_storage */
extern void T328f61(T0* C, T6 a1);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].make_item_storage */
extern void T328f60(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].make */
extern T0* T980f2(T0* C, T6 a1);
/* TO_SPECIAL [XM_EIFFEL_ENTITY_DEF].make_area */
extern T0* T1205c2(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_EIFFEL_ENTITY_DEF].default_create */
extern T0* T980c3(void);
/* DS_HASH_TABLE [XM_EIFFEL_ENTITY_DEF, STRING].default_capacity */
extern T6 T328f7(T0* C);
/* XM_EIFFEL_PARSER.make_parser */
extern void T96f207(T0* C);
/* XM_EIFFEL_PARSER.yy_build_parser_tables */
extern void T96f211(T0* C);
/* XM_EIFFEL_PARSER.yycheck_template */
extern unsigned char ge1273os10068;
extern T0* ge1273ov10068;
extern T0* T96f50(T0* C);
/* XM_EIFFEL_PARSER.yyfixed_array */
extern T0* T96f182(T0* C, T0* a1);
/* XM_EIFFEL_PARSER.yytable_template */
extern unsigned char ge1273os10067;
extern T0* ge1273ov10067;
extern T0* T96f48(T0* C);
/* XM_EIFFEL_PARSER.yypgoto_template */
extern unsigned char ge1273os10066;
extern T0* ge1273ov10066;
extern T0* T96f46(T0* C);
/* XM_EIFFEL_PARSER.yypact_template */
extern unsigned char ge1273os10065;
extern T0* ge1273ov10065;
extern T0* T96f44(T0* C);
/* XM_EIFFEL_PARSER.yydefgoto_template */
extern unsigned char ge1273os10064;
extern T0* ge1273ov10064;
extern T0* T96f42(T0* C);
/* XM_EIFFEL_PARSER.yydefact_template */
extern unsigned char ge1273os10063;
extern T0* ge1273ov10063;
extern T0* T96f40(T0* C);
/* XM_EIFFEL_PARSER.yytypes2_template */
extern unsigned char ge1273os10062;
extern T0* ge1273ov10062;
extern T0* T96f38(T0* C);
/* XM_EIFFEL_PARSER.yytypes1_template */
extern unsigned char ge1273os10061;
extern T0* ge1273ov10061;
extern T0* T96f36(T0* C);
/* XM_EIFFEL_PARSER.yyr1_template */
extern unsigned char ge1273os10060;
extern T0* ge1273ov10060;
extern T0* T96f34(T0* C);
/* XM_EIFFEL_PARSER.yytranslate_template */
extern unsigned char ge1273os10059;
extern T0* ge1273ov10059;
extern T0* T96f32(T0* C);
/* XM_EIFFEL_PARSER.yy_create_value_stacks */
extern void T96f210(T0* C);
/* XM_EXPAT_PARSER_FACTORY.new_expat_parser */
extern T0* T94f2(T0* C);
/* XM_EXPAT_PARSER_FACTORY.is_expat_parser_available */
extern T1 T94f1(T0* C);
/* XM_EXPAT_PARSER_FACTORY.default_create */
extern T0* T94c3(void);
/* ET_XACE_VALIDATOR.make */
extern T0* T91c30(T0* a1);
/* ET_XACE_PREPROCESSOR.make */
extern T0* T92c10(T0* a1, T0* a2);
/* ET_XACE_LIBRARY_PARSER.set_parsed_libraries */
extern void T95f221(T0* C, T0* a1);
/* ET_XACE_LIBRARY_PARSER.make_with_variables_and_factory */
extern T0* T95c220(T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].set_key_equality_tester */
extern void T93f38(T0* C, T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].internal_set_equality_tester */
extern void T318f6(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_map */
extern T0* T93c36(T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_with_equality_testers */
extern void T93f39(T0* C, T6 a1, T0* a2, T0* a3);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].make */
extern T0* T318c5(T0* a1);
/* DS_SPARSE_TABLE_KEYS [ET_XACE_LIBRARY, STRING].new_cursor */
extern T0* T318f4(T0* C);
/* DS_SPARSE_TABLE_KEYS_CURSOR [ET_XACE_LIBRARY, STRING].make */
extern T0* T968c3(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].new_cursor */
extern T0* T93f19(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_XACE_LIBRARY, STRING].make */
extern T0* T320c4(T0* a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_sparse_container */
extern void T93f46(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_slots */
extern void T93f50(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_clashes */
extern void T93f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_key_storage */
extern void T93f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_XACE_LIBRARY, STRING].make_item_storage */
extern void T93f47(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].make */
extern T0* T322f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_XACE_LIBRARY].make_area */
extern T0* T969c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_XACE_LIBRARY].default_create */
extern T0* T322c3(void);
/* ET_XACE_AST_FACTORY.make */
extern T0* T83c9(void);
/* DS_HASH_TABLE [STRING, STRING].force_last */
extern void T40f39(T0* C, T0* a1, T0* a2);
/* GEC.execution_environment */
extern T0* T21f14(T0* C);
/* GEC.string_equality_tester */
extern T0* T21f13(T0* C);
/* ET_XACE_DEFAULT_ERROR_HANDLER.make_standard */
extern T0* T39c8(void);
/* ET_XACE_DEFAULT_ERROR_HANDLER.std */
extern T0* T39f4(T0* C);
/* KL_STRING_ROUTINES.same_string */
extern T1 T26f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.elks_same_string */
extern T1 T26f4(T0* C, T0* a1, T0* a2);
/* UC_UTF8_STRING.same_string */
extern T1 T904f5(T0* C, T0* a1);
/* UC_UTF8_STRING.same_unicode_string */
extern T1 T904f4(T0* C, T0* a1);
/* UC_UTF8_STRING.unicode_substring_index */
extern T6 T904f29(T0* C, T0* a1, T6 a2);
/* UC_UTF8_STRING.substring */
extern T0* T904f16(T0* C, T6 a1, T6 a2);
/* UC_UTF8_STRING.make_from_substring */
extern T0* T904c67(T0* a1, T6 a2, T6 a3);
/* STRING_8.substring */
extern T0* T17f17(T0* C, T6 a1, T6 a2);
/* GEC.string_ */
extern T0* T21f5(T0* C);
/* INTEGER_32.infix ">" */
extern T1 T6f1(T6* C, T6 a1);
/* KL_TEXT_INPUT_FILE.is_open_read */
extern T1 T22f1(T0* C);
/* KL_TEXT_INPUT_FILE.old_is_open_read */
extern T1 T22f2(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f40(T0* C);
/* KL_TEXT_INPUT_FILE.old_open_read */
extern void T22f43(T0* C);
/* KL_TEXT_INPUT_FILE.default_pointer */
extern T14 T22f18(T0* C);
/* KL_TEXT_INPUT_FILE.open_read */
extern void T22f43p1(T0* C);
/* KL_TEXT_INPUT_FILE.file_open */
extern T14 T22f20(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.old_is_readable */
extern T1 T22f14(T0* C);
/* UNIX_FILE_INFO.is_readable */
extern T1 T246f1(T0* C);
/* UNIX_FILE_INFO.file_eaccess */
extern T1 T246f3(T0* C, T14 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.make */
extern void T22f39(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.make */
extern T0* T22c39(T0* a1);
/* KL_TEXT_INPUT_FILE.old_make */
extern void T22f42(T0* C, T0* a1);
/* KL_TEXT_INPUT_FILE.string_ */
extern T0* T22f8(T0* C);
/* GEC.parse_arguments */
extern void T21f27(T0* C);
/* DS_ARRAYED_LIST [STRING].first */
extern T0* T76f3(T0* C);
/* UT_ERROR_HANDLER.report_info_message */
extern void T24f7(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_usage_instruction */
extern T0* T37f1(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].forth */
extern void T78f21(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_forth */
extern void T78f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_position */
extern void T308f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].add_traversing_cursor */
extern void T78f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].set_next_cursor */
extern void T308f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].remove_traversing_cursor */
extern void T78f26(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.alternative_usage_instruction */
extern T0* T37f3(T0* C, T0* a1, T0* a2);
/* ST_WORD_WRAPPER.wrapped_string */
extern T0* T82f1(T0* C, T0* a1);
/* ST_WORD_WRAPPER.canonify_whitespace */
extern void T82f12(T0* C, T0* a1);
/* ST_WORD_WRAPPER.is_space */
extern T1 T82f8(T0* C, T2 a1);
/* ST_WORD_WRAPPER.string_ */
extern T0* T82f2(T0* C);
/* ST_WORD_WRAPPER.set_new_line_indentation */
extern void T82f10(T0* C, T6 a1);
/* AP_DISPLAY_HELP_FLAG.wrapper */
extern unsigned char ge71os3835;
extern T0* ge71ov3835;
extern T0* T37f8(T0* C);
/* ST_WORD_WRAPPER.set_maximum_text_width */
extern void T82f11(T0* C, T6 a1);
/* ST_WORD_WRAPPER.make */
extern T0* T82c9(void);
/* STRING_8.make_filled */
extern T0* T17c40(T2 a1, T6 a2);
/* STRING_8.fill_character */
extern void T17f45(T0* C, T2 a1);
/* SPECIAL [CHARACTER_8].fill_with */
extern void T15f10(T0* C, T2 a1, T6 a2, T6 a3);
/* KL_UNIX_FILE_SYSTEM.basename */
extern T0* T66f2(T0* C, T0* a1);
/* KL_UNIX_FILE_SYSTEM.root_directory */
extern unsigned char ge320os8471;
extern T0* ge320ov8471;
extern T0* T66f9(T0* C);
/* KL_UNIX_FILE_SYSTEM.is_root_directory */
extern T1 T66f8(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.basename */
extern T0* T65f2(T0* C, T0* a1);
/* KL_WINDOWS_FILE_SYSTEM.root_directory */
extern unsigned char ge322os8471;
extern T0* ge322ov8471;
extern T0* T65f12(T0* C);
/* KL_WINDOWS_FILE_SYSTEM.is_root_directory */
extern T1 T65f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.arguments */
extern T0* T37f5(T0* C);
/* AP_DISPLAY_HELP_FLAG.file_system */
extern T0* T37f4(T0* C);
/* AP_DISPLAY_HELP_FLAG.unix_file_system */
extern T0* T37f11(T0* C);
/* AP_DISPLAY_HELP_FLAG.windows_file_system */
extern T0* T37f10(T0* C);
/* AP_DISPLAY_HELP_FLAG.operating_system */
extern T0* T37f9(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.forth */
extern void T31f16(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_forth */
extern void T31f18(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.add_traversing_cursor */
extern void T31f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T81f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.remove_traversing_cursor */
extern void T31f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].set */
extern void T81f7(T0* C, T0* a1, T1 a2, T1 a3);
/* AP_ALTERNATIVE_OPTIONS_LIST.item_for_iteration */
extern T0* T31f6(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_item */
extern T0* T31f8(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.after */
extern T1 T31f5(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_after */
extern T1 T31f7(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.start */
extern void T31f15(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_start */
extern void T31f17(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.cursor_off */
extern T1 T31f9(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.name */
extern T0* T37f20(T0* C);
/* CHARACTER_8.out */
extern T0* T2f1(T2* C);
/* AP_DISPLAY_HELP_FLAG.has_long_form */
extern T1 T37f18(T0* C);
/* AP_FLAG.name */
extern T0* T32f8(T0* C);
/* AP_FLAG.has_long_form */
extern T1 T32f9(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item_for_iteration */
extern T0* T78f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_item */
extern T0* T78f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].item */
extern T0* T78f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].after */
extern T1 T78f1(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_after */
extern T1 T78f4(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].start */
extern void T78f20(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_start */
extern void T78f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].is_empty */
extern T1 T78f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].off */
extern T1 T308f2(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_off */
extern T1 T78f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].cursor_before */
extern T1 T78f17(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.usage_instruction */
extern T0* T37f2(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].forth */
extern void T77f23(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_forth */
extern void T77f26(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_position */
extern void T304f6(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].add_traversing_cursor */
extern void T77f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].set_next_cursor */
extern void T304f7(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].remove_traversing_cursor */
extern void T77f28(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.example */
extern T0* T37f24(T0* C);
/* AP_FLAG.example */
extern T0* T32f12(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].item_for_iteration */
extern T0* T77f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_item */
extern T0* T77f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].item */
extern T0* T77f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].after */
extern T1 T77f1(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_after */
extern T1 T77f5(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].start */
extern void T77f22(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_start */
extern void T77f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].is_empty */
extern T1 T77f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].off */
extern T1 T304f2(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_off */
extern T1 T77f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].cursor_before */
extern T1 T77f19(T0* C, T0* a1);
/* GEC.report_version_number */
extern void T21f33(T0* C);
/* UT_ERROR_HANDLER.report_info */
extern void T24f9(T0* C, T0* a1);
/* UT_VERSION_NUMBER.make */
extern T0* T64c7(T0* a1);
/* AP_PARSER.parse_arguments */
extern void T30f27(T0* C);
/* AP_PARSER.parse_list */
extern void T30f29(T0* C, T0* a1);
/* AP_PARSER.final_error_action */
extern void T30f33(T0* C);
/* AP_PARSER.exceptions */
extern unsigned char ge333os1573;
extern T0* ge333ov1573;
extern T0* T30f21(T0* C);
/* KL_EXCEPTIONS.default_create */
extern T0* T29c1(void);
/* AP_ERROR_HANDLER.report_error_message */
extern void T79f10(T0* C, T0* a1);
/* AP_ERROR_HANDLER.report_error_message */
extern void T79f10p1(T0* C, T0* a1);
/* AP_PARSER.check_mandatory_options */
extern void T30f32(T0* C);
/* AP_ERROR_HANDLER.report_error */
extern void T79f9(T0* C, T0* a1);
/* AP_ERROR_HANDLER.message */
extern T0* T79f6(T0* C, T0* a1);
/* AP_ERROR.default_message */
extern T0* T80f12(T0* C);
/* AP_ERROR.message */
extern T0* T80f13(T0* C, T0* a1);
/* AP_ERROR.arguments */
extern T0* T80f15(T0* C);
/* AP_ERROR.string_ */
extern T0* T80f14(T0* C);
/* AP_ERROR.make_missing_option_error */
extern T0* T80c16(T0* a1);
/* AP_DISPLAY_HELP_FLAG.was_found */
extern T1 T37f23(T0* C);
/* AP_PARSER.parse_argument */
extern void T30f31(T0* C);
/* AP_PARSER.parse_short */
extern void T30f35(T0* C);
/* AP_DISPLAY_HELP_FLAG.record_occurrence */
extern void T37f40(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.display_help */
extern void T37f41(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.exceptions */
extern T0* T37f28(T0* C);
/* AP_ERROR_HANDLER.report_info_message */
extern void T79f11(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.full_help_text */
extern T0* T37f27(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.option_help_text */
extern T0* T37f33(T0* C, T0* a1, T6 a2);
/* AP_DISPLAY_HELP_FLAG.names */
extern T0* T37f32(T0* C);
/* AP_FLAG.names */
extern T0* T32f15(T0* C);
/* DS_QUICK_SORTER [AP_OPTION].sort */
extern void T1308f3(T0* C, T0* a1);
/* DS_QUICK_SORTER [AP_OPTION].sort_with_comparator */
extern void T1308f4(T0* C, T0* a1, T0* a2);
/* DS_QUICK_SORTER [AP_OPTION].subsort_with_comparator */
extern void T1308f5(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [AP_OPTION].swap */
extern void T77f30(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [AP_OPTION].replace */
extern void T77f29(T0* C, T0* a1, T6 a2);
/* AP_OPTION_COMPARATOR.less_than */
extern T1 T1307f1(T0* C, T0* a1, T0* a2);
/* KL_STRING_ROUTINES.three_way_comparison */
extern T6 T26f18(T0* C, T0* a1, T0* a2);
/* AP_OPTION_COMPARATOR.string_ */
extern T0* T1307f2(T0* C);
/* AP_PARSER.all_options */
extern T0* T30f15(T0* C);
/* DS_ARRAYED_LIST [AP_OPTION].has */
extern T1 T77f3(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].make */
extern T0* T77c20(T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].new_cursor */
extern T0* T77f14(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_OPTION].make */
extern T0* T304c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].make */
extern T0* T307f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_OPTION].make_area */
extern T0* T963c2(T6 a1);
/* SPECIAL [AP_OPTION].make */
extern T0* T306c4(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].default_create */
extern T0* T307c3(void);
/* DS_QUICK_SORTER [AP_OPTION].make */
extern T0* T1308c2(T0* a1);
/* AP_OPTION_COMPARATOR.default_create */
extern T0* T1307c3(void);
/* AP_FLAG.record_occurrence */
extern void T32f23(T0* C, T0* a1);
/* AP_ERROR.make_missing_parameter_error */
extern T0* T80c18(T0* a1);
/* DS_ARRAYED_LIST [STRING].off */
extern T1 T76f5(T0* C);
/* AP_DISPLAY_HELP_FLAG.needs_parameter */
extern T1 T37f19(T0* C);
/* AP_FLAG.needs_parameter */
extern T1 T32f10(T0* C);
/* AP_ERROR.make_unknown_option_error */
extern T0* T80c17(T0* a1);
/* AP_PARSER.parse_long */
extern void T30f34(T0* C);
/* AP_ERROR.make_unnecessary_parameter_error */
extern T0* T80c19(T0* a1, T0* a2);
/* DS_ARRAYED_LIST [STRING].forth */
extern void T76f25(T0* C);
/* DS_ARRAYED_LIST [STRING].item_for_iteration */
extern T0* T76f4(T0* C);
/* DS_ARRAYED_LIST [STRING].after */
extern T1 T76f1(T0* C);
/* DS_ARRAYED_LIST [STRING].start */
extern void T76f24(T0* C);
/* AP_PARSER.reset_parser */
extern void T30f30(T0* C);
/* AP_DISPLAY_HELP_FLAG.reset */
extern void T37f39(T0* C);
/* AP_FLAG.reset */
extern void T32f22(T0* C);
/* AP_ERROR_HANDLER.reset */
extern void T79f8(T0* C);
/* DS_ARRAYED_LIST [STRING].force */
extern void T76f23(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].put */
extern void T76f29(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_cursors_right */
extern void T76f36(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].move_right */
extern void T76f35(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [STRING].put_last */
extern void T76f34(T0* C, T0* a1);
/* AP_PARSER.arguments */
extern T0* T30f10(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].force_last */
extern void T78f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern void T78f22(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].resize */
extern T0* T310f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].resized_area */
extern T0* T309f3(T0* C, T6 a1);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].copy_data */
extern void T309f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].move_data */
extern void T309f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].overlapping_move */
extern void T309f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].non_overlapping_move */
extern void T309f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T309c4(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_capacity */
extern T6 T78f14(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].extendible */
extern T1 T78f12(T0* C, T6 a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.make */
extern T0* T31c11(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.old_make */
extern void T31f14(T0* C);
/* AP_ALTERNATIVE_OPTIONS_LIST.new_cursor */
extern T0* T31f4(T0* C);
/* DS_LINKED_LIST_CURSOR [AP_OPTION].make */
extern T0* T81c6(T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_parameters_description */
extern void T31f13(T0* C, T0* a1);
/* AP_ALTERNATIVE_OPTIONS_LIST.set_introduction_option */
extern void T31f12(T0* C, T0* a1);
/* AP_FLAG.make */
extern T0* T32c18(T2 a1, T0* a2);
/* AP_FLAG.initialize */
extern void T32f20(T0* C);
/* AP_FLAG.set_long_form */
extern void T32f19(T0* C, T0* a1);
/* AP_FLAG.set_short_form */
extern void T32f21(T0* C, T2 a1);
/* DS_ARRAYED_LIST [AP_OPTION].force_last */
extern void T77f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [AP_OPTION].resize */
extern void T77f24(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [AP_OPTION].resize */
extern T0* T307f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [AP_OPTION].resized_area */
extern T0* T306f3(T0* C, T6 a1);
/* SPECIAL [AP_OPTION].copy_data */
extern void T306f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [AP_OPTION].move_data */
extern void T306f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].overlapping_move */
extern void T306f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [AP_OPTION].non_overlapping_move */
extern void T306f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [AP_OPTION].new_capacity */
extern T6 T77f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [AP_OPTION].extendible */
extern T1 T77f15(T0* C, T6 a1);
/* AP_FLAG.set_description */
extern void T32f17(T0* C, T0* a1);
/* AP_FLAG.make_with_long_form */
extern T0* T32c16(T0* a1);
/* AP_PARSER.set_parameters_description */
extern void T30f26(T0* C, T0* a1);
/* AP_PARSER.set_application_description */
extern void T30f25(T0* C, T0* a1);
/* AP_PARSER.make */
extern T0* T30c24(void);
/* AP_DISPLAY_HELP_FLAG.set_description */
extern void T37f35(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.make */
extern T0* T37c34(T2 a1, T0* a2);
/* AP_DISPLAY_HELP_FLAG.initialize */
extern void T37f38(T0* C);
/* AP_DISPLAY_HELP_FLAG.set_long_form */
extern void T37f37(T0* C, T0* a1);
/* AP_DISPLAY_HELP_FLAG.set_short_form */
extern void T37f36(T0* C, T2 a1);
/* AP_PARSER.make_empty */
extern void T30f28(T0* C);
/* AP_ERROR_HANDLER.make_standard */
extern T0* T79c7(void);
/* AP_ERROR_HANDLER.std */
extern T0* T79f3(T0* C);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T78c18(T6 a1);
/* DS_ARRAYED_LIST [AP_ALTERNATIVE_OPTIONS_LIST].new_cursor */
extern T0* T78f11(T0* C);
/* DS_ARRAYED_LIST_CURSOR [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T308c5(T0* a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].make */
extern T0* T310f1(T0* C, T6 a1);
/* TO_SPECIAL [AP_ALTERNATIVE_OPTIONS_LIST].make_area */
extern T0* T964c2(T6 a1);
/* KL_SPECIAL_ROUTINES [AP_ALTERNATIVE_OPTIONS_LIST].default_create */
extern T0* T310c3(void);
/* UT_ERROR_HANDLER.make_standard */
extern T0* T24c6(void);
/* UT_ERROR_HANDLER.std */
extern T0* T24f2(T0* C);
/* KL_ARGUMENTS.set_program_name */
extern void T23f5(T0* C, T0* a1);
/* GEC.arguments */
extern T0* T21f1(T0* C);
/* KL_EXCEPTIONS.die */
extern void T29f2(T0* C, T6 a1);
/* GEC.exceptions */
extern T0* T21f6(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_type */
extern void T898f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.error_handler */
extern T0* T142f7(T0* C);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.set_fatal_error */
extern void T142f16(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_type */
extern void T303f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.item */
extern T0* T1236f3(T0* C, T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_type */
extern void T222f16(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type */
extern void T217f9(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.put_type_with_feature */
extern void T217f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_MANIFEST_TUPLE.expression */
extern T0* T523f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.item */
extern T0* T523f14(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_function_item */
extern T1 T202f52(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_function_feature */
extern T6 T202f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_function_item */
extern T1 T150f50(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_function_feature */
extern T6 T150f52(T0* C, T6 a1);
/* ET_DYNAMIC_PRECURSOR.is_builtin_routine_call */
extern T1 T202f51(T0* C);
/* ET_DYNAMIC_PRECURSOR.builtin_procedure_feature */
extern T6 T202f56(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.is_builtin_routine_call */
extern T1 T150f49(T0* C);
/* ET_DYNAMIC_FEATURE.builtin_procedure_feature */
extern T6 T150f54(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_regular */
extern void T150f67(T0* C, T1 a1);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type */
extern void T207f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T207f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.put_type_with_feature */
extern void T207f12p1(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_type */
extern void T205f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_type */
extern void T204f41(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_type */
extern void T203f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_type */
extern void T197f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_type */
extern void T144f37(T0* C, T0* a1, T0* a2);
/* ET_TAGGED_ASSERTION.reset */
extern void T815f7(T0* C);
/* ET_TAGGED_ASSERTION.process */
extern void T815f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_tagged_assertion */
extern void T949f96(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.reset */
extern void T771f33(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.reset */
extern void T770f33(T0* C);
/* ET_SYMBOL_OPERATOR.reset */
extern void T463f74(T0* C);
/* ET_KEYWORD_OPERATOR.reset */
extern void T450f54(T0* C);
/* ET_FREE_OPERATOR.reset */
extern void T444f52(T0* C);
/* ET_CHOICE_RANGE.reset */
extern void T740f8(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T753f11(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.type */
extern T0* T753f5(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.reset */
extern void T753f11p1(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.reset */
extern void T183f16(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.name */
extern T0* T753f6(T0* C);
/* ET_PRECURSOR_INSTRUCTION.reset */
extern void T751f11(T0* C);
/* ET_CREATE_INSTRUCTION.reset */
extern void T713f13(T0* C);
/* ET_QUALIFIED_CALL.reset */
extern void T710f7(T0* C);
/* ET_QUALIFIED_CALL.name */
extern T0* T710f3(T0* C);
/* ET_CREATE_INSTRUCTION.type */
extern T0* T713f6(T0* C);
/* ET_BANG_INSTRUCTION.reset */
extern void T709f13(T0* C);
/* ET_CHECK_INSTRUCTION.reset */
extern void T707f12(T0* C);
/* ET_DEBUG_INSTRUCTION.reset */
extern void T705f6(T0* C);
/* ET_COMPOUND.reset */
extern void T625f11(T0* C);
/* ET_LOOP_INSTRUCTION.reset */
extern void T704f12(T0* C);
/* ET_LOOP_INSTRUCTION.until_expression */
extern T0* T704f8(T0* C);
/* ET_VARIANT.reset */
extern void T674f7(T0* C);
/* ET_LOOP_INVARIANTS.reset */
extern void T671f11(T0* C);
/* ET_INSPECT_INSTRUCTION.reset */
extern void T701f9(T0* C);
/* ET_WHEN_PART_LIST.reset */
extern void T722f7(T0* C);
/* ET_WHEN_PART.reset */
extern void T726f4(T0* C);
/* ET_CHOICE_LIST.reset */
extern void T728f11(T0* C);
/* ET_INSPECT_INSTRUCTION.expression */
extern T0* T701f6(T0* C);
/* ET_IF_INSTRUCTION.reset */
extern void T699f11(T0* C);
/* ET_ELSEIF_PART_LIST.reset */
extern void T715f7(T0* C);
/* ET_ELSEIF_PART.reset */
extern void T718f5(T0* C);
/* ET_ELSEIF_PART.expression */
extern T0* T718f3(T0* C);
/* ET_IF_INSTRUCTION.expression */
extern T0* T699f7(T0* C);
/* ET_ASSIGNMENT_ATTEMPT.reset */
extern void T698f6(T0* C);
/* ET_ASSIGNMENT.reset */
extern void T697f6(T0* C);
/* ET_ASSIGNER_INSTRUCTION.reset */
extern void T691f14(T0* C);
/* ET_RETRY_INSTRUCTION.reset */
extern void T460f16(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T184f10(T0* C);
/* ET_CALL_INSTRUCTION.reset */
extern void T184f10p1(T0* C);
/* ET_STATIC_CALL_INSTRUCTION.process */
extern void T753f12(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.process */
extern void T751f12(T0* C, T0* a1);
/* ET_CREATE_INSTRUCTION.process */
extern void T713f14(T0* C, T0* a1);
/* ET_BANG_INSTRUCTION.process */
extern void T709f14(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.process */
extern void T707f13(T0* C, T0* a1);
/* ET_DEBUG_INSTRUCTION.process */
extern void T705f7(T0* C, T0* a1);
/* ET_LOOP_INSTRUCTION.process */
extern void T704f13(T0* C, T0* a1);
/* ET_INSPECT_INSTRUCTION.process */
extern void T701f10(T0* C, T0* a1);
/* ET_IF_INSTRUCTION.process */
extern void T699f12(T0* C, T0* a1);
/* ET_ASSIGNMENT_ATTEMPT.process */
extern void T698f7(T0* C, T0* a1);
/* ET_ASSIGNMENT.process */
extern void T697f7(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.process */
extern void T691f15(T0* C, T0* a1);
/* ET_RETRY_INSTRUCTION.process */
extern void T460f17(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.process */
extern void T184f14(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.set_prefix */
extern void T651f46(T0* C);
/* ET_ALIAS_NAME.set_prefix */
extern void T647f82(T0* C);
/* ET_INFIX_FREE_NAME.set_prefix */
extern void T645f64(T0* C);
/* ET_INFIX_NAME.set_prefix */
extern void T644f93(T0* C);
/* ET_PREFIX_FREE_NAME.set_prefix */
extern void T643f64(T0* C);
/* ET_PREFIX_NAME.set_prefix */
extern void T642f65(T0* C);
/* ET_ALIAS_FREE_NAME.set_infix */
extern void T651f47(T0* C);
/* ET_ALIAS_NAME.set_infix */
extern void T647f83(T0* C);
/* ET_INFIX_FREE_NAME.set_infix */
extern void T645f65(T0* C);
/* ET_INFIX_NAME.set_infix */
extern void T644f94(T0* C);
/* ET_PREFIX_FREE_NAME.set_infix */
extern void T643f65(T0* C);
/* ET_PREFIX_NAME.set_infix */
extern void T642f66(T0* C);
/* ET_ALIAS_FREE_NAME.reset */
extern void T651f48(T0* C);
/* ET_ALIAS_NAME.reset */
extern void T647f84(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_cast_type */
extern void T484f45(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_cast_type */
extern void T483f46(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_cast_type */
extern void T482f46(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_sign */
extern void T484f44(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_sign */
extern void T483f45(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_sign */
extern void T482f45(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_type */
extern void T484f49(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_type */
extern void T483f50(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_type */
extern void T482f50(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.compute_value */
extern void T484f43(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.compute_value */
extern void T483f44(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.compute_value */
extern void T482f44(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_stream */
extern void T364f226(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T364f233(T0* C, T0* a1);
/* YY_FILE_BUFFER.name */
extern T0* T113f16(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_buffer */
extern void T364f233p1(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.new_file_buffer */
extern T0* T364f71(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_stream */
extern void T362f199(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T362f208(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_buffer */
extern void T362f208p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.new_file_buffer */
extern T0* T362f19(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_stream */
extern void T358f222(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T358f229(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_buffer */
extern void T358f229p1(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.new_file_buffer */
extern T0* T358f69(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_stream */
extern void T323f197(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T323f205(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_buffer */
extern void T323f205p1(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.new_file_buffer */
extern T0* T323f18(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T364f227(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T364f227p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.read_token */
extern void T364f227p0(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_action */
extern void T364f237(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.from_hexadecimal */
extern void T970f10(T0* C, T0* a1);
/* KL_STRING_ROUTINES.hexadecimal_to_integer */
extern T6 T26f17(T0* C, T0* a1);
/* XM_EIFFEL_CHARACTER_ENTITY.string_ */
extern T0* T970f7(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.to_utf8 */
extern T0* T970f3(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.utf8 */
extern T0* T970f6(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_ascii */
extern T1 T970f2(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.is_valid */
extern T1 T970f1(T0* C);
/* UC_UNICODE_ROUTINES.valid_non_surrogate_code */
extern T1 T1150f2(T0* C, T6 a1);
/* XM_EIFFEL_CHARACTER_ENTITY.unicode */
extern T0* T970f4(T0* C);
/* XM_EIFFEL_CHARACTER_ENTITY.from_decimal */
extern void T970f9(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.has_normalized_newline */
extern T1 T364f201(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_substring */
extern T0* T364f181(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_PE_ENTITY_DEF.text_count */
extern T6 T364f180(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.system_literal_text */
extern T0* T364f162(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text_item */
extern T2 T364f207(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern T0* T364f121(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.normalized_newline */
extern unsigned char ge1281os18592;
extern T0* ge1281ov18592;
extern T0* T364f121p1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_set_line_column */
extern void T364f241(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.text */
extern T0* T364f105(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.pop_start_condition */
extern void T364f240(T0* C);
/* DS_LINKED_STACK [INTEGER].remove */
extern void T971f7(T0* C);
/* DS_LINKED_STACK [INTEGER].item */
extern T6 T971f2(T0* C);
/* DS_LINKED_STACK [INTEGER].is_empty */
extern T1 T971f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition */
extern void T364f238(T0* C, T6 a1);
/* DS_LINKED_STACK [INTEGER].force */
extern void T971f6(T0* C, T6 a1);
/* DS_LINKABLE [INTEGER].put_right */
extern void T1203f4(T0* C, T0* a1);
/* DS_LINKABLE [INTEGER].make */
extern T0* T1203c3(T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_last_token */
extern void T364f239(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_execute_eof_action */
extern void T364f236(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.wrap */
extern T1 T364f99(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_refill_input_buffer */
extern void T364f235(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_null_trans_state */
extern T6 T364f98(T0* C, T6 a1);
/* XM_EIFFEL_PE_ENTITY_DEF.yy_previous_state */
extern T6 T364f97(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.terminate */
extern void T364f234(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T362f200(T0* C);
/* XM_EIFFEL_SCANNER_DTD.read_token */
extern void T362f200p1(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_action */
extern void T362f214(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.has_normalized_newline */
extern T1 T362f179(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_substring */
extern T0* T362f159(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER_DTD.text_count */
extern T6 T362f158(T0* C);
/* XM_EIFFEL_SCANNER_DTD.system_literal_text */
extern T0* T362f140(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text_item */
extern T2 T362f194(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.normalized_newline */
extern T0* T362f102(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_set_line_column */
extern void T362f220(T0* C);
/* XM_EIFFEL_SCANNER_DTD.text */
extern T0* T362f76(T0* C);
/* XM_EIFFEL_SCANNER_DTD.pop_start_condition */
extern void T362f219(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition */
extern void T362f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_execute_eof_action */
extern void T362f213(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.wrap */
extern T1 T362f67(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_refill_input_buffer */
extern void T362f212(T0* C);
/* XM_EIFFEL_SCANNER_DTD.yy_null_trans_state */
extern T6 T362f66(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER_DTD.yy_previous_state */
extern T6 T362f65(T0* C);
/* XM_EIFFEL_SCANNER_DTD.fatal_error */
extern void T362f211(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.terminate */
extern void T362f210(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_last_token */
extern void T362f209(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T358f223(T0* C);
/* XM_EIFFEL_ENTITY_DEF.read_token */
extern void T358f223p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_action */
extern void T358f232(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.has_normalized_newline */
extern T1 T358f198(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_substring */
extern T0* T358f178(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_ENTITY_DEF.text_count */
extern T6 T358f177(T0* C);
/* XM_EIFFEL_ENTITY_DEF.system_literal_text */
extern T0* T358f159(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text_item */
extern T2 T358f205(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T358f118(T0* C);
/* XM_EIFFEL_ENTITY_DEF.normalized_newline */
extern T0* T358f118p1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_set_line_column */
extern void T358f237(T0* C);
/* XM_EIFFEL_ENTITY_DEF.text */
extern T0* T358f102(T0* C);
/* XM_EIFFEL_ENTITY_DEF.pop_start_condition */
extern void T358f236(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition */
extern void T358f233(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.set_last_token */
extern void T358f235(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_execute_eof_action */
extern void T358f231(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.terminate */
extern void T358f234(T0* C);
/* XM_EIFFEL_ENTITY_DEF.wrap */
extern T1 T358f96(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_refill_input_buffer */
extern void T358f230(T0* C);
/* XM_EIFFEL_ENTITY_DEF.yy_null_trans_state */
extern T6 T358f95(T0* C, T6 a1);
/* XM_EIFFEL_ENTITY_DEF.yy_previous_state */
extern T6 T358f94(T0* C);
/* XM_EIFFEL_SCANNER.read_token */
extern void T323f198(T0* C);
/* XM_EIFFEL_SCANNER.yy_execute_action */
extern void T323f209(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.has_normalized_newline */
extern T1 T323f177(T0* C);
/* XM_EIFFEL_SCANNER.text_substring */
extern T0* T323f157(T0* C, T6 a1, T6 a2);
/* XM_EIFFEL_SCANNER.text_count */
extern T6 T323f156(T0* C);
/* XM_EIFFEL_SCANNER.system_literal_text */
extern T0* T323f138(T0* C);
/* XM_EIFFEL_SCANNER.text_item */
extern T2 T323f192(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.normalized_newline */
extern T0* T323f97(T0* C);
/* XM_EIFFEL_SCANNER.yy_set_line_column */
extern void T323f217(T0* C);
/* XM_EIFFEL_SCANNER.text */
extern T0* T323f71(T0* C);
/* XM_EIFFEL_SCANNER.pop_start_condition */
extern void T323f216(T0* C);
/* XM_EIFFEL_SCANNER.set_start_condition */
extern void T323f218(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.push_start_condition */
extern void T323f210(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.set_last_token */
extern void T323f215(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_execute_eof_action */
extern void T323f208(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.terminate */
extern void T323f214(T0* C);
/* XM_EIFFEL_SCANNER.wrap */
extern T1 T323f62(T0* C);
/* XM_EIFFEL_SCANNER.yy_refill_input_buffer */
extern void T323f207(T0* C);
/* XM_EIFFEL_SCANNER.yy_null_trans_state */
extern T6 T323f61(T0* C, T6 a1);
/* XM_EIFFEL_SCANNER.yy_previous_state */
extern T6 T323f60(T0* C);
/* XM_EIFFEL_SCANNER.fatal_error */
extern void T323f206(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T364f229(T0* C);
/* XM_EIFFEL_SCANNER_DTD.push_start_condition_dtd_ignore */
extern void T362f202(T0* C);
/* XM_EIFFEL_ENTITY_DEF.push_start_condition_dtd_ignore */
extern void T358f225(T0* C);
/* XM_EIFFEL_SCANNER.push_start_condition_dtd_ignore */
extern void T323f200(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.set_encoding */
extern void T364f230(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.set_encoding */
extern void T905f30(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.string_ */
extern T0* T905f7(T0* C);
/* XM_EIFFEL_SCANNER_DTD.set_encoding */
extern void T362f203(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_encoding */
extern void T358f226(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_encoding */
extern void T323f201(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.set_input_from_resolver */
extern void T364f231(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.set_input_from_resolver */
extern void T362f204(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.set_input_from_resolver */
extern void T358f227(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.set_input_from_resolver */
extern void T323f202(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.close_input */
extern void T364f228(T0* C);
/* KL_STRING_INPUT_STREAM.close */
extern void T1336f10(T0* C);
/* KL_STRING_INPUT_STREAM.is_closable */
extern T1 T1336f5(T0* C);
/* KL_TEXT_INPUT_FILE.is_closable */
extern T1 T22f32(T0* C);
/* XM_EIFFEL_SCANNER_DTD.close_input */
extern void T362f201(T0* C);
/* XM_EIFFEL_ENTITY_DEF.close_input */
extern void T358f224(T0* C);
/* XM_EIFFEL_SCANNER.close_input */
extern void T323f199(T0* C);
/* ET_ALIASED_FEATURE_NAME.reset */
extern void T649f7(T0* C);
/* XM_CHARACTER_DATA.process */
extern void T1223f5(T0* C, T0* a1);
/* XM_NODE_TYPER.process_character_data */
extern void T1320f17(T0* C, T0* a1);
/* XM_NODE_TYPER.reset */
extern void T1320f13(T0* C);
/* XM_PROCESSING_INSTRUCTION.process */
extern void T1222f7(T0* C, T0* a1);
/* XM_NODE_TYPER.process_processing_instruction */
extern void T1320f16(T0* C, T0* a1);
/* XM_COMMENT.process */
extern void T1221f6(T0* C, T0* a1);
/* XM_NODE_TYPER.process_comment */
extern void T1320f15(T0* C, T0* a1);
/* XM_ATTRIBUTE.process */
extern void T258f8(T0* C, T0* a1);
/* XM_NODE_TYPER.process_attribute */
extern void T1320f14(T0* C, T0* a1);
/* XM_ELEMENT.process */
extern void T85f40(T0* C, T0* a1);
/* XM_NODE_TYPER.process_element */
extern void T1320f11(T0* C, T0* a1);
/* XM_CHARACTER_DATA.node_set_parent */
extern void T1223f4(T0* C, T0* a1);
/* XM_PROCESSING_INSTRUCTION.node_set_parent */
extern void T1222f6(T0* C, T0* a1);
/* XM_COMMENT.node_set_parent */
extern void T1221f5(T0* C, T0* a1);
/* XM_ATTRIBUTE.node_set_parent */
extern void T258f6(T0* C, T0* a1);
/* XM_ELEMENT.node_set_parent */
extern void T85f32(T0* C, T0* a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.reset */
extern void T813f10(T0* C);
/* ET_QUESTION_MARK_SYMBOL.reset */
extern void T475f14(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.process */
extern void T813f12(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_typed_open_argument */
extern void T949f95(T0* C, T0* a1);
/* ET_QUESTION_MARK_SYMBOL.process */
extern void T475f16(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_question_mark_symbol */
extern void T949f91(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.reset */
extern void T1123f6(T0* C);
/* ET_AGENT_OPEN_TARGET.reset */
extern void T798f9(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.process */
extern void T1123f8(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_implicit_current_target */
extern void T949f90(T0* C, T0* a1);
/* ET_AGENT_OPEN_TARGET.process */
extern void T798f11(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_open_target */
extern void T949f94(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.set_index */
extern void T1349f6(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.set_index */
extern void T1339f18(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.set_index */
extern void T1240f16(T0* C, T6 a1);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.set_index */
extern void T1123f7(T0* C, T6 a1);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.set_index */
extern void T813f11(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_index */
extern void T805f39(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_index */
extern void T804f40(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_index */
extern void T803f40(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_index */
extern void T802f40(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_index */
extern void T801f41(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_index */
extern void T799f41(T0* C, T6 a1);
/* ET_AGENT_OPEN_TARGET.set_index */
extern void T798f10(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.set_index */
extern void T789f19(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.set_index */
extern void T782f27(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.set_index */
extern void T780f26(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.set_index */
extern void T779f19(T0* C, T6 a1);
/* ET_CALL_AGENT.set_index */
extern void T775f31(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.set_index */
extern void T774f19(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.set_index */
extern void T773f19(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.set_index */
extern void T772f18(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.set_index */
extern void T768f20(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.set_index */
extern void T766f19(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.set_index */
extern void T765f19(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.set_index */
extern void T764f19(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.set_index */
extern void T763f19(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.set_index */
extern void T758f20(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.set_index */
extern void T757f23(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.set_index */
extern void T742f28(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.set_index */
extern void T694f19(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.set_index */
extern void T523f26(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.set_index */
extern void T520f22(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.set_index */
extern void T491f39(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.set_index */
extern void T490f39(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.set_index */
extern void T489f36(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.set_index */
extern void T488f36(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_index */
extern void T486f40(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.set_index */
extern void T485f40(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.set_index */
extern void T484f50(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.set_index */
extern void T483f51(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.set_index */
extern void T482f51(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.set_index */
extern void T478f40(T0* C, T6 a1);
/* ET_QUESTION_MARK_SYMBOL.set_index */
extern void T475f15(T0* C, T6 a1);
/* ET_VOID.set_index */
extern void T466f30(T0* C, T6 a1);
/* ET_BIT_CONSTANT.set_index */
extern void T430f33(T0* C, T6 a1);
/* ET_RESULT.set_index */
extern void T206f30(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.set_index */
extern void T186f29(T0* C, T6 a1);
/* ET_CURRENT.set_index */
extern void T182f33(T0* C, T6 a1);
/* ET_IDENTIFIER.set_index */
extern void T119f97(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.set_index */
extern void T481f37(T0* C, T6 a1);
/* ET_VERBATIM_STRING.set_index */
extern void T480f41(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.set_index */
extern void T479f36(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T805f38(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T804f39(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.set_actual_arguments */
extern void T803f39(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T802f39(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T801f40(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.set_actual_arguments */
extern void T799f40(T0* C, T0* a1);
/* ET_CALL_AGENT.set_arguments */
extern void T775f30(T0* C, T0* a1);
/* ET_INFIX_OR_ELSE_OPERATOR.set_seed */
extern void T771f34(T0* C, T6 a1);
/* ET_INFIX_AND_THEN_OPERATOR.set_seed */
extern void T770f34(T0* C, T6 a1);
/* ET_BRACKET_SYMBOL.set_seed */
extern void T472f85(T0* C, T6 a1);
/* ET_SYMBOL_OPERATOR.set_seed */
extern void T463f76(T0* C, T6 a1);
/* ET_KEYWORD_OPERATOR.set_seed */
extern void T450f55(T0* C, T6 a1);
/* ET_FREE_OPERATOR.set_seed */
extern void T444f53(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.reset */
extern void T1339f19(T0* C);
/* ET_INFIX_CAST_EXPRESSION.reset */
extern void T1241f14(T0* C);
/* ET_CONVERT_EXPRESSION.reset */
extern void T1240f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.reset */
extern void T805f37(T0* C);
/* ET_POSTCONDITIONS.reset */
extern void T627f17(T0* C);
/* ET_PRECONDITIONS.reset */
extern void T621f17(T0* C);
/* ET_FORMAL_ARGUMENT_LIST.reset */
extern void T209f15(T0* C);
/* ET_FORMAL_COMMA_ARGUMENT.reset */
extern void T920f11(T0* C);
/* ET_FORMAL_ARGUMENT.reset */
extern void T214f10(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.reset */
extern void T794f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T804f38(T0* C);
/* ET_LOCAL_VARIABLE_LIST.reset */
extern void T623f14(T0* C);
/* ET_LOCAL_COMMA_VARIABLE.reset */
extern void T921f10(T0* C);
/* ET_LOCAL_VARIABLE.reset */
extern void T662f9(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.reset */
extern void T804f38p1(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T803f38(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.reset */
extern void T803f38p1(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.reset */
extern void T802f38(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T801f39(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.reset */
extern void T801f39p1(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T799f39(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.reset */
extern void T799f39p1(T0* C);
/* ET_MANIFEST_TYPE.reset */
extern void T789f18(T0* C);
/* ET_STRIP_EXPRESSION.reset */
extern void T782f26(T0* C);
/* ET_MANIFEST_ARRAY.reset */
extern void T780f25(T0* C);
/* ET_ONCE_MANIFEST_STRING.reset */
extern void T779f18(T0* C);
/* ET_CALL_AGENT.reset */
extern void T775f28(T0* C);
/* ET_OLD_EXPRESSION.reset */
extern void T774f18(T0* C);
/* ET_PREFIX_EXPRESSION.reset */
extern void T773f18(T0* C);
/* ET_EQUALITY_EXPRESSION.reset */
extern void T772f17(T0* C);
/* ET_INFIX_EXPRESSION.reset */
extern void T768f17(T0* C);
/* ET_EXPRESSION_ADDRESS.reset */
extern void T766f18(T0* C);
/* ET_RESULT_ADDRESS.reset */
extern void T765f18(T0* C);
/* ET_CURRENT_ADDRESS.reset */
extern void T764f18(T0* C);
/* ET_FEATURE_ADDRESS.reset */
extern void T763f18(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.reset */
extern void T758f19(T0* C);
/* ET_PRECURSOR_EXPRESSION.reset */
extern void T757f22(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T742f27(T0* C);
/* ET_STATIC_CALL_EXPRESSION.type */
extern T0* T742f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.reset */
extern void T742f27p1(T0* C);
/* ET_STATIC_CALL_EXPRESSION.name */
extern T0* T742f9(T0* C);
/* ET_BRACKET_EXPRESSION.reset */
extern void T694f18(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.reset */
extern void T784f13(T0* C);
/* ET_BRACKET_SYMBOL.reset */
extern void T472f84(T0* C);
/* ET_MANIFEST_TUPLE.reset */
extern void T523f25(T0* C);
/* ET_CREATE_EXPRESSION.reset */
extern void T520f21(T0* C);
/* ET_CREATE_EXPRESSION.type */
extern T0* T520f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.reset */
extern void T491f38(T0* C);
/* ET_C1_CHARACTER_CONSTANT.reset */
extern void T490f38(T0* C);
/* ET_FALSE_CONSTANT.reset */
extern void T489f35(T0* C);
/* ET_TRUE_CONSTANT.reset */
extern void T488f35(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.reset */
extern void T486f38(T0* C);
/* ET_REGULAR_REAL_CONSTANT.reset */
extern void T485f38(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.reset */
extern void T484f48(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.reset */
extern void T483f49(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.reset */
extern void T482f49(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.reset */
extern void T481f36(T0* C);
/* ET_VERBATIM_STRING.reset */
extern void T480f40(T0* C);
/* ET_REGULAR_MANIFEST_STRING.reset */
extern void T479f35(T0* C);
/* ET_C3_CHARACTER_CONSTANT.reset */
extern void T478f39(T0* C);
/* ET_VOID.reset */
extern void T466f29(T0* C);
/* ET_BIT_CONSTANT.reset */
extern void T430f32(T0* C);
/* ET_RESULT.reset */
extern void T206f29(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T186f25(T0* C);
/* ET_CALL_EXPRESSION.reset */
extern void T186f25p1(T0* C);
/* ET_CURRENT.reset */
extern void T182f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.process */
extern void T1339f17(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.process */
extern void T1241f13(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.process */
extern void T1240f15(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.process */
extern void T805f36(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.process */
extern void T804f37(T0* C, T0* a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.process */
extern void T803f37(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.process */
extern void T802f37(T0* C, T0* a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.process */
extern void T801f38(T0* C, T0* a1);
/* ET_DO_FUNCTION_INLINE_AGENT.process */
extern void T799f38(T0* C, T0* a1);
/* ET_MANIFEST_TYPE.process */
extern void T789f17(T0* C, T0* a1);
/* ET_STRIP_EXPRESSION.process */
extern void T782f25(T0* C, T0* a1);
/* ET_MANIFEST_ARRAY.process */
extern void T780f24(T0* C, T0* a1);
/* ET_ONCE_MANIFEST_STRING.process */
extern void T779f17(T0* C, T0* a1);
/* ET_CALL_AGENT.process */
extern void T775f27(T0* C, T0* a1);
/* ET_OLD_EXPRESSION.process */
extern void T774f17(T0* C, T0* a1);
/* ET_PREFIX_EXPRESSION.process */
extern void T773f17(T0* C, T0* a1);
/* ET_EQUALITY_EXPRESSION.process */
extern void T772f16(T0* C, T0* a1);
/* ET_INFIX_EXPRESSION.process */
extern void T768f16(T0* C, T0* a1);
/* ET_EXPRESSION_ADDRESS.process */
extern void T766f17(T0* C, T0* a1);
/* ET_RESULT_ADDRESS.process */
extern void T765f17(T0* C, T0* a1);
/* ET_CURRENT_ADDRESS.process */
extern void T764f17(T0* C, T0* a1);
/* ET_FEATURE_ADDRESS.process */
extern void T763f17(T0* C, T0* a1);
/* ET_PARENTHESIZED_EXPRESSION.process */
extern void T758f18(T0* C, T0* a1);
/* ET_PRECURSOR_EXPRESSION.process */
extern void T757f21(T0* C, T0* a1);
/* ET_STATIC_CALL_EXPRESSION.process */
extern void T742f26(T0* C, T0* a1);
/* ET_BRACKET_EXPRESSION.process */
extern void T694f17(T0* C, T0* a1);
/* ET_MANIFEST_TUPLE.process */
extern void T523f24(T0* C, T0* a1);
/* ET_CREATE_EXPRESSION.process */
extern void T520f20(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.process */
extern void T491f37(T0* C, T0* a1);
/* ET_C1_CHARACTER_CONSTANT.process */
extern void T490f37(T0* C, T0* a1);
/* ET_FALSE_CONSTANT.process */
extern void T489f34(T0* C, T0* a1);
/* ET_TRUE_CONSTANT.process */
extern void T488f34(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.process */
extern void T486f37(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.process */
extern void T485f37(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.process */
extern void T484f46(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.process */
extern void T483f47(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.process */
extern void T482f47(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.process */
extern void T481f35(T0* C, T0* a1);
/* ET_VERBATIM_STRING.process */
extern void T480f39(T0* C, T0* a1);
/* ET_REGULAR_MANIFEST_STRING.process */
extern void T479f34(T0* C, T0* a1);
/* ET_C3_CHARACTER_CONSTANT.process */
extern void T478f38(T0* C, T0* a1);
/* ET_VOID.process */
extern void T466f28(T0* C, T0* a1);
/* ET_BIT_CONSTANT.process */
extern void T430f31(T0* C, T0* a1);
/* ET_RESULT.process */
extern void T206f25(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.process */
extern void T186f24(T0* C, T0* a1);
/* ET_CURRENT.process */
extern void T182f27(T0* C, T0* a1);
/* ET_IDENTIFIER.process */
extern void T119f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_id */
extern void T638f79(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_id */
extern void T637f78(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_id */
extern void T632f76(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_id */
extern void T631f80(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_id */
extern void T629f80(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_id */
extern void T302f74(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_id */
extern void T297f78(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_id */
extern void T226f68(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_id */
extern void T225f70(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_id */
extern void T223f70(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_id */
extern void T163f81(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_feature */
extern void T638f101(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_feature */
extern void T637f100(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_feature */
extern void T632f99(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_feature */
extern void T631f102(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_feature */
extern void T629f102(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_feature */
extern void T302f97(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_feature */
extern void T297f100(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_feature */
extern void T226f90(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_feature */
extern void T225f94(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_feature */
extern void T223f93(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_feature */
extern void T163f103(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_class */
extern void T638f102(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_implementation_class */
extern void T637f101(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_implementation_class */
extern void T632f100(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_implementation_class */
extern void T631f103(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_implementation_class */
extern void T629f103(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_implementation_class */
extern void T302f98(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_implementation_class */
extern void T297f101(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_implementation_class */
extern void T226f91(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_class */
extern void T225f95(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_class */
extern void T223f94(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_implementation_class */
extern void T163f104(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset_preconditions */
extern void T638f99(T0* C);
/* ET_ONCE_PROCEDURE.reset_preconditions */
extern void T637f98(T0* C);
/* ET_DEFERRED_FUNCTION.reset_preconditions */
extern void T632f97(T0* C);
/* ET_ONCE_FUNCTION.reset_preconditions */
extern void T631f100(T0* C);
/* ET_DO_FUNCTION.reset_preconditions */
extern void T629f100(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_preconditions */
extern void T302f95(T0* C);
/* ET_DO_PROCEDURE.reset_preconditions */
extern void T297f98(T0* C);
/* ET_ATTRIBUTE.reset_preconditions */
extern void T226f88(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_preconditions */
extern void T225f92(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_preconditions */
extern void T223f91(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_preconditions */
extern void T163f101(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_postconditions */
extern void T638f100(T0* C);
/* ET_ONCE_PROCEDURE.reset_postconditions */
extern void T637f99(T0* C);
/* ET_DEFERRED_FUNCTION.reset_postconditions */
extern void T632f98(T0* C);
/* ET_ONCE_FUNCTION.reset_postconditions */
extern void T631f101(T0* C);
/* ET_DO_FUNCTION.reset_postconditions */
extern void T629f101(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_postconditions */
extern void T302f96(T0* C);
/* ET_DO_PROCEDURE.reset_postconditions */
extern void T297f99(T0* C);
/* ET_ATTRIBUTE.reset_postconditions */
extern void T226f89(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_postconditions */
extern void T225f93(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_postconditions */
extern void T223f92(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_postconditions */
extern void T163f102(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_first_precursor */
extern void T638f97(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_first_precursor */
extern void T637f96(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_first_precursor */
extern void T632f95(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_first_precursor */
extern void T631f98(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_first_precursor */
extern void T629f98(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_first_precursor */
extern void T302f93(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_first_precursor */
extern void T297f96(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_precursor */
extern void T226f86(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_precursor */
extern void T225f90(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_precursor */
extern void T223f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_first_precursor */
extern void T163f99(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_other_precursors */
extern void T638f98(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_precursors */
extern void T637f97(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_precursors */
extern void T632f96(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_precursors */
extern void T631f99(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_precursors */
extern void T629f99(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_precursors */
extern void T302f94(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_precursors */
extern void T297f97(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_precursors */
extern void T226f87(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_precursors */
extern void T225f91(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_precursors */
extern void T223f90(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_precursors */
extern void T163f100(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_version */
extern void T638f94(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_version */
extern void T637f93(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_version */
extern void T632f92(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_version */
extern void T631f95(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_version */
extern void T629f95(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_version */
extern void T302f90(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_version */
extern void T297f93(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_version */
extern void T226f79(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_version */
extern void T225f83(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_version */
extern void T223f82(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_version */
extern void T163f92(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.resolve_inherited_signature */
extern void T638f103(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.resolved_formal_parameters */
extern T0* T209f12(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_right_parenthesis */
extern void T209f17(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT_LIST.set_left_parenthesis */
extern void T209f16(T0* C, T0* a1);
/* ET_FORMAL_ARGUMENT.set_declared_type */
extern void T214f11(T0* C, T0* a1);
/* ET_FORMAL_COMMA_ARGUMENT.cloned_argument */
extern T0* T920f7(T0* C);
/* ET_FORMAL_ARGUMENT.cloned_argument */
extern T0* T214f7(T0* C);
/* ET_ONCE_PROCEDURE.resolve_inherited_signature */
extern void T637f102(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.resolve_inherited_signature */
extern void T632f101(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.resolve_inherited_signature */
extern void T631f104(T0* C, T0* a1);
/* ET_DO_FUNCTION.resolve_inherited_signature */
extern void T629f104(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.resolve_inherited_signature */
extern void T302f99(T0* C, T0* a1);
/* ET_DO_PROCEDURE.resolve_inherited_signature */
extern void T297f102(T0* C, T0* a1);
/* ET_ATTRIBUTE.resolve_inherited_signature */
extern void T226f92(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.resolve_inherited_signature */
extern void T225f96(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.resolve_inherited_signature */
extern void T223f95(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.resolve_inherited_signature */
extern void T163f105(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_clients */
extern void T638f77(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_clients */
extern void T637f76(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_clients */
extern void T632f74(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_clients */
extern void T631f78(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_clients */
extern void T629f78(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_clients */
extern void T302f72(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_clients */
extern void T297f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_clients */
extern void T226f67(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_clients */
extern void T225f69(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_clients */
extern void T223f69(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_clients */
extern void T163f79(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_first_seed */
extern void T638f93(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.set_first_seed */
extern void T637f92(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.set_first_seed */
extern void T632f91(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.set_first_seed */
extern void T631f94(T0* C, T6 a1);
/* ET_DO_FUNCTION.set_first_seed */
extern void T629f94(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.set_first_seed */
extern void T302f89(T0* C, T6 a1);
/* ET_DO_PROCEDURE.set_first_seed */
extern void T297f92(T0* C, T6 a1);
/* ET_ATTRIBUTE.set_first_seed */
extern void T226f78(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_seed */
extern void T225f82(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_seed */
extern void T223f81(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.set_first_seed */
extern void T163f91(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.set_other_seeds */
extern void T638f96(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_other_seeds */
extern void T637f95(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_other_seeds */
extern void T632f94(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_other_seeds */
extern void T631f97(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_other_seeds */
extern void T629f97(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_other_seeds */
extern void T302f92(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_other_seeds */
extern void T297f95(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_other_seeds */
extern void T226f85(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_other_seeds */
extern void T225f89(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_other_seeds */
extern void T223f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_other_seeds */
extern void T163f98(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_assertions_checked */
extern void T638f87(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_checked */
extern void T637f86(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_checked */
extern void T632f84(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_checked */
extern void T631f88(T0* C);
/* ET_DO_FUNCTION.set_assertions_checked */
extern void T629f88(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_checked */
extern void T302f82(T0* C);
/* ET_DO_PROCEDURE.set_assertions_checked */
extern void T297f86(T0* C);
/* ET_ATTRIBUTE.set_assertions_checked */
extern void T226f83(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_checked */
extern void T225f87(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_checked */
extern void T223f86(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_checked */
extern void T163f96(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_assertions_error */
extern void T638f88(T0* C);
/* ET_ONCE_PROCEDURE.set_assertions_error */
extern void T637f87(T0* C);
/* ET_DEFERRED_FUNCTION.set_assertions_error */
extern void T632f85(T0* C);
/* ET_ONCE_FUNCTION.set_assertions_error */
extern void T631f89(T0* C);
/* ET_DO_FUNCTION.set_assertions_error */
extern void T629f89(T0* C);
/* ET_DEFERRED_PROCEDURE.set_assertions_error */
extern void T302f83(T0* C);
/* ET_DO_PROCEDURE.set_assertions_error */
extern void T297f87(T0* C);
/* ET_ATTRIBUTE.set_assertions_error */
extern void T226f84(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_assertions_error */
extern void T225f88(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_assertions_error */
extern void T223f87(T0* C);
/* ET_EXTERNAL_FUNCTION.set_assertions_error */
extern void T163f97(T0* C);
/* ET_EXTERNAL_PROCEDURE.process */
extern void T638f82(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.process */
extern void T637f81(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.process */
extern void T632f79(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.process */
extern void T631f83(T0* C, T0* a1);
/* ET_DO_FUNCTION.process */
extern void T629f83(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.process */
extern void T302f77(T0* C, T0* a1);
/* ET_DO_PROCEDURE.process */
extern void T297f81(T0* C, T0* a1);
/* ET_ATTRIBUTE.process */
extern void T226f71(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.process */
extern void T225f73(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.process */
extern void T223f73(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.process */
extern void T163f84(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_implementation_checked */
extern void T638f83(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_checked */
extern void T637f82(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_checked */
extern void T632f80(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_checked */
extern void T631f84(T0* C);
/* ET_DO_FUNCTION.set_implementation_checked */
extern void T629f84(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_checked */
extern void T302f78(T0* C);
/* ET_DO_PROCEDURE.set_implementation_checked */
extern void T297f82(T0* C);
/* ET_ATTRIBUTE.set_implementation_checked */
extern void T226f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_checked */
extern void T225f74(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_checked */
extern void T223f74(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_checked */
extern void T163f85(T0* C);
/* ET_EXTERNAL_PROCEDURE.set_implementation_error */
extern void T638f84(T0* C);
/* ET_ONCE_PROCEDURE.set_implementation_error */
extern void T637f83(T0* C);
/* ET_DEFERRED_FUNCTION.set_implementation_error */
extern void T632f81(T0* C);
/* ET_ONCE_FUNCTION.set_implementation_error */
extern void T631f85(T0* C);
/* ET_DO_FUNCTION.set_implementation_error */
extern void T629f85(T0* C);
/* ET_DEFERRED_PROCEDURE.set_implementation_error */
extern void T302f79(T0* C);
/* ET_DO_PROCEDURE.set_implementation_error */
extern void T297f83(T0* C);
/* ET_ATTRIBUTE.set_implementation_error */
extern void T226f73(T0* C);
/* ET_UNIQUE_ATTRIBUTE.set_implementation_error */
extern void T225f75(T0* C);
/* ET_CONSTANT_ATTRIBUTE.set_implementation_error */
extern void T223f75(T0* C);
/* ET_EXTERNAL_FUNCTION.set_implementation_error */
extern void T163f86(T0* C);
/* ET_FEATURE_CHECKER.process_identifier */
extern void T951f73(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unqualified_call_expression_validity */
extern void T951f132(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_unqualified_call_expression */
extern void T951f193(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.force_last */
extern void T244f40(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.capacity */
extern T6 T244f16(T0* C);
/* ET_LIKE_FEATURE.is_like_argument */
extern T1 T685f27(T0* C);
/* ET_FEATURE_CHECKER.check_actual_arguments_validity */
extern void T951f191(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NESTED_TYPE_CONTEXT.remove_last */
extern void T244f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar2b_error */
extern void T52f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vuar2b */
extern T0* T884c787(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T52f119(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar2b_error */
extern void T28f365(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vuar2_error */
extern T1 T28f119(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar2a_error */
extern void T52f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vuar2a */
extern T0* T884c776(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vuar2a_error */
extern void T28f354(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vdpr4b_error */
extern void T52f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vdpr4b */
extern T0* T884c786(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T52f125(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr4b_error */
extern void T28f364(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.reportable_vdpr4_error */
extern T1 T28f125(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.put */
extern void T784f14(T0* C, T0* a1, T6 a2);
/* ET_ACTUAL_ARGUMENT_LIST.put */
extern void T183f17(T0* C, T0* a1, T6 a2);
/* ET_BRACKET_ARGUMENT_LIST.item */
extern T0* T784f8(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.item */
extern T0* T183f5(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.report_builtin_conversion */
extern void T951f220(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_creation_expression */
extern void T951f219(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_EXPRESSION.make */
extern T0* T1240c14(T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_qualified_call_expression */
extern void T951f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CONVERT_TO_EXPRESSION.make */
extern T0* T1339c16(T0* a1, T0* a2);
/* ET_TYPE_CHECKER.convert_feature */
extern T0* T169f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.constraint_base_type */
extern T0* T528f7(T0* C);
/* ET_FORMAL_PARAMETER.constraint */
extern T0* T528f19(T0* C);
/* ET_LACE_UNIVERSE.is_dotnet */
extern T1 T51f151(T0* C);
/* ET_XACE_UNIVERSE.is_dotnet */
extern T1 T48f155(T0* C);
/* ET_CLASS.convert_from_feature */
extern T0* T55f149(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BRACED_TYPE_LIST.has_named_type */
extern T1 T919f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONVERT_FEATURE_LIST.convert_feature */
extern T0* T499f6(T0* C, T6 a1);
/* ET_CONVERT_FEATURE_LIST.item */
extern T0* T499f7(T0* C, T6 a1);
/* ET_CLASS.convert_to_feature */
extern T0* T55f148(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_context */
extern T1 T244f19(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.tokens */
extern T0* T244f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vuar1b_error */
extern void T52f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuar1b */
extern T0* T884c785(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T52f109(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar1b_error */
extern void T28f363(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vuar1_error */
extern T1 T28f109(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vuar1a_error */
extern void T52f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vuar1a */
extern T0* T884c775(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vuar1a_error */
extern void T28f353(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr4a_error */
extern void T52f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr4a */
extern T0* T884c784(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr4a_error */
extern void T28f362(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_vape_validity */
extern void T951f190(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vape0b_error */
extern void T52f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0b */
extern T0* T884c783(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vape_error */
extern T1 T52f124(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vape0b_error */
extern void T28f361(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vape_error */
extern T1 T28f124(T0* C, T0* a1);
/* ET_CLIENTS.has_any */
extern T1 T414f10(T0* C);
/* ET_CLASS_NAME_LIST.has_any */
extern T1 T413f7(T0* C);
/* ET_CLASS_NAME_LIST.tokens */
extern T0* T413f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vape0a_error */
extern void T52f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vape0a */
extern T0* T884c782(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vape0a_error */
extern void T28f360(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_LACE_UNIVERSE.has_class */
extern T1 T51f150(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.has_class */
extern T1 T48f154(T0* C, T0* a1);
/* ET_CLIENTS.class_name */
extern T0* T414f9(T0* C, T6 a1);
/* ET_CLIENTS.item */
extern T0* T414f12(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.class_name */
extern T0* T413f6(T0* C, T6 a1);
/* ET_CLASS_NAME_LIST.item */
extern T0* T413f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vuex1a_error */
extern void T52f330(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuex1a */
extern T0* T884c752(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T52f106(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex1a_error */
extern void T28f330(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuex1_error */
extern T1 T28f106(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0a_error */
extern void T52f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0a */
extern T0* T884c749(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvual_error */
extern T1 T52f104(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvual0a_error */
extern void T28f327(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvual_error */
extern T1 T28f104(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvual0b_error */
extern void T52f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvual0b */
extern T0* T884c748(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvual0b_error */
extern void T28f326(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_expression_validity */
extern void T951f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_expression_supplier */
extern void T51f186(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_expression_supplier */
extern void T952f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_expression_supplier */
extern void T48f194(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0a_error */
extern void T52f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0a */
extern T0* T884c745(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T52f102(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuaa0a_error */
extern void T28f323(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuaa_error */
extern T1 T28f102(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuaa0b_error */
extern void T52f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuaa0b */
extern T0* T884c744(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuaa0b_error */
extern void T28f322(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.current_closure_impl */
extern T0* T951f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vkcn2c_error */
extern void T52f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn2c */
extern T0* T884c753(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T52f107(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn2c_error */
extern void T28f331(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn2_error */
extern T1 T28f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.error_handler */
extern T0* T951f21(T0* C);
/* ET_FEATURE_CHECKER.has_implementation_error */
extern T1 T951f30(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.set_fatal_error */
extern void T951f39(T0* C);
/* ET_IDENTIFIER.arguments */
extern T0* T119f80(T0* C);
/* ET_FEATURE_CHECKER.report_current_type_needed */
extern void T951f64(T0* C);
/* ET_FEATURE_CHECKER.check_unqualified_call_instruction_validity */
extern void T951f131(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_unqualified_call_instruction */
extern void T951f192(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvuil0a_error */
extern void T52f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0a */
extern T0* T884c751(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T52f105(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuil0a_error */
extern void T28f329(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuil_error */
extern T1 T28f105(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuil0b_error */
extern void T52f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuil0b */
extern T0* T884c750(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuil0b_error */
extern void T28f328(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_gvuia0a_error */
extern void T52f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0a */
extern T0* T884c747(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T52f103(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvuia0a_error */
extern void T28f325(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvuia_error */
extern T1 T28f103(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvuia0b_error */
extern void T52f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_gvuia0b */
extern T0* T884c746(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_gvuia0b_error */
extern void T28f324(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1c_error */
extern void T52f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vkcn1c */
extern T0* T884c743(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T52f101(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vkcn1c_error */
extern void T28f321(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vkcn1_error */
extern T1 T28f101(T0* C, T0* a1);
/* ET_IDENTIFIER.is_instruction */
extern T1 T119f22(T0* C);
/* ET_FEATURE_CHECKER.check_local_variable_validity */
extern void T951f130(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_local_variable */
extern void T951f189(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.resolved_formal_parameters */
extern T0* T951f29(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.resolved_formal_parameters */
extern T0* T169f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TYPE_CHECKER.error_handler */
extern T0* T169f9(T0* C);
/* ET_CLASS.ancestor */
extern T0* T55f120(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.base_type */
extern T0* T296f5(T0* C, T0* a1, T0* a2);
/* ET_TYPE_CHECKER.set_fatal_error */
extern void T169f16(T0* C);
/* ET_NULL_ERROR_HANDLER.report_veen2c_error */
extern void T52f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2c */
extern T0* T884c742(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen2_error */
extern T1 T52f100(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen2c_error */
extern void T28f320(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen2_error */
extern T1 T28f100(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2e_error */
extern void T52f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2e */
extern T0* T884c741(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2e_error */
extern void T28f319(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_formal_argument_validity */
extern void T951f129(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_formal_argument */
extern void T951f188(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_identifier */
extern void T949f30(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_identifier */
extern void T59f357(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_expression_validity */
extern void T59f373(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_expression */
extern void T59f392(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_dynamic_type_set */
extern void T59f356(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_operand_dynamic_types */
extern void T59f411(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.dynamic_type_set */
extern T0* T59f195(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_argument_dynamic_types */
extern void T59f410(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_actual_arguments_validity */
extern void T59f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_conversion */
extern void T59f397(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_expression */
extern void T59f396(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_expression */
extern void T59f395(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_QUALIFIED_QUERY_CALL.make */
extern T0* T207c9(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_vape_validity */
extern void T59f388(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_validity */
extern void T59f391(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.current_closure_impl */
extern T0* T59f186(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.has_implementation_error */
extern T1 T59f191(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current_type_needed */
extern void T59f338(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_instruction_validity */
extern void T59f372(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_instruction */
extern void T59f390(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_variable_validity */
extern void T59f371(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable */
extern void T59f387(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.resolved_formal_parameters */
extern T0* T59f187(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_argument_validity */
extern void T59f370(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument */
extern void T59f386(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_identifier */
extern void T56f472(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_identifier_call_expression */
extern void T56f478(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR.is_constant_attribute */
extern T1 T202f16(T0* C);
/* ET_DYNAMIC_FEATURE.is_constant_attribute */
extern T1 T150f19(T0* C);
/* DS_ARRAYED_LIST [ET_EXPRESSION].replace */
extern void T175f20(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [ET_EXPRESSION].is_empty */
extern T1 T175f12(T0* C);
/* ET_C_GENERATOR.print_unqualified_identifier_call_instruction */
extern void T56f477(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent_closed_operand */
extern void T56f476(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_closed_operand */
extern T1 T119f21(T0* C);
/* ET_C_GENERATOR.print_agent_open_operand */
extern void T56f475(T0* C, T0* a1);
/* ET_IDENTIFIER.is_agent_open_operand */
extern T1 T119f20(T0* C);
/* ET_FEATURE_CHECKER.process_current */
extern void T951f74(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_validity */
extern void T951f133(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_current */
extern void T951f194(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_current */
extern void T949f38(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current */
extern void T59f412(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_validity */
extern void T59f463(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_current */
extern void T59f507(T0* C, T0* a1);
/* ET_C_GENERATOR.process_current */
extern void T56f473(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current */
extern void T56f479(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result */
extern void T951f75(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_validity */
extern void T951f134(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result */
extern void T951f195(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen2a_error */
extern void T52f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2a */
extern T0* T884c758(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2a_error */
extern void T28f336(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2g_error */
extern void T52f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2g */
extern T0* T884c757(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2g_error */
extern void T28f335(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2d_error */
extern void T52f334(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_veen2d */
extern T0* T884c756(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_veen2d_error */
extern void T28f334(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen2b_error */
extern void T52f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2b */
extern T0* T884c755(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2b_error */
extern void T28f333(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_veen2f_error */
extern void T52f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen2f */
extern T0* T884c754(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen2f_error */
extern void T28f332(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_result */
extern void T949f39(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result */
extern void T59f413(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_validity */
extern void T59f464(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result */
extern void T59f508(T0* C, T0* a1);
/* ET_C_GENERATOR.process_result */
extern void T56f474(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result */
extern void T56f480(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class */
extern void T956f27(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class */
extern void T955f8(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_class */
extern void T950f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class */
extern void T948f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_class */
extern void T947f8(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_class */
extern void T946f14(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class */
extern void T945f8(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class */
extern void T944f8(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.process_class */
extern void T278f12(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.set_fatal_error */
extern void T278f14(T0* C, T0* a1);
/* ET_CLASS.set_ancestors_error */
extern void T55f217(T0* C);
/* ET_ANCESTOR_BUILDER.internal_process_class */
extern void T278f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1a_error */
extern void T52f285(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1a */
extern T0* T884c707(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].after */
extern T1 T1294f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_after */
extern T1 T1190f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].forth */
extern void T1294f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_forth */
extern void T1190f28(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_position */
extern void T1294f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].add_traversing_cursor */
extern void T1190f29(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].set_next_cursor */
extern void T1294f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].remove_traversing_cursor */
extern void T1190f30(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].item */
extern T0* T1294f4(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_item */
extern T0* T1190f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].start */
extern void T1294f10(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_start */
extern void T1190f27(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].is_empty */
extern T1 T1190f1(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS].off */
extern T1 T1294f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_off */
extern T1 T1190f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].cursor_before */
extern T1 T1190f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T52f76(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr1a_error */
extern void T28f285(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr1_error */
extern T1 T28f76(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].first */
extern T0* T1190f5(T0* C);
/* ET_ANCESTOR_BUILDER.set_parents_inheritance_error */
extern void T278f19(T0* C, T0* a1);
/* ET_PARENT_LIST.parent */
extern T0* T292f7(T0* C, T6 a1);
/* ET_PARENT_LIST.item */
extern T0* T292f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].wipe_out */
extern void T953f15(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].wipe_out */
extern void T1192f13(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].clear_items */
extern void T1192f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].move_all_cursors_after */
extern void T1192f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].set_next_cursor */
extern void T1300f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_LINKABLE [INTEGER]].set_position */
extern void T1300f5(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].wipe_out */
extern void T1191f37(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_wipe_out */
extern void T1191f47(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_wipe_out */
extern void T1191f46(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_wipe_out */
extern void T1191f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_wipe_out */
extern void T1191f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].move_all_cursors_after */
extern void T1191f42(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].set_next_cursor */
extern void T1297f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_CLASS].set_position */
extern void T1297f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].wipe_out */
extern void T1190f22(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].clear_items */
extern void T1190f26(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS].move_all_cursors_after */
extern void T1190f25(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].reset */
extern void T953f18(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has_cycle */
extern T1 T953f6(T0* C);
/* ET_ANCESTOR_BUILDER.check_parents_validity */
extern void T278f18(T0* C);
/* ET_PARENT_CHECKER1.check_parents_validity */
extern void T955f7(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.check_formal_parameters_validity */
extern void T278f17(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameters_validity */
extern void T956f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_cycles */
extern void T956f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vcfg3j_error */
extern void T52f413(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3j */
extern T0* T884c835(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].after */
extern T1 T1369f3(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_after */
extern T1 T1256f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].forth */
extern void T1369f11(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_forth */
extern void T1256f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_position */
extern void T1369f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].add_traversing_cursor */
extern void T1256f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1369f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].remove_traversing_cursor */
extern void T1256f24(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.upper_name */
extern T0* T536f20(T0* C);
/* ET_FORMAL_PARAMETER.upper_name */
extern T0* T528f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].item */
extern T0* T1369f2(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_item */
extern T0* T1256f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].start */
extern void T1369f10(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_start */
extern void T1256f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].is_empty */
extern T1 T1256f3(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FORMAL_PARAMETER].off */
extern T1 T1369f6(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_off */
extern T1 T1256f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].cursor_before */
extern T1 T1256f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].first */
extern T0* T1256f10(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T52f148(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg3j_error */
extern void T28f413(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcfg3_error */
extern T1 T28f148(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].wipe_out */
extern void T1197f13(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].wipe_out */
extern void T1303f36(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_wipe_out */
extern void T1303f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_wipe_out */
extern void T1303f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_wipe_out */
extern void T1303f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_wipe_out */
extern void T1303f42(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1303f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].set_next_cursor */
extern void T1390f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_FORMAL_PARAMETER].set_position */
extern void T1390f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].wipe_out */
extern void T1256f17(T0* C);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].clear_items */
extern void T1256f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].move_all_cursors_after */
extern void T1256f19(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].reset */
extern void T1197f15(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.set_constraint_base_type */
extern void T536f73(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.set_constraint_base_type */
extern void T528f69(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].item */
extern T0* T1256f2(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3g_error */
extern void T52f412(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3g */
extern T0* T884c834(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3g_error */
extern void T28f412(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].has_cycle */
extern T1 T1197f2(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].sort */
extern void T1197f12(T0* C);
/* ARRAY [BOOLEAN].item */
extern T1 T1255f4(T0* C, T6 a1);
/* ARRAY [BOOLEAN].put */
extern void T1255f6(T0* C, T1 a1, T6 a2);
/* ARRAY [BOOLEAN].make */
extern T0* T1255c5(T6 a1, T6 a2);
/* ARRAY [BOOLEAN].make_area */
extern void T1255f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].put_last */
extern void T1256f16(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].replace */
extern void T1192f16(T0* C, T0* a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].item */
extern T0* T1192f2(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].cloned_object */
extern T0* T1192f1(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].twin */
extern T0* T1192f3(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].copy */
extern void T1192f17(T0* C, T0* a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].twin */
extern T0* T1298f4(T0* C);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].valid_cursor */
extern T1 T1192f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER].cloned_object */
extern T0* T176f12(T0* C);
/* DS_ARRAYED_LIST [INTEGER].twin */
extern T0* T176f13(T0* C);
/* DS_ARRAYED_LIST [INTEGER].copy */
extern void T176f25(T0* C, T0* a1);
/* SPECIAL [INTEGER].twin */
extern T0* T103f5(T0* C);
/* DS_ARRAYED_LIST [INTEGER].valid_cursor */
extern T1 T176f14(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].count */
extern T6 T1197f1(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.check_constraint_validity */
extern void T956f11(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg2a_error */
extern void T52f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg2a */
extern T0* T884c833(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T52f147(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg2a_error */
extern void T28f411(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg2_error */
extern T1 T28f147(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg1a_error */
extern void T52f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg1a */
extern T0* T884c832(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T52f146(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcfg1a_error */
extern void T28f410(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vcfg1_error */
extern T1 T28f146(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.error_handler */
extern T0* T956f6(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.set_fatal_error */
extern void T956f10(T0* C);
/* ET_ANCESTOR_BUILDER.set_ancestors */
extern void T278f16(T0* C, T0* a1);
/* ET_CLASS.set_ancestors */
extern void T55f218(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].wipe_out */
extern void T954f48(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_wipe_out */
extern void T954f55(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_wipe_out */
extern void T954f54(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_wipe_out */
extern void T954f53(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_wipe_out */
extern void T954f52(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].move_all_cursors_after */
extern void T954f51(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].set_next_cursor */
extern void T1196f10(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].set_position */
extern void T1196f9(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].forth */
extern void T1196f8(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_forth */
extern void T954f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].add_traversing_cursor */
extern void T954f69(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].remove_traversing_cursor */
extern void T954f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_item */
extern T6 T954f27(T0* C, T6 a1);
/* ET_BASE_TYPE_LIST.put_last */
extern void T296f8(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].item */
extern T0* T1196f2(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_item */
extern T0* T954f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_item */
extern T0* T954f24(T0* C, T6 a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].after */
extern T1 T1196f1(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_after */
extern T1 T954f35(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_BASE_TYPE, INTEGER].start */
extern void T1196f7(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_start */
extern void T954f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].cursor_off */
extern T1 T954f39(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].is_empty */
extern T1 T954f38(T0* C);
/* ET_ANCESTOR_BUILDER.add_parent_to_ancestors */
extern void T278f21(T0* C, T0* a1);
/* ET_BASE_TYPE_LIST.item */
extern T0* T296f4(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set */
extern void T244f37(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].force_new */
extern void T954f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_put */
extern void T954f61(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_put */
extern void T954f60(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_put */
extern void T954f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_put */
extern void T954f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_item */
extern T6 T954f29(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].hash_position */
extern T6 T954f28(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].resize */
extern void T954f57(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].clashes_resize */
extern void T954f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_resize */
extern void T954f64(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].item_storage_resize */
extern void T954f63(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_BASE_TYPE].resize */
extern T0* T962f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_BASE_TYPE].resized_area */
extern T0* T961f3(T0* C, T6 a1);
/* SPECIAL [ET_BASE_TYPE].copy_data */
extern void T961f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_BASE_TYPE].move_data */
extern void T961f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].overlapping_move */
extern void T961f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_BASE_TYPE].non_overlapping_move */
extern void T961f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].key_storage_item */
extern T6 T954f33(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].slots_resize */
extern void T954f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].new_capacity */
extern T6 T954f25(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvagp0a_error */
extern void T52f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.set_se_reported */
extern void T884f665(T0* C, T1 a1);
/* ET_VALIDITY_ERROR.make_gvagp0a */
extern T0* T884c713(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T52f81(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvagp0a_error */
extern void T28f291(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_gvagp_error */
extern T1 T28f81(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].found_item */
extern T0* T954f23(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].found */
extern T1 T954f22(T0* C);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].search */
extern void T954f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_BASE_TYPE, INTEGER].search_position */
extern void T954f56(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso2a_error */
extern void T52f290(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso2a */
extern T0* T884c712(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T52f80(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso2a_error */
extern void T28f290(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso2_error */
extern T1 T28f80(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtct0a_error */
extern void T52f289(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtct0a */
extern T0* T884c711(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtct_error */
extern T1 T52f79(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtct0a_error */
extern void T28f289(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtct_error */
extern T1 T28f79(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhso1a_error */
extern void T52f288(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_gvhso1a */
extern T0* T884c710(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T52f78(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhso1a_error */
extern void T28f288(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_gvhso1_error */
extern T1 T28f78(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhay0a_error */
extern void T52f287(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vhay0a */
extern T0* T884c709(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vhay_error */
extern T1 T52f77(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhay0a_error */
extern void T28f287(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vhay_error */
extern T1 T28f77(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhpr1b_error */
extern void T52f286(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr1b */
extern T0* T884c708(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr1b_error */
extern void T28f286(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_dotnet */
extern T1 T55f70(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].item */
extern T0* T1190f4(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].sort */
extern void T953f14(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].put_last */
extern void T1190f21(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_class_to_sorter */
extern void T278f15(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.add_parents_to_sorter */
extern void T278f20(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force_relation */
extern void T953f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put_indexed_relation */
extern void T953f20(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].count */
extern T6 T953f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].index_of */
extern T6 T953f11(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].found_item */
extern T6 T1191f33(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_item */
extern T6 T1191f34(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].found */
extern T1 T1191f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].search */
extern void T1191f61(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].search_position */
extern void T1191f40(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_item */
extern T6 T1191f9(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].hash_position */
extern T6 T1191f12(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_item */
extern T0* T1191f11(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_item */
extern T6 T1191f13(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].force */
extern void T953f16(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].put */
extern void T953f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].put_last */
extern void T1192f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [INTEGER].put_last */
extern void T176f24(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].put */
extern void T1191f39(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_put */
extern void T1191f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_put */
extern void T1191f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_put */
extern void T1191f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_put */
extern void T1191f54(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [DS_LINKABLE [INTEGER]].resize */
extern void T1192f14(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKABLE [INTEGER]].resize */
extern T0* T1299f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKABLE [INTEGER]].resized_area */
extern T0* T1298f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKABLE [INTEGER]].copy_data */
extern void T1298f7(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKABLE [INTEGER]].move_data */
extern void T1298f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER]].overlapping_move */
extern void T1298f11(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKABLE [INTEGER]].non_overlapping_move */
extern void T1298f10(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].resize */
extern void T1191f38(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].clashes_resize */
extern void T1191f53(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].key_storage_resize */
extern void T1191f52(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].item_storage_resize */
extern void T1191f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].slots_resize */
extern void T1191f48(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].resize */
extern void T1190f23(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].capacity */
extern T6 T953f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_CLASS].has */
extern T1 T953f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_CLASS].has */
extern T1 T1191f1(T0* C, T0* a1);
/* ET_ANCESTOR_BUILDER.error_handler */
extern T0* T278f10(T0* C);
/* ET_CLASS.set_ancestors_built */
extern void T55f216(T0* C);
/* ET_ANCESTOR_BUILDER.none_class */
extern T0* T278f9(T0* C);
/* ET_IMPLEMENTATION_CHECKER.process_class */
extern void T276f18(T0* C, T0* a1);
/* ET_CLASS.set_suppliers */
extern void T55f213(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.set_fatal_error */
extern void T276f23(T0* C, T0* a1);
/* ET_CLASS.set_implementation_error */
extern void T55f215(T0* C);
/* ET_IMPLEMENTATION_CHECKER.set_flat_fatal_error */
extern void T276f22(T0* C, T0* a1);
/* ET_CLASS.set_flat_implementation_error */
extern void T55f214(T0* C);
/* ET_IMPLEMENTATION_CHECKER.internal_process_class */
extern void T276f21(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].extend */
extern void T405f70(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].forth */
extern void T1010f10(T0* C);
/* DS_HASH_SET [ET_CLASS].put */
extern void T405f72(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS].item */
extern T0* T1010f5(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].after */
extern T1 T1010f4(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS].start */
extern void T1010f9(T0* C);
/* DS_HASH_SET [ET_CLASS].remove */
extern void T405f69(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS].remove_position */
extern void T405f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_forth */
extern void T405f74(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].move_cursors_after */
extern void T405f75(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS].internal_set_key_equality_tester */
extern void T405f73(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_invariants_validity */
extern void T276f25(T0* C, T1 a1, T1 a2);
/* ET_FEATURE_CHECKER.check_invariants_validity */
extern void T951f36(T0* C, T0* a1, T0* a2);
/* ET_INVARIANTS.set_assertions_error */
extern void T503f29(T0* C);
/* ET_INVARIANTS.set_assertions_checked */
extern void T503f28(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vwbe0a_error */
extern void T52f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vwbe0a */
extern T0* T884c740(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T52f99(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwbe0a_error */
extern void T28f318(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vwbe_error */
extern T1 T28f99(T0* C, T0* a1);
/* ET_INVARIANTS.assertion */
extern T0* T503f11(T0* C, T6 a1);
/* ET_INVARIANTS.item */
extern T0* T503f12(T0* C, T6 a1);
/* ET_LACE_UNIVERSE.set_supplier_handler */
extern void T51f185(T0* C, T0* a1);
/* ET_XACE_UNIVERSE.set_supplier_handler */
extern void T48f193(T0* C, T0* a1);
/* ET_IMPLEMENTATION_CHECKER.check_features_validity */
extern void T276f24(T0* C, T1 a1, T1 a2);
/* ET_IMPLEMENTATION_CHECKER.check_assertions_validity */
extern void T276f26(T0* C, T0* a1, T0* a2, T1 a3, T1 a4);
/* ET_FEATURE_LIST.item */
extern T0* T1226f1(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_postconditions_validity */
extern void T951f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_POSTCONDITIONS.assertion */
extern T0* T627f7(T0* C, T6 a1);
/* ET_POSTCONDITIONS.item */
extern T0* T627f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_preconditions_validity */
extern void T951f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECONDITIONS.assertion */
extern T0* T621f7(T0* C, T6 a1);
/* ET_PRECONDITIONS.item */
extern T0* T621f8(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_feature_validity */
extern void T951f35(T0* C, T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.set_short_mode */
extern void T276f20(T0* C, T1 a1);
/* ET_IMPLEMENTATION_CHECKER.make_with_feature_checker */
extern T0* T276c19(T0* a1, T0* a2);
/* ET_IMPLEMENTATION_CHECKER.error_handler */
extern T0* T276f11(T0* C);
/* ET_CLASS.set_flat_implementation_checked */
extern void T55f212(T0* C);
/* ET_CLASS.set_implementation_checked */
extern void T55f211(T0* C);
/* ET_IMPLEMENTATION_CHECKER.none_class */
extern T0* T276f10(T0* C);
/* ET_INTERFACE_CHECKER.process_class */
extern void T275f8(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.set_fatal_error */
extern void T275f10(T0* C, T0* a1);
/* ET_CLASS.set_interface_error */
extern void T55f196(T0* C);
/* ET_INTERFACE_CHECKER.internal_process_class */
extern void T275f9(T0* C, T0* a1);
/* ET_INTERFACE_CHECKER.check_parents_validity */
extern void T275f12(T0* C);
/* ET_PARENT_CHECKER3.check_parents_validity */
extern void T950f7(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.set_fatal_error */
extern void T950f8(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].remove_last */
extern void T1190f19(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].move_last_cursors_after */
extern void T1190f24(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].last */
extern T0* T1190f2(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creations_validity */
extern void T275f11(T0* C);
/* ET_INTERFACE_CHECKER.check_constraint_creation_validity */
extern void T275f13(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0a_error */
extern void T52f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtgc0a */
extern T0* T884c633(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T52f34(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtgc0a_error */
extern void T28f210(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vtgc_error */
extern T1 T28f34(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtgc0b_error */
extern void T52f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vtgc0b */
extern T0* T884c632(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vtgc0b_error */
extern void T28f209(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcp3c_error */
extern void T52f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3c */
extern T0* T884c631(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T52f33(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp3c_error */
extern void T28f208(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcp3_error */
extern T1 T28f33(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.feature_name */
extern T0* T537f7(T0* C, T6 a1);
/* ET_CONSTRAINT_CREATOR.item */
extern T0* T537f8(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER.creation_procedures */
extern T0* T528f6(T0* C);
/* ET_INTERFACE_CHECKER.error_handler */
extern T0* T275f6(T0* C);
/* ET_CLASS.set_interface_checked */
extern void T55f195(T0* C);
/* ET_INTERFACE_CHECKER.none_class */
extern T0* T275f5(T0* C);
/* ET_FEATURE_FLATTENER.process_class */
extern void T274f27(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.set_fatal_error */
extern void T274f29(T0* C, T0* a1);
/* ET_CLASS.set_flattening_error */
extern void T55f209(T0* C);
/* ET_FEATURE_FLATTENER.internal_process_class */
extern void T274f28(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_features */
extern void T274f32(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].wipe_out */
extern void T934f59(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_wipe_out */
extern void T934f71(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_wipe_out */
extern void T934f70(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T934f69(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T934f68(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors_after */
extern void T934f67(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_next_cursor */
extern void T1169f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].set_position */
extern void T1169f5(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_convert_validity */
extern void T274f40(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found_item */
extern T0* T934f28(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_item */
extern T0* T934f32(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].found */
extern T1 T934f27(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search */
extern void T934f60(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].search_position */
extern void T934f61(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_item */
extern T6 T934f40(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].hash_position */
extern T6 T934f39(T0* C, T0* a1);
/* ET_FEATURE_NAME_TESTER.test */
extern T1 T935f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_item */
extern T0* T934f38(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_item */
extern T6 T934f35(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_creators_validity */
extern void T274f39(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcp2a_error */
extern void T52f256(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp2a */
extern T0* T884c678(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T52f61(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp2a_error */
extern void T28f256(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp2_error */
extern T1 T28f61(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp2b_error */
extern void T52f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp2b */
extern T0* T884c677(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp2b_error */
extern void T28f255(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6a_error */
extern void T52f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcc6a */
extern T0* T884c676(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T52f60(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc6a_error */
extern void T28f254(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vgcc6_error */
extern T1 T28f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp3b_error */
extern void T52f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3b */
extern T0* T884c675(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3b_error */
extern void T28f253(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcp3a_error */
extern void T52f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vgcp3a */
extern T0* T884c674(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vgcp3a_error */
extern void T28f252(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.feature_name */
extern T0* T591f8(T0* C, T6 a1);
/* ET_CREATOR.item */
extern T0* T591f11(T0* C, T6 a1);
/* ET_CREATOR_LIST.item */
extern T0* T497f7(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vgcp1a_error */
extern void T52f251(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vgcp1a */
extern T0* T884c673(T0* a1, T0* a2);
/* ET_CREATOR.position */
extern T0* T591f13(T0* C);
/* ET_CREATOR.first */
extern T0* T591f15(T0* C);
/* ET_CLIENTS.position */
extern T0* T414f14(T0* C);
/* ET_CLIENTS.first */
extern T0* T414f17(T0* C);
/* ET_CLIENTS.is_empty */
extern T1 T414f16(T0* C);
/* ET_CREATOR.clients_clause */
extern T0* T591f14(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T52f59(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcp1a_error */
extern void T28f251(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vgcp1_error */
extern T1 T28f59(T0* C, T0* a1);
/* ET_CREATOR_LIST.first */
extern T0* T497f6(T0* C);
/* ET_CREATOR_LIST.is_empty */
extern T1 T497f5(T0* C);
/* ET_FEATURE_FLATTENER.check_assigners_validity */
extern void T274f38(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vfac4a_error */
extern void T52f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_VALIDITY_ERROR.make_vfac4a */
extern T0* T884c672(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_NULL_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T52f58(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac4a_error */
extern void T28f250(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6);
/* ET_ERROR_HANDLER.reportable_vfac4_error */
extern T1 T28f58(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac3a_error */
extern void T52f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vfac3a */
extern T0* T884c671(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T52f57(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac3a_error */
extern void T28f249(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vfac3_error */
extern T1 T28f57(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac2a_error */
extern void T52f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vfac2a */
extern T0* T884c670(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T52f56(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac2a_error */
extern void T28f248(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vfac2_error */
extern T1 T28f56(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1b_error */
extern void T52f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1b */
extern T0* T884c669(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T52f55(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfac1b_error */
extern void T28f247(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfac1_error */
extern T1 T28f55(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfac1a_error */
extern void T52f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfac1a */
extern T0* T884c668(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfac1a_error */
extern void T28f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcch2a_error */
extern void T52f242(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.make_vcch2a */
extern T0* T884c663(T0* a1);
/* ET_NULL_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T52f52(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch2a_error */
extern void T28f242(T0* C, T0* a1);
/* ET_ERROR_HANDLER.reportable_vcch2_error */
extern T1 T28f52(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1a_error */
extern void T52f241(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1a */
extern T0* T884c662(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T52f51(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vcch1a_error */
extern void T28f241(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vcch1_error */
extern T1 T28f51(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcch1b_error */
extern void T52f240(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcch1b */
extern T0* T884c661(T0* a1, T0* a2);
/* ET_INHERITED_FEATURE.name */
extern T0* T1230f22(T0* C);
/* ET_PARENT_FEATURE.name */
extern T0* T1227f16(T0* C);
/* ET_PARENT_FEATURE.has_undefine */
extern T1 T1227f13(T0* C);
/* ET_ERROR_HANDLER.report_vcch1b_error */
extern void T28f240(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].go_after */
extern void T934f58(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_go_after */
extern void T934f66(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T934f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_off */
extern T1 T934f42(T0* C, T0* a1);
/* ET_CLASS.set_has_deferred_features */
extern void T55f210(T0* C, T1 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].wipe_out */
extern void T937f46(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_wipe_out */
extern void T937f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_wipe_out */
extern void T937f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_wipe_out */
extern void T937f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_wipe_out */
extern void T937f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].move_all_cursors_after */
extern void T937f53(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_next_cursor */
extern void T1175f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].set_position */
extern void T1175f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].forth */
extern void T934f57(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_forth */
extern void T934f65(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].add_traversing_cursor */
extern void T934f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_signature_validity */
extern void T274f37(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_signature_validity */
extern void T946f7(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1254f9(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1253f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1253f12(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1254f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1253f13(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].set */
extern void T1254f10(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_SIGNATURE_CHECKER.check_selected_signature_validity */
extern void T946f11(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd2c_error */
extern void T52f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2c */
extern T0* T884c736(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T52f95(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd2c_error */
extern void T28f314(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd2_error */
extern T1 T28f95(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2d_error */
extern void T52f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2d */
extern T0* T884c735(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2d_error */
extern void T28f313(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.error_handler */
extern T0* T946f5(T0* C);
/* ET_SIGNATURE_CHECKER.set_fatal_error */
extern void T946f12(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1254f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1254f8(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1253f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1253f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1253f1(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1254c7(T0* a1);
/* ET_PARENT_FEATURE.is_deferred */
extern T1 T1227f15(T0* C);
/* ET_SIGNATURE_CHECKER.check_joined_signature_validity */
extern void T946f10(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdjr0b_error */
extern void T52f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_VALIDITY_ERROR.make_vdjr0b */
extern T0* T884c734(T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T52f96(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr0b_error */
extern void T28f312(T0* C, T0* a1, T0* a2, T0* a3, T6 a4);
/* ET_ERROR_HANDLER.reportable_vdjr_error */
extern T1 T28f96(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr0a_error */
extern void T52f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0a */
extern T0* T884c733(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0a_error */
extern void T28f311(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdjr0c_error */
extern void T52f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr0c */
extern T0* T884c732(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr0c_error */
extern void T28f310(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_redeclared_signature_validity */
extern void T946f9(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd6b_error */
extern void T52f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6b */
extern T0* T884c731(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T52f70(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd6b_error */
extern void T28f309(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd6_error */
extern T1 T28f70(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd2a_error */
extern void T52f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2a */
extern T0* T884c730(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2a_error */
extern void T28f308(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd2b_error */
extern void T52f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd2b */
extern T0* T884c729(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd2b_error */
extern void T28f307(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SIGNATURE_CHECKER.check_signature_vtct_validity */
extern void T946f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].force_last */
extern void T937f45(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_put */
extern void T937f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_put */
extern void T937f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_put */
extern void T937f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_item */
extern T6 T937f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].hash_position */
extern T6 T937f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].resize */
extern void T937f49(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_resize */
extern void T937f61(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_resize */
extern void T937f60(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_resize */
extern void T937f59(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_FLATTENED_FEATURE].resize */
extern T0* T1170f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_FLATTENED_FEATURE].resized_area */
extern T0* T1172f3(T0* C, T6 a1);
/* SPECIAL [ET_FLATTENED_FEATURE].copy_data */
extern void T1172f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_FLATTENED_FEATURE].move_data */
extern void T1172f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].overlapping_move */
extern void T1172f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_FLATTENED_FEATURE].non_overlapping_move */
extern void T1172f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].key_storage_item */
extern T0* T937f30(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].clashes_item */
extern T6 T937f31(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].slots_resize */
extern void T937f58(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].new_capacity */
extern T6 T937f24(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_put */
extern void T937f48(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search_position */
extern void T937f47(T0* C, T0* a1);
/* ET_ALIAS_NAME_TESTER.test */
extern T1 T938f1(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1f_error */
extern void T52f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1f */
extern T0* T884c660(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T52f50(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav1f_error */
extern void T28f239(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav1_error */
extern T1 T28f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1c_error */
extern void T52f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1c */
extern T0* T884c659(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1c_error */
extern void T28f238(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2b_error */
extern void T52f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2b */
extern T0* T884c658(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T52f49(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vfav2b_error */
extern void T28f237(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vfav2_error */
extern T1 T28f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vfav1g_error */
extern void T52f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1g */
extern T0* T884c657(T0* a1, T0* a2, T0* a3);
/* ET_PARENT_FEATURE.alias_name */
extern T0* T1227f14(T0* C);
/* ET_ERROR_HANDLER.report_vfav1g_error */
extern void T28f236(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1d_error */
extern void T52f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1d */
extern T0* T884c656(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1d_error */
extern void T28f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2c_error */
extern void T52f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2c */
extern T0* T884c655(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2c_error */
extern void T28f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1h_error */
extern void T52f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1h */
extern T0* T884c654(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1h_error */
extern void T28f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav1e_error */
extern void T52f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav1e */
extern T0* T884c653(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav1e_error */
extern void T28f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vfav2d_error */
extern void T52f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vfav2d */
extern T0* T884c652(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vfav2d_error */
extern void T28f231(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found_item */
extern T0* T937f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].item_storage_item */
extern T0* T937f23(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].found */
extern T1 T937f21(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_ALIAS_NAME].search */
extern void T937f44(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].after */
extern T1 T934f24(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_after */
extern T1 T934f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].start */
extern void T934f56(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_start */
extern void T934f64(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].is_empty */
extern T1 T934f41(T0* C);
/* ET_FEATURE_FLATTENER.check_anchored_signatures */
extern void T274f36(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.check_signatures */
extern void T945f7(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1188f13(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].wipe_out */
extern void T1293f36(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_wipe_out */
extern void T1293f45(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_wipe_out */
extern void T1293f44(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_wipe_out */
extern void T1293f43(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_wipe_out */
extern void T1293f42(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1293f40(T0* C);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1383f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [INTEGER, ET_LIKE_IDENTIFIER].set_position */
extern void T1383f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].wipe_out */
extern void T1252f16(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].clear_items */
extern void T1252f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].move_all_cursors_after */
extern void T1252f18(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_next_cursor */
extern void T1368f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].set_position */
extern void T1368f8(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].reset */
extern void T1188f15(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtat2a_error */
extern void T52f306(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat2a */
extern T0* T884c728(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].forth */
extern void T1368f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_forth */
extern void T1252f22(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].add_traversing_cursor */
extern void T1252f23(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].remove_traversing_cursor */
extern void T1252f24(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].go_after */
extern void T1368f11(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_go_after */
extern void T1252f21(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].off */
extern T1 T1368f6(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_off */
extern T1 T1252f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_before */
extern T1 T1252f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_after */
extern T1 T1252f10(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].item */
extern T0* T1368f3(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_item */
extern T0* T1252f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].item */
extern T0* T1252f3(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].after */
extern T1 T1368f2(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_LIKE_IDENTIFIER].start */
extern void T1368f10(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].cursor_start */
extern void T1252f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].is_empty */
extern T1 T1252f2(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vtat_error */
extern T1 T52f94(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtat2a_error */
extern void T28f306(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtat_error */
extern T1 T28f94(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.error_handler */
extern T0* T945f4(T0* C);
/* ET_ANCHORED_TYPE_CHECKER.set_fatal_error */
extern void T945f9(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].has_cycle */
extern T1 T1188f1(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].sort */
extern void T1188f12(T0* C);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].put_last */
extern void T1252f15(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7b_error */
extern void T52f230(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7b */
extern T0* T884c651(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T52f48(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd7b_error */
extern void T28f230(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd6_error */
extern T1 T28f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd7a_error */
extern void T52f229(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd7a */
extern T0* T884c650(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd7a_error */
extern void T28f229(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1b_error */
extern void T52f228(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1b */
extern T0* T884c649(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1b_error */
extern void T28f228(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav1a_error */
extern void T52f227(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav1a */
extern T0* T884c648(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav1a_error */
extern void T28f227(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vfav2a_error */
extern void T52f226(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vfav2a */
extern T0* T884c647(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vfav2a_error */
extern void T28f226(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd6a_error */
extern void T52f225(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd6a */
extern T0* T884c646(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vffd6a_error */
extern void T28f225(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vffd5a_error */
extern void T52f224(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd5a */
extern T0* T884c645(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T52f47(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd5a_error */
extern void T28f224(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd5_error */
extern T1 T28f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vffd4a_error */
extern void T52f223(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vffd4a */
extern T0* T884c644(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T52f46(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vffd4a_error */
extern void T28f223(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vffd4_error */
extern T1 T28f46(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_identifier_signature */
extern void T274f35(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrfa0a_error */
extern void T52f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrfa0a */
extern T0* T884c667(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T52f54(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrfa0a_error */
extern void T28f245(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrfa_error */
extern T1 T28f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item */
extern T0* T934f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].has */
extern T1 T934f25(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0a_error */
extern void T52f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0a */
extern T0* T884c666(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vreg_error */
extern T1 T52f43(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vreg0a_error */
extern void T28f244(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vreg_error */
extern T1 T28f43(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_type */
extern void T944f7(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort */
extern void T1229f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_PROCEDURE].subsort_with_comparator */
extern void T1229f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].swap */
extern void T238f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].replace */
extern void T238f41(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_PROCEDURE_COMPARATOR.less_than */
extern T1 T1332f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.procedure_sorter */
extern unsigned char ge885os17982;
extern T0* ge885ov17982;
extern T0* T274f24(T0* C);
/* DS_QUICK_SORTER [ET_PROCEDURE].make */
extern T0* T1229c2(T0* a1);
/* ET_SEEDED_PROCEDURE_COMPARATOR.make */
extern T0* T1332c2(void);
/* DS_QUICK_SORTER [ET_QUERY].subsort */
extern void T1228f3(T0* C, T0* a1, T6 a2, T6 a3);
/* DS_QUICK_SORTER [ET_QUERY].subsort_with_comparator */
extern void T1228f4(T0* C, T0* a1, T0* a2, T6 a3, T6 a4);
/* DS_ARRAYED_LIST [ET_QUERY].swap */
extern void T240f39(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].replace */
extern void T240f41(T0* C, T0* a1, T6 a2);
/* ET_SEEDED_QUERY_COMPARATOR.less_than */
extern T1 T1329f1(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_FLATTENER.query_sorter */
extern unsigned char ge885os17981;
extern T0* ge885ov17981;
extern T0* T274f23(T0* C);
/* DS_QUICK_SORTER [ET_QUERY].make */
extern T0* T1228c2(T0* a1);
/* ET_SEEDED_QUERY_COMPARATOR.make */
extern T0* T1329c2(void);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].back */
extern void T934f55(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_back */
extern void T934f63(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_feature */
extern void T274f34(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.flatten_inherited_feature */
extern void T274f43(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2b_error */
extern void T52f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2b */
extern T0* T884c685(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T52f65(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdjr2b_error */
extern void T28f263(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdjr2_error */
extern T1 T28f65(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn2b_error */
extern void T52f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2b */
extern T0* T884c684(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T52f64(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn2b_error */
extern void T28f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn2_error */
extern T1 T28f64(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdjr2a_error */
extern void T52f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdjr2a */
extern T0* T884c683(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdjr2a_error */
extern void T28f261(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn2a_error */
extern void T52f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn2a */
extern T0* T884c682(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn2a_error */
extern void T28f260(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_INHERITED_FEATURE.set_flattened_parent */
extern void T1230f36(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_flattened_feature */
extern void T1230f35(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.process_replicated_seeds */
extern void T274f44(T0* C, T0* a1, T6 a2);
/* ET_INHERITED_FEATURE.set_other_seeds */
extern void T1230f34(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.set_other_seeds */
extern void T1189f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_first_seed */
extern void T1230f33(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_first_seed */
extern void T1189f31(T0* C, T6 a1);
/* ET_FEATURE_IDS.item */
extern T6 T1225f6(T0* C, T6 a1);
/* ET_FEATURE_IDS.replace */
extern void T1225f10(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.first */
extern T6 T1225f8(T0* C);
/* ET_FEATURE_IDS.cloned_object */
extern T0* T1225f2(T0* C);
/* ET_FEATURE_IDS.twin */
extern T0* T1225f3(T0* C);
/* ET_FEATURE_IDS.copy */
extern void T1225f12(T0* C, T0* a1);
/* KL_ARRAY_ROUTINES [INTEGER].cloned_array */
extern T0* T915f1(T0* C, T0* a1);
/* ARRAY [INTEGER].twin */
extern T0* T295f9(T0* C);
/* ARRAY [INTEGER].copy */
extern void T295f17(T0* C, T0* a1);
/* ARRAY [INTEGER].set_area */
extern void T295f19(T0* C, T0* a1);
/* ET_FEATURE_IDS.integer_array_ */
extern T0* T1225f5(T0* C);
/* ET_INHERITED_FEATURE.is_other_seeds_shared */
extern T1 T1230f21(T0* C);
/* ET_REDECLARED_FEATURE.is_other_seeds_shared */
extern T1 T1189f20(T0* C);
/* ET_FEATURE_IDS.make */
extern T0* T1225c9(T6 a1);
/* ET_FEATURE_IDS.put */
extern void T1225f13(T0* C, T6 a1);
/* KL_ARRAY_ROUTINES [INTEGER].resize */
extern void T915f4(T0* C, T0* a1, T6 a2, T6 a3);
/* ARRAY [INTEGER].conservative_resize */
extern void T295f16(T0* C, T6 a1, T6 a2);
/* ET_FEATURE_IDS.remove */
extern void T1225f11(T0* C, T6 a1);
/* ET_FEATURE_IDS.has */
extern T1 T1225f7(T0* C, T6 a1);
/* ET_PARENT_FEATURE.extended_name */
extern T0* T1227f20(T0* C);
/* ET_FEATURE_LIST.put_first */
extern void T1226f6(T0* C, T0* a1);
/* ET_FEATURE_LIST.make_with_capacity */
extern T0* T1226c5(T6 a1);
/* ET_FEATURE_LIST.fixed_array */
extern unsigned char ge698os6093;
extern T0* ge698ov6093;
extern T0* T1226f4(T0* C);
/* ET_CLIENTS.same_class_names */
extern T1 T414f15(T0* C, T0* a1);
/* ET_CLASS_NAME_LIST.same_class_names */
extern T1 T413f12(T0* C, T0* a1);
/* ET_PARENT_FEATURE.clients */
extern T0* T1227f19(T0* C);
/* ET_PARENT_FEATURE.has_rename */
extern T1 T1227f12(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmfn0c_error */
extern void T52f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0c */
extern T0* T884c681(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T52f63(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmfn0c_error */
extern void T28f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmfn_error */
extern T1 T28f63(T0* C, T0* a1);
/* ET_PARENT_FEATURE.same_version */
extern T1 T1227f18(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_no_redeclaration_validity */
extern void T274f47(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs4a_error */
extern void T52f274(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdrs4a */
extern T0* T884c696(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T52f68(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs4a_error */
extern void T28f274(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdrs4_error */
extern T1 T28f68(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_redefine */
extern T1 T1227f11(T0* C);
/* ET_FEATURE_FLATTENER.check_redefine_clause_validity */
extern void T274f50(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2b_error */
extern void T52f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2b */
extern T0* T884c706(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T52f75(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs2b_error */
extern void T28f284(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs2_error */
extern T1 T28f75(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs2a_error */
extern void T52f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs2a */
extern T0* T884c705(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs2a_error */
extern void T28f283(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_FLATTENER.check_undefine_clause_validity */
extern void T274f49(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2b_error */
extern void T52f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2b */
extern T0* T884c704(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T52f74(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus2b_error */
extern void T28f282(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus2_error */
extern T1 T28f74(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus2a_error */
extern void T52f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus2a */
extern T0* T884c703(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdus2a_error */
extern void T28f281(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdus3a_error */
extern void T52f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus3a */
extern T0* T884c702(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T52f73(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus3a_error */
extern void T28f280(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus3_error */
extern T1 T28f73(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_rename_clause_validity */
extern void T274f48(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4d_error */
extern void T52f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4d */
extern T0* T884c701(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T52f72(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc4d_error */
extern void T28f279(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc4_error */
extern T1 T28f72(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc4c_error */
extern void T52f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4c */
extern T0* T884c700(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4c_error */
extern void T28f278(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4b_error */
extern void T52f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4b */
extern T0* T884c699(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4b_error */
extern void T28f277(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc4a_error */
extern void T52f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc4a */
extern T0* T884c698(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vhrc4a_error */
extern void T28f276(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vhrc5a_error */
extern void T52f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc5a */
extern T0* T884c697(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T52f71(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc5a_error */
extern void T28f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc5_error */
extern T1 T28f71(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.is_replicated */
extern T1 T1230f20(T0* C);
/* ET_FEATURE_FLATTENER.inherited_clients */
extern T0* T274f25(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].wipe_out */
extern void T940f16(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].clear_items */
extern void T940f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_all_cursors_after */
extern void T940f21(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_next_cursor */
extern void T1178f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_CLASS_NAME_LIST].set_position */
extern void T1178f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].wipe_out */
extern void T941f52(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].slots_wipe_out */
extern void T941f67(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_wipe_out */
extern void T941f66(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_wipe_out */
extern void T941f65(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_wipe_out */
extern void T941f64(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].move_all_cursors_after */
extern void T941f63(T0* C);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_next_cursor */
extern void T1179f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_CLASS_NAME].set_position */
extern void T1179f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].back */
extern void T941f51(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_back */
extern void T941f62(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].add_traversing_cursor */
extern void T941f73(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].remove_traversing_cursor */
extern void T941f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_item */
extern T6 T941f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].before */
extern T1 T941f21(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_before */
extern T1 T941f24(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].finish */
extern void T941f50(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_finish */
extern void T941f61(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_off */
extern T1 T941f38(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].is_empty */
extern T1 T941f37(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].forth */
extern void T941f49(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_forth */
extern void T941f60(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].go_after */
extern void T941f48(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_go_after */
extern void T941f59(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_for_iteration */
extern T0* T941f20(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_item */
extern T0* T941f23(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_item */
extern T0* T941f26(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].after */
extern T1 T941f19(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_after */
extern T1 T941f22(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].start */
extern void T941f47(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].cursor_start */
extern void T941f58(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].is_empty */
extern T1 T940f9(T0* C);
/* DS_HASH_SET [ET_CLASS_NAME].force */
extern void T941f46(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_put */
extern void T941f57(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_put */
extern void T941f56(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].slots_item */
extern T6 T941f32(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].hash_position */
extern T6 T941f28(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].resize */
extern void T941f55(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].clashes_resize */
extern void T941f71(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_resize */
extern void T941f70(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_resize */
extern void T941f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_storage_item */
extern T0* T941f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].slots_resize */
extern void T941f68(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].new_capacity */
extern T6 T941f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_CLASS_NAME].item_storage_put */
extern void T941f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_CLASS_NAME].search_position */
extern void T941f53(T0* C, T0* a1);
/* DS_HASH_SET [ET_CLASS_NAME].key_equality_tester */
extern T0* T941f34(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove */
extern void T940f15(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_left */
extern void T940f20(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_cursors_left */
extern void T940f19(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].remove_last */
extern void T940f18(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].move_last_cursors_after */
extern void T940f23(T0* C);
/* ET_CLIENTS.is_none */
extern T1 T414f13(T0* C);
/* ET_IDENTIFIER.is_none */
extern T1 T119f91(T0* C);
/* ET_IDENTIFIER.tokens */
extern T0* T119f93(T0* C);
/* ET_CLASS_NAME_LIST.is_none */
extern T1 T413f11(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].item */
extern T0* T940f8(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].first */
extern T0* T940f6(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].force_last */
extern void T940f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].resize */
extern void T940f17(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_CLASS_NAME_LIST].resize */
extern T0* T1176f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_CLASS_NAME_LIST].resized_area */
extern T0* T1177f3(T0* C, T6 a1);
/* SPECIAL [ET_CLASS_NAME_LIST].copy_data */
extern void T1177f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_CLASS_NAME_LIST].move_data */
extern void T1177f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].overlapping_move */
extern void T1177f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_CLASS_NAME_LIST].non_overlapping_move */
extern void T1177f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].new_capacity */
extern T6 T940f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS_NAME_LIST].extendible */
extern T1 T940f10(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.clients */
extern T0* T580f9(T0* C, T0* a1);
/* ET_ALL_EXPORT.clients */
extern T0* T578f6(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.has_feature_name */
extern T1 T580f8(T0* C, T0* a1);
/* ET_ALL_EXPORT.has_feature_name */
extern T1 T578f5(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.is_all */
extern T1 T580f7(T0* C);
/* ET_EXPORT_LIST.item */
extern T0* T290f6(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.flatten_redeclared_feature */
extern void T274f42(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_precursor_validity */
extern void T274f46(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_feature_validity */
extern void T949f8(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vdrd3b_error */
extern void T52f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3b */
extern T0* T884c680(T0* a1, T0* a2, T0* a3);
/* ET_POSTCONDITIONS.position */
extern T0* T627f10(T0* C);
/* ET_POSTCONDITIONS.first */
extern T0* T627f12(T0* C);
/* ET_POSTCONDITIONS.is_empty */
extern T1 T627f11(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T52f62(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd3b_error */
extern void T28f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd3_error */
extern T1 T28f62(T0* C, T0* a1);
/* ET_POSTCONDITIONS.is_ensure_then */
extern T1 T627f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vdrd3a_error */
extern void T52f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd3a */
extern T0* T884c679(T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.position */
extern T0* T621f10(T0* C);
/* ET_PRECONDITIONS.first */
extern T0* T621f12(T0* C);
/* ET_PRECONDITIONS.is_empty */
extern T1 T621f11(T0* C);
/* ET_ERROR_HANDLER.report_vdrd3a_error */
extern void T28f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECONDITIONS.is_require_else */
extern T1 T621f9(T0* C);
/* ET_FEATURE_FLATTENER.check_redeclaration_validity */
extern void T274f45(T0* C, T0* a1, T0* a2, T1 a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd6a_error */
extern void T52f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd6a */
extern T0* T884c695(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd6a_error */
extern void T28f273(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4b_error */
extern void T52f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4b */
extern T0* T884c694(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T52f69(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd4b_error */
extern void T28f272(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd4_error */
extern T1 T28f69(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd4c_error */
extern void T52f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4c */
extern T0* T884c693(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4c_error */
extern void T28f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vmfn0b_error */
extern void T52f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0b */
extern T0* T884c692(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0b_error */
extern void T28f270(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd4a_error */
extern void T52f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd4a */
extern T0* T884c691(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd4a_error */
extern void T28f269(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrs4b_error */
extern void T52f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs4b */
extern T0* T884c690(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrs4b_error */
extern void T28f268(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd5a_error */
extern void T52f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd5a */
extern T0* T884c689(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T52f67(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd5a_error */
extern void T28f267(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd5_error */
extern T1 T28f67(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7c_error */
extern void T52f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7c */
extern T0* T884c688(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T52f66(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrd7c_error */
extern void T28f266(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrd7_error */
extern T1 T28f66(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrd7a_error */
extern void T52f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7a */
extern T0* T884c687(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7a_error */
extern void T28f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdrd7b_error */
extern void T52f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrd7b */
extern T0* T884c686(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdrd7b_error */
extern void T28f264(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_REDECLARED_FEATURE.is_replicated */
extern T1 T1189f19(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vmss3a_error */
extern void T52f243(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmss3a */
extern T0* T884c664(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T52f53(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss3a_error */
extern void T28f243(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmss3_error */
extern T1 T28f53(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.selected_feature */
extern T0* T1230f19(T0* C);
/* ET_PARENT_FEATURE.has_select */
extern T1 T1227f17(T0* C);
/* ET_REDECLARED_FEATURE.selected_feature */
extern T0* T1189f18(T0* C);
/* ET_INHERITED_FEATURE.has_selected_feature */
extern T1 T1230f18(T0* C);
/* ET_REDECLARED_FEATURE.has_selected_feature */
extern T1 T1189f17(T0* C);
/* ET_FEATURE_FLATTENER.flatten_immediate_feature */
extern void T274f41(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_for_iteration */
extern T0* T934f23(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_item */
extern T0* T934f30(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].before */
extern T1 T934f22(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_before */
extern T1 T934f29(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].finish */
extern void T934f54(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].cursor_finish */
extern void T934f62(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.resolve_feature_adaptations */
extern void T274f33(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T942f22(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replication */
extern void T942f25(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].wipe_out */
extern void T1183f47(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_wipe_out */
extern void T1183f59(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_wipe_out */
extern void T1183f58(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_wipe_out */
extern void T1183f57(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_wipe_out */
extern void T1183f56(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].move_all_cursors_after */
extern void T1183f54(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].set_next_cursor */
extern void T1277f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_REPLICABLE_FEATURE, INTEGER].set_position */
extern void T1277f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].forth */
extern void T1183f46(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_forth */
extern void T1183f53(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].add_traversing_cursor */
extern void T1183f68(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].remove_traversing_cursor */
extern void T1183f67(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_item */
extern T6 T1183f24(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.process_replicated_feature */
extern void T942f33(T0* C, T0* a1, T6 a2);
/* ET_NULL_ERROR_HANDLER.report_vmrc2b_error */
extern void T52f305(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2b */
extern T0* T884c727(T0* a1, T0* a2);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].after */
extern T1 T1363f2(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_after */
extern T1 T1249f9(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].forth */
extern void T1363f9(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_forth */
extern void T1249f18(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_position */
extern void T1363f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].add_traversing_cursor */
extern void T1249f19(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].set_next_cursor */
extern void T1363f11(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].remove_traversing_cursor */
extern void T1249f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].item */
extern T0* T1363f1(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_item */
extern T0* T1249f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].item */
extern T0* T1249f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].start */
extern void T1363f8(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_start */
extern void T1249f17(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1249f12(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].off */
extern T1 T1363f5(T0* C);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_off */
extern T1 T1249f13(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].cursor_before */
extern T1 T1249f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].new_cursor */
extern T0* T1249f5(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_PARENT_FEATURE].make */
extern T0* T1363c7(T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].first */
extern T0* T1249f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T52f93(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmrc2b_error */
extern void T28f305(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vmrc2_error */
extern T1 T28f93(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.add_replicated_feature */
extern void T1230f39(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].force_last */
extern void T1253f9(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].put_right */
extern void T1416f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_PARENT_FEATURE].make */
extern T0* T1416c3(T0* a1);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].is_empty */
extern T1 T1253f3(T0* C);
/* DS_LINKED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1253c8(void);
/* ET_REDECLARED_FEATURE.add_replicated_feature */
extern void T1189f35(T0* C, T0* a1);
/* ET_PARENT_FEATURE.has_seed */
extern T1 T1227f21(T0* C, T6 a1);
/* ET_INHERITED_FEATURE.set_selected */
extern void T1230f38(T0* C);
/* ET_REDECLARED_FEATURE.set_selected */
extern void T1189f34(T0* C);
/* ET_INHERITED_FEATURE.set_replicated */
extern void T1230f37(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.set_replicated */
extern void T1189f33(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vmrc2a_error */
extern void T52f304(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vmrc2a */
extern T0* T884c726(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vmrc2a_error */
extern void T28f304(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T942f17(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T942f26(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].forth */
extern void T1248f16(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_forth */
extern void T1248f18(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].add_traversing_cursor */
extern void T1248f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set_next_cursor */
extern void T1359f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].remove_traversing_cursor */
extern void T1248f20(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].set */
extern void T1359f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].put_last */
extern void T1249f16(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.seeded_feature */
extern T0* T1230f28(T0* C, T6 a1);
/* ET_REDECLARED_FEATURE.seeded_feature */
extern T0* T1189f26(T0* C, T6 a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].item_for_iteration */
extern T0* T1248f8(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_item */
extern T0* T1248f11(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].after */
extern T1 T1248f7(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_after */
extern T1 T1248f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].start */
extern void T1248f15(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_start */
extern void T1248f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].cursor_off */
extern T1 T1248f12(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PARENT_FEATURE].make */
extern T0* T1249c15(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].make */
extern T0* T1361f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_PARENT_FEATURE].make_area */
extern T0* T1403c2(T6 a1);
/* SPECIAL [ET_PARENT_FEATURE].make */
extern T0* T1362c2(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_PARENT_FEATURE].default_create */
extern T0* T1361c2(void);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_for_iteration */
extern T6 T1183f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_key */
extern T6 T1183f9(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_item */
extern T6 T1183f14(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_for_iteration */
extern T0* T1183f2(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_item */
extern T0* T1183f8(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_item */
extern T0* T1183f12(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].after */
extern T1 T1183f1(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_after */
extern T1 T1183f7(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].start */
extern void T1183f45(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_start */
extern void T1183f52(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].cursor_off */
extern T1 T1183f31(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].is_empty */
extern T1 T1183f30(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.record_replicable_feature */
extern void T942f32(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].force_new */
extern void T1183f50(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_put */
extern void T1183f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_put */
extern void T1183f61(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_put */
extern void T1183f64(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_put */
extern void T1183f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_item */
extern T6 T1183f26(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].hash_position */
extern T6 T1183f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].resize */
extern void T1183f62(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].clashes_resize */
extern void T1183f72(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].key_storage_resize */
extern void T1183f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].item_storage_resize */
extern void T1183f70(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_REPLICABLE_FEATURE].resize */
extern T0* T1282f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_REPLICABLE_FEATURE].resized_area */
extern T0* T1278f3(T0* C, T6 a1);
/* SPECIAL [ET_REPLICABLE_FEATURE].copy_data */
extern void T1278f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_REPLICABLE_FEATURE].move_data */
extern void T1278f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].overlapping_move */
extern void T1278f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_REPLICABLE_FEATURE].non_overlapping_move */
extern void T1278f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].slots_resize */
extern void T1183f69(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].new_capacity */
extern T6 T1183f22(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].replace_found_item */
extern void T1183f49(T0* C, T0* a1);
/* ET_REPLICATED_FEATURE.make */
extern T0* T1247c6(T0* a1, T0* a2);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].make */
extern T0* T1248c13(void);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].new_cursor */
extern T0* T1248f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_ADAPTED_FEATURE].make */
extern T0* T1359c6(T0* a1);
/* ET_REPLICATED_FEATURE.put_feature */
extern void T1247f7(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].force_last */
extern void T1248f14(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].put_right */
extern void T1360f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_ADAPTED_FEATURE].make */
extern T0* T1360c3(T0* a1);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].is_empty */
extern T1 T1248f3(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].found_item */
extern T0* T1183f5(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].found */
extern T1 T1183f4(T0* C);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].search */
extern void T1183f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_REPLICABLE_FEATURE, INTEGER].search_position */
extern void T1183f60(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T942f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vmss1a_error */
extern void T52f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmss1a */
extern T0* T884c719(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T52f86(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss1a_error */
extern void T28f297(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vmss1_error */
extern T1 T28f86(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs1a_error */
extern void T52f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdrs1a */
extern T0* T884c718(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T52f85(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs1a_error */
extern void T28f296(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdrs1_error */
extern T1 T28f85(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].wipe_out */
extern void T1182f50(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_wipe_out */
extern void T1182f63(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1182f62(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1182f61(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1182f60(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1182f58(T0* C);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_next_cursor */
extern void T1274f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [BOOLEAN, ET_FEATURE_NAME].set_position */
extern void T1274f5(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].forth */
extern void T1182f49(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_forth */
extern void T1182f57(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1182f73(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1182f72(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_item */
extern T6 T1182f27(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdus1a_error */
extern void T52f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdus1a */
extern T0* T884c717(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T52f84(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus1a_error */
extern void T28f295(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdus1_error */
extern T1 T28f84(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_for_iteration */
extern T0* T1182f7(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_key */
extern T0* T1182f16(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_item */
extern T0* T1182f11(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_for_iteration */
extern T1 T1182f6(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_item */
extern T1 T1182f15(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_item */
extern T1 T1182f12(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].after */
extern T1 T1182f5(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_after */
extern T1 T1182f14(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].start */
extern void T1182f48(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_start */
extern void T1182f56(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].cursor_off */
extern T1 T1182f36(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].is_empty */
extern T1 T1182f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].wipe_out */
extern void T1181f44(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_wipe_out */
extern void T1181f60(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_wipe_out */
extern void T1181f59(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1181f58(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1181f57(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors_after */
extern void T1181f56(T0* C);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_next_cursor */
extern void T1273f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_FEATURE_NAME].set_position */
extern void T1273f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].forth */
extern void T1181f43(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_forth */
extern void T1181f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].add_traversing_cursor */
extern void T1181f72(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1181f71(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_item */
extern T6 T1181f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel2a_error */
extern void T52f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vlel2a */
extern T0* T884c716(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T52f83(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel2a_error */
extern void T28f294(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vlel2_error */
extern T1 T28f83(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_for_iteration */
extern T0* T1181f4(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_item */
extern T0* T1181f12(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_item */
extern T0* T1181f13(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].after */
extern T1 T1181f3(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_after */
extern T1 T1181f11(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].start */
extern void T1181f42(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_start */
extern void T1181f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].cursor_off */
extern T1 T1181f36(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].wipe_out */
extern void T1180f47(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_wipe_out */
extern void T1180f60(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_wipe_out */
extern void T1180f59(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_wipe_out */
extern void T1180f58(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_wipe_out */
extern void T1180f57(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors_after */
extern void T1180f56(T0* C);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_next_cursor */
extern void T1267f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [ET_RENAME, ET_FEATURE_NAME].set_position */
extern void T1267f5(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].forth */
extern void T1180f46(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_forth */
extern void T1180f55(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].add_traversing_cursor */
extern void T1180f73(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_traversing_cursor */
extern void T1180f72(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_item */
extern T6 T1180f23(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc1a_error */
extern void T52f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vhrc1a */
extern T0* T884c715(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T52f82(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc1a_error */
extern void T28f293(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vhrc1_error */
extern T1 T28f82(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_for_iteration */
extern T0* T1180f5(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_item */
extern T0* T1180f13(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_item */
extern T0* T1180f10(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].after */
extern T1 T1180f4(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_after */
extern T1 T1180f12(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].start */
extern void T1180f45(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_start */
extern void T1180f54(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].cursor_off */
extern T1 T1180f32(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].put_last */
extern void T934f75(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_put */
extern void T934f86(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_put */
extern void T934f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_put */
extern void T934f80(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].compress */
extern void T934f85(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].move_all_cursors */
extern void T934f87(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_put */
extern void T934f84(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T942f20(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.set_next */
extern void T1230f31(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.make */
extern T0* T1230c29(T0* a1);
/* ET_INHERITED_FEATURE.reset */
extern void T1230f30(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.put_parent_feature */
extern void T1230f32(T0* C, T0* a1);
/* ET_INHERITED_FEATURE.has_seed */
extern T1 T1230f23(T0* C, T6 a1);
/* ET_PARENT_FEATURE.set_merged_feature */
extern void T1227f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.put_parent_feature */
extern void T1189f30(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.has_seed */
extern T1 T1189f21(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].replace_found_item */
extern void T934f76(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T942f19(T0* C, T0* a1, T0* a2);
/* ET_REDECLARED_FEATURE.set_next */
extern void T1189f29(T0* C, T0* a1);
/* ET_REDECLARED_FEATURE.reset */
extern void T1189f28(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_select_name */
extern void T1227f26(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_redefine_name */
extern void T1227f25(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].replace_found_item */
extern void T1182f47(T0* C, T1 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_put */
extern void T1182f55(T0* C, T1 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_item */
extern T1 T1182f4(T0* C);
/* ET_PARENT_FEATURE.set_undefine_name */
extern void T1227f24(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found_key */
extern T0* T1182f3(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].found */
extern T1 T1182f2(T0* C);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search */
extern void T1182f46(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].search_position */
extern void T1182f54(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].hash_position */
extern T6 T1182f29(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_item */
extern T6 T1182f30(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_found_item */
extern void T1181f41(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].remove_position */
extern void T1181f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_put */
extern void T1181f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_put */
extern void T1181f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_put */
extern void T1181f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_put */
extern void T1181f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_forth */
extern void T1181f69(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].move_all_cursors */
extern void T1181f74(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE_NAME].move_cursors_after */
extern void T1181f73(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].search_position */
extern void T1181f52(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1181f68(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_equality_tester */
extern T0* T1181f35(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_item */
extern T6 T1181f27(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].hash_position */
extern T6 T1181f26(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_item */
extern T0* T1181f25(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found */
extern T1 T1181f2(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].search */
extern void T1181f40(T0* C, T0* a1);
/* ET_PARENT_FEATURE.set_new_name */
extern void T1227f23(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_found_item */
extern void T1180f44(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].remove_position */
extern void T1180f52(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_put */
extern void T1180f68(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_put */
extern void T1180f67(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_put */
extern void T1180f63(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_put */
extern void T1180f62(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_forth */
extern void T1180f71(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_all_cursors */
extern void T1180f79(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].move_cursors_after */
extern void T1180f78(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search_position */
extern void T1180f51(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].internal_set_key_equality_tester */
extern void T1180f70(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_item */
extern T6 T1180f27(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].hash_position */
extern T6 T1180f26(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_item */
extern T0* T1180f25(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found_item */
extern T0* T1180f3(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].found */
extern T1 T1180f2(T0* C);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].search */
extern void T1180f43(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T942f18(T0* C, T0* a1, T0* a2);
/* ET_PARENT_FEATURE.set_next */
extern void T1227f28(T0* C, T0* a1);
/* ET_PARENT_FEATURE.reset */
extern void T1227f27(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].resize */
extern void T934f74(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].clashes_resize */
extern void T934f83(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].key_storage_resize */
extern void T934f82(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].item_storage_resize */
extern void T934f81(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].slots_resize */
extern void T934f78(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_select_table */
extern void T942f31(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmss2a_error */
extern void T52f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vmss2a */
extern T0* T884c725(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T52f92(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vmss2a_error */
extern void T28f303(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vmss2_error */
extern T1 T28f92(T0* C, T0* a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].put_new */
extern void T1182f52(T0* C, T1 a1, T0* a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_put */
extern void T1182f70(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_put */
extern void T1182f65(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_put */
extern void T1182f66(T0* C, T6 a1, T6 a2);
/* ET_KEYWORD_FEATURE_NAME_LIST.feature_name */
extern T0* T291f6(T0* C, T6 a1);
/* ET_KEYWORD_FEATURE_NAME_LIST.item */
extern T0* T291f7(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].resize */
extern void T1182f51(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].clashes_resize */
extern void T1182f69(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].key_storage_resize */
extern void T1182f68(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].item_storage_resize */
extern void T1182f67(T0* C, T6 a1);
/* DS_HASH_TABLE [BOOLEAN, ET_FEATURE_NAME].slots_resize */
extern void T1182f64(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_redefine_table */
extern void T942f30(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdrs3a_error */
extern void T52f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdrs3a */
extern T0* T884c724(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T52f91(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdrs3a_error */
extern void T28f302(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdrs3_error */
extern T1 T28f91(T0* C, T0* a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_undefine_table */
extern void T942f29(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdus4a_error */
extern void T52f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdus4a */
extern T0* T884c723(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T52f90(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdus4a_error */
extern void T28f301(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vdus4_error */
extern T1 T28f90(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].is_empty */
extern T1 T1181f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_export_table */
extern void T942f28(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vlel3a_error */
extern void T52f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel3a */
extern T0* T884c722(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T52f89(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel3a_error */
extern void T28f300(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel3_error */
extern T1 T28f89(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE_NAME].found_item */
extern T0* T1181f6(T0* C);
/* DS_HASH_SET [ET_FEATURE_NAME].put_new */
extern void T1181f46(T0* C, T0* a1);
/* ET_FEATURE_EXPORT.feature_name */
extern T0* T580f5(T0* C, T6 a1);
/* ET_FEATURE_EXPORT.item */
extern T0* T580f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].resize */
extern void T1181f45(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].clashes_resize */
extern void T1181f66(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].key_storage_resize */
extern void T1181f65(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].item_storage_resize */
extern void T1181f64(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE_NAME].slots_resize */
extern void T1181f61(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vlel1a_error */
extern void T52f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vlel1a */
extern T0* T884c721(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T52f88(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vlel1a_error */
extern void T28f299(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vlel1_error */
extern T1 T28f88(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].is_empty */
extern T1 T1180f1(T0* C);
/* ET_FEATURE_ADAPTATION_RESOLVER.fill_rename_table */
extern void T942f27(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vhrc2a_error */
extern void T52f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vhrc2a */
extern T0* T884c720(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T52f87(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhrc2a_error */
extern void T28f298(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vhrc2_error */
extern T1 T28f87(T0* C, T0* a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].put */
extern void T1180f49(T0* C, T0* a1, T0* a2);
/* ET_RENAME_LIST.rename_pair */
extern T0* T289f6(T0* C, T6 a1);
/* ET_RENAME_LIST.item */
extern T0* T289f7(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].resize */
extern void T1180f48(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].clashes_resize */
extern void T1180f66(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].key_storage_resize */
extern void T1180f65(T0* C, T6 a1);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].item_storage_resize */
extern void T1180f64(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_RENAME].resize */
extern T0* T1272f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_RENAME].resized_area */
extern T0* T1268f3(T0* C, T6 a1);
/* SPECIAL [ET_RENAME].copy_data */
extern void T1268f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_RENAME].move_data */
extern void T1268f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].overlapping_move */
extern void T1268f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_RENAME].non_overlapping_move */
extern void T1268f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [ET_RENAME, ET_FEATURE_NAME].slots_resize */
extern void T1180f61(T0* C, T6 a1);
/* ET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T942f23(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vmfn0a_error */
extern void T52f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vmfn0a */
extern T0* T884c714(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vmfn0a_error */
extern void T28f292(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.resolve_feature_adaptations */
extern void T943f17(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].wipe_out */
extern void T1187f37(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1187f46(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1187f45(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1187f44(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1187f43(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1187f41(T0* C);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_next_cursor */
extern void T1290f6(T0* C, T0* a1);
/* DS_HASH_TABLE_CURSOR [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].set_position */
extern void T1290f5(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].wipe_out */
extern void T1185f34(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_wipe_out */
extern void T1185f47(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_wipe_out */
extern void T1185f46(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_wipe_out */
extern void T1185f45(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_wipe_out */
extern void T1185f44(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].move_all_cursors_after */
extern void T1185f43(T0* C);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1284f6(T0* C, T0* a1);
/* DS_HASH_SET_CURSOR [ET_DOTNET_FEATURE].set_position */
extern void T1284f5(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_any_features */
extern void T943f20(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_inherited_feature */
extern T0* T943f14(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_parent_feature */
extern T0* T943f13(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_features */
extern void T943f19(T0* C, T0* a1, T0* a2);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.error_handler */
extern T0* T943f12(T0* C);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.set_fatal_error */
extern void T943f22(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].forth */
extern void T1251f15(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_forth */
extern void T1251f17(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].add_traversing_cursor */
extern void T1251f18(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set_next_cursor */
extern void T1364f8(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].remove_traversing_cursor */
extern void T1251f19(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].set */
extern void T1364f7(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].item_for_iteration */
extern T0* T1251f8(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_item */
extern T0* T1251f10(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].after */
extern T1 T1251f7(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_after */
extern T1 T1251f9(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].start */
extern void T1251f14(T0* C);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_start */
extern void T1251f16(T0* C, T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].cursor_off */
extern T1 T1251f11(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found_item */
extern T0* T1187f2(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1187f5(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].found */
extern T1 T1187f1(T0* C);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search */
extern void T1187f38(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].search_position */
extern void T1187f47(T0* C, T0* a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_item */
extern T6 T1187f27(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].hash_position */
extern T6 T1187f15(T0* C, T0* a1);
/* ET_DOTNET_SIGNATURE_TESTER.test */
extern T1 T1184f2(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1187f26(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_item */
extern T6 T1187f17(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_inherited_feature */
extern void T943f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.new_redeclared_feature */
extern T0* T943f15(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found_item */
extern T0* T1185f3(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_item */
extern T0* T1185f6(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].found */
extern T1 T1185f2(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search */
extern void T1185f36(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].search_position */
extern void T1185f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_item */
extern T6 T1185f17(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].hash_position */
extern T6 T1185f20(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_item */
extern T0* T1185f19(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_equality_tester */
extern T0* T1185f30(T0* C);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_item */
extern T6 T1185f21(T0* C, T6 a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_features */
extern void T943f18(T0* C, T0* a1);
/* ET_DOTNET_FEATURE_ADAPTATION_RESOLVER.add_current_feature */
extern void T943f21(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].force_last */
extern void T1185f37(T0* C, T0* a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_put */
extern void T1185f49(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_put */
extern void T1185f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DOTNET_FEATURE].new_capacity */
extern T6 T1185f22(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_put */
extern void T1185f55(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].force_last */
extern void T1187f39(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_put */
extern void T1187f52(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_put */
extern void T1187f51(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_put */
extern void T1187f50(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].resize */
extern void T1187f49(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].clashes_resize */
extern void T1187f57(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].key_storage_resize */
extern void T1187f56(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DOTNET_FEATURE].resize */
extern T0* T1285f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DOTNET_FEATURE].resized_area */
extern T0* T1283f3(T0* C, T6 a1);
/* SPECIAL [ET_DOTNET_FEATURE].copy_data */
extern void T1283f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DOTNET_FEATURE].move_data */
extern void T1283f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].overlapping_move */
extern void T1283f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DOTNET_FEATURE].non_overlapping_move */
extern void T1283f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_resize */
extern void T1187f55(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resize */
extern T0* T1291f1(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].resized_area */
extern T0* T1286f3(T0* C, T6 a1);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].copy_data */
extern void T1286f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].move_data */
extern void T1286f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].overlapping_move */
extern void T1286f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_LINKED_LIST [ET_DOTNET_FEATURE]].non_overlapping_move */
extern void T1286f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].slots_resize */
extern void T1187f54(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].new_capacity */
extern T6 T1187f14(T0* C, T6 a1);
/* DS_HASH_TABLE [DS_LINKED_LIST [ET_DOTNET_FEATURE], ET_DOTNET_FEATURE].item_storage_put */
extern void T1187f48(T0* C, T0* a1, T6 a2);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].make */
extern T0* T1251c12(void);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].new_cursor */
extern T0* T1251f2(T0* C);
/* DS_LINKED_LIST_CURSOR [ET_DOTNET_FEATURE].make */
extern T0* T1364c6(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].force_last */
extern void T1251f13(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].put_right */
extern void T1365f4(T0* C, T0* a1);
/* DS_LINKABLE [ET_DOTNET_FEATURE].make */
extern T0* T1365c3(T0* a1);
/* DS_LINKED_LIST [ET_DOTNET_FEATURE].is_empty */
extern T1 T1251f3(T0* C);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].force_last */
extern void T934f77(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [ET_FLATTENED_FEATURE, ET_FEATURE_NAME].new_capacity */
extern T6 T934f44(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].resize */
extern void T1185f35(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].clashes_resize */
extern void T1185f53(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].key_storage_resize */
extern void T1185f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].item_storage_resize */
extern void T1185f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_DOTNET_FEATURE].slots_resize */
extern void T1185f48(T0* C, T6 a1);
/* ET_FEATURE_FLATTENER.check_parents_validity */
extern void T274f31(T0* C);
/* ET_PARENT_CHECKER2.check_parents_validity */
extern void T947f7(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.check_formal_parameters_validity */
extern void T274f30(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER2.check_formal_parameters_validity */
extern void T948f7(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_constraint_validity */
extern void T948f8(T0* C, T0* a1);
/* ET_FEATURE_FLATTENER.error_handler */
extern T0* T274f22(T0* C);
/* ET_CLASS.set_features_flattened */
extern void T55f208(T0* C);
/* ET_FEATURE_FLATTENER.none_class */
extern T0* T274f21(T0* C);
/* ET_AST_NULL_PROCESSOR.process_class */
extern void T273f3(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_class */
extern void T169f18(T0* C, T0* a1);
/* ET_EIFFEL_PARSER.process_class */
extern void T158f1782(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_CLASSIC_CONSUMER.consume_class */
extern void T897f5(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.preparse */
extern void T51f183(T0* C);
/* ET_LACE_UNIVERSE.preparse_multiple */
extern void T51f184(T0* C);
/* ET_EIFFEL_PREPARSER.preparse_clusters_multiple */
extern void T283f161(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_cluster_multiple */
extern void T283f162(T0* C, T0* a1);
/* ET_EIFFEL_PREPARSER.preparse_file_multiple */
extern void T283f163(T0* C, T0* a1, T0* a2, T6 a3, T0* a4);
/* ET_XACE_UNIVERSE.preparse */
extern void T48f191(T0* C);
/* ET_XACE_UNIVERSE.preparse_multiple */
extern void T48f192(T0* C);
/* ET_FEATURE_CHECKER.process_external_function */
extern void T951f46(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_validity */
extern void T951f58(T0* C, T0* a1);
/* ET_LACE_UNIVERSE.report_result_supplier */
extern void T51f187(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_result_supplier */
extern void T952f9(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_result_supplier */
extern void T48f195(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_result_declaration */
extern void T951f66(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_signature_type_validity */
extern void T951f63(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_creation_type_validity */
extern void T169f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vtcg4a_error */
extern void T52f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4a */
extern T0* T884c739(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T52f98(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg4a_error */
extern void T28f317(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vtcg4_error */
extern T1 T28f98(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_6_0_6_7358 */
extern unsigned char ge260os1595;
extern T0* ge260ov1595;
extern T0* T169f10(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtcg4b_error */
extern void T52f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vtcg4b */
extern T0* T884c738(T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vtcg4b_error */
extern void T28f316(T0* C, T0* a1, T0* a2, T0* a3, T6 a4, T0* a5, T0* a6, T0* a7);
/* ET_CONSTRAINT_CREATOR.has_feature */
extern T1 T537f10(T0* C, T0* a1);
/* ET_CONSTRAINT_CREATOR.is_empty */
extern T1 T537f9(T0* C);
/* ET_FORMAL_PARAMETER_LIST.is_empty */
extern T1 T396f11(T0* C);
/* ET_TYPE_CHECKER.check_type_validity */
extern void T169f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_formal_arguments_validity */
extern void T951f65(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_argument_supplier */
extern void T51f188(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_argument_supplier */
extern void T952f10(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_argument_supplier */
extern void T48f196(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_formal_argument_declaration */
extern void T951f70(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_function */
extern void T949f10(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function */
extern void T59f215(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T59f226(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_result_dynamic_types */
extern void T59f334(T0* C, T0* a1, T0* a2);
/* ET_SYSTEM.set_string_type_alive */
extern void T53f57(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_item */
extern void T59f333(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PRECURSOR.set_builtin_code */
extern void T202f66(T0* C, T6 a1);
/* ET_DYNAMIC_FEATURE.set_builtin_code */
extern void T150f63(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_out */
extern void T59f332(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_64 */
extern void T59f331(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_floor_real_32 */
extern void T59f330(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_64 */
extern void T59f329(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_ceiling_real_32 */
extern void T59f328(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_to_double */
extern void T59f327(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_real */
extern void T59f326(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer_64 */
extern void T59f325(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_truncated_to_integer */
extern void T59f324(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_lt */
extern void T59f323(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_identity */
extern void T59f322(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_opposite */
extern void T59f321(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_power */
extern void T59f320(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_divide */
extern void T59f319(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_times */
extern void T59f318(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_minus */
extern void T59f317(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_plus */
extern void T59f316(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_item */
extern void T59f315(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_32 */
extern void T59f314(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_to_character_8 */
extern void T59f313(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_natural_32_code */
extern void T59f312(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_code */
extern void T59f311(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_item */
extern void T59f310(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_not */
extern void T59f309(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_xor */
extern void T59f308(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_right */
extern void T59f307(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_shift_left */
extern void T59f306(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_and */
extern void T59f305(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_bit_or */
extern void T59f304(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_64 */
extern void T59f303(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_32 */
extern void T59f302(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_16 */
extern void T59f301(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_integer_8 */
extern void T59f300(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_64 */
extern void T59f299(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_32 */
extern void T59f298(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_16 */
extern void T59f297(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_as_natural_8 */
extern void T59f296(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_double */
extern void T59f295(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_64 */
extern void T59f294(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real_32 */
extern void T59f293(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_real */
extern void T59f292(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_32 */
extern void T59f291(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_to_character_8 */
extern void T59f290(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_lt */
extern void T59f289(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_identity */
extern void T59f288(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_opposite */
extern void T59f287(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_power */
extern void T59f286(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_mod */
extern void T59f285(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_div */
extern void T59f284(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_divide */
extern void T59f283(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_times */
extern void T59f282(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_minus */
extern void T59f281(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_plus */
extern void T59f280(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_function_item */
extern void T59f279(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_type_generating_type */
extern void T59f278(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_wide_character_bytes */
extern void T59f277(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_real_bytes */
extern void T59f276(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_pointer_bytes */
extern void T59f275(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_integer_bytes */
extern void T59f274(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_character_bytes */
extern void T59f273(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_boolean_bytes */
extern void T59f272(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_windows */
extern void T59f271(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_vms */
extern void T59f270(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_unix */
extern void T59f269(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_dotnet */
extern void T59f268(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_platform_is_thread_capable */
extern void T59f267(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument_count */
extern void T59f266(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_arguments_argument */
extern void T59f265(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_hash_code */
extern void T59f264(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_out */
extern void T59f263(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_to_integer_32 */
extern void T59f262(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_plus */
extern void T59f261(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_item */
extern void T59f260(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_item */
extern void T59f259(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_xor */
extern void T59f258(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_implies */
extern void T59f257(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_not */
extern void T59f256(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or_else */
extern void T59f255(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_or */
extern void T59f254(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and_then */
extern void T59f253(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_and */
extern void T59f252(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_aliased_resized_area */
extern void T59f251(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_element_size */
extern void T59f250(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_count */
extern void T59f249(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_item */
extern void T59f248(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type2 */
extern void T59f247(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_tagged_out */
extern void T59f246(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generating_type */
extern void T59f245(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_generator */
extern void T59f244(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_is_deep_equal */
extern void T59f243(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_is_equal */
extern void T59f242(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_conforms_to */
extern void T59f241(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_same_type */
extern void T59f240(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_deep_twin */
extern void T59f239(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_twin */
extern void T59f238(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_twin */
extern void T59f237(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_builtin_argument_dynamic_types */
extern void T59f352(T0* C, T0* a1, T6 a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_validity */
extern void T59f226p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_declaration */
extern void T59f337(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_signature_type_validity */
extern void T59f336(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_formal_arguments_validity */
extern void T59f335(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_formal_argument_declaration */
extern void T59f353(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_function */
extern void T56f481(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function */
extern void T56f533(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_routine */
extern void T56f590(T0* C, T0* a1, T1 a2, T1 a3);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T196f37(T0* C);
/* KL_TEXT_OUTPUT_FILE.old_open_append */
extern void T196f38(T0* C);
/* KL_TEXT_OUTPUT_FILE.open_append */
extern void T196f38p1(T0* C);
/* DS_ARRAYED_LIST [STRING].last */
extern T0* T76f21(T0* C);
/* ET_C_GENERATOR.print */
extern void T56f595(T0* C, T0* a1);
/* STD_FILES.put_string */
extern void T1316f5(T0* C, T0* a1);
/* CONSOLE.put_string */
extern void T1412f8(T0* C, T0* a1);
/* CONSOLE.console_ps */
extern void T1412f11(T0* C, T14 a1, T14 a2, T6 a3);
/* STD_FILES.standard_default */
extern T0* T1316f1(T0* C);
/* STD_FILES.output */
extern unsigned char ge2056os24766;
extern T0* ge2056ov24766;
extern T0* T1316f3(T0* C);
/* CONSOLE.make_open_stdout */
extern T0* T1412c7(T0* a1);
/* CONSOLE.set_write_mode */
extern void T1412f10(T0* C);
/* CONSOLE.console_def */
extern T14 T1412f2(T0* C, T6 a1);
/* CONSOLE.make */
extern void T1412f9(T0* C, T0* a1);
/* STRING_8.out */
extern T0* T17f33(T0* C);
/* ET_C_GENERATOR.io */
extern unsigned char ge1os45;
extern T0* ge1ov45;
extern T0* T56f264(T0* C);
/* STD_FILES.set_output_default */
extern void T1316f6(T0* C);
/* STD_FILES.default_create */
extern T0* T1316c4(void);
/* ET_C_GENERATOR.print_external_cpp_body */
extern void T56f610(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* DS_LINKED_LIST [STRING].item */
extern T0* T107f8(T0* C, T6 a1);
/* ST_SPLITTER.make_with_separators */
extern T0* T41c11(T0* a1);
/* ET_C_GENERATOR.print_external_c_struct_body */
extern void T56f609(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_C_GENERATOR.print_external_c_body */
extern void T56f608(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T1 a7);
/* ET_C_GENERATOR.print_external_builtin_body */
extern void T56f607(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_sized_real_out_body */
extern void T56f629(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.print_builtin_arguments_argument_body */
extern void T56f628(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_pointer_out_body */
extern void T56f627(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_special_aliased_resized_area_body */
extern void T56f626(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_type_generating_type_body */
extern void T56f625(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_deep_twin_body */
extern void T56f624(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_is_deep_equal_body */
extern void T56f623(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_tagged_out_body */
extern void T56f622(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_standard_twin_body */
extern void T56f621(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_generating_type2_body */
extern void T56f620(T0* C, T0* a1);
/* ET_C_GENERATOR.print_builtin_any_conforms_to_body */
extern void T56f619(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE_LIST.is_empty */
extern T1 T173f8(T0* C);
/* ET_DYNAMIC_TYPE_LIST.resize */
extern void T173f15(T0* C, T6 a1);
/* ET_C_GENERATOR.print_semicolon_newline */
extern void T56f618(T0* C);
/* ET_C_GENERATOR.print_indentation_assign_to_result */
extern void T56f617(T0* C);
/* ET_C_GENERATOR.print_builtin_any_twin_body */
extern void T56f616(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_c_inline_body */
extern void T56f606(T0* C, T0* a1);
/* KL_CHARACTER_ROUTINES.as_lower */
extern T2 T907f2(T0* C, T2 a1);
/* ET_C_GENERATOR.character_ */
extern T0* T56f269(T0* C);
/* ET_C_GENERATOR.print_external_c_includes */
extern void T56f605(T0* C, T0* a1);
/* ET_C_GENERATOR.include_header_filename */
extern void T56f615(T0* C, T0* a1, T0* a2);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring */
extern T0* T195f297(T0* C, T6 a1);
/* RX_PCRE_REGULAR_EXPRESSION.captured_substring_count */
extern T6 T195f296(T0* C, T6 a1);
/* ET_C_GENERATOR.print_malloc_current */
extern void T56f604(T0* C, T0* a1);
/* RX_PCRE_REGULAR_EXPRESSION.recognizes */
extern T1 T195f295(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_routine_name */
extern void T56f598(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.print_feature_name_comment */
extern void T56f603(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.process_call_expression */
extern void T951f76(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_expression_validity */
extern void T951f135(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_qualified_call_expression_validity */
extern void T951f196(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.copy_type_context */
extern void T244f41(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.item */
extern T0* T244f17(T0* C, T6 a1);
/* ET_NESTED_TYPE_CONTEXT.set_root_context */
extern void T244f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_vape_validity */
extern void T951f230(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vape0d_error */
extern void T52f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0d */
extern T0* T884c804(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0d_error */
extern void T28f382(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vape0c_error */
extern void T52f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vape0c */
extern T0* T884c803(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.report_vape0c_error */
extern void T28f381(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.report_vuex2b_error */
extern void T52f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vuex2b */
extern T0* T884c762(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T52f108(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuex2b_error */
extern void T28f340(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vuex2_error */
extern T1 T28f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_expression */
extern void T951f252(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar1c_error */
extern void T52f339(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar1c */
extern T0* T884c761(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vuar1c_error */
extern void T28f339(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuex2a_error */
extern void T52f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vuex2a */
extern T0* T884c760(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vuex2a_error */
extern void T28f338(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn2a_error */
extern void T52f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn2a */
extern T0* T884c759(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn2a_error */
extern void T28f337(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_IDENTIFIER.set_tuple_label */
extern void T119f109(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.keep_best_overloaded_features */
extern void T951f216(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_PROCEDURE].keep_first */
extern void T238f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].keep_first */
extern void T240f40(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].force_last */
extern void T239f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern void T239f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_PROCEDURE]].resize */
extern T0* T867f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].resized_area */
extern T0* T868f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].copy_data */
extern void T868f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].move_data */
extern void T868f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].overlapping_move */
extern void T868f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_PROCEDURE]].non_overlapping_move */
extern void T868f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].new_capacity */
extern T6 T239f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].extendible */
extern T1 T239f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].force_last */
extern void T241f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern void T241f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [DS_ARRAYED_LIST [ET_QUERY]].resize */
extern T0* T871f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].resized_area */
extern T0* T872f3(T0* C, T6 a1);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].copy_data */
extern void T872f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].move_data */
extern void T872f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].overlapping_move */
extern void T872f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [DS_ARRAYED_LIST [ET_QUERY]].non_overlapping_move */
extern void T872f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].new_capacity */
extern T6 T241f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].extendible */
extern T1 T241f9(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].has */
extern T1 T242f8(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove */
extern void T238f38(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_left */
extern void T238f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_cursors_left */
extern void T238f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_PROCEDURE].remove_last */
extern void T238f42(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].move_last_cursors_after */
extern void T238f45(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].remove */
extern void T242f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].move_left */
extern void T242f22(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_cursors_left */
extern void T242f21(T0* C, T6 a1);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_position */
extern void T874f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].remove_last */
extern void T242f20(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].move_last_cursors_after */
extern void T242f23(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_FEATURE].set_next_cursor */
extern void T874f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].item */
extern T0* T242f7(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].wipe_out */
extern void T242f15(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].clear_items */
extern void T242f19(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_FEATURE].move_all_cursors_after */
extern void T242f18(T0* C);
/* DS_ARRAYED_LIST [ET_FEATURE].force_last */
extern void T242f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_FEATURE].resize */
extern void T242f17(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].new_capacity */
extern T6 T242f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FEATURE].extendible */
extern T1 T242f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].remove_last */
extern void T239f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].move_last_cursors_after */
extern void T239f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_next_cursor */
extern void T869f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_PROCEDURE]].set_position */
extern void T869f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].last */
extern T0* T239f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_PROCEDURE]].is_empty */
extern T1 T239f6(T0* C);
/* DS_ARRAYED_LIST [ET_PROCEDURE].is_empty */
extern T1 T238f17(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].remove_last */
extern void T241f13(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].move_last_cursors_after */
extern void T241f15(T0* C);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_next_cursor */
extern void T873f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [DS_ARRAYED_LIST [ET_QUERY]].set_position */
extern void T873f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].last */
extern T0* T241f7(T0* C);
/* DS_ARRAYED_LIST [DS_ARRAYED_LIST [ET_QUERY]].is_empty */
extern T1 T241f6(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].is_empty */
extern T1 T240f17(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].remove */
extern void T240f38(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].move_left */
extern void T240f44(T0* C, T6 a1, T6 a2);
/* DS_ARRAYED_LIST [ET_QUERY].move_cursors_left */
extern void T240f43(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_QUERY].remove_last */
extern void T240f42(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].move_last_cursors_after */
extern void T240f45(T0* C);
/* DS_ARRAYED_LIST [ET_QUERY].first */
extern T0* T240f16(T0* C);
/* ET_CLASS.add_overloaded_queries */
extern void T55f219(T0* C, T0* a1, T0* a2);
/* ET_QUERY_LIST.add_overloaded_features */
extern void T146f12(T0* C, T0* a1, T0* a2);
/* ET_CALL_EXPRESSION.is_qualified_call */
extern T1 T186f9(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_expression */
extern void T949f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_actual_argument_list */
extern void T949f83(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_expression */
extern void T59f414(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_expression_validity */
extern void T59f465(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_expression_validity */
extern void T59f509(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_vape_validity */
extern void T59f408(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_expression */
extern void T59f550(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE_SET_LIST.valid_index */
extern T1 T168f7(T0* C, T6 a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.keep_best_overloaded_features */
extern void T59f393(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_call_expression */
extern void T56f482(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_expression */
extern void T56f534(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_expression */
extern void T56f592(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_expression */
extern void T56f591(T0* C, T0* a1);
/* ET_C_GENERATOR.print_target_operand */
extern void T56f612(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.mark_temp_variable_used */
extern void T56f611(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_constant_attribute */
extern void T951f41(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_constant_attribute_validity */
extern void T951f53(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc6a_error */
extern void T52f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc6a */
extern T0* T884c639(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T52f41(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc6a_error */
extern void T28f218(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc6_error */
extern T1 T28f41(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc5a_error */
extern void T52f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc5a */
extern T0* T884c638(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T52f40(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc5a_error */
extern void T28f217(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc5_error */
extern T1 T28f40(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc4a_error */
extern void T52f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc4a */
extern T0* T884c637(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T52f39(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc4a_error */
extern void T28f216(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc4_error */
extern T1 T28f39(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.set_type */
extern void T486f39(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.set_type */
extern void T485f39(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc3a_error */
extern void T52f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc3a */
extern T0* T884c636(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T52f38(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc3a_error */
extern void T28f215(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc3_error */
extern T1 T28f38(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc2a_error */
extern void T52f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc2a */
extern T0* T884c635(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T52f37(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc2a_error */
extern void T28f214(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc2_error */
extern T1 T28f37(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqmc1a_error */
extern void T52f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqmc1a */
extern T0* T884c634(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T52f36(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqmc1a_error */
extern void T28f213(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqmc1_error */
extern T1 T28f36(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_constant_attribute */
extern void T949f11(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_constant_attribute */
extern void T59f216(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_constant_attribute_validity */
extern void T59f227(T0* C, T0* a1);
/* ET_C_GENERATOR.process_constant_attribute */
extern void T56f483(T0* C, T0* a1);
/* ET_C_GENERATOR.print_constant_attribute */
extern void T56f535(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute_wrapper */
extern void T56f593(T0* C, T0* a1, T1 a2);
/* ET_CALL_EXPRESSION.set_name */
extern void T186f27(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_unique_attribute */
extern void T951f42(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_unique_attribute_validity */
extern void T951f54(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vqui0a_error */
extern void T52f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vqui0a */
extern T0* T884c640(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vqui_error */
extern T1 T52f42(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vqui0a_error */
extern void T28f219(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vqui_error */
extern T1 T28f42(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_unique_attribute */
extern void T949f12(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_unique_attribute */
extern void T59f217(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unique_attribute_validity */
extern void T59f228(T0* C, T0* a1);
/* ET_C_GENERATOR.process_unique_attribute */
extern void T56f484(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unique_attribute */
extern void T56f536(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_attribute */
extern void T951f40(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_attribute_validity */
extern void T951f52(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_attribute */
extern void T949f13(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_attribute */
extern void T59f218(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_attribute_validity */
extern void T59f229(T0* C, T0* a1);
/* ET_C_GENERATOR.process_attribute */
extern void T56f485(T0* C, T0* a1);
/* ET_C_GENERATOR.print_attribute */
extern void T56f537(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure */
extern void T951f47(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_validity */
extern void T951f59(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_rescue_validity */
extern void T951f69(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_instructions_validity */
extern void T951f68(T0* C, T0* a1);
/* ET_COMPOUND.item */
extern T0* T625f6(T0* C, T6 a1);
/* ET_FEATURE_CHECKER.check_locals_validity */
extern void T951f67(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_local_supplier */
extern void T51f189(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_local_supplier */
extern void T952f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_local_supplier */
extern void T48f197(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_variable_declaration */
extern void T951f72(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_local_type_validity */
extern void T951f71(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle1a_error */
extern void T52f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle1a */
extern T0* T884c643(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T52f45(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle1a_error */
extern void T28f222(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle1_error */
extern T1 T28f45(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrle2a_error */
extern void T52f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vrle2a */
extern T0* T884c642(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T52f44(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrle2a_error */
extern void T28f221(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vrle2_error */
extern T1 T28f44(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vreg0b_error */
extern void T52f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vreg0b */
extern T0* T884c641(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vreg0b_error */
extern void T28f220(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_do_procedure */
extern void T949f14(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_compound */
extern void T949f20(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure */
extern void T59f219(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_validity */
extern void T59f230(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_rescue_validity */
extern void T59f341(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_instructions_validity */
extern void T59f340(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_locals_validity */
extern void T59f339(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_variable_declaration */
extern void T59f355(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_local_type_validity */
extern void T59f354(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_procedure */
extern void T56f486(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure */
extern void T56f538(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_procedure */
extern void T56f594(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine */
extern void T56f613(T0* C, T0* a1, T1 a2, T1 a3);
/* ET_C_GENERATOR.print_compound */
extern void T56f614(T0* C, T0* a1);
/* ET_C_GENERATOR.print_instruction */
extern void T56f630(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].force_last */
extern void T189f44(T0* C, T0* a1);
/* DS_HASH_SET [ET_FEATURE].slots_put */
extern void T189f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].clashes_put */
extern void T189f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_FEATURE].resize */
extern void T189f46(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].clashes_resize */
extern void T189f52(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].key_storage_resize */
extern void T189f51(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_resize */
extern void T189f50(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].slots_resize */
extern void T189f49(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].new_capacity */
extern T6 T189f29(T0* C, T6 a1);
/* DS_HASH_SET [ET_FEATURE].item_storage_put */
extern void T189f45(T0* C, T0* a1, T6 a2);
/* ET_FEATURE_CHECKER.process_deferred_procedure */
extern void T951f49(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_procedure_validity */
extern void T951f61(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_procedure */
extern void T949f9(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_procedure */
extern void T59f220(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_procedure_validity */
extern void T59f231(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_procedure */
extern void T56f487(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_procedure */
extern void T56f539(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bit_constant */
extern void T951f91(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bit_constant_validity */
extern void T951f150(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_bit_constant */
extern void T951f213(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bit_constant */
extern void T949f65(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bit_constant */
extern void T59f440(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bit_constant_validity */
extern void T59f491(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_bit_constant */
extern void T59f536(T0* C, T0* a1);
/* ET_C_GENERATOR.process_bit_constant */
extern void T56f488(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bit_constant */
extern void T56f540(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_void */
extern void T951f84(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_void_validity */
extern void T951f143(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_void_constant */
extern void T951f210(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_void */
extern void T949f57(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_void */
extern void T59f432(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_void_validity */
extern void T59f483(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_void_constant */
extern void T59f533(T0* C, T0* a1);
/* ET_C_GENERATOR.process_void */
extern void T56f489(T0* C, T0* a1);
/* ET_C_GENERATOR.print_void */
extern void T56f541(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c3_character_constant */
extern void T951f87(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c3_character_constant_validity */
extern void T951f146(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_character_constant */
extern void T951f211(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_c3_character_constant */
extern void T949f60(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c3_character_constant */
extern void T59f435(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c3_character_constant_validity */
extern void T59f486(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_character_constant */
extern void T59f534(T0* C, T0* a1);
/* ET_C_GENERATOR.process_c3_character_constant */
extern void T56f490(T0* C, T0* a1);
/* ET_C_GENERATOR.print_character_constant */
extern void T56f542(T0* C, T0* a1);
/* ET_C_GENERATOR.print_escaped_character */
extern void T56f596(T0* C, T2 a1);
/* ET_FEATURE_CHECKER.process_regular_manifest_string */
extern void T951f88(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_manifest_string_validity */
extern void T951f147(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_string_constant */
extern void T951f212(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_manifest_string */
extern void T949f61(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_manifest_string */
extern void T59f436(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_manifest_string_validity */
extern void T59f487(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_string_constant */
extern void T59f535(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.is_empty */
extern T1 T200f7(T0* C);
/* ET_C_GENERATOR.process_regular_manifest_string */
extern void T56f491(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_manifest_string */
extern void T56f543(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_verbatim_string */
extern void T951f89(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_verbatim_string_validity */
extern void T951f148(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_verbatim_string */
extern void T949f62(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_verbatim_string */
extern void T59f437(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_verbatim_string_validity */
extern void T59f488(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_verbatim_string */
extern void T56f492(T0* C, T0* a1);
/* ET_C_GENERATOR.print_verbatim_string */
extern void T56f544(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_special_manifest_string */
extern void T951f90(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_special_manifest_string_validity */
extern void T951f149(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_special_manifest_string */
extern void T949f63(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_special_manifest_string */
extern void T59f438(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_special_manifest_string_validity */
extern void T59f489(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_special_manifest_string */
extern void T56f493(T0* C, T0* a1);
/* ET_C_GENERATOR.print_special_manifest_string */
extern void T56f545(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_integer_constant */
extern void T951f79(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_integer_constant_validity */
extern void T951f138(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_natural_64_constant */
extern void T951f207(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_32_constant */
extern void T951f206(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_16_constant */
extern void T951f205(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_8_constant */
extern void T951f204(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_natural_constant */
extern void T951f203(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_64_constant */
extern void T951f202(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_32_constant */
extern void T951f201(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_16_constant */
extern void T951f200(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_8_constant */
extern void T951f199(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_integer_constant */
extern void T951f198(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_integer_constant */
extern void T949f52(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_integer_constant */
extern void T59f427(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_integer_constant_validity */
extern void T59f478(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_64_constant */
extern void T59f530(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_32_constant */
extern void T59f529(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_16_constant */
extern void T59f528(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_8_constant */
extern void T59f527(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_natural_constant */
extern void T59f526(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_64_constant */
extern void T59f525(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_32_constant */
extern void T59f524(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_16_constant */
extern void T59f523(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_8_constant */
extern void T59f522(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_integer_constant */
extern void T59f521(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_integer_constant */
extern void T56f494(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_integer_constant */
extern void T56f546(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_underscored_integer_constant */
extern void T951f80(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_integer_constant_validity */
extern void T951f139(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_integer_constant */
extern void T949f53(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_integer_constant */
extern void T59f428(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_integer_constant_validity */
extern void T59f479(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_integer_constant */
extern void T56f495(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_integer_constant */
extern void T56f547(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_hexadecimal_integer_constant */
extern void T951f81(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_hexadecimal_integer_constant_validity */
extern void T951f140(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_hexadecimal_integer_constant */
extern void T949f54(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_hexadecimal_integer_constant */
extern void T59f429(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_hexadecimal_integer_constant_validity */
extern void T59f480(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_hexadecimal_integer_constant */
extern void T56f496(T0* C, T0* a1);
/* ET_C_GENERATOR.print_hexadecimal_integer_constant */
extern void T56f548(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_regular_real_constant */
extern void T951f82(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_regular_real_constant_validity */
extern void T951f141(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_double_constant */
extern void T951f209(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_real_constant */
extern void T951f208(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_regular_real_constant */
extern void T949f55(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_regular_real_constant */
extern void T59f430(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_regular_real_constant_validity */
extern void T59f481(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_double_constant */
extern void T59f532(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_real_constant */
extern void T59f531(T0* C, T0* a1);
/* ET_C_GENERATOR.process_regular_real_constant */
extern void T56f497(T0* C, T0* a1);
/* ET_C_GENERATOR.print_regular_real_constant */
extern void T56f549(T0* C, T0* a1);
/* ET_REGULAR_REAL_CONSTANT.is_negative */
extern T1 T485f20(T0* C);
/* ET_SYMBOL_OPERATOR.is_minus */
extern T1 T463f9(T0* C);
/* ET_FEATURE_CHECKER.process_underscored_real_constant */
extern void T951f83(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_underscored_real_constant_validity */
extern void T951f142(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_underscored_real_constant */
extern void T949f56(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_underscored_real_constant */
extern void T59f431(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_underscored_real_constant_validity */
extern void T59f482(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_underscored_real_constant */
extern void T56f498(T0* C, T0* a1);
/* ET_C_GENERATOR.print_underscored_real_constant */
extern void T56f550(T0* C, T0* a1);
/* ET_UNDERSCORED_REAL_CONSTANT.is_negative */
extern T1 T486f20(T0* C);
/* ET_FEATURE_CHECKER.process_true_constant */
extern void T951f77(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_true_constant_validity */
extern void T951f136(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_boolean_constant */
extern void T951f197(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_true_constant */
extern void T949f50(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_true_constant */
extern void T59f425(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_true_constant_validity */
extern void T59f476(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_boolean_constant */
extern void T59f520(T0* C, T0* a1);
/* ET_C_GENERATOR.process_true_constant */
extern void T56f499(T0* C, T0* a1);
/* ET_C_GENERATOR.print_true_constant */
extern void T56f551(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_false_constant */
extern void T951f78(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_false_constant_validity */
extern void T951f137(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_false_constant */
extern void T949f51(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_false_constant */
extern void T59f426(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_false_constant_validity */
extern void T59f477(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_false_constant */
extern void T56f500(T0* C, T0* a1);
/* ET_C_GENERATOR.print_false_constant */
extern void T56f552(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c1_character_constant */
extern void T951f85(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c1_character_constant_validity */
extern void T951f144(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c1_character_constant */
extern void T949f58(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c1_character_constant */
extern void T59f433(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c1_character_constant_validity */
extern void T59f484(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c1_character_constant */
extern void T56f501(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_c2_character_constant */
extern void T951f86(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_c2_character_constant_validity */
extern void T951f145(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_c2_character_constant */
extern void T949f59(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_c2_character_constant */
extern void T59f434(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_c2_character_constant_validity */
extern void T59f485(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_c2_character_constant */
extern void T56f502(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_expression */
extern void T951f92(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_expression_validity */
extern void T951f151(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_creation_expression_validity */
extern void T951f214(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.report_vgcc6c_error */
extern void T52f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6c */
extern T0* T884c791(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6c_error */
extern void T28f369(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8a_error */
extern void T52f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8a */
extern T0* T884c790(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T52f127(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc8a_error */
extern void T28f368(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.reportable_vgcc8_error */
extern T1 T28f127(T0* C, T0* a1);
/* ET_CONVERT_EXPRESSION.last_position */
extern T0* T1240f7(T0* C);
/* ET_CREATE_EXPRESSION.last_position */
extern T0* T520f14(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5a_error */
extern void T52f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5a */
extern T0* T884c789(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T52f126(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc5a_error */
extern void T28f367(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vgcc5_error */
extern T1 T28f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_type_validity */
extern void T951f253(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_create_supplier */
extern void T51f192(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_create_supplier */
extern void T952f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_create_supplier */
extern void T48f200(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.tokens */
extern T0* T951f32(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc6b_error */
extern void T52f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6b */
extern T0* T884c788(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6b_error */
extern void T28f366(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_PROCEDURE].first */
extern T0* T238f16(T0* C);
/* ET_CLASS.add_overloaded_procedures */
extern void T55f220(T0* C, T0* a1, T0* a2);
/* ET_PROCEDURE_LIST.add_overloaded_features */
extern void T148f12(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_type_validity */
extern void T951f229(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_expression */
extern void T949f47(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_expression */
extern void T59f422(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_expression_validity */
extern void T59f473(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_expression_validity */
extern void T59f519(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_type_validity */
extern void T59f461(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.tokens */
extern T0* T59f193(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_type_validity */
extern void T59f407(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_expression */
extern void T56f503(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_expression */
extern void T56f553(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_tuple */
extern void T951f93(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_tuple_validity */
extern void T951f152(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_tuple */
extern void T951f215(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_manifest_tuple */
extern void T949f70(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_tuple */
extern void T59f446(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_tuple_validity */
extern void T59f497(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_tuple */
extern void T59f540(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_tuple */
extern void T56f504(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_tuple */
extern void T56f554(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].force_last */
extern void T188f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_put */
extern void T188f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_put */
extern void T188f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_item */
extern T6 T188f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].hash_position */
extern T6 T188f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].resize */
extern void T188f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].clashes_resize */
extern void T188f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_resize */
extern void T188f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_resize */
extern void T188f61(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TUPLE_TYPE].resize */
extern T0* T840f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].resized_area */
extern T0* T839f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].copy_data */
extern void T839f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].move_data */
extern void T839f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].overlapping_move */
extern void T839f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TUPLE_TYPE].non_overlapping_move */
extern void T839f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_storage_item */
extern T0* T188f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].slots_resize */
extern void T188f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].new_capacity */
extern T6 T188f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].item_storage_put */
extern void T188f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].search_position */
extern void T188f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TUPLE_TYPE].key_equality_tester */
extern T0* T188f33(T0* C);
/* ET_FEATURE_CHECKER.process_do_function */
extern void T951f43(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_validity */
extern void T951f55(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_do_function */
extern void T949f15(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function */
extern void T59f221(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_validity */
extern void T59f232(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function */
extern void T56f505(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function */
extern void T56f555(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_function */
extern void T56f597(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function */
extern void T951f44(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_validity */
extern void T951f56(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_function */
extern void T949f16(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function */
extern void T59f222(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_validity */
extern void T59f233(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_function */
extern void T56f506(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function */
extern void T56f556(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_deferred_function */
extern void T951f45(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_deferred_function_validity */
extern void T951f57(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_deferred_function */
extern void T949f17(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_deferred_function */
extern void T59f223(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_deferred_function_validity */
extern void T59f234(T0* C, T0* a1);
/* ET_C_GENERATOR.process_deferred_function */
extern void T56f507(T0* C, T0* a1);
/* ET_C_GENERATOR.print_deferred_function */
extern void T56f557(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure */
extern void T951f48(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_validity */
extern void T951f60(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_once_procedure */
extern void T949f18(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure */
extern void T59f224(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_validity */
extern void T59f235(T0* C, T0* a1);
/* ET_C_GENERATOR.process_once_procedure */
extern void T56f508(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure */
extern void T56f558(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure */
extern void T951f50(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_validity */
extern void T951f62(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_external_procedure */
extern void T949f19(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure */
extern void T59f225(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T59f236(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_real_set_item */
extern void T59f351(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_character_set_item */
extern void T59f350(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_sized_integer_set_item */
extern void T59f349(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_procedure_call */
extern void T59f348(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_pointer_set_item */
extern void T59f347(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_boolean_set_item */
extern void T59f346(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_put */
extern void T59f345(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_special_make */
extern void T59f344(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_copy */
extern void T59f343(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_builtin_any_standard_copy */
extern void T59f342(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_validity */
extern void T59f236p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_external_procedure */
extern void T56f509(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure */
extern void T56f559(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bracket_expression */
extern void T951f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bracket_expression_validity */
extern void T951f154(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_bracket_expression */
extern void T949f37(T0* C, T0* a1);
/* ET_BRACKET_ARGUMENT_LIST.process */
extern void T784f15(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_bracket_argument_list */
extern void T949f93(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bracket_expression */
extern void T59f443(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bracket_expression_validity */
extern void T59f494(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_bracket_expression */
extern void T56f510(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bracket_expression */
extern void T56f560(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_expression */
extern void T951f105(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_expression_validity */
extern void T951f164(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_static_call_expression */
extern void T951f231(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LACE_UNIVERSE.report_static_supplier */
extern void T51f190(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_static_supplier */
extern void T952f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_static_supplier */
extern void T48f198(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STATIC_CALL_EXPRESSION.arguments_count */
extern T6 T742f15(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_expression */
extern void T949f67(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_expression */
extern void T59f442(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_expression_validity */
extern void T59f493(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_expression */
extern void T59f538(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.set_static */
extern void T202f69(T0* C, T1 a1);
/* ET_DYNAMIC_FEATURE.set_static */
extern void T150f68(T0* C, T1 a1);
/* ET_C_GENERATOR.process_static_call_expression */
extern void T56f511(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_expression */
extern void T56f561(T0* C, T0* a1);
/* ET_C_GENERATOR.resolved_formal_parameters */
extern T0* T56f262(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_expression */
extern void T951f108(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_expression_validity */
extern void T951f167(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_precursor_expression */
extern void T951f234(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3d_error */
extern void T52f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3d */
extern T0* T884c771(T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_INSTRUCTION.position */
extern T0* T751f7(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T52f117(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr3d_error */
extern void T28f349(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vdpr3_error */
extern T1 T28f117(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3e_error */
extern void T52f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3e */
extern T0* T884c770(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3e_error */
extern void T28f348(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vdpr1b_error */
extern void T52f351(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1b */
extern T0* T884c773(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T52f116(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr1b_error */
extern void T28f351(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr1_error */
extern T1 T28f116(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_precursor_expression */
extern void T949f40(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.check_precursor_validity */
extern void T949f84(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3c_error */
extern void T52f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vdpr3c */
extern T0* T884c851(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vdpr3c_error */
extern void T28f430(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr3b_error */
extern void T52f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vdpr3b */
extern T0* T884c850(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vdpr3b_error */
extern void T28f429(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_EXPRESSION.set_parent_type */
extern void T757f24(T0* C, T0* a1);
/* ET_PRECURSOR_INSTRUCTION.set_parent_type */
extern void T751f13(T0* C, T0* a1);
/* ET_PRECURSOR_KEYWORD.set_seed */
extern void T422f22(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vdpr3a_error */
extern void T52f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vdpr3a */
extern T0* T884c849(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vdpr3a_error */
extern void T28f428(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vdpr2a_error */
extern void T52f427(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr2a */
extern T0* T884c848(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T52f150(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vdpr2a_error */
extern void T28f427(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vdpr2_error */
extern T1 T28f150(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.error_handler */
extern T0* T949f6(T0* C);
/* ET_PRECURSOR_CHECKER.set_fatal_error */
extern void T949f88(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_expression */
extern void T59f415(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_expression_validity */
extern void T59f466(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_expression */
extern void T59f510(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.dynamic_precursor */
extern T0* T202f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_FEATURE.dynamic_precursor */
extern T0* T150f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR_LIST.force_last */
extern void T201f8(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].resize */
extern T0* T1328f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].resized_area */
extern T0* T1327f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].copy_data */
extern void T1327f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].move_data */
extern void T1327f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].overlapping_move */
extern void T1327f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].non_overlapping_move */
extern void T1327f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1327c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].make */
extern T0* T1328f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_PRECURSOR].make_area */
extern T0* T1398c2(T6 a1);
/* ET_DYNAMIC_PRECURSOR_LIST.fixed_array */
extern unsigned char ge923os15099;
extern T0* ge923ov15099;
extern T0* T201f4(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_PRECURSOR].default_create */
extern T0* T1328c3(void);
/* ET_DYNAMIC_PRECURSOR_LIST.capacity */
extern T6 T201f5(T0* C);
/* ET_DYNAMIC_PRECURSOR_LIST.put_last */
extern void T201f7(T0* C, T0* a1);
/* ET_DYNAMIC_PRECURSOR_LIST.make_with_capacity */
extern T0* T201c6(T6 a1);
/* ET_DYNAMIC_PRECURSOR.make */
extern T0* T202c60(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PRECURSOR.make_feature */
extern void T202f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PRECURSOR.empty_dynamic_type_sets */
extern T0* T202f50(T0* C);
/* ET_C_GENERATOR.process_precursor_expression */
extern void T56f512(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_expression */
extern void T56f562(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_parenthesized_expression */
extern void T951f109(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_parenthesized_expression_validity */
extern void T951f168(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_parenthesized_expression */
extern void T949f68(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_parenthesized_expression */
extern void T59f444(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_parenthesized_expression_validity */
extern void T59f495(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_parenthesized_expression */
extern void T56f513(T0* C, T0* a1);
/* ET_C_GENERATOR.print_parenthesized_expression */
extern void T56f563(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_feature_address */
extern void T951f110(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_feature_address_validity */
extern void T951f169(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vuar4a_error */
extern void T52f352(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vuar4a */
extern T0* T884c774(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T52f118(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vuar4a_error */
extern void T28f352(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vuar4_error */
extern T1 T28f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_function_address */
extern void T951f239(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_attribute_address */
extern void T951f238(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_address */
extern void T951f237(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_pointer_expression */
extern void T951f236(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_typed_pointer_expression */
extern void T951f235(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_feature_address */
extern void T949f41(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_feature_address */
extern void T59f416(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_feature_address_validity */
extern void T59f467(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_function_address */
extern void T59f515(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_address */
extern void T59f514(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_address */
extern void T59f513(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_pointer_expression */
extern void T59f512(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_typed_pointer_expression */
extern void T59f511(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_feature_address */
extern void T56f514(T0* C, T0* a1);
/* ET_C_GENERATOR.print_feature_address */
extern void T56f564(T0* C, T0* a1);
/* ET_C_GENERATOR.mark_temp_variable_free */
extern void T56f599(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_current_address */
extern void T951f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_current_address_validity */
extern void T951f170(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_current_address */
extern void T949f42(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_current_address */
extern void T59f417(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_current_address_validity */
extern void T59f468(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_current_address */
extern void T56f515(T0* C, T0* a1);
/* ET_C_GENERATOR.print_current_address */
extern void T56f565(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_result_address */
extern void T951f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_result_address_validity */
extern void T951f171(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_result_address */
extern void T949f43(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_result_address */
extern void T59f418(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_result_address_validity */
extern void T59f469(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_result_address */
extern void T56f516(T0* C, T0* a1);
/* ET_C_GENERATOR.print_result_address */
extern void T56f566(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_expression_address */
extern void T951f113(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expression_address_validity */
extern void T951f172(T0* C, T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.put_last */
extern void T244f39(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.last */
extern T0* T244f9(T0* C);
/* ET_NESTED_TYPE_CONTEXT.is_empty */
extern T1 T244f21(T0* C);
/* ET_PRECURSOR_CHECKER.process_expression_address */
extern void T949f44(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_expression_address */
extern void T59f419(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expression_address_validity */
extern void T59f470(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_expression_address */
extern void T56f517(T0* C, T0* a1);
/* ET_C_GENERATOR.print_expression_address */
extern void T56f567(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_expression */
extern void T951f114(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_expression_validity */
extern void T951f173(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_left */
extern void T768f19(T0* C, T0* a1);
/* ET_INFIX_CAST_EXPRESSION.set_index */
extern void T1241f12(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.make */
extern T0* T1241c11(T0* a1, T0* a2);
/* ET_NESTED_TYPE_CONTEXT.same_named_context */
extern T1 T244f23(T0* C, T0* a1, T0* a2);
/* ET_INFIX_EXPRESSION.set_right */
extern void T768f18(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_infix_expression */
extern void T949f45(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_expression */
extern void T59f420(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_expression_validity */
extern void T59f471(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_expression */
extern void T56f518(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_expression */
extern void T56f568(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_equality_expression */
extern void T951f115(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_equality_expression_validity */
extern void T951f174(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vweq0a_error */
extern void T52f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vweq0a */
extern T0* T884c777(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_BRACKET_SYMBOL.text */
extern T0* T472f43(T0* C);
/* ET_SYMBOL.text */
extern T0* T425f15(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vweq_error */
extern T1 T52f120(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vweq0a_error */
extern void T28f355(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vweq_error */
extern T1 T28f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_equality_expression */
extern void T951f240(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_equality_expression */
extern void T949f46(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_equality_expression */
extern void T59f421(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_equality_expression_validity */
extern void T59f472(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_equality_expression */
extern void T59f518(T0* C, T0* a1);
/* ET_C_GENERATOR.process_equality_expression */
extern void T56f519(T0* C, T0* a1);
/* ET_C_GENERATOR.print_equality_expression */
extern void T56f569(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.is_not_equal */
extern T1 T472f11(T0* C);
/* ET_SYMBOL.is_not_equal */
extern T1 T425f11(T0* C);
/* ET_FEATURE_CHECKER.process_prefix_expression */
extern void T951f116(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_prefix_expression_validity */
extern void T951f175(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_prefix_expression */
extern void T949f48(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_prefix_expression */
extern void T59f423(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_prefix_expression_validity */
extern void T59f474(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_prefix_expression */
extern void T56f520(T0* C, T0* a1);
/* ET_C_GENERATOR.print_prefix_expression */
extern void T56f570(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_old_expression */
extern void T951f117(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_old_expression_validity */
extern void T951f176(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vaol1a_error */
extern void T52f356(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vaol1a */
extern T0* T884c778(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T52f121(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vaol1a_error */
extern void T28f356(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vaol1_error */
extern T1 T28f121(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_old_expression */
extern void T949f49(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_old_expression */
extern void T59f424(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_old_expression_validity */
extern void T59f475(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_old_expression */
extern void T56f521(T0* C, T0* a1);
/* ET_C_GENERATOR.print_old_expression */
extern void T56f571(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_agent */
extern void T951f118(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_agent_validity */
extern void T951f177(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_typed_call_agent_validity */
extern void T951f243(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CALL_AGENT.is_procedure */
extern T1 T775f17(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vpca1b_error */
extern void T52f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca1b */
extern T0* T884c806(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T52f132(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca1b_error */
extern void T28f384(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca1_error */
extern T1 T28f132(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_tuple_label_call_agent_validity */
extern void T951f265(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_tuple_label_call_agent */
extern void T951f276(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_typed_query_call_agent_validity */
extern void T951f264(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_query_call_agent */
extern void T951f275(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_agent_arguments_validity */
extern void T951f269(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vpca5b_error */
extern void T52f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca5b */
extern T0* T884c822(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T52f139(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca5b_error */
extern void T28f400(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca5_error */
extern T1 T28f139(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca5a_error */
extern void T52f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca5a */
extern T0* T884c821(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca5a_error */
extern void T28f399(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_NULL_ERROR_HANDLER.report_vpca4b_error */
extern void T52f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_VALIDITY_ERROR.make_vpca4b */
extern T0* T884c820(T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_NULL_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T52f138(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca4b_error */
extern void T28f398(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T6 a5, T0* a6, T0* a7);
/* ET_ERROR_HANDLER.reportable_vpca4_error */
extern T1 T28f138(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca4a_error */
extern void T52f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_VALIDITY_ERROR.make_vpca4a */
extern T0* T884c819(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_ERROR_HANDLER.report_vpca4a_error */
extern void T28f397(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T6 a6, T0* a7, T0* a8);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.put */
extern void T794f14(T0* C, T0* a1, T6 a2);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.item */
extern T0* T794f8(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3b_error */
extern void T52f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vpca3b */
extern T0* T884c818(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T52f137(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca3b_error */
extern void T28f396(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vpca3_error */
extern T1 T28f137(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpca3a_error */
extern void T52f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpca3a */
extern T0* T884c817(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpca3a_error */
extern void T28f395(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.force_first */
extern void T160f29(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.capacity */
extern T6 T160f20(T0* C);
/* ET_FEATURE_CHECKER.set_implicit_agent_open_arguments */
extern void T951f268(T0* C, T0* a1, T0* a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.put_last */
extern void T1348f7(T0* C, T0* a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT.make */
extern T0* T1349c5(T0* a1, T6 a2);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.make_with_capacity */
extern T0* T1348c6(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1400f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make_area */
extern T0* T1413c2(T6 a1);
/* SPECIAL [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].make */
extern T0* T1399c2(T6 a1);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.fixed_array */
extern unsigned char ge517os15099;
extern T0* ge517ov15099;
extern T0* T1348f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_AGENT_IMPLICIT_OPEN_ARGUMENT].default_create */
extern T0* T1400c2(void);
/* ET_NULL_ERROR_HANDLER.report_vpca2a_error */
extern void T52f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vpca2a */
extern T0* T884c816(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T52f136(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpca2a_error */
extern void T28f394(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vpca2_error */
extern T1 T28f136(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_typed_procedure_call_agent_validity */
extern void T951f263(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.report_qualified_procedure_call_agent */
extern void T951f274(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CALL_AGENT.set_procedure */
extern void T775f29(T0* C, T1 a1);
/* ET_FEATURE_CHECKER.check_qualified_call_agent_validity */
extern void T951f242(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_tuple_label_call_agent_validity */
extern void T951f262(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.check_qualified_query_call_agent_validity */
extern void T951f261(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_qualified_procedure_call_agent_validity */
extern void T951f260(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_call_agent_validity */
extern void T951f241(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vpca1a_error */
extern void T52f383(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vpca1a */
extern T0* T884c805(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vpca1a_error */
extern void T28f383(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_unqualified_query_call_agent_validity */
extern void T951f259(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_query_call_agent */
extern void T951f273(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FEATURE_CHECKER.check_unqualified_procedure_call_agent_validity */
extern void T951f258(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_unqualified_procedure_call_agent */
extern void T951f272(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_PRECURSOR_CHECKER.process_call_agent */
extern void T949f72(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_agent_argument_operand_list */
extern void T949f87(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_agent */
extern void T59f448(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_agent_validity */
extern void T59f499(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_call_agent_validity */
extern void T59f544(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_tuple_label_call_agent_validity */
extern void T59f560(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_call_agent */
extern void T59f571(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PROCEDURE_TYPE.result_type_set */
extern T0* T205f33(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_query_call_agent_validity */
extern void T59f559(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_query_call_agent */
extern void T59f570(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_query_call */
extern void T59f575(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_agent_arguments_validity */
extern void T59f564(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.set_implicit_agent_open_arguments */
extern void T59f563(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_typed_procedure_call_agent_validity */
extern void T59f558(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_procedure_call_agent */
extern void T59f569(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_agent_qualified_procedure_call */
extern void T59f574(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_QUALIFIED_PROCEDURE_CALL.make */
extern T0* T217c8(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_agent_validity */
extern void T59f543(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_tuple_label_call_agent_validity */
extern void T59f557(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_query_call_agent_validity */
extern void T59f556(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_procedure_call_agent_validity */
extern void T59f555(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_call_agent_validity */
extern void T59f542(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_query_call_agent_validity */
extern void T59f554(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_query_call_agent */
extern void T59f568(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_call_agent */
extern void T59f573(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_call_agent_result_dynamic_types */
extern void T59f577(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_unqualified_procedure_call_agent_validity */
extern void T59f553(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_unqualified_procedure_call_agent */
extern void T59f567(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_C_GENERATOR.process_call_agent */
extern void T56f522(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_agent */
extern void T56f573(T0* C, T0* a1);
/* ET_C_GENERATOR.print_agent */
extern void T56f601(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].force_last */
extern void T180f15(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_AGENT].resize */
extern void T180f16(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_AGENT].resize */
extern T0* T834f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_AGENT].resized_area */
extern T0* T833f3(T0* C, T6 a1);
/* SPECIAL [ET_AGENT].copy_data */
extern void T833f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_AGENT].move_data */
extern void T833f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].overlapping_move */
extern void T833f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_AGENT].non_overlapping_move */
extern void T833f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_ARRAYED_LIST [ET_AGENT].new_capacity */
extern T6 T180f10(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_AGENT].extendible */
extern T1 T180f9(T0* C, T6 a1);
/* ET_C_GENERATOR.print_call_agent_body_declaration */
extern void T56f572(T0* C, T0* a1);
/* ET_C_GENERATOR.print_qualified_call_instruction */
extern void T56f600(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.target */
extern T0* T691f7(T0* C);
/* ET_CALL_INSTRUCTION.set_arguments */
extern void T184f13(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_name */
extern void T184f12(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.set_target */
extern void T184f11(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_arguments */
extern void T186f28(T0* C, T0* a1);
/* ET_CALL_EXPRESSION.set_target */
extern void T186f26(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_manifest_string */
extern void T951f119(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_manifest_string_validity */
extern void T951f178(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_manifest_string */
extern void T949f64(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_manifest_string */
extern void T59f439(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_manifest_string_validity */
extern void T59f490(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_manifest_string */
extern void T56f523(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_manifest_string */
extern void T56f574(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_array */
extern void T951f120(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_array_validity */
extern void T951f179(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.set_unresolved_type */
extern void T161f95(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_manifest_array */
extern void T951f244(T0* C, T0* a1, T0* a2);
/* ET_MANIFEST_ARRAY.expression */
extern T0* T780f11(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.item */
extern T0* T780f14(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_manifest_array */
extern void T949f69(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_array */
extern void T59f445(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_array_validity */
extern void T59f496(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_array */
extern void T59f539(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_manifest_array */
extern void T56f524(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_array */
extern void T56f575(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].force_last */
extern void T187f54(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_put */
extern void T187f59(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_put */
extern void T187f58(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_item */
extern T6 T187f31(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].hash_position */
extern T6 T187f29(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].resize */
extern void T187f57(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].clashes_resize */
extern void T187f63(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_resize */
extern void T187f62(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_resize */
extern void T187f61(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_storage_item */
extern T0* T187f34(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].slots_resize */
extern void T187f60(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].new_capacity */
extern T6 T187f28(T0* C, T6 a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].item_storage_put */
extern void T187f56(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].search_position */
extern void T187f55(T0* C, T0* a1);
/* DS_HASH_SET [ET_DYNAMIC_TYPE].key_equality_tester */
extern T0* T187f33(T0* C);
/* ET_FEATURE_CHECKER.process_strip_expression */
extern void T951f121(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_strip_expression_validity */
extern void T951f180(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_strip_expression */
extern void T951f245(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vwst2a_error */
extern void T52f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst2a */
extern T0* T884c781(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T52f123(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst2a_error */
extern void T28f359(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vwst2_error */
extern T1 T28f123(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1a_error */
extern void T52f358(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vwst1a */
extern T0* T884c780(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T52f122(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vwst1a_error */
extern void T28f358(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vwst1_error */
extern T1 T28f122(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vwst1b_error */
extern void T52f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vwst1b */
extern T0* T884c779(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vwst1b_error */
extern void T28f357(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_STRIP_EXPRESSION.feature_name */
extern T0* T782f16(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.item */
extern T0* T782f19(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_strip_expression */
extern void T949f71(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_strip_expression */
extern void T59f447(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_strip_expression_validity */
extern void T59f498(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_strip_expression */
extern void T59f541(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_strip_expression */
extern void T56f525(T0* C, T0* a1);
/* ET_C_GENERATOR.print_strip_expression */
extern void T56f576(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_manifest_type */
extern void T951f122(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_manifest_type_validity */
extern void T951f181(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_manifest_type */
extern void T951f246(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_manifest_type */
extern void T949f66(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_manifest_type */
extern void T59f441(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_manifest_type_validity */
extern void T59f492(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_manifest_type */
extern void T59f537(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_manifest_type */
extern void T56f526(T0* C, T0* a1);
/* ET_C_GENERATOR.print_manifest_type */
extern void T56f577(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_function_inline_agent */
extern void T951f123(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_function_inline_agent_validity */
extern void T951f182(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_query_inline_agent_validity */
extern void T951f250(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_query_inline_agent */
extern void T951f270(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].remove_last */
extern void T237f15(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].move_last_cursors_after */
extern void T237f17(T0* C);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_next_cursor */
extern void T865f6(T0* C, T0* a1);
/* DS_ARRAYED_LIST_CURSOR [ET_INLINE_AGENT].set_position */
extern void T865f5(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].last */
extern T0* T237f7(T0* C);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].is_empty */
extern T1 T237f6(T0* C);
/* ET_FEATURE_CHECKER.check_inline_agent_locals_validity */
extern void T951f249(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T51f194(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_local_supplier */
extern void T952f16(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_local_supplier */
extern void T48f202(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_local_variable_declaration */
extern void T951f267(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1d_error */
extern void T52f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1d */
extern T0* T884c815(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T52f133(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vpir1d_error */
extern void T28f393(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vpir1_error */
extern T1 T28f133(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1c_error */
extern void T52f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1c */
extern T0* T884c814(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1c_error */
extern void T28f392(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].item */
extern T0* T237f9(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv1b_error */
extern void T52f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv1b */
extern T0* T884c813(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T52f135(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv1b_error */
extern void T28f391(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv1_error */
extern T1 T28f135(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vrlv2b_error */
extern void T52f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrlv2b */
extern T0* T884c812(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T52f134(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vrlv2b_error */
extern void T28f390(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vrlv2_error */
extern T1 T28f134(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vred0d_error */
extern void T52f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0d */
extern T0* T884c811(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0d_error */
extern void T28f389(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_LACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T51f191(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_result_supplier */
extern void T952f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_result_supplier */
extern void T48f199(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_result_declaration */
extern void T951f248(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inline_agent_formal_arguments_validity */
extern void T951f247(T0* C, T0* a1, T0* a2);
/* ET_LACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T51f193(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_SUPPLIER_BUILDER.report_inline_agent_argument_supplier */
extern void T952f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_XACE_UNIVERSE.report_inline_agent_argument_supplier */
extern void T48f201(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_inline_agent_formal_argument_declaration */
extern void T951f266(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vpir1b_error */
extern void T52f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1b */
extern T0* T884c810(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1b_error */
extern void T28f388(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vpir1a_error */
extern void T52f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vpir1a */
extern T0* T884c809(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vpir1a_error */
extern void T28f387(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vrfa0b_error */
extern void T52f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vrfa0b */
extern T0* T884c808(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vrfa0b_error */
extern void T28f386(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vred0c_error */
extern void T52f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vred0c */
extern T0* T884c807(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vred0c_error */
extern void T28f385(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].force_last */
extern void T237f14(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].resize */
extern void T237f16(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].new_capacity */
extern T6 T237f11(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_INLINE_AGENT].extendible */
extern T1 T237f10(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_do_function_inline_agent */
extern void T949f73(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_function_inline_agent */
extern void T59f449(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_function_inline_agent_validity */
extern void T59f500(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_query_inline_agent_validity */
extern void T59f548(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_query_inline_agent */
extern void T59f565(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent */
extern void T59f572(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_inline_agent_result_dynamic_types */
extern void T59f576(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_locals_validity */
extern void T59f547(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_local_variable_declaration */
extern void T59f562(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_result_declaration */
extern void T59f546(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inline_agent_formal_arguments_validity */
extern void T59f545(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_inline_agent_formal_argument_declaration */
extern void T59f561(T0* C, T0* a1);
/* ET_C_GENERATOR.process_do_function_inline_agent */
extern void T56f527(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent */
extern void T56f579(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_function_inline_agent_body_declaration */
extern void T56f578(T0* C, T0* a1);
/* ET_C_GENERATOR.print_internal_routine_inline_agent_body_declaration */
extern void T56f602(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_function_inline_agent */
extern void T951f124(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_function_inline_agent_validity */
extern void T951f183(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_function_inline_agent */
extern void T949f74(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_function_inline_agent */
extern void T59f450(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_function_inline_agent_validity */
extern void T59f501(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_function_inline_agent */
extern void T56f528(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent */
extern void T56f581(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_function_inline_agent_body_declaration */
extern void T56f580(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_function_inline_agent */
extern void T951f125(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_function_inline_agent_validity */
extern void T951f184(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_function_inline_agent */
extern void T949f75(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_function_inline_agent */
extern void T59f451(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_function_inline_agent_validity */
extern void T59f502(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_function_inline_agent */
extern void T56f529(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent */
extern void T56f583(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_function_inline_agent_body_declaration */
extern void T56f582(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_do_procedure_inline_agent */
extern void T951f126(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_do_procedure_inline_agent_validity */
extern void T951f185(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.check_procedure_inline_agent_validity */
extern void T951f251(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_procedure_inline_agent */
extern void T951f271(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PRECURSOR_CHECKER.process_do_procedure_inline_agent */
extern void T949f76(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_do_procedure_inline_agent */
extern void T59f452(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_do_procedure_inline_agent_validity */
extern void T59f503(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_procedure_inline_agent_validity */
extern void T59f549(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_procedure_inline_agent */
extern void T59f566(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_do_procedure_inline_agent */
extern void T56f530(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent */
extern void T56f585(T0* C, T0* a1);
/* ET_C_GENERATOR.print_do_procedure_inline_agent_body_declaration */
extern void T56f584(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_once_procedure_inline_agent */
extern void T951f127(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_once_procedure_inline_agent_validity */
extern void T951f186(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_once_procedure_inline_agent */
extern void T949f77(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_once_procedure_inline_agent */
extern void T59f453(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_once_procedure_inline_agent_validity */
extern void T59f504(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_once_procedure_inline_agent */
extern void T56f531(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent */
extern void T56f587(T0* C, T0* a1);
/* ET_C_GENERATOR.print_once_procedure_inline_agent_body_declaration */
extern void T56f586(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_external_procedure_inline_agent */
extern void T951f128(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_external_procedure_inline_agent_validity */
extern void T951f187(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_external_procedure_inline_agent */
extern void T949f78(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_external_procedure_inline_agent */
extern void T59f454(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_external_procedure_inline_agent_validity */
extern void T59f505(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_external_procedure_inline_agent */
extern void T56f532(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent */
extern void T56f589(T0* C, T0* a1);
/* ET_C_GENERATOR.print_external_procedure_inline_agent_body_declaration */
extern void T56f588(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_class_type */
extern void T956f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_class_type_constraint */
extern void T956f21(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5a_error */
extern void T52f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5a */
extern T0* T884c826(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T52f142(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvtcg5a_error */
extern void T28f404(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_gvtcg5_error */
extern T1 T28f142(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_reference */
extern T1 T536f26(T0* C);
/* ET_KEYWORD.is_reference */
extern T1 T166f20(T0* C);
/* ET_FORMAL_PARAMETER.is_reference */
extern T1 T528f24(T0* C);
/* ET_NULL_ERROR_HANDLER.report_gvtcg5b_error */
extern void T52f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_gvtcg5b */
extern T0* T884c825(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_gvtcg5b_error */
extern void T28f403(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_expanded */
extern T1 T536f24(T0* C);
/* ET_KEYWORD.is_expanded */
extern T1 T166f10(T0* C);
/* ET_FORMAL_PARAMETER.is_expanded */
extern T1 T528f22(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vtug2a_error */
extern void T52f402(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug2a */
extern T0* T884c824(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T52f141(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug2a_error */
extern void T28f402(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug2_error */
extern T1 T28f141(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtug1a_error */
extern void T52f401(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtug1a */
extern T0* T884c823(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T52f140(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtug1a_error */
extern void T28f401(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vtug1_error */
extern T1 T28f140(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_class_type */
extern void T955f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_class_type_validity */
extern void T955f10(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.error_handler */
extern T0* T955f5(T0* C);
/* ET_PARENT_CHECKER1.set_fatal_error */
extern void T955f11(T0* C);
/* ET_PARENT_CHECKER3.process_class_type */
extern void T950f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.check_class_type_validity */
extern void T950f11(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.error_handler */
extern T0* T950f5(T0* C);
/* DS_ARRAYED_LIST [ET_CLASS].force_last */
extern void T1190f20(T0* C, T0* a1);
/* DS_ARRAYED_LIST [ET_CLASS].new_capacity */
extern T6 T1190f12(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_CLASS].extendible */
extern T1 T1190f11(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_class_type */
extern void T948f9(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_class_type_constraint */
extern void T948f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtcg3a_error */
extern void T52f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vtcg3a */
extern T0* T884c737(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T52f97(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vtcg3a_error */
extern void T28f315(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vtcg3_error */
extern T1 T28f97(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.error_handler */
extern T0* T948f5(T0* C);
/* UT_VERSION.infix "<=" */
extern T1 T58f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.ise_5_6_latest */
extern unsigned char ge260os1586;
extern T0* ge260ov1586;
extern T0* T948f4(T0* C);
/* UT_VERSION.make_major_minor */
extern T0* T58c18(T6 a1, T6 a2);
/* ET_FORMAL_PARAMETER_CHECKER2.set_fatal_error */
extern void T948f19(T0* C);
/* ET_PARENT_CHECKER2.process_class_type */
extern void T947f9(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_class_type_validity */
extern void T947f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.error_handler */
extern T0* T947f5(T0* C);
/* ET_PARENT_CHECKER2.ise_5_6_latest */
extern T0* T947f4(T0* C);
/* ET_PARENT_CHECKER2.set_fatal_error */
extern void T947f11(T0* C);
/* ET_SIGNATURE_CHECKER.process_class_type */
extern void T946f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_class_type_vtct_validity */
extern void T946f24(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_class_type */
extern void T945f10(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_actual_parameters_to_sorter */
extern void T945f11(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_class_type */
extern void T944f9(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_actual_parameters */
extern void T944f10(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.set_fatal_error */
extern void T944f11(T0* C);
/* ET_TYPE_CHECKER.process_class_type */
extern void T169f17(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_class_type_validity */
extern void T169f28(T0* C, T0* a1);
/* ET_TYPE_CHECKER.ise_5_6_latest */
extern T0* T169f12(T0* C);
/* ET_FORMAL_PARAMETER_CHECKER1.process_generic_class_type */
extern void T956f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_generic_class_type */
extern void T955f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_generic_class_type */
extern void T950f12(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_generic_class_type */
extern void T948f10(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_generic_class_type */
extern void T947f12(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_generic_class_type */
extern void T946f17(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_generic_class_type */
extern void T945f12(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_generic_class_type */
extern void T944f12(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_generic_class_type */
extern void T169f21(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_tuple_type */
extern void T956f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_tuple_type_constraint */
extern void T956f22(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_tuple_type */
extern void T955f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_tuple_type_validity */
extern void T955f22(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_gvhpr5a_error */
extern void T52f405(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr5a */
extern T0* T884c827(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T52f143(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr5a_error */
extern void T28f405(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr5_error */
extern T1 T28f143(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_tuple_type */
extern void T950f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_tuple_type */
extern void T948f11(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.check_tuple_type_constraint */
extern void T948f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_tuple_type */
extern void T947f17(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.check_tuple_type_validity */
extern void T947f21(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_tuple_type */
extern void T946f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_tuple_type_vtct_validity */
extern void T946f25(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_tuple_type */
extern void T945f13(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_tuple_type */
extern void T944f13(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_tuple_type */
extern void T169f22(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_tuple_type_validity */
extern void T169f30(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter */
extern void T956f28(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_formal_parameter */
extern void T955f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter */
extern void T950f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter */
extern void T948f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter */
extern void T947f13(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter */
extern void T946f22(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter */
extern void T945f14(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter */
extern void T944f14(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter */
extern void T169f26(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_constrained_formal_parameter */
extern void T956f29(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_constrained_formal_parameter */
extern void T955f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_constrained_formal_parameter */
extern void T950f14(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_constrained_formal_parameter */
extern void T948f22(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_constrained_formal_parameter */
extern void T947f14(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_constrained_formal_parameter */
extern void T946f23(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T945f15(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_constrained_formal_parameter */
extern void T944f15(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_constrained_formal_parameter */
extern void T169f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_n */
extern void T956f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_n_constraint */
extern void T956f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3b_error */
extern void T52f414(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3b */
extern T0* T884c836(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3b_error */
extern void T28f414(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_n */
extern void T955f18(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_n_validity */
extern void T955f23(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3b_error */
extern void T52f407(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3b */
extern T0* T884c829(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T52f145(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vhpr3b_error */
extern void T28f407(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vhpr3_error */
extern T1 T28f145(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_gvhpr4a_error */
extern void T52f406(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_gvhpr4a */
extern T0* T884c828(T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T52f144(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_gvhpr4a_error */
extern void T28f406(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_gvhpr4_error */
extern T1 T28f144(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_bit_n */
extern void T950f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_n */
extern void T948f12(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_n */
extern void T947f18(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_n */
extern void T946f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_n_vtct_validity */
extern void T946f26(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_n */
extern void T945f16(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_n */
extern void T944f16(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_bit_n */
extern void T169f23(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_n_validity */
extern void T169f31(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_bit_feature */
extern void T956f17(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_bit_feature_constraint */
extern void T956f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3a_error */
extern void T52f415(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3a */
extern T0* T884c837(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3a_error */
extern void T28f415(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_bit_feature */
extern void T955f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_bit_feature_validity */
extern void T955f24(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3a_error */
extern void T52f408(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3a */
extern T0* T884c830(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3a_error */
extern void T28f408(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_bit_feature */
extern void T950f19(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_bit_feature */
extern void T948f13(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_bit_feature */
extern void T947f19(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_bit_feature */
extern void T946f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.check_bit_feature_vtct_validity */
extern void T946f27(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_bit_feature */
extern void T945f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_bit_feature */
extern void T944f17(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_bit_feature */
extern void T944f21(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtbt0b_error */
extern void T52f423(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0b */
extern T0* T884c844(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0b_error */
extern void T28f423(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtbt0a_error */
extern void T52f422(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtbt0a */
extern T0* T884c843(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtbt0a_error */
extern void T28f422(T0* C, T0* a1, T0* a2);
/* ET_IDENTIFIER_TYPE_RESOLVER.error_handler */
extern T0* T944f5(T0* C);
/* ET_IDENTIFIER_TYPE_RESOLVER.check_bit_type */
extern void T944f23(T0* C, T0* a1);
/* ET_BIT_FEATURE.has_size_error */
extern T1 T549f36(T0* C);
/* ET_BIT_FEATURE.compute_size */
extern void T549f100(T0* C);
/* ET_BIT_FEATURE.resolve_identifier_type */
extern void T549f102(T0* C, T6 a1, T0* a2);
/* ET_TYPE_CHECKER.process_bit_feature */
extern void T169f24(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_feature_validity */
extern void T169f32(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_bit_type_validity */
extern void T169f34(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_feature */
extern void T956f18(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_type */
extern void T956f25(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_like_type_constraint */
extern void T956f30(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3c_error */
extern void T52f421(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vcfg3c */
extern T0* T884c842(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vcfg3c_error */
extern void T28f421(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER1.process_like_feature */
extern void T955f20(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_type */
extern void T955f21(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.check_like_type_validity */
extern void T955f25(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vhpr3c_error */
extern void T52f409(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vhpr3c */
extern T0* T884c831(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vhpr3c_error */
extern void T28f409(T0* C, T0* a1, T0* a2);
/* ET_PARENT_CHECKER3.process_like_feature */
extern void T950f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_feature */
extern void T948f14(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_feature */
extern void T947f20(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_feature */
extern void T946f21(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_feature */
extern void T945f18(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.add_like_feature_to_sorter */
extern void T945f21(T0* C, T0* a1);
/* ET_LIKE_FEATURE.index */
extern T6 T685f29(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force_relation */
extern void T1188f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put_indexed_relation */
extern void T1188f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].force */
extern void T1188f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].put */
extern void T1188f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].put */
extern void T1293f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_put */
extern void T1293f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_put */
extern void T1293f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_put */
extern void T1293f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_item */
extern T6 T1293f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_item */
extern T6 T1293f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_put */
extern void T1293f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].search_position */
extern void T1293f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].hash_position */
extern T6 T1293f11(T0* C, T0* a1);
/* ET_LIKE_FEATURE.hash_code */
extern T6 T685f60(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_item */
extern T0* T1293f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].resize */
extern void T1293f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].clashes_resize */
extern void T1293f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].key_storage_resize */
extern void T1293f50(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [ET_LIKE_IDENTIFIER].resize */
extern T0* T1367f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_LIKE_IDENTIFIER].resized_area */
extern T0* T1366f3(T0* C, T6 a1);
/* SPECIAL [ET_LIKE_IDENTIFIER].copy_data */
extern void T1366f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_LIKE_IDENTIFIER].move_data */
extern void T1366f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].overlapping_move */
extern void T1366f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_LIKE_IDENTIFIER].non_overlapping_move */
extern void T1366f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_resize */
extern void T1293f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].slots_resize */
extern void T1293f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_LIKE_IDENTIFIER].resize */
extern void T1252f17(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].capacity */
extern T6 T1188f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].count */
extern T6 T1188f9(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_LIKE_IDENTIFIER].index_of */
extern T6 T1188f8(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].found_item */
extern T6 T1293f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].item_storage_item */
extern T6 T1293f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].found */
extern T1 T1293f31(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_LIKE_IDENTIFIER].search */
extern void T1293f60(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_feature */
extern void T944f18(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.resolve_like_feature */
extern void T944f22(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vtat1a_error */
extern void T52f425(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vtat1a */
extern T0* T884c846(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vtat1a_error */
extern void T28f425(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vtat1b_error */
extern void T52f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtat1b */
extern T0* T884c845(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vtat1b_error */
extern void T28f424(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.resolve_like_argument */
extern void T685f68(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolve_like_feature */
extern void T685f67(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_feature */
extern void T169f25(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_feature_validity */
extern void T169f33(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_like_current */
extern void T956f19(T0* C, T0* a1);
/* ET_PARENT_CHECKER1.process_like_current */
extern void T955f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_like_current */
extern void T950f16(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_like_current */
extern void T948f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_like_current */
extern void T947f16(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_like_current */
extern void T946f15(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_like_current */
extern void T945f19(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_like_current */
extern void T944f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_like_current */
extern void T169f19(T0* C, T0* a1);
/* ET_TYPE_CHECKER.check_like_current_validity */
extern void T169f29(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assigner_instruction */
extern void T951f94(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assigner_instruction_validity */
extern void T951f153(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_qualified_call_instruction */
extern void T951f222(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ASSIGNER_INSTRUCTION.set_name */
extern void T691f17(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vbac2a_error */
extern void T52f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vbac2a */
extern T0* T884c764(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T52f111(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac2a_error */
extern void T28f342(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vbac2_error */
extern T1 T28f111(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_tuple_label_setter */
extern void T951f221(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vbac1a_error */
extern void T52f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vbac1a */
extern T0* T884c763(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T52f110(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vbac1a_error */
extern void T28f341(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vbac1_error */
extern T1 T28f110(T0* C, T0* a1);
/* ET_ASSIGNER_INSTRUCTION.set_source */
extern void T691f16(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_expressions_validity */
extern void T951f217(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assigner_instruction */
extern void T949f21(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assigner_instruction */
extern void T59f358(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assigner_instruction_validity */
extern void T59f374(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_qualified_call_instruction */
extern void T59f399(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_tuple_label_setter */
extern void T59f398(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_tuple_label_setter_dynamic_types */
extern void T59f455(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_expressions_validity */
extern void T59f394(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assigner_instruction */
extern void T56f631(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assigner_instruction */
extern void T56f643(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment */
extern void T951f96(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_validity */
extern void T951f155(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjar0a_error */
extern void T52f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vjar0a */
extern T0* T884c765(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vjar_error */
extern T1 T52f112(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjar0a_error */
extern void T28f343(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vjar_error */
extern T1 T28f112(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment */
extern void T951f224(T0* C, T0* a1);
/* ET_ASSIGNMENT.set_source */
extern void T697f8(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_writable_validity */
extern void T951f223(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_veen0a_error */
extern void T52f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0a */
extern T0* T884c796(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_veen_error */
extern T1 T52f129(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_veen0a_error */
extern void T28f374(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_veen_error */
extern T1 T28f129(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_veen0b_error */
extern void T52f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_veen0b */
extern T0* T884c795(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_veen0b_error */
extern void T28f373(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vjaw0b_error */
extern void T52f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0b */
extern T0* T884c794(T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T52f128(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjaw0b_error */
extern void T28f372(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.reportable_vjaw_error */
extern T1 T28f128(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjaw0c_error */
extern void T52f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0c */
extern T0* T884c793(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0c_error */
extern void T28f371(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_attribute_assignment_target */
extern void T951f256(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vjaw0a_error */
extern void T52f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vjaw0a */
extern T0* T884c792(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vjaw0a_error */
extern void T28f370(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FEATURE_CHECKER.report_local_assignment_target */
extern void T951f255(T0* C, T0* a1, T0* a2);
/* ET_FEATURE_CHECKER.report_result_assignment_target */
extern void T951f254(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_assignment */
extern void T949f22(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment */
extern void T59f359(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_validity */
extern void T59f375(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment */
extern void T59f401(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_dynamic_types */
extern void T59f459(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_writable_validity */
extern void T59f400(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_attribute_assignment_target */
extern void T59f458(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_local_assignment_target */
extern void T59f457(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_result_assignment_target */
extern void T59f456(T0* C, T0* a1);
/* ET_C_GENERATOR.process_assignment */
extern void T56f632(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment */
extern void T56f644(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_assignment_attempt */
extern void T951f97(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_assignment_attempt_validity */
extern void T951f156(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_assignment_attempt */
extern void T951f225(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vjrv0a_error */
extern void T52f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vjrv0a */
extern T0* T884c766(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T52f113(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vjrv0a_error */
extern void T28f344(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vjrv_error */
extern T1 T28f113(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.is_type_reference */
extern T1 T244f20(T0* C, T0* a1);
/* UT_VERSION.infix ">=" */
extern T1 T58f15(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.ise_5_7_0 */
extern unsigned char ge260os1587;
extern T0* ge260ov1587;
extern T0* T951f31(T0* C);
/* ET_PRECURSOR_CHECKER.process_assignment_attempt */
extern void T949f23(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_assignment_attempt */
extern void T59f360(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_assignment_attempt_validity */
extern void T59f376(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_assignment_attempt */
extern void T59f402(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_assignment_attempt_dynamic_types */
extern void T59f460(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.ise_5_7_0 */
extern T0* T59f192(T0* C);
/* ET_C_GENERATOR.process_assignment_attempt */
extern void T56f633(T0* C, T0* a1);
/* ET_C_GENERATOR.print_assignment_attempt */
extern void T56f645(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_if_instruction */
extern void T951f98(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_if_instruction_validity */
extern void T951f157(T0* C, T0* a1);
/* ET_ELSEIF_PART_LIST.item */
extern T0* T715f4(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_if_instruction */
extern void T949f33(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part_list */
extern void T949f85(T0* C, T0* a1);
/* ET_ELSEIF_PART.process */
extern void T718f6(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_elseif_part */
extern void T949f92(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_if_instruction */
extern void T59f361(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_if_instruction_validity */
extern void T59f377(T0* C, T0* a1);
/* ET_C_GENERATOR.process_if_instruction */
extern void T56f634(T0* C, T0* a1);
/* ET_C_GENERATOR.print_if_instruction */
extern void T56f646(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_inspect_instruction */
extern void T951f99(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_inspect_instruction_validity */
extern void T951f158(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vomb2a_error */
extern void T52f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vomb2a */
extern T0* T884c768(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T52f115(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb2a_error */
extern void T28f346(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vomb2_error */
extern T1 T28f115(T0* C, T0* a1);
/* ET_CHOICE_LIST.choice */
extern T0* T728f6(T0* C, T6 a1);
/* ET_CHOICE_LIST.item */
extern T0* T728f7(T0* C, T6 a1);
/* ET_WHEN_PART_LIST.item */
extern T0* T722f4(T0* C, T6 a1);
/* ET_NULL_ERROR_HANDLER.report_vomb1a_error */
extern void T52f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vomb1a */
extern T0* T884c767(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T52f114(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vomb1a_error */
extern void T28f345(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vomb1_error */
extern T1 T28f114(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_inspect_instruction */
extern void T949f34(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part_list */
extern void T949f86(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_when_part */
extern void T949f89(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_inspect_instruction */
extern void T59f362(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_inspect_instruction_validity */
extern void T59f378(T0* C, T0* a1);
/* ET_C_GENERATOR.process_inspect_instruction */
extern void T56f635(T0* C, T0* a1);
/* ET_C_GENERATOR.print_inspect_instruction */
extern void T56f647(T0* C, T0* a1);
/* ET_C_GENERATOR.integer_ */
extern T0* T56f287(T0* C);
/* ET_FEATURE_CHECKER.process_loop_instruction */
extern void T951f100(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_instruction_validity */
extern void T951f159(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_variant_validity */
extern void T951f227(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vave0a_error */
extern void T52f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vave0a */
extern T0* T884c797(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.reportable_vave_error */
extern T1 T52f130(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vave0a_error */
extern void T28f375(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.reportable_vave_error */
extern T1 T28f130(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_loop_invariant_validity */
extern void T951f226(T0* C, T0* a1);
/* ET_LOOP_INVARIANTS.assertion */
extern T0* T671f6(T0* C, T6 a1);
/* ET_LOOP_INVARIANTS.item */
extern T0* T671f7(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_loop_instruction */
extern void T949f24(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_loop_invariants */
extern void T949f82(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_loop_instruction */
extern void T59f363(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_instruction_validity */
extern void T59f379(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T59f404(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_variant_validity */
extern void T59f404p1(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T59f403(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_loop_invariant_validity */
extern void T59f403p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_loop_instruction */
extern void T56f636(T0* C, T0* a1);
/* ET_C_GENERATOR.print_loop_instruction */
extern void T56f648(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_debug_instruction */
extern void T951f101(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_debug_instruction_validity */
extern void T951f160(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_debug_instruction */
extern void T949f35(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_debug_instruction */
extern void T59f364(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T59f380(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_debug_instruction_validity */
extern void T59f380p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_debug_instruction */
extern void T56f637(T0* C, T0* a1);
/* ET_C_GENERATOR.print_debug_instruction */
extern void T56f649(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_check_instruction */
extern void T951f102(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_check_instruction_validity */
extern void T951f161(T0* C, T0* a1);
/* ET_CHECK_INSTRUCTION.assertion */
extern T0* T707f7(T0* C, T6 a1);
/* ET_CHECK_INSTRUCTION.item */
extern T0* T707f8(T0* C, T6 a1);
/* ET_PRECURSOR_CHECKER.process_check_instruction */
extern void T949f25(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_check_instruction */
extern void T59f365(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T59f381(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_check_instruction_validity */
extern void T59f381p1(T0* C, T0* a1);
/* ET_C_GENERATOR.process_check_instruction */
extern void T56f638(T0* C, T0* a1);
/* ET_C_GENERATOR.print_check_instruction */
extern void T56f650(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_bang_instruction */
extern void T951f103(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_bang_instruction_validity */
extern void T951f162(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_creation_instruction_validity */
extern void T951f228(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_creation_instruction */
extern void T951f257(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vgcc6e_error */
extern void T52f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc6e */
extern T0* T884c802(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.report_vgcc6e_error */
extern void T28f380(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.report_vgcc8b_error */
extern void T52f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_VALIDITY_ERROR.make_vgcc8b */
extern T0* T884c801(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_ERROR_HANDLER.report_vgcc8b_error */
extern void T28f379(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5, T0* a6);
/* ET_CREATE_INSTRUCTION.last_position */
extern T0* T713f7(T0* C);
/* ET_CREATE_INSTRUCTION.last_leaf */
extern T0* T713f9(T0* C);
/* ET_QUALIFIED_CALL.last_leaf */
extern T0* T710f5(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.last_leaf */
extern T0* T183f11(T0* C);
/* ET_BANG_INSTRUCTION.last_position */
extern T0* T709f7(T0* C);
/* ET_BANG_INSTRUCTION.last_leaf */
extern T0* T709f9(T0* C);
/* ET_NULL_ERROR_HANDLER.report_vgcc5b_error */
extern void T52f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc5b */
extern T0* T884c800(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CREATE_INSTRUCTION.position */
extern T0* T713f10(T0* C);
/* ET_BANG_INSTRUCTION.position */
extern T0* T709f10(T0* C);
/* ET_ERROR_HANDLER.report_vgcc5b_error */
extern void T28f378(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_NULL_ERROR_HANDLER.report_vgcc3a_error */
extern void T52f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_VALIDITY_ERROR.make_vgcc3a */
extern T0* T884c799(T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_NULL_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T52f131(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vgcc3a_error */
extern void T28f377(T0* C, T0* a1, T0* a2, T0* a3, T0* a4, T0* a5);
/* ET_ERROR_HANDLER.reportable_vgcc3_error */
extern T1 T28f131(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vgcc6d_error */
extern void T52f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vgcc6d */
extern T0* T884c798(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vgcc6d_error */
extern void T28f376(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_QUALIFIED_CALL.arguments_count */
extern T6 T710f4(T0* C);
/* ET_PRECURSOR_CHECKER.process_bang_instruction */
extern void T949f27(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_bang_instruction */
extern void T59f366(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_bang_instruction_validity */
extern void T59f382(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_creation_instruction_validity */
extern void T59f405(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_creation_instruction */
extern void T59f462(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.propagate_creation_dynamic_type */
extern void T59f506(T0* C, T0* a1, T0* a2);
/* ET_CREATE_INSTRUCTION.arguments */
extern T0* T713f8(T0* C);
/* ET_BANG_INSTRUCTION.arguments */
extern T0* T709f8(T0* C);
/* ET_C_GENERATOR.process_bang_instruction */
extern void T56f639(T0* C, T0* a1);
/* ET_C_GENERATOR.print_bang_instruction */
extern void T56f651(T0* C, T0* a1);
/* ET_C_GENERATOR.print_creation_instruction */
extern void T56f655(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_create_instruction */
extern void T951f104(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_create_instruction_validity */
extern void T951f163(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_create_instruction */
extern void T949f28(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_create_instruction */
extern void T59f367(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_create_instruction_validity */
extern void T59f383(T0* C, T0* a1);
/* ET_C_GENERATOR.process_create_instruction */
extern void T56f640(T0* C, T0* a1);
/* ET_C_GENERATOR.print_create_instruction */
extern void T56f652(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_precursor_instruction */
extern void T951f106(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_precursor_instruction_validity */
extern void T951f165(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_precursor_instruction */
extern void T951f232(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vdpr1a_error */
extern void T52f347(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vdpr1a */
extern T0* T884c769(T0* a1, T0* a2);
/* ET_ERROR_HANDLER.report_vdpr1a_error */
extern void T28f347(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_precursor_instruction */
extern void T949f31(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_precursor_instruction */
extern void T59f368(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_precursor_instruction_validity */
extern void T59f384(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_precursor_instruction */
extern void T59f406(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_precursor_instruction */
extern void T56f641(T0* C, T0* a1);
/* ET_C_GENERATOR.print_precursor_instruction */
extern void T56f653(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_static_call_instruction */
extern void T951f107(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_static_call_instruction_validity */
extern void T951f166(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.report_static_call_instruction */
extern void T951f233(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vkcn1a_error */
extern void T52f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_VALIDITY_ERROR.make_vkcn1a */
extern T0* T884c772(T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ERROR_HANDLER.report_vkcn1a_error */
extern void T28f350(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_STATIC_CALL_INSTRUCTION.arguments_count */
extern T6 T753f7(T0* C);
/* ET_PRECURSOR_CHECKER.process_static_call_instruction */
extern void T949f32(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_static_call_instruction */
extern void T59f369(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_static_call_instruction_validity */
extern void T59f385(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.report_static_call_instruction */
extern void T59f409(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_C_GENERATOR.process_static_call_instruction */
extern void T56f642(T0* C, T0* a1);
/* ET_C_GENERATOR.print_static_call_instruction */
extern void T56f654(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.process_formal_parameter_type */
extern void T956f20(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER1.check_formal_parameter_type_constraint */
extern void T956f26(T0* C, T0* a1, T0* a2);
/* ET_NULL_ERROR_HANDLER.report_vcfg3i_error */
extern void T52f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vtct0b */
extern T0* T884c838(T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.upper_name */
extern T0* T913f5(T0* C);
/* ET_ERROR_HANDLER.report_vcfg3i_error */
extern void T28f420(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3h_error */
extern void T52f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3h */
extern T0* T884c841(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3h_error */
extern void T28f419(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3f_error */
extern void T52f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3f_error */
extern void T28f418(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NULL_ERROR_HANDLER.report_vcfg3e_error */
extern void T52f417(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3e */
extern T0* T884c840(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3e_error */
extern void T28f417(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force_relation */
extern void T1197f16(T0* C, T0* a1, T0* a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put_indexed_relation */
extern void T1197f18(T0* C, T6 a1, T6 a2);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].force */
extern void T1197f17(T0* C, T0* a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].put */
extern void T1197f19(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].put */
extern void T1303f38(T0* C, T6 a1, T0* a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_put */
extern void T1303f54(T0* C, T0* a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_put */
extern void T1303f47(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_put */
extern void T1303f48(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_item */
extern T6 T1303f12(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_item */
extern T6 T1303f8(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_put */
extern void T1303f53(T0* C, T6 a1, T6 a2);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].search_position */
extern void T1303f52(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].hash_position */
extern T6 T1303f11(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.hash_code */
extern T6 T536f63(T0* C);
/* ET_FORMAL_PARAMETER.hash_code */
extern T6 T528f61(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_item */
extern T0* T1303f10(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].resize */
extern void T1303f37(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].clashes_resize */
extern void T1303f51(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].key_storage_resize */
extern void T1303f50(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_resize */
extern void T1303f49(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].slots_resize */
extern void T1303f46(T0* C, T6 a1);
/* DS_ARRAYED_LIST [ET_FORMAL_PARAMETER].resize */
extern void T1256f18(T0* C, T6 a1);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].capacity */
extern T6 T1197f10(T0* C);
/* DS_HASH_TOPOLOGICAL_SORTER [ET_FORMAL_PARAMETER].index_of */
extern T6 T1197f9(T0* C, T0* a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].found_item */
extern T6 T1303f32(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].item_storage_item */
extern T6 T1303f33(T0* C, T6 a1);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].found */
extern T1 T1303f31(T0* C);
/* DS_HASH_TABLE [INTEGER, ET_FORMAL_PARAMETER].search */
extern void T1303f60(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vcfg3d_error */
extern void T52f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_VALIDITY_ERROR.make_vcfg3d */
extern T0* T884c839(T0* a1, T0* a2, T0* a3);
/* ET_ERROR_HANDLER.report_vcfg3d_error */
extern void T28f416(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_PARENT_CHECKER1.process_formal_parameter_type */
extern void T955f15(T0* C, T0* a1);
/* ET_PARENT_CHECKER3.process_formal_parameter_type */
extern void T950f15(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_CHECKER2.process_formal_parameter_type */
extern void T948f16(T0* C, T0* a1);
/* ET_PARENT_CHECKER2.process_formal_parameter_type */
extern void T947f15(T0* C, T0* a1);
/* ET_SIGNATURE_CHECKER.process_formal_parameter_type */
extern void T946f16(T0* C, T0* a1);
/* ET_ANCHORED_TYPE_CHECKER.process_formal_parameter_type */
extern void T945f20(T0* C, T0* a1);
/* ET_IDENTIFIER_TYPE_RESOLVER.process_formal_parameter_type */
extern void T944f20(T0* C, T0* a1);
/* ET_TYPE_CHECKER.process_formal_parameter_type */
extern void T169f20(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_expression */
extern void T951f277(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_expression_validity */
extern void T951f281(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_expression */
extern void T949f80(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_expression */
extern void T59f516(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_expression_validity */
extern void T59f551(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_expression */
extern void T56f659(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_expression */
extern void T56f664(T0* C, T0* a1);
/* ET_C_GENERATOR.print_convert_to_expression */
extern void T56f665(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_infix_cast_expression */
extern void T951f278(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_infix_cast_expression_validity */
extern void T951f282(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_infix_cast_expression */
extern void T949f81(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_infix_cast_expression */
extern void T59f517(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_infix_cast_expression_validity */
extern void T59f552(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_infix_cast_expression */
extern void T56f658(T0* C, T0* a1);
/* ET_C_GENERATOR.print_infix_cast_expression */
extern void T56f663(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_call_instruction */
extern void T951f279(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_call_instruction_validity */
extern void T951f283(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_qualified_call_instruction_validity */
extern void T951f285(T0* C, T0* a1);
/* ET_CALL_INSTRUCTION.arguments_count */
extern T6 T184f6(T0* C);
/* ET_CALL_INSTRUCTION.is_qualified_call */
extern T1 T184f5(T0* C);
/* ET_PRECURSOR_CHECKER.process_call_instruction */
extern void T949f29(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_call_instruction */
extern void T59f578(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_call_instruction_validity */
extern void T59f581(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_qualified_call_instruction_validity */
extern void T59f584(T0* C, T0* a1);
/* ET_C_GENERATOR.process_call_instruction */
extern void T56f656(T0* C, T0* a1);
/* ET_C_GENERATOR.print_call_instruction */
extern void T56f661(T0* C, T0* a1);
/* ET_C_GENERATOR.print_unqualified_call_instruction */
extern void T56f666(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_retry_instruction */
extern void T951f280(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_retry_instruction_validity */
extern void T951f284(T0* C, T0* a1);
/* ET_NULL_ERROR_HANDLER.report_vxrt0a_error */
extern void T52f426(T0* C, T0* a1, T0* a2);
/* ET_VALIDITY_ERROR.make_vxrt0a */
extern T0* T884c847(T0* a1, T0* a2);
/* ET_RETRY_INSTRUCTION.position */
extern T0* T460f9(T0* C);
/* ET_NULL_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T52f149(T0* C, T0* a1);
/* ET_ERROR_HANDLER.report_vxrt0a_error */
extern void T28f426(T0* C, T0* a1, T0* a2);
/* ET_ERROR_HANDLER.reportable_vxrt_error */
extern T1 T28f149(T0* C, T0* a1);
/* ET_PRECURSOR_CHECKER.process_retry_instruction */
extern void T949f26(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_retry_instruction */
extern void T59f579(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_retry_instruction_validity */
extern void T59f582(T0* C, T0* a1);
/* ET_C_GENERATOR.process_retry_instruction */
extern void T56f657(T0* C, T0* a1);
/* ET_C_GENERATOR.print_retry_instruction */
extern void T56f662(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.process_convert_to_expression */
extern void T951f286(T0* C, T0* a1);
/* ET_FEATURE_CHECKER.check_convert_to_expression_validity */
extern void T951f287(T0* C, T0* a1, T0* a2);
/* ET_PRECURSOR_CHECKER.process_convert_to_expression */
extern void T949f79(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.process_convert_to_expression */
extern void T59f580(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.check_convert_to_expression_validity */
extern void T59f583(T0* C, T0* a1, T0* a2);
/* ET_C_GENERATOR.process_convert_to_expression */
extern void T56f660(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.put_target */
extern void T898f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET.put_target */
extern void T303f12(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TARGET_LIST.force_last */
extern void T1236f9(T0* C, T0* a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].resize */
extern T0* T1358f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [ET_DYNAMIC_TARGET].resized_area */
extern T0* T1357f3(T0* C, T6 a1);
/* SPECIAL [ET_DYNAMIC_TARGET].copy_data */
extern void T1357f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [ET_DYNAMIC_TARGET].move_data */
extern void T1357f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].overlapping_move */
extern void T1357f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].non_overlapping_move */
extern void T1357f8(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [ET_DYNAMIC_TARGET].make */
extern T0* T1357c4(T6 a1);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].make */
extern T0* T1358f1(T0* C, T6 a1);
/* TO_SPECIAL [ET_DYNAMIC_TARGET].make_area */
extern T0* T1402c2(T6 a1);
/* ET_DYNAMIC_TARGET_LIST.fixed_array */
extern unsigned char ge937os15099;
extern T0* ge937ov15099;
extern T0* T1236f5(T0* C);
/* KL_SPECIAL_ROUTINES [ET_DYNAMIC_TARGET].default_create */
extern T0* T1358c3(void);
/* ET_DYNAMIC_TARGET_LIST.capacity */
extern T6 T1236f6(T0* C);
/* ET_DYNAMIC_TARGET_LIST.has */
extern T1 T1236f1(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.put_last */
extern void T1236f8(T0* C, T0* a1);
/* ET_DYNAMIC_TARGET_LIST.make_with_capacity */
extern T0* T1236c7(T6 a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.put_target */
extern void T222f15(T0* C, T0* a1, T0* a2);
/* ET_INFIX_FREE_NAME.reset */
extern void T645f62(T0* C);
/* ET_INFIX_NAME.reset */
extern void T644f91(T0* C);
/* ET_PREFIX_FREE_NAME.reset */
extern void T643f62(T0* C);
/* ET_PREFIX_NAME.reset */
extern void T642f63(T0* C);
/* ET_IDENTIFIER.reset */
extern void T119f107(T0* C);
/* ET_INFIX_FREE_NAME.set_seed */
extern void T645f63(T0* C, T6 a1);
/* ET_INFIX_NAME.set_seed */
extern void T644f92(T0* C, T6 a1);
/* ET_PREFIX_FREE_NAME.set_seed */
extern void T643f63(T0* C, T6 a1);
/* ET_PREFIX_NAME.set_seed */
extern void T642f64(T0* C, T6 a1);
/* ET_IDENTIFIER.set_seed */
extern void T119f96(T0* C, T6 a1);
/* ET_FORMAL_PARAMETER_TYPE.append_to_string */
extern void T913f56(T0* C, T0* a1);
/* ET_LIKE_CURRENT.append_to_string */
extern void T687f60(T0* C, T0* a1);
/* ET_LIKE_FEATURE.append_to_string */
extern void T685f65(T0* C, T0* a1);
/* ET_BIT_FEATURE.append_to_string */
extern void T549f99(T0* C, T0* a1);
/* ET_BIT_N.append_to_string */
extern void T548f98(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.append_to_string */
extern void T536f70(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.append_to_string */
extern void T528f66(T0* C, T0* a1);
/* ET_TUPLE_TYPE.append_to_string */
extern void T288f90(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.append_to_string */
extern void T160f25(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.append_to_string */
extern void T161f96(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.append_to_string */
extern void T396f28(T0* C, T0* a1);
/* ET_CLASS_TYPE.append_to_string */
extern void T159f94(T0* C, T0* a1);
/* ET_CLASS.append_to_string */
extern void T55f162(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.reset */
extern void T913f57(T0* C);
/* ET_LIKE_CURRENT.reset */
extern void T687f61(T0* C);
/* ET_LIKE_FEATURE.reset */
extern void T685f64(T0* C);
/* ET_BIT_FEATURE.reset */
extern void T549f98(T0* C);
/* ET_BIT_N.reset */
extern void T548f99(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reset */
extern void T536f71(T0* C);
/* ET_CONSTRAINT_CREATOR.reset */
extern void T537f14(T0* C);
/* ET_FORMAL_PARAMETER.reset */
extern void T528f67(T0* C);
/* ET_TUPLE_TYPE.reset */
extern void T288f91(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.process */
extern void T913f58(T0* C, T0* a1);
/* ET_LIKE_CURRENT.process */
extern void T687f62(T0* C, T0* a1);
/* ET_LIKE_FEATURE.process */
extern void T685f66(T0* C, T0* a1);
/* ET_BIT_FEATURE.process */
extern void T549f101(T0* C, T0* a1);
/* ET_BIT_N.process */
extern void T548f100(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.process */
extern void T536f72(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.process */
extern void T528f68(T0* C, T0* a1);
/* ET_TUPLE_TYPE.process */
extern void T288f92(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_frozen_keyword */
extern void T638f80(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_frozen_keyword */
extern void T637f79(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_frozen_keyword */
extern void T302f75(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_frozen_keyword */
extern void T297f79(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.reset */
extern void T638f81(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_after_features_flattened */
extern void T638f95(T0* C);
/* ET_ONCE_PROCEDURE.reset */
extern void T637f80(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T637f94(T0* C);
/* ET_ONCE_PROCEDURE.reset_after_features_flattened */
extern void T637f94p1(T0* C);
/* ET_DEFERRED_PROCEDURE.reset */
extern void T302f76(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_after_features_flattened */
extern void T302f91(T0* C);
/* ET_DO_PROCEDURE.reset */
extern void T297f80(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T297f94(T0* C);
/* ET_DO_PROCEDURE.reset_after_features_flattened */
extern void T297f94p1(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_implementation_checked */
extern void T638f85(T0* C);
/* ET_ONCE_PROCEDURE.reset_implementation_checked */
extern void T637f84(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_implementation_checked */
extern void T302f80(T0* C);
/* ET_DO_PROCEDURE.reset_implementation_checked */
extern void T297f84(T0* C);
/* ET_EXTERNAL_PROCEDURE.reset_assertions_checked */
extern void T638f86(T0* C);
/* ET_ONCE_PROCEDURE.reset_assertions_checked */
extern void T637f85(T0* C);
/* ET_DEFERRED_PROCEDURE.reset_assertions_checked */
extern void T302f81(T0* C);
/* ET_DO_PROCEDURE.reset_assertions_checked */
extern void T297f85(T0* C);
/* ET_DEFERRED_FUNCTION.set_frozen_keyword */
extern void T632f77(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_frozen_keyword */
extern void T631f81(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_frozen_keyword */
extern void T629f81(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_frozen_keyword */
extern void T226f69(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_frozen_keyword */
extern void T225f71(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_frozen_keyword */
extern void T223f71(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_frozen_keyword */
extern void T163f82(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.reset */
extern void T632f78(T0* C);
/* ET_DEFERRED_FUNCTION.reset */
extern void T632f78p1(T0* C);
/* ET_DEFERRED_FUNCTION.reset_after_features_flattened */
extern void T632f93(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T631f82(T0* C);
/* ET_ONCE_FUNCTION.reset */
extern void T631f82p1(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T631f96(T0* C);
/* ET_ONCE_FUNCTION.reset_after_features_flattened */
extern void T631f96p1(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T629f82(T0* C);
/* ET_DO_FUNCTION.reset */
extern void T629f82p1(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T629f96(T0* C);
/* ET_DO_FUNCTION.reset_after_features_flattened */
extern void T629f96p1(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T226f70(T0* C);
/* ET_ATTRIBUTE.reset */
extern void T226f70p1(T0* C);
/* ET_ATTRIBUTE.reset_after_features_flattened */
extern void T226f80(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T225f72(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset */
extern void T225f72p1(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_after_features_flattened */
extern void T225f84(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T223f72(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset */
extern void T223f72p1(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_after_features_flattened */
extern void T223f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T163f83(T0* C);
/* ET_EXTERNAL_FUNCTION.reset */
extern void T163f83p1(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_after_features_flattened */
extern void T163f93(T0* C);
/* ET_DEFERRED_FUNCTION.reset_implementation_checked */
extern void T632f82(T0* C);
/* ET_ONCE_FUNCTION.reset_implementation_checked */
extern void T631f86(T0* C);
/* ET_DO_FUNCTION.reset_implementation_checked */
extern void T629f86(T0* C);
/* ET_ATTRIBUTE.reset_implementation_checked */
extern void T226f82(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_implementation_checked */
extern void T225f86(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_implementation_checked */
extern void T223f85(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_implementation_checked */
extern void T163f95(T0* C);
/* ET_DEFERRED_FUNCTION.reset_assertions_checked */
extern void T632f83(T0* C);
/* ET_ONCE_FUNCTION.reset_assertions_checked */
extern void T631f87(T0* C);
/* ET_DO_FUNCTION.reset_assertions_checked */
extern void T629f87(T0* C);
/* ET_ATTRIBUTE.reset_assertions_checked */
extern void T226f81(T0* C);
/* ET_UNIQUE_ATTRIBUTE.reset_assertions_checked */
extern void T225f85(T0* C);
/* ET_CONSTANT_ATTRIBUTE.reset_assertions_checked */
extern void T223f84(T0* C);
/* ET_EXTERNAL_FUNCTION.reset_assertions_checked */
extern void T163f94(T0* C);
/* ET_GENERIC_CLASS_TYPE.process */
extern void T161f98(T0* C, T0* a1);
/* ET_CLASS_TYPE.process */
extern void T159f96(T0* C, T0* a1);
/* ET_CLASS.process */
extern void T55f182(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.reset */
extern void T161f97(T0* C);
/* ET_CLASS_TYPE.reset */
extern void T159f95(T0* C);
/* ET_CLASS.reset_type */
extern void T55f207(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_id */
extern void T205f39(T0* C, T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_id */
extern void T204f39(T0* C, T6 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_id */
extern void T203f38(T0* C, T6 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_id */
extern void T197f38(T0* C, T6 a1);
/* ET_DYNAMIC_TYPE.set_id */
extern void T144f35(T0* C, T6 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_next_type */
extern void T205f37(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_next_type */
extern void T204f37(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_next_type */
extern void T203f36(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_next_type */
extern void T197f36(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.set_next_type */
extern void T144f34(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_target */
extern void T205f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.put_target */
extern void T204f40(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.put_target */
extern void T203f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.put_target */
extern void T197f39(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.put_target */
extern void T144f36(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_static */
extern void T205f42(T0* C, T1 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.set_static */
extern void T204f42(T0* C, T1 a1);
/* ET_DYNAMIC_SPECIAL_TYPE.set_static */
extern void T203f41(T0* C, T1 a1);
/* ET_DYNAMIC_TUPLE_TYPE.set_static */
extern void T197f41(T0* C, T1 a1);
/* ET_DYNAMIC_TYPE.set_static */
extern void T144f38(T0* C, T1 a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.set_alive */
extern void T205f36(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.set_alive */
extern void T204f36(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.set_alive */
extern void T203f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.set_alive */
extern void T197f35(T0* C);
/* ET_DYNAMIC_TYPE.set_alive */
extern void T144f33(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_procedure_call */
extern void T205f43(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_procedure_call */
extern void T204f43(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_procedure_call */
extern void T203f42(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_procedure_call */
extern void T197f42(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_procedure_call */
extern void T144f39(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.put_query_call */
extern void T205f44(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.put_query_call */
extern void T204f44(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.put_query_call */
extern void T203f43(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.put_query_call */
extern void T197f43(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.put_query_call */
extern void T144f40(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start */
extern void T314f2(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start */
extern void T311f26(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_make */
extern void T311f36(T0* C);
/* XM_NAMESPACE_RESOLVER.new_string_queue */
extern T0* T311f12(T0* C);
/* DS_LINKED_QUEUE [STRING].make */
extern T0* T967c6(void);
/* XM_NAMESPACE_RESOLVER_CONTEXT.make */
extern T0* T965c10(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1200c9(void);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].new_cursor */
extern T0* T1200f1(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1201c7(T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start */
extern void T90f12(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_equal */
extern T0* T1220c31(T6 a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].default_create */
extern T0* T1354c2(void);
/* DS_HASH_SET [XM_NAMESPACE].make */
extern void T1220f34(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_cursor */
extern T0* T1220f23(T0* C);
/* DS_HASH_SET_CURSOR [XM_NAMESPACE].make */
extern T0* T1355c3(T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].unset_found_item */
extern void T1220f35(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].make_slots */
extern void T1220f43(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].special_integer_ */
extern T0* T1220f29(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].new_modulus */
extern T6 T1220f20(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_clashes */
extern void T1220f42(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_key_storage */
extern void T1220f41(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].make_item_storage */
extern void T1220f40(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].make */
extern T0* T1356f1(T0* C, T6 a1);
/* TO_SPECIAL [XM_NAMESPACE].make_area */
extern T0* T1401c2(T6 a1);
/* SPECIAL [XM_NAMESPACE].make */
extern T0* T1353c4(T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].default_create */
extern T0* T1356c3(void);
/* XM_DOCUMENT.make */
extern T0* T84c15(void);
/* XM_DOCUMENT.make_with_root_named */
extern void T84f16(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.force_last */
extern void T84f18(T0* C, T0* a1);
/* XM_DOCUMENT.force_last */
extern void T84f18p1(T0* C, T0* a1);
/* DS_LINKABLE [XM_NODE].make */
extern T0* T1319c3(T0* a1);
/* XM_DOCUMENT.is_empty */
extern T1 T84f6(T0* C);
/* XM_DOCUMENT.before_addition */
extern void T84f19(T0* C, T0* a1);
/* XM_ELEMENT.equality_delete */
extern void T85f39(T0* C, T0* a1);
/* DS_LINKED_LIST_CURSOR [XM_NODE].remove */
extern void T259f14(T0* C);
/* XM_DOCUMENT.remove_at_cursor */
extern void T84f26(T0* C, T0* a1);
/* XM_DOCUMENT.move_all_cursors */
extern void T84f33(T0* C, T0* a1, T0* a2);
/* XM_DOCUMENT.set_last_cell */
extern void T84f32(T0* C, T0* a1);
/* XM_DOCUMENT.remove_last */
extern void T84f31(T0* C);
/* XM_DOCUMENT.move_last_cursors_after */
extern void T84f36(T0* C);
/* XM_DOCUMENT.wipe_out */
extern void T84f34(T0* C);
/* XM_DOCUMENT.move_all_cursors_after */
extern void T84f37(T0* C);
/* XM_DOCUMENT.remove_first */
extern void T84f30(T0* C);
/* XM_DOCUMENT.set_first_cell */
extern void T84f35(T0* C, T0* a1);
/* XM_DOCUMENT.equality_delete */
extern void T84f21(T0* C, T0* a1);
/* XM_DOCUMENT.new_cursor */
extern T0* T84f5(T0* C);
/* XM_DOCUMENT.list_make */
extern void T84f17(T0* C);
/* XM_ELEMENT.make */
extern T0* T85c29(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.list_make */
extern void T85f33(T0* C);
/* XM_DOCUMENT.default_ns */
extern unsigned char ge1233os9556;
extern T0* ge1233ov9556;
extern T0* T84f3(T0* C);
/* XM_NAMESPACE.make_default */
extern T0* T1224c8(void);
/* XM_NAMESPACE.make */
extern void T1224f7(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE.make */
extern T0* T1224c7(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T89f6(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start */
extern void T89f6p1(T0* C);
/* XM_CALLBACKS_NULL.on_comment */
extern void T314f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_comment */
extern void T311f28(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_comment */
extern void T90f14(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.handle_position */
extern void T90f22(T0* C, T0* a1);
/* XM_POSITION_TABLE.put */
extern void T86f4(T0* C, T0* a1, T0* a2);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].put_last */
extern void T901f14(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].put_right */
extern void T1245f4(T0* C, T0* a1);
/* DS_LINKABLE [DS_PAIR [XM_POSITION, XM_NODE]].make */
extern T0* T1245c3(T0* a1);
/* DS_LINKED_LIST [DS_PAIR [XM_POSITION, XM_NODE]].is_empty */
extern T1 T901f5(T0* C);
/* DS_PAIR [XM_POSITION, XM_NODE].make */
extern T0* T902c3(T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.is_position_table_enabled */
extern T1 T90f8(T0* C);
/* XM_COMMENT.make_last */
extern T0* T1221c4(T0* a1, T0* a2);
/* XM_ELEMENT.force_last */
extern void T85f28(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T85f28p1(T0* C, T0* a1);
/* XM_ELEMENT.force_last */
extern void T85f28p0(T0* C, T0* a1);
/* XM_ELEMENT.before_addition */
extern void T85f34(T0* C, T0* a1);
/* XM_ELEMENT.last */
extern T0* T85f17(T0* C);
/* XM_ELEMENT.is_empty */
extern T1 T85f16(T0* C);
/* XM_COMMENT.make_last_in_document */
extern T0* T1221c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T89f8(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_comment */
extern void T89f8p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_processing_instruction */
extern void T314f5(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.on_processing_instruction */
extern void T311f29(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_TO_TREE_FILTER.on_processing_instruction */
extern void T90f15(T0* C, T0* a1, T0* a2);
/* XM_PROCESSING_INSTRUCTION.make_last */
extern T0* T1222c5(T0* a1, T0* a2, T0* a3);
/* XM_PROCESSING_INSTRUCTION.make_last_in_document */
extern T0* T1222c4(T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T89f9(T0* C, T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_processing_instruction */
extern void T89f9p1(T0* C, T0* a1, T0* a2);
/* XM_CALLBACKS_NULL.on_content */
extern void T314f6(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_content */
extern void T311f30(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_content */
extern void T90f16(T0* C, T0* a1);
/* XM_CHARACTER_DATA.make_last */
extern T0* T1223c3(T0* a1, T0* a2);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T89f10(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_content */
extern void T89f10p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_start_tag */
extern void T314f9(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_start_tag */
extern void T311f33(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.push */
extern void T965f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].force_last */
extern void T1200f11(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].put_right */
extern void T1304f5(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].attach_left */
extern void T1304f6(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].make */
extern T0* T1304c4(T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].is_empty */
extern T1 T1200f6(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.new_string_string_table */
extern T0* T965f8(T0* C);
/* DS_HASH_TABLE [STRING, STRING].set_equality_tester */
extern void T40f61(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.string_equality_tester */
extern T0* T965f9(T0* C);
/* DS_HASH_TABLE [STRING, STRING].make_map_default */
extern T0* T40c60(void);
/* DS_HASH_TABLE [STRING, STRING].default_capacity */
extern T6 T40f36(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag */
extern void T90f17(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_last */
extern T0* T85c27(T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.make_root */
extern T0* T85c26(T0* a1, T0* a2, T0* a3);
/* XM_DOCUMENT.set_root_element */
extern void T84f20(T0* C, T0* a1);
/* XM_DOCUMENT.remove_previous_root_element */
extern void T84f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.new_namespace */
extern T0* T90f7(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].force_last */
extern void T1220f32(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_put */
extern void T1220f39(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].clashes_put */
extern void T1220f38(T0* C, T6 a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].slots_item */
extern T6 T1220f13(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].hash_position */
extern T6 T1220f11(T0* C, T0* a1);
/* XM_NAMESPACE.hash_code */
extern T6 T1224f5(T0* C);
/* DS_HASH_SET [XM_NAMESPACE].resize */
extern void T1220f37(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_resize */
extern void T1220f47(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_resize */
extern void T1220f46(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_resize */
extern void T1220f45(T0* C, T6 a1);
/* KL_SPECIAL_ROUTINES [XM_NAMESPACE].resize */
extern T0* T1356f2(T0* C, T0* a1, T6 a2);
/* SPECIAL [XM_NAMESPACE].resized_area */
extern T0* T1353f3(T0* C, T6 a1);
/* SPECIAL [XM_NAMESPACE].copy_data */
extern void T1353f6(T0* C, T0* a1, T6 a2, T6 a3, T6 a4);
/* SPECIAL [XM_NAMESPACE].move_data */
extern void T1353f7(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].overlapping_move */
extern void T1353f9(T0* C, T6 a1, T6 a2, T6 a3);
/* SPECIAL [XM_NAMESPACE].non_overlapping_move */
extern void T1353f8(T0* C, T6 a1, T6 a2, T6 a3);
/* DS_HASH_SET [XM_NAMESPACE].key_storage_item */
extern T0* T1220f18(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_item */
extern T0* T1220f5(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].clashes_item */
extern T6 T1220f19(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].slots_resize */
extern void T1220f44(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].new_capacity */
extern T6 T1220f10(T0* C, T6 a1);
/* DS_HASH_SET [XM_NAMESPACE].item_storage_put */
extern void T1220f36(T0* C, T0* a1, T6 a2);
/* DS_HASH_SET [XM_NAMESPACE].search_position */
extern void T1220f33(T0* C, T0* a1);
/* KL_EQUALITY_TESTER [XM_NAMESPACE].test */
extern T1 T1354f1(T0* C, T0* a1, T0* a2);
/* DS_HASH_SET [XM_NAMESPACE].key_equality_tester */
extern T0* T1220f17(T0* C);
/* XM_NAMESPACE.same_prefix */
extern T1 T1224f6(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].item */
extern T0* T1220f2(T0* C, T0* a1);
/* DS_HASH_SET [XM_NAMESPACE].has */
extern T1 T1220f1(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T89f11(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag */
extern void T89f11p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_end_tag */
extern void T314f8(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T311f32(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.pop */
extern void T965f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].remove_last */
extern void T1200f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].set_last_cell */
extern void T1200f14(T0* C, T0* a1);
/* DS_BILINKABLE [DS_HASH_TABLE [STRING, STRING]].forget_right */
extern void T1304f7(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].move_last_cursors_after */
extern void T1200f13(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_next_cursor */
extern void T1201f12(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_after */
extern void T1201f11(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].wipe_out */
extern void T1200f12(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].move_all_cursors_after */
extern void T1200f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve_default */
extern T0* T965f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_pseudo_prefix */
extern unsigned char ge1207os24258;
extern T0* ge1207ov24258;
extern T0* T965f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_end_tag */
extern void T311f32p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_NAMESPACE_RESOLVER_CONTEXT.resolve */
extern T0* T965f2(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].back */
extern void T1201f10(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_back */
extern void T1200f18(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].add_traversing_cursor */
extern void T1200f19(T0* C, T0* a1);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].remove_traversing_cursor */
extern void T1200f20(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set */
extern void T1201f13(T0* C, T0* a1, T1 a2, T1 a3);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].go_before */
extern void T1201f9(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_go_before */
extern void T1200f17(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].set_before */
extern void T1201f14(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_off */
extern T1 T1200f8(T0* C, T0* a1);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].item */
extern T0* T1201f2(T0* C);
/* DS_BILINKED_LIST_CURSOR [DS_HASH_TABLE [STRING, STRING]].finish */
extern void T1201f8(T0* C);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].cursor_finish */
extern void T1200f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER_CONTEXT.default_namespace */
extern unsigned char ge1207os24259;
extern T0* ge1207ov24259;
extern T0* T965f6(T0* C);
/* XM_NAMESPACE_RESOLVER.has_prefix */
extern T1 T311f4(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_end_tag */
extern void T90f19(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_ELEMENT.parent_element */
extern T0* T85f2(T0* C);
/* XM_DOCUMENT.process */
extern void T84f22(T0* C, T0* a1);
/* XM_NODE_TYPER.process_document */
extern void T1320f12(T0* C, T0* a1);
/* XM_ELEMENT.is_root_node */
extern T1 T85f22(T0* C);
/* XM_DOCUMENT.is_root_node */
extern T1 T84f10(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T89f13(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_STOP_ON_ERROR_FILTER.on_end_tag */
extern void T89f13p1(T0* C, T0* a1, T0* a2, T0* a3);
/* XM_CALLBACKS_NULL.on_attribute */
extern void T314f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER.on_attribute */
extern void T311f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add */
extern void T965f14(T0* C, T0* a1, T0* a2);
/* DS_HASH_TABLE [STRING, STRING].force_new */
extern void T40f62(T0* C, T0* a1, T0* a2);
/* DS_BILINKED_LIST [DS_HASH_TABLE [STRING, STRING]].last */
extern T0* T1200f3(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.shallow_has */
extern T1 T965f4(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.attributes_force */
extern void T311f38(T0* C, T0* a1, T0* a2, T0* a3);
/* DS_LINKED_QUEUE [STRING].force */
extern void T967f7(T0* C, T0* a1);
/* DS_LINKED_QUEUE [STRING].is_empty */
extern T1 T967f2(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.add_default */
extern void T965f13(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.is_xmlns */
extern T1 T311f8(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.same_string */
extern T1 T311f21(T0* C, T0* a1, T0* a2);
/* XM_NAMESPACE_RESOLVER.string_equality_tester */
extern T0* T311f24(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns */
extern unsigned char ge1174os17825;
extern T0* ge1174ov17825;
extern T0* T311f20(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_attribute */
extern void T90f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_ATTRIBUTE.make_last */
extern T0* T258c5(T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T89f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_STOP_ON_ERROR_FILTER.on_attribute */
extern void T89f15p1(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* XM_CALLBACKS_NULL.on_finish */
extern void T314f3(T0* C);
/* XM_NAMESPACE_RESOLVER.on_finish */
extern void T311f27(T0* C);
/* XM_CALLBACKS_TO_TREE_FILTER.on_finish */
extern void T90f13(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T89f7(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_finish */
extern void T89f7p1(T0* C);
/* XM_CALLBACKS_NULL.on_start_tag_finish */
extern void T314f7(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T311f31(T0* C);
/* XM_NAMESPACE_RESOLVER.on_start_tag_finish */
extern void T311f31p1(T0* C);
/* XM_NAMESPACE_RESOLVER.string_ */
extern T0* T311f6(T0* C);
/* XM_NAMESPACE_RESOLVER.on_delayed_attributes */
extern void T311f37(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_remove */
extern void T311f39(T0* C);
/* DS_LINKED_QUEUE [STRING].remove */
extern void T967f8(T0* C);
/* DS_LINKED_QUEUE [STRING].wipe_out */
extern void T967f9(T0* C);
/* XM_NAMESPACE_RESOLVER.unprefixed_attribute_namespace */
extern T0* T311f19(T0* C);
/* XM_NAMESPACE_RESOLVER.default_namespace */
extern unsigned char ge1174os17824;
extern T0* ge1174ov17824;
extern T0* T311f23(T0* C);
/* XM_NAMESPACE_RESOLVER.xmlns_namespace */
extern unsigned char ge1174os17832;
extern T0* ge1174ov17832;
extern T0* T311f18(T0* C);
/* XM_NAMESPACE_RESOLVER.xml_prefix_namespace */
extern unsigned char ge1174os17831;
extern T0* ge1174ov17831;
extern T0* T311f17(T0* C);
/* XM_NAMESPACE_RESOLVER.is_xml */
extern T1 T311f16(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.xml_prefix */
extern unsigned char ge1174os17826;
extern T0* ge1174ov17826;
extern T0* T311f22(T0* C);
/* DS_LINKED_QUEUE [STRING].item */
extern T0* T967f1(T0* C);
/* XM_NAMESPACE_RESOLVER.attributes_is_empty */
extern T1 T311f15(T0* C);
/* XM_NAMESPACE_RESOLVER_CONTEXT.has */
extern T1 T965f1(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_start_tag_finish */
extern void T90f18(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T89f12(T0* C);
/* XM_STOP_ON_ERROR_FILTER.on_start_tag_finish */
extern void T89f12p1(T0* C);
/* XM_CALLBACKS_NULL.on_error */
extern void T314f11(T0* C, T0* a1);
/* XM_NAMESPACE_RESOLVER.on_error */
extern void T311f35(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.on_error */
extern void T90f20(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T89f14(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.on_error */
extern void T89f14p1(T0* C, T0* a1);
/* XM_CALLBACKS_NULL.on_xml_declaration */
extern void T314f12(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.on_xml_declaration */
extern void T311f41(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_CALLBACKS_TO_TREE_FILTER.on_xml_declaration */
extern void T90f23(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_STOP_ON_ERROR_FILTER.on_xml_declaration */
extern void T89f16(T0* C, T0* a1, T0* a2, T1 a3);
/* XM_NAMESPACE_RESOLVER.set_next */
extern void T311f40(T0* C, T0* a1);
/* XM_CALLBACKS_TO_TREE_FILTER.set_next */
extern void T90f11(T0* C, T0* a1);
/* XM_STOP_ON_ERROR_FILTER.set_next */
extern void T89f5(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_line */
extern void T196f25(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.put_line */
extern void T171f9(T0* C, T0* a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_line */
extern void T170f8(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_integer */
extern void T196f27(T0* C, T6 a1);
/* KL_STRING_OUTPUT_STREAM.put_integer */
extern void T171f6(T0* C, T6 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_integer */
extern void T170f5(T0* C, T6 a1);
/* KL_TEXT_OUTPUT_FILE.put_string */
extern void T196f23(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.old_put_string */
extern void T196f31(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.file_ps */
extern void T196f34(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STRING_OUTPUT_STREAM.put_string */
extern void T171f7(T0* C, T0* a1);
/* KL_STRING_OUTPUT_STREAM.string_ */
extern T0* T171f2(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_string */
extern void T170f6(T0* C, T0* a1);
/* KL_TEXT_OUTPUT_FILE.put_character */
extern void T196f24(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.old_put_character */
extern void T196f32(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.file_pc */
extern void T196f35(T0* C, T14 a1, T2 a2);
/* KL_STRING_OUTPUT_STREAM.put_character */
extern void T171f5(T0* C, T2 a1);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_character */
extern void T170f4(T0* C, T2 a1);
/* KL_TEXT_OUTPUT_FILE.put_new_line */
extern void T196f22(T0* C);
/* KL_STRING_OUTPUT_STREAM.put_new_line */
extern void T171f8(T0* C);
/* KL_NULL_TEXT_OUTPUT_STREAM.put_new_line */
extern void T170f7(T0* C);
/* KL_STDIN_FILE.read_character */
extern void T908f19(T0* C);
/* KL_STDIN_FILE.old_read_character */
extern void T908f21(T0* C);
/* KL_STDIN_FILE.console_readchar */
extern T2 T908f14(T0* C, T14 a1);
/* KL_STDIN_FILE.old_end_of_file */
extern T1 T908f6(T0* C);
/* KL_STDIN_FILE.console_eof */
extern T1 T908f11(T0* C, T14 a1);
/* XM_EIFFEL_INPUT_STREAM.read_character */
extern void T905f31(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].remove */
extern void T1160f7(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].wipe_out */
extern void T1160f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.noqueue_read_character */
extern void T905f33(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_read_character */
extern void T905f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.append_character */
extern void T905f36(T0* C, T6 a1);
/* DS_LINKED_QUEUE [CHARACTER].force */
extern void T1160f8(T0* C, T2 a1);
/* DS_LINKABLE [CHARACTER].put_right */
extern void T1261f4(T0* C, T0* a1);
/* DS_LINKED_QUEUE [CHARACTER].is_empty */
extern T1 T1160f4(T0* C);
/* DS_LINKABLE [CHARACTER].make */
extern T0* T1261c3(T2 a1);
/* XM_EIFFEL_INPUT_STREAM.utf8 */
extern T0* T905f23(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf8_buffer */
extern unsigned char ge1272os23675;
extern T0* ge1272ov23675;
extern T0* T905f26(T0* C);
/* UC_UTF16_ROUTINES.surrogate */
extern T6 T1161f7(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_low_surrogate */
extern T1 T1161f6(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.least_10_bits */
extern T6 T1161f5(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_high_surrogate */
extern T1 T1161f4(T0* C, T6 a1);
/* UC_UTF16_ROUTINES.is_surrogate */
extern T1 T1161f3(T0* C, T6 a1);
/* XM_EIFFEL_INPUT_STREAM.utf16 */
extern unsigned char ge344os2771;
extern T0* ge344ov2771;
extern T0* T905f21(T0* C);
/* UC_UTF16_ROUTINES.default_create */
extern T0* T1161c16(void);
/* XM_EIFFEL_INPUT_STREAM.least_significant */
extern T6 T905f25(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.most_significant */
extern T6 T905f24(T0* C, T2 a1, T2 a2);
/* XM_EIFFEL_INPUT_STREAM.latin1_read_character */
extern void T905f34(T0* C);
/* KL_STRING_INPUT_STREAM.read_character */
extern void T1336f9(T0* C);
/* XM_EIFFEL_INPUT_STREAM.utf16_detect_read_character */
extern void T905f32(T0* C);
/* UC_UTF8_ROUTINES.is_endian_detection_character */
extern T1 T903f31(T0* C, T2 a1, T2 a2, T2 a3);
/* UC_UTF8_ROUTINES.is_endian_detection_character_start */
extern T1 T903f30(T0* C, T2 a1, T2 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_least_first */
extern T1 T1161f2(T0* C, T6 a1, T6 a2);
/* UC_UTF16_ROUTINES.is_endian_detection_character_most_first */
extern T1 T1161f1(T0* C, T6 a1, T6 a2);
/* KL_TEXT_INPUT_FILE.read_character */
extern void T22f48(T0* C);
/* KL_TEXT_INPUT_FILE.old_read_character */
extern void T22f51(T0* C);
/* KL_TEXT_INPUT_FILE.file_gc */
extern T2 T22f30(T0* C, T14 a1);
/* ET_KEYWORD.position */
extern T0* T166f9(T0* C);
/* ET_INHERITED_FEATURE.selected_count */
extern T6 T1230f27(T0* C);
/* ET_REDECLARED_FEATURE.selected_count */
extern T6 T1189f25(T0* C);
/* ET_INHERITED_FEATURE.has_replication */
extern T1 T1230f24(T0* C);
/* ET_REDECLARED_FEATURE.has_replication */
extern T1 T1189f22(T0* C);
/* ET_REPLICATED_FEATURE.replicated_feature */
extern T0* T1247f4(T0* C);
/* ET_INHERITED_FEATURE.replicated_feature */
extern T0* T1230f25(T0* C);
/* ET_REDECLARED_FEATURE.replicated_feature */
extern T0* T1189f23(T0* C);
/* ET_REPLICATED_FEATURE.first_feature */
extern T0* T1247f5(T0* C);
/* DS_LINKED_LIST [ET_ADAPTED_FEATURE].first */
extern T0* T1248f9(T0* C);
/* ET_INHERITED_FEATURE.first_feature */
extern T0* T1230f26(T0* C);
/* ET_REDECLARED_FEATURE.first_feature */
extern T0* T1189f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_freeop */
extern T1 T651f15(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_freeop */
extern T1 T643f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_freeop */
extern T1 T444f35(T0* C);
/* ET_ALIAS_FREE_NAME.free_operator_name */
extern T0* T651f8(T0* C);
/* ET_INFIX_FREE_NAME.free_operator_name */
extern T0* T645f8(T0* C);
/* ET_PREFIX_FREE_NAME.free_operator_name */
extern T0* T643f8(T0* C);
/* ET_INHERITED_FEATURE.immediate_feature */
extern T0* T1230f11(T0* C);
/* ET_REDECLARED_FEATURE.immediate_feature */
extern T0* T1189f10(T0* C);
/* ET_EXTERNAL_PROCEDURE.immediate_feature */
extern T0* T638f52(T0* C);
/* ET_ONCE_PROCEDURE.immediate_feature */
extern T0* T637f50(T0* C);
/* ET_DEFERRED_FUNCTION.immediate_feature */
extern T0* T632f53(T0* C);
/* ET_ONCE_FUNCTION.immediate_feature */
extern T0* T631f54(T0* C);
/* ET_DO_FUNCTION.immediate_feature */
extern T0* T629f54(T0* C);
/* ET_DEFERRED_PROCEDURE.immediate_feature */
extern T0* T302f48(T0* C);
/* ET_DO_PROCEDURE.immediate_feature */
extern T0* T297f50(T0* C);
/* ET_ATTRIBUTE.immediate_feature */
extern T0* T226f49(T0* C);
/* ET_UNIQUE_ATTRIBUTE.immediate_feature */
extern T0* T225f51(T0* C);
/* ET_CONSTANT_ATTRIBUTE.immediate_feature */
extern T0* T223f51(T0* C);
/* ET_EXTERNAL_FUNCTION.immediate_feature */
extern T0* T163f57(T0* C);
/* ET_INHERITED_FEATURE.is_redeclared */
extern T1 T1230f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_redeclared */
extern T1 T638f54(T0* C);
/* ET_ONCE_PROCEDURE.is_redeclared */
extern T1 T637f52(T0* C);
/* ET_DEFERRED_FUNCTION.is_redeclared */
extern T1 T632f55(T0* C);
/* ET_ONCE_FUNCTION.is_redeclared */
extern T1 T631f56(T0* C);
/* ET_DO_FUNCTION.is_redeclared */
extern T1 T629f56(T0* C);
/* ET_DEFERRED_PROCEDURE.is_redeclared */
extern T1 T302f50(T0* C);
/* ET_DO_PROCEDURE.is_redeclared */
extern T1 T297f52(T0* C);
/* ET_ATTRIBUTE.is_redeclared */
extern T1 T226f51(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_redeclared */
extern T1 T225f53(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_redeclared */
extern T1 T223f53(T0* C);
/* ET_EXTERNAL_FUNCTION.is_redeclared */
extern T1 T163f59(T0* C);
/* ET_INHERITED_FEATURE.redeclared_feature */
extern T0* T1230f14(T0* C);
/* ET_REDECLARED_FEATURE.redeclared_feature */
extern T0* T1189f13(T0* C);
/* ET_EXTERNAL_PROCEDURE.redeclared_feature */
extern T0* T638f55(T0* C);
/* ET_ONCE_PROCEDURE.redeclared_feature */
extern T0* T637f53(T0* C);
/* ET_DEFERRED_FUNCTION.redeclared_feature */
extern T0* T632f56(T0* C);
/* ET_ONCE_FUNCTION.redeclared_feature */
extern T0* T631f57(T0* C);
/* ET_DO_FUNCTION.redeclared_feature */
extern T0* T629f57(T0* C);
/* ET_DEFERRED_PROCEDURE.redeclared_feature */
extern T0* T302f51(T0* C);
/* ET_DO_PROCEDURE.redeclared_feature */
extern T0* T297f53(T0* C);
/* ET_ATTRIBUTE.redeclared_feature */
extern T0* T226f52(T0* C);
/* ET_UNIQUE_ATTRIBUTE.redeclared_feature */
extern T0* T225f54(T0* C);
/* ET_CONSTANT_ATTRIBUTE.redeclared_feature */
extern T0* T223f54(T0* C);
/* ET_EXTERNAL_FUNCTION.redeclared_feature */
extern T0* T163f60(T0* C);
/* ET_REDECLARED_FEATURE.is_inherited */
extern T1 T1189f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_inherited */
extern T1 T638f56(T0* C);
/* ET_ONCE_PROCEDURE.is_inherited */
extern T1 T637f54(T0* C);
/* ET_DEFERRED_FUNCTION.is_inherited */
extern T1 T632f57(T0* C);
/* ET_ONCE_FUNCTION.is_inherited */
extern T1 T631f58(T0* C);
/* ET_DO_FUNCTION.is_inherited */
extern T1 T629f58(T0* C);
/* ET_DEFERRED_PROCEDURE.is_inherited */
extern T1 T302f52(T0* C);
/* ET_DO_PROCEDURE.is_inherited */
extern T1 T297f54(T0* C);
/* ET_ATTRIBUTE.is_inherited */
extern T1 T226f53(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_inherited */
extern T1 T225f55(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_inherited */
extern T1 T223f55(T0* C);
/* ET_EXTERNAL_FUNCTION.is_inherited */
extern T1 T163f61(T0* C);
/* ET_INHERITED_FEATURE.inherited_feature */
extern T0* T1230f16(T0* C);
/* ET_REDECLARED_FEATURE.inherited_feature */
extern T0* T1189f15(T0* C);
/* ET_EXTERNAL_PROCEDURE.inherited_feature */
extern T0* T638f57(T0* C);
/* ET_ONCE_PROCEDURE.inherited_feature */
extern T0* T637f55(T0* C);
/* ET_DEFERRED_FUNCTION.inherited_feature */
extern T0* T632f58(T0* C);
/* ET_ONCE_FUNCTION.inherited_feature */
extern T0* T631f59(T0* C);
/* ET_DO_FUNCTION.inherited_feature */
extern T0* T629f59(T0* C);
/* ET_DEFERRED_PROCEDURE.inherited_feature */
extern T0* T302f53(T0* C);
/* ET_DO_PROCEDURE.inherited_feature */
extern T0* T297f55(T0* C);
/* ET_ATTRIBUTE.inherited_feature */
extern T0* T226f54(T0* C);
/* ET_UNIQUE_ATTRIBUTE.inherited_feature */
extern T0* T225f56(T0* C);
/* ET_CONSTANT_ATTRIBUTE.inherited_feature */
extern T0* T223f56(T0* C);
/* ET_EXTERNAL_FUNCTION.inherited_feature */
extern T0* T163f62(T0* C);
/* ET_EXTERNAL_PROCEDURE.flattened_feature */
extern T0* T638f50(T0* C);
/* ET_ONCE_PROCEDURE.flattened_feature */
extern T0* T637f48(T0* C);
/* ET_DEFERRED_FUNCTION.flattened_feature */
extern T0* T632f51(T0* C);
/* ET_ONCE_FUNCTION.flattened_feature */
extern T0* T631f52(T0* C);
/* ET_DO_FUNCTION.flattened_feature */
extern T0* T629f52(T0* C);
/* ET_DEFERRED_PROCEDURE.flattened_feature */
extern T0* T302f46(T0* C);
/* ET_DO_PROCEDURE.flattened_feature */
extern T0* T297f48(T0* C);
/* ET_ATTRIBUTE.flattened_feature */
extern T0* T226f47(T0* C);
/* ET_UNIQUE_ATTRIBUTE.flattened_feature */
extern T0* T225f49(T0* C);
/* ET_CONSTANT_ATTRIBUTE.flattened_feature */
extern T0* T223f49(T0* C);
/* ET_EXTERNAL_FUNCTION.flattened_feature */
extern T0* T163f55(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_adapted */
extern T1 T638f58(T0* C);
/* ET_ONCE_PROCEDURE.is_adapted */
extern T1 T637f56(T0* C);
/* ET_DEFERRED_FUNCTION.is_adapted */
extern T1 T632f59(T0* C);
/* ET_ONCE_FUNCTION.is_adapted */
extern T1 T631f60(T0* C);
/* ET_DO_FUNCTION.is_adapted */
extern T1 T629f60(T0* C);
/* ET_DEFERRED_PROCEDURE.is_adapted */
extern T1 T302f54(T0* C);
/* ET_DO_PROCEDURE.is_adapted */
extern T1 T297f56(T0* C);
/* ET_ATTRIBUTE.is_adapted */
extern T1 T226f55(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_adapted */
extern T1 T225f57(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_adapted */
extern T1 T223f57(T0* C);
/* ET_EXTERNAL_FUNCTION.is_adapted */
extern T1 T163f63(T0* C);
/* ET_INHERITED_FEATURE.adapted_feature */
extern T0* T1230f12(T0* C);
/* ET_REDECLARED_FEATURE.adapted_feature */
extern T0* T1189f11(T0* C);
/* ET_EXTERNAL_PROCEDURE.adapted_feature */
extern T0* T638f53(T0* C);
/* ET_ONCE_PROCEDURE.adapted_feature */
extern T0* T637f51(T0* C);
/* ET_DEFERRED_FUNCTION.adapted_feature */
extern T0* T632f54(T0* C);
/* ET_ONCE_FUNCTION.adapted_feature */
extern T0* T631f55(T0* C);
/* ET_DO_FUNCTION.adapted_feature */
extern T0* T629f55(T0* C);
/* ET_DEFERRED_PROCEDURE.adapted_feature */
extern T0* T302f49(T0* C);
/* ET_DO_PROCEDURE.adapted_feature */
extern T0* T297f51(T0* C);
/* ET_ATTRIBUTE.adapted_feature */
extern T0* T226f50(T0* C);
/* ET_UNIQUE_ATTRIBUTE.adapted_feature */
extern T0* T225f52(T0* C);
/* ET_CONSTANT_ATTRIBUTE.adapted_feature */
extern T0* T223f52(T0* C);
/* ET_EXTERNAL_FUNCTION.adapted_feature */
extern T0* T163f58(T0* C);
/* ET_NONE_GROUP.is_dotnet_assembly */
extern T1 T286f4(T0* C);
/* ET_XACE_CLUSTER.is_dotnet_assembly */
extern T1 T253f19(T0* C);
/* ET_LACE_CLUSTER.is_dotnet_assembly */
extern T1 T123f23(T0* C);
/* ET_NONE_GROUP.is_cluster */
extern T1 T286f3(T0* C);
/* ET_XACE_CLUSTER.is_none */
extern T1 T253f20(T0* C);
/* ET_LACE_CLUSTER.is_none */
extern T1 T123f24(T0* C);
/* ET_NONE_GROUP.cluster */
extern T0* T286f6(T0* C);
/* ET_XACE_CLUSTER.cluster */
extern T0* T253f21(T0* C);
/* ET_LACE_CLUSTER.cluster */
extern T0* T123f25(T0* C);
/* ET_NONE_GROUP.full_pathname */
extern T0* T286f8(T0* C);
/* ET_NONE_GROUP.pathname */
extern T0* T286f11(T0* C);
/* ET_XACE_CLUSTER.full_pathname */
extern T0* T253f15(T0* C);
/* ET_XACE_CLUSTER.file_system */
extern T0* T253f26(T0* C);
/* ET_XACE_CLUSTER.unix_file_system */
extern T0* T253f35(T0* C);
/* ET_XACE_CLUSTER.windows_file_system */
extern T0* T253f34(T0* C);
/* ET_LACE_CLUSTER.full_pathname */
extern T0* T123f10(T0* C);
/* ET_LACE_CLUSTER.file_system */
extern T0* T123f14(T0* C);
/* ET_LACE_CLUSTER.unix_file_system */
extern T0* T123f17(T0* C);
/* ET_LACE_CLUSTER.windows_file_system */
extern T0* T123f16(T0* C);
/* ET_LACE_CLUSTER.pathname */
extern T0* T123f11(T0* C);
/* ET_NONE_GROUP.full_lower_name */
extern T0* T286f7(T0* C, T2 a1);
/* ET_NONE_GROUP.lower_name */
extern T0* T286f10(T0* C);
/* ET_XACE_CLUSTER.full_lower_name */
extern T0* T253f22(T0* C, T2 a1);
/* ET_XACE_CLUSTER.lower_name */
extern T0* T253f30(T0* C);
/* ET_LACE_CLUSTER.full_lower_name */
extern T0* T123f27(T0* C, T2 a1);
/* ET_LACE_CLUSTER.lower_name */
extern T0* T123f33(T0* C);
/* ET_NONE_GROUP.dotnet_assembly */
extern T0* T286f9(T0* C);
/* ET_XACE_CLUSTER.dotnet_assembly */
extern T0* T253f23(T0* C);
/* ET_LACE_CLUSTER.dotnet_assembly */
extern T0* T123f28(T0* C);
/* ET_TAGGED_ASSERTION.assertion */
extern T0* T815f3(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T805f15(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T804f16(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.assertion */
extern T0* T803f16(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.assertion */
extern T0* T802f17(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.assertion */
extern T0* T801f18(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.assertion */
extern T0* T799f18(T0* C);
/* ET_MANIFEST_TYPE.assertion */
extern T0* T789f8(T0* C);
/* ET_STRIP_EXPRESSION.assertion */
extern T0* T782f11(T0* C);
/* ET_MANIFEST_ARRAY.assertion */
extern T0* T780f10(T0* C);
/* ET_ONCE_MANIFEST_STRING.assertion */
extern T0* T779f7(T0* C);
/* ET_CALL_AGENT.assertion */
extern T0* T775f11(T0* C);
/* ET_OLD_EXPRESSION.assertion */
extern T0* T774f7(T0* C);
/* ET_PREFIX_EXPRESSION.assertion */
extern T0* T773f6(T0* C);
/* ET_EQUALITY_EXPRESSION.assertion */
extern T0* T772f7(T0* C);
/* ET_INFIX_EXPRESSION.assertion */
extern T0* T768f7(T0* C);
/* ET_EXPRESSION_ADDRESS.assertion */
extern T0* T766f7(T0* C);
/* ET_RESULT_ADDRESS.assertion */
extern T0* T765f7(T0* C);
/* ET_CURRENT_ADDRESS.assertion */
extern T0* T764f7(T0* C);
/* ET_FEATURE_ADDRESS.assertion */
extern T0* T763f7(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.assertion */
extern T0* T758f8(T0* C);
/* ET_PRECURSOR_EXPRESSION.assertion */
extern T0* T757f9(T0* C);
/* ET_STATIC_CALL_EXPRESSION.assertion */
extern T0* T742f11(T0* C);
/* ET_BRACKET_EXPRESSION.assertion */
extern T0* T694f7(T0* C);
/* ET_MANIFEST_TUPLE.assertion */
extern T0* T523f10(T0* C);
/* ET_CREATE_EXPRESSION.assertion */
extern T0* T520f8(T0* C);
/* ET_C2_CHARACTER_CONSTANT.assertion */
extern T0* T491f17(T0* C);
/* ET_C1_CHARACTER_CONSTANT.assertion */
extern T0* T490f17(T0* C);
/* ET_FALSE_CONSTANT.assertion */
extern T0* T489f18(T0* C);
/* ET_TRUE_CONSTANT.assertion */
extern T0* T488f18(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.assertion */
extern T0* T486f18(T0* C);
/* ET_REGULAR_REAL_CONSTANT.assertion */
extern T0* T485f18(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.assertion */
extern T0* T484f28(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.assertion */
extern T0* T483f29(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.assertion */
extern T0* T482f29(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.assertion */
extern T0* T481f19(T0* C);
/* ET_VERBATIM_STRING.assertion */
extern T0* T480f23(T0* C);
/* ET_REGULAR_MANIFEST_STRING.assertion */
extern T0* T479f18(T0* C);
/* ET_C3_CHARACTER_CONSTANT.assertion */
extern T0* T478f18(T0* C);
/* ET_VOID.assertion */
extern T0* T466f12(T0* C);
/* ET_BIT_CONSTANT.assertion */
extern T0* T430f16(T0* C);
/* ET_RESULT.assertion */
extern T0* T206f12(T0* C);
/* ET_CALL_EXPRESSION.assertion */
extern T0* T186f8(T0* C);
/* ET_CURRENT.assertion */
extern T0* T182f13(T0* C);
/* ET_IDENTIFIER.assertion */
extern T0* T119f73(T0* C);
/* ET_TAGGED_ASSERTION.position */
extern T0* T815f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.agent_actual_argument */
extern T0* T1339f12(T0* C);
/* ET_CONVERT_EXPRESSION.agent_actual_argument */
extern T0* T1240f11(T0* C);
/* ET_AGENT_TYPED_OPEN_ARGUMENT.agent_actual_argument */
extern T0* T813f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T805f13(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T804f14(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.agent_actual_argument */
extern T0* T803f14(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T802f15(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T801f16(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.agent_actual_argument */
extern T0* T799f16(T0* C);
/* ET_MANIFEST_TYPE.agent_actual_argument */
extern T0* T789f7(T0* C);
/* ET_STRIP_EXPRESSION.agent_actual_argument */
extern T0* T782f10(T0* C);
/* ET_MANIFEST_ARRAY.agent_actual_argument */
extern T0* T780f9(T0* C);
/* ET_ONCE_MANIFEST_STRING.agent_actual_argument */
extern T0* T779f6(T0* C);
/* ET_CALL_AGENT.agent_actual_argument */
extern T0* T775f10(T0* C);
/* ET_OLD_EXPRESSION.agent_actual_argument */
extern T0* T774f6(T0* C);
/* ET_PREFIX_EXPRESSION.agent_actual_argument */
extern T0* T773f5(T0* C);
/* ET_EQUALITY_EXPRESSION.agent_actual_argument */
extern T0* T772f6(T0* C);
/* ET_INFIX_EXPRESSION.agent_actual_argument */
extern T0* T768f6(T0* C);
/* ET_EXPRESSION_ADDRESS.agent_actual_argument */
extern T0* T766f6(T0* C);
/* ET_RESULT_ADDRESS.agent_actual_argument */
extern T0* T765f6(T0* C);
/* ET_CURRENT_ADDRESS.agent_actual_argument */
extern T0* T764f6(T0* C);
/* ET_FEATURE_ADDRESS.agent_actual_argument */
extern T0* T763f6(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.agent_actual_argument */
extern T0* T758f7(T0* C);
/* ET_PRECURSOR_EXPRESSION.agent_actual_argument */
extern T0* T757f8(T0* C);
/* ET_STATIC_CALL_EXPRESSION.agent_actual_argument */
extern T0* T742f10(T0* C);
/* ET_BRACKET_EXPRESSION.agent_actual_argument */
extern T0* T694f6(T0* C);
/* ET_MANIFEST_TUPLE.agent_actual_argument */
extern T0* T523f9(T0* C);
/* ET_CREATE_EXPRESSION.agent_actual_argument */
extern T0* T520f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T491f10(T0* C);
/* ET_C1_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T490f10(T0* C);
/* ET_FALSE_CONSTANT.agent_actual_argument */
extern T0* T489f11(T0* C);
/* ET_TRUE_CONSTANT.agent_actual_argument */
extern T0* T488f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.agent_actual_argument */
extern T0* T486f11(T0* C);
/* ET_REGULAR_REAL_CONSTANT.agent_actual_argument */
extern T0* T485f11(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T484f21(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T483f22(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.agent_actual_argument */
extern T0* T482f22(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.agent_actual_argument */
extern T0* T481f12(T0* C);
/* ET_VERBATIM_STRING.agent_actual_argument */
extern T0* T480f16(T0* C);
/* ET_REGULAR_MANIFEST_STRING.agent_actual_argument */
extern T0* T479f11(T0* C);
/* ET_C3_CHARACTER_CONSTANT.agent_actual_argument */
extern T0* T478f11(T0* C);
/* ET_QUESTION_MARK_SYMBOL.agent_actual_argument */
extern T0* T475f8(T0* C);
/* ET_VOID.agent_actual_argument */
extern T0* T466f11(T0* C);
/* ET_BIT_CONSTANT.agent_actual_argument */
extern T0* T430f9(T0* C);
/* ET_RESULT.agent_actual_argument */
extern T0* T206f11(T0* C);
/* ET_CALL_EXPRESSION.agent_actual_argument */
extern T0* T186f7(T0* C);
/* ET_CURRENT.agent_actual_argument */
extern T0* T182f12(T0* C);
/* ET_IDENTIFIER.agent_actual_argument */
extern T0* T119f72(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.type */
extern T0* T805f14(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.type */
extern T0* T804f15(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.type */
extern T0* T803f15(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.type */
extern T0* T802f16(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.type */
extern T0* T801f17(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.type */
extern T0* T799f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.locals */
extern T0* T805f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.locals */
extern T0* T802f23(T0* C);
/* ET_STATIC_CALL_EXPRESSION.choice */
extern T0* T742f7(T0* C);
/* ET_CHOICE_RANGE.choice */
extern T0* T740f5(T0* C);
/* ET_C2_CHARACTER_CONSTANT.choice */
extern T0* T491f9(T0* C);
/* ET_C1_CHARACTER_CONSTANT.choice */
extern T0* T490f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.choice */
extern T0* T484f20(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.choice */
extern T0* T483f21(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.choice */
extern T0* T482f21(T0* C);
/* ET_C3_CHARACTER_CONSTANT.choice */
extern T0* T478f10(T0* C);
/* ET_CALL_EXPRESSION.choice */
extern T0* T186f6(T0* C);
/* ET_IDENTIFIER.choice */
extern T0* T119f71(T0* C);
/* ET_STATIC_CALL_EXPRESSION.lower */
extern T0* T742f19(T0* C);
/* ET_C2_CHARACTER_CONSTANT.lower */
extern T0* T491f26(T0* C);
/* ET_C1_CHARACTER_CONSTANT.lower */
extern T0* T490f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.lower */
extern T0* T484f36(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.lower */
extern T0* T483f37(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.lower */
extern T0* T482f37(T0* C);
/* ET_C3_CHARACTER_CONSTANT.lower */
extern T0* T478f27(T0* C);
/* ET_CALL_EXPRESSION.lower */
extern T0* T186f18(T0* C);
/* ET_IDENTIFIER.lower */
extern T0* T119f87(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_range */
extern T1 T742f20(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_range */
extern T1 T491f27(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_range */
extern T1 T490f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_range */
extern T1 T484f37(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_range */
extern T1 T483f38(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_range */
extern T1 T482f38(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_range */
extern T1 T478f28(T0* C);
/* ET_CALL_EXPRESSION.is_range */
extern T1 T186f19(T0* C);
/* ET_IDENTIFIER.is_range */
extern T1 T119f88(T0* C);
/* ET_STATIC_CALL_EXPRESSION.upper */
extern T0* T742f21(T0* C);
/* ET_C2_CHARACTER_CONSTANT.upper */
extern T0* T491f28(T0* C);
/* ET_C1_CHARACTER_CONSTANT.upper */
extern T0* T490f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.upper */
extern T0* T484f38(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.upper */
extern T0* T483f39(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.upper */
extern T0* T482f39(T0* C);
/* ET_C3_CHARACTER_CONSTANT.upper */
extern T0* T478f29(T0* C);
/* ET_CALL_EXPRESSION.upper */
extern T0* T186f20(T0* C);
/* ET_IDENTIFIER.upper */
extern T0* T119f89(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.last_leaf */
extern T0* T536f62(T0* C);
/* ET_CONSTRAINT_CREATOR.last_leaf */
extern T0* T537f11(T0* C);
/* ET_FORMAL_PARAMETER.last_leaf */
extern T0* T528f60(T0* C);
/* ET_CLASS.last_leaf */
extern T0* T55f155(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments_count */
extern T6 T1339f15(T0* C);
/* ET_PREFIX_EXPRESSION.arguments_count */
extern T6 T773f12(T0* C);
/* ET_BRACKET_EXPRESSION.arguments_count */
extern T6 T694f11(T0* C);
/* ET_CALL_EXPRESSION.arguments_count */
extern T6 T186f14(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T922f5(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.named_parameter_with_type */
extern T0* T913f29(T0* C, T0* a1);
/* ET_LIKE_CURRENT.named_parameter_with_type */
extern T0* T687f30(T0* C, T0* a1);
/* ET_LIKE_FEATURE.named_parameter_with_type */
extern T0* T685f25(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.named_parameter_with_type */
extern T0* T683f5(T0* C, T0* a1);
/* ET_BIT_FEATURE.named_parameter_with_type */
extern T0* T549f27(T0* C, T0* a1);
/* ET_BIT_N.named_parameter_with_type */
extern T0* T548f27(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T536f45(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.named_parameter_with_type */
extern T0* T528f41(T0* C, T0* a1);
/* ET_TUPLE_TYPE.named_parameter_with_type */
extern T0* T288f17(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.named_parameter_with_type */
extern T0* T161f21(T0* C, T0* a1);
/* ET_CLASS_TYPE.named_parameter_with_type */
extern T0* T159f19(T0* C, T0* a1);
/* ET_CLASS.named_parameter_with_type */
extern T0* T55f82(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.is_prefix */
extern T1 T651f14(T0* C);
/* ET_ALIAS_NAME.is_prefix */
extern T1 T647f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefixable */
extern T1 T651f11(T0* C);
/* ET_ALIAS_NAME.is_prefixable */
extern T1 T647f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infixable */
extern T1 T651f12(T0* C);
/* ET_ALIAS_NAME.is_infixable */
extern T1 T647f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix */
extern T1 T651f13(T0* C);
/* ET_ALIAS_NAME.is_infix */
extern T1 T647f10(T0* C);
/* ET_ALIAS_NAME.hash_code */
extern T6 T647f38(T0* C);
/* ET_ALIAS_FREE_NAME.same_call_name */
extern T1 T651f9(T0* C, T0* a1);
/* ET_ALIAS_NAME.same_call_name */
extern T1 T647f6(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_call_name */
extern T1 T645f39(T0* C, T0* a1);
/* ET_INFIX_NAME.same_call_name */
extern T1 T644f19(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_call_name */
extern T1 T643f21(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_call_name */
extern T1 T642f16(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.position */
extern T0* T651f38(T0* C);
/* ET_ALIAS_NAME.position */
extern T0* T647f57(T0* C);
/* ET_ALIAS_FREE_NAME.lower_name */
extern T0* T651f39(T0* C);
/* ET_ALIAS_FREE_NAME.name */
extern T0* T651f41(T0* C);
/* ET_ALIAS_NAME.lower_name */
extern T0* T647f58(T0* C);
/* ET_ALIAS_NAME.name */
extern T0* T647f60(T0* C);
/* ET_ALIAS_FREE_NAME.same_alias_name */
extern T1 T651f40(T0* C, T0* a1);
/* KL_ANY_ROUTINES.to_any */
extern T0* T75f3(T0* C, T0* a1);
/* ET_ALIAS_FREE_NAME.any_ */
extern T0* T651f42(T0* C);
/* ET_ALIAS_NAME.same_alias_name */
extern T1 T647f59(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.same_alias_name */
extern T1 T645f57(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.any_ */
extern T0* T645f43(T0* C);
/* ET_INFIX_NAME.same_alias_name */
extern T1 T644f68(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_alias_name */
extern T1 T643f57(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.any_ */
extern T0* T643f25(T0* C);
/* ET_PREFIX_NAME.same_alias_name */
extern T1 T642f54(T0* C, T0* a1);
/* ET_SPECIAL_MANIFEST_STRING.manifest_string */
extern T0* T481f8(T0* C);
/* ET_VERBATIM_STRING.manifest_string */
extern T0* T480f12(T0* C);
/* ET_REGULAR_MANIFEST_STRING.manifest_string */
extern T0* T479f7(T0* C);
/* ET_SYMBOL.position */
extern T0* T425f8(T0* C);
/* ET_AGENT_KEYWORD.position */
extern T0* T419f9(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_position */
extern T0* T491f33(T0* C);
/* ET_COMPRESSED_POSITION.make */
extern T0* T1244c9(T6 a1, T6 a2);
/* ET_COMPRESSED_POSITION.set_position */
extern void T1244f10(T0* C, T6 a1, T6 a2);
/* ET_C1_CHARACTER_CONSTANT.last_position */
extern T0* T490f33(T0* C);
/* ET_FALSE_CONSTANT.last_position */
extern T0* T489f29(T0* C);
/* ET_TRUE_CONSTANT.last_position */
extern T0* T488f29(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_position */
extern T0* T486f31(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_position */
extern T0* T485f31(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_position */
extern T0* T484f35(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_position */
extern T0* T483f36(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_position */
extern T0* T482f36(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_position */
extern T0* T481f31(T0* C);
/* ET_VERBATIM_STRING.last_position */
extern T0* T480f35(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_position */
extern T0* T479f30(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_position */
extern T0* T478f34(T0* C);
/* ET_BRACKET_SYMBOL.last_position */
extern T0* T472f80(T0* C);
/* ET_VOID.last_position */
extern T0* T466f23(T0* C);
/* ET_BIT_CONSTANT.last_position */
extern T0* T430f27(T0* C);
/* ET_SYMBOL.last_position */
extern T0* T425f16(T0* C);
/* ET_PRECURSOR_KEYWORD.last_position */
extern T0* T422f17(T0* C);
/* ET_RESULT.last_position */
extern T0* T206f23(T0* C);
/* ET_CURRENT.last_position */
extern T0* T182f24(T0* C);
/* ET_KEYWORD.last_position */
extern T0* T166f21(T0* C);
/* ET_IDENTIFIER.last_position */
extern T0* T119f85(T0* C);
/* ET_CONVERT_PROCEDURE.is_convert_to */
extern T1 T604f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_to */
extern T1 T294f5(T0* C);
/* ET_CONVERT_FUNCTION.is_convert_from */
extern T1 T602f7(T0* C);
/* ET_BUILTIN_CONVERT_FEATURE.is_convert_from */
extern T1 T294f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.position */
extern T0* T911f6(T0* C);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.position */
extern T0* T556f4(T0* C);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.position */
extern T0* T555f4(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.position */
extern T0* T544f5(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.type */
extern T0* T911f5(T0* C);
/* ET_CONSTRAINT_NAMED_TYPE.type */
extern T0* T544f4(T0* C);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T911f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint_with_type */
extern T0* T687f51(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T685f54(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_COMMA_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T556f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_comma_actual_parameter */
extern T0* T158f894(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_LABELED_ACTUAL_PARAMETER.resolved_syntactical_constraint_with_type */
extern T0* T555f5(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_labeled_actual_parameter */
extern T0* T158f893(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint_with_type */
extern T0* T549f83(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint_with_type */
extern T0* T548f82(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint_with_type */
extern T0* T544f6(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_GENERIC_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T911f4(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_generic_named_type */
extern T0* T158f891(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.resolved_syntactical_constraint */
extern T0* T542f10(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_actual_parameter_list */
extern T0* T158f892(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.item */
extern T0* T542f11(T0* C, T6 a1);
/* ET_CONSTRAINT_ACTUAL_PARAMETER_LIST.position */
extern T0* T542f9(T0* C);
/* ET_LIKE_CURRENT.resolved_syntactical_constraint */
extern T0* T687f11(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.resolved_syntactical_constraint */
extern T0* T685f4(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.resolved_syntactical_constraint */
extern T0* T549f6(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.resolved_syntactical_constraint */
extern T0* T548f10(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINT_NAMED_TYPE.resolved_syntactical_constraint */
extern T0* T544f3(T0* C, T0* a1, T0* a2);
/* ET_EIFFEL_PARSER.resolved_constraint_named_type */
extern T0* T158f890(T0* C, T0* a1, T0* a2);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_negative */
extern T1 T484f8(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_negative */
extern T1 T483f8(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_negative */
extern T1 T482f8(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.error_position */
extern T0* T364f57(T0* C);
/* XM_DEFAULT_POSITION.make */
extern T0* T324c7(T0* a1, T6 a2, T6 a3, T6 a4);
/* XM_EIFFEL_SCANNER_DTD.error_position */
extern T0* T362f1(T0* C);
/* XM_EIFFEL_ENTITY_DEF.error_position */
extern T0* T358f56(T0* C);
/* XM_EIFFEL_SCANNER.error_position */
extern T0* T323f1(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.end_of_file */
extern T1 T364f60(T0* C);
/* XM_EIFFEL_SCANNER_DTD.end_of_file */
extern T1 T362f4(T0* C);
/* XM_EIFFEL_ENTITY_DEF.end_of_file */
extern T1 T358f59(T0* C);
/* XM_EIFFEL_SCANNER.end_of_file */
extern T1 T323f4(T0* C);
/* XM_EIFFEL_PE_ENTITY_DEF.is_applicable_encoding */
extern T1 T364f61(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_applicable_encoding */
extern T1 T905f3(T0* C, T0* a1);
/* XM_EIFFEL_INPUT_STREAM.is_valid_encoding */
extern T1 T905f2(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER_DTD.is_applicable_encoding */
extern T1 T362f5(T0* C, T0* a1);
/* XM_EIFFEL_ENTITY_DEF.is_applicable_encoding */
extern T1 T358f60(T0* C, T0* a1);
/* XM_EIFFEL_SCANNER.is_applicable_encoding */
extern T1 T323f5(T0* C, T0* a1);
/* XM_EIFFEL_PE_ENTITY_DEF.start_condition */
extern T6 T364f62(T0* C);
/* XM_EIFFEL_SCANNER_DTD.start_condition */
extern T6 T362f6(T0* C);
/* XM_EIFFEL_ENTITY_DEF.start_condition */
extern T6 T358f61(T0* C);
/* XM_EIFFEL_SCANNER.start_condition */
extern T6 T323f6(T0* C);
/* ET_ALIASED_FEATURE_NAME.same_extended_feature_name */
extern T1 T649f4(T0* C, T0* a1);
/* KL_ANY_ROUTINES.same_objects */
extern T1 T75f2(T0* C, T0* a1, T0* a2);
/* ET_ALIASED_FEATURE_NAME.any_ */
extern T0* T649f5(T0* C);
/* ET_INFIX_FREE_NAME.same_extended_feature_name */
extern T1 T645f58(T0* C, T0* a1);
/* ET_INFIX_NAME.same_extended_feature_name */
extern T1 T644f69(T0* C, T0* a1);
/* ET_INFIX_NAME.any_ */
extern T0* T644f23(T0* C);
/* ET_PREFIX_FREE_NAME.same_extended_feature_name */
extern T1 T643f58(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_extended_feature_name */
extern T1 T642f55(T0* C, T0* a1);
/* ET_PREFIX_NAME.any_ */
extern T0* T642f20(T0* C);
/* ET_IDENTIFIER.same_extended_feature_name */
extern T1 T119f90(T0* C, T0* a1);
/* ET_ALIASED_FEATURE_NAME.position */
extern T0* T649f3(T0* C);
/* ET_INFIX_FREE_NAME.alias_name */
extern T0* T645f10(T0* C);
/* ET_INFIX_NAME.alias_name */
extern T0* T644f7(T0* C);
/* ET_PREFIX_FREE_NAME.alias_name */
extern T0* T643f10(T0* C);
/* ET_PREFIX_NAME.alias_name */
extern T0* T642f7(T0* C);
/* ET_IDENTIFIER.alias_name */
extern T0* T119f44(T0* C);
/* ET_FILE_POSITION.to_text */
extern T0* T909f1(T0* C);
/* ET_FILE_POSITION.append_to_string */
extern void T909f12(T0* C, T0* a1);
/* ET_FILE_POSITION.append_to_string_with_filename */
extern void T909f14(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_context_to_string */
extern void T909f16(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.append_line_to_string */
extern void T909f18(T0* C, T0* a1, T0* a2);
/* ET_FILE_POSITION.skip_lines */
extern void T909f17(T0* C, T0* a1, T6 a2);
/* ET_FILE_POSITION.column */
extern T6 T909f5(T0* C);
/* ET_FILE_POSITION.line */
extern T6 T909f4(T0* C);
/* ET_FILE_POSITION.integer_ */
extern T0* T909f3(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.to_text */
extern T0* T484f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.append_to_string */
extern void T484f47(T0* C, T0* a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.integer_ */
extern T0* T484f16(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.to_text */
extern T0* T483f15(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.append_to_string */
extern void T483f48(T0* C, T0* a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.integer_ */
extern T0* T483f17(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.to_text */
extern T0* T482f15(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.append_to_string */
extern void T482f48(T0* C, T0* a1);
/* ET_REGULAR_INTEGER_CONSTANT.integer_ */
extern T0* T482f17(T0* C);
/* ET_BRACKET_SYMBOL.to_text */
extern T0* T472f19(T0* C);
/* ET_BRACKET_SYMBOL.append_to_string */
extern void T472f86(T0* C, T0* a1);
/* ET_BRACKET_SYMBOL.integer_ */
extern T0* T472f41(T0* C);
/* ET_SYMBOL_OPERATOR.to_text */
extern T0* T463f17(T0* C);
/* ET_SYMBOL_OPERATOR.append_to_string */
extern void T463f75(T0* C, T0* a1);
/* ET_SYMBOL_OPERATOR.integer_ */
extern T0* T463f21(T0* C);
/* ET_SYMBOL.to_text */
extern T0* T425f12(T0* C);
/* ET_SYMBOL.append_to_string */
extern void T425f73(T0* C, T0* a1);
/* ET_SYMBOL.integer_ */
extern T0* T425f13(T0* C);
/* ET_CURRENT.to_text */
extern T0* T182f17(T0* C);
/* ET_CURRENT.append_to_string */
extern void T182f32(T0* C, T0* a1);
/* ET_CURRENT.integer_ */
extern T0* T182f21(T0* C);
/* ET_KEYWORD.to_text */
extern T0* T166f18(T0* C);
/* ET_KEYWORD.append_to_string */
extern void T166f77(T0* C, T0* a1);
/* ET_KEYWORD.integer_ */
extern T0* T166f19(T0* C);
/* ET_IDENTIFIER.to_text */
extern T0* T119f48(T0* C);
/* ET_IDENTIFIER.append_to_string */
extern void T119f108(T0* C, T0* a1);
/* ET_C2_CHARACTER_CONSTANT.is_null */
extern T1 T491f32(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_null */
extern T1 T490f32(T0* C);
/* ET_FALSE_CONSTANT.is_null */
extern T1 T489f28(T0* C);
/* ET_TRUE_CONSTANT.is_null */
extern T1 T488f28(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_null */
extern T1 T486f30(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_null */
extern T1 T485f30(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_null */
extern T1 T484f19(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_null */
extern T1 T483f20(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_null */
extern T1 T482f20(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_null */
extern T1 T481f25(T0* C);
/* ET_VERBATIM_STRING.is_null */
extern T1 T480f29(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_null */
extern T1 T479f24(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_null */
extern T1 T478f33(T0* C);
/* ET_BRACKET_SYMBOL.is_null */
extern T1 T472f9(T0* C);
/* ET_VOID.is_null */
extern T1 T466f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_null */
extern T1 T463f20(T0* C);
/* ET_KEYWORD_OPERATOR.is_null */
extern T1 T450f10(T0* C);
/* ET_FREE_OPERATOR.is_null */
extern T1 T444f45(T0* C);
/* ET_BIT_CONSTANT.is_null */
extern T1 T430f26(T0* C);
/* ET_SYMBOL.is_null */
extern T1 T425f9(T0* C);
/* ET_PRECURSOR_KEYWORD.is_null */
extern T1 T422f16(T0* C);
/* ET_AGENT_KEYWORD.is_null */
extern T1 T419f12(T0* C);
/* ET_RESULT.is_null */
extern T1 T206f22(T0* C);
/* ET_CURRENT.is_null */
extern T1 T182f20(T0* C);
/* ET_KEYWORD.is_null */
extern T1 T166f15(T0* C);
/* ET_IDENTIFIER.is_null */
extern T1 T119f40(T0* C);
/* ET_COMPRESSED_POSITION.line */
extern T6 T1244f1(T0* C);
/* ET_C2_CHARACTER_CONSTANT.line */
extern T6 T491f30(T0* C);
/* ET_C1_CHARACTER_CONSTANT.line */
extern T6 T490f30(T0* C);
/* ET_FALSE_CONSTANT.line */
extern T6 T489f26(T0* C);
/* ET_TRUE_CONSTANT.line */
extern T6 T488f26(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.line */
extern T6 T486f28(T0* C);
/* ET_REGULAR_REAL_CONSTANT.line */
extern T6 T485f28(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.line */
extern T6 T484f17(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.line */
extern T6 T483f18(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.line */
extern T6 T482f18(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.line */
extern T6 T481f23(T0* C);
/* ET_VERBATIM_STRING.line */
extern T6 T480f27(T0* C);
/* ET_REGULAR_MANIFEST_STRING.line */
extern T6 T479f22(T0* C);
/* ET_C3_CHARACTER_CONSTANT.line */
extern T6 T478f31(T0* C);
/* ET_BRACKET_SYMBOL.line */
extern T6 T472f10(T0* C);
/* ET_VOID.line */
extern T6 T466f20(T0* C);
/* ET_SYMBOL_OPERATOR.line */
extern T6 T463f18(T0* C);
/* ET_RETRY_INSTRUCTION.line */
extern T6 T460f10(T0* C);
/* ET_KEYWORD_OPERATOR.line */
extern T6 T450f11(T0* C);
/* ET_FREE_OPERATOR.line */
extern T6 T444f43(T0* C);
/* ET_BIT_CONSTANT.line */
extern T6 T430f24(T0* C);
/* ET_SYMBOL.line */
extern T6 T425f10(T0* C);
/* ET_PRECURSOR_KEYWORD.line */
extern T6 T422f14(T0* C);
/* ET_AGENT_KEYWORD.line */
extern T6 T419f10(T0* C);
/* ET_RESULT.line */
extern T6 T206f19(T0* C);
/* ET_CURRENT.line */
extern T6 T182f18(T0* C);
/* ET_KEYWORD.line */
extern T6 T166f16(T0* C);
/* ET_IDENTIFIER.line */
extern T6 T119f35(T0* C);
/* ET_COMPRESSED_POSITION.column */
extern T6 T1244f2(T0* C);
/* ET_C2_CHARACTER_CONSTANT.column */
extern T6 T491f31(T0* C);
/* ET_C1_CHARACTER_CONSTANT.column */
extern T6 T490f31(T0* C);
/* ET_FALSE_CONSTANT.column */
extern T6 T489f27(T0* C);
/* ET_TRUE_CONSTANT.column */
extern T6 T488f27(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.column */
extern T6 T486f29(T0* C);
/* ET_REGULAR_REAL_CONSTANT.column */
extern T6 T485f29(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.column */
extern T6 T484f18(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.column */
extern T6 T483f19(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.column */
extern T6 T482f19(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.column */
extern T6 T481f24(T0* C);
/* ET_VERBATIM_STRING.column */
extern T6 T480f28(T0* C);
/* ET_REGULAR_MANIFEST_STRING.column */
extern T6 T479f23(T0* C);
/* ET_C3_CHARACTER_CONSTANT.column */
extern T6 T478f32(T0* C);
/* ET_BRACKET_SYMBOL.column */
extern T6 T472f42(T0* C);
/* ET_VOID.column */
extern T6 T466f21(T0* C);
/* ET_SYMBOL_OPERATOR.column */
extern T6 T463f19(T0* C);
/* ET_RETRY_INSTRUCTION.column */
extern T6 T460f11(T0* C);
/* ET_KEYWORD_OPERATOR.column */
extern T6 T450f45(T0* C);
/* ET_FREE_OPERATOR.column */
extern T6 T444f44(T0* C);
/* ET_BIT_CONSTANT.column */
extern T6 T430f25(T0* C);
/* ET_SYMBOL.column */
extern T6 T425f14(T0* C);
/* ET_PRECURSOR_KEYWORD.column */
extern T6 T422f15(T0* C);
/* ET_AGENT_KEYWORD.column */
extern T6 T419f11(T0* C);
/* ET_RESULT.column */
extern T6 T206f20(T0* C);
/* ET_CURRENT.column */
extern T6 T182f19(T0* C);
/* ET_KEYWORD.column */
extern T6 T166f17(T0* C);
/* ET_IDENTIFIER.column */
extern T6 T119f36(T0* C);
/* ET_INVARIANTS.clients */
extern unsigned char ge541os11557;
extern T0* ge541ov11557;
extern T0* T503f20(T0* C);
/* ET_INVARIANTS.first_precursor */
extern T0* T503f18(T0* C);
/* ET_INVARIANTS.type */
extern T0* T503f19(T0* C);
/* ET_INVARIANTS.is_feature */
extern T1 T503f14(T0* C);
/* ET_EXTERNAL_PROCEDURE.as_feature */
extern T0* T638f47(T0* C);
/* ET_ONCE_PROCEDURE.as_feature */
extern T0* T637f46(T0* C);
/* ET_DEFERRED_FUNCTION.as_feature */
extern T0* T632f48(T0* C);
/* ET_ONCE_FUNCTION.as_feature */
extern T0* T631f50(T0* C);
/* ET_DO_FUNCTION.as_feature */
extern T0* T629f50(T0* C);
/* ET_INVARIANTS.as_feature */
extern T0* T503f15(T0* C);
/* ET_DEFERRED_PROCEDURE.as_feature */
extern T0* T302f43(T0* C);
/* ET_DO_PROCEDURE.as_feature */
extern T0* T297f46(T0* C);
/* ET_ATTRIBUTE.as_feature */
extern T0* T226f44(T0* C);
/* ET_UNIQUE_ATTRIBUTE.as_feature */
extern T0* T225f46(T0* C);
/* ET_CONSTANT_ATTRIBUTE.as_feature */
extern T0* T223f46(T0* C);
/* ET_EXTERNAL_FUNCTION.as_feature */
extern T0* T163f52(T0* C);
/* ET_INVARIANTS.arguments */
extern T0* T503f17(T0* C);
/* ET_EXTERNAL_PROCEDURE.locals */
extern T0* T638f48(T0* C);
/* ET_DEFERRED_FUNCTION.locals */
extern T0* T632f49(T0* C);
/* ET_INVARIANTS.locals */
extern T0* T503f16(T0* C);
/* ET_DEFERRED_PROCEDURE.locals */
extern T0* T302f44(T0* C);
/* ET_ATTRIBUTE.locals */
extern T0* T226f45(T0* C);
/* ET_UNIQUE_ATTRIBUTE.locals */
extern T0* T225f47(T0* C);
/* ET_CONSTANT_ATTRIBUTE.locals */
extern T0* T223f47(T0* C);
/* ET_EXTERNAL_FUNCTION.locals */
extern T0* T163f53(T0* C);
/* ET_INVARIANTS.implementation_feature */
extern T0* T503f13(T0* C);
/* ET_CONVERT_TO_EXPRESSION.expression_item */
extern T0* T1339f7(T0* C);
/* ET_INFIX_CAST_EXPRESSION.expression_item */
extern T0* T1241f9(T0* C);
/* ET_CONVERT_EXPRESSION.expression_item */
extern T0* T1240f9(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T805f12(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T804f13(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.expression_item */
extern T0* T803f13(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T802f14(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T801f15(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.expression_item */
extern T0* T799f15(T0* C);
/* ET_MANIFEST_TYPE.expression_item */
extern T0* T789f6(T0* C);
/* ET_STRIP_EXPRESSION.expression_item */
extern T0* T782f9(T0* C);
/* ET_MANIFEST_ARRAY.expression_item */
extern T0* T780f8(T0* C);
/* ET_ONCE_MANIFEST_STRING.expression_item */
extern T0* T779f5(T0* C);
/* ET_CALL_AGENT.expression_item */
extern T0* T775f7(T0* C);
/* ET_OLD_EXPRESSION.expression_item */
extern T0* T774f5(T0* C);
/* ET_PREFIX_EXPRESSION.expression_item */
extern T0* T773f4(T0* C);
/* ET_EQUALITY_EXPRESSION.expression_item */
extern T0* T772f5(T0* C);
/* ET_INFIX_EXPRESSION.expression_item */
extern T0* T768f5(T0* C);
/* ET_EXPRESSION_ADDRESS.expression_item */
extern T0* T766f5(T0* C);
/* ET_RESULT_ADDRESS.expression_item */
extern T0* T765f5(T0* C);
/* ET_CURRENT_ADDRESS.expression_item */
extern T0* T764f5(T0* C);
/* ET_FEATURE_ADDRESS.expression_item */
extern T0* T763f5(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.expression_item */
extern T0* T758f6(T0* C);
/* ET_PRECURSOR_EXPRESSION.expression_item */
extern T0* T757f7(T0* C);
/* ET_STATIC_CALL_EXPRESSION.expression_item */
extern T0* T742f6(T0* C);
/* ET_BRACKET_EXPRESSION.expression_item */
extern T0* T694f5(T0* C);
/* ET_MANIFEST_TUPLE.expression_item */
extern T0* T523f8(T0* C);
/* ET_CREATE_EXPRESSION.expression_item */
extern T0* T520f6(T0* C);
/* ET_C2_CHARACTER_CONSTANT.expression_item */
extern T0* T491f8(T0* C);
/* ET_C1_CHARACTER_CONSTANT.expression_item */
extern T0* T490f8(T0* C);
/* ET_FALSE_CONSTANT.expression_item */
extern T0* T489f10(T0* C);
/* ET_TRUE_CONSTANT.expression_item */
extern T0* T488f10(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.expression_item */
extern T0* T486f9(T0* C);
/* ET_REGULAR_REAL_CONSTANT.expression_item */
extern T0* T485f9(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.expression_item */
extern T0* T484f13(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.expression_item */
extern T0* T483f13(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.expression_item */
extern T0* T482f13(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.expression_item */
extern T0* T481f10(T0* C);
/* ET_VERBATIM_STRING.expression_item */
extern T0* T480f14(T0* C);
/* ET_REGULAR_MANIFEST_STRING.expression_item */
extern T0* T479f9(T0* C);
/* ET_C3_CHARACTER_CONSTANT.expression_item */
extern T0* T478f9(T0* C);
/* ET_VOID.expression_item */
extern T0* T466f10(T0* C);
/* ET_BIT_CONSTANT.expression_item */
extern T0* T430f8(T0* C);
/* ET_RESULT.expression_item */
extern T0* T206f10(T0* C);
/* ET_CALL_EXPRESSION.expression_item */
extern T0* T186f5(T0* C);
/* ET_CURRENT.expression_item */
extern T0* T182f10(T0* C);
/* ET_IDENTIFIER.expression_item */
extern T0* T119f43(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_open_operand */
extern T1 T1339f14(T0* C);
/* ET_CONVERT_EXPRESSION.is_open_operand */
extern T1 T1240f13(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T805f20(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T804f21(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_open_operand */
extern T1 T803f21(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T802f21(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T801f22(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_open_operand */
extern T1 T799f22(T0* C);
/* ET_MANIFEST_TYPE.is_open_operand */
extern T1 T789f11(T0* C);
/* ET_STRIP_EXPRESSION.is_open_operand */
extern T1 T782f14(T0* C);
/* ET_MANIFEST_ARRAY.is_open_operand */
extern T1 T780f15(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_open_operand */
extern T1 T779f10(T0* C);
/* ET_CALL_AGENT.is_open_operand */
extern T1 T775f15(T0* C);
/* ET_OLD_EXPRESSION.is_open_operand */
extern T1 T774f10(T0* C);
/* ET_PREFIX_EXPRESSION.is_open_operand */
extern T1 T773f10(T0* C);
/* ET_EQUALITY_EXPRESSION.is_open_operand */
extern T1 T772f10(T0* C);
/* ET_INFIX_EXPRESSION.is_open_operand */
extern T1 T768f10(T0* C);
/* ET_EXPRESSION_ADDRESS.is_open_operand */
extern T1 T766f10(T0* C);
/* ET_RESULT_ADDRESS.is_open_operand */
extern T1 T765f10(T0* C);
/* ET_CURRENT_ADDRESS.is_open_operand */
extern T1 T764f10(T0* C);
/* ET_FEATURE_ADDRESS.is_open_operand */
extern T1 T763f10(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_open_operand */
extern T1 T757f13(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_open_operand */
extern T1 T742f14(T0* C);
/* ET_BRACKET_EXPRESSION.is_open_operand */
extern T1 T694f10(T0* C);
/* ET_MANIFEST_TUPLE.is_open_operand */
extern T1 T523f15(T0* C);
/* ET_CREATE_EXPRESSION.is_open_operand */
extern T1 T520f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_open_operand */
extern T1 T491f22(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_open_operand */
extern T1 T490f22(T0* C);
/* ET_FALSE_CONSTANT.is_open_operand */
extern T1 T489f21(T0* C);
/* ET_TRUE_CONSTANT.is_open_operand */
extern T1 T488f21(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_open_operand */
extern T1 T486f23(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_open_operand */
extern T1 T485f23(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_open_operand */
extern T1 T484f32(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_open_operand */
extern T1 T483f33(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_open_operand */
extern T1 T482f33(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_open_operand */
extern T1 T481f27(T0* C);
/* ET_VERBATIM_STRING.is_open_operand */
extern T1 T480f31(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_open_operand */
extern T1 T479f26(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_open_operand */
extern T1 T478f23(T0* C);
/* ET_VOID.is_open_operand */
extern T1 T466f15(T0* C);
/* ET_BIT_CONSTANT.is_open_operand */
extern T1 T430f19(T0* C);
/* ET_CALL_EXPRESSION.is_open_operand */
extern T1 T186f13(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.is_open_operand */
extern T1 T1123f3(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_open_operand */
extern T1 T758f11(T0* C);
/* ET_RESULT.is_open_operand */
extern T1 T206f15(T0* C);
/* ET_CURRENT.is_open_operand */
extern T1 T182f16(T0* C);
/* ET_IDENTIFIER.is_open_operand */
extern T1 T119f78(T0* C);
/* ET_AGENT_IMPLICIT_CURRENT_TARGET.position */
extern T0* T1123f4(T0* C);
/* ET_AGENT_OPEN_TARGET.position */
extern T0* T798f7(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T491f11(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T490f11(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_boolean_constant */
extern T1 T486f12(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_boolean_constant */
extern T1 T485f12(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T484f22(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T483f23(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_boolean_constant */
extern T1 T482f23(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_boolean_constant */
extern T1 T481f13(T0* C);
/* ET_VERBATIM_STRING.is_boolean_constant */
extern T1 T480f17(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_boolean_constant */
extern T1 T479f12(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_boolean_constant */
extern T1 T478f12(T0* C);
/* ET_BIT_CONSTANT.is_boolean_constant */
extern T1 T430f10(T0* C);
/* ET_FALSE_CONSTANT.is_character_constant */
extern T1 T489f13(T0* C);
/* ET_TRUE_CONSTANT.is_character_constant */
extern T1 T488f13(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_character_constant */
extern T1 T486f13(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_character_constant */
extern T1 T485f13(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_character_constant */
extern T1 T484f23(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_character_constant */
extern T1 T483f24(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_character_constant */
extern T1 T482f24(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_character_constant */
extern T1 T481f14(T0* C);
/* ET_VERBATIM_STRING.is_character_constant */
extern T1 T480f18(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_character_constant */
extern T1 T479f13(T0* C);
/* ET_BIT_CONSTANT.is_character_constant */
extern T1 T430f11(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T491f13(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T490f13(T0* C);
/* ET_FALSE_CONSTANT.is_integer_constant */
extern T1 T489f14(T0* C);
/* ET_TRUE_CONSTANT.is_integer_constant */
extern T1 T488f14(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_integer_constant */
extern T1 T486f14(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_integer_constant */
extern T1 T485f14(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_integer_constant */
extern T1 T481f15(T0* C);
/* ET_VERBATIM_STRING.is_integer_constant */
extern T1 T480f19(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_integer_constant */
extern T1 T479f14(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_integer_constant */
extern T1 T478f14(T0* C);
/* ET_BIT_CONSTANT.is_integer_constant */
extern T1 T430f12(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_real_constant */
extern T1 T491f14(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_real_constant */
extern T1 T490f14(T0* C);
/* ET_FALSE_CONSTANT.is_real_constant */
extern T1 T489f15(T0* C);
/* ET_TRUE_CONSTANT.is_real_constant */
extern T1 T488f15(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_real_constant */
extern T1 T484f25(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_real_constant */
extern T1 T483f26(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_real_constant */
extern T1 T482f26(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_real_constant */
extern T1 T481f16(T0* C);
/* ET_VERBATIM_STRING.is_real_constant */
extern T1 T480f20(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_real_constant */
extern T1 T479f15(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_real_constant */
extern T1 T478f15(T0* C);
/* ET_BIT_CONSTANT.is_real_constant */
extern T1 T430f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_string_constant */
extern T1 T491f15(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_string_constant */
extern T1 T490f15(T0* C);
/* ET_FALSE_CONSTANT.is_string_constant */
extern T1 T489f16(T0* C);
/* ET_TRUE_CONSTANT.is_string_constant */
extern T1 T488f16(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_string_constant */
extern T1 T486f16(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_string_constant */
extern T1 T485f16(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_string_constant */
extern T1 T484f26(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_string_constant */
extern T1 T483f27(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_string_constant */
extern T1 T482f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_string_constant */
extern T1 T478f16(T0* C);
/* ET_BIT_CONSTANT.is_string_constant */
extern T1 T430f14(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T491f16(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T490f16(T0* C);
/* ET_FALSE_CONSTANT.is_bit_constant */
extern T1 T489f17(T0* C);
/* ET_TRUE_CONSTANT.is_bit_constant */
extern T1 T488f17(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_bit_constant */
extern T1 T486f17(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_bit_constant */
extern T1 T485f17(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_bit_constant */
extern T1 T484f27(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_bit_constant */
extern T1 T483f28(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_bit_constant */
extern T1 T482f28(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_bit_constant */
extern T1 T481f18(T0* C);
/* ET_VERBATIM_STRING.is_bit_constant */
extern T1 T480f22(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_bit_constant */
extern T1 T479f17(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_bit_constant */
extern T1 T478f17(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T805f19(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T804f20(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_result */
extern T0* T803f20(T0* C);
/* ET_CALL_AGENT.is_qualified_call */
extern T1 T775f14(T0* C);
/* ET_CALL_AGENT.is_inline_agent */
extern T1 T775f18(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T805f26(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T805f28(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T804f26(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T804f28(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.implicit_target_position */
extern T0* T803f26(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.first_leaf */
extern T0* T803f28(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T802f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T802f29(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T801f27(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T801f29(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.implicit_target_position */
extern T0* T799f27(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.first_leaf */
extern T0* T799f29(T0* C);
/* ET_CALL_AGENT.implicit_target_position */
extern T0* T775f22(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_bracket */
extern T1 T771f11(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_bracket */
extern T1 T770f11(T0* C);
/* ET_ALIAS_FREE_NAME.is_bracket */
extern T1 T651f10(T0* C);
/* ET_ALIAS_NAME.is_bracket */
extern T1 T647f7(T0* C);
/* ET_INFIX_FREE_NAME.is_bracket */
extern T1 T645f40(T0* C);
/* ET_INFIX_NAME.is_bracket */
extern T1 T644f20(T0* C);
/* ET_PREFIX_FREE_NAME.is_bracket */
extern T1 T643f22(T0* C);
/* ET_PREFIX_NAME.is_bracket */
extern T1 T642f17(T0* C);
/* ET_SYMBOL_OPERATOR.is_bracket */
extern T1 T463f22(T0* C);
/* ET_KEYWORD_OPERATOR.is_bracket */
extern T1 T450f19(T0* C);
/* ET_FREE_OPERATOR.is_bracket */
extern T1 T444f18(T0* C);
/* ET_IDENTIFIER.is_bracket */
extern T1 T119f69(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_div */
extern T1 T771f12(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_div */
extern T1 T770f12(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_div */
extern T1 T651f19(T0* C);
/* ET_ALIAS_NAME.is_infix_div */
extern T1 T647f41(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_div */
extern T1 T645f17(T0* C);
/* ET_INFIX_NAME.is_infix_div */
extern T1 T644f43(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_div */
extern T1 T643f33(T0* C);
/* ET_PREFIX_NAME.is_infix_div */
extern T1 T642f30(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_div */
extern T1 T472f21(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_div */
extern T1 T463f23(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_div */
extern T1 T450f20(T0* C);
/* ET_FREE_OPERATOR.is_infix_div */
extern T1 T444f19(T0* C);
/* ET_IDENTIFIER.is_infix_div */
extern T1 T119f54(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_divide */
extern T1 T771f13(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_divide */
extern T1 T770f13(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_divide */
extern T1 T651f20(T0* C);
/* ET_ALIAS_NAME.is_infix_divide */
extern T1 T647f42(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_divide */
extern T1 T645f18(T0* C);
/* ET_INFIX_NAME.is_infix_divide */
extern T1 T644f44(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_divide */
extern T1 T643f34(T0* C);
/* ET_PREFIX_NAME.is_infix_divide */
extern T1 T642f31(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_divide */
extern T1 T472f22(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_divide */
extern T1 T463f24(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_divide */
extern T1 T450f21(T0* C);
/* ET_FREE_OPERATOR.is_infix_divide */
extern T1 T444f20(T0* C);
/* ET_IDENTIFIER.is_infix_divide */
extern T1 T119f55(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_ge */
extern T1 T771f14(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_ge */
extern T1 T770f14(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_ge */
extern T1 T651f21(T0* C);
/* ET_ALIAS_NAME.is_infix_ge */
extern T1 T647f43(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_ge */
extern T1 T645f19(T0* C);
/* ET_INFIX_NAME.is_infix_ge */
extern T1 T644f45(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_ge */
extern T1 T643f35(T0* C);
/* ET_PREFIX_NAME.is_infix_ge */
extern T1 T642f32(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_ge */
extern T1 T472f23(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_ge */
extern T1 T463f25(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_ge */
extern T1 T450f22(T0* C);
/* ET_FREE_OPERATOR.is_infix_ge */
extern T1 T444f21(T0* C);
/* ET_IDENTIFIER.is_infix_ge */
extern T1 T119f56(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_gt */
extern T1 T771f15(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_gt */
extern T1 T770f15(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_gt */
extern T1 T651f22(T0* C);
/* ET_ALIAS_NAME.is_infix_gt */
extern T1 T647f44(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_gt */
extern T1 T645f20(T0* C);
/* ET_INFIX_NAME.is_infix_gt */
extern T1 T644f46(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_gt */
extern T1 T643f36(T0* C);
/* ET_PREFIX_NAME.is_infix_gt */
extern T1 T642f33(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_gt */
extern T1 T472f24(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_gt */
extern T1 T463f26(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_gt */
extern T1 T450f23(T0* C);
/* ET_FREE_OPERATOR.is_infix_gt */
extern T1 T444f22(T0* C);
/* ET_IDENTIFIER.is_infix_gt */
extern T1 T119f57(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_le */
extern T1 T771f16(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_le */
extern T1 T770f16(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_le */
extern T1 T651f24(T0* C);
/* ET_ALIAS_NAME.is_infix_le */
extern T1 T647f46(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_le */
extern T1 T645f22(T0* C);
/* ET_INFIX_NAME.is_infix_le */
extern T1 T644f48(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_le */
extern T1 T643f38(T0* C);
/* ET_PREFIX_NAME.is_infix_le */
extern T1 T642f35(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_le */
extern T1 T472f25(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_le */
extern T1 T463f27(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_le */
extern T1 T450f24(T0* C);
/* ET_FREE_OPERATOR.is_infix_le */
extern T1 T444f23(T0* C);
/* ET_IDENTIFIER.is_infix_le */
extern T1 T119f59(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_lt */
extern T1 T771f17(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_lt */
extern T1 T770f17(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_lt */
extern T1 T651f25(T0* C);
/* ET_ALIAS_NAME.is_infix_lt */
extern T1 T647f47(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_lt */
extern T1 T645f23(T0* C);
/* ET_INFIX_NAME.is_infix_lt */
extern T1 T644f49(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_lt */
extern T1 T643f39(T0* C);
/* ET_PREFIX_NAME.is_infix_lt */
extern T1 T642f36(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_lt */
extern T1 T472f26(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_lt */
extern T1 T463f28(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_lt */
extern T1 T450f25(T0* C);
/* ET_FREE_OPERATOR.is_infix_lt */
extern T1 T444f24(T0* C);
/* ET_IDENTIFIER.is_infix_lt */
extern T1 T119f60(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_minus */
extern T1 T771f18(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_minus */
extern T1 T770f18(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_minus */
extern T1 T651f26(T0* C);
/* ET_ALIAS_NAME.is_infix_minus */
extern T1 T647f35(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_minus */
extern T1 T645f24(T0* C);
/* ET_INFIX_NAME.is_infix_minus */
extern T1 T644f50(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_minus */
extern T1 T643f40(T0* C);
/* ET_PREFIX_NAME.is_infix_minus */
extern T1 T642f37(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_minus */
extern T1 T472f27(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_minus */
extern T1 T463f29(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_minus */
extern T1 T450f26(T0* C);
/* ET_FREE_OPERATOR.is_infix_minus */
extern T1 T444f25(T0* C);
/* ET_IDENTIFIER.is_infix_minus */
extern T1 T119f61(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_mod */
extern T1 T771f19(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_mod */
extern T1 T770f19(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_mod */
extern T1 T651f27(T0* C);
/* ET_ALIAS_NAME.is_infix_mod */
extern T1 T647f48(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_mod */
extern T1 T645f25(T0* C);
/* ET_INFIX_NAME.is_infix_mod */
extern T1 T644f51(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_mod */
extern T1 T643f41(T0* C);
/* ET_PREFIX_NAME.is_infix_mod */
extern T1 T642f38(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_mod */
extern T1 T472f28(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_mod */
extern T1 T463f30(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_mod */
extern T1 T450f27(T0* C);
/* ET_FREE_OPERATOR.is_infix_mod */
extern T1 T444f26(T0* C);
/* ET_IDENTIFIER.is_infix_mod */
extern T1 T119f62(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_plus */
extern T1 T771f20(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_plus */
extern T1 T770f20(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_plus */
extern T1 T651f30(T0* C);
/* ET_ALIAS_NAME.is_infix_plus */
extern T1 T647f34(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_plus */
extern T1 T645f28(T0* C);
/* ET_INFIX_NAME.is_infix_plus */
extern T1 T644f54(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_plus */
extern T1 T643f44(T0* C);
/* ET_PREFIX_NAME.is_infix_plus */
extern T1 T642f41(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_plus */
extern T1 T472f29(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_plus */
extern T1 T463f31(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_plus */
extern T1 T450f28(T0* C);
/* ET_FREE_OPERATOR.is_infix_plus */
extern T1 T444f27(T0* C);
/* ET_IDENTIFIER.is_infix_plus */
extern T1 T119f65(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_power */
extern T1 T771f21(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_power */
extern T1 T770f21(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_power */
extern T1 T651f31(T0* C);
/* ET_ALIAS_NAME.is_infix_power */
extern T1 T647f51(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_power */
extern T1 T645f29(T0* C);
/* ET_INFIX_NAME.is_infix_power */
extern T1 T644f55(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_power */
extern T1 T643f45(T0* C);
/* ET_PREFIX_NAME.is_infix_power */
extern T1 T642f42(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_power */
extern T1 T472f30(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_power */
extern T1 T463f32(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_power */
extern T1 T450f29(T0* C);
/* ET_FREE_OPERATOR.is_infix_power */
extern T1 T444f28(T0* C);
/* ET_IDENTIFIER.is_infix_power */
extern T1 T119f66(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_times */
extern T1 T771f22(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_times */
extern T1 T770f22(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_times */
extern T1 T651f32(T0* C);
/* ET_ALIAS_NAME.is_infix_times */
extern T1 T647f52(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_times */
extern T1 T645f30(T0* C);
/* ET_INFIX_NAME.is_infix_times */
extern T1 T644f56(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_times */
extern T1 T643f46(T0* C);
/* ET_PREFIX_NAME.is_infix_times */
extern T1 T642f43(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_times */
extern T1 T472f31(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_times */
extern T1 T463f33(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_times */
extern T1 T450f30(T0* C);
/* ET_FREE_OPERATOR.is_infix_times */
extern T1 T444f29(T0* C);
/* ET_IDENTIFIER.is_infix_times */
extern T1 T119f67(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_xor */
extern T1 T771f23(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_xor */
extern T1 T770f23(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_xor */
extern T1 T651f33(T0* C);
/* ET_ALIAS_NAME.is_infix_xor */
extern T1 T647f53(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_xor */
extern T1 T645f31(T0* C);
/* ET_INFIX_NAME.is_infix_xor */
extern T1 T644f57(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_xor */
extern T1 T643f47(T0* C);
/* ET_PREFIX_NAME.is_infix_xor */
extern T1 T642f44(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_xor */
extern T1 T472f32(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_xor */
extern T1 T463f34(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_xor */
extern T1 T450f31(T0* C);
/* ET_FREE_OPERATOR.is_infix_xor */
extern T1 T444f30(T0* C);
/* ET_IDENTIFIER.is_infix_xor */
extern T1 T119f68(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_dotdot */
extern T1 T771f24(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_dotdot */
extern T1 T770f24(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_dotdot */
extern T1 T651f34(T0* C);
/* ET_ALIAS_NAME.is_infix_dotdot */
extern T1 T647f54(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_dotdot */
extern T1 T645f48(T0* C);
/* ET_INFIX_NAME.is_infix_dotdot */
extern T1 T644f59(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_dotdot */
extern T1 T643f48(T0* C);
/* ET_PREFIX_NAME.is_infix_dotdot */
extern T1 T642f45(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_dotdot */
extern T1 T472f33(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_dotdot */
extern T1 T463f35(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_dotdot */
extern T1 T450f32(T0* C);
/* ET_FREE_OPERATOR.is_infix_dotdot */
extern T1 T444f31(T0* C);
/* ET_IDENTIFIER.is_infix_dotdot */
extern T1 T119f70(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_minus */
extern T1 T771f25(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_minus */
extern T1 T770f25(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_minus */
extern T1 T651f35(T0* C);
/* ET_ALIAS_NAME.is_prefix_minus */
extern T1 T647f37(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_minus */
extern T1 T645f11(T0* C);
/* ET_INFIX_NAME.is_prefix_minus */
extern T1 T644f8(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_minus */
extern T1 T643f18(T0* C);
/* ET_PREFIX_NAME.is_prefix_minus */
extern T1 T642f24(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_minus */
extern T1 T472f34(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_minus */
extern T1 T463f36(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_minus */
extern T1 T450f33(T0* C);
/* ET_FREE_OPERATOR.is_prefix_minus */
extern T1 T444f32(T0* C);
/* ET_IDENTIFIER.is_prefix_minus */
extern T1 T119f49(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_plus */
extern T1 T771f26(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_plus */
extern T1 T770f26(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_plus */
extern T1 T651f36(T0* C);
/* ET_ALIAS_NAME.is_prefix_plus */
extern T1 T647f36(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_plus */
extern T1 T645f12(T0* C);
/* ET_INFIX_NAME.is_prefix_plus */
extern T1 T644f9(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_plus */
extern T1 T643f19(T0* C);
/* ET_PREFIX_NAME.is_prefix_plus */
extern T1 T642f25(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_plus */
extern T1 T472f35(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_plus */
extern T1 T463f37(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_plus */
extern T1 T450f34(T0* C);
/* ET_FREE_OPERATOR.is_prefix_plus */
extern T1 T444f33(T0* C);
/* ET_IDENTIFIER.is_prefix_plus */
extern T1 T119f50(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_prefix_not */
extern T1 T771f27(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_prefix_not */
extern T1 T770f27(T0* C);
/* ET_ALIAS_FREE_NAME.is_prefix_not */
extern T1 T651f37(T0* C);
/* ET_ALIAS_NAME.is_prefix_not */
extern T1 T647f55(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix_not */
extern T1 T645f13(T0* C);
/* ET_INFIX_NAME.is_prefix_not */
extern T1 T644f10(T0* C);
/* ET_PREFIX_FREE_NAME.is_prefix_not */
extern T1 T643f20(T0* C);
/* ET_PREFIX_NAME.is_prefix_not */
extern T1 T642f26(T0* C);
/* ET_BRACKET_SYMBOL.is_prefix_not */
extern T1 T472f36(T0* C);
/* ET_SYMBOL_OPERATOR.is_prefix_not */
extern T1 T463f38(T0* C);
/* ET_KEYWORD_OPERATOR.is_prefix_not */
extern T1 T450f35(T0* C);
/* ET_FREE_OPERATOR.is_prefix_not */
extern T1 T444f34(T0* C);
/* ET_IDENTIFIER.is_prefix_not */
extern T1 T119f51(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and_then */
extern T1 T771f5(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and_then */
extern T1 T651f18(T0* C);
/* ET_ALIAS_NAME.is_infix_and_then */
extern T1 T647f40(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and_then */
extern T1 T645f16(T0* C);
/* ET_INFIX_NAME.is_infix_and_then */
extern T1 T644f42(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and_then */
extern T1 T643f32(T0* C);
/* ET_PREFIX_NAME.is_infix_and_then */
extern T1 T642f29(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and_then */
extern T1 T472f12(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and_then */
extern T1 T463f10(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and_then */
extern T1 T450f12(T0* C);
/* ET_FREE_OPERATOR.is_infix_and_then */
extern T1 T444f11(T0* C);
/* ET_IDENTIFIER.is_infix_and_then */
extern T1 T119f53(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_and */
extern T1 T771f8(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_and */
extern T1 T770f8(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_and */
extern T1 T651f17(T0* C);
/* ET_ALIAS_NAME.is_infix_and */
extern T1 T647f39(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_and */
extern T1 T645f15(T0* C);
/* ET_INFIX_NAME.is_infix_and */
extern T1 T644f41(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_and */
extern T1 T643f31(T0* C);
/* ET_PREFIX_NAME.is_infix_and */
extern T1 T642f28(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_and */
extern T1 T472f15(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_and */
extern T1 T463f13(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_and */
extern T1 T450f15(T0* C);
/* ET_FREE_OPERATOR.is_infix_and */
extern T1 T444f14(T0* C);
/* ET_IDENTIFIER.is_infix_and */
extern T1 T119f52(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or_else */
extern T1 T770f6(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or_else */
extern T1 T651f29(T0* C);
/* ET_ALIAS_NAME.is_infix_or_else */
extern T1 T647f50(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or_else */
extern T1 T645f27(T0* C);
/* ET_INFIX_NAME.is_infix_or_else */
extern T1 T644f53(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or_else */
extern T1 T643f43(T0* C);
/* ET_PREFIX_NAME.is_infix_or_else */
extern T1 T642f40(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or_else */
extern T1 T472f13(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or_else */
extern T1 T463f11(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or_else */
extern T1 T450f13(T0* C);
/* ET_FREE_OPERATOR.is_infix_or_else */
extern T1 T444f12(T0* C);
/* ET_IDENTIFIER.is_infix_or_else */
extern T1 T119f64(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_or */
extern T1 T771f9(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_or */
extern T1 T770f9(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_or */
extern T1 T651f28(T0* C);
/* ET_ALIAS_NAME.is_infix_or */
extern T1 T647f49(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_or */
extern T1 T645f26(T0* C);
/* ET_INFIX_NAME.is_infix_or */
extern T1 T644f52(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_or */
extern T1 T643f42(T0* C);
/* ET_PREFIX_NAME.is_infix_or */
extern T1 T642f39(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_or */
extern T1 T472f16(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_or */
extern T1 T463f14(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_or */
extern T1 T450f16(T0* C);
/* ET_FREE_OPERATOR.is_infix_or */
extern T1 T444f15(T0* C);
/* ET_IDENTIFIER.is_infix_or */
extern T1 T119f63(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_infix_implies */
extern T1 T771f7(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_infix_implies */
extern T1 T770f7(T0* C);
/* ET_ALIAS_FREE_NAME.is_infix_implies */
extern T1 T651f23(T0* C);
/* ET_ALIAS_NAME.is_infix_implies */
extern T1 T647f45(T0* C);
/* ET_INFIX_FREE_NAME.is_infix_implies */
extern T1 T645f21(T0* C);
/* ET_INFIX_NAME.is_infix_implies */
extern T1 T644f47(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix_implies */
extern T1 T643f37(T0* C);
/* ET_PREFIX_NAME.is_infix_implies */
extern T1 T642f34(T0* C);
/* ET_BRACKET_SYMBOL.is_infix_implies */
extern T1 T472f14(T0* C);
/* ET_SYMBOL_OPERATOR.is_infix_implies */
extern T1 T463f12(T0* C);
/* ET_KEYWORD_OPERATOR.is_infix_implies */
extern T1 T450f14(T0* C);
/* ET_FREE_OPERATOR.is_infix_implies */
extern T1 T444f13(T0* C);
/* ET_IDENTIFIER.is_infix_implies */
extern T1 T119f58(T0* C);
/* ET_INFIX_FREE_NAME.is_precursor */
extern T1 T645f54(T0* C);
/* ET_INFIX_NAME.is_precursor */
extern T1 T644f65(T0* C);
/* ET_PREFIX_FREE_NAME.is_precursor */
extern T1 T643f54(T0* C);
/* ET_PREFIX_NAME.is_precursor */
extern T1 T642f51(T0* C);
/* ET_BRACKET_SYMBOL.is_precursor */
extern T1 T472f37(T0* C);
/* ET_SYMBOL_OPERATOR.is_precursor */
extern T1 T463f39(T0* C);
/* ET_KEYWORD_OPERATOR.is_precursor */
extern T1 T450f36(T0* C);
/* ET_FREE_OPERATOR.is_precursor */
extern T1 T444f36(T0* C);
/* ET_PRECURSOR_KEYWORD.is_precursor */
extern T1 T422f10(T0* C);
/* ET_IDENTIFIER.is_precursor */
extern T1 T119f82(T0* C);
/* ET_INFIX_FREE_NAME.precursor_keyword */
extern T0* T645f55(T0* C);
/* ET_INFIX_NAME.precursor_keyword */
extern T0* T644f66(T0* C);
/* ET_PREFIX_FREE_NAME.precursor_keyword */
extern T0* T643f55(T0* C);
/* ET_PREFIX_NAME.precursor_keyword */
extern T0* T642f52(T0* C);
/* ET_BRACKET_SYMBOL.precursor_keyword */
extern T0* T472f38(T0* C);
/* ET_SYMBOL_OPERATOR.precursor_keyword */
extern T0* T463f40(T0* C);
/* ET_KEYWORD_OPERATOR.precursor_keyword */
extern T0* T450f37(T0* C);
/* ET_FREE_OPERATOR.precursor_keyword */
extern T0* T444f37(T0* C);
/* ET_PRECURSOR_KEYWORD.precursor_keyword */
extern T0* T422f11(T0* C);
/* ET_IDENTIFIER.precursor_keyword */
extern T0* T119f83(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.is_tuple_label */
extern T1 T771f10(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.is_tuple_label */
extern T1 T770f10(T0* C);
/* ET_BRACKET_SYMBOL.is_tuple_label */
extern T1 T472f18(T0* C);
/* ET_SYMBOL_OPERATOR.is_tuple_label */
extern T1 T463f16(T0* C);
/* ET_KEYWORD_OPERATOR.is_tuple_label */
extern T1 T450f18(T0* C);
/* ET_FREE_OPERATOR.is_tuple_label */
extern T1 T444f17(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.position */
extern T0* T771f30(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.position */
extern T0* T770f30(T0* C);
/* ET_BRACKET_SYMBOL.position */
extern T0* T472f8(T0* C);
/* ET_SYMBOL_OPERATOR.position */
extern T0* T463f8(T0* C);
/* ET_KEYWORD_OPERATOR.position */
extern T0* T450f9(T0* C);
/* ET_FREE_OPERATOR.position */
extern T0* T444f42(T0* C);
/* ET_PRECURSOR_KEYWORD.position */
extern T0* T422f12(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.lower_name */
extern T0* T771f28(T0* C);
/* ET_INFIX_OR_ELSE_OPERATOR.name */
extern T0* T771f29(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.lower_name */
extern T0* T770f28(T0* C);
/* ET_INFIX_AND_THEN_OPERATOR.name */
extern T0* T770f29(T0* C);
/* ET_BRACKET_SYMBOL.lower_name */
extern T0* T472f39(T0* C);
/* ET_BRACKET_SYMBOL.name */
extern T0* T472f40(T0* C);
/* ET_SYMBOL_OPERATOR.lower_name */
extern T0* T463f41(T0* C);
/* ET_SYMBOL_OPERATOR.name */
extern T0* T463f42(T0* C);
/* ET_KEYWORD_OPERATOR.lower_name */
extern T0* T450f38(T0* C);
/* ET_KEYWORD_OPERATOR.name */
extern T0* T450f39(T0* C);
/* ET_FREE_OPERATOR.lower_name */
extern T0* T444f38(T0* C);
/* ET_FREE_OPERATOR.name */
extern T0* T444f39(T0* C);
/* ET_PRECURSOR_KEYWORD.lower_name */
extern T0* T422f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.position */
extern T0* T691f9(T0* C);
/* ET_CALL_INSTRUCTION.position */
extern T0* T184f7(T0* C);
/* ET_CONVERT_TO_EXPRESSION.name */
extern T0* T1339f8(T0* C);
/* ET_CALL_AGENT.name */
extern T0* T775f8(T0* C);
/* ET_CALL_EXPRESSION.name */
extern T0* T186f10(T0* C);
/* ET_CALL_INSTRUCTION.name */
extern T0* T184f4(T0* C);
/* ET_CONVERT_TO_EXPRESSION.arguments */
extern T0* T1339f9(T0* C);
/* ET_PREFIX_EXPRESSION.arguments */
extern T0* T773f7(T0* C);
/* ET_ASSIGNER_INSTRUCTION.arguments */
extern T0* T691f8(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.is_empty */
extern T1 T1348f3(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_empty_actual_argument */
extern T1 T1339f6(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_empty_actual_argument */
extern T1 T1241f7(T0* C);
/* ET_CONVERT_EXPRESSION.is_empty_actual_argument */
extern T1 T1240f8(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T805f24(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T804f24(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_empty_actual_argument */
extern T1 T803f24(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T802f25(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T801f25(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_empty_actual_argument */
extern T1 T799f25(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.is_empty */
extern T1 T794f9(T0* C);
/* ET_MANIFEST_TYPE.is_empty_actual_argument */
extern T1 T789f13(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.is_empty */
extern T1 T784f9(T0* C);
/* ET_STRIP_EXPRESSION.is_empty_actual_argument */
extern T1 T782f17(T0* C);
/* ET_MANIFEST_ARRAY.is_empty_actual_argument */
extern T1 T780f17(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T779f12(T0* C);
/* ET_CALL_AGENT.is_empty_actual_argument */
extern T1 T775f19(T0* C);
/* ET_OLD_EXPRESSION.is_empty_actual_argument */
extern T1 T774f12(T0* C);
/* ET_PREFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T773f13(T0* C);
/* ET_EQUALITY_EXPRESSION.is_empty_actual_argument */
extern T1 T772f12(T0* C);
/* ET_INFIX_EXPRESSION.is_empty_actual_argument */
extern T1 T768f12(T0* C);
/* ET_EXPRESSION_ADDRESS.is_empty_actual_argument */
extern T1 T766f12(T0* C);
/* ET_RESULT_ADDRESS.is_empty_actual_argument */
extern T1 T765f12(T0* C);
/* ET_CURRENT_ADDRESS.is_empty_actual_argument */
extern T1 T764f12(T0* C);
/* ET_FEATURE_ADDRESS.is_empty_actual_argument */
extern T1 T763f12(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_empty_actual_argument */
extern T1 T758f13(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_empty_actual_argument */
extern T1 T757f15(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T742f17(T0* C);
/* ET_BRACKET_EXPRESSION.is_empty_actual_argument */
extern T1 T694f13(T0* C);
/* ET_ASSIGNER_INSTRUCTION.is_empty */
extern T1 T691f12(T0* C);
/* ET_MANIFEST_TUPLE.is_empty_actual_argument */
extern T1 T523f17(T0* C);
/* ET_CREATE_EXPRESSION.is_empty_actual_argument */
extern T1 T520f15(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T491f24(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T490f24(T0* C);
/* ET_FALSE_CONSTANT.is_empty_actual_argument */
extern T1 T489f23(T0* C);
/* ET_TRUE_CONSTANT.is_empty_actual_argument */
extern T1 T488f23(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T486f25(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_empty_actual_argument */
extern T1 T485f25(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T484f34(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T483f35(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_empty_actual_argument */
extern T1 T482f35(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T481f29(T0* C);
/* ET_VERBATIM_STRING.is_empty_actual_argument */
extern T1 T480f33(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_empty_actual_argument */
extern T1 T479f28(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_empty_actual_argument */
extern T1 T478f25(T0* C);
/* ET_VOID.is_empty_actual_argument */
extern T1 T466f17(T0* C);
/* ET_BIT_CONSTANT.is_empty_actual_argument */
extern T1 T430f21(T0* C);
/* ET_RESULT.is_empty_actual_argument */
extern T1 T206f18(T0* C);
/* ET_CALL_EXPRESSION.is_empty_actual_argument */
extern T1 T186f16(T0* C);
/* ET_ACTUAL_ARGUMENT_LIST.is_empty */
extern T1 T183f10(T0* C);
/* ET_CURRENT.is_empty_actual_argument */
extern T1 T182f23(T0* C);
/* ET_IDENTIFIER.is_empty_actual_argument */
extern T1 T119f84(T0* C);
/* ET_ASSIGNER_INSTRUCTION.count */
extern T6 T691f10(T0* C);
/* ET_AGENT_IMPLICIT_OPEN_ARGUMENT_LIST.actual_argument */
extern T0* T1348f2(T0* C, T6 a1);
/* ET_CONVERT_TO_EXPRESSION.actual_argument */
extern T0* T1339f5(T0* C, T6 a1);
/* ET_INFIX_CAST_EXPRESSION.actual_argument */
extern T0* T1241f6(T0* C, T6 a1);
/* ET_CONVERT_EXPRESSION.actual_argument */
extern T0* T1240f5(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T805f17(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T804f18(T0* C, T6 a1);
/* ET_DO_PROCEDURE_INLINE_AGENT.actual_argument */
extern T0* T803f18(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T802f19(T0* C, T6 a1);
/* ET_ONCE_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T801f20(T0* C, T6 a1);
/* ET_DO_FUNCTION_INLINE_AGENT.actual_argument */
extern T0* T799f20(T0* C, T6 a1);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.actual_argument */
extern T0* T794f7(T0* C, T6 a1);
/* ET_MANIFEST_TYPE.actual_argument */
extern T0* T789f10(T0* C, T6 a1);
/* ET_BRACKET_ARGUMENT_LIST.actual_argument */
extern T0* T784f7(T0* C, T6 a1);
/* ET_STRIP_EXPRESSION.actual_argument */
extern T0* T782f13(T0* C, T6 a1);
/* ET_MANIFEST_ARRAY.actual_argument */
extern T0* T780f13(T0* C, T6 a1);
/* ET_ONCE_MANIFEST_STRING.actual_argument */
extern T0* T779f9(T0* C, T6 a1);
/* ET_CALL_AGENT.actual_argument */
extern T0* T775f13(T0* C, T6 a1);
/* ET_OLD_EXPRESSION.actual_argument */
extern T0* T774f9(T0* C, T6 a1);
/* ET_PREFIX_EXPRESSION.actual_argument */
extern T0* T773f9(T0* C, T6 a1);
/* ET_EQUALITY_EXPRESSION.actual_argument */
extern T0* T772f9(T0* C, T6 a1);
/* ET_INFIX_EXPRESSION.actual_argument */
extern T0* T768f9(T0* C, T6 a1);
/* ET_EXPRESSION_ADDRESS.actual_argument */
extern T0* T766f9(T0* C, T6 a1);
/* ET_RESULT_ADDRESS.actual_argument */
extern T0* T765f9(T0* C, T6 a1);
/* ET_CURRENT_ADDRESS.actual_argument */
extern T0* T764f9(T0* C, T6 a1);
/* ET_FEATURE_ADDRESS.actual_argument */
extern T0* T763f9(T0* C, T6 a1);
/* ET_PARENTHESIZED_EXPRESSION.actual_argument */
extern T0* T758f10(T0* C, T6 a1);
/* ET_PRECURSOR_EXPRESSION.actual_argument */
extern T0* T757f12(T0* C, T6 a1);
/* ET_STATIC_CALL_EXPRESSION.actual_argument */
extern T0* T742f13(T0* C, T6 a1);
/* ET_BRACKET_EXPRESSION.actual_argument */
extern T0* T694f9(T0* C, T6 a1);
/* ET_ASSIGNER_INSTRUCTION.actual_argument */
extern T0* T691f11(T0* C, T6 a1);
/* ET_MANIFEST_TUPLE.actual_argument */
extern T0* T523f13(T0* C, T6 a1);
/* ET_CREATE_EXPRESSION.actual_argument */
extern T0* T520f10(T0* C, T6 a1);
/* ET_C2_CHARACTER_CONSTANT.actual_argument */
extern T0* T491f19(T0* C, T6 a1);
/* ET_C1_CHARACTER_CONSTANT.actual_argument */
extern T0* T490f19(T0* C, T6 a1);
/* ET_FALSE_CONSTANT.actual_argument */
extern T0* T489f20(T0* C, T6 a1);
/* ET_TRUE_CONSTANT.actual_argument */
extern T0* T488f20(T0* C, T6 a1);
/* ET_UNDERSCORED_REAL_CONSTANT.actual_argument */
extern T0* T486f22(T0* C, T6 a1);
/* ET_REGULAR_REAL_CONSTANT.actual_argument */
extern T0* T485f22(T0* C, T6 a1);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.actual_argument */
extern T0* T484f30(T0* C, T6 a1);
/* ET_UNDERSCORED_INTEGER_CONSTANT.actual_argument */
extern T0* T483f32(T0* C, T6 a1);
/* ET_REGULAR_INTEGER_CONSTANT.actual_argument */
extern T0* T482f32(T0* C, T6 a1);
/* ET_SPECIAL_MANIFEST_STRING.actual_argument */
extern T0* T481f21(T0* C, T6 a1);
/* ET_VERBATIM_STRING.actual_argument */
extern T0* T480f25(T0* C, T6 a1);
/* ET_REGULAR_MANIFEST_STRING.actual_argument */
extern T0* T479f20(T0* C, T6 a1);
/* ET_C3_CHARACTER_CONSTANT.actual_argument */
extern T0* T478f20(T0* C, T6 a1);
/* ET_VOID.actual_argument */
extern T0* T466f14(T0* C, T6 a1);
/* ET_BIT_CONSTANT.actual_argument */
extern T0* T430f18(T0* C, T6 a1);
/* ET_RESULT.actual_argument */
extern T0* T206f14(T0* C, T6 a1);
/* ET_CALL_EXPRESSION.actual_argument */
extern T0* T186f12(T0* C, T6 a1);
/* ET_ACTUAL_ARGUMENT_LIST.actual_argument */
extern T0* T183f3(T0* C, T6 a1);
/* ET_CURRENT.actual_argument */
extern T0* T182f15(T0* C, T6 a1);
/* ET_IDENTIFIER.actual_argument */
extern T0* T119f77(T0* C, T6 a1);
/* ET_INFIX_FREE_NAME.feature_name */
extern T0* T645f9(T0* C);
/* ET_INFIX_NAME.feature_name */
extern T0* T644f6(T0* C);
/* ET_PREFIX_FREE_NAME.feature_name */
extern T0* T643f9(T0* C);
/* ET_PREFIX_NAME.feature_name */
extern T0* T642f6(T0* C);
/* ET_IDENTIFIER.feature_name */
extern T0* T119f31(T0* C);
/* ET_CONVERT_TO_EXPRESSION.is_current */
extern T1 T1339f11(T0* C);
/* ET_INFIX_CAST_EXPRESSION.is_current */
extern T1 T1241f1(T0* C);
/* ET_CONVERT_EXPRESSION.is_current */
extern T1 T1240f10(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T805f21(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T804f22(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.is_current */
extern T1 T803f22(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.is_current */
extern T1 T802f22(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.is_current */
extern T1 T801f23(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.is_current */
extern T1 T799f23(T0* C);
/* ET_MANIFEST_TYPE.is_current */
extern T1 T789f12(T0* C);
/* ET_STRIP_EXPRESSION.is_current */
extern T1 T782f15(T0* C);
/* ET_MANIFEST_ARRAY.is_current */
extern T1 T780f16(T0* C);
/* ET_ONCE_MANIFEST_STRING.is_current */
extern T1 T779f11(T0* C);
/* ET_CALL_AGENT.is_current */
extern T1 T775f16(T0* C);
/* ET_OLD_EXPRESSION.is_current */
extern T1 T774f11(T0* C);
/* ET_PREFIX_EXPRESSION.is_current */
extern T1 T773f11(T0* C);
/* ET_EQUALITY_EXPRESSION.is_current */
extern T1 T772f11(T0* C);
/* ET_INFIX_EXPRESSION.is_current */
extern T1 T768f11(T0* C);
/* ET_EXPRESSION_ADDRESS.is_current */
extern T1 T766f11(T0* C);
/* ET_RESULT_ADDRESS.is_current */
extern T1 T765f11(T0* C);
/* ET_CURRENT_ADDRESS.is_current */
extern T1 T764f11(T0* C);
/* ET_FEATURE_ADDRESS.is_current */
extern T1 T763f11(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.is_current */
extern T1 T758f12(T0* C);
/* ET_PRECURSOR_EXPRESSION.is_current */
extern T1 T757f14(T0* C);
/* ET_STATIC_CALL_EXPRESSION.is_current */
extern T1 T742f16(T0* C);
/* ET_BRACKET_EXPRESSION.is_current */
extern T1 T694f12(T0* C);
/* ET_MANIFEST_TUPLE.is_current */
extern T1 T523f16(T0* C);
/* ET_CREATE_EXPRESSION.is_current */
extern T1 T520f13(T0* C);
/* ET_C2_CHARACTER_CONSTANT.is_current */
extern T1 T491f23(T0* C);
/* ET_C1_CHARACTER_CONSTANT.is_current */
extern T1 T490f23(T0* C);
/* ET_FALSE_CONSTANT.is_current */
extern T1 T489f22(T0* C);
/* ET_TRUE_CONSTANT.is_current */
extern T1 T488f22(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.is_current */
extern T1 T486f24(T0* C);
/* ET_REGULAR_REAL_CONSTANT.is_current */
extern T1 T485f24(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.is_current */
extern T1 T484f33(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.is_current */
extern T1 T483f34(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.is_current */
extern T1 T482f34(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.is_current */
extern T1 T481f28(T0* C);
/* ET_VERBATIM_STRING.is_current */
extern T1 T480f32(T0* C);
/* ET_REGULAR_MANIFEST_STRING.is_current */
extern T1 T479f27(T0* C);
/* ET_C3_CHARACTER_CONSTANT.is_current */
extern T1 T478f24(T0* C);
/* ET_VOID.is_current */
extern T1 T466f16(T0* C);
/* ET_BIT_CONSTANT.is_current */
extern T1 T430f20(T0* C);
/* ET_RESULT.is_current */
extern T1 T206f16(T0* C);
/* ET_CALL_EXPRESSION.is_current */
extern T1 T186f15(T0* C);
/* ET_IDENTIFIER.is_current */
extern T1 T119f81(T0* C);
/* ET_CONVERT_TO_EXPRESSION.position */
extern T0* T1339f10(T0* C);
/* ET_INFIX_CAST_EXPRESSION.position */
extern T0* T1241f8(T0* C);
/* ET_CONVERT_EXPRESSION.position */
extern T0* T1240f6(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.position */
extern T0* T805f25(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.position */
extern T0* T804f25(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.position */
extern T0* T803f25(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.position */
extern T0* T802f26(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.position */
extern T0* T801f26(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.position */
extern T0* T799f26(T0* C);
/* ET_MANIFEST_TYPE.position */
extern T0* T789f14(T0* C);
/* ET_STRIP_EXPRESSION.position */
extern T0* T782f18(T0* C);
/* ET_STRIP_EXPRESSION.is_empty */
extern T1 T782f20(T0* C);
/* ET_MANIFEST_ARRAY.position */
extern T0* T780f18(T0* C);
/* ET_MANIFEST_ARRAY.is_empty */
extern T1 T780f19(T0* C);
/* ET_ONCE_MANIFEST_STRING.position */
extern T0* T779f13(T0* C);
/* ET_CALL_AGENT.position */
extern T0* T775f20(T0* C);
/* ET_CALL_AGENT.use_tilde */
extern T1 T775f21(T0* C);
/* ET_OLD_EXPRESSION.position */
extern T0* T774f13(T0* C);
/* ET_PREFIX_EXPRESSION.position */
extern T0* T773f14(T0* C);
/* ET_EQUALITY_EXPRESSION.position */
extern T0* T772f13(T0* C);
/* ET_INFIX_EXPRESSION.position */
extern T0* T768f13(T0* C);
/* ET_EXPRESSION_ADDRESS.position */
extern T0* T766f13(T0* C);
/* ET_RESULT_ADDRESS.position */
extern T0* T765f13(T0* C);
/* ET_CURRENT_ADDRESS.position */
extern T0* T764f13(T0* C);
/* ET_FEATURE_ADDRESS.position */
extern T0* T763f13(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.position */
extern T0* T758f14(T0* C);
/* ET_PRECURSOR_EXPRESSION.position */
extern T0* T757f16(T0* C);
/* ET_STATIC_CALL_EXPRESSION.position */
extern T0* T742f18(T0* C);
/* ET_BRACKET_EXPRESSION.position */
extern T0* T694f14(T0* C);
/* ET_MANIFEST_TUPLE.position */
extern T0* T523f18(T0* C);
/* ET_MANIFEST_TUPLE.is_empty */
extern T1 T523f20(T0* C);
/* ET_CREATE_EXPRESSION.position */
extern T0* T520f17(T0* C);
/* ET_C2_CHARACTER_CONSTANT.position */
extern T0* T491f25(T0* C);
/* ET_C1_CHARACTER_CONSTANT.position */
extern T0* T490f25(T0* C);
/* ET_FALSE_CONSTANT.position */
extern T0* T489f24(T0* C);
/* ET_TRUE_CONSTANT.position */
extern T0* T488f24(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.position */
extern T0* T486f26(T0* C);
/* ET_REGULAR_REAL_CONSTANT.position */
extern T0* T485f26(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.position */
extern T0* T484f7(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.position */
extern T0* T483f7(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.position */
extern T0* T482f7(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.position */
extern T0* T481f11(T0* C);
/* ET_VERBATIM_STRING.position */
extern T0* T480f15(T0* C);
/* ET_REGULAR_MANIFEST_STRING.position */
extern T0* T479f10(T0* C);
/* ET_C3_CHARACTER_CONSTANT.position */
extern T0* T478f26(T0* C);
/* ET_VOID.position */
extern T0* T466f18(T0* C);
/* ET_BIT_CONSTANT.position */
extern T0* T430f22(T0* C);
/* ET_RESULT.position */
extern T0* T206f17(T0* C);
/* ET_CALL_EXPRESSION.position */
extern T0* T186f17(T0* C);
/* ET_CURRENT.position */
extern T0* T182f11(T0* C);
/* ET_CONVERT_TO_EXPRESSION.last_leaf */
extern T0* T1339f13(T0* C);
/* ET_INFIX_CAST_EXPRESSION.last_leaf */
extern T0* T1241f10(T0* C);
/* ET_CONVERT_EXPRESSION.last_leaf */
extern T0* T1240f12(T0* C);
/* ET_EXTERNAL_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T805f27(T0* C);
/* ET_AGENT_ARGUMENT_OPERAND_LIST.last_leaf */
extern T0* T794f10(T0* C);
/* ET_ONCE_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T804f27(T0* C);
/* ET_DO_PROCEDURE_INLINE_AGENT.last_leaf */
extern T0* T803f27(T0* C);
/* ET_EXTERNAL_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T802f28(T0* C);
/* ET_ONCE_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T801f28(T0* C);
/* ET_DO_FUNCTION_INLINE_AGENT.last_leaf */
extern T0* T799f28(T0* C);
/* ET_MANIFEST_TYPE.last_leaf */
extern T0* T789f15(T0* C);
/* ET_STRIP_EXPRESSION.last_leaf */
extern T0* T782f21(T0* C);
/* ET_MANIFEST_ARRAY.last_leaf */
extern T0* T780f20(T0* C);
/* ET_ONCE_MANIFEST_STRING.last_leaf */
extern T0* T779f14(T0* C);
/* ET_CALL_AGENT.last_leaf */
extern T0* T775f23(T0* C);
/* ET_OLD_EXPRESSION.last_leaf */
extern T0* T774f14(T0* C);
/* ET_PREFIX_EXPRESSION.last_leaf */
extern T0* T773f15(T0* C);
/* ET_EQUALITY_EXPRESSION.last_leaf */
extern T0* T772f14(T0* C);
/* ET_INFIX_EXPRESSION.last_leaf */
extern T0* T768f14(T0* C);
/* ET_EXPRESSION_ADDRESS.last_leaf */
extern T0* T766f14(T0* C);
/* ET_RESULT_ADDRESS.last_leaf */
extern T0* T765f14(T0* C);
/* ET_CURRENT_ADDRESS.last_leaf */
extern T0* T764f14(T0* C);
/* ET_FEATURE_ADDRESS.last_leaf */
extern T0* T763f14(T0* C);
/* ET_PARENTHESIZED_EXPRESSION.last_leaf */
extern T0* T758f15(T0* C);
/* ET_PRECURSOR_EXPRESSION.last_leaf */
extern T0* T757f17(T0* C);
/* ET_STATIC_CALL_EXPRESSION.last_leaf */
extern T0* T742f22(T0* C);
/* ET_BRACKET_EXPRESSION.last_leaf */
extern T0* T694f15(T0* C);
/* ET_BRACKET_SYMBOL.last_leaf */
extern T0* T472f79(T0* C);
/* ET_BRACKET_ARGUMENT_LIST.last_leaf */
extern T0* T784f10(T0* C);
/* ET_MANIFEST_TUPLE.last_leaf */
extern T0* T523f19(T0* C);
/* ET_CREATE_EXPRESSION.last_leaf */
extern T0* T520f16(T0* C);
/* ET_C2_CHARACTER_CONSTANT.last_leaf */
extern T0* T491f29(T0* C);
/* ET_C1_CHARACTER_CONSTANT.last_leaf */
extern T0* T490f29(T0* C);
/* ET_FALSE_CONSTANT.last_leaf */
extern T0* T489f25(T0* C);
/* ET_TRUE_CONSTANT.last_leaf */
extern T0* T488f25(T0* C);
/* ET_UNDERSCORED_REAL_CONSTANT.last_leaf */
extern T0* T486f27(T0* C);
/* ET_REGULAR_REAL_CONSTANT.last_leaf */
extern T0* T485f27(T0* C);
/* ET_HEXADECIMAL_INTEGER_CONSTANT.last_leaf */
extern T0* T484f39(T0* C);
/* ET_UNDERSCORED_INTEGER_CONSTANT.last_leaf */
extern T0* T483f40(T0* C);
/* ET_REGULAR_INTEGER_CONSTANT.last_leaf */
extern T0* T482f40(T0* C);
/* ET_SPECIAL_MANIFEST_STRING.last_leaf */
extern T0* T481f30(T0* C);
/* ET_VERBATIM_STRING.last_leaf */
extern T0* T480f34(T0* C);
/* ET_REGULAR_MANIFEST_STRING.last_leaf */
extern T0* T479f29(T0* C);
/* ET_C3_CHARACTER_CONSTANT.last_leaf */
extern T0* T478f30(T0* C);
/* ET_VOID.last_leaf */
extern T0* T466f19(T0* C);
/* ET_BIT_CONSTANT.last_leaf */
extern T0* T430f23(T0* C);
/* ET_RESULT.last_leaf */
extern T0* T206f21(T0* C);
/* ET_CALL_EXPRESSION.last_leaf */
extern T0* T186f21(T0* C);
/* ET_CURRENT.last_leaf */
extern T0* T182f25(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_once */
extern T1 T638f59(T0* C);
/* ET_DEFERRED_PROCEDURE.is_once */
extern T1 T302f56(T0* C);
/* ET_DO_PROCEDURE.is_once */
extern T1 T297f44(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_dotnet */
extern T1 T638f63(T0* C);
/* ET_ONCE_PROCEDURE.is_dotnet */
extern T1 T637f61(T0* C);
/* ET_DEFERRED_FUNCTION.is_dotnet */
extern T1 T632f64(T0* C);
/* ET_ONCE_FUNCTION.is_dotnet */
extern T1 T631f65(T0* C);
/* ET_DO_FUNCTION.is_dotnet */
extern T1 T629f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_dotnet */
extern T1 T302f60(T0* C);
/* ET_DO_PROCEDURE.is_dotnet */
extern T1 T297f61(T0* C);
/* ET_ATTRIBUTE.is_dotnet */
extern T1 T226f60(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_dotnet */
extern T1 T225f62(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_dotnet */
extern T1 T223f62(T0* C);
/* ET_EXTERNAL_FUNCTION.is_dotnet */
extern T1 T163f67(T0* C);
/* ET_EXTERNAL_PROCEDURE.same_version */
extern T1 T638f64(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.same_version */
extern T1 T637f62(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.same_version */
extern T1 T632f65(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.same_version */
extern T1 T631f66(T0* C, T0* a1);
/* ET_DO_FUNCTION.same_version */
extern T1 T629f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.same_version */
extern T1 T302f61(T0* C, T0* a1);
/* ET_DO_PROCEDURE.same_version */
extern T1 T297f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.same_version */
extern T1 T226f61(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.same_version */
extern T1 T225f63(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.same_version */
extern T1 T223f63(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.same_version */
extern T1 T163f68(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.undefined_feature */
extern T0* T638f68(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_feature_clause */
extern void T302f87(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_semicolon */
extern void T302f86(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_end_keyword */
extern void T302f85(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.undefined_feature */
extern T0* T637f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.undefined_feature */
extern T0* T632f66(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_feature_clause */
extern void T632f89(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_semicolon */
extern void T632f88(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_end_keyword */
extern void T632f87(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.undefined_feature */
extern T0* T631f67(T0* C, T0* a1);
/* ET_DO_FUNCTION.undefined_feature */
extern T0* T629f67(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.undefined_feature */
extern T0* T302f65(T0* C, T0* a1);
/* ET_DO_PROCEDURE.undefined_feature */
extern T0* T297f66(T0* C, T0* a1);
/* ET_ATTRIBUTE.undefined_feature */
extern T0* T226f62(T0* C, T0* a1);
/* ET_ATTRIBUTE.obsolete_message */
extern T0* T226f64(T0* C);
/* ET_UNIQUE_ATTRIBUTE.undefined_feature */
extern T0* T225f64(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.obsolete_message */
extern T0* T225f66(T0* C);
/* ET_CONSTANT_ATTRIBUTE.undefined_feature */
extern T0* T223f64(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.obsolete_message */
extern T0* T223f66(T0* C);
/* ET_EXTERNAL_FUNCTION.undefined_feature */
extern T0* T163f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.renamed_feature */
extern T0* T638f69(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_feature_clause */
extern void T638f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_semicolon */
extern void T638f90(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_end_keyword */
extern void T638f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.renamed_feature */
extern T0* T637f67(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_feature_clause */
extern void T637f90(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_semicolon */
extern void T637f89(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_end_keyword */
extern void T637f88(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.renamed_feature */
extern T0* T632f67(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_deferred_keyword */
extern void T632f86(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.renamed_feature */
extern T0* T631f68(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_feature_clause */
extern void T631f92(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_semicolon */
extern void T631f91(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_end_keyword */
extern void T631f90(T0* C, T0* a1);
/* ET_DO_FUNCTION.renamed_feature */
extern T0* T629f68(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_feature_clause */
extern void T629f92(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_semicolon */
extern void T629f91(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_end_keyword */
extern void T629f90(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.renamed_feature */
extern T0* T302f66(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_deferred_keyword */
extern void T302f84(T0* C, T0* a1);
/* ET_DO_PROCEDURE.renamed_feature */
extern T0* T297f67(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_feature_clause */
extern void T297f90(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_semicolon */
extern void T297f89(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_end_keyword */
extern void T297f88(T0* C, T0* a1);
/* ET_ATTRIBUTE.renamed_feature */
extern T0* T226f63(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_first_indexing */
extern void T226f76(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_feature_clause */
extern void T226f75(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_semicolon */
extern void T226f74(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.renamed_feature */
extern T0* T225f65(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_first_indexing */
extern void T225f80(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_feature_clause */
extern void T225f79(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_semicolon */
extern void T225f78(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_unique_keyword */
extern void T225f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_is_keyword */
extern void T225f76(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.renamed_feature */
extern T0* T223f65(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_first_indexing */
extern void T223f79(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_feature_clause */
extern void T223f78(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_semicolon */
extern void T223f77(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_is_keyword */
extern void T223f76(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.renamed_feature */
extern T0* T163f70(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_feature_clause */
extern void T163f89(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_semicolon */
extern void T163f88(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_end_keyword */
extern void T163f87(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_bracketable */
extern T1 T638f67(T0* C);
/* ET_ONCE_PROCEDURE.is_bracketable */
extern T1 T637f65(T0* C);
/* ET_DEFERRED_PROCEDURE.is_bracketable */
extern T1 T302f64(T0* C);
/* ET_DO_PROCEDURE.is_bracketable */
extern T1 T297f65(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_prefixable */
extern T1 T638f66(T0* C);
/* ET_ONCE_PROCEDURE.is_prefixable */
extern T1 T637f64(T0* C);
/* ET_DEFERRED_PROCEDURE.is_prefixable */
extern T1 T302f63(T0* C);
/* ET_DO_PROCEDURE.is_prefixable */
extern T1 T297f64(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_infixable */
extern T1 T638f65(T0* C);
/* ET_ONCE_PROCEDURE.is_infixable */
extern T1 T637f63(T0* C);
/* ET_DEFERRED_PROCEDURE.is_infixable */
extern T1 T302f62(T0* C);
/* ET_DO_PROCEDURE.is_infixable */
extern T1 T297f63(T0* C);
/* ET_ATTRIBUTE.preconditions */
extern T0* T226f34(T0* C);
/* ET_UNIQUE_ATTRIBUTE.preconditions */
extern T0* T225f36(T0* C);
/* ET_CONSTANT_ATTRIBUTE.preconditions */
extern T0* T223f36(T0* C);
/* ET_ATTRIBUTE.postconditions */
extern T0* T226f35(T0* C);
/* ET_UNIQUE_ATTRIBUTE.postconditions */
extern T0* T225f37(T0* C);
/* ET_CONSTANT_ATTRIBUTE.postconditions */
extern T0* T223f37(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_attribute */
extern T1 T638f21(T0* C);
/* ET_ONCE_PROCEDURE.is_attribute */
extern T1 T637f20(T0* C);
/* ET_DEFERRED_PROCEDURE.is_attribute */
extern T1 T302f7(T0* C);
/* ET_DO_PROCEDURE.is_attribute */
extern T1 T297f6(T0* C);
/* ET_EXTERNAL_PROCEDURE.type */
extern T0* T638f23(T0* C);
/* ET_ONCE_PROCEDURE.type */
extern T0* T637f22(T0* C);
/* ET_DEFERRED_PROCEDURE.type */
extern T0* T302f3(T0* C);
/* ET_DO_PROCEDURE.type */
extern T0* T297f2(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_constant_attribute */
extern T1 T638f22(T0* C);
/* ET_ONCE_PROCEDURE.is_constant_attribute */
extern T1 T637f21(T0* C);
/* ET_DEFERRED_PROCEDURE.is_constant_attribute */
extern T1 T302f4(T0* C);
/* ET_DO_PROCEDURE.is_constant_attribute */
extern T1 T297f3(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_unique_attribute */
extern T1 T638f24(T0* C);
/* ET_ONCE_PROCEDURE.is_unique_attribute */
extern T1 T637f23(T0* C);
/* ET_DEFERRED_PROCEDURE.is_unique_attribute */
extern T1 T302f5(T0* C);
/* ET_DO_PROCEDURE.is_unique_attribute */
extern T1 T297f4(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_procedure */
extern T1 T638f45(T0* C);
/* ET_ONCE_PROCEDURE.is_procedure */
extern T1 T637f57(T0* C);
/* ET_DEFERRED_FUNCTION.is_procedure */
extern T1 T632f60(T0* C);
/* ET_ONCE_FUNCTION.is_procedure */
extern T1 T631f61(T0* C);
/* ET_DO_FUNCTION.is_procedure */
extern T1 T629f61(T0* C);
/* ET_DEFERRED_PROCEDURE.is_procedure */
extern T1 T302f55(T0* C);
/* ET_DO_PROCEDURE.is_procedure */
extern T1 T297f57(T0* C);
/* ET_ATTRIBUTE.is_procedure */
extern T1 T226f56(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_procedure */
extern T1 T225f58(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_procedure */
extern T1 T223f58(T0* C);
/* ET_EXTERNAL_FUNCTION.is_procedure */
extern T1 T163f50(T0* C);
/* ET_EXTERNAL_PROCEDURE.lower_name */
extern T0* T638f18(T0* C);
/* ET_ONCE_PROCEDURE.lower_name */
extern T0* T637f26(T0* C);
/* ET_DEFERRED_PROCEDURE.lower_name */
extern T0* T302f24(T0* C);
/* ET_DO_PROCEDURE.lower_name */
extern T0* T297f26(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.actual_parameter */
extern T0* T922f3(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.actual_parameter */
extern T0* T913f10(T0* C);
/* ET_LIKE_CURRENT.actual_parameter */
extern T0* T687f10(T0* C);
/* ET_LIKE_FEATURE.actual_parameter */
extern T0* T685f7(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.actual_parameter */
extern T0* T683f3(T0* C);
/* ET_BIT_FEATURE.actual_parameter */
extern T0* T549f9(T0* C);
/* ET_BIT_N.actual_parameter */
extern T0* T548f12(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.actual_parameter */
extern T0* T536f36(T0* C);
/* ET_FORMAL_PARAMETER.actual_parameter */
extern T0* T528f34(T0* C);
/* ET_TUPLE_TYPE.actual_parameter */
extern T0* T288f6(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter */
extern T0* T161f13(T0* C);
/* ET_CLASS_TYPE.actual_parameter */
extern T0* T159f11(T0* C);
/* ET_CLASS.actual_parameter */
extern T0* T55f76(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T922f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters_with_type */
extern T0* T913f49(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters_with_type */
extern T0* T687f52(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters_with_type */
extern T0* T685f55(T0* C, T0* a1);
/* ET_LABELED_ACTUAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T683f6(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters_with_type */
extern T0* T549f84(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters_with_type */
extern T0* T548f83(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T536f58(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters_with_type */
extern T0* T528f56(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters_with_type */
extern T0* T288f76(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T161f81(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters_with_type */
extern T0* T159f80(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters_with_type */
extern T0* T55f147(T0* C, T0* a1);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.type */
extern T0* T922f4(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.type */
extern T0* T913f1(T0* C);
/* ET_LIKE_CURRENT.type */
extern T0* T687f4(T0* C);
/* ET_LIKE_FEATURE.type */
extern T0* T685f6(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.type */
extern T0* T683f4(T0* C);
/* ET_BIT_FEATURE.type */
extern T0* T549f8(T0* C);
/* ET_BIT_N.type */
extern T0* T548f11(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.type */
extern T0* T536f9(T0* C);
/* ET_FORMAL_PARAMETER.type */
extern T0* T528f5(T0* C);
/* ET_TUPLE_TYPE.type */
extern T0* T288f5(T0* C);
/* ET_GENERIC_CLASS_TYPE.type */
extern T0* T161f12(T0* C);
/* ET_CLASS_TYPE.type */
extern T0* T159f4(T0* C);
/* ET_CLASS.type */
extern T0* T55f35(T0* C);
/* ET_LABELED_COMMA_ACTUAL_PARAMETER.label */
extern T0* T922f7(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.label */
extern T0* T913f54(T0* C);
/* ET_LIKE_CURRENT.label */
extern T0* T687f57(T0* C);
/* ET_LIKE_FEATURE.label */
extern T0* T685f61(T0* C);
/* ET_LABELED_ACTUAL_PARAMETER.label */
extern T0* T683f7(T0* C);
/* ET_BIT_FEATURE.label */
extern T0* T549f95(T0* C);
/* ET_BIT_N.label */
extern T0* T548f94(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.label */
extern T0* T536f64(T0* C);
/* ET_FORMAL_PARAMETER.label */
extern T0* T528f62(T0* C);
/* ET_TUPLE_TYPE.label */
extern T0* T288f87(T0* C);
/* ET_GENERIC_CLASS_TYPE.label */
extern T0* T161f91(T0* C);
/* ET_CLASS_TYPE.label */
extern T0* T159f92(T0* C);
/* ET_CLASS.label */
extern T0* T55f160(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_subset */
extern T1 T898f4(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_subset */
extern T1 T303f3(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_subset */
extern T1 T222f5(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_subset */
extern T1 T205f29(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.is_subset */
extern T1 T204f30(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.is_subset */
extern T1 T203f29(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.is_subset */
extern T1 T197f29(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.is_subset */
extern T1 T144f27(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_type */
extern T1 T898f6(T0* C, T0* a1);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_type */
extern T1 T303f5(T0* C, T0* a1);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_type */
extern T1 T222f7(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_type */
extern T1 T205f14(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.has_type */
extern T1 T204f15(T0* C, T0* a1);
/* ET_DYNAMIC_SPECIAL_TYPE.has_type */
extern T1 T203f14(T0* C, T0* a1);
/* ET_DYNAMIC_TUPLE_TYPE.has_type */
extern T1 T197f14(T0* C, T0* a1);
/* ET_DYNAMIC_TYPE.has_type */
extern T1 T144f20(T0* C, T0* a1);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.special_type */
extern T0* T898f10(T0* C);
/* ET_DYNAMIC_TYPE_LIST.special_type */
extern T0* T173f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.special_type */
extern T0* T303f10(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.special_type */
extern T0* T222f10(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.special_type */
extern T0* T205f31(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.special_type */
extern T0* T204f32(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.special_type */
extern T0* T203f31(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.special_type */
extern T0* T197f31(T0* C);
/* ET_DYNAMIC_TYPE.special_type */
extern T0* T144f29(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.is_expanded */
extern T1 T898f9(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.is_expanded */
extern T1 T303f9(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.is_expanded */
extern T1 T222f9(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.has_expanded */
extern T1 T898f5(T0* C);
/* ET_DYNAMIC_TYPE_LIST.has_expanded */
extern T1 T173f6(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.has_expanded */
extern T1 T303f4(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.has_expanded */
extern T1 T222f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.has_expanded */
extern T1 T205f13(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.has_expanded */
extern T1 T204f14(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.has_expanded */
extern T1 T203f13(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.has_expanded */
extern T1 T197f13(T0* C);
/* ET_DYNAMIC_TYPE.has_expanded */
extern T1 T144f19(T0* C);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.count */
extern T6 T898f7(T0* C);
/* ET_DYNAMIC_PUSH_TYPE_SET.count */
extern T6 T303f6(T0* C);
/* ET_DYNAMIC_STANDALONE_TYPE_SET.count */
extern T6 T222f8(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.count */
extern T6 T205f15(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.count */
extern T6 T204f16(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.count */
extern T6 T203f15(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.count */
extern T6 T197f15(T0* C);
/* ET_DYNAMIC_TYPE.count */
extern T6 T144f21(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_separate */
extern T1 T161f16(T0* C);
/* ET_KEYWORD.is_separate */
extern T1 T166f14(T0* C);
/* ET_CLASS_TYPE.is_separate */
extern T1 T159f15(T0* C);
/* ET_CLASS.is_separate */
extern T1 T55f83(T0* C);
/* ET_CLASS.has_separate_mark */
extern T1 T55f84(T0* C);
/* ET_PREFIX_FREE_NAME.is_infix */
extern T1 T643f16(T0* C);
/* ET_PREFIX_NAME.is_infix */
extern T1 T642f14(T0* C);
/* ET_IDENTIFIER.is_infix */
extern T1 T119f47(T0* C);
/* ET_INFIX_FREE_NAME.is_prefix */
extern T1 T645f36(T0* C);
/* ET_INFIX_NAME.is_prefix */
extern T1 T644f16(T0* C);
/* ET_IDENTIFIER.is_prefix */
extern T1 T119f46(T0* C);
/* ET_INFIX_FREE_NAME.argument_name */
extern T0* T645f50(T0* C);
/* ET_INFIX_NAME.argument_name */
extern T0* T644f61(T0* C);
/* ET_PREFIX_FREE_NAME.argument_name */
extern T0* T643f50(T0* C);
/* ET_PREFIX_NAME.argument_name */
extern T0* T642f47(T0* C);
/* ET_IDENTIFIER.argument_name */
extern T0* T119f74(T0* C);
/* ET_INFIX_FREE_NAME.local_name */
extern T0* T645f52(T0* C);
/* ET_INFIX_NAME.local_name */
extern T0* T644f63(T0* C);
/* ET_PREFIX_FREE_NAME.local_name */
extern T0* T643f52(T0* C);
/* ET_PREFIX_NAME.local_name */
extern T0* T642f49(T0* C);
/* ET_IDENTIFIER.local_name */
extern T0* T119f75(T0* C);
/* ET_INFIX_NAME.hash_code */
extern T6 T644f11(T0* C);
/* ET_PREFIX_NAME.hash_code */
extern T6 T642f8(T0* C);
/* ET_INFIX_FREE_NAME.is_argument */
extern T1 T645f49(T0* C);
/* ET_INFIX_NAME.is_argument */
extern T1 T644f60(T0* C);
/* ET_PREFIX_FREE_NAME.is_argument */
extern T1 T643f49(T0* C);
/* ET_PREFIX_NAME.is_argument */
extern T1 T642f46(T0* C);
/* ET_IDENTIFIER.is_argument */
extern T1 T119f17(T0* C);
/* ET_INFIX_FREE_NAME.is_local */
extern T1 T645f51(T0* C);
/* ET_INFIX_NAME.is_local */
extern T1 T644f62(T0* C);
/* ET_PREFIX_FREE_NAME.is_local */
extern T1 T643f51(T0* C);
/* ET_PREFIX_NAME.is_local */
extern T1 T642f48(T0* C);
/* ET_IDENTIFIER.is_local */
extern T1 T119f19(T0* C);
/* ET_INFIX_FREE_NAME.is_tuple_label */
extern T1 T645f53(T0* C);
/* ET_INFIX_NAME.is_tuple_label */
extern T1 T644f64(T0* C);
/* ET_PREFIX_FREE_NAME.is_tuple_label */
extern T1 T643f53(T0* C);
/* ET_PREFIX_NAME.is_tuple_label */
extern T1 T642f50(T0* C);
/* ET_IDENTIFIER.is_tuple_label */
extern T1 T119f23(T0* C);
/* ET_INFIX_FREE_NAME.position */
extern T0* T645f34(T0* C);
/* ET_INFIX_NAME.position */
extern T0* T644f14(T0* C);
/* ET_PREFIX_FREE_NAME.position */
extern T0* T643f13(T0* C);
/* ET_PREFIX_NAME.position */
extern T0* T642f11(T0* C);
/* ET_IDENTIFIER.position */
extern T0* T119f33(T0* C);
/* ET_INFIX_FREE_NAME.lower_name */
extern T0* T645f32(T0* C);
/* ET_INFIX_NAME.lower_name */
extern T0* T644f12(T0* C);
/* ET_PREFIX_FREE_NAME.lower_name */
extern T0* T643f11(T0* C);
/* ET_PREFIX_NAME.lower_name */
extern T0* T642f9(T0* C);
/* ET_IDENTIFIER.lower_name */
extern T0* T119f37(T0* C);
/* ET_INFIX_FREE_NAME.same_feature_name */
extern T1 T645f33(T0* C, T0* a1);
/* ET_INFIX_NAME.same_feature_name */
extern T1 T644f13(T0* C, T0* a1);
/* ET_PREFIX_FREE_NAME.same_feature_name */
extern T1 T643f12(T0* C, T0* a1);
/* ET_PREFIX_NAME.same_feature_name */
extern T1 T642f10(T0* C, T0* a1);
/* ET_IDENTIFIER.same_feature_name */
extern T1 T119f42(T0* C, T0* a1);
/* ET_INFIX_FREE_NAME.last_leaf */
extern T0* T645f56(T0* C);
/* ET_INFIX_NAME.last_leaf */
extern T0* T644f67(T0* C);
/* ET_PREFIX_FREE_NAME.last_leaf */
extern T0* T643f56(T0* C);
/* ET_PREFIX_NAME.last_leaf */
extern T0* T642f53(T0* C);
/* ET_IDENTIFIER.last_leaf */
extern T0* T119f86(T0* C);
/* ET_INFIX_FREE_NAME.first_leaf */
extern T0* T645f59(T0* C);
/* ET_INFIX_NAME.first_leaf */
extern T0* T644f72(T0* C);
/* ET_PREFIX_FREE_NAME.first_leaf */
extern T0* T643f59(T0* C);
/* ET_PREFIX_NAME.first_leaf */
extern T0* T642f58(T0* C);
/* ET_IDENTIFIER.first_leaf */
extern T0* T119f92(T0* C);
/* ET_INFIX_FREE_NAME.name */
extern T0* T645f35(T0* C);
/* ET_INFIX_NAME.name */
extern T0* T644f15(T0* C);
/* ET_PREFIX_FREE_NAME.name */
extern T0* T643f14(T0* C);
/* ET_PREFIX_NAME.name */
extern T0* T642f12(T0* C);
/* ET_NESTED_TYPE_CONTEXT.base_type */
extern T0* T244f29(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.same_named_type */
extern T1 T244f5(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.cloned_type_context */
extern T0* T244f10(T0* C);
/* ET_NESTED_TYPE_CONTEXT.same_base_class_type */
extern T1 T244f28(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_class_type */
extern T1 T244f13(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_tuple_type */
extern T1 T244f14(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_tuple_type */
extern T1 T244f30(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_formal_parameter_type */
extern T1 T244f11(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_named_bit_type */
extern T1 T244f15(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.same_base_bit_type */
extern T1 T244f31(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_type */
extern T1 T549f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_type */
extern T1 T548f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_type */
extern T1 T288f64(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_type */
extern T1 T161f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_type */
extern T1 T159f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_type */
extern T1 T55f132(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_formal_parameter_type */
extern T1 T549f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_formal_parameter_type */
extern T1 T548f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T288f67(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T161f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_formal_parameter_type */
extern T1 T159f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_formal_parameter_type */
extern T1 T55f133(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_formal_parameter_type */
extern T1 T244f24(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_class_type */
extern T1 T244f25(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_tuple_type */
extern T1 T244f26(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_to_type */
extern T1 T549f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_to_type */
extern T1 T548f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_to_type */
extern T1 T288f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T161f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_to_type */
extern T1 T159f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_to_type */
extern T1 T55f137(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_to_type */
extern T1 T244f22(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.conforms_from_bit_type */
extern T1 T244f27(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.reference_context_conforms_from_bit_type */
extern T1 T549f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_bit_type */
extern T1 T548f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_bit_type */
extern T1 T288f66(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T161f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_bit_type */
extern T1 T159f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_bit_type */
extern T1 T55f140(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_class */
extern T0* T244f12(T0* C, T0* a1);
/* ET_BIT_FEATURE.reference_context_conforms_from_class_type */
extern T1 T549f92(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_class_type */
extern T1 T548f91(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_class_type */
extern T1 T288f84(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T161f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_class_type */
extern T1 T159f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_class_type */
extern T1 T55f156(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_index_of_label */
extern T6 T244f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.reference_context_conforms_from_tuple_type */
extern T1 T549f93(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_context_conforms_from_tuple_type */
extern T1 T548f92(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T288f85(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T161f88(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.reference_context_conforms_from_tuple_type */
extern T1 T159f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.reference_context_conforms_from_tuple_type */
extern T1 T55f157(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual_count */
extern T6 T244f7(T0* C, T0* a1);
/* ET_NESTED_TYPE_CONTEXT.base_type_actual */
extern T0* T244f8(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.root_context */
extern T0* T549f32(T0* C);
/* ET_BIT_N.root_context */
extern T0* T548f31(T0* C);
/* ET_TUPLE_TYPE.root_context */
extern T0* T288f26(T0* C);
/* ET_GENERIC_CLASS_TYPE.root_context */
extern T0* T161f31(T0* C);
/* ET_CLASS_TYPE.root_context */
extern T0* T159f28(T0* C);
/* ET_CLASS.root_context */
extern T0* T55f93(T0* C);
/* ET_NESTED_TYPE_CONTEXT.named_type */
extern T0* T244f6(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_class_type */
extern T1 T913f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_class_type */
extern T1 T687f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_class_type */
extern T1 T685f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_class_type */
extern T1 T549f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_class_type */
extern T1 T548f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T536f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_class_type */
extern T1 T528f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_class_type */
extern T1 T288f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_class_type */
extern T1 T161f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T396f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_syntactical_types */
extern T1 T160f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_class_type */
extern T1 T159f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_class_type */
extern T1 T55f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_tuple_type */
extern T1 T913f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_tuple_type */
extern T1 T687f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_tuple_type */
extern T1 T685f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_tuple_type */
extern T1 T549f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_tuple_type */
extern T1 T548f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T536f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_tuple_type */
extern T1 T528f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_tuple_type */
extern T1 T288f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T161f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_tuple_type */
extern T1 T159f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_tuple_type */
extern T1 T55f87(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_bit_type */
extern T1 T913f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_bit_type */
extern T1 T687f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_bit_type */
extern T1 T685f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_bit_type */
extern T1 T549f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_bit_type */
extern T1 T548f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T536f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_bit_type */
extern T1 T528f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_bit_type */
extern T1 T288f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T161f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_bit_type */
extern T1 T159f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_bit_type */
extern T1 T55f96(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_feature */
extern T1 T913f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_feature */
extern T1 T687f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_feature */
extern T1 T685f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_feature */
extern T1 T549f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_feature */
extern T1 T548f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T536f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_feature */
extern T1 T528f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_feature */
extern T1 T288f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T161f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_feature */
extern T1 T159f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_feature */
extern T1 T55f99(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_like_current */
extern T1 T913f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_like_current */
extern T1 T687f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_like_current */
extern T1 T685f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_like_current */
extern T1 T549f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_like_current */
extern T1 T548f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T536f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_like_current */
extern T1 T528f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_like_current */
extern T1 T288f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_like_current */
extern T1 T161f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_like_current */
extern T1 T159f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_like_current */
extern T1 T55f101(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_formal_parameter_type */
extern T1 T913f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_formal_parameter_type */
extern T1 T687f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T685f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_formal_parameter_type */
extern T1 T549f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_formal_parameter_type */
extern T1 T548f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T536f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_formal_parameter_type */
extern T1 T528f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_formal_parameter_type */
extern T1 T288f28(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T161f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_formal_parameter_type */
extern T1 T159f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_formal_parameter_type */
extern T1 T55f95(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_syntactical_type */
extern T1 T913f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_syntactical_type */
extern T1 T687f6(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_syntactical_type */
extern T1 T685f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_syntactical_type */
extern T1 T549f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_syntactical_type */
extern T1 T548f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T536f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_syntactical_type */
extern T1 T528f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_syntactical_type */
extern T1 T288f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.has_anchored_type */
extern T1 T913f14(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_anchored_type */
extern T1 T687f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.has_anchored_type */
extern T1 T685f17(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_anchored_type */
extern T1 T549f19(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_anchored_type */
extern T1 T548f20(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_anchored_type */
extern T1 T536f29(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_anchored_type */
extern T1 T528f27(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_anchored_type */
extern T1 T288f13(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_anchored_type */
extern T1 T160f15(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_anchored_type */
extern T1 T161f22(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_anchored_type */
extern T1 T396f18(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_anchored_type */
extern T1 T159f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_anchored_type */
extern T1 T55f85(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.has_formal_types */
extern T1 T913f15(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.has_formal_types */
extern T1 T687f16(T0* C, T0* a1, T0* a2);
/* ET_CLASS.context_has_formal_types */
extern T1 T55f105(T0* C, T0* a1);
/* ET_LIKE_FEATURE.has_formal_types */
extern T1 T685f18(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.has_formal_types */
extern T1 T549f20(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.has_formal_types */
extern T1 T548f21(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.has_formal_types */
extern T1 T536f30(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.has_formal_types */
extern T1 T528f28(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.has_formal_types */
extern T1 T288f14(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.has_formal_types */
extern T1 T160f16(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.has_formal_types */
extern T1 T161f23(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.has_formal_types */
extern T1 T396f19(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.has_formal_types */
extern T1 T159f21(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_formal_types */
extern T1 T55f86(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_named_formal_parameter_type */
extern T1 T913f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_formal_parameter_type */
extern T1 T687f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_formal_parameter_type */
extern T1 T685f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_formal_parameter_type */
extern T1 T549f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_formal_parameter_type */
extern T1 T548f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T536f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_formal_parameter_type */
extern T1 T528f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_formal_parameter_type */
extern T1 T288f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T161f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_formal_parameter_type */
extern T1 T159f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_formal_parameter_type */
extern T1 T55f94(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_class_type */
extern T1 T913f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_class_type */
extern T1 T687f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_class_type */
extern T1 T685f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_class_type */
extern T1 T549f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_class_type */
extern T1 T548f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_class_type */
extern T1 T536f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_class_type */
extern T1 T528f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_class_type */
extern T1 T288f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_class_type */
extern T1 T161f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_LIST.same_named_types */
extern T1 T396f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.same_named_types */
extern T1 T160f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_class_type */
extern T1 T159f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_class_type */
extern T1 T55f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_tuple_type */
extern T1 T913f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_tuple_type */
extern T1 T687f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_tuple_type */
extern T1 T685f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_tuple_type */
extern T1 T549f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_tuple_type */
extern T1 T548f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T536f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_tuple_type */
extern T1 T528f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_tuple_type */
extern T1 T288f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_tuple_type */
extern T1 T161f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_tuple_type */
extern T1 T159f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_tuple_type */
extern T1 T55f88(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_named_bit_type */
extern T1 T913f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_bit_type */
extern T1 T687f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_bit_type */
extern T1 T685f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_bit_type */
extern T1 T549f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_bit_type */
extern T1 T548f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T536f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_bit_type */
extern T1 T528f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_bit_type */
extern T1 T288f29(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_bit_type */
extern T1 T161f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_bit_type */
extern T1 T159f31(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_bit_type */
extern T1 T55f97(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_type */
extern T1 T913f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_formal_parameter_type */
extern T1 T55f141(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_type */
extern T1 T687f35(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_type */
extern T1 T685f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_type */
extern T1 T536f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_type */
extern T1 T528f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual_count */
extern T6 T913f35(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type_actual_count */
extern T6 T687f37(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type_actual_count */
extern T6 T685f41(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type_actual_count */
extern T6 T549f37(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type_actual_count */
extern T6 T548f35(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T536f55(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type_actual_count */
extern T6 T528f53(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type_actual_count */
extern T6 T288f53(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type_actual_count */
extern T6 T161f55(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type_actual_count */
extern T6 T159f49(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type_actual_count */
extern T6 T55f116(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.base_type_actual */
extern T0* T913f36(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_actual */
extern T0* T687f38(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_actual */
extern T0* T685f42(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_actual */
extern T0* T549f38(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_actual */
extern T0* T536f52(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_actual */
extern T0* T528f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_bit_type */
extern T1 T913f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_bit_type */
extern T1 T687f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_bit_type */
extern T1 T685f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_bit_type */
extern T1 T549f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_bit_type */
extern T1 T548f71(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T536f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_bit_type */
extern T1 T528f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_bit_type */
extern T1 T288f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T161f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_bit_type */
extern T1 T159f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_bit_type */
extern T1 T55f131(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T913f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_formal_parameter_type */
extern T1 T687f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T685f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_formal_parameter_type */
extern T1 T549f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_formal_parameter_type */
extern T1 T548f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T536f51(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_formal_parameter_type */
extern T1 T528f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T288f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T161f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_formal_parameter_type */
extern T1 T159f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_formal_parameter_type */
extern T1 T55f130(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.shallow_named_type */
extern T0* T913f31(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_named_type */
extern T0* T687f34(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.shallow_base_type */
extern T0* T687f47(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.shallow_named_type */
extern T0* T685f33(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_named_type */
extern T0* T549f50(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.shallow_base_type */
extern T0* T549f70(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_named_type */
extern T0* T548f49(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.shallow_base_type */
extern T0* T548f67(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.shallow_named_type */
extern T0* T536f40(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.shallow_named_type */
extern T0* T528f38(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_named_type */
extern T0* T288f38(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.shallow_base_type */
extern T0* T288f55(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_named_type */
extern T0* T161f46(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.shallow_base_type */
extern T0* T161f57(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_named_type */
extern T0* T159f41(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.shallow_base_type */
extern T0* T159f51(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_named_type */
extern T0* T55f114(T0* C, T0* a1, T0* a2);
/* ET_CLASS.shallow_base_type */
extern T0* T55f118(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.is_like_current */
extern T1 T913f34(T0* C);
/* ET_LIKE_FEATURE.is_like_current */
extern T1 T685f40(T0* C);
/* ET_BIT_FEATURE.is_like_current */
extern T1 T549f62(T0* C);
/* ET_BIT_N.is_like_current */
extern T1 T548f61(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_like_current */
extern T1 T536f41(T0* C);
/* ET_FORMAL_PARAMETER.is_like_current */
extern T1 T528f39(T0* C);
/* ET_TUPLE_TYPE.is_like_current */
extern T1 T288f52(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_like_current */
extern T1 T161f61(T0* C);
/* ET_CLASS_TYPE.is_like_current */
extern T1 T159f60(T0* C);
/* ET_CLASS.is_like_current */
extern T1 T55f123(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.named_type */
extern T0* T913f26(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.named_type */
extern T0* T687f27(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.named_type */
extern T0* T685f24(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.named_type */
extern T0* T549f26(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.named_type */
extern T0* T548f26(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.named_type */
extern T0* T536f37(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.named_type */
extern T0* T528f35(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.named_type */
extern T0* T288f16(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.named_type */
extern T0* T161f20(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.named_type */
extern T0* T159f18(T0* C, T0* a1, T0* a2);
/* ET_CLASS.named_type */
extern T0* T55f81(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.direct_base_class */
extern T0* T913f11(T0* C, T0* a1);
/* ET_LIKE_CURRENT.direct_base_class */
extern T0* T687f12(T0* C, T0* a1);
/* ET_LIKE_FEATURE.direct_base_class */
extern T0* T685f12(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.direct_base_class */
extern T0* T536f13(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.direct_base_class */
extern T0* T528f10(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_expanded */
extern T1 T913f30(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_expanded */
extern T1 T687f33(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_expanded */
extern T1 T685f32(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_expanded */
extern T1 T549f49(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_expanded */
extern T1 T548f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_expanded */
extern T1 T536f25(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_expanded */
extern T1 T528f23(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_expanded */
extern T1 T288f37(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_expanded */
extern T1 T161f45(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_expanded */
extern T1 T159f40(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_expanded */
extern T1 T55f113(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.resolved_formal_parameters */
extern T0* T913f33(T0* C, T0* a1);
/* ET_LIKE_CURRENT.resolved_formal_parameters */
extern T0* T687f32(T0* C, T0* a1);
/* ET_LIKE_FEATURE.resolved_formal_parameters */
extern T0* T685f31(T0* C, T0* a1);
/* ET_BIT_FEATURE.resolved_formal_parameters */
extern T0* T549f48(T0* C, T0* a1);
/* ET_BIT_N.resolved_formal_parameters */
extern T0* T548f47(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T536f50(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER.resolved_formal_parameters */
extern T0* T528f48(T0* C, T0* a1);
/* ET_TUPLE_TYPE.resolved_formal_parameters */
extern T0* T288f45(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T160f17(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.set_right_bracket */
extern void T160f27(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_TYPE.is_type_reference */
extern T1 T913f42(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.is_type_reference */
extern T1 T687f49(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.is_type_reference */
extern T1 T685f52(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.is_type_reference */
extern T1 T549f67(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.is_type_reference */
extern T1 T548f66(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_type_reference */
extern T1 T536f27(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.is_type_reference */
extern T1 T528f25(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.is_type_reference */
extern T1 T288f61(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_type_reference */
extern T1 T161f66(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.is_type_reference */
extern T1 T159f65(T0* C, T0* a1, T0* a2);
/* ET_CLASS.is_type_reference */
extern T1 T55f128(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.conforms_to_type */
extern T1 T913f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_to_type */
extern T1 T687f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_to_type */
extern T1 T685f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_to_type */
extern T1 T536f23(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_to_type */
extern T1 T528f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_formal_parameter_type */
extern T1 T913f38(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.ise_5_6_latest */
extern T0* T913f46(T0* C);
/* ET_LIKE_CURRENT.conforms_from_formal_parameter_type */
extern T1 T687f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_formal_parameter_type */
extern T1 T685f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_formal_parameter_type */
extern T1 T549f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.ise_5_6_latest */
extern T0* T549f72(T0* C);
/* ET_BIT_N.conforms_from_formal_parameter_type */
extern T1 T548f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.ise_5_6_latest */
extern T0* T548f70(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T536f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T536f46(T0* C);
/* ET_FORMAL_PARAMETER.conforms_from_formal_parameter_type */
extern T1 T528f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.ise_5_6_latest */
extern T0* T528f44(T0* C);
/* ET_TUPLE_TYPE.conforms_from_formal_parameter_type */
extern T1 T288f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.ise_5_6_latest */
extern T0* T288f80(T0* C);
/* ET_GENERIC_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T161f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_6_latest */
extern T0* T161f58(T0* C);
/* ET_CLASS_TYPE.conforms_from_formal_parameter_type */
extern T1 T159f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_6_latest */
extern T0* T159f54(T0* C);
/* ET_CLASS.conforms_from_formal_parameter_type */
extern T1 T55f126(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_6_latest */
extern T0* T55f144(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_class_type */
extern T1 T913f39(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_class_type */
extern T1 T687f41(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_class_type */
extern T1 T685f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_class_type */
extern T1 T549f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_class_type */
extern T1 T548f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T536f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_class_type */
extern T1 T528f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_class_type */
extern T1 T288f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_class_type */
extern T1 T161f54(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.ise_5_7_62488 */
extern unsigned char ge260os1591;
extern T0* ge260ov1591;
extern T0* T161f59(T0* C);
/* ET_FORMAL_PARAMETER_LIST.conforms_to_types */
extern T1 T396f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.conforms_to_types */
extern T1 T160f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_class_type */
extern T1 T159f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.ise_5_7_62488 */
extern T0* T159f55(T0* C);
/* ET_CLASS.conforms_from_class_type */
extern T1 T55f122(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.ise_5_7_62488 */
extern T0* T55f145(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_tuple_type */
extern T1 T913f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_tuple_type */
extern T1 T687f42(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_tuple_type */
extern T1 T685f46(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_tuple_type */
extern T1 T549f63(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_tuple_type */
extern T1 T548f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T536f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_tuple_type */
extern T1 T528f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_tuple_type */
extern T1 T288f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_ACTUAL_PARAMETER_LIST.tuple_conforms_to_types */
extern T1 T160f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T161f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_tuple_type */
extern T1 T159f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_tuple_type */
extern T1 T55f124(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.conforms_from_bit_type */
extern T1 T913f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.conforms_from_bit_type */
extern T1 T687f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.conforms_from_bit_type */
extern T1 T685f49(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_from_bit_type */
extern T1 T549f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_from_bit_type */
extern T1 T548f68(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T536f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.conforms_from_bit_type */
extern T1 T528f45(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_from_bit_type */
extern T1 T288f62(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_from_bit_type */
extern T1 T161f67(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_from_bit_type */
extern T1 T159f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_from_bit_type */
extern T1 T55f129(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_class_type */
extern T1 T913f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_class_type */
extern T1 T687f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_class_type */
extern T1 T685f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_class_type */
extern T1 T549f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_class_type */
extern T1 T548f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_class_type */
extern T1 T536f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_class_type */
extern T1 T528f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_class_type */
extern T1 T288f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_class_type */
extern T1 T161f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_class_type */
extern T1 T159f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_class_type */
extern T1 T55f78(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type */
extern T0* T913f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_type */
extern T0* T687f8(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_type */
extern T0* T685f11(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_type */
extern T0* T549f13(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_type */
extern T0* T548f15(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type */
extern T0* T536f12(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_type */
extern T0* T528f9(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_type */
extern T0* T288f9(T0* C, T0* a1, T0* a2);
/* ET_ACTUAL_PARAMETER_LIST.named_types */
extern T0* T160f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_type */
extern T0* T161f2(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_LIST.named_types */
extern T0* T396f15(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_type */
extern T0* T159f9(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_type */
extern T0* T55f34(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.same_base_tuple_type */
extern T1 T913f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_tuple_type */
extern T1 T687f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_tuple_type */
extern T1 T685f14(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_tuple_type */
extern T1 T549f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_tuple_type */
extern T1 T548f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T536f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_tuple_type */
extern T1 T528f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_tuple_type */
extern T1 T288f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_tuple_type */
extern T1 T161f27(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_tuple_type */
extern T1 T159f24(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_tuple_type */
extern T1 T55f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.same_base_bit_type */
extern T1 T913f25(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_base_bit_type */
extern T1 T687f26(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_base_bit_type */
extern T1 T685f15(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_base_bit_type */
extern T1 T549f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_bit_type */
extern T1 T548f37(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T536f21(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_base_bit_type */
extern T1 T528f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_bit_type */
extern T1 T288f30(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_bit_type */
extern T1 T161f36(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_bit_type */
extern T1 T159f32(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_bit_type */
extern T1 T55f98(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.is_base_type */
extern T1 T913f47(T0* C);
/* ET_LIKE_CURRENT.is_base_type */
extern T1 T687f48(T0* C);
/* ET_LIKE_FEATURE.is_base_type */
extern T1 T685f51(T0* C);
/* ET_BIT_FEATURE.is_base_type */
extern T1 T549f74(T0* C);
/* ET_BIT_N.is_base_type */
extern T1 T548f73(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_base_type */
extern T1 T536f56(T0* C);
/* ET_FORMAL_PARAMETER.is_base_type */
extern T1 T528f54(T0* C);
/* ET_TUPLE_TYPE.is_base_type */
extern T1 T288f65(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_base_type */
extern T1 T161f70(T0* C);
/* ET_CLASS_TYPE.is_base_type */
extern T1 T159f69(T0* C);
/* ET_CLASS.is_base_type */
extern T1 T55f142(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.is_named_type */
extern T1 T913f50(T0* C);
/* ET_LIKE_CURRENT.is_named_type */
extern T1 T687f53(T0* C);
/* ET_LIKE_FEATURE.is_named_type */
extern T1 T685f56(T0* C);
/* ET_BIT_FEATURE.is_named_type */
extern T1 T549f85(T0* C);
/* ET_BIT_N.is_named_type */
extern T1 T548f84(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.is_named_type */
extern T1 T536f59(T0* C);
/* ET_FORMAL_PARAMETER.is_named_type */
extern T1 T528f57(T0* C);
/* ET_TUPLE_TYPE.is_named_type */
extern T1 T288f74(T0* C);
/* ET_GENERIC_CLASS_TYPE.is_named_type */
extern T1 T161f79(T0* C);
/* ET_CLASS_TYPE.is_named_type */
extern T1 T159f78(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_to_type */
extern T1 T913f40(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_to_type */
extern T1 T687f43(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_to_type */
extern T1 T685f47(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_to_type */
extern T1 T549f66(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T536f22(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_to_type */
extern T1 T528f20(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.last_leaf */
extern T0* T913f53(T0* C);
/* ET_LIKE_CURRENT.last_leaf */
extern T0* T687f56(T0* C);
/* ET_LIKE_FEATURE.last_leaf */
extern T0* T685f59(T0* C);
/* ET_BIT_FEATURE.last_leaf */
extern T0* T549f90(T0* C);
/* ET_BIT_N.last_leaf */
extern T0* T548f89(T0* C);
/* ET_TUPLE_TYPE.last_leaf */
extern T0* T288f83(T0* C);
/* ET_ACTUAL_PARAMETER_LIST.last_leaf */
extern T0* T160f22(T0* C);
/* ET_GENERIC_CLASS_TYPE.last_leaf */
extern T0* T161f86(T0* C);
/* ET_FORMAL_PARAMETER_LIST.last_leaf */
extern T0* T396f23(T0* C);
/* ET_CLASS_TYPE.last_leaf */
extern T0* T159f85(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_class_type */
extern T1 T913f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_class_type */
extern T1 T687f50(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_class_type */
extern T1 T685f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_class_type */
extern T1 T549f71(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_class_type */
extern T1 T548f69(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T536f57(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_class_type */
extern T1 T528f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_class_type */
extern T1 T288f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T161f80(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_class_type */
extern T1 T159f79(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_class_type */
extern T1 T55f146(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.base_type_index_of_label */
extern T6 T913f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_CURRENT.base_type_index_of_label */
extern T6 T687f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_LIKE_FEATURE.base_type_index_of_label */
extern T6 T685f57(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.base_type_index_of_label */
extern T6 T549f87(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.index_of_label */
extern T6 T549f91(T0* C, T0* a1);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T536f60(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER.base_type_index_of_label */
extern T6 T528f58(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_FORMAL_PARAMETER_TYPE.reference_conforms_from_tuple_type */
extern T1 T913f52(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.reference_conforms_from_tuple_type */
extern T1 T687f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.reference_conforms_from_tuple_type */
extern T1 T685f58(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.reference_conforms_from_tuple_type */
extern T1 T549f89(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.reference_conforms_from_tuple_type */
extern T1 T548f88(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T536f61(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.reference_conforms_from_tuple_type */
extern T1 T528f59(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_from_tuple_type */
extern T1 T288f81(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T161f85(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_from_tuple_type */
extern T1 T159f84(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_from_tuple_type */
extern T1 T55f153(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER_TYPE.to_text */
extern T0* T913f2(T0* C);
/* ET_LIKE_CURRENT.to_text */
extern T0* T687f5(T0* C);
/* ET_LIKE_FEATURE.to_text */
extern T0* T685f5(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.to_text */
extern T0* T536f53(T0* C);
/* ET_FORMAL_PARAMETER.to_text */
extern T0* T528f51(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.base_class */
extern T0* T913f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_CURRENT.base_class */
extern T0* T687f7(T0* C, T0* a1, T0* a2);
/* ET_LIKE_FEATURE.base_class */
extern T0* T685f10(T0* C, T0* a1, T0* a2);
/* ET_BIT_FEATURE.base_class */
extern T0* T549f12(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.base_class */
extern T0* T548f14(T0* C, T0* a1, T0* a2);
/* ET_CONSTRAINED_FORMAL_PARAMETER.base_class */
extern T0* T536f11(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER.base_class */
extern T0* T528f8(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.base_class */
extern T0* T288f8(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.base_class */
extern T0* T161f1(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.base_class */
extern T0* T159f8(T0* C, T0* a1, T0* a2);
/* ET_CLASS.base_class */
extern T0* T55f33(T0* C, T0* a1, T0* a2);
/* ET_FORMAL_PARAMETER_TYPE.position */
extern T0* T913f20(T0* C);
/* ET_LIKE_CURRENT.position */
extern T0* T687f21(T0* C);
/* ET_LIKE_FEATURE.position */
extern T0* T685f8(T0* C);
/* ET_BIT_FEATURE.position */
extern T0* T549f10(T0* C);
/* ET_BIT_N.position */
extern T0* T548f8(T0* C);
/* ET_CONSTRAINED_FORMAL_PARAMETER.position */
extern T0* T536f54(T0* C);
/* ET_FORMAL_PARAMETER.position */
extern T0* T528f52(T0* C);
/* ET_TUPLE_TYPE.position */
extern T0* T288f23(T0* C);
/* ET_FORMAL_PARAMETER_TYPE.same_named_type */
extern T1 T913f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_CURRENT.same_named_type */
extern T1 T687f9(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_LIKE_FEATURE.same_named_type */
extern T1 T685f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.same_named_type */
extern T1 T549f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_named_type */
extern T1 T548f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CONSTRAINED_FORMAL_PARAMETER.same_named_type */
extern T1 T536f16(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_FORMAL_PARAMETER.same_named_type */
extern T1 T528f13(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_named_type */
extern T1 T288f12(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_named_type */
extern T1 T161f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_named_type */
extern T1 T159f10(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_named_type */
extern T1 T55f75(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_EXTERNAL_PROCEDURE.new_synonym */
extern T0* T638f19(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.set_synonym */
extern void T638f92(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.new_synonym */
extern T0* T637f18(T0* C, T0* a1);
/* ET_ONCE_PROCEDURE.set_synonym */
extern void T637f91(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.new_synonym */
extern T0* T302f20(T0* C, T0* a1);
/* ET_DEFERRED_PROCEDURE.set_synonym */
extern void T302f88(T0* C, T0* a1);
/* ET_DO_PROCEDURE.new_synonym */
extern T0* T297f22(T0* C, T0* a1);
/* ET_DO_PROCEDURE.set_synonym */
extern void T297f91(T0* C, T0* a1);
/* ET_EXTERNAL_PROCEDURE.is_deferred */
extern T1 T638f30(T0* C);
/* ET_ONCE_PROCEDURE.is_deferred */
extern T1 T637f30(T0* C);
/* ET_DO_PROCEDURE.is_deferred */
extern T1 T297f30(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_frozen */
extern T1 T638f31(T0* C);
/* ET_ONCE_PROCEDURE.is_frozen */
extern T1 T637f31(T0* C);
/* ET_DEFERRED_PROCEDURE.is_frozen */
extern T1 T302f29(T0* C);
/* ET_DO_PROCEDURE.is_frozen */
extern T1 T297f31(T0* C);
/* ET_EXTERNAL_PROCEDURE.has_seed */
extern T1 T638f26(T0* C, T6 a1);
/* ET_ONCE_PROCEDURE.has_seed */
extern T1 T637f25(T0* C, T6 a1);
/* ET_DEFERRED_PROCEDURE.has_seed */
extern T1 T302f23(T0* C, T6 a1);
/* ET_DO_PROCEDURE.has_seed */
extern T1 T297f25(T0* C, T6 a1);
/* ET_EXTERNAL_PROCEDURE.is_creation_exported_to */
extern T1 T638f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.is_creation_exported_to */
extern T1 T55f125(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR_LIST.is_exported_to */
extern T1 T497f8(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CREATOR.is_exported_to */
extern T1 T591f12(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLIENTS.has_descendant */
extern T1 T414f11(T0* C, T0* a1, T0* a2);
/* ET_CLASS.has_ancestor */
extern T1 T55f154(T0* C, T0* a1, T0* a2);
/* ET_BASE_TYPE_LIST.has_class */
extern T1 T296f6(T0* C, T0* a1, T0* a2);
/* ET_CLASS_NAME_LIST.has_descendant */
extern T1 T413f8(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_creation_exported_to */
extern T1 T637f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DEFERRED_PROCEDURE.is_creation_exported_to */
extern T1 T302f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_DO_PROCEDURE.is_creation_exported_to */
extern T1 T297f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_EXTERNAL_PROCEDURE.overloaded_name */
extern T0* T638f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_extended_name */
extern T0* T638f62(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_name */
extern T0* T637f58(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_extended_name */
extern T0* T637f60(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_name */
extern T0* T302f57(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_extended_name */
extern T0* T302f59(T0* C);
/* ET_DO_PROCEDURE.overloaded_name */
extern T0* T297f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_extended_name */
extern T0* T297f60(T0* C);
/* ET_EXTERNAL_PROCEDURE.alias_name */
extern T0* T638f27(T0* C);
/* ET_ONCE_PROCEDURE.alias_name */
extern T0* T637f27(T0* C);
/* ET_DEFERRED_PROCEDURE.alias_name */
extern T0* T302f25(T0* C);
/* ET_DO_PROCEDURE.alias_name */
extern T0* T297f27(T0* C);
/* ET_EXTERNAL_PROCEDURE.overloaded_alias_name */
extern T0* T638f61(T0* C);
/* ET_ONCE_PROCEDURE.overloaded_alias_name */
extern T0* T637f59(T0* C);
/* ET_DEFERRED_PROCEDURE.overloaded_alias_name */
extern T0* T302f58(T0* C);
/* ET_DO_PROCEDURE.overloaded_alias_name */
extern T0* T297f59(T0* C);
/* ET_EXTERNAL_PROCEDURE.name */
extern T0* T638f3(T0* C);
/* ET_ONCE_PROCEDURE.name */
extern T0* T637f3(T0* C);
/* ET_DEFERRED_PROCEDURE.name */
extern T0* T302f2(T0* C);
/* ET_DO_PROCEDURE.name */
extern T0* T297f1(T0* C);
/* ET_EXTERNAL_PROCEDURE.arguments_count */
extern T6 T638f25(T0* C);
/* ET_ONCE_PROCEDURE.arguments_count */
extern T6 T637f24(T0* C);
/* ET_DEFERRED_PROCEDURE.arguments_count */
extern T6 T302f22(T0* C);
/* ET_DO_PROCEDURE.arguments_count */
extern T6 T297f24(T0* C);
/* ET_EXTERNAL_PROCEDURE.is_exported_to */
extern T1 T638f49(T0* C, T0* a1, T0* a2);
/* ET_ONCE_PROCEDURE.is_exported_to */
extern T1 T637f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_PROCEDURE.is_exported_to */
extern T1 T302f45(T0* C, T0* a1, T0* a2);
/* ET_DO_PROCEDURE.is_exported_to */
extern T1 T297f47(T0* C, T0* a1, T0* a2);
/* ET_DEFERRED_FUNCTION.new_synonym */
extern T0* T632f18(T0* C, T0* a1);
/* ET_DEFERRED_FUNCTION.set_synonym */
extern void T632f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.new_synonym */
extern T0* T631f20(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.set_synonym */
extern void T631f93(T0* C, T0* a1);
/* ET_DO_FUNCTION.new_synonym */
extern T0* T629f20(T0* C, T0* a1);
/* ET_DO_FUNCTION.set_synonym */
extern void T629f93(T0* C, T0* a1);
/* ET_ATTRIBUTE.new_synonym */
extern T0* T226f10(T0* C, T0* a1);
/* ET_ATTRIBUTE.set_synonym */
extern void T226f77(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.new_synonym */
extern T0* T225f12(T0* C, T0* a1);
/* ET_UNIQUE_ATTRIBUTE.set_synonym */
extern void T225f81(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.new_synonym */
extern T0* T223f12(T0* C, T0* a1);
/* ET_CONSTANT_ATTRIBUTE.set_synonym */
extern void T223f80(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.new_synonym */
extern T0* T163f22(T0* C, T0* a1);
/* ET_EXTERNAL_FUNCTION.set_synonym */
extern void T163f90(T0* C, T0* a1);
/* ET_ONCE_FUNCTION.is_deferred */
extern T1 T631f32(T0* C);
/* ET_DO_FUNCTION.is_deferred */
extern T1 T629f32(T0* C);
/* ET_ATTRIBUTE.is_deferred */
extern T1 T226f37(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_deferred */
extern T1 T225f39(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_deferred */
extern T1 T223f39(T0* C);
/* ET_EXTERNAL_FUNCTION.is_deferred */
extern T1 T163f44(T0* C);
/* ET_DEFERRED_FUNCTION.is_frozen */
extern T1 T632f31(T0* C);
/* ET_ONCE_FUNCTION.is_frozen */
extern T1 T631f33(T0* C);
/* ET_DO_FUNCTION.is_frozen */
extern T1 T629f33(T0* C);
/* ET_ATTRIBUTE.is_frozen */
extern T1 T226f38(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_frozen */
extern T1 T225f40(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_frozen */
extern T1 T223f40(T0* C);
/* ET_EXTERNAL_FUNCTION.is_frozen */
extern T1 T163f45(T0* C);
/* ET_DEFERRED_FUNCTION.is_bracketable */
extern T1 T632f34(T0* C);
/* ET_ONCE_FUNCTION.is_bracketable */
extern T1 T631f36(T0* C);
/* ET_DO_FUNCTION.is_bracketable */
extern T1 T629f36(T0* C);
/* ET_ATTRIBUTE.is_bracketable */
extern T1 T226f41(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_bracketable */
extern T1 T225f43(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_bracketable */
extern T1 T223f43(T0* C);
/* ET_EXTERNAL_FUNCTION.is_bracketable */
extern T1 T163f48(T0* C);
/* ET_DEFERRED_FUNCTION.is_prefixable */
extern T1 T632f32(T0* C);
/* ET_ONCE_FUNCTION.is_prefixable */
extern T1 T631f34(T0* C);
/* ET_DO_FUNCTION.is_prefixable */
extern T1 T629f34(T0* C);
/* ET_EXTERNAL_FUNCTION.is_prefixable */
extern T1 T163f46(T0* C);
/* ET_DEFERRED_FUNCTION.is_infixable */
extern T1 T632f33(T0* C);
/* ET_ONCE_FUNCTION.is_infixable */
extern T1 T631f35(T0* C);
/* ET_DO_FUNCTION.is_infixable */
extern T1 T629f35(T0* C);
/* ET_ATTRIBUTE.is_infixable */
extern T1 T226f40(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_infixable */
extern T1 T225f42(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_infixable */
extern T1 T223f42(T0* C);
/* ET_EXTERNAL_FUNCTION.is_infixable */
extern T1 T163f47(T0* C);
/* ET_DEFERRED_FUNCTION.is_once */
extern T1 T632f35(T0* C);
/* ET_DO_FUNCTION.is_once */
extern T1 T629f37(T0* C);
/* ET_ATTRIBUTE.is_once */
extern T1 T226f42(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_once */
extern T1 T225f44(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_once */
extern T1 T223f44(T0* C);
/* ET_EXTERNAL_FUNCTION.is_once */
extern T1 T163f49(T0* C);
/* ET_DEFERRED_FUNCTION.is_constant_attribute */
extern T1 T632f21(T0* C);
/* ET_ONCE_FUNCTION.is_constant_attribute */
extern T1 T631f23(T0* C);
/* ET_DO_FUNCTION.is_constant_attribute */
extern T1 T629f23(T0* C);
/* ET_ATTRIBUTE.is_constant_attribute */
extern T1 T226f13(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_constant_attribute */
extern T1 T225f16(T0* C);
/* ET_EXTERNAL_FUNCTION.is_constant_attribute */
extern T1 T163f25(T0* C);
/* ET_DEFERRED_FUNCTION.is_unique_attribute */
extern T1 T632f23(T0* C);
/* ET_ONCE_FUNCTION.is_unique_attribute */
extern T1 T631f25(T0* C);
/* ET_DO_FUNCTION.is_unique_attribute */
extern T1 T629f25(T0* C);
/* ET_ATTRIBUTE.is_unique_attribute */
extern T1 T226f15(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_unique_attribute */
extern T1 T223f17(T0* C);
/* ET_EXTERNAL_FUNCTION.is_unique_attribute */
extern T1 T163f26(T0* C);
/* ET_DEFERRED_FUNCTION.has_seed */
extern T1 T632f25(T0* C, T6 a1);
/* ET_ONCE_FUNCTION.has_seed */
extern T1 T631f27(T0* C, T6 a1);
/* ET_DO_FUNCTION.has_seed */
extern T1 T629f27(T0* C, T6 a1);
/* ET_ATTRIBUTE.has_seed */
extern T1 T226f18(T0* C, T6 a1);
/* ET_UNIQUE_ATTRIBUTE.has_seed */
extern T1 T225f21(T0* C, T6 a1);
/* ET_CONSTANT_ATTRIBUTE.has_seed */
extern T1 T223f20(T0* C, T6 a1);
/* ET_EXTERNAL_FUNCTION.has_seed */
extern T1 T163f28(T0* C, T6 a1);
/* ET_DEFERRED_FUNCTION.is_attribute */
extern T1 T632f20(T0* C);
/* ET_ONCE_FUNCTION.is_attribute */
extern T1 T631f22(T0* C);
/* ET_DO_FUNCTION.is_attribute */
extern T1 T629f22(T0* C);
/* ET_UNIQUE_ATTRIBUTE.is_attribute */
extern T1 T225f14(T0* C);
/* ET_CONSTANT_ATTRIBUTE.is_attribute */
extern T1 T223f14(T0* C);
/* ET_EXTERNAL_FUNCTION.is_attribute */
extern T1 T163f24(T0* C);
/* ET_DEFERRED_FUNCTION.arguments_count */
extern T6 T632f24(T0* C);
/* ET_ONCE_FUNCTION.arguments_count */
extern T6 T631f26(T0* C);
/* ET_DO_FUNCTION.arguments_count */
extern T6 T629f26(T0* C);
/* ET_ATTRIBUTE.arguments_count */
extern T6 T226f17(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments_count */
extern T6 T225f20(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments_count */
extern T6 T223f19(T0* C);
/* ET_EXTERNAL_FUNCTION.arguments_count */
extern T6 T163f27(T0* C);
/* ET_DEFERRED_FUNCTION.is_exported_to */
extern T1 T632f50(T0* C, T0* a1, T0* a2);
/* ET_ONCE_FUNCTION.is_exported_to */
extern T1 T631f51(T0* C, T0* a1, T0* a2);
/* ET_DO_FUNCTION.is_exported_to */
extern T1 T629f51(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.is_exported_to */
extern T1 T226f46(T0* C, T0* a1, T0* a2);
/* ET_UNIQUE_ATTRIBUTE.is_exported_to */
extern T1 T225f48(T0* C, T0* a1, T0* a2);
/* ET_CONSTANT_ATTRIBUTE.is_exported_to */
extern T1 T223f48(T0* C, T0* a1, T0* a2);
/* ET_EXTERNAL_FUNCTION.is_exported_to */
extern T1 T163f54(T0* C, T0* a1, T0* a2);
/* ET_ATTRIBUTE.arguments */
extern T0* T226f16(T0* C);
/* ET_UNIQUE_ATTRIBUTE.arguments */
extern T0* T225f19(T0* C);
/* ET_CONSTANT_ATTRIBUTE.arguments */
extern T0* T223f18(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_name */
extern T0* T632f61(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_extended_name */
extern T0* T632f63(T0* C);
/* ET_ONCE_FUNCTION.overloaded_name */
extern T0* T631f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_extended_name */
extern T0* T631f64(T0* C);
/* ET_DO_FUNCTION.overloaded_name */
extern T0* T629f62(T0* C);
/* ET_DO_FUNCTION.overloaded_extended_name */
extern T0* T629f64(T0* C);
/* ET_ATTRIBUTE.overloaded_name */
extern T0* T226f57(T0* C);
/* ET_ATTRIBUTE.overloaded_extended_name */
extern T0* T226f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_name */
extern T0* T225f59(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_extended_name */
extern T0* T225f61(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_name */
extern T0* T223f59(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_extended_name */
extern T0* T223f61(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_name */
extern T0* T163f64(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_extended_name */
extern T0* T163f66(T0* C);
/* ET_DEFERRED_FUNCTION.alias_name */
extern T0* T632f27(T0* C);
/* ET_ONCE_FUNCTION.alias_name */
extern T0* T631f29(T0* C);
/* ET_DO_FUNCTION.alias_name */
extern T0* T629f29(T0* C);
/* ET_ATTRIBUTE.alias_name */
extern T0* T226f20(T0* C);
/* ET_UNIQUE_ATTRIBUTE.alias_name */
extern T0* T225f23(T0* C);
/* ET_CONSTANT_ATTRIBUTE.alias_name */
extern T0* T223f22(T0* C);
/* ET_EXTERNAL_FUNCTION.alias_name */
extern T0* T163f29(T0* C);
/* ET_DEFERRED_FUNCTION.overloaded_alias_name */
extern T0* T632f62(T0* C);
/* ET_ONCE_FUNCTION.overloaded_alias_name */
extern T0* T631f63(T0* C);
/* ET_DO_FUNCTION.overloaded_alias_name */
extern T0* T629f63(T0* C);
/* ET_ATTRIBUTE.overloaded_alias_name */
extern T0* T226f58(T0* C);
/* ET_UNIQUE_ATTRIBUTE.overloaded_alias_name */
extern T0* T225f60(T0* C);
/* ET_CONSTANT_ATTRIBUTE.overloaded_alias_name */
extern T0* T223f60(T0* C);
/* ET_EXTERNAL_FUNCTION.overloaded_alias_name */
extern T0* T163f65(T0* C);
/* ET_DEFERRED_FUNCTION.type */
extern T0* T632f22(T0* C);
/* ET_ONCE_FUNCTION.type */
extern T0* T631f24(T0* C);
/* ET_DO_FUNCTION.type */
extern T0* T629f24(T0* C);
/* ET_ATTRIBUTE.type */
extern T0* T226f14(T0* C);
/* ET_UNIQUE_ATTRIBUTE.type */
extern T0* T225f17(T0* C);
/* ET_CONSTANT_ATTRIBUTE.type */
extern T0* T223f16(T0* C);
/* ET_EXTERNAL_FUNCTION.type */
extern T0* T163f5(T0* C);
/* ET_DEFERRED_FUNCTION.name */
extern T0* T632f5(T0* C);
/* ET_ONCE_FUNCTION.name */
extern T0* T631f3(T0* C);
/* ET_DO_FUNCTION.name */
extern T0* T629f3(T0* C);
/* ET_ATTRIBUTE.name */
extern T0* T226f3(T0* C);
/* ET_UNIQUE_ATTRIBUTE.name */
extern T0* T225f3(T0* C);
/* ET_CONSTANT_ATTRIBUTE.name */
extern T0* T223f3(T0* C);
/* ET_EXTERNAL_FUNCTION.name */
extern T0* T163f3(T0* C);
/* ET_DEFERRED_FUNCTION.lower_name */
extern T0* T632f26(T0* C);
/* ET_ONCE_FUNCTION.lower_name */
extern T0* T631f28(T0* C);
/* ET_DO_FUNCTION.lower_name */
extern T0* T629f28(T0* C);
/* ET_ATTRIBUTE.lower_name */
extern T0* T226f19(T0* C);
/* ET_UNIQUE_ATTRIBUTE.lower_name */
extern T0* T225f22(T0* C);
/* ET_CONSTANT_ATTRIBUTE.lower_name */
extern T0* T223f21(T0* C);
/* ET_EXTERNAL_FUNCTION.lower_name */
extern T0* T163f21(T0* C);
/* ET_BIT_FEATURE.same_base_type */
extern T1 T549f34(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.same_base_type */
extern T1 T548f33(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.same_base_type */
extern T1 T288f19(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.same_base_type */
extern T1 T161f11(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_base_type */
extern T1 T159f17(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_base_type */
extern T1 T55f73(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.is_expanded */
extern T1 T161f6(T0* C);
/* ET_CLASS_TYPE.is_expanded */
extern T1 T159f14(T0* C);
/* ET_CLASS.is_expanded */
extern T1 T55f15(T0* C);
/* ET_CLASS.has_expanded_mark */
extern T1 T55f18(T0* C);
/* ET_GENERIC_CLASS_TYPE.same_syntactical_type */
extern T1 T161f18(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.same_syntactical_type */
extern T1 T159f7(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.same_syntactical_type */
extern T1 T55f74(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.context_same_named_type */
extern T1 T549f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_type */
extern T1 T548f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_type */
extern T1 T288f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_type */
extern T1 T161f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_type */
extern T1 T159f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_type */
extern T1 T55f103(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_named_type */
extern T0* T549f47(T0* C, T0* a1);
/* ET_BIT_N.context_named_type */
extern T0* T548f46(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_named_type */
extern T0* T288f36(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_named_type */
extern T0* T161f44(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_named_type */
extern T0* T159f38(T0* C, T0* a1);
/* ET_CLASS.context_named_type */
extern T0* T55f112(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual_count */
extern T6 T549f30(T0* C, T0* a1);
/* ET_BIT_N.context_base_type_actual_count */
extern T6 T548f29(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_actual_count */
extern T6 T288f24(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual_count */
extern T6 T161f29(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_actual_count */
extern T6 T159f26(T0* C, T0* a1);
/* ET_CLASS.context_base_type_actual_count */
extern T6 T55f91(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_base_type_actual */
extern T0* T549f31(T0* C, T6 a1, T0* a2);
/* ET_BIT_N.context_base_type_actual */
extern T0* T548f30(T0* C, T6 a1, T0* a2);
/* ET_TUPLE_TYPE.context_base_type_actual */
extern T0* T288f25(T0* C, T6 a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.context_base_type_actual */
extern T0* T161f30(T0* C, T6 a1, T0* a2);
/* ET_CLASS_TYPE.context_base_type_actual */
extern T0* T159f27(T0* C, T6 a1, T0* a2);
/* ET_CLASS.context_base_type_actual */
extern T0* T55f92(T0* C, T6 a1, T0* a2);
/* ET_BIT_FEATURE.context_same_named_formal_parameter_type */
extern T1 T549f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_formal_parameter_type */
extern T1 T548f50(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_formal_parameter_type */
extern T1 T288f39(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T161f48(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_formal_parameter_type */
extern T1 T159f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_formal_parameter_type */
extern T1 T55f109(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_class */
extern T0* T549f42(T0* C, T0* a1);
/* ET_BIT_N.context_base_class */
extern T0* T548f41(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_class */
extern T0* T288f31(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_class */
extern T0* T161f38(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_class */
extern T0* T159f33(T0* C, T0* a1);
/* ET_CLASS.context_base_class */
extern T0* T55f100(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_named_class_type */
extern T1 T549f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_class_type */
extern T1 T548f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_class_type */
extern T1 T288f40(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_class_type */
extern T1 T161f49(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_class_type */
extern T1 T159f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_class_type */
extern T1 T55f106(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_tuple_type */
extern T1 T549f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_tuple_type */
extern T1 T548f53(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_tuple_type */
extern T1 T288f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T161f51(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_tuple_type */
extern T1 T159f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_tuple_type */
extern T1 T55f107(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_named_bit_type */
extern T1 T549f55(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_named_bit_type */
extern T1 T548f54(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_named_bit_type */
extern T1 T288f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_named_bit_type */
extern T1 T161f52(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_named_bit_type */
extern T1 T159f47(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_named_bit_type */
extern T1 T55f110(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.conforms_to_context */
extern T1 T549f94(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.conforms_to_context */
extern T1 T548f93(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.conforms_to_context */
extern T1 T288f86(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.conforms_to_context */
extern T1 T161f90(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.tokens */
extern T0* T161f93(T0* C);
/* ET_CLASS_TYPE.conforms_to_context */
extern T1 T159f89(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.tokens */
extern T0* T159f91(T0* C);
/* ET_CLASS.conforms_to_context */
extern T1 T55f159(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.is_generic */
extern T1 T161f17(T0* C);
/* ET_CLASS_TYPE.is_generic */
extern T1 T159f16(T0* C);
/* ET_CLASS.is_generic */
extern T1 T55f16(T0* C);
/* ET_GENERIC_CLASS_TYPE.resolved_formal_parameters */
extern T0* T161f47(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.resolved_formal_parameters */
extern T0* T396f20(T0* C, T0* a1);
/* ET_CLASS_TYPE.resolved_formal_parameters */
extern T0* T159f39(T0* C, T0* a1);
/* ET_CLASS.resolved_formal_parameters */
extern T0* T55f115(T0* C, T0* a1);
/* ET_BIT_FEATURE.actual_parameters */
extern T0* T549f29(T0* C);
/* ET_BIT_N.actual_parameters */
extern T0* T548f28(T0* C);
/* ET_CLASS_TYPE.actual_parameters */
extern T0* T159f5(T0* C);
/* ET_BIT_FEATURE.context_base_type_index_of_label */
extern T6 T549f86(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.context_base_type_index_of_label */
extern T6 T548f85(T0* C, T0* a1, T0* a2);
/* ET_BIT_N.index_of_label */
extern T6 T548f90(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type_index_of_label */
extern T6 T288f77(T0* C, T0* a1, T0* a2);
/* ET_TUPLE_TYPE.index_of_label */
extern T6 T288f82(T0* C, T0* a1);
/* ET_ACTUAL_PARAMETER_LIST.index_of_label */
extern T6 T160f21(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T161f82(T0* C, T0* a1, T0* a2);
/* ET_GENERIC_CLASS_TYPE.index_of_label */
extern T6 T161f92(T0* C, T0* a1);
/* ET_FORMAL_PARAMETER_LIST.index_of_label */
extern T6 T396f22(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type_index_of_label */
extern T6 T159f81(T0* C, T0* a1, T0* a2);
/* ET_CLASS_TYPE.index_of_label */
extern T6 T159f90(T0* C, T0* a1);
/* ET_CLASS.context_base_type_index_of_label */
extern T6 T55f150(T0* C, T0* a1, T0* a2);
/* ET_CLASS.index_of_label */
extern T6 T55f158(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_is_type_reference */
extern T1 T549f88(T0* C, T0* a1);
/* ET_BIT_N.context_is_type_reference */
extern T1 T548f87(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_is_type_reference */
extern T1 T288f79(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_is_type_reference */
extern T1 T161f84(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_is_type_reference */
extern T1 T159f83(T0* C, T0* a1);
/* ET_CLASS.context_is_type_reference */
extern T1 T55f152(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_conforms_to_type */
extern T1 T549f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_to_type */
extern T1 T548f81(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_to_type */
extern T1 T288f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_to_type */
extern T1 T161f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_to_type */
extern T1 T159f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_to_type */
extern T1 T55f138(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_formal_parameter_type */
extern T1 T549f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_formal_parameter_type */
extern T1 T548f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T288f68(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T161f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_formal_parameter_type */
extern T1 T159f72(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_formal_parameter_type */
extern T1 T55f134(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_class_type */
extern T1 T549f80(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_class_type */
extern T1 T548f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_class_type */
extern T1 T288f71(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T161f76(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_class_type */
extern T1 T159f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_class_type */
extern T1 T55f135(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_tuple_type */
extern T1 T549f79(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_tuple_type */
extern T1 T548f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_tuple_type */
extern T1 T288f70(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T161f75(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_tuple_type */
extern T1 T159f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_tuple_type */
extern T1 T55f136(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_conforms_from_bit_type */
extern T1 T549f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_conforms_from_bit_type */
extern T1 T548f77(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_conforms_from_bit_type */
extern T1 T288f69(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T161f74(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_conforms_from_bit_type */
extern T1 T159f73(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_conforms_from_bit_type */
extern T1 T55f139(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_class_type */
extern T1 T549f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_class_type */
extern T1 T548f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_class_type */
extern T1 T288f33(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_class_type */
extern T1 T161f41(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_class_type */
extern T1 T159f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_class_type */
extern T1 T55f104(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_base_type */
extern T0* T549f43(T0* C, T0* a1);
/* ET_BIT_N.context_base_type */
extern T0* T548f42(T0* C, T0* a1);
/* ET_TUPLE_TYPE.context_base_type */
extern T0* T288f32(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.context_base_type */
extern T0* T161f40(T0* C, T0* a1);
/* ET_CLASS_TYPE.context_base_type */
extern T0* T159f34(T0* C, T0* a1);
/* ET_CLASS.context_base_type */
extern T0* T55f102(T0* C, T0* a1);
/* ET_BIT_FEATURE.context_same_base_tuple_type */
extern T1 T549f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_tuple_type */
extern T1 T548f44(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_tuple_type */
extern T1 T288f34(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T161f42(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_tuple_type */
extern T1 T159f36(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_tuple_type */
extern T1 T55f108(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.context_same_base_bit_type */
extern T1 T549f46(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.context_same_base_bit_type */
extern T1 T548f45(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.context_same_base_bit_type */
extern T1 T288f35(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.context_same_base_bit_type */
extern T1 T161f43(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.context_same_base_bit_type */
extern T1 T159f37(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.context_same_base_bit_type */
extern T1 T55f111(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_N.reference_conforms_to_type */
extern T1 T548f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.reference_conforms_to_type */
extern T1 T288f60(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.reference_conforms_to_type */
extern T1 T161f65(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.reference_conforms_to_type */
extern T1 T159f64(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.reference_conforms_to_type */
extern T1 T55f127(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_FEATURE.conforms_to_type */
extern T1 T549f56(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.conforms_to_type */
extern T1 T548f55(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_TUPLE_TYPE.conforms_to_type */
extern T1 T288f44(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_GENERIC_CLASS_TYPE.conforms_to_type */
extern T1 T161f53(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS_TYPE.conforms_to_type */
extern T1 T159f48(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_CLASS.conforms_to_type */
extern T1 T55f121(T0* C, T0* a1, T0* a2, T0* a3, T0* a4);
/* ET_BIT_N.base_type_actual */
extern T0* T548f36(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_actual */
extern T0* T288f54(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_actual */
extern T0* T161f56(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_actual */
extern T0* T159f50(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_actual */
extern T0* T55f117(T0* C, T6 a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.actual_parameter_count */
extern T6 T549f40(T0* C);
/* ET_BIT_N.actual_parameter_count */
extern T6 T548f39(T0* C);
/* ET_TUPLE_TYPE.actual_parameter_count */
extern T6 T288f57(T0* C);
/* ET_GENERIC_CLASS_TYPE.actual_parameter_count */
extern T6 T161f60(T0* C);
/* ET_CLASS_TYPE.actual_parameter_count */
extern T6 T159f53(T0* C);
/* ET_CLASS.actual_parameter_count */
extern T6 T55f119(T0* C);
/* ET_GENERIC_CLASS_TYPE.position */
extern T0* T161f28(T0* C);
/* ET_CLASS_TYPE.position */
extern T0* T159f25(T0* C);
/* ET_CLASS.position */
extern T0* T55f90(T0* C);
/* ET_GENERIC_CLASS_TYPE.upper_name */
extern T0* T161f89(T0* C);
/* ET_CLASS_TYPE.upper_name */
extern T0* T159f88(T0* C);
/* ET_CLASS.upper_name */
extern T0* T55f20(T0* C);
/* ET_BIT_N.base_type_index_of_label */
extern T6 T548f86(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_TUPLE_TYPE.base_type_index_of_label */
extern T6 T288f78(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_GENERIC_CLASS_TYPE.base_type_index_of_label */
extern T6 T161f83(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS_TYPE.base_type_index_of_label */
extern T6 T159f82(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_CLASS.base_type_index_of_label */
extern T6 T55f151(T0* C, T0* a1, T0* a2, T0* a3);
/* ET_BIT_FEATURE.direct_base_class */
extern T0* T549f14(T0* C, T0* a1);
/* ET_BIT_N.direct_base_class */
extern T0* T548f16(T0* C, T0* a1);
/* ET_TUPLE_TYPE.direct_base_class */
extern T0* T288f10(T0* C, T0* a1);
/* ET_GENERIC_CLASS_TYPE.direct_base_class */
extern T0* T161f10(T0* C, T0* a1);
/* ET_CLASS_TYPE.direct_base_class */
extern T0* T159f12(T0* C, T0* a1);
/* ET_CLASS.direct_base_class */
extern T0* T55f32(T0* C, T0* a1);
/* ET_BIT_FEATURE.to_text */
extern T0* T549f7(T0* C);
/* ET_BIT_N.to_text */
extern T0* T548f9(T0* C);
/* ET_TUPLE_TYPE.to_text */
extern T0* T288f4(T0* C);
/* ET_GENERIC_CLASS_TYPE.to_text */
extern T0* T161f5(T0* C);
/* ET_CLASS_TYPE.to_text */
extern T0* T159f6(T0* C);
/* ET_CLASS.to_text */
extern T0* T55f13(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.static_type */
extern T0* T205f7(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.static_type */
extern T0* T204f7(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.static_type */
extern T0* T203f7(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.static_type */
extern T0* T197f7(T0* C);
/* ET_DYNAMIC_TYPE.static_type */
extern T0* T144f4(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_generic */
extern T1 T205f5(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_generic */
extern T1 T204f5(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_generic */
extern T1 T203f5(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_generic */
extern T1 T197f5(T0* C);
/* ET_DYNAMIC_TYPE.is_generic */
extern T1 T144f6(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_special */
extern T1 T205f28(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_special */
extern T1 T204f29(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_special */
extern T1 T197f28(T0* C);
/* ET_DYNAMIC_TYPE.is_special */
extern T1 T144f26(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.is_expanded */
extern T1 T205f3(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.is_expanded */
extern T1 T204f3(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.is_expanded */
extern T1 T203f3(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_expanded */
extern T1 T197f3(T0* C);
/* ET_DYNAMIC_TYPE.is_expanded */
extern T1 T144f5(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_procedure */
extern T0* T205f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.force_last */
extern void T200f10(T0* C, T0* a1);
/* ET_DYNAMIC_FEATURE_LIST.fixed_array */
extern unsigned char ge914os15099;
extern T0* ge914ov15099;
extern T0* T200f5(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.capacity */
extern T6 T200f6(T0* C);
/* ET_DYNAMIC_FEATURE_LIST.put_last */
extern void T200f9(T0* C, T0* a1);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T205f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_agent_call */
extern void T142f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_agent_call */
extern void T59f214(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_AGENT_OPERAND_PUSH_TYPE_SET.make */
extern T0* T898c11(T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.tokens */
extern T0* T205f22(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_procedure */
extern T0* T205f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FEATURE_LIST.make_with_capacity */
extern T0* T200c8(T6 a1);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_procedure */
extern T0* T204f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T204f20(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.tokens */
extern T0* T204f23(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_procedure */
extern T0* T204f20p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_procedure */
extern T0* T203f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T203f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.tokens */
extern T0* T203f22(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_procedure */
extern T0* T203f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_procedure */
extern T0* T197f2(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T197f19(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_put */
extern void T142f14(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_put */
extern void T59f213(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.put_reference_feature_name */
extern unsigned char ge781os12539;
extern T0* ge781ov12539;
extern T0* T157f37(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.tokens */
extern T0* T197f22(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_procedure */
extern T0* T197f19p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_procedure */
extern T0* T144f10(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_procedure */
extern T0* T144f15(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.dynamic_query */
extern T0* T205f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.new_dynamic_query */
extern T0* T205f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.dynamic_query */
extern T0* T204f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T204f18(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.last_result_feature_name */
extern unsigned char ge781os12528;
extern T0* ge781ov12528;
extern T0* T157f40(T0* C);
/* ET_DYNAMIC_FEATURE.set_result_type_set */
extern void T150f62(T0* C, T0* a1);
/* ET_DYNAMIC_FUNCTION_TYPE.new_dynamic_query */
extern T0* T204f18p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.dynamic_query */
extern T0* T203f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T203f17(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.infix_at_feature_name */
extern unsigned char ge781os12503;
extern T0* ge781ov12503;
extern T0* T157f34(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.new_dynamic_query */
extern T0* T203f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.dynamic_query */
extern T0* T197f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T197f17(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_NULL_TYPE_SET_BUILDER.build_tuple_item */
extern void T142f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PUSH_TYPE_SET_BUILDER.build_tuple_item */
extern void T59f212(T0* C, T0* a1, T0* a2);
/* ET_TOKEN_CONSTANTS.reference_item_feature_name */
extern unsigned char ge781os12541;
extern T0* ge781ov12541;
extern T0* T157f35(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.new_dynamic_query */
extern T0* T197f17p1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.dynamic_query */
extern T0* T144f1(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.new_dynamic_query */
extern T0* T144f13(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.hash_code */
extern T6 T205f34(T0* C);
/* ET_DYNAMIC_FUNCTION_TYPE.hash_code */
extern T6 T204f34(T0* C);
/* ET_DYNAMIC_SPECIAL_TYPE.hash_code */
extern T6 T203f33(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.hash_code */
extern T6 T197f33(T0* C);
/* ET_DYNAMIC_TYPE.hash_code */
extern T6 T144f31(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_query */
extern T0* T205f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_query */
extern T0* T204f12(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_query */
extern T0* T203f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_query */
extern T0* T197f11(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_query */
extern T0* T144f9(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.is_agent_type */
extern T1 T203f32(T0* C);
/* ET_DYNAMIC_TUPLE_TYPE.is_agent_type */
extern T1 T197f32(T0* C);
/* ET_DYNAMIC_TYPE.is_agent_type */
extern T1 T144f30(T0* C);
/* ET_DYNAMIC_PROCEDURE_TYPE.conforms_to_type */
extern T1 T205f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.conforms_to_type */
extern T1 T204f31(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.conforms_to_type */
extern T1 T203f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.conforms_to_type */
extern T1 T197f30(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_TYPE.conforms_to_type */
extern T1 T144f28(T0* C, T0* a1, T0* a2);
/* ET_DYNAMIC_PROCEDURE_TYPE.seeded_dynamic_procedure */
extern T0* T205f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_FUNCTION_TYPE.seeded_dynamic_procedure */
extern T0* T204f25(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_SPECIAL_TYPE.seeded_dynamic_procedure */
extern T0* T203f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TUPLE_TYPE.seeded_dynamic_procedure */
extern T0* T197f24(T0* C, T6 a1, T0* a2);
/* ET_DYNAMIC_TYPE.seeded_dynamic_procedure */
extern T0* T144f22(T0* C, T6 a1, T0* a2);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.default_message */
extern T0* T1391f1(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.message */
extern T0* T1391f3(T0* C, T0* a1);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.arguments */
extern T0* T1391f6(T0* C);
/* ET_XACE_MULTIPLE_LIBRARY_PREFIX_ERROR.string_ */
extern T0* T1391f4(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.default_message */
extern T0* T1306f1(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.message */
extern T0* T1306f3(T0* C, T0* a1);
/* ET_DOTNET_ASSEMBLY_ERROR.arguments */
extern T0* T1306f6(T0* C);
/* ET_DOTNET_ASSEMBLY_ERROR.string_ */
extern T0* T1306f4(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.default_message */
extern T0* T1151f1(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.message */
extern T0* T1151f3(T0* C, T0* a1);
/* ET_XACE_INVALID_EXPRESSION_ERROR.arguments */
extern T0* T1151f6(T0* C);
/* ET_XACE_INVALID_EXPRESSION_ERROR.string_ */
extern T0* T1151f4(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T896f1(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T896f3(T0* C, T0* a1);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T896f6(T0* C);
/* ET_XACE_ATTRIBUTE_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T896f4(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.default_message */
extern T0* T895f1(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.message */
extern T0* T895f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.arguments */
extern T0* T895f6(T0* C);
/* ET_XACE_UNKNOWN_OPTION_NAME_WARNING.string_ */
extern T0* T895f4(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.default_message */
extern T0* T894f1(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.message */
extern T0* T894f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.arguments */
extern T0* T894f6(T0* C);
/* ET_XACE_OBSOLETE_EXCLUDE_ELEMENT_WARNING.string_ */
extern T0* T894f4(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.default_message */
extern T0* T893f1(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.message */
extern T0* T893f3(T0* C, T0* a1);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.arguments */
extern T0* T893f6(T0* C);
/* ET_XACE_OBSOLETE_CLUSTER_ELEMENT_WARNING.string_ */
extern T0* T893f4(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.default_message */
extern T0* T892f1(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.message */
extern T0* T892f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ELEMENT_ERROR.arguments */
extern T0* T892f6(T0* C);
/* ET_XACE_MISSING_ELEMENT_ERROR.string_ */
extern T0* T892f4(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.default_message */
extern T0* T891f1(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.message */
extern T0* T891f3(T0* C, T0* a1);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.arguments */
extern T0* T891f6(T0* C);
/* ET_XACE_UNKNOWN_ELEMENT_ERROR.string_ */
extern T0* T891f4(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.default_message */
extern T0* T890f1(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.message */
extern T0* T890f3(T0* C, T0* a1);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.arguments */
extern T0* T890f6(T0* C);
/* ET_XACE_MISSING_ATTRIBUTE_ERROR.string_ */
extern T0* T890f4(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.default_message */
extern T0* T889f1(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.message */
extern T0* T889f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.arguments */
extern T0* T889f6(T0* C);
/* ET_XACE_WRONG_ROOT_ELEMENT_ERROR.string_ */
extern T0* T889f4(T0* C);
/* ET_SYNTAX_ERROR.default_message */
extern T0* T886f1(T0* C);
/* ET_SYNTAX_ERROR.message */
extern T0* T886f3(T0* C, T0* a1);
/* ET_SYNTAX_ERROR.arguments */
extern T0* T886f6(T0* C);
/* ET_SYNTAX_ERROR.string_ */
extern T0* T886f4(T0* C);
/* ET_CLUSTER_ERROR.default_message */
extern T0* T885f1(T0* C);
/* ET_CLUSTER_ERROR.message */
extern T0* T885f3(T0* C, T0* a1);
/* ET_CLUSTER_ERROR.arguments */
extern T0* T885f6(T0* C);
/* ET_CLUSTER_ERROR.string_ */
extern T0* T885f4(T0* C);
/* ET_VALIDITY_ERROR.default_message */
extern T0* T884f5(T0* C);
/* ET_VALIDITY_ERROR.message */
extern T0* T884f7(T0* C, T0* a1);
/* ET_VALIDITY_ERROR.arguments */
extern T0* T884f10(T0* C);
/* ET_VALIDITY_ERROR.string_ */
extern T0* T884f8(T0* C);
/* ET_INTERNAL_ERROR.default_message */
extern T0* T883f1(T0* C);
/* ET_INTERNAL_ERROR.message */
extern T0* T883f3(T0* C, T0* a1);
/* ET_INTERNAL_ERROR.arguments */
extern T0* T883f6(T0* C);
/* ET_INTERNAL_ERROR.string_ */
extern T0* T883f4(T0* C);
/* ET_SYSTEM_ERROR.default_message */
extern T0* T882f1(T0* C);
/* ET_SYSTEM_ERROR.message */
extern T0* T882f3(T0* C, T0* a1);
/* ET_SYSTEM_ERROR.arguments */
extern T0* T882f6(T0* C);
/* ET_SYSTEM_ERROR.string_ */
extern T0* T882f4(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.default_message */
extern T0* T270f1(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.message */
extern T0* T270f3(T0* C, T0* a1);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.arguments */
extern T0* T270f6(T0* C);
/* ET_XACE_ELEMENT_OBSOLETED_BY_ELEMENT_WARNING.string_ */
extern T0* T270f4(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.default_message */
extern T0* T269f1(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.message */
extern T0* T269f3(T0* C, T0* a1);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.arguments */
extern T0* T269f6(T0* C);
/* ET_XACE_POSITIVE_INTEGER_EXPECTED_ERROR.string_ */
extern T0* T269f4(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.default_message */
extern T0* T268f1(T0* C);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.message */
extern T0* T268f3(T0* C, T0* a1);
/* ET_XACE_WRONG_ATTRIBUTE_VALUE_ERROR.arguments */
extern T0* T268f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.default_message */
extern T0* T267f1(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.message */
extern T0* T267f3(T0* C, T0* a1);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.arguments */
extern T0* T267f6(T0* C);
/* ET_XACE_NON_EMPTY_ATTRIBUTE_EXPECTED_ERROR.string_ */
extern T0* T267f4(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.default_message */
extern T0* T266f1(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.message */
extern T0* T266f3(T0* C, T0* a1);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.arguments */
extern T0* T266f6(T0* C);
/* ET_XACE_BOOLEAN_EXPECTED_ERROR.string_ */
extern T0* T266f4(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.default_message */
extern T0* T199f2(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.message */
extern T0* T199f4(T0* C, T0* a1);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.arguments */
extern T0* T199f6(T0* C);
/* UT_CANNOT_WRITE_TO_FILE_ERROR.string_ */
extern T0* T199f5(T0* C);
/* UT_MESSAGE.default_message */
extern T0* T99f1(T0* C);
/* UT_MESSAGE.message */
extern T0* T99f3(T0* C, T0* a1);
/* UT_MESSAGE.arguments */
extern T0* T99f6(T0* C);
/* UT_MESSAGE.string_ */
extern T0* T99f4(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.default_message */
extern T0* T62f2(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.message */
extern T0* T62f4(T0* C, T0* a1);
/* UT_CANNOT_READ_FILE_ERROR.arguments */
extern T0* T62f6(T0* C);
/* UT_CANNOT_READ_FILE_ERROR.string_ */
extern T0* T62f5(T0* C);
/* XM_EIFFEL_INPUT_STREAM.last_character */
extern T2 T905f6(T0* C);
/* DS_LINKED_QUEUE [CHARACTER].item */
extern T2 T1160f2(T0* C);
/* XM_EIFFEL_INPUT_STREAM.end_of_input */
extern T1 T905f4(T0* C);
/* KL_TEXT_INPUT_FILE.end_of_input */
extern T1 T22f25(T0* C);
/* KL_STDIN_FILE.read_to_string */
extern T6 T908f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.old_read_to_string */
extern T6 T908f9(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STDIN_FILE.file_gss */
extern T6 T908f12(T0* C, T14 a1, T14 a2, T6 a3);
/* KL_STDIN_FILE.any_ */
extern T0* T908f7(T0* C);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T905f27(T0* C, T0* a1, T6 a2, T6 a3);
/* XM_EIFFEL_INPUT_STREAM.read_to_string */
extern T6 T905f27p1(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_STRING_INPUT_STREAM.read_to_string */
extern T6 T1336f4(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.read_to_string */
extern T6 T22f29(T0* C, T0* a1, T6 a2, T6 a3);
/* KL_TEXT_INPUT_FILE.dummy_kl_character_buffer */
extern unsigned char ge404os1679;
extern T0* ge404ov1679;
extern T0* T22f37(T0* C);
/* KL_TEXT_INPUT_FILE.any_ */
extern T0* T22f35(T0* C);
/* XM_EIFFEL_INPUT_STREAM.name */
extern T0* T905f5(T0* C);
/* KL_STRING_INPUT_STREAM.name */
extern unsigned char ge318os1654;
extern T0* ge318ov1654;
extern T0* T1336f2(T0* C);
extern T0* gema862(T6 c, ...);
extern T0* gema221(T6 c, ...);
extern T0* gema295(T6 c, ...);
extern T0* gema916(T6 c, ...);
extern T0* gema313(T6 c, ...);
extern int gevoid(T0* C, ...);
extern T0* ge416ov8622;
extern T0* ge420ov2764;
extern T0* ge245ov8492;
extern T0* ge358ov23638;
extern T0* ge427ov9187;
extern T0* ge393ov1698;
extern T0* ge1154ov15699;
extern T0* ge1154ov15684;
extern T0* ge1154ov15677;
extern T0* ge1154ov15662;
extern T0* ge1154ov15687;
extern T0* ge1154ov15680;
extern T0* ge1154ov15688;
extern T0* ge1154ov15697;
extern T0* ge1154ov15690;
extern T0* ge1154ov15686;
extern T0* ge1154ov15674;
extern T0* ge1154ov15675;
extern T0* ge1154ov15689;
extern T0* ge1154ov15676;
extern T0* ge1154ov15663;
extern T0* ge1154ov15664;
extern T0* ge1154ov15665;
extern T0* ge1154ov15671;
extern T0* ge1154ov15673;
extern T0* ge1154ov15668;
extern T0* ge1154ov15693;
extern T0* ge1154ov15692;
extern T0* ge1154ov15669;
extern T0* ge1154ov15670;
extern T0* ge1154ov15667;
extern T0* ge1154ov15666;
extern T0* ge1150ov15457;
extern T0* ge957ov6602;
extern T0* ge781ov12651;
extern T0* ge781ov12795;
extern T0* ge957ov6611;
extern T0* ge957ov6578;
extern T0* ge957ov6536;
extern T0* ge952ov22592;
extern T0* ge952ov22591;
extern T0* ge952ov22590;
extern T0* ge781ov12769;
extern T0* ge957ov6573;
extern T0* ge957ov6569;
extern T0* ge957ov6597;
extern T0* ge957ov6548;
extern T0* ge957ov6568;
extern T0* ge957ov6603;
extern T0* ge957ov6587;
extern T0* ge957ov6575;
extern T0* ge957ov6612;
extern T0* ge957ov6600;
extern T0* ge781ov12772;
extern T0* ge957ov6585;
extern T0* ge957ov6615;
extern T0* ge957ov6613;
extern T0* ge957ov6617;
extern T0* ge957ov6614;
extern T0* ge957ov6538;
extern T0* ge957ov6537;
extern T0* ge957ov6601;
extern T0* ge957ov6572;
extern T0* ge957ov6580;
extern T0* ge957ov6542;
extern T0* ge957ov6579;
extern T0* ge957ov6592;
extern T0* ge957ov6571;
extern T0* ge957ov6564;
extern T0* ge957ov6563;
extern T0* ge957ov6549;
extern T0* ge957ov6544;
extern T0* ge957ov6543;
extern T0* ge957ov6556;
extern T0* ge957ov6555;
extern T0* ge957ov6554;
extern T0* ge957ov6576;
extern T0* ge957ov6539;
extern T0* ge957ov6586;
extern T0* ge957ov6609;
extern T0* ge957ov6610;
extern T0* ge957ov6570;
extern T0* ge957ov6541;
extern T0* ge957ov6562;
extern T0* ge957ov6545;
extern T0* ge957ov6546;
extern T0* ge957ov6550;
extern T0* ge957ov6551;
extern T0* ge957ov6552;
extern T0* ge957ov6553;
extern T0* ge957ov6557;
extern T0* ge957ov6558;
extern T0* ge957ov6559;
extern T0* ge957ov6560;
extern T0* ge957ov6561;
extern T0* ge957ov6565;
extern T0* ge957ov6566;
extern T0* ge957ov6547;
extern T0* ge957ov6608;
extern T0* ge781ov12659;
extern T0* ge781ov12678;
extern T0* ge781ov12668;
extern T0* ge781ov12662;
extern T0* ge781ov12691;
extern T0* ge781ov12656;
extern T0* ge781ov12791;
extern T0* ge418ov8622;
extern T0* ge955ov22580;
extern T0* ge955ov22574;
extern T0* ge955ov22568;
extern T0* ge955ov22576;
extern T0* ge955ov22570;
extern T0* ge955ov22564;
extern T0* ge955ov22579;
extern T0* ge955ov22573;
extern T0* ge955ov22567;
extern T0* ge955ov22581;
extern T0* ge955ov22575;
extern T0* ge955ov22569;
extern T0* ge781ov12721;
extern T0* ge955ov22578;
extern T0* ge955ov22572;
extern T0* ge955ov22566;
extern T0* ge781ov12759;
extern T0* ge781ov12742;
extern T0* ge781ov12767;
extern T0* ge781ov12737;
extern T0* ge781ov12719;
extern T0* ge956ov23454;
extern T0* ge956ov23212;
extern T0* ge956ov23076;
extern T0* ge956ov23452;
extern T0* ge956ov23210;
extern T0* ge956ov23074;
extern T0* ge956ov23453;
extern T0* ge956ov23211;
extern T0* ge956ov23075;
extern T0* ge781ov12694;
extern T0* ge955ov22577;
extern T0* ge955ov22571;
extern T0* ge955ov22565;
extern T0* ge948ov24758;
extern T0* ge948ov24756;
extern T0* ge948ov24754;
extern T0* ge1078ov4624;
extern T0* ge947ov23507;
extern T0* ge947ov23503;
extern T0* ge947ov23499;
extern T0* ge1001ov17253;
extern T0* ge394ov8431;
extern T0* ge593ov11170;
extern T0* ge593ov11171;
extern T0* ge947ov23508;
extern T0* ge947ov23504;
extern T0* ge947ov23500;
extern T0* ge954ov23516;
extern T0* ge954ov23515;
extern T0* ge956ov23409;
extern T0* ge956ov23183;
extern T0* ge956ov23031;
extern T0* ge956ov23411;
extern T0* ge956ov23033;
extern T0* ge956ov23404;
extern T0* ge956ov23026;
extern T0* ge956ov23407;
extern T0* ge956ov23029;
extern T0* ge956ov23403;
extern T0* ge956ov23025;
extern T0* ge956ov23402;
extern T0* ge956ov23024;
extern T0* ge781ov12785;
extern T0* ge781ov12692;
extern T0* ge781ov12878;
extern T0* ge781ov12879;
extern T0* ge781ov12880;
extern T0* ge781ov12881;
extern T0* ge781ov12882;
extern T0* ge781ov12883;
extern T0* ge781ov12884;
extern T0* ge781ov12885;
extern T0* ge781ov12886;
extern T0* ge781ov12887;
extern T0* ge781ov12888;
extern T0* ge781ov12889;
extern T0* ge781ov12890;
extern T0* ge781ov12891;
extern T0* ge781ov12892;
extern T0* ge781ov12893;
extern T0* ge781ov12894;
extern T0* ge781ov12895;
extern T0* ge781ov12896;
extern T0* ge781ov12897;
extern T0* ge781ov12898;
extern T0* ge781ov12899;
extern T0* ge781ov12900;
extern T0* ge781ov12901;
extern T0* ge781ov12943;
extern T0* ge781ov12944;
extern T0* ge781ov12945;
extern T0* ge781ov12652;
extern T0* ge781ov12653;
extern T0* ge781ov12654;
extern T0* ge781ov12655;
extern T0* ge781ov12657;
extern T0* ge781ov12658;
extern T0* ge781ov12660;
extern T0* ge781ov12661;
extern T0* ge781ov12663;
extern T0* ge781ov12664;
extern T0* ge781ov12665;
extern T0* ge781ov12666;
extern T0* ge781ov12667;
extern T0* ge781ov12669;
extern T0* ge781ov12670;
extern T0* ge781ov12671;
extern T0* ge781ov12672;
extern T0* ge781ov12673;
extern T0* ge781ov12674;
extern T0* ge781ov12675;
extern T0* ge781ov12676;
extern T0* ge781ov12677;
extern T0* ge781ov12679;
extern T0* ge781ov12680;
extern T0* ge781ov12681;
extern T0* ge781ov12682;
extern T0* ge781ov12683;
extern T0* ge781ov12684;
extern T0* ge781ov12685;
extern T0* ge781ov12686;
extern T0* ge781ov12687;
extern T0* ge781ov12688;
extern T0* ge781ov12689;
extern T0* ge781ov12690;
extern T0* ge781ov12693;
extern T0* ge781ov12695;
extern T0* ge781ov12696;
extern T0* ge781ov12701;
extern T0* ge781ov12702;
extern T0* ge781ov12703;
extern T0* ge781ov12704;
extern T0* ge781ov12697;
extern T0* ge781ov12698;
extern T0* ge781ov12699;
extern T0* ge781ov12700;
extern T0* ge781ov12705;
extern T0* ge781ov12706;
extern T0* ge781ov12707;
extern T0* ge781ov12708;
extern T0* ge781ov12709;
extern T0* ge781ov12710;
extern T0* ge781ov12711;
extern T0* ge781ov12712;
extern T0* ge781ov12713;
extern T0* ge781ov12714;
extern T0* ge781ov12715;
extern T0* ge781ov12716;
extern T0* ge781ov12717;
extern T0* ge781ov12718;
extern T0* ge781ov12720;
extern T0* ge781ov12722;
extern T0* ge781ov12723;
extern T0* ge781ov12724;
extern T0* ge781ov12725;
extern T0* ge781ov12726;
extern T0* ge781ov12727;
extern T0* ge781ov12728;
extern T0* ge781ov12729;
extern T0* ge781ov12730;
extern T0* ge781ov12731;
extern T0* ge781ov12732;
extern T0* ge781ov12733;
extern T0* ge781ov12734;
extern T0* ge781ov12735;
extern T0* ge781ov12736;
extern T0* ge781ov12738;
extern T0* ge781ov12739;
extern T0* ge781ov12740;
extern T0* ge781ov12741;
extern T0* ge781ov12743;
extern T0* ge781ov12744;
extern T0* ge781ov12745;
extern T0* ge781ov12746;
extern T0* ge781ov12747;
extern T0* ge781ov12748;
extern T0* ge781ov12749;
extern T0* ge781ov12750;
extern T0* ge781ov12751;
extern T0* ge781ov12752;
extern T0* ge781ov12753;
extern T0* ge781ov12754;
extern T0* ge781ov12755;
extern T0* ge781ov12756;
extern T0* ge781ov12757;
extern T0* ge781ov12758;
extern T0* ge781ov12760;
extern T0* ge781ov12761;
extern T0* ge781ov12762;
extern T0* ge781ov12763;
extern T0* ge781ov12764;
extern T0* ge781ov12765;
extern T0* ge781ov12766;
extern T0* ge781ov12768;
extern T0* ge781ov12770;
extern T0* ge781ov12771;
extern T0* ge781ov12773;
extern T0* ge781ov12774;
extern T0* ge781ov12775;
extern T0* ge781ov12776;
extern T0* ge781ov12777;
extern T0* ge781ov12778;
extern T0* ge781ov12779;
extern T0* ge781ov12781;
extern T0* ge781ov12782;
extern T0* ge781ov12783;
extern T0* ge781ov12784;
extern T0* ge781ov12786;
extern T0* ge781ov12787;
extern T0* ge781ov12788;
extern T0* ge781ov12789;
extern T0* ge781ov12790;
extern T0* ge781ov12792;
extern T0* ge781ov12793;
extern T0* ge781ov12794;
extern T0* ge781ov12796;
extern T0* ge781ov12797;
extern T0* ge781ov12798;
extern T0* ge781ov12799;
extern T0* ge781ov12800;
extern T0* ge781ov12801;
extern T0* ge781ov12802;
extern T0* ge781ov12803;
extern T0* ge781ov12804;
extern T0* ge781ov12805;
extern T0* ge781ov12806;
extern T0* ge781ov12807;
extern T0* ge781ov12808;
extern T0* ge781ov12809;
extern T0* ge781ov12810;
extern T0* ge781ov12811;
extern T0* ge781ov12812;
extern T0* ge781ov12813;
extern T0* ge781ov12814;
extern T0* ge781ov12815;
extern T0* ge781ov12816;
extern T0* ge781ov12817;
extern T0* ge781ov12818;
extern T0* ge781ov12819;
extern T0* ge781ov12821;
extern T0* ge781ov12822;
extern T0* ge781ov12823;
extern T0* ge781ov12824;
extern T0* ge781ov12825;
extern T0* ge781ov12826;
extern T0* ge781ov12827;
extern T0* ge781ov12828;
extern T0* ge781ov12829;
extern T0* ge781ov12830;
extern T0* ge781ov12831;
extern T0* ge781ov12832;
extern T0* ge781ov12833;
extern T0* ge781ov12834;
extern T0* ge781ov12835;
extern T0* ge781ov12836;
extern T0* ge781ov12837;
extern T0* ge781ov12838;
extern T0* ge781ov12839;
extern T0* ge781ov12840;
extern T0* ge781ov12841;
extern T0* ge781ov12842;
extern T0* ge781ov12843;
extern T0* ge781ov12844;
extern T0* ge781ov12845;
extern T0* ge781ov12846;
extern T0* ge781ov12847;
extern T0* ge781ov12848;
extern T0* ge781ov12849;
extern T0* ge781ov12850;
extern T0* ge781ov12851;
extern T0* ge781ov12852;
extern T0* ge781ov12853;
extern T0* ge781ov12854;
extern T0* ge781ov12855;
extern T0* ge781ov12856;
extern T0* ge781ov12857;
extern T0* ge781ov12858;
extern T0* ge781ov12859;
extern T0* ge781ov12860;
extern T0* ge781ov12861;
extern T0* ge781ov12862;
extern T0* ge781ov12863;
extern T0* ge781ov12864;
extern T0* ge781ov12865;
extern T0* ge781ov12866;
extern T0* ge781ov12867;
extern T0* ge781ov12868;
extern T0* ge781ov12869;
extern T0* ge781ov12870;
extern T0* ge781ov12871;
extern T0* ge781ov12872;
extern T0* ge781ov12873;
extern T0* ge781ov12874;
extern T0* ge781ov12875;
extern T0* ge781ov12876;
extern T0* ge294ov10896;
extern T0* ge391ov19357;
extern T0* ge391ov19354;
extern T0* ge968ov14431;
extern T0* ge389ov19221;
extern T0* ge956ov23420;
extern T0* ge956ov23186;
extern T0* ge956ov23042;
extern T0* ge956ov23419;
extern T0* ge956ov23041;
extern T0* ge956ov23451;
extern T0* ge956ov23209;
extern T0* ge956ov23073;
extern T0* ge956ov23450;
extern T0* ge956ov23208;
extern T0* ge956ov23072;
extern T0* ge781ov12820;
extern T0* ge781ov12780;
extern T0* ge956ov23456;
extern T0* ge956ov23214;
extern T0* ge956ov23078;
extern T0* ge956ov23455;
extern T0* ge956ov23213;
extern T0* ge956ov23077;
extern T0* ge1267ov9812;
extern T0* ge1267ov9811;
extern T0* ge1011ov3920;
extern T0* ge1011ov3921;
extern T0* ge1011ov3922;
extern T0* ge1011ov3923;
extern T0* ge1011ov3924;
extern T0* ge1011ov3925;
extern T0* ge1011ov3926;
extern T0* ge1011ov3927;
extern T0* ge1011ov3928;
extern T0* ge1011ov3929;
extern T0* ge1011ov3930;
extern T0* ge1011ov3931;
extern T0* ge1011ov3932;
extern T0* ge1011ov3933;
extern T0* ge1011ov3934;
extern T0* ge1011ov3935;
extern T0* ge1011ov3936;
extern T0* ge1011ov3937;
extern T0* ge1011ov3938;
extern T0* ge1011ov3939;
extern T0* ge1011ov3940;
extern T0* ge1011ov3941;
extern T0* ge1011ov3942;
extern T0* ge1011ov3943;
extern T0* ge1011ov3944;
extern T0* ge1011ov3945;
extern T0* ge1011ov3946;
extern T0* ge1011ov3947;
extern T0* ge1011ov3948;
extern T0* ge1011ov3949;
extern T0* ge1011ov3950;
extern T0* ge1011ov3951;
extern T0* ge1011ov3952;
extern T0* ge1011ov3953;
extern T0* ge1011ov3954;
extern T0* ge1011ov3955;
extern T0* ge1011ov3956;
extern T0* ge1011ov3957;
extern T0* ge1011ov3958;
extern T0* ge1011ov3959;
extern T0* ge1011ov3960;
extern T0* ge1011ov3961;
extern T0* ge1011ov3962;
extern T0* ge1011ov3963;
extern T0* ge1011ov3964;
extern T0* ge1011ov3965;
extern T0* ge1011ov3966;
extern T0* ge1011ov3967;
extern T0* ge1011ov3968;
extern T0* ge1011ov3969;
extern T0* ge1011ov3970;
extern T0* ge1011ov3971;
extern T0* ge1011ov3972;
extern T0* ge1011ov3973;
extern T0* ge1011ov3974;
extern T0* ge1011ov3975;
extern T0* ge1011ov3976;
extern T0* ge1011ov3977;
extern T0* ge1011ov3978;
extern T0* ge1011ov3979;
extern T0* ge1011ov3980;
extern T0* ge1011ov3981;
extern T0* ge1011ov3982;
extern T0* ge1011ov3983;
extern T0* ge1011ov3984;
extern T0* ge1011ov3985;
extern T0* ge1011ov3986;
extern T0* ge1011ov3987;
extern T0* ge1011ov3988;
extern T0* ge1011ov3989;
extern T0* ge1011ov3990;
extern T0* ge1011ov3991;
extern T0* ge1011ov3992;
extern T0* ge1011ov3993;
extern T0* ge1011ov3994;
extern T0* ge1011ov3995;
extern T0* ge1011ov3996;
extern T0* ge1011ov3997;
extern T0* ge1011ov3998;
extern T0* ge1011ov3999;
extern T0* ge1011ov4000;
extern T0* ge1044ov3887;
extern T0* ge1011ov4106;
extern T0* ge1011ov4093;
extern T0* ge1011ov4098;
extern T0* ge1011ov4099;
extern T0* ge1011ov4100;
extern T0* ge1011ov4087;
extern T0* ge1011ov4104;
extern T0* ge1011ov4108;
extern T0* ge1011ov4091;
extern T0* ge1011ov4083;
extern T0* ge1011ov4094;
extern T0* ge1011ov4092;
extern T0* ge1011ov4089;
extern T0* ge1011ov4103;
extern T0* ge1011ov4102;
extern T0* ge1011ov4085;
extern T0* ge1011ov4107;
extern T0* ge1011ov4084;
extern T0* ge1011ov4090;
extern T0* ge1011ov4105;
extern T0* ge1011ov4097;
extern T0* ge1011ov4086;
extern T0* ge1011ov4101;
extern T0* ge1011ov4095;
extern T0* ge1011ov4088;
extern T0* ge1011ov4110;
extern T0* ge1011ov4096;
extern T0* ge1044ov3886;
extern T0* ge1044ov3885;
extern T0* ge1007ov17269;
extern T0* ge1274ov10349;
extern T0* ge1274ov10311;
extern T0* ge1274ov10309;
extern T0* ge1274ov10350;
extern T0* ge1274ov10322;
extern T0* ge1274ov10321;
extern T0* ge1274ov10332;
extern T0* ge1274ov10326;
extern T0* ge1274ov10325;
extern T0* ge1274ov10324;
extern T0* ge1274ov10330;
extern T0* ge1274ov10329;
extern T0* ge1274ov10331;
extern T0* ge1274ov10308;
extern T0* ge1274ov10334;
extern T0* ge1274ov10343;
extern T0* ge1277ov10164;
extern T0* ge1277ov10162;
extern T0* ge1277ov10163;
extern T0* ge1274ov10344;
extern T0* ge1274ov10345;
extern T0* ge1274ov10348;
extern T0* ge1274ov10346;
extern T0* ge1274ov10347;
extern T0* ge1274ov10341;
extern T0* ge1270ov18887;
extern T0* ge1270ov18888;
extern T0* ge1274ov10314;
extern T0* ge1274ov10337;
extern T0* ge1274ov10357;
extern T0* ge1274ov10358;
extern T0* ge1274ov10359;
extern T0* ge1274ov10352;
extern T0* ge1274ov10335;
extern T0* ge1274ov10336;
extern T0* ge1274ov10338;
extern T0* ge1274ov10342;
extern T0* ge71ov3822;
extern T0* ge328ov1572;
extern T0* ge70ov3312;
extern T0* ge73ov9489;
extern T0* ge73ov9495;
extern T0* ge71ov3823;
extern T0* ge71ov3824;
extern T0* ge71ov3825;
extern T0* ge73ov9490;
extern T0* ge73ov9496;
extern T0* ge73ov9491;
extern T0* ge73ov9497;
extern T0* ge73ov9492;
extern T0* ge73ov9498;
extern T0* ge70ov3307;
extern T0* ge70ov3306;
extern T0* ge70ov3314;
extern T0* ge70ov3313;
extern T0* ge1281ov18594;
extern T0* ge1281ov18595;
extern T0* ge1272ov23646;
extern T0* ge1272ov23648;
extern T0* ge956ov23434;
extern T0* ge956ov23194;
extern T0* ge956ov23056;
extern T0* ge956ov23433;
extern T0* ge956ov23055;
extern T0* ge956ov23257;
extern T0* ge956ov23106;
extern T0* ge956ov22879;
extern T0* ge956ov23431;
extern T0* ge956ov23193;
extern T0* ge956ov23053;
extern T0* ge956ov23430;
extern T0* ge956ov23052;
extern T0* ge956ov23256;
extern T0* ge956ov23105;
extern T0* ge956ov22878;
extern T0* ge956ov23224;
extern T0* ge956ov23091;
extern T0* ge956ov22846;
extern T0* ge956ov23223;
extern T0* ge956ov22845;
extern T0* ge956ov23436;
extern T0* ge956ov23196;
extern T0* ge956ov23058;
extern T0* ge956ov23461;
extern T0* ge956ov23217;
extern T0* ge956ov23083;
extern T0* ge956ov23462;
extern T0* ge956ov23084;
extern T0* ge956ov23459;
extern T0* ge956ov23216;
extern T0* ge956ov23081;
extern T0* ge956ov23460;
extern T0* ge956ov23082;
extern T0* ge956ov23352;
extern T0* ge956ov23151;
extern T0* ge956ov22974;
extern T0* ge956ov23465;
extern T0* ge956ov23219;
extern T0* ge956ov23087;
extern T0* ge956ov23466;
extern T0* ge956ov23088;
extern T0* ge956ov23463;
extern T0* ge956ov23218;
extern T0* ge956ov23085;
extern T0* ge956ov23464;
extern T0* ge956ov23086;
extern T0* ge956ov23350;
extern T0* ge956ov23150;
extern T0* ge956ov22972;
extern T0* ge956ov23288;
extern T0* ge956ov23122;
extern T0* ge956ov22910;
extern T0* ge956ov23290;
extern T0* ge956ov22912;
extern T0* ge956ov23286;
extern T0* ge956ov22908;
extern T0* ge956ov23292;
extern T0* ge956ov22914;
extern T0* ge956ov23289;
extern T0* ge956ov22911;
extern T0* ge956ov23287;
extern T0* ge956ov22909;
extern T0* ge956ov23332;
extern T0* ge956ov23133;
extern T0* ge956ov22954;
extern T0* ge956ov23242;
extern T0* ge956ov23099;
extern T0* ge956ov22864;
extern T0* ge956ov23240;
extern T0* ge956ov22862;
extern T0* ge956ov23234;
extern T0* ge956ov23098;
extern T0* ge956ov22856;
extern T0* ge956ov23233;
extern T0* ge956ov23097;
extern T0* ge956ov22855;
extern T0* ge956ov23445;
extern T0* ge956ov23203;
extern T0* ge956ov23067;
extern T0* ge956ov23449;
extern T0* ge956ov23207;
extern T0* ge956ov23071;
extern T0* ge956ov23424;
extern T0* ge956ov23189;
extern T0* ge956ov23046;
extern T0* ge956ov23448;
extern T0* ge956ov23206;
extern T0* ge956ov23070;
extern T0* ge956ov23331;
extern T0* ge956ov23141;
extern T0* ge956ov22953;
extern T0* ge956ov23333;
extern T0* ge956ov22955;
extern T0* ge956ov23439;
extern T0* ge956ov23198;
extern T0* ge956ov23061;
extern T0* ge956ov23426;
extern T0* ge956ov23190;
extern T0* ge956ov23048;
extern T0* ge956ov23427;
extern T0* ge956ov23049;
extern T0* ge956ov23330;
extern T0* ge956ov23140;
extern T0* ge956ov22952;
extern T0* ge956ov23326;
extern T0* ge956ov23139;
extern T0* ge956ov22948;
extern T0* ge956ov23327;
extern T0* ge956ov22949;
extern T0* ge956ov23318;
extern T0* ge956ov23136;
extern T0* ge956ov22940;
extern T0* ge956ov23329;
extern T0* ge956ov22951;
extern T0* ge956ov23328;
extern T0* ge956ov22950;
extern T0* ge956ov23325;
extern T0* ge956ov23138;
extern T0* ge956ov22947;
extern T0* ge956ov23297;
extern T0* ge956ov23126;
extern T0* ge956ov22919;
extern T0* ge956ov23296;
extern T0* ge956ov23125;
extern T0* ge956ov22918;
extern T0* ge956ov23295;
extern T0* ge956ov23124;
extern T0* ge956ov22917;
extern T0* ge956ov23294;
extern T0* ge956ov23123;
extern T0* ge956ov22916;
extern T0* ge956ov23293;
extern T0* ge956ov22915;
extern T0* ge956ov23232;
extern T0* ge956ov23096;
extern T0* ge956ov22854;
extern T0* ge956ov23230;
extern T0* ge956ov23095;
extern T0* ge956ov22852;
extern T0* ge956ov23260;
extern T0* ge956ov23107;
extern T0* ge956ov22882;
extern T0* ge956ov23261;
extern T0* ge956ov22883;
extern T0* ge956ov23244;
extern T0* ge956ov23100;
extern T0* ge956ov22866;
extern T0* ge956ov23243;
extern T0* ge956ov22865;
extern T0* ge956ov23245;
extern T0* ge956ov22867;
extern T0* ge956ov23269;
extern T0* ge956ov23111;
extern T0* ge956ov22891;
extern T0* ge956ov23258;
extern T0* ge956ov22880;
extern T0* ge956ov23259;
extern T0* ge956ov22881;
extern T0* ge956ov23303;
extern T0* ge956ov23127;
extern T0* ge956ov22925;
extern T0* ge956ov23300;
extern T0* ge956ov22922;
extern T0* ge956ov23307;
extern T0* ge956ov23128;
extern T0* ge956ov22929;
extern T0* ge956ov23304;
extern T0* ge956ov22926;
extern T0* ge956ov23301;
extern T0* ge956ov22923;
extern T0* ge956ov23308;
extern T0* ge956ov22930;
extern T0* ge956ov23305;
extern T0* ge956ov22927;
extern T0* ge956ov23302;
extern T0* ge956ov22924;
extern T0* ge956ov23309;
extern T0* ge956ov22931;
extern T0* ge956ov23416;
extern T0* ge956ov23185;
extern T0* ge956ov23038;
extern T0* ge956ov23314;
extern T0* ge956ov23132;
extern T0* ge956ov22936;
extern T0* ge956ov23313;
extern T0* ge956ov22935;
extern T0* ge956ov23299;
extern T0* ge956ov22921;
extern T0* ge956ov23298;
extern T0* ge956ov22920;
extern T0* ge956ov23306;
extern T0* ge956ov22928;
extern T0* ge956ov23312;
extern T0* ge956ov23131;
extern T0* ge956ov22934;
extern T0* ge956ov23311;
extern T0* ge956ov23130;
extern T0* ge956ov22933;
extern T0* ge956ov23310;
extern T0* ge956ov23129;
extern T0* ge956ov22932;
extern T0* ge956ov23394;
extern T0* ge956ov23178;
extern T0* ge956ov23016;
extern T0* ge956ov23392;
extern T0* ge956ov23177;
extern T0* ge956ov23014;
extern T0* ge956ov23247;
extern T0* ge956ov23101;
extern T0* ge956ov22869;
extern T0* ge956ov23360;
extern T0* ge956ov23156;
extern T0* ge956ov22982;
extern T0* ge956ov23246;
extern T0* ge956ov22868;
extern T0* ge956ov23359;
extern T0* ge956ov22981;
extern T0* ge956ov23358;
extern T0* ge956ov23155;
extern T0* ge956ov22980;
extern T0* ge956ov23277;
extern T0* ge956ov23116;
extern T0* ge956ov22899;
extern T0* ge956ov23275;
extern T0* ge956ov23114;
extern T0* ge956ov22897;
extern T0* ge956ov23274;
extern T0* ge956ov22896;
extern T0* ge956ov23281;
extern T0* ge956ov23118;
extern T0* ge956ov22903;
extern T0* ge956ov23280;
extern T0* ge956ov22902;
extern T0* ge956ov23282;
extern T0* ge956ov23119;
extern T0* ge956ov22904;
extern T0* ge956ov23342;
extern T0* ge956ov23145;
extern T0* ge956ov22964;
extern T0* ge956ov23341;
extern T0* ge956ov22963;
extern T0* ge956ov23340;
extern T0* ge956ov22962;
extern T0* ge956ov23339;
extern T0* ge956ov22961;
extern T0* ge956ov23343;
extern T0* ge956ov23146;
extern T0* ge956ov22965;
extern T0* ge956ov23263;
extern T0* ge956ov23108;
extern T0* ge956ov22885;
extern T0* ge956ov23262;
extern T0* ge956ov22884;
extern T0* ge956ov23268;
extern T0* ge956ov22890;
extern T0* ge956ov23265;
extern T0* ge956ov23109;
extern T0* ge956ov22887;
extern T0* ge956ov23266;
extern T0* ge956ov22888;
extern T0* ge956ov23357;
extern T0* ge956ov22979;
extern T0* ge956ov23264;
extern T0* ge956ov22886;
extern T0* ge956ov23278;
extern T0* ge956ov22900;
extern T0* ge956ov23267;
extern T0* ge956ov23110;
extern T0* ge956ov22889;
extern T0* ge956ov23272;
extern T0* ge956ov23112;
extern T0* ge956ov22894;
extern T0* ge956ov23270;
extern T0* ge956ov22892;
extern T0* ge956ov23271;
extern T0* ge956ov22893;
extern T0* ge956ov23365;
extern T0* ge956ov23160;
extern T0* ge956ov22987;
extern T0* ge956ov23361;
extern T0* ge956ov23157;
extern T0* ge956ov22983;
extern T0* ge956ov23363;
extern T0* ge956ov23158;
extern T0* ge956ov22985;
extern T0* ge956ov23273;
extern T0* ge956ov23113;
extern T0* ge956ov22895;
extern T0* ge956ov23279;
extern T0* ge956ov23117;
extern T0* ge956ov22901;
extern T0* ge956ov23354;
extern T0* ge956ov23153;
extern T0* ge956ov22976;
extern T0* ge956ov23337;
extern T0* ge956ov23143;
extern T0* ge956ov22959;
extern T0* ge956ov23364;
extern T0* ge956ov23159;
extern T0* ge956ov22986;
extern T0* ge956ov23276;
extern T0* ge956ov23115;
extern T0* ge956ov22898;
extern T0* ge956ov23283;
extern T0* ge956ov23120;
extern T0* ge956ov22905;
extern T0* ge956ov23355;
extern T0* ge956ov23154;
extern T0* ge956ov22977;
extern T0* ge956ov23353;
extern T0* ge956ov23152;
extern T0* ge956ov22975;
extern T0* ge956ov23338;
extern T0* ge956ov23144;
extern T0* ge956ov22960;
extern T0* ge956ov23356;
extern T0* ge956ov22978;
extern T0* ge956ov23422;
extern T0* ge956ov23188;
extern T0* ge956ov23044;
extern T0* ge956ov23423;
extern T0* ge956ov23045;
extern T0* ge957ov6577;
extern T0* ge957ov6540;
extern T0* ge956ov23226;
extern T0* ge956ov22848;
extern T0* ge956ov23225;
extern T0* ge956ov22847;
extern T0* ge956ov23438;
extern T0* ge956ov23197;
extern T0* ge956ov23060;
extern T0* ge956ov23432;
extern T0* ge956ov23054;
extern T0* ge956ov23437;
extern T0* ge956ov23059;
extern T0* ge956ov23351;
extern T0* ge956ov22973;
extern T0* ge957ov6598;
extern T0* ge956ov23386;
extern T0* ge956ov23174;
extern T0* ge956ov23008;
extern T0* ge956ov23385;
extern T0* ge956ov23173;
extern T0* ge956ov23007;
extern T0* ge956ov23384;
extern T0* ge956ov23172;
extern T0* ge956ov23006;
extern T0* ge956ov23383;
extern T0* ge956ov23171;
extern T0* ge956ov23005;
extern T0* ge956ov23382;
extern T0* ge956ov23170;
extern T0* ge956ov23004;
extern T0* ge956ov23381;
extern T0* ge956ov23169;
extern T0* ge956ov23003;
extern T0* ge956ov23387;
extern T0* ge956ov23175;
extern T0* ge956ov23009;
extern T0* ge956ov23396;
extern T0* ge956ov23179;
extern T0* ge956ov23018;
extern T0* ge956ov23397;
extern T0* ge956ov23180;
extern T0* ge956ov23019;
extern T0* ge956ov23393;
extern T0* ge956ov23015;
extern T0* ge957ov6616;
extern T0* ge957ov6594;
extern T0* ge957ov6596;
extern T0* ge957ov6593;
extern T0* ge957ov6595;
extern T0* ge957ov6581;
extern T0* ge957ov6582;
extern T0* ge957ov6583;
extern T0* ge957ov6584;
extern T0* ge957ov6588;
extern T0* ge957ov6589;
extern T0* ge957ov6590;
extern T0* ge957ov6591;
extern T0* ge956ov23320;
extern T0* ge956ov22942;
extern T0* ge956ov23323;
extern T0* ge956ov23137;
extern T0* ge956ov22945;
extern T0* ge956ov23316;
extern T0* ge956ov23135;
extern T0* ge956ov22938;
extern T0* ge956ov23319;
extern T0* ge956ov22941;
extern T0* ge956ov23254;
extern T0* ge956ov23104;
extern T0* ge956ov22876;
extern T0* ge956ov23249;
extern T0* ge956ov23102;
extern T0* ge956ov22871;
extern T0* ge956ov23252;
extern T0* ge956ov22874;
extern T0* ge956ov23251;
extern T0* ge956ov22873;
extern T0* ge956ov23250;
extern T0* ge956ov23103;
extern T0* ge956ov22872;
extern T0* ge956ov23435;
extern T0* ge956ov23195;
extern T0* ge956ov23057;
extern T0* ge956ov23440;
extern T0* ge956ov23199;
extern T0* ge956ov23062;
extern T0* ge781ov12877;
extern T0* ge956ov23222;
extern T0* ge956ov23090;
extern T0* ge956ov22844;
extern T0* ge956ov23369;
extern T0* ge956ov23163;
extern T0* ge956ov22991;
extern T0* ge956ov23376;
extern T0* ge956ov23167;
extern T0* ge956ov22998;
extern T0* ge956ov23375;
extern T0* ge956ov22997;
extern T0* ge956ov23374;
extern T0* ge956ov23166;
extern T0* ge956ov22996;
extern T0* ge956ov23373;
extern T0* ge956ov22995;
extern T0* ge956ov23372;
extern T0* ge956ov23165;
extern T0* ge956ov22994;
extern T0* ge956ov23371;
extern T0* ge956ov22993;
extern T0* ge956ov23370;
extern T0* ge956ov23164;
extern T0* ge956ov22992;
extern T0* ge956ov23368;
extern T0* ge956ov22990;
extern T0* ge956ov23443;
extern T0* ge956ov23201;
extern T0* ge956ov23065;
extern T0* ge956ov23441;
extern T0* ge956ov23200;
extern T0* ge956ov23063;
extern T0* ge956ov23380;
extern T0* ge956ov23168;
extern T0* ge956ov23002;
extern T0* ge956ov23379;
extern T0* ge956ov23001;
extern T0* ge956ov23399;
extern T0* ge956ov23181;
extern T0* ge956ov23021;
extern T0* ge956ov23401;
extern T0* ge956ov23182;
extern T0* ge956ov23023;
extern T0* ge956ov23391;
extern T0* ge956ov23176;
extern T0* ge956ov23013;
extern T0* ge956ov23378;
extern T0* ge956ov23000;
extern T0* ge956ov23377;
extern T0* ge956ov22999;
extern T0* ge956ov23395;
extern T0* ge956ov23017;
extern T0* ge956ov23390;
extern T0* ge956ov23012;
extern T0* ge956ov23457;
extern T0* ge956ov23215;
extern T0* ge956ov23079;
extern T0* ge956ov23458;
extern T0* ge956ov23080;
extern T0* ge956ov23429;
extern T0* ge956ov23192;
extern T0* ge956ov23051;
extern T0* ge956ov23428;
extern T0* ge956ov23191;
extern T0* ge956ov23050;
extern T0* ge956ov23421;
extern T0* ge956ov23187;
extern T0* ge956ov23043;
extern T0* ge956ov23447;
extern T0* ge956ov23205;
extern T0* ge956ov23069;
extern T0* ge956ov23236;
extern T0* ge956ov22858;
extern T0* ge956ov23335;
extern T0* ge956ov23142;
extern T0* ge956ov22957;
extern T0* ge956ov23446;
extern T0* ge956ov23204;
extern T0* ge956ov23068;
extern T0* ge956ov23235;
extern T0* ge956ov22857;
extern T0* ge956ov23334;
extern T0* ge956ov22956;
extern T0* ge956ov23418;
extern T0* ge956ov23040;
extern T0* ge956ov23417;
extern T0* ge956ov23039;
extern T0* ge956ov23237;
extern T0* ge956ov22859;
extern T0* ge956ov23336;
extern T0* ge956ov22958;
extern T0* ge956ov23414;
extern T0* ge956ov23184;
extern T0* ge956ov23036;
extern T0* ge956ov23415;
extern T0* ge956ov23037;
extern T0* ge956ov23229;
extern T0* ge956ov23094;
extern T0* ge956ov22851;
extern T0* ge956ov23228;
extern T0* ge956ov23093;
extern T0* ge956ov22850;
extern T0* ge956ov23344;
extern T0* ge956ov23147;
extern T0* ge956ov22966;
extern T0* ge956ov23284;
extern T0* ge956ov23121;
extern T0* ge956ov22906;
extern T0* ge956ov23285;
extern T0* ge956ov22907;
extern T0* ge956ov23346;
extern T0* ge956ov23148;
extern T0* ge956ov22968;
extern T0* ge956ov23347;
extern T0* ge956ov22969;
extern T0* ge956ov23345;
extern T0* ge956ov22967;
extern T0* ge956ov23348;
extern T0* ge956ov23149;
extern T0* ge956ov22970;
extern T0* ge956ov23367;
extern T0* ge956ov23162;
extern T0* ge956ov22989;
extern T0* ge956ov23366;
extern T0* ge956ov23161;
extern T0* ge956ov22988;
extern T0* ge956ov23227;
extern T0* ge956ov23092;
extern T0* ge956ov22849;
extern T0* ge957ov6618;
extern T0* ge956ov23322;
extern T0* ge956ov22944;
extern T0* ge956ov23324;
extern T0* ge956ov22946;
extern T0* ge956ov23317;
extern T0* ge956ov22939;
extern T0* ge956ov23315;
extern T0* ge956ov23134;
extern T0* ge956ov22937;
extern T0* ge956ov23321;
extern T0* ge956ov22943;
extern T0* ge956ov23248;
extern T0* ge956ov22870;
extern T0* ge956ov23349;
extern T0* ge956ov22971;
extern T0* ge956ov23425;
extern T0* ge956ov23047;
extern T0* ge956ov23241;
extern T0* ge956ov22863;
extern T0* ge956ov23239;
extern T0* ge956ov22861;
extern T0* ge956ov23238;
extern T0* ge956ov22860;
extern T0* ge956ov23444;
extern T0* ge956ov23202;
extern T0* ge956ov23066;
extern T0* ge957ov6599;
extern T0* ge860ov21787;
extern T0* ge863ov20859;
extern T0* ge839ov20891;
extern T0* ge867ov18195;
extern T0* ge1225ov9522;
extern T0* ge1206ov18450;
extern T0* ge1206ov18449;
extern T0* ge423ov8622;
extern T0* ge319ov8622;
extern T0* ge310ov8622;
extern T0* ge785ov21510;
extern T0* ge781ov12942;
extern T0* ge781ov12923;
extern T0* ge781ov12939;
extern T0* ge781ov12927;
extern T0* ge781ov12928;
extern T0* ge781ov12929;
extern T0* ge781ov12930;
extern T0* ge781ov12924;
extern T0* ge781ov12931;
extern T0* ge781ov12932;
extern T0* ge781ov12933;
extern T0* ge781ov12934;
extern T0* ge781ov12925;
extern T0* ge781ov12940;
extern T0* ge781ov12935;
extern T0* ge781ov12936;
extern T0* ge781ov12937;
extern T0* ge781ov12926;
extern T0* ge781ov12938;
extern T0* ge781ov12941;
extern T0* ge1272ov23645;
extern T0* ge1272ov23647;
extern T0* ge781ov12919;
extern T0* ge781ov12918;
extern T0* ge781ov12906;
extern T0* ge781ov12907;
extern T0* ge781ov12908;
extern T0* ge781ov12909;
extern T0* ge781ov12910;
extern T0* ge781ov12911;
extern T0* ge781ov12912;
extern T0* ge781ov12913;
extern T0* ge781ov12914;
extern T0* ge781ov12915;
extern T0* ge781ov12916;
extern T0* ge781ov12917;
extern T0* ge781ov12921;
extern T0* ge781ov12922;
extern T0* ge781ov12902;
extern T0* ge781ov12903;
extern T0* ge781ov12904;
extern T0* ge781ov12905;
extern T0* ge781ov12920;
extern T0* ge807ov19832;
extern T0* ge807ov19831;
extern T0* ge812ov21603;
extern T0* ge822ov21495;
extern T0* ge1022ov8492;
extern T0* ge1019ov8492;
extern T0* ge1013ov8492;
extern T0* ge1029ov8492;
extern T0* ge1026ov8492;
extern T0* ge1025ov8492;
extern T0* ge1021ov8492;
extern T0* ge1028ov8492;
extern T0* ge1020ov8492;
extern T0* ge1032ov8492;
extern T0* ge1016ov8492;
extern T0* ge1027ov8492;
extern T0* ge1031ov8492;
extern T0* ge1023ov8492;
extern T0* ge1014ov8492;
extern T0* ge236ov8492;
extern T0* ge239ov8492;
extern T0* ge235ov8492;
extern T0* ge417ov23713;
extern T0* ge404ov1678;
extern EIF_TYPE getypes[];
#ifdef __cpluscplus
}
#endif


/*
	description:

		"C functions used to implement class FILE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_FILE_H
#define EIF_FILE_H

#include <time.h>
#include <sys/stat.h>

#ifdef __cplusplus
extern "C" {
#endif

extern void file_mkdir(char* dirname);
extern void file_rename(char* from, char* to);
extern void file_link(char *from, char *to);
extern void file_unlink(char *name);
extern EIF_POINTER file_open(char *name, int how);
extern EIF_POINTER file_dopen(int fd, int how);
extern EIF_POINTER file_reopen(char *name, int how, FILE *old);
extern void file_close(FILE *fp);
extern void file_flush(FILE *fp);
extern EIF_INTEGER file_fd(FILE *f);
extern EIF_CHARACTER file_gc(FILE *f);
extern EIF_INTEGER file_gs(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER file_gss(FILE *f, char *s, EIF_INTEGER bound);
extern EIF_INTEGER file_gw(FILE *f, char *s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_CHARACTER file_lh(FILE *f);
extern EIF_INTEGER eif_file_size(FILE *fp);
extern void file_tnil(FILE *f);
extern EIF_INTEGER file_tell(FILE *f);
extern void file_touch(char *name);
extern void file_utime(char *name, time_t stamp, int how);
extern void file_stat(char *path, struct stat *buf);
extern void file_perm(char *name, char *who, char *what, int flag);
extern void file_chmod(char *path, int mode);
extern void file_chown(char *name, int uid);
extern void file_chgrp(char *name, int gid);
extern void file_tnwl(FILE *f);
extern void file_append(FILE *f, FILE *other, EIF_INTEGER l);
extern void file_ps(FILE *f, char *str, EIF_INTEGER len);
extern void file_pc(FILE *f, char c);
extern void file_go(FILE *f, EIF_INTEGER pos);
extern void file_recede(FILE *f, EIF_INTEGER pos);
extern void file_move(FILE *f, EIF_INTEGER pos);
extern EIF_BOOLEAN file_feof(FILE *fp);
extern EIF_BOOLEAN file_exists(char *name);
extern EIF_BOOLEAN file_path_exists(char *name);
extern EIF_BOOLEAN file_access(char *name, EIF_INTEGER op);
extern EIF_BOOLEAN file_creatable(char *path, EIF_INTEGER length);
extern EIF_INTEGER file_gi(FILE *f);
extern EIF_REAL_32 file_gr(FILE *f);
extern EIF_REAL_64 file_gd(FILE *f);
extern void file_pi(FILE *f, EIF_INTEGER number);
extern void file_pr(FILE *f, EIF_REAL_32 number);
extern void file_pd(FILE *f, EIF_REAL_64 val);
extern EIF_INTEGER stat_size(void);
extern EIF_BOOLEAN file_eaccess(struct stat *buf, int op);
extern EIF_INTEGER file_info(struct stat *buf, int op);
extern EIF_REFERENCE file_owner(int uid);
extern EIF_REFERENCE file_group(int gid);
extern EIF_INTEGER file_gib(FILE* f);
extern EIF_REAL_32 file_grb(FILE* f);
extern EIF_REAL_64 file_gdb(FILE* f);
extern EIF_POINTER file_binary_open(char* name, int how);
extern EIF_POINTER file_binary_dopen(int fd, int how);
extern EIF_POINTER file_binary_reopen(char* name, int how, FILE* old);
extern void file_pib(FILE* f, EIF_INTEGER number);
extern void file_prb(FILE* f, EIF_REAL_32 number);
extern void file_pdb(FILE* f, EIF_REAL_64 val);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class CONSOLE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_CONSOLE_H
#define EIF_CONSOLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_POINTER console_def(EIF_INTEGER file);
extern EIF_BOOLEAN console_eof(FILE* fp);
extern EIF_CHARACTER console_separator(FILE* f);
extern void console_ps(FILE* f, char* str, EIF_INTEGER len);
extern void console_pr(FILE* f, EIF_REAL_32 number);
extern void console_pc(FILE* f, EIF_CHARACTER c);
extern void console_pd(FILE* f, EIF_REAL_64 val);
extern void console_pi(FILE* f, EIF_INTEGER number);
extern void console_tnwl(FILE* f);
extern EIF_CHARACTER console_readchar(FILE* f);
extern EIF_REAL_32 console_readreal(FILE* f);
extern EIF_INTEGER console_readint(FILE* f);
extern EIF_REAL_64 console_readdouble(FILE* f);
extern EIF_INTEGER console_readword(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern EIF_INTEGER console_readline(FILE* f, char* s, EIF_INTEGER bound, EIF_INTEGER start);
extern void console_next_line(FILE* f);
extern EIF_INTEGER console_readstream(FILE* f, char* s, EIF_INTEGER bound);
extern void console_file_close (FILE* f);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXECUTION_ENVIRONMENT"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_MISC_H
#define EIF_MISC_H

#ifdef __cplusplus
extern "C" {
#endif

extern EIF_INTEGER eif_system(char* s);
extern void eif_system_asynchronous(char* cmd);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class EXCEPTIONS"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_EXCEPT_H
#define EIF_EXCEPT_H

#ifdef __cplusplus
extern "C" {
#endif

extern void eraise(char* name, long code);
extern void esdie(int code);
extern EIF_REFERENCE eename(long except);
extern char* eeltag(void);
extern char* eelrout(void);
extern char* eelclass(void);
extern long eelcode(void);
extern EIF_REFERENCE stack_trace_string(void);
extern char* eeotag(void);
extern long eeocode(void);
extern char* eeorout(void);
extern char* eeoclass(void);
extern void eecatch(long code);
extern void eeignore(long code);
extern void eetrace(char b);

#ifdef EIF_WINDOWS
/* Needed to compile some code at AXAR */
extern void set_windows_exception_filter();
#endif

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class DIRECTORY"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef EIF_DIR_H
#define EIF_DIR_H

#ifdef __cplusplus
extern "C" {
#endif

extern void* dir_open (char* dirname);
extern EIF_REFERENCE dir_next (void* dir);
extern void dir_rewind (void* dir);
extern void dir_close (void* dir);
extern EIF_BOOLEAN eif_dir_exists (char* dirname);
extern EIF_BOOLEAN eif_dir_is_readable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_writable (char* dirname);
extern EIF_BOOLEAN eif_dir_is_executable (char* dirname);
extern void eif_dir_delete (char* dirname);
extern EIF_CHARACTER eif_dir_separator(void);
extern EIF_REFERENCE dir_current(void);
extern EIF_INTEGER eif_chdir(char* path);

#ifdef __cplusplus
}
#endif

#endif
/*
	description:

		"C functions used to implement class C_DATE"

	system: "Gobo Eiffel Compiler"
	copyright: "Copyright (c) 2006, Eric Bezault and others"
	license: "MIT License"
	date: "$Date$"
	revision: "$Revision$"
*/

#ifndef GE_TIME_H
#define GE_TIME_H

#if defined _XOPEN_UNIX || defined __USE_XOPEN || defined __USE_BSD
#define HAS_GETTIMEOFDAY
#else
#ifndef WIN32
#define HAS_GETTIMEOFDAY
#endif
#endif

#ifdef HAS_GETTIMEOFDAY
/* OpenBSD does not support 'ftime' unless -lcompat is specified. */
/* Use the recommended XSI (X/Open System Interface) extension instead. */
#include <sys/time.h>
#include <sys/types.h>
#define geftime(p) gettimeofday((struct timeval*)(p),((void*)0))
#define getimebsz sizeof(struct timeval)
#define getimebmillitm(p) ((struct timeval*)(p))->tv_usec
#define getimebtime(p) ((struct timeval*)(p))->tv_sec
#else
#include <sys/timeb.h>
#define geftime(p) ftime((struct timeb*)(p))
#define getimebsz sizeof(struct timeb)
#define getimebmillitm(p) ((struct timeb*)(p))->millitm
#define getimebtime(p) ((struct timeb*)(p))->time
#endif

#endif
#include <string.h>
#include <stdlib.h>
#include <time.h>
