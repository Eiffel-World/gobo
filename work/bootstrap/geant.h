#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmartEiffel The GNU Eiffel Compiler, Eiffel tools and libraries
Release 1.0 (Friday December 6th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
http://SmartEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  include <unistd.h>
#endif
#if !defined(WIN32) && \
       (defined(WINVER) || defined(_WIN32_WINNT) || defined(_WIN32) || \
	defined(__WIN32__) || defined(__TOS_WIN__) || defined(_MSC_VER))
#  define WIN32 1
#endif
#ifdef WIN32
#  include <windows.h>
#else
#  ifndef O_RDONLY
#    include <sys/file.h>
#  endif
#  ifndef O_RDONLY
#    define O_RDONLY 0000
#  endif
#endif

#if defined(_MSC_VER) && (_MSC_VER < 1400) /* MSVC older than v8 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed __int64 int64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "I64d"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c
#  define INT64_C(c) c ## i64
#elif defined(__WATCOMC__) && (__WATCOMC__ <= 1100) /* WATCOM 11 or lower */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "d"
#  define PRId64 "Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__BORLANDC__) && (__BORLANDC__ < 0x600) /* Borland before 6.0 */
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed __int64 int64_t;
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "Ld"
#  define PRId64 "I64Ld"
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## i64
#elif defined(__FreeBSD__) && (__FreeBSD__ < 5) /* FreeBSD before 5.0 */ && !defined (_SYS_INTTYPES_H_)
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed long int int32_t;
typedef signed long long int int64_t;
#elif defined(__CYGWIN__) && defined(__BIT_TYPES_DEFINED__) /* Cygwin defines intxx_t in sys/types.h instead of inttypes.h */
#else
#  include <inttypes.h>
#  if !defined(INT8_MAX) && defined(INT16_MAX)
/* int8_t is not mandatory */
typedef int_least8_t int8_t;
#  endif
#endif

#if !defined(PRId16)
#  define PRId8 "d"
#  define PRId16 "d"
#  define PRId32 "ld"
#  define PRId64 "lld"
#elif !defined(PRId8)
#  define PRId8 "d"
#endif
#if !defined(INT16_C)
#  define INT8_C(c) c
#  define INT16_C(c) c
#  define INT32_C(c) c ## L
#  define INT64_C(c) c ## LL
#elif !defined(INT8_C)
#  define INT8_C(c) c
#endif
#if !defined(INT16_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#  define INT8_MAX (INT8_C(127))
#  define INT16_MIN (-INT16_C(32767)-1)
#  define INT16_MAX (INT16_C(32767))
#  define INT32_MIN (-INT32_C(2147483647)-1)
#  define INT32_MAX (INT32_C(2147483647))
#  define INT64_MIN (-INT64_C(9223372036854775807)-1)
#  define INT64_MAX (INT64_C(9223372036854775807))
#elif !defined(INT8_MIN)
#  define INT8_MIN (-INT8_C(127)-1)
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#  define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#  define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#  define JMP_BUF    sigjmp_buf
#  define SETJMP(x)  sigsetjmp( (x), 1)
#  define LONGJMP    siglongjmp
#else
#  define JMP_BUF    jmp_buf
#  define SETJMP(x)  setjmp( (x) )
#  define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER_8 is #1:
*/
typedef int8_t T1;
#define EIF_INTEGER_8 T1
#define M1 (INT8_C(0))
#define EIF_INTEGER_8_BITS (CHAR_BIT)
#define EIF_MINIMUM_INTEGER_8 (INT8_MIN)
#define EIF_MAXIMUM_INTEGER_8 (INT8_MAX)

/*
  Eiffel type INTEGER_16 is #10:
*/
typedef int16_t T10;
#define EIF_INTEGER_16 T10
#define M10 (INT16_C(0))
#define EIF_INTEGER_16_BITS (CHAR_BIT*sizeof(T10t))
#define EIF_MINIMUM_INTEGER_16 (INT16_MIN) /*-32768*/
#define EIF_MAXIMUM_INTEGER_16 (INT16_MAX) /*+32767*/

/*
  Eiffel type INTEGER or INTEGER_32 is #2:
*/
typedef int32_t T2;
#define EIF_INTEGER T2
#define EIF_INTEGER_32 T2
#define M2 (INT32_C(0))
#define EIF_INTEGER_BITS ((T2)(CHAR_BIT*sizeof(T2)))
#define EIF_INTEGER_32_BITS EIF_INTEGER_BITS
#define EIF_MINIMUM_INTEGER (INT32_MIN)
#define EIF_MAXIMUM_INTEGER (INT32_MAX)

/*
  Eiffel type INTEGER_64 is #11:
*/
typedef int64_t T11;
#define EIF_INTEGER_64 T11
#define M11 (INT64_C(0))
#define EIF_INTEGER_64_BITS (CHAR_BIT*sizeof(T11))
#define EIF_MINIMUM_INTEGER_64 (INT64_MIN)
#define EIF_MAXIMUM_INTEGER_64 (INT64_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((signed char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
#define SE_BOOST 1
#define SE_EXCEPTIONS 1

/*C Header Pass 1 :*/
typedef struct S580 T580;
typedef struct S207 T207;
typedef struct S572 T572;
typedef struct S305 T305;
typedef void*T817;
typedef struct S684 T684;
typedef struct S485 T485;
typedef struct S519 T519;
typedef int T655;
typedef struct S269 T269;
typedef struct S888 T888;
typedef struct S838 T838;
typedef struct S113 T113;
typedef struct S276 T276;
typedef struct S554 T554;
typedef struct S267 T267;
typedef struct S869 T869;
typedef void*T814;
typedef struct S231 T231;
typedef struct S577 T577;
typedef struct S226 T226;
typedef struct S802 T802;
typedef struct S649 T649;
typedef struct S712 T712;
typedef struct S728 T728;
typedef struct S724 T724;
typedef struct S280 T280;
typedef struct S496 T496;
typedef struct S512 T512;
typedef struct S818 T818;
typedef struct S193 T193;
typedef struct S340 T340;
typedef struct S926 T926;
typedef struct S398 T398;
typedef struct S12 T12;
typedef struct S909 T909;
typedef struct S671 T671;
typedef struct S763 T763;
typedef struct S275 T275;
typedef void*T429;
typedef struct S525 T525;
typedef struct S139 T139;
typedef struct S188 T188;
typedef struct S770 T770;
typedef struct S741 T741;
typedef void*T39;
typedef struct S428 T428;
typedef void*T357;
typedef struct S529 T529;
typedef struct S615 T615;
typedef struct S253 T253;
typedef struct S116 T116;
typedef struct S205 T205;
typedef struct S413 T413;
typedef struct S813 T813;
typedef struct S852 T852;
typedef void*T63;
typedef void*T37;
typedef struct S578 T578;
typedef struct S341 T341;
typedef void*T759;
typedef struct S426 T426;
typedef void*T383;
typedef struct S408 T408;
typedef struct S710 T710;
typedef struct S344 T344;
typedef struct S721 T721;
typedef struct S443 T443;
typedef void*T177;
typedef struct S669 T669;
typedef void*T304;
typedef struct S514 T514;
typedef struct S339 T339;
typedef struct S174 T174;
typedef struct S237 T237;
typedef struct S103 T103;
typedef struct S208 T208;
typedef struct S162 T162;
typedef struct S641 T641;
typedef struct S454 T454;
typedef struct S410 T410;
typedef struct S415 T415;
typedef struct S581 T581;
typedef void*T448;
typedef struct S541 T541;
typedef struct S881 T881;
typedef void*T467;
typedef struct S296 T296;
typedef struct S255 T255;
typedef struct S597 T597;
typedef struct S556 T556;
typedef struct S326 T326;
typedef struct S599 T599;
typedef struct S629 T629;
typedef struct S675 T675;
typedef struct S537 T537;
typedef void*T123;
typedef struct S630 T630;
typedef struct S676 T676;
typedef struct S705 T705;
typedef struct S543 T543;
typedef struct S917 T917;
typedef struct S523 T523;
typedef struct S528 T528;
typedef struct S765 T765;
typedef struct S268 T268;
typedef struct S806 T806;
typedef struct S586 T586;
typedef struct S453 T453;
typedef struct S711 T711;
typedef struct S261 T261;
typedef struct S495 T495;
typedef void*T62;
typedef struct S539 T539;
typedef struct S498 T498;
typedef struct S560 T560;
typedef struct S197 T197;
typedef struct S204 T204;
typedef void*T65;
typedef struct S342 T342;
typedef struct S725 T725;
typedef struct S596 T596;
typedef void*T825;
typedef struct S542 T542;
typedef struct S919 T919;
typedef struct S338 T338;
typedef struct S604 T604;
typedef struct S911 T911;
typedef struct S771 T771;
typedef struct S548 T548;
typedef struct S184 T184;
typedef struct S788 T788;
typedef void*T313;
typedef struct S239 T239;
typedef struct S404 T404;
typedef struct S547 T547;
typedef struct S807 T807;
typedef struct S416 T416;
typedef struct S536 T536;
typedef struct S892 T892;
typedef struct S686 T686;
typedef struct S530 T530;
typedef void*T912;
typedef struct S532 T532;
typedef struct S479 T479;
typedef struct S310 T310;
typedef struct S704 T704;
typedef struct S481 T481;
typedef struct S678 T678;
typedef struct S201 T201;
typedef struct S840 T840;
typedef void*T689;
typedef struct S79 T79;
typedef struct S815 T815;
typedef struct S723 T723;
typedef struct S182 T182;
typedef struct S271 T271;
typedef struct S769 T769;
typedef struct S874 T874;
typedef void*T681;
typedef struct S776 T776;
typedef struct S161 T161;
typedef struct S414 T414;
typedef struct S549 T549;
typedef struct S574 T574;
typedef struct S117 T117;
typedef int T164;
typedef struct S257 T257;
typedef struct S468 T468;
typedef struct S407 T407;
typedef struct S650 T650;
typedef struct S886 T886;
typedef struct S7 T7;
typedef struct S894 T894;
typedef struct S782 T782;
typedef void*T768;
typedef struct S683 T683;
typedef struct S534 T534;
typedef struct S348 T348;
typedef struct S336 T336;
typedef struct S254 T254;
typedef void*T515;
typedef struct S550 T550;
typedef struct S696 T696;
typedef struct S682 T682;
typedef struct S850 T850;
typedef struct S867 T867;
typedef void*T701;
typedef struct S755 T755;
typedef struct S23 T23;
typedef void*T900;
typedef struct S333 T333;
typedef struct S219 T219;
typedef struct S368 T368;
typedef struct S740 T740;
typedef void*T699;
typedef struct S552 T552;
typedef struct S644 T644;
typedef struct S133 T133;
typedef struct S805 T805;
typedef struct S198 T198;
typedef struct S195 T195;
typedef struct S393 T393;
typedef struct S464 T464;
typedef struct S627 T627;
typedef struct S870 T870;
typedef struct S795 T795;
typedef struct S281 T281;
typedef struct S409 T409;
typedef void*T695;
typedef void*T455;
typedef struct S611 T611;
typedef struct S558 T558;
typedef struct S544 T544;
typedef struct S804 T804;
typedef struct S535 T535;
typedef struct S729 T729;
typedef struct S144 T144;
typedef struct S893 T893;
typedef struct S663 T663;
typedef struct S183 T183;
typedef struct S412 T412;
typedef void*T50;
typedef struct S158 T158;
typedef struct S551 T551;
typedef struct S647 T647;
typedef void*T739;
typedef struct S520 T520;
typedef struct S127 T127;
typedef void*T503;
typedef struct S284 T284;
typedef struct S251 T251;
typedef struct S518 T518;
typedef struct S32 T32;
typedef void*T792;
typedef void*T337;
typedef struct S54 T54;
typedef struct S105 T105;
typedef struct S270 T270;
typedef struct S546 T546;
typedef void*T582;
typedef struct S531 T531;
typedef struct S165 T165;
typedef void*T163;
typedef struct S575 T575;
typedef struct S915 T915;
typedef struct S521 T521;
typedef struct S263 T263;
typedef struct S392 T392;
typedef struct S584 T584;
typedef void*T708;
typedef struct S194 T194;
typedef struct S411 T411;
typedef struct S40 T40;
typedef struct S793 T793;
typedef struct S159 T159;
typedef struct S829 T829;
typedef struct S200 T200;
typedef struct S620 T620;
typedef struct S185 T185;
typedef void*T178;
typedef struct S774 T774;
typedef struct S122 T122;
typedef struct S691 T691;
typedef struct S872 T872;
typedef struct S70 T70;
typedef struct S385 T385;
typedef struct S588 T588;
typedef struct S742 T742;
typedef struct S758 T758;
typedef void*T354;
typedef void*T703;
typedef struct S351 T351;
typedef struct S199 T199;
typedef struct S797 T797;
typedef struct S380 T380;
typedef struct S540 T540;
typedef struct S140 T140;
typedef struct S576 T576;
typedef struct S449 T449;
typedef struct S538 T538;
typedef struct S579 T579;
typedef struct S527 T527;
typedef struct S800 T800;
typedef struct S472 T472;
typedef struct S648 T648;
typedef struct S557 T557;
typedef struct S862 T862;
typedef struct S822 T822;
typedef void*T314;
typedef struct S764 T764;
typedef struct S43 T43;
typedef struct S808 T808;
typedef struct S545 T545;
typedef struct S209 T209;
typedef struct S778 T778;
typedef struct S31 T31;
typedef struct S399 T399;
typedef struct S803 T803;
typedef struct S203 T203;
typedef struct S240 T240;
typedef struct S196 T196;
typedef void*T295;
typedef void*T694;
typedef struct S202 T202;
typedef struct S388 T388;
typedef struct S30 T30;
typedef struct S29 T29;
typedef struct S390 T390;
typedef struct S779 T779;
typedef struct S439 T439;
typedef struct S206 T206;
typedef struct S524 T524;
typedef void*T563;
typedef struct S378 T378;
typedef struct S522 T522;
typedef struct S553 T553;

/*C Header Pass 2 :*/
typedef T0**T278;
typedef T0**T517;
typedef T0**T406;
typedef T0**T350;
typedef T6*T273;
typedef T0**T346;
typedef T0**T914;
typedef T0**T688;
typedef T0**T680;
typedef T0**T727;
typedef T10*T474;
typedef T0**T646;
typedef T0**T71;
typedef T0**T824;
typedef T0**T312;
typedef T0**T129;
typedef T0**T693;
typedef T0**T259;
typedef T0**T761;
typedef T3*T9;
typedef T1*T470;
typedef T2*T106;
typedef T0**T562;
typedef T0**T265;
typedef T0**T387;

/*C Header Pass 3 :*/
struct S183{T8 _directory_stream;T8 _current_entry;};
int se_cmpT183(T183 o1,T183 o2);
struct S774{T5 _time_memory;};
int se_cmpT774(T774 o1,T774 o2);

/*C Header Pass 4 :*/
struct S580{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T580 M580;
struct S207{T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T207 M207;
struct S572{T0* _container;};
extern T572 M572;
struct S305{T0* _comparator;};
extern T305 M305;
extern T817 M817;
struct S684{T0* _xml_element;T0* _project;T0* _rename_clause;};
extern T684 M684;
struct S485{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T485 M485;
struct S519{Tid id;T2 _exit_code;T0* _project;T0* _executable;T0* _source_filename;};
extern T519 M519;
extern T655 M655;
struct S269{Tid id;T2 _count;T0* _storage;T0* _symbols;};
extern T269 M269;
struct S888{T0* _item;T0* _right;};
extern T888 M888;
struct S838{T2 _position;T0* _container;T0* _next_cursor;};
extern T838 M838;
struct S113{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T113 M113;
struct S554{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T554 M554;
struct S267{T2 _count;T0* _storage;};
extern T267 M267;
struct S869{Tid id;T0* _item;T0* _right;};
extern T869 M869;
extern T814 M814;
struct S231{T6 _yyline_used;T0* _states;T0* _yy_accept;T0* _yy_ec;T6 _yyposition_used;T0* _input_filename;T0* _eiffel_header;T6 _bol_needed;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T0* _yy_nxt;T6 _yybacking_up;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _backing_up_count;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T2 _yynb_rules;T2 _yynull_equiv_class;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T2 _yynb_rows;T2 _minimum_symbol;T2 _yyend_of_buffer;T6 _inspect_used;};
extern T231 M231;
struct S577{Tid id;T2 _exit_code;T0* _project;T2 _code;};
extern T577 M577;
struct S226{T0* _subject;T2 _subject_start;T2 _subject_end;T2 _match_count;T2 _matched_start;T2 _matched_end;T0* _yy_nxt;T0* _yy_accept;T2 _yynb_rows;};
extern T226 M226;
struct S802{Tid id;T0* _system_id;};
extern T802 M802;
struct S649{Tid id;T0* _name;T0* _string_name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;T0* _path;T3 _old_last_character;T6 _old_end_of_file;T6 _push_back_flag;T8 _input_stream;T9 _buffer;T6 _end_reached;T2 _buffer_position;T2 _buffer_size;T2 _capacity;};
extern T649 M649;
struct S276{T2 _item;T0* _right;T0* _left;};
extern T276 M276;
struct S712{T0* _first;T0* _second;};
extern T712 M712;
struct S728{Tid id;T0* _next;T0* _prefixes;T0* _local_parts;};
extern T728 M728;
struct S724{Tid id;};
extern T724 M724;
struct S280{Tid id;T0* _transition;T0* _epsilon_transition;T0* _accepted_rule;T2 _id;T6 _in_trail_context;};
extern T280 M280;
struct S512{T2 _position;T0* _container;T0* _next_cursor;};
extern T512 M512;
struct S818{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _decl_start_sent;T6 _decl_end_sent;};
extern T818 M818;
struct S193{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T193 M193;
struct S340{T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T340 M340;
struct S926{T0* _item;T0* _right;T0* _left;};
extern T926 M926;
struct S12{T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;T6 _debug_mode;T6 _show_target_info;T6 _no_exec;};
extern T12 M12;
struct S909{T2 _position;T0* _container;};
extern T909 M909;
struct S671{Tid id;T0* _next;T6 _has_error;T0* _last_error;};
extern T671 M671;
struct S763{T2 _count;T0* _first_cell;};
extern T763 M763;
struct S275{T278 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T275 M275;
struct S525{Tid id;T2 _exit_code;T0* _project;T6 _verbose;T0* _system_command;T0* _library_command;T6 _validate_command;T0* _xace_filename;T0* _output_filename;T0* _defines;};
extern T525 M525;
struct S139{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T139 M139;
struct S188{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T188 M188;
struct S770{Tid id;T0* _parameters;};
extern T770 M770;
struct S741{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;};
extern T741 M741;
extern T39 M39;
struct S428{Tid id;T0* _target;T0* _label;};
extern T428 M428;
struct S529{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T529 M529;
struct S615{T0* _name;};
extern T615 M615;
struct S253{Tid id;T106 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T253 M253;
struct S116{Tid id;};
extern T116 M116;
struct S205{T0* _xml_element;T0* _project;};
extern T205 M205;
struct S413{Tid id;T0* _parameters;};
extern T413 M413;
struct S813{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T813 M813;
struct S852{Tid id;T3 _item;};
extern T852 M852;
extern T63 M63;
extern T37 M37;
struct S578{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T578 M578;
struct S426{Tid id;T0* _parameters;};
extern T426 M426;
struct S408{Tid id;T1 _item;};
extern T408 M408;
struct S710{T0* _table;};
extern T710 M710;
struct S344{T346 _storage;T2 _capacity;T2 _upper;};
extern T344 M344;
struct S721{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T721 M721;
struct S443{Tid id;T0* _target;T2 _label;};
extern T443 M443;
struct S669{T0* _start;T0* _error;T0* _tree;T0* _last;};
extern T669 M669;
struct S514{T517 _storage;T2 _capacity;T2 _upper;};
extern T514 M514;
struct S174{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T174 M174;
struct S237{T0* _error_file;T0* _warning_file;T0* _info_file;};
extern T237 M237;
struct S103{T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T103 M103;
struct S208{T0* _xml_element;T0* _project;T0* _map;};
extern T208 M208;
struct S641{T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T641 M641;
struct S454{T2 _count;T9 _area;T0* _area_string;};
extern T454 M454;
struct S410{Tid id;T0* _parameters;};
extern T410 M410;
struct S415{Tid id;T0* _parameters;};
extern T415 M415;
struct S581{Tid id;T2 _exit_code;T0* _project;T0* _resource_name;T0* _variable_name;T0* _true_value;T0* _false_value;};
extern T581 M581;
struct S541{Tid id;T2 _exit_code;T0* _project;T0* _message;};
extern T541 M541;
struct S881{T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T881 M881;
struct S296{T0* _comparator;};
extern T296 M296;
struct S255{T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T255 M255;
struct S597{T0* _container;T2 _position;T0* _next_cursor;};
extern T597 M597;
struct S556{T0* _first;T0* _second;};
extern T556 M556;
struct S326{T0* _container;T2 _position;T0* _next_cursor;};
extern T326 M326;
struct S629{T0* _original_name;T0* _new_name;};
extern T629 M629;
struct S675{T0* _xml_element;T0* _project;T0* _geant_inherit;};
extern T675 M675;
struct S537{Tid id;T2 _exit_code;T0* _project;T0* _filename;T0* _fileset;T6 _reuse_variables;T0* _start_target_name;};
extern T537 M537;
extern T123 M123;
struct S630{T2 _position;T0* _container;T0* _next_cursor;};
extern T630 M630;
struct S676{T0* _xml_element;T0* _project;T0* _parent;};
extern T676 M676;
struct S705{Tid id;T0* _next;T0* _document;T0* _last_position_table;T0* _current_open_composite;T0* _current_element;T0* _namespace_cache;T0* _source_parser;};
extern T705 M705;
struct S543{Tid id;T2 _exit_code;T0* _project;T0* _directory;};
extern T543 M543;
struct S917{T0* _item;T0* _right;T0* _left;};
extern T917 M917;
struct S523{Tid id;T2 _exit_code;T0* _project;T0* _name;};
extern T523 M523;
struct S528{Tid id;T2 _exit_code;T0* _project;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T528 M528;
struct S765{T0* _filename;};
extern T765 M765;
struct S268{T265 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T268 M268;
struct S806{Tid id;T0* _name;T0* _items;T3 _type;T3 _repetition;T6 _is_character_data_allowed;};
extern T806 M806;
struct S453{Tid id;T0* _parameters;};
extern T453 M453;
struct S711{T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T711 M711;
struct S261{T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T261 M261;
struct S495{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T495 M495;
extern T62 M62;
struct S599{T0* _name;};
extern T599 M599;
struct S539{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;};
extern T539 M539;
struct S498{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T498 M498;
struct S398{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;T6 _negated;T6 _sort_needed;};
extern T398 M398;
struct S560{T562 _storage;T2 _capacity;T2 _upper;};
extern T560 M560;
struct S197{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T197 M197;
struct S204{T0* _project;T0* _dir_name;T0* _directory_name;T0* _include_wc_string;T0* _exclude_wc_string;T6 _convert_to_filesystem;T0* _map;T6 _force;T6 _concat;T0* _filename_directory_name;T0* _mapped_filename_directory_name;T0* _filename_variable_name;T0* _mapped_filename_variable_name;T0* _include_wildcard;T0* _exclude_wildcard;T0* _filenames;T0* _single_includes;T0* _single_excludes;};
extern T204 M204;
extern T65 M65;
struct S342{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T342 M342;
struct S725{T727 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T725 M725;
struct S596{T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T596 M596;
struct S542{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T542 M542;
struct S919{Tid id;T0* _parent;T0* _data;};
extern T919 M919;
struct S339{Tid id;T0* _states;T6 _in_trail_context;};
extern T339 M339;
struct S338{T0* _text;};
extern T338 M338;
struct S604{T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T604 M604;
struct S911{T914 _storage;T2 _capacity;T2 _upper;};
extern T911 M911;
struct S771{Tid id;T0* _parameters;};
extern T771 M771;
struct S548{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T548 M548;
struct S184{Tid id;T183 _basic_directory;};
extern T184 M184;
struct S788{T0* _path;T2 _old_last_byte;T6 _old_end_of_file;T9 _buffer;T6 _end_reached;T2 _buffer_position;T2 _buffer_size;T2 _capacity;T8 _input_stream;T0* _name;T0* _string_name;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T788 M788;
struct S239{T2 _array_size;T6 _case_insensitive;T2 _characters_count;T6 _equiv_classes_used;T6 _meta_equiv_classes_used;T6 _full_table;T6 _actions_separated;T6 _inspect_used;T6 _reject_used;T6 _line_used;T6 _position_used;T6 _pre_action_used;T6 _post_action_used;T6 _pre_eof_action_used;T6 _post_eof_action_used;T0* _input_filename;T0* _start_conditions;T0* _rules;T0* _eof_rules;T0* _equiv_classes;T6 _bol_needed;T6 _variable_trail_context;T0* _eiffel_code;T0* _eiffel_header;};
extern T239 M239;
struct S404{T406 _storage;T2 _capacity;T2 _upper;};
extern T404 M404;
struct S547{T0* _project;T0* _directory_name;T0* _include_wc_string;T0* _exclude_wc_string;T6 _convert_to_filesystem;T6 _concat;T0* _directory_name_variable_name;T0* _include_wildcard;T0* _exclude_wildcard;T0* _directory_names;T0* _single_includes;T0* _single_excludes;};
extern T547 M547;
struct S807{Tid id;T0* _first;T2 _count;T0* _second;T0* _tail;};
extern T807 M807;
struct S416{T2 _position;T0* _container;T0* _next_cursor;};
extern T416 M416;
struct S536{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T536 M536;
struct S892{T2 _count;T0* _first_cell;};
extern T892 M892;
struct S686{T688 _storage;T2 _capacity;T2 _upper;};
extern T686 M686;
struct S530{Tid id;T2 _exit_code;T0* _project;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _tokens_filename;T0* _output_filename;T0* _input_filename;};
extern T530 M530;
struct S532{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;T0* _to_directory;T0* _fileset;T6 _force;};
extern T532 M532;
struct S479{Tid id;T0* _container;};
extern T479 M479;
struct S310{T312 _storage;T2 _capacity;T2 _upper;};
extern T310 M310;
struct S704{Tid id;T0* _parent;T0* _content;};
extern T704 M704;
struct S481{Tid id;T0* _name;};
extern T481 M481;
struct S678{T680 _storage;T2 _capacity;T2 _upper;};
extern T678 M678;
struct S201{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T201 M201;
struct S840{T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T840 M840;
struct S79{T2 _position;T0* _container;T0* _next_cursor;};
extern T79 M79;
struct S815{T3 _item;T0* _right;};
extern T815 M815;
struct S723{Tid id;T0* _next;T0* _context;T0* _element_prefix;T0* _element_local_part;T0* _attributes_prefix;T0* _attributes_local_part;T0* _attributes_value;};
extern T723 M723;
struct S182{Tid id;T11 _item;};
extern T182 M182;
struct S271{T273 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T271 M271;
struct S769{T2 _code;};
extern T769 M769;
struct S874{T0* _context;};
extern T874 M874;
struct S776{T2 _item;};
extern T776 M776;
struct S161{Tid id;};
extern T161 M161;
struct S414{Tid id;T0* _parameters;};
extern T414 M414;
struct S549{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;T6 _force;};
extern T549 M549;
struct S574{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T574 M574;
struct S117{T71 _storage;T2 _capacity;T2 _upper;};
extern T117 M117;
extern T164 M164;
struct S257{T259 _storage;T2 _capacity;T2 _upper;};
extern T257 M257;
struct S341{T2 _id;T0* _name;T0* _patterns;T0* _bol_patterns;T6 _is_exclusive;};
extern T341 M341;
struct S468{Tid id;T470 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T468 M468;
struct S407{Tid id;T2 _item;};
extern T407 M407;
struct S650{T0* _path;T6 _end_of_input;T6 _push_back_flag;T8 _input_stream;T9 _buffer;T6 _end_reached;T2 _buffer_position;T2 _buffer_size;T2 _capacity;};
extern T650 M650;
struct S886{T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T886 M886;
struct S894{T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T894 M894;
struct S782{T0* _name;T0* _string_name;T0* _path;T9 _buffer;T2 _buffer_position;T2 _capacity;T8 _output_stream;};
extern T782 M782;
struct S683{T0* _xml_element;T0* _project;T0* _redefine_clause;};
extern T683 M683;
struct S534{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T534 M534;
struct S348{T350 _storage;T2 _capacity;T2 _upper;};
extern T348 M348;
struct S336{T2 _item;T0* _right;};
extern T336 M336;
struct S254{T2 _id;T0* _action;T0* _pattern;T2 _line_nb;T2 _trail_count;T2 _head_count;T2 _line_count;T2 _column_count;T6 _is_useful;T6 _has_trail_context;};
extern T254 M254;
struct S550{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T550 M550;
struct S696{T0* _name;T0* _last_entry;T6 _end_of_input;T0* _string_name;T0* _entry_buffer;T183 _basic_directory;};
extern T696 M696;
struct S682{T0* _xml_element;T0* _project;T0* _select_clause;};
extern T682 M682;
struct S850{T6 _before;T0* _container;};
extern T850 M850;
struct S867{T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T867 M867;
struct S755{T2 _position;T0* _container;T0* _next_cursor;};
extern T755 M755;
struct S333{T0* _container;T2 _position;T0* _next_cursor;};
extern T333 M333;
struct S219{T0* _item;T0* _right;};
extern T219 M219;
struct S368{Tid id;T2 _position;T0* _container;};
extern T368 M368;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S552{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T552 M552;
struct S644{T646 _storage;T2 _capacity;T2 _upper;};
extern T644 M644;
struct S133{T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;};
extern T133 M133;
struct S805{Tid id;T0* _equality_tester;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T805 M805;
struct S198{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize_mode;T6 _fish;T0* _clean;};
extern T198 M198;
struct S195{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T195 M195;
struct S393{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T393 M393;
struct S496{T0* _filename;T0* _mapped_filename;};
extern T496 M496;
struct S464{T0* _container;T2 _position;T0* _next_cursor;};
extern T464 M464;
struct S627{T2 _position;T0* _container;T0* _next_cursor;};
extern T627 M627;
struct S870{Tid id;T0* _item;T0* _right;T0* _left;};
extern T870 M870;
struct S795{T0* _item;T0* _right;};
extern T795 M795;
struct S281{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T281 M281;
struct S409{Tid id;T0* _parameters;};
extern T409 M409;
extern T455 M455;
struct S611{T2 _position;T0* _container;T0* _next_cursor;};
extern T611 M611;
struct S558{T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T558 M558;
struct S544{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T544 M544;
struct S804{Tid id;T0* _name;T3 _type;T3 _value;T0* _default_value;T6 _is_list_type;};
extern T804 M804;
struct S535{Tid id;T2 _exit_code;T0* _project;T0* _config_filename;T0* _compile;T0* _class_regexp;T0* _feature_regexp;T0* _defines;};
extern T535 M535;
struct S729{T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T0* _entity_resolver;T0* _callbacks;T2 _string_mode;T0* _dtd_resolver;T0* _dtd_callbacks;T0* _last_error_description;T6 _stand_alone;T0* _entities;T0* _pe_entities;T6 _in_external_dtd;T0* _scanner;T0* _scanners;T2 _last_token;T0* _last_value;};
extern T729 M729;
struct S144{T0* _element;T0* _character_data;T0* _processing_instruction;T0* _document;T0* _comment;T0* _attribute;T0* _composite;};
extern T144 M144;
struct S893{T2 _count;T0* _first_cell;T0* _last_cell;};
extern T893 M893;
struct S663{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _root_element;};
extern T663 M663;
extern T183 M183;
struct S412{Tid id;T0* _parameters;};
extern T412 M412;
extern T50 M50;
struct S158{T0* _item;T0* _right;};
extern T158 M158;
struct S551{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;};
extern T551 M551;
struct S647{T0* _xml_element;T0* _project;};
extern T647 M647;
extern T739 M739;
struct S520{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T520 M520;
struct S127{T129 _storage;T2 _capacity;T2 _upper;};
extern T127 M127;
struct S284{Tid id;T0* _target;};
extern T284 M284;
struct S251{Tid id;T2 _id;T0* _states;T0* _accepted_rules;T0* _accepted_head_rules;T0* _transitions;T2 _code;};
extern T251 M251;
struct S518{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T518 M518;
struct S32{T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _options;T0* _targets;T0* _selected_targets;T6 _build_successful;T0* _inherit_clause;T6 _old_inherit;T0* _default_target_name;T0* _output_file;T0* _current_target;};
extern T32 M32;
extern T792 M792;
struct S54{Tid id;T9 _storage;T2 _count;T2 _capacity;T2 _byte_count;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T54 M54;
struct S105{Tid id;T106 _storage;T2 _capacity;T2 _upper;};
extern T105 M105;
struct S270{Tid id;T2 _count;T0* _storage;};
extern T270 M270;
struct S546{Tid id;T2 _exit_code;T0* _project;T0* _directory;T0* _file;T0* _fileset;T0* _directoryset;};
extern T546 M546;
struct S531{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T531 M531;
struct S165{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T165 M165;
extern T163 M163;
struct S575{Tid id;T2 _exit_code;T0* _project;T0* _source_filename;T0* _target_filename;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;T0* _fileset;};
extern T575 M575;
struct S915{Tid id;T0* _target;T0* _data;};
extern T915 M915;
struct S521{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T521 M521;
struct S263{T265 _storage;T2 _capacity;T2 _upper;};
extern T263 M263;
struct S392{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T392 M392;
struct S584{Tid id;T2 _buffer_position;T9 _buffer;T2 _capacity;T0* _name;};
extern T584 M584;
extern T708 M708;
struct S194{Tid id;T2 _exit_code;T0* _project;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T194 M194;
struct S740{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T0* _resolver;T6 _is_external;T0* _value;T6 _in_use;};
extern T740 M740;
struct S411{Tid id;T0* _parameters;};
extern T411 M411;
struct S40{Tid id;T0* _name;};
extern T40 M40;
struct S793{T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T793 M793;
struct S159{Tid id;T0* _parent;T0* _name;T0* _namespace;T0* _value;};
extern T159 M159;
struct S829{Tid id;};
extern T829 M829;
struct S200{Tid id;T2 _exit_code;T0* _project;T0* _esd_filename;T0* _clean;T6 _recursive_clean;T0* _tuned_system;T0* _tuning_level;};
extern T200 M200;
struct S620{T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T620 M620;
struct S185{Tid id;T183 _basic_directory;};
extern T185 M185;
struct S23{T0* _xml_element;T0* _project;T0* _name;T0* _description;T0* _exports;T0* _precursor_target;T0* _redefining_target;T6 _is_executed;};
extern T23 M23;
extern T774 M774;
struct S122{Tid id;T9 _storage;T2 _count;T2 _capacity;T2 _byte_count;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T122 M122;
struct S691{T693 _storage;T2 _capacity;T2 _upper;};
extern T691 M691;
struct S872{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _input_stream;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T0* _resolver;T6 _is_external;T0* _value;T6 _in_use;T6 _pre_sent;T6 _post_sent;};
extern T872 M872;
struct S70{T71 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T70 M70;
struct S385{T387 _storage;T2 _capacity;T2 _upper;};
extern T385 M385;
struct S588{T0* _project;T0* _parents;};
extern T588 M588;
struct S742{T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T742 M742;
struct S758{T761 _storage;T2 _capacity;T2 _upper;};
extern T758 M758;
struct S351{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T351 M351;
struct S199{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T199 M199;
struct S797{Tid id;T0* _last_string;T6 _is_utf16;T6 _is_msb_first;T6 _is_detected;T0* _utf_queue;T0* _impl;};
extern T797 M797;
struct S380{T259 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T380 M380;
struct S540{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T540 M540;
struct S140{Tid id;T0* _parent;T0* _name;T0* _namespace;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T140 M140;
struct S576{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T576 M576;
struct S449{T0* _comparator;};
extern T449 M449;
struct S538{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T538 M538;
struct S579{Tid id;T2 _exit_code;T0* _project;T0* _parent;};
extern T579 M579;
struct S586{T0* _project;T0* _parent_project;T0* _renames;T0* _redefines;T0* _selects;T0* _unchanged_targets;T0* _renamed_targets;T0* _redefined_targets;};
extern T586 M586;
struct S527{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T527 M527;
struct S800{T2 _count;T0* _first_cell;T0* _last_cell;};
extern T800 M800;
struct S472{Tid id;T474 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T472 M472;
struct S648{T0* _last_project_element;T0* _build_filename;T0* _xml_parser;T0* _tree_pipe;T0* _variables;T0* _options;};
extern T648 M648;
struct S557{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;T2 _processor;T0* _format;T0* _indent;T0* _extdirs;T0* _classpath;};
extern T557 M557;
struct S862{T0* _item;T0* _right;T0* _left;};
extern T862 M862;
struct S822{Tid id;T824 _storage;T2 _capacity;T2 _upper;};
extern T822 M822;
struct S764{T2 _count;T0* _first_cell;};
extern T764 M764;
struct S43{T183 _basic_directory;};
extern T43 M43;
struct S808{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T808 M808;
struct S545{T0* _xml_element;T0* _project;T0* _directoryset;};
extern T545 M545;
struct S209{T0* _project;T0* _type;T0* _source_pattern;T0* _target_pattern;T0* _map;};
extern T209 M209;
struct S778{T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T778 M778;
struct S31{T0* _build_filename;T0* _project_element;};
extern T31 M31;
struct S162{T0* _ns_prefix;T0* _uri;};
extern T162 M162;
struct S399{T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T399 M399;
struct S803{Tid id;T0* _equality_tester;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T803 M803;
struct S203{Tid id;T2 _exit_code;T0* _project;T0* _command_line;T6 _accept_errors;T0* _fileset;};
extern T203 M203;
struct S240{T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _description;T0* _error_handler;T2 _line_nb;T2 _rule_line_nb;T0* _last_value;T0* _character_classes;T0* _name_definitions;T0* _last_string;T0* _pending_rules;T0* _start_condition_stack;T0* _action_factory;T0* _rule;T6 _in_trail_context;T6 _has_trail_context;T2 _head_line;T2 _head_column;T2 _head_count;T2 _trail_count;};
extern T240 M240;
struct S196{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize_mode;T6 _finish_freezing;T0* _clean;};
extern T196 M196;
struct S202{T0* _xml_element;T0* _project;T0* _fileset;};
extern T202 M202;
struct S388{Tid id;T0* _parameters;};
extern T388 M388;
struct S30{T6 _verbose;T6 _debug_mode;T6 _no_exec;};
extern T30 M30;
struct S29{T0* _variables;};
extern T29 M29;
struct S390{T0* _program_name;};
extern T390 M390;
struct S779{T0* _command;T2 _exit_code;T6 _is_system_code;T0* _string_command;};
extern T779 M779;
struct S439{T0* _container;T2 _position;T0* _next_cursor;};
extern T439 M439;
struct S206{T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T206 M206;
struct S524{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T524 M524;
struct S378{T0* _container;};
extern T378 M378;
struct S522{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T522 M522;
struct S553{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T553 M553;
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/

/*
  This file (SmartEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifndef SE_BOOST
    /* To keep track of dump stack to unwind it safely
       before the LONGJMP :
    */
    struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_fstat.h) is automatically
  included when some external "SmartEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_mtime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_directory.h) is automatically
  included when some external "SmartEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#  include <dirent.h>
#endif
#ifndef WIN32
#  include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmartEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_fread(b, n, f) (fread((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define basic_io_fwrite(b, n, f) (fwrite((void *)(b),(size_t)(1), (size_t)(n),(FILE*)(f)))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))

#if defined __USE_POSIX || defined __unix__ || defined _POSIX_C_SOURCE
#  define basic_io_read_stdin(b, s) (read(STDIN_FILENO, b, s))
#else
  extern int basic_io_read_stdin(char *buffer, int size);
#endif

/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_time.h) is automatically
  included when some external "SmartEiffel" basic_time_* feature is
  used (i.e. in live code).
*/
#include <time.h>

#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, EIF_INTEGER mon,
			     EIF_INTEGER mday, EIF_INTEGER hour,
			     EIF_INTEGER min,  EIF_INTEGER sec);
void basic_time_add_second(EIF_DOUBLE *t, int s);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_system.h) is automatically
  included when some external "SmartEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/basic_putenv.h) is automatically
  included when the basic_putenv feature is used (ie. in live code).
*/

void basic_putenv(EIF_POINTER variable, EIF_POINTER value);
/*POINTER*/
T6 r8is_null(T8 C);
/*BOOLEAN*/
T0* r6out(T6 C);
/*BOOLEAN*/
T6 r6_ix_and(T6 C,T6 a1);
/*BOOLEAN*/
T6 r6_ix_xor(T6 C,T6 a1);
/*BOOLEAN*/
T0* r6to_string(T6 C);
/*BOOLEAN*/
void r6out_in_tagged_out_memory(T6 C);
/*BOOLEAN*/
T6 r6_px_not(T6 C);
/*BOOLEAN*/
T6 r6_ix_or(T6 C,T6 a1);
extern T0*oBC22tagged_out_memory;
/*CHARACTER*/
T6 r3is_digit(T3 C);
/*CHARACTER*/
T6 r3is_separator(T3 C);
/*CHARACTER*/
T6 r3_ix_6061(T3 C,T3 a1);
/*CHARACTER*/
T1 r3value(T3 C);
/*CHARACTER*/
T1 r3decimal_value(T3 C);
/*CHARACTER*/
T6 r3_ix_6261(T3 C,T3 a1);
/*CHARACTER*/
T6 r3_ix_60(T3 C,T3 a1);
/*CHARACTER*/
T6 r3_ix_62(T3 C,T3 a1);
/*INTEGER*/
T0* r2out(T2 C);
/*INTEGER*/
T2 r2max(T2 C,T2 a1);
/*INTEGER*/
T2 r2min(T2 C,T2 a1);
/*INTEGER*/
T2 r2hash_code(T2 C);
/*INTEGER*/
void r2append_in(T2 C,T0* a1);
/*INTEGER_64*/
T3 r11digit(T11 C);
/*NATIVE_ARRAY[DS_BILINKABLE[INTEGER]]*/
void r278set_all_with(T278 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[GEANT_FILESET_ENTRY]*/
T517 r517realloc(T517 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_FILESET_ENTRY]*/
void r517clear(T517 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_FILESET_ENTRY]*/
void r517copy_from(T517 C,T517 a1,T2 a2);
/*NATIVE_ARRAY[LX_SYMBOL_CLASS]*/
T406 r406realloc(T406 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_SYMBOL_CLASS]*/
void r406clear(T406 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_SYMBOL_CLASS]*/
void r406copy_from(T406 C,T406 a1,T2 a2);
/*NATIVE_ARRAY[LX_START_CONDITION]*/
void r350clear(T350 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[BOOLEAN]*/
void r273set_all_with(T273 C,T6 a1,T2 a2);
/*NATIVE_ARRAY[LX_NFA]*/
T346 r346realloc(T346 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_NFA]*/
void r346clear(T346 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_NFA]*/
void r346copy_from(T346 C,T346 a1,T2 a2);
/*NATIVE_ARRAY[XM_NAMESPACE]*/
T914 r914realloc(T914 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_NAMESPACE]*/
void r914clear(T914 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_NAMESPACE]*/
void r914copy_from(T914 C,T914 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_SELECT]*/
T688 r688realloc(T688 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_SELECT]*/
void r688clear(T688 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_SELECT]*/
void r688copy_from(T688 C,T688 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_PARENT]*/
T680 r680realloc(T680 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_PARENT]*/
void r680clear(T680 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_PARENT]*/
void r680copy_from(T680 C,T680 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_16]*/
void r474set_all_with(T474 C,T10 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_RENAME]*/
T646 r646realloc(T646 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_RENAME]*/
void r646clear(T646 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_RENAME]*/
void r646copy_from(T646 C,T646 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
T71 r71realloc(T71 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
void r71move(T71 C,T2 a1,T2 a2,T2 a3);
/*NATIVE_ARRAY[STRING]*/
void r71set_all_with(T71 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
void r71clear(T71 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[STRING]*/
void r71copy_from(T71 C,T71 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r824clear_all(T824 C,T2 a1);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
T824 r824realloc(T824 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
T6 r824fast_memcmp(T824 C,T824 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r824clear(T824 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r824copy_from(T824 C,T824 a1,T2 a2);
/*NATIVE_ARRAY[LX_NFA_STATE]*/
T312 r312realloc(T312 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_NFA_STATE]*/
void r312clear(T312 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_NFA_STATE]*/
void r312copy_from(T312 C,T312 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_TARGET]*/
T129 r129realloc(T129 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_TARGET]*/
void r129clear(T129 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_TARGET]*/
void r129copy_from(T129 C,T129 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_REDEFINE]*/
T693 r693realloc(T693 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_REDEFINE]*/
void r693clear(T693 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[GEANT_REDEFINE]*/
void r693copy_from(T693 C,T693 a1,T2 a2);
/*NATIVE_ARRAY[LX_RULE]*/
T259 r259realloc(T259 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_RULE]*/
void r259set_all_with(T259 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[LX_RULE]*/
void r259clear(T259 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_RULE]*/
void r259copy_from(T259 C,T259 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
T761 r761realloc(T761 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
void r761clear(T761 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
void r761copy_from(T761 C,T761 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
/*NATIVE_ARRAY[CHARACTER]*/
T9 r9realloc(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9set_all_with(T9 C,T3 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
/*NATIVE_ARRAY[CHARACTER]*/
void r9clear(T9 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[CHARACTER]*/
void r9copy_from(T9 C,T9 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER_8]*/
void r470set_all_with(T470 C,T1 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
void r106clear_all(T106 C,T2 a1);
/*NATIVE_ARRAY[INTEGER]*/
T106 r106realloc(T106 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
T6 r106fast_memcmp(T106 C,T106 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
void r106set_all_with(T106 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
void r106clear(T106 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[INTEGER]*/
void r106copy_from(T106 C,T106 a1,T2 a2);
/*NATIVE_ARRAY[DS_PAIR[STRING,STRING]]*/
T562 r562realloc(T562 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_PAIR[STRING,STRING]]*/
void r562clear(T562 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[DS_PAIR[STRING,STRING]]*/
void r562copy_from(T562 C,T562 a1,T2 a2);
/*NATIVE_ARRAY[LX_DFA_STATE]*/
T265 r265realloc(T265 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_DFA_STATE]*/
void r265set_all_with(T265 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[LX_DFA_STATE]*/
void r265clear(T265 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[LX_DFA_STATE]*/
void r265copy_from(T265 C,T265 a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
T387 r387realloc(T387 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
void r387set_all_with(T387 C,T0* a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
void r387clear(T387 C,T2 a1,T2 a2);
/*NATIVE_ARRAY[ANY]*/
void r387copy_from(T387 C,T387 a1,T2 a2);
/*STRING*/
T0* r7out(T7* C);
/*STRING*/
void r7copy(T7* C,T0* a1);
/*STRING*/
T0* r7substring(T7* C,T2 a1,T2 a2);
/*STRING*/
void r7keep_tail(T7* C,T2 a1);
/*STRING*/
void r7remove_first(T7* C,T2 a1);
/*STRING*/
T2 r7item_code(T7* C,T2 a1);
/*STRING*/
void r7remove_between(T7* C,T2 a1,T2 a2);
/*STRING*/
T6 r7is_equal(T7* C,T0* a1);
/*STRING*/
T3 r7item(T7* C,T2 a1);
/*STRING*/
T6 r7valid_index(T7* C,T2 a1);
/*STRING*/
void r7append(T7* C,T0* a1);
/*STRING*/
T6 r7se_assigned_from(T0* a1);
/*STRING*/
void r7make_from_string(T7* C,T0* a1);
/*STRING*/
T2 r7index_of(T7* C,T3 a1,T2 a2);
/*STRING*/
void r7out_in_tagged_out_memory(T7* C);
/*STRING*/
T6 r7same_type(T7* C,T0* a1);
/*STRING*/
void r7remove_tail(T7* C,T2 a1);
/*STRING*/
void r7make(T7* C,T2 a1);
/*STRING*/
void r7append_string(T7* C,T0* a1);
/*STRING*/
void r7make_filled(T7* C,T3 a1,T2 a2);
/*STRING*/
void r7remove(T7* C,T2 a1);
/*STRING*/
T0* r7string(T7* C);
/*STRING*/
void r7extend(T7* C,T3 a1);
/*STRING*/
T2 r7hash_code(T7* C);
/*STRING*/
void r7remove_last(T7* C,T2 a1);
/*STRING*/
T6 r7conforms_to(T7* C,T0* a1);
/*STRING*/
void r7keep_head(T7* C,T2 a1);
/*STRING*/
T2 r7to_integer(T7* C);
/*STRING*/
void r7append_character(T7* C,T3 a1);
/*STRING*/
void r7resize(T7* C,T2 a1);
/*STRING*/
T2 r7substring_index(T7* C,T0* a1,T2 a2);
/*STRING*/
void r7from_external_copy(T7* C,T8 a1);
/*STRING*/
T8 r7to_external(T7* C);
/*STRING*/
T0* r7twin(T7* C);
/*STRING*/
T0* r7_ix_43(T7* C,T0* a1);
/*STRING*/
void r7swap(T7* C,T2 a1,T2 a2);
/*ARRAY[DS_BILINKABLE[INTEGER]]*/
T2 r275count(T275* C);
/*ARRAY[DS_BILINKABLE[INTEGER]]*/
T0* r275item(T275* C,T2 a1);
/*ARRAY[DS_BILINKABLE[INTEGER]]*/
T6 r275valid_index(T275* C,T2 a1);
/*ARRAY[DS_BILINKABLE[INTEGER]]*/
void r275make(T275* C,T2 a1,T2 a2);
/*ARRAY[INTEGER]*/
void r253clear_all(T253* C);
/*ARRAY[INTEGER]*/
T2 r253count(T253* C);
/*ARRAY[INTEGER]*/
T2 r253item(T253* C,T2 a1);
/*ARRAY[INTEGER]*/
T6 r253valid_index(T253* C,T2 a1);
/*ARRAY[INTEGER]*/
void r253make(T253* C,T2 a1,T2 a2);
/*FIXED_ARRAY[LX_NFA]*/
T6 r344valid_index(T344* C,T2 a1);
/*FIXED_ARRAY[LX_NFA]*/
void r344make(T344* C,T2 a1);
/*FIXED_ARRAY[LX_NFA]*/
void r344resize(T344* C,T2 a1);
/*FIXED_ARRAY[GEANT_FILESET_ENTRY]*/
T6 r514valid_index(T514* C,T2 a1);
/*FIXED_ARRAY[GEANT_FILESET_ENTRY]*/
void r514make(T514* C,T2 a1);
/*FIXED_ARRAY[GEANT_FILESET_ENTRY]*/
void r514resize(T514* C,T2 a1);
/*ARRAY[LX_DFA_STATE]*/
T0* r268item(T268* C,T2 a1);
/*ARRAY[LX_DFA_STATE]*/
T6 r268valid_index(T268* C,T2 a1);
/*ARRAY[LX_DFA_STATE]*/
void r268make(T268* C,T2 a1,T2 a2);
/*FIXED_ARRAY[DS_PAIR[STRING,STRING]]*/
T6 r560valid_index(T560* C,T2 a1);
/*FIXED_ARRAY[DS_PAIR[STRING,STRING]]*/
void r560make(T560* C,T2 a1);
/*FIXED_ARRAY[DS_PAIR[STRING,STRING]]*/
void r560resize(T560* C,T2 a1);
/*ARRAY[XM_CALLBACKS_FILTER]*/
T0* r725item(T725* C,T2 a1);
/*FIXED_ARRAY[XM_NAMESPACE]*/
T6 r911valid_index(T911* C,T2 a1);
/*FIXED_ARRAY[XM_NAMESPACE]*/
void r911make(T911* C,T2 a1);
/*FIXED_ARRAY[XM_NAMESPACE]*/
void r911resize(T911* C,T2 a1);
/*FIXED_ARRAY[LX_SYMBOL_CLASS]*/
T6 r404valid_index(T404* C,T2 a1);
/*FIXED_ARRAY[LX_SYMBOL_CLASS]*/
void r404make(T404* C,T2 a1);
/*FIXED_ARRAY[LX_SYMBOL_CLASS]*/
void r404resize(T404* C,T2 a1);
/*FIXED_ARRAY[GEANT_SELECT]*/
T6 r686valid_index(T686* C,T2 a1);
/*FIXED_ARRAY[GEANT_SELECT]*/
void r686make(T686* C,T2 a1);
/*FIXED_ARRAY[GEANT_SELECT]*/
void r686resize(T686* C,T2 a1);
/*FIXED_ARRAY[LX_NFA_STATE]*/
T6 r310valid_index(T310* C,T2 a1);
/*FIXED_ARRAY[LX_NFA_STATE]*/
void r310make(T310* C,T2 a1);
/*FIXED_ARRAY[LX_NFA_STATE]*/
void r310resize(T310* C,T2 a1);
/*FIXED_ARRAY[GEANT_PARENT]*/
T6 r678valid_index(T678* C,T2 a1);
/*FIXED_ARRAY[GEANT_PARENT]*/
void r678make(T678* C,T2 a1);
/*FIXED_ARRAY[GEANT_PARENT]*/
void r678resize(T678* C,T2 a1);
/*ARRAY[BOOLEAN]*/
T6 r271item(T271* C,T2 a1);
/*ARRAY[BOOLEAN]*/
T6 r271valid_index(T271* C,T2 a1);
/*ARRAY[BOOLEAN]*/
void r271make(T271* C,T2 a1,T2 a2);
/*FIXED_ARRAY[STRING]*/
T6 r117valid_index(T117* C,T2 a1);
/*FIXED_ARRAY[STRING]*/
void r117make(T117* C,T2 a1);
/*FIXED_ARRAY[STRING]*/
void r117resize(T117* C,T2 a1);
/*FIXED_ARRAY[LX_RULE]*/
T6 r257valid_index(T257* C,T2 a1);
/*FIXED_ARRAY[LX_RULE]*/
void r257make(T257* C,T2 a1);
/*FIXED_ARRAY[LX_RULE]*/
void r257resize(T257* C,T2 a1);
/*ARRAY[INTEGER_8]*/
T2 r468count(T468* C);
/*ARRAY[INTEGER_8]*/
T1 r468item(T468* C,T2 a1);
/*ARRAY[INTEGER_8]*/
T6 r468valid_index(T468* C,T2 a1);
/*ARRAY[INTEGER_8]*/
void r468make(T468* C,T2 a1,T2 a2);
/*FIXED_ARRAY[LX_START_CONDITION]*/
T6 r348valid_index(T348* C,T2 a1);
/*FIXED_ARRAY[LX_START_CONDITION]*/
void r348make(T348* C,T2 a1);
/*FIXED_ARRAY[GEANT_RENAME]*/
T6 r644valid_index(T644* C,T2 a1);
/*FIXED_ARRAY[GEANT_RENAME]*/
void r644make(T644* C,T2 a1);
/*FIXED_ARRAY[GEANT_RENAME]*/
void r644resize(T644* C,T2 a1);
/*FIXED_ARRAY[GEANT_TARGET]*/
T6 r127valid_index(T127* C,T2 a1);
/*FIXED_ARRAY[GEANT_TARGET]*/
void r127make(T127* C,T2 a1);
/*FIXED_ARRAY[GEANT_TARGET]*/
void r127resize(T127* C,T2 a1);
/*FIXED_ARRAY[INTEGER]*/
void r105copy(T105* C,T0* a1);
/*FIXED_ARRAY[INTEGER]*/
T6 r105is_equal(T105* C,T0* a1);
/*FIXED_ARRAY[INTEGER]*/
T6 r105valid_index(T105* C,T2 a1);
/*FIXED_ARRAY[INTEGER]*/
void r105make(T105* C,T2 a1);
/*FIXED_ARRAY[INTEGER]*/
void r105resize(T105* C,T2 a1);
/*FIXED_ARRAY[INTEGER]*/
T0* r105twin(T105* C);
/*FIXED_ARRAY[INTEGER]*/
void r105with_capacity(T105* C,T2 a1);
/*FIXED_ARRAY[INTEGER]*/
void r105from_collection(T105* C,T0* a1);
/*FIXED_ARRAY[LX_DFA_STATE]*/
T6 r263valid_index(T263* C,T2 a1);
/*FIXED_ARRAY[LX_DFA_STATE]*/
void r263make(T263* C,T2 a1);
/*FIXED_ARRAY[LX_DFA_STATE]*/
void r263resize(T263* C,T2 a1);
/*FIXED_ARRAY[GEANT_REDEFINE]*/
T6 r691valid_index(T691* C,T2 a1);
/*FIXED_ARRAY[GEANT_REDEFINE]*/
void r691make(T691* C,T2 a1);
/*FIXED_ARRAY[GEANT_REDEFINE]*/
void r691resize(T691* C,T2 a1);
/*ARRAY[STRING]*/
void r70force(T70* C,T0* a1,T2 a2);
/*ARRAY[STRING]*/
T2 r70count(T70* C);
/*ARRAY[STRING]*/
T0* r70item(T70* C,T2 a1);
/*ARRAY[STRING]*/
T6 r70valid_index(T70* C,T2 a1);
/*ARRAY[STRING]*/
void r70make(T70* C,T2 a1,T2 a2);
/*ARRAY[STRING]*/
void r70add_last(T70* C,T0* a1);
/*ARRAY[STRING]*/
void r70resize(T70* C,T2 a1,T2 a2);
/*FIXED_ARRAY[ANY]*/
T6 r385valid_index(T385* C,T2 a1);
/*FIXED_ARRAY[ANY]*/
void r385make(T385* C,T2 a1);
/*FIXED_ARRAY[ANY]*/
void r385resize(T385* C,T2 a1);
/*FIXED_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
T6 r758valid_index(T758* C,T2 a1);
/*FIXED_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
void r758make(T758* C,T2 a1);
/*FIXED_ARRAY[XM_EIFFEL_ENTITY_DEF]*/
void r758resize(T758* C,T2 a1);
/*ARRAY[LX_RULE]*/
T6 r380valid_index(T380* C,T2 a1);
/*ARRAY[LX_RULE]*/
void r380make(T380* C,T2 a1,T2 a2);
/*ARRAY[INTEGER_16]*/
T2 r472count(T472* C);
/*ARRAY[INTEGER_16]*/
T10 r472item(T472* C,T2 a1);
/*ARRAY[INTEGER_16]*/
T6 r472valid_index(T472* C,T2 a1);
/*ARRAY[INTEGER_16]*/
void r472make(T472* C,T2 a1,T2 a2);
/*FIXED_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r822copy(T822* C,T0* a1);
/*FIXED_ARRAY[XM_EIFFEL_PARSER_NAME]*/
T6 r822is_equal(T822* C,T0* a1);
/*FIXED_ARRAY[XM_EIFFEL_PARSER_NAME]*/
T6 r822valid_index(T822* C,T2 a1);
/*FIXED_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r822make(T822* C,T2 a1);
/*FIXED_ARRAY[XM_EIFFEL_PARSER_NAME]*/
void r822resize(T822* C,T2 a1);
/*FIXED_ARRAY[XM_EIFFEL_PARSER_NAME]*/
T0* r822twin(T822* C);
/*DS_LINKED_LIST[XM_ELEMENT]*/
T6 r207valid_cursor(T207* C,T0* a1);
/*DS_LINKED_LIST[XM_ELEMENT]*/
void r207remove_traversing_cursor(T207* C,T0* a1);
/*DS_LINKED_LIST[XM_ELEMENT]*/
void r207add_traversing_cursor(T207* C,T0* a1);
/*DS_LINKED_LIST[XM_ELEMENT]*/
void r207make(T207* C);
/*DS_LINKED_LIST[XM_ELEMENT]*/
T6 r207cursor_after(T0* a1);
/*DS_LINKED_LIST[XM_ELEMENT]*/
void r207cursor_forth(T207* C,T0* a1);
/*DS_LINKED_LIST[XM_ELEMENT]*/
void r207cursor_start(T207* C,T0* a1);
/*DS_LINKED_LIST[XM_ELEMENT]*/
void r207force_last(T207* C,T0* a1);
/*DS_LINKED_LIST[XM_ELEMENT]*/
T0* r207new_cursor(T207* C);
/*DS_LINKED_LIST[XM_ELEMENT]*/
T6 r207cursor_off(T0* a1);
/*DS_BUBBLE_SORTER[LX_NFA_STATE]*/
void r305subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
/*DS_BUBBLE_SORTER[LX_NFA_STATE]*/
void r305sort_with_comparator(T0* a1,T0* a2);
/*DS_HASH_SET[STRING]*/
T2 r485new_capacity(T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r485valid_cursor(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
T6 r485valid_slot(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r485make_clashes(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r485valid_position(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T0* r485cursor_item(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r485search_position(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r485remove_traversing_cursor(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r485make_items(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r485add_traversing_cursor(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r485make(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r485cursor_after(T0* a1);
/*DS_HASH_SET[STRING]*/
T2 r485hash_position(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r485cursor_forth(T485* C,T0* a1);
extern T0*oBC98fixed_integer_array_;
/*DS_HASH_SET[STRING]*/
void r485items_resize(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r485resize(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r485equality_tester_settable(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r485cursor_start(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
void r485clashes_resize(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r485slots_resize(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
void r485force_last(T485* C,T0* a1);
/*DS_HASH_SET[STRING]*/
T0* r485new_cursor(T485* C);
/*DS_HASH_SET[STRING]*/
void r485make_slots(T485* C,T2 a1);
/*DS_HASH_SET[STRING]*/
T2 r485new_modulus(T2 a1);
/*DS_HASH_SET[STRING]*/
T6 r485cursor_off(T0* a1);
/*DS_HASH_SET_CURSOR[XM_EIFFEL_PARSER_NAME]*/
T6 r838valid_position(T838* C,T2 a1);
/*DS_HASH_SET_CURSOR[XM_EIFFEL_PARSER_NAME]*/
void r838make(T838* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T2 r113new_capacity(T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113valid_cursor(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113extendible(T113* C,T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113make_equal(T113* C,T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
T0* r113last(T113* C);
/*DS_ARRAYED_LIST[STRING]*/
void r113move_cursors_right(T113* C,T2 a1,T2 a2);
/*DS_ARRAYED_LIST[STRING]*/
void r113put(T113* C,T0* a1,T2 a2);
/*DS_ARRAYED_LIST[STRING]*/
T0* r113cursor_item(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113is_equal(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113remove_traversing_cursor(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113add_traversing_cursor(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113se_assigned_from(T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113cursor_before(T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113same_type(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113make(T113* C,T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113cursor_after(T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113conforms_to(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113has(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113move_right(T113* C,T2 a1,T2 a2);
/*DS_ARRAYED_LIST[STRING]*/
void r113cursor_forth(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113resize(T113* C,T2 a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113cursor_start(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
void r113force_last(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T0* r113new_cursor(T113* C);
/*DS_ARRAYED_LIST[STRING]*/
void r113put_last(T113* C,T0* a1);
/*DS_ARRAYED_LIST[STRING]*/
T6 r113cursor_off(T0* a1);
/*LX_TRANSITION_TABLE[LX_DFA_STATE]*/
void r267set_target(T267* C,T0* a1,T2 a2);
/*LX_TRANSITION_TABLE[LX_DFA_STATE]*/
void r267make(T267* C,T2 a1,T2 a2);
/*DS_BILINKABLE[INTEGER]*/
void r276put_left(T276* C,T0* a1);
/*DS_BILINKABLE[INTEGER]*/
void r276put_right(T276* C,T0* a1);
/*DS_PAIR[XM_POSITION,XM_NODE]*/
void r712make(T712* C,T0* a1,T0* a2);
/*DS_HASH_SET_CURSOR[GEANT_FILESET_ENTRY]*/
T6 r512valid_position(T512* C,T2 a1);
/*DS_HASH_SET_CURSOR[GEANT_FILESET_ENTRY]*/
void r512make(T512* C,T0* a1);
/*DS_BILINKABLE[XM_DTD_ELEMENT_CONTENT]*/
void r926put_right(T926* C,T0* a1);
/*DS_HASH_SET_CURSOR[XM_NAMESPACE]*/
void r909make(T909* C,T0* a1);
/*DS_LINKED_STACK[XM_EIFFEL_SCANNER]*/
void r763force(T763* C,T0* a1);
/*DS_LINKED_STACK[XM_EIFFEL_SCANNER]*/
void r763remove(T763* C);
/*KL_FIXED_ARRAY_ROUTINES[LX_SYMBOL_CLASS]*/
T0* r429make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_SYMBOL_CLASS]*/
T0* r429resize(T0* a1,T2 a2);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r139set(T139* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r139make(T139* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r139forth(T139* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r139start(T139* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r139go_after(T139* C);
/*DS_LINKED_LIST_CURSOR[XM_NODE]*/
void r139set_after(T139* C);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T6 r188valid_position(T188* C,T2 a1);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T0* r188item(T188* C);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T6 r188after(T188* C);
/*DS_ARRAYED_LIST_CURSOR[STRING]*/
T6 r188off(T188* C);
/*LX_SYMBOL_CLASS_TRANSITION[LX_NFA_STATE]*/
T6 r428labeled(T428* C,T2 a1);
/*LX_SYMBOL_CLASS_TRANSITION[LX_NFA_STATE]*/
T6 r428recordable(T428* C,T0* a1);
/*LX_SYMBOL_CLASS_TRANSITION[LX_NFA_STATE]*/
T6 r428is_equal(T428* C,T0* a1);
/*LX_SYMBOL_CLASS_TRANSITION[LX_NFA_STATE]*/
void r428make(T428* C,T0* a1,T0* a2);
/*LX_SYMBOL_CLASS_TRANSITION[LX_NFA_STATE]*/
T0* r428twin(T428* C);
/*LX_SYMBOL_CLASS_TRANSITION[LX_NFA_STATE]*/
void r428record(T428* C,T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_NFA]*/
T0* r357make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_NFA]*/
T0* r357resize(T0* a1,T2 a2);
/*KL_EQUALITY_TESTER[STRING]*/
T6 r116test(T0* a1,T0* a2);
/*DS_BILINKED_LIST_CURSOR[STRING]*/
void r813set(T813* C,T0* a1,T6 a2,T6 a3);
/*DS_BILINKED_LIST_CURSOR[STRING]*/
void r813make(T813* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[STRING]*/
void r813set_after(T813* C);
/*KL_FIXED_ARRAY_ROUTINES[XM_EIFFEL_ENTITY_DEF]*/
T0* r759make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[XM_EIFFEL_ENTITY_DEF]*/
T0* r759resize(T0* a1,T2 a2);
/*KL_FIXED_ARRAY_ROUTINES[ANY]*/
T0* r383make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[ANY]*/
T0* r383resize(T0* a1,T2 a2);
/*DS_LINKED_LIST_CURSOR[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r721set(T721* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r721make(T721* C,T0* a1);
/*DS_LINKED_LIST_CURSOR[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r721set_after(T721* C);
/*LX_SYMBOL_TRANSITION[LX_NFA_STATE]*/
T6 r443recordable(T443* C,T0* a1);
/*LX_SYMBOL_TRANSITION[LX_NFA_STATE]*/
T6 r443is_equal(T443* C,T0* a1);
/*LX_SYMBOL_TRANSITION[LX_NFA_STATE]*/
void r443make(T443* C,T2 a1,T0* a2);
/*LX_SYMBOL_TRANSITION[LX_NFA_STATE]*/
T0* r443twin(T443* C);
/*LX_SYMBOL_TRANSITION[LX_NFA_STATE]*/
void r443record(T443* C,T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[INTEGER]*/
T0* r177to_fixed_array(T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[INTEGER]*/
T0* r177make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[INTEGER]*/
T0* r177make_from_array(T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[INTEGER]*/
T0* r177resize(T0* a1,T2 a2);
/*KL_COMPARABLE_COMPARATOR[LX_NFA_STATE]*/
T6 r304less_than(T0* a1,T0* a2);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T0* r174key(T174* C);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T6 r174valid_position(T174* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T0* r174item(T174* C);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
T6 r174after(T174* C);
/*DS_HASH_TABLE_CURSOR[STRING,STRING]*/
void r174make(T174* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T2 r103new_capacity(T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103valid_cursor(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103cursor_back(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103make_clashes(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103valid_slot(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103valid_position(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T0* r103cursor_item(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103search_position(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103remove_traversing_cursor(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103keys_resize(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T0* r103item(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103cursor_go_after(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103make_items(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103add_traversing_cursor(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103has_item(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103remove_position(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103cursor_before(T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103remove(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T0* r103cursor_key(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103cursor_after(T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103has(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103cursor_finish(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103make_keys(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T2 r103hash_position(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103cursor_forth(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103items_resize(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103make_with_equality_testers(T103* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103resize(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103move_cursors_after(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103move_cursors_forth(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103cursor_start(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103clashes_resize(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103slots_resize(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103key_equality_tester_settable(T103* C,T0* a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103force_last(T103* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T0* r103new_cursor(T103* C);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103make_slots(T103* C,T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T2 r103new_modulus(T2 a1);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
void r103move_all_cursors(T103* C,T2 a1,T2 a2);
/*DS_HASH_TABLE[GEANT_TARGET,STRING]*/
T6 r103cursor_off(T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T2 r641new_capacity(T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T6 r641valid_cursor(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641cursor_back(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641make_clashes(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T6 r641valid_slot(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T6 r641valid_position(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T0* r641cursor_item(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641search_position(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641remove_traversing_cursor(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641keys_resize(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641make_items(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641add_traversing_cursor(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641make_map_equal(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T6 r641cursor_before(T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T6 r641has(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641cursor_finish(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641make_keys(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T2 r641hash_position(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641items_resize(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641make_with_equality_testers(T641* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641resize(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641clashes_resize(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641slots_resize(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T6 r641key_equality_tester_settable(T641* C,T0* a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641force_last(T641* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T0* r641new_cursor(T641* C);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
void r641make_slots(T641* C,T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T2 r641new_modulus(T2 a1);
/*DS_HASH_TABLE[GEANT_RENAME,STRING]*/
T6 r641cursor_off(T0* a1);
/*KL_COMPARABLE_COMPARATOR[INTEGER]*/
T6 r448less_than(T2 a1,T2 a2);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881set_last_cell(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T6 r881valid_cursor(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881wipe_out(T881* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881cursor_back(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T0* r881cursor_item(T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881remove_traversing_cursor(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881move_all_cursors_after(T881* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881add_traversing_cursor(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T6 r881cursor_before(T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881make(T881* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881remove_last(T881* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881cursor_finish(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881move_last_cursors_after(T881* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881cursor_go_before(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
void r881force_last(T881* C,T0* a1);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T0* r881new_cursor(T881* C);
/*DS_BILINKED_LIST[DS_HASH_TABLE[STRING,STRING]]*/
T6 r881cursor_off(T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_START_CONDITION]*/
T0* r467make(T2 a1);
/*DS_BUBBLE_SORTER[LX_RULE]*/
void r296subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
/*DS_BUBBLE_SORTER[LX_RULE]*/
void r296sort_with_comparator(T0* a1,T0* a2);
/*DS_ARRAYED_LIST[LX_RULE]*/
T2 r255new_capacity(T2 a1);
/*DS_ARRAYED_LIST[LX_RULE]*/
T6 r255extendible(T255* C,T2 a1);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255move_cursors_right(T255* C,T2 a1,T2 a2);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255put(T255* C,T0* a1,T2 a2);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255force_first(T255* C,T0* a1);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255make(T255* C,T2 a1);
/*DS_ARRAYED_LIST[LX_RULE]*/
T6 r255has(T255* C,T0* a1);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255move_right(T255* C,T2 a1,T2 a2);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255resize(T255* C,T2 a1);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255force_last(T255* C,T0* a1);
/*DS_ARRAYED_LIST[LX_RULE]*/
T0* r255new_cursor(T255* C);
/*DS_ARRAYED_LIST[LX_RULE]*/
void r255put_last(T255* C,T0* a1);
/*DS_ARRAYED_LIST_CURSOR[GEANT_PARENT]*/
T6 r597valid_position(T597* C,T2 a1);
/*DS_ARRAYED_LIST_CURSOR[GEANT_PARENT]*/
T0* r597item(T597* C);
/*DS_ARRAYED_LIST_CURSOR[GEANT_PARENT]*/
T6 r597after(T597* C);
/*DS_ARRAYED_LIST_CURSOR[GEANT_PARENT]*/
T6 r597off(T597* C);
/*DS_PAIR[STRING,STRING]*/
void r556make(T556* C,T0* a1,T0* a2);
/*DS_ARRAYED_LIST_CURSOR[LX_RULE]*/
T6 r326valid_position(T326* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[GEANT_RENAME,STRING]*/
T6 r630valid_position(T630* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[GEANT_RENAME,STRING]*/
T0* r630item(T630* C);
/*DS_HASH_TABLE_CURSOR[GEANT_RENAME,STRING]*/
void r630make(T630* C,T0* a1);
/*DS_HASH_TABLE_CURSOR[GEANT_RENAME,STRING]*/
T6 r630before(T630* C);
/*DS_BILINKABLE[DS_HASH_TABLE[STRING,STRING]]*/
void r917put_right(T917* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T6 r711valid_cursor(T711* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r711remove_traversing_cursor(T711* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r711cursor_go_after(T711* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r711add_traversing_cursor(T711* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r711make(T711* C);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T6 r711cursor_after(T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r711cursor_forth(T711* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r711cursor_start(T711* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T0* r711new_cursor(T711* C);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
void r711put_last(T711* C,T0* a1);
/*DS_LINKED_LIST[DS_PAIR[XM_POSITION,XM_NODE]]*/
T6 r711cursor_off(T0* a1);
/*DS_ARRAYED_LIST[LX_DFA_STATE]*/
T6 r261extendible(T261* C,T2 a1);
/*DS_ARRAYED_LIST[LX_DFA_STATE]*/
void r261make(T261* C,T2 a1);
/*DS_ARRAYED_LIST[LX_DFA_STATE]*/
void r261resize(T261* C,T2 a1);
/*DS_ARRAYED_LIST[LX_DFA_STATE]*/
T0* r261new_cursor(T261* C);
/*DS_ARRAYED_LIST[LX_DFA_STATE]*/
T6 r261is_full(T261* C);
/*DS_ARRAYED_LIST[LX_DFA_STATE]*/
void r261put_last(T261* C,T0* a1);
/*DS_HASH_SET_CURSOR[STRING]*/
T6 r495valid_position(T495* C,T2 a1);
/*DS_HASH_SET_CURSOR[STRING]*/
T0* r495item(T495* C);
/*DS_HASH_SET_CURSOR[STRING]*/
T6 r495after(T495* C);
/*DS_HASH_SET_CURSOR[STRING]*/
void r495make(T495* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T2 r498new_capacity(T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T6 r498valid_cursor(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498make_equal(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T6 r498valid_slot(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498make_clashes(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T6 r498valid_position(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T0* r498cursor_item(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498search_position(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498remove_traversing_cursor(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498make_items(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498add_traversing_cursor(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498remove_position(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T6 r498after(T498* C);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498make(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T0* r498item_for_iteration(T498* C);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498remove(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T6 r498off(T498* C);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T6 r498cursor_after(T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T2 r498hash_position(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498cursor_forth(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498items_resize(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498resize(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498move_cursors_after(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498move_cursors_forth(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498cursor_start(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498clashes_resize(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498slots_resize(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498force_last(T498* C,T0* a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T0* r498new_cursor(T498* C);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498make_slots(T498* C,T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
void r498move_all_cursors(T498* C,T2 a1,T2 a2);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T2 r498new_modulus(T2 a1);
/*DS_HASH_SET[GEANT_FILESET_ENTRY]*/
T6 r498cursor_off(T0* a1);
/*DS_ARRAYED_LIST[LX_NFA]*/
T2 r342new_capacity(T2 a1);
/*DS_ARRAYED_LIST[LX_NFA]*/
T6 r342extendible(T342* C,T2 a1);
/*DS_ARRAYED_LIST[LX_NFA]*/
void r342make(T342* C,T2 a1);
/*DS_ARRAYED_LIST[LX_NFA]*/
void r342resize(T342* C,T2 a1);
/*DS_ARRAYED_LIST[LX_NFA]*/
void r342force_last(T342* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA]*/
T0* r342new_cursor(T342* C);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T2 r596new_capacity(T2 a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T6 r596valid_cursor(T596* C,T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T6 r596extendible(T596* C,T2 a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T0* r596cursor_item(T596* C,T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
void r596remove_traversing_cursor(T596* C,T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
void r596add_traversing_cursor(T596* C,T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T6 r596cursor_before(T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
void r596make(T596* C,T2 a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T6 r596cursor_after(T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
void r596cursor_forth(T596* C,T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
void r596resize(T596* C,T2 a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
void r596cursor_start(T596* C,T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
void r596force_last(T596* C,T0* a1);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T0* r596new_cursor(T596* C);
/*DS_ARRAYED_LIST[GEANT_PARENT]*/
T6 r596cursor_off(T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[XM_EIFFEL_PARSER_NAME]*/
T0* r825make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[XM_EIFFEL_PARSER_NAME]*/
T0* r825resize(T0* a1,T2 a2);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T2 r604new_capacity(T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T6 r604valid_cursor(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T6 r604valid_slot(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604make_clashes(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T6 r604valid_position(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T0* r604cursor_item(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604search_position(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604remove_traversing_cursor(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604keys_resize(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604make_items(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604add_traversing_cursor(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604make_map_equal(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T6 r604cursor_after(T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604make_keys(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T2 r604hash_position(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604cursor_forth(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604items_resize(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604make_with_equality_testers(T604* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604resize(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604cursor_start(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604clashes_resize(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604slots_resize(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T6 r604key_equality_tester_settable(T604* C,T0* a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604force_last(T604* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T0* r604new_cursor(T604* C);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
void r604make_slots(T604* C,T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T2 r604new_modulus(T2 a1);
/*DS_HASH_TABLE[GEANT_SELECT,STRING]*/
T6 r604cursor_off(T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_NFA_STATE]*/
T0* r313make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_NFA_STATE]*/
T0* r313resize(T0* a1,T2 a2);
/*DS_HASH_TABLE_CURSOR[LX_SYMBOL_CLASS,STRING]*/
T6 r416valid_position(T416* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[LX_SYMBOL_CLASS,STRING]*/
T0* r416item(T416* C);
/*DS_HASH_TABLE_CURSOR[LX_SYMBOL_CLASS,STRING]*/
T6 r416after(T416* C);
/*DS_HASH_TABLE_CURSOR[LX_SYMBOL_CLASS,STRING]*/
void r416make(T416* C,T0* a1);
/*DS_LINKED_STACK[STRING]*/
void r892force(T892* C,T0* a1);
/*DS_LINKED_STACK[STRING]*/
T0* r892item(T892* C);
/*DS_LINKED_STACK[STRING]*/
void r892remove(T892* C);
/*KL_FIXED_ARRAY_ROUTINES[XM_NAMESPACE]*/
T0* r912make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[XM_NAMESPACE]*/
T0* r912resize(T0* a1,T2 a2);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
void r840force_first(T840* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
void r840make(T840* C);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
void r840force_last(T840* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ELEMENT_CONTENT]*/
T0* r840new_cursor(T840* C);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_SELECT]*/
T0* r689make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_SELECT]*/
T0* r689resize(T0* a1,T2 a2);
/*DS_HASH_TABLE_CURSOR[GEANT_TARGET,STRING]*/
T0* r79key(T79* C);
/*DS_HASH_TABLE_CURSOR[GEANT_TARGET,STRING]*/
T6 r79valid_position(T79* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[GEANT_TARGET,STRING]*/
T0* r79item(T79* C);
/*DS_HASH_TABLE_CURSOR[GEANT_TARGET,STRING]*/
T6 r79after(T79* C);
/*DS_HASH_TABLE_CURSOR[GEANT_TARGET,STRING]*/
void r79make(T79* C,T0* a1);
/*DS_HASH_TABLE_CURSOR[GEANT_TARGET,STRING]*/
T6 r79before(T79* C);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_PARENT]*/
T0* r681make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_PARENT]*/
T0* r681resize(T0* a1,T2 a2);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r886set(T886* C,T0* a1,T6 a2,T6 a3);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r886set_before(T886* C);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r886make(T886* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[DS_HASH_TABLE[STRING,STRING]]*/
void r886set_after(T886* C);
/*DS_HASH_SET[XM_NAMESPACE]*/
T2 r894new_capacity(T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894make_equal(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894make_clashes(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894search_position(T894* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T0* r894item(T894* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894make_items(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894make(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T6 r894has(T894* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T2 r894hash_position(T894* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894items_resize(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894resize(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894clashes_resize(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894slots_resize(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894force_last(T894* C,T0* a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T0* r894new_cursor(T894* C);
/*DS_HASH_SET[XM_NAMESPACE]*/
void r894make_slots(T894* C,T2 a1);
/*DS_HASH_SET[XM_NAMESPACE]*/
T2 r894new_modulus(T2 a1);
/*KL_ARRAY_ROUTINES[INTEGER]*/
void r768subcopy(T0* a1,T0* a2,T2 a3,T2 a4,T2 a5);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_FILESET_ENTRY]*/
T0* r515make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_FILESET_ENTRY]*/
T0* r515resize(T0* a1,T2 a2);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ELEMENT_CONTENT]*/
void r850make(T850* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ATTRIBUTE_CONTENT]*/
void r867set(T867* C,T0* a1,T6 a2,T6 a3);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ATTRIBUTE_CONTENT]*/
void r867make(T867* C,T0* a1);
/*DS_BILINKED_LIST_CURSOR[XM_DTD_ATTRIBUTE_CONTENT]*/
void r867set_after(T867* C);
/*DS_HASH_TABLE_CURSOR[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r755valid_position(T755* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r755make(T755* C,T0* a1);
/*KL_EQUALITY_TESTER[XM_NAMESPACE]*/
T6 r900test(T0* a1,T0* a2);
/*DS_ARRAYED_LIST_CURSOR[LX_NFA_STATE]*/
T6 r333valid_position(T333* C,T2 a1);
/*DS_ARRAYED_LIST_CURSOR[LX_NFA_STATE]*/
T0* r333item(T333* C);
/*DS_ARRAYED_LIST_CURSOR[LX_NFA_STATE]*/
T6 r333after(T333* C);
/*DS_ARRAYED_LIST_CURSOR[LX_NFA_STATE]*/
T6 r333off(T333* C);
/*DS_HASH_TABLE_CURSOR[LX_NFA,INTEGER]*/
void r368make(T368* C,T0* a1);
/*DS_ARRAYED_STACK[GEANT_TARGET]*/
T2 r133new_capacity(T2 a1);
/*DS_ARRAYED_STACK[GEANT_TARGET]*/
T6 r133extendible(T133* C,T2 a1);
/*DS_ARRAYED_STACK[GEANT_TARGET]*/
void r133force(T133* C,T0* a1);
/*DS_ARRAYED_STACK[GEANT_TARGET]*/
T0* r133item(T133* C);
/*DS_ARRAYED_STACK[GEANT_TARGET]*/
void r133make(T133* C,T2 a1);
/*DS_ARRAYED_STACK[GEANT_TARGET]*/
void r133remove(T133* C);
/*DS_ARRAYED_STACK[GEANT_TARGET]*/
void r133resize(T133* C,T2 a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805copy(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805valid_cursor(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r805cursor_item(T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805is_equal(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805remove_traversing_cursor(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805cursor_go_after(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805move_all_cursors_after(T805* C);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805add_traversing_cursor(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805se_assigned_from(T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805same_type(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805make(T805* C);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805cursor_after(T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805conforms_to(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805has(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805cursor_search_forth(T805* C,T0* a1,T0* a2);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805cursor_forth(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805cursor_start(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r805twin(T805* C);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
void r805force_last(T805* C,T0* a1);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T0* r805new_cursor(T805* C);
/*DS_BILINKED_LIST[XM_DTD_ATTRIBUTE_CONTENT]*/
T6 r805cursor_off(T0* a1);
/*DS_ARRAYED_LIST_CURSOR[LX_START_CONDITION]*/
T6 r464valid_position(T464* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[GEANT_REDEFINE,STRING]*/
T6 r627valid_position(T627* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[GEANT_REDEFINE,STRING]*/
T0* r627item(T627* C);
/*DS_HASH_TABLE_CURSOR[GEANT_REDEFINE,STRING]*/
T6 r627after(T627* C);
/*DS_HASH_TABLE_CURSOR[GEANT_REDEFINE,STRING]*/
void r627make(T627* C,T0* a1);
/*DS_BILINKABLE[STRING]*/
void r870put_right(T870* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T2 r281new_capacity(T2 a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281valid_cursor(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281extendible(T281* C,T2 a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281append_last(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281move_cursors_right(T281* C,T2 a1,T2 a2);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T0* r281last(T281* C);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281put(T281* C,T0* a1,T2 a2);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T0* r281cursor_item(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281is_equal(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281remove_traversing_cursor(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281add_traversing_cursor(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281se_assigned_from(T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281cursor_before(T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281same_type(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281make(T281* C,T2 a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281cursor_after(T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281conforms_to(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281has(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281move_right(T281* C,T2 a1,T2 a2);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281cursor_forth(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281resize(T281* C,T2 a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281cursor_start(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281force_last(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T0* r281new_cursor(T281* C);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281extend_last(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
void r281put_last(T281* C,T0* a1);
/*DS_ARRAYED_LIST[LX_NFA_STATE]*/
T6 r281cursor_off(T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_RENAME]*/
T0* r695make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_RENAME]*/
T0* r695resize(T0* a1,T2 a2);
/*DS_HASH_TABLE_CURSOR[GEANT_SELECT,STRING]*/
T6 r611valid_position(T611* C,T2 a1);
/*DS_HASH_TABLE_CURSOR[GEANT_SELECT,STRING]*/
T0* r611item(T611* C);
/*DS_HASH_TABLE_CURSOR[GEANT_SELECT,STRING]*/
T6 r611after(T611* C);
/*DS_HASH_TABLE_CURSOR[GEANT_SELECT,STRING]*/
void r611make(T611* C,T0* a1);
/*DS_ARRAYED_LIST[DS_PAIR[STRING,STRING]]*/
T2 r558new_capacity(T2 a1);
/*DS_ARRAYED_LIST[DS_PAIR[STRING,STRING]]*/
T6 r558extendible(T558* C,T2 a1);
/*DS_ARRAYED_LIST[DS_PAIR[STRING,STRING]]*/
void r558make(T558* C,T2 a1);
/*DS_ARRAYED_LIST[DS_PAIR[STRING,STRING]]*/
void r558resize(T558* C,T2 a1);
/*DS_ARRAYED_LIST[DS_PAIR[STRING,STRING]]*/
void r558force_last(T558* C,T0* a1);
/*DS_ARRAYED_LIST[DS_PAIR[STRING,STRING]]*/
T0* r558new_cursor(T558* C);
/*DS_LINKED_QUEUE[STRING]*/
void r893force(T893* C,T0* a1);
/*DS_LINKED_QUEUE[STRING]*/
void r893wipe_out(T893* C);
/*DS_LINKED_QUEUE[STRING]*/
T0* r893item(T893* C);
/*DS_LINKED_QUEUE[STRING]*/
void r893remove(T893* C);
/*KL_EQUALITY_TESTER[GEANT_FILESET_ENTRY]*/
T6 r503test(T0* a1,T0* a2);
/*LX_EPSILON_TRANSITION[LX_NFA_STATE]*/
T6 r284is_equal(T284* C,T0* a1);
/*LX_EPSILON_TRANSITION[LX_NFA_STATE]*/
T0* r284twin(T284* C);
/*KL_FIXED_ARRAY_ROUTINES[LX_DFA_STATE]*/
T0* r337make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_DFA_STATE]*/
T0* r337resize(T0* a1,T2 a2);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_TARGET]*/
T0* r582make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_TARGET]*/
T0* r582resize(T0* a1,T2 a2);
/*DS_HASH_TABLE[STRING,STRING]*/
T2 r165new_capacity(T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165valid_cursor(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165force(T165* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165valid_slot(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165make_clashes(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165valid_position(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r165cursor_item(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165search_position(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165remove_traversing_cursor(T165* C,T0* a1);
extern T2 oBC94default_capacity;
/*DS_HASH_TABLE[STRING,STRING]*/
void r165keys_resize(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r165item(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165make_items(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165add_traversing_cursor(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165remove_position(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165make(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165remove(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r165cursor_key(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165cursor_after(T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165has(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165make_keys(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165force_new(T165* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[STRING,STRING]*/
T2 r165hash_position(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165cursor_forth(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165items_resize(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165move_cursors_after(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165resize(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r165found_item(T165* C);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165make_with_equality_testers(T165* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165found(T165* C);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165move_cursors_forth(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165cursor_start(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165search(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165clashes_resize(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165slots_resize(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165key_equality_tester_settable(T165* C,T0* a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165force_last(T165* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[STRING,STRING]*/
T0* r165new_cursor(T165* C);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165make_slots(T165* C,T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
void r165move_all_cursors(T165* C,T2 a1,T2 a2);
/*DS_HASH_TABLE[STRING,STRING]*/
T2 r165new_modulus(T2 a1);
/*DS_HASH_TABLE[STRING,STRING]*/
T6 r165cursor_off(T0* a1);
/*KL_EQUALITY_TESTER[XM_EIFFEL_PARSER_NAME]*/
T6 r829is_equal(T829* C,T0* a1);
/*KL_EQUALITY_TESTER[XM_EIFFEL_PARSER_NAME]*/
T6 r829test(T0* a1,T0* a2);
/*KL_EQUALITY_TESTER[XM_EIFFEL_PARSER_NAME]*/
T0* r829twin(T829* C);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T2 r620new_capacity(T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T6 r620valid_cursor(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T6 r620valid_slot(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620make_clashes(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T6 r620valid_position(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T0* r620cursor_item(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620search_position(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620remove_traversing_cursor(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620keys_resize(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620make_items(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620add_traversing_cursor(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620make_map_equal(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T6 r620cursor_after(T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620make_keys(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T2 r620hash_position(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620cursor_forth(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620items_resize(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620make_with_equality_testers(T620* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620resize(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620cursor_start(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620clashes_resize(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620slots_resize(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T6 r620key_equality_tester_settable(T620* C,T0* a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620force_last(T620* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T0* r620new_cursor(T620* C);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
void r620make_slots(T620* C,T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T2 r620new_modulus(T2 a1);
/*DS_HASH_TABLE[GEANT_REDEFINE,STRING]*/
T6 r620cursor_off(T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[STRING]*/
T0* r178make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[STRING]*/
T0* r178resize(T0* a1,T2 a2);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T2 r742new_capacity(T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742force(T742* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742wipe_out(T742* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r742valid_slot(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742make_clashes(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r742valid_position(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742search_position(T742* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742keys_resize(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T0* r742item(T742* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742move_all_cursors_after(T742* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742make_items(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742slots_wipe_out(T742* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742make(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742clashes_wipe_out(T742* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r742has(T742* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742make_keys(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T2 r742hash_position(T742* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742items_wipe_out(T742* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742items_resize(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742resize(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742make_with_equality_testers(T742* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742clashes_resize(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742slots_resize(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742keys_wipe_out(T742* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T6 r742key_equality_tester_settable(T742* C,T0* a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T0* r742new_cursor(T742* C);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
void r742make_slots(T742* C,T2 a1);
/*DS_HASH_TABLE[XM_EIFFEL_ENTITY_DEF,STRING]*/
T2 r742new_modulus(T2 a1);
/*KL_EQUALITY_TESTER[INTEGER]*/
T6 r354test(T2 a1,T2 a2);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
T2 r351new_capacity(T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351force(T351* C,T0* a1,T2 a2);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351make_clashes(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351search_position(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351keys_resize(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
T0* r351item(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351make_items(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351make(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
T6 r351has(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351make_keys(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
T2 r351hash_position(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351items_resize(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351make_with_equality_testers(T351* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351resize(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351clashes_resize(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351slots_resize(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
T0* r351new_cursor(T351* C);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
void r351make_slots(T351* C,T2 a1);
/*DS_HASH_TABLE[LX_NFA,INTEGER]*/
T2 r351new_modulus(T2 a1);
/*DS_SHELL_SORTER[INTEGER]*/
void r449subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
/*DS_SHELL_SORTER[INTEGER]*/
void r449sort_with_comparator(T0* a1,T0* a2);
/*DS_LINKED_QUEUE[CHARACTER]*/
void r800force(T800* C,T3 a1);
/*DS_LINKED_QUEUE[CHARACTER]*/
void r800wipe_out(T800* C);
/*DS_LINKED_QUEUE[CHARACTER]*/
void r800remove(T800* C);
/*DS_BILINKABLE[XM_DTD_ATTRIBUTE_CONTENT]*/
void r862put_right(T862* C,T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_RULE]*/
T0* r314make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[LX_RULE]*/
T0* r314resize(T0* a1,T2 a2);
/*DS_LINKED_STACK[INTEGER]*/
void r764force(T764* C,T2 a1);
/*DS_LINKED_STACK[INTEGER]*/
void r764remove(T764* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T2 r808new_capacity(T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808copy(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808make_equal(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808valid_slot(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808make_clashes(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808valid_position(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808search_position(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808is_equal(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808clone_slots(T808* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808clone_clashes(T808* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808move_all_cursors_after(T808* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808make_items(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808se_assigned_from(T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T0* r808clone(T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808same_type(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808make(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808equal(T0* a1,T0* a2);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808clone_items(T808* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808same_equality_tester(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808conforms_to(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T6 r808has(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808force_new(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T2 r808hash_position(T808* C,T0* a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808items_resize(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808resize(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808clashes_resize(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808slots_resize(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T0* r808twin(T808* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T0* r808new_cursor(T808* C);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
void r808make_slots(T808* C,T2 a1);
/*DS_HASH_SET[XM_EIFFEL_PARSER_NAME]*/
T2 r808new_modulus(T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T2 r399new_capacity(T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T6 r399valid_cursor(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399force(T399* C,T0* a1,T0* a2);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399make_clashes(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T6 r399valid_slot(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T6 r399valid_position(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T0* r399cursor_item(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399search_position(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399remove_traversing_cursor(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399keys_resize(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T0* r399item(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399make_items(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399add_traversing_cursor(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399make(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T6 r399cursor_after(T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T6 r399has(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399make_keys(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T2 r399hash_position(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399cursor_forth(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399items_resize(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399make_with_equality_testers(T399* C,T2 a1,T0* a2,T0* a3);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399resize(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399cursor_start(T399* C,T0* a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399clashes_resize(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399slots_resize(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T0* r399new_cursor(T399* C);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
void r399make_slots(T399* C,T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T2 r399new_modulus(T2 a1);
/*DS_HASH_TABLE[LX_SYMBOL_CLASS,STRING]*/
T6 r399cursor_off(T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r803copy(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r803valid_cursor(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T0* r803cursor_item(T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r803is_equal(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r803remove_traversing_cursor(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T0* r803item(T803* C,T2 a1);
/*DS_BILINKED_LIST[STRING]*/
void r803move_all_cursors_after(T803* C);
/*DS_BILINKED_LIST[STRING]*/
void r803add_traversing_cursor(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r803se_assigned_from(T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r803same_type(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r803make(T803* C);
/*DS_BILINKED_LIST[STRING]*/
T6 r803cursor_after(T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T6 r803conforms_to(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r803cursor_forth(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
void r803cursor_start(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T0* r803twin(T803* C);
/*DS_BILINKED_LIST[STRING]*/
void r803force_last(T803* C,T0* a1);
/*DS_BILINKED_LIST[STRING]*/
T0* r803new_cursor(T803* C);
/*DS_BILINKED_LIST[STRING]*/
T6 r803cursor_off(T0* a1);
/*KL_COMPARABLE_COMPARATOR[LX_RULE]*/
T6 r295less_than(T0* a1,T0* a2);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_REDEFINE]*/
T0* r694make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[GEANT_REDEFINE]*/
T0* r694resize(T0* a1,T2 a2);
/*DS_ARRAYED_LIST_CURSOR[INTEGER]*/
T6 r439valid_position(T439* C,T2 a1);
/*DS_LINKED_LIST_CURSOR[XM_ELEMENT]*/
void r206set(T206* C,T0* a1,T6 a2,T6 a3);
/*DS_LINKED_LIST_CURSOR[XM_ELEMENT]*/
void r206make(T206* C,T0* a1);
/*KL_FIXED_ARRAY_ROUTINES[DS_PAIR[STRING,STRING]]*/
T0* r563make(T2 a1);
/*KL_FIXED_ARRAY_ROUTINES[DS_PAIR[STRING,STRING]]*/
T0* r563resize(T0* a1,T2 a2);
extern T0*oBC25unix_file_system;
extern T0*oBC580resource_attribute_name;
/*GEANT_AVAILABLE_TASK*/
T0* r580attribute_value(T580* C,T0* a1);
extern T0*oBC25file_system;
extern int fBC25file_system;
/*GEANT_AVAILABLE_TASK*/
T0* r580file_system(void);
extern T0*oBC27unless_attribute_name;
extern T0*oBC580true_value_attribute_name;
/*GEANT_AVAILABLE_TASK*/
void r580make(T580* C,T0* a1,T0* a2);
extern T0*oBC26operating_system;
/*GEANT_AVAILABLE_TASK*/
void r580task_make(T580* C,T0* a1,T0* a2);
extern T0*oBC27dir_attribute_name;
/*GEANT_AVAILABLE_TASK*/
void r580execute(T580* C);
/*GEANT_AVAILABLE_TASK*/
T6 r580is_enabled(T580* C);
extern T0*oBC580false_value_attribute_name;
extern T0*oBC27if_attribute_name;
extern T0*oBC25windows_file_system;
/*GEANT_AVAILABLE_TASK*/
void r580interpreting_element_make(T580* C,T0* a1,T0* a2);
extern T0*oBC580variable_attribute_name;
extern T0*oBC684target_attribute_name;
/*GEANT_RENAME_ELEMENT*/
T0* r684attribute_value(T684* C,T0* a1);
extern T0*oBC684as_attribute_name;
/*GEANT_RENAME_ELEMENT*/
void r684make(T684* C,T0* a1,T0* a2);
/*GEANT_RENAME_ELEMENT*/
void r684interpreting_element_make(T684* C,T0* a1,T0* a2);
extern T0*oBC18string_;
/*GEANT_LCC_COMMAND*/
T0* r519file_system(void);
/*GEANT_LCC_COMMAND*/
T0* r519clone(T0* a1);
/*GEANT_LCC_COMMAND*/
void r519execute(T519* C);
/*GEANT_LCC_COMMAND*/
void r519execute_shell(T519* C,T0* a1);
/*GEANT_LCC_COMMAND*/
T6 r519is_executable(T519* C);
/*LX_SYMBOL_PARTITIONS*/
void r269build(T269* C);
/*LX_SYMBOL_PARTITIONS*/
T2 r269previous_symbol(T269* C,T2 a1);
/*LX_SYMBOL_PARTITIONS*/
void r269put(T269* C,T2 a1);
/*LX_SYMBOL_PARTITIONS*/
T6 r269valid_symbol_class(T269* C,T0* a1);
/*LX_SYMBOL_PARTITIONS*/
T0* r269to_array(T269* C,T2 a1,T2 a2);
/*LX_SYMBOL_PARTITIONS*/
void r269make(T269* C,T2 a1,T2 a2);
/*LX_SYMBOL_PARTITIONS*/
void r269equiv_add(T269* C,T0* a1);
/*LX_SYMBOL_PARTITIONS*/
void r269equiv_initialize(T269* C);
/*LX_SYMBOL_PARTITIONS*/
T2 r269equivalence_class(T269* C,T2 a1);
/*LX_SYMBOL_PARTITIONS*/
void r269add(T269* C,T0* a1);
/*LX_SYMBOL_PARTITIONS*/
T6 r269is_representative(T269* C,T2 a1);
/*LX_SYMBOL_PARTITIONS*/
void r269initialize(T269* C);
/*LX_SYMBOL_PARTITIONS*/
void r269equiv_put(T269* C,T2 a1);
extern T0*oBC554stylesheet_filename_attribute_name;
extern T0*oBC554format_attribute_name;
/*GEANT_XSLT_TASK*/
T0* r554attribute_value(T554* C,T0* a1);
/*GEANT_XSLT_TASK*/
T0* r554file_system(void);
extern T0*oBC554input_filename_attribute_name;
/*GEANT_XSLT_TASK*/
T0* r554elements_by_name(T554* C,T0* a1);
/*GEANT_XSLT_TASK*/
void r554make(T554* C,T0* a1,T0* a2);
/*GEANT_XSLT_TASK*/
void r554task_make(T554* C,T0* a1,T0* a2);
extern T0*oBC554output_filename_attribute_name;
extern T0*oBC554processor_attribute_value_xsltproc;
extern T0*oBC554indent_attribute_name;
/*GEANT_XSLT_TASK*/
void r554execute(T554* C);
extern T0*oBC554classpath_attribute_name;
/*GEANT_XSLT_TASK*/
T6 r554is_enabled(T554* C);
extern T0*oBC554processor_attribute_value_xalan_java;
extern T0*oBC554extdirs_attribute_name;
extern T0*oBC554processor_attribute_value_xalan_cpp;
extern T0*oBC554parameter_element_name;
/*GEANT_XSLT_TASK*/
void r554interpreting_element_make(T554* C,T0* a1,T0* a2);
extern T0*oBC554processor_attribute_name;
/*LX_FULL_DFA*/
void r231build(T231* C);
/*LX_FULL_DFA*/
void r231build_accept_table(T231* C);
/*LX_FULL_DFA*/
void r231initialize_dfa(T231* C,T0* a1,T2 a2,T2 a3);
/*LX_FULL_DFA*/
void r231put_start_condition(T231* C,T0* a1);
/*LX_FULL_DFA*/
void r231set_nfa_state_ids(T0* a1);
/*LX_FULL_DFA*/
void r231make(T231* C,T0* a1);
/*LX_FULL_DFA*/
void r231build_eof_rules(T231* C,T0* a1,T2 a2,T2 a3);
/*LX_FULL_DFA*/
void r231build_transitions(T231* C,T0* a1);
/*LX_FULL_DFA*/
void r231initialize(T231* C,T0* a1);
/*LX_FULL_DFA*/
void r231put_eob_state(T231* C);
/*LX_FULL_DFA*/
void r231build_rules(T231* C,T0* a1);
/*LX_FULL_DFA*/
void r231build_nxt_table(T231* C);
/*LX_FULL_DFA*/
T0* r231new_state(T231* C,T0* a1);
/*GEANT_EXIT_COMMAND*/
void r577execute(T577* C);
/*LX_DFA_WILDCARD*/
void r226wipe_out(T226* C);
/*LX_DFA_WILDCARD*/
void r226match_substring(T226* C,T0* a1,T2 a2,T2 a3);
/*LX_DFA_WILDCARD*/
T6 r226recognizes(T226* C,T0* a1);
/*LX_DFA_WILDCARD*/
void r226compile(T226* C,T0* a1,T6 a2);
/*LX_DFA_WILDCARD*/
T2 r226longest_end_position(T226* C,T0* a1,T2 a2);
/*XM_DTD_EXTERNAL_ID*/
T6 r802is_equal(T802* C,T0* a1);
/*XM_DTD_EXTERNAL_ID*/
T0* r802twin(T802* C);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185pathname_from_file_system(T185* C,T0* a1,T0* a2);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185is_absolute_pathname(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185current_working_directory(T185* C);
/*KL_UNIX_FILE_SYSTEM*/
void r185cd(T185* C,T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185file_exists(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185directory_exists(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
void r185recursive_delete_directory(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185absolute_pathname(T185* C,T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185file_system(void);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185se_assigned_from(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185is_directory_readable(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185clone(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185dirname(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
void r185delete_file(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
void r185set_current_working_directory(T185* C,T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185cwd(T185* C);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185same_type(T185* C,T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185is_file_readable(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
void r185recursive_create_directory(T0* a1);
extern T0*oBC180tmp_file;
extern int fBC180tmp_file;
/*KL_UNIX_FILE_SYSTEM*/
T0* r185tmp_file(void);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185is_current_file_system(T185* C);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185conforms_to(T185* C,T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
void r185copy_file(T0* a1,T0* a2);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185string_to_pathname(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
void r185rename_file(T0* a1,T0* a2);
/*KL_UNIX_FILE_SYSTEM*/
T2 r185file_time_stamp(T0* a1);
extern T0*oBC185root_directory;
/*KL_UNIX_FILE_SYSTEM*/
T6 r185is_root_directory(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T6 r185same_physical_file(T0* a1,T0* a2);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185pathname_to_string(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185basename(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185canonical_pathname(T0* a1);
/*KL_UNIX_FILE_SYSTEM*/
T0* r185pathname(T0* a1,T0* a2);
extern T0*oBC180tmp_directory;
extern int fBC180tmp_directory;
/*KL_UNIX_FILE_SYSTEM*/
T0* r185tmp_directory(void);
/*XM_END_TAG_CHECKER*/
void r728on_start_tag_finish(T728* C);
/*XM_END_TAG_CHECKER*/
void r728on_finish(T728* C);
/*XM_END_TAG_CHECKER*/
void r728on_content(T728* C,T0* a1);
/*XM_END_TAG_CHECKER*/
void r728make_null(T728* C);
extern T0*oBC138string_equality_tester;
/*XM_END_TAG_CHECKER*/
void r728on_start(T728* C);
/*XM_END_TAG_CHECKER*/
T6 r728is_local_part(T0* a1);
/*XM_END_TAG_CHECKER*/
void r728on_processing_instruction(T728* C,T0* a1,T0* a2);
/*XM_END_TAG_CHECKER*/
void r728on_start_tag(T728* C,T0* a1,T0* a2,T0* a3);
/*XM_END_TAG_CHECKER*/
void r728on_comment(T728* C,T0* a1);
/*XM_END_TAG_CHECKER*/
T0* r728new_string_stack(void);
/*XM_END_TAG_CHECKER*/
void r728on_end_tag(T728* C,T0* a1,T0* a2,T0* a3);
/*XM_END_TAG_CHECKER*/
void r728_673Pon_start(T728* C);
/*XM_END_TAG_CHECKER*/
void r728on_attribute(T728* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_END_TAG_CHECKER*/
void r728_673Pon_start_tag(T728* C,T0* a1,T0* a2,T0* a3);
/*XM_END_TAG_CHECKER*/
void r728on_error(T728* C,T0* a1);
/*XM_END_TAG_CHECKER*/
T6 r728same_string(T0* a1,T0* a2);
/*XM_END_TAG_CHECKER*/
void r728_673Pon_end_tag(T728* C,T0* a1,T0* a2,T0* a3);
/*XM_CALLBACKS_NULL*/
T6 r724is_local_part(T0* a1);
/*LX_NFA_STATE*/
T6 r280is_equal(T280* C,T0* a1);
/*LX_NFA_STATE*/
T6 r280has_transition(T280* C);
/*LX_NFA_STATE*/
T6 r280is_accepting_head(T280* C);
/*LX_NFA_STATE*/
T0* r280twin(T280* C);
/*LX_NFA_STATE*/
T6 r280_ix_60(T280* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
T2 r818yy_at_beginning_of_line(T818* C);
extern T0*oBC741normalized_newline;
extern T0*oBC230integer_array_;
/*XM_EIFFEL_SCANNER_DTD*/
T2 r818start_condition(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818set_input_buffer(T818* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818text_substring(T818* C,T2 a1,T2 a2);
extern T0*oBC741yy_ec_template;
extern int fBC741yy_ec_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_ec_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r818yy_execute_action(T818* C,T2 a1);
extern T0*oBC741yy_def_template;
extern int fBC741yy_def_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_def_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
T3 r818text_item(T818* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
T6 r818end_of_file(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818system_literal_text(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818yy_load_input_buffer(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818make_with_buffer(T818* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
T2 r818yy_null_trans_state(T818* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r818pop_start_condition(T818* C);
extern T0*oBC741yy_accept_template;
extern int fBC741yy_accept_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_accept_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r818read_token(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
T2 r818yy_previous_state(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818yy_refill_input_buffer(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_fixed_array(T0* a1);
extern T0*oBC741yy_meta_template;
extern int fBC741yy_meta_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_meta_template(void);
extern T0*oBC741yy_base_template;
extern int fBC741yy_base_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_base_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r818set_input_stream(T818* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
T2 r818text_count(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818new_file_buffer(T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r818make_scanner(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818yy_initialize(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818_245Pread_token(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818reset(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818push_start_condition(T818* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818text(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818close_input(T818* C);
extern T0*oBC741yy_nxt_template;
extern int fBC741yy_nxt_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_nxt_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r818yy_set_line_column(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
void r818_245Preset(T818* C);
/*XM_EIFFEL_SCANNER_DTD*/
T6 r818valid_start_condition(T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r818_741Pmake_scanner(T818* C);
extern T0*oBC247empty_buffer;
extern int fBC247empty_buffer;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818empty_buffer(void);
extern T0*oBC741yy_chk_template;
extern int fBC741yy_chk_template;
/*XM_EIFFEL_SCANNER_DTD*/
T0* r818yy_chk_template(void);
/*XM_EIFFEL_SCANNER_DTD*/
void r818yy_set_content(T818* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r818_246Pset_input_buffer(T818* C,T0* a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r818set_start_condition(T818* C,T2 a1);
/*XM_EIFFEL_SCANNER_DTD*/
void r818yy_build_tables(T818* C);
extern T0*oBC193case_insensitive_attribute_name;
extern T0*oBC193no_style_warning_attribute_name;
/*GEANT_SE_TASK*/
T0* r193attribute_value(T193* C,T0* a1);
/*GEANT_SE_TASK*/
T0* r193file_system(void);
extern T0*oBC193creation_procedure_attribute_name;
extern T0*oBC16std;
/*GEANT_SE_TASK*/
void r193make(T193* C,T0* a1,T0* a2);
extern T0*oBC28true_attribute_value;
/*GEANT_SE_TASK*/
T6 r193boolean_value(T193* C,T0* a1);
/*GEANT_SE_TASK*/
void r193task_make(T193* C,T0* a1,T0* a2);
extern T0*oBC193executable_attribute_name;
/*GEANT_SE_TASK*/
void r193execute(T193* C);
extern T0*oBC193ace_attribute_name;
/*GEANT_SE_TASK*/
T6 r193is_enabled(T193* C);
extern T0*oBC193root_class_attribute_name;
/*GEANT_SE_TASK*/
T0* r193attribute_value_or_default(T193* C,T0* a1,T0* a2);
extern T0*oBC28false_attribute_value;
/*GEANT_SE_TASK*/
void r193interpreting_element_make(T193* C,T0* a1,T0* a2);
extern T0*oBC193clean_attribute_name;
/*LX_START_CONDITIONS*/
T6 r340extendible(T340* C,T2 a1);
/*LX_START_CONDITIONS*/
void r340move_cursors_right(T340* C,T2 a1,T2 a2);
/*LX_START_CONDITIONS*/
void r340put(T340* C,T0* a1,T2 a2);
/*LX_START_CONDITIONS*/
void r340make_with_initial(T340* C,T2 a1);
/*LX_START_CONDITIONS*/
T0* r340names(T340* C);
/*LX_START_CONDITIONS*/
void r340add_nfa_to_non_exclusive(T340* C,T0* a1);
/*LX_START_CONDITIONS*/
void r340make(T340* C,T2 a1);
/*LX_START_CONDITIONS*/
void r340move_right(T340* C,T2 a1,T2 a2);
/*LX_START_CONDITIONS*/
void r340add_nfa_to_all(T340* C,T0* a1);
/*LX_START_CONDITIONS*/
T0* r340new_cursor(T340* C);
/*LX_START_CONDITIONS*/
void r340put_last(T340* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_start_tag_finish(T671* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_error(T671* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_finish(T671* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_content(T671* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671make_null(T671* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_start(T671* C);
/*XM_STOP_ON_ERROR_FILTER*/
T6 r671is_local_part(T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_processing_instruction(T671* C,T0* a1,T0* a2);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_processing_instruction(T671* C,T0* a1,T0* a2);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_start_tag(T671* C,T0* a1,T0* a2,T0* a3);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_comment(T671* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_end_tag(T671* C,T0* a1,T0* a2,T0* a3);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_start_tag_finish(T671* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_start(T671* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_attribute(T671* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_content(T671* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_start_tag(T671* C,T0* a1,T0* a2,T0* a3);
/*XM_STOP_ON_ERROR_FILTER*/
void r671on_error(T671* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_finish(T671* C);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_comment(T671* C,T0* a1);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_attribute(T671* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_STOP_ON_ERROR_FILTER*/
void r671_673Pon_end_tag(T671* C,T0* a1,T0* a2,T0* a3);
/*GEANT_GEXACE_COMMAND*/
T0* r525file_system(void);
/*GEANT_GEXACE_COMMAND*/
T0* r525clone(T0* a1);
extern T0*oBC526boolean_;
/*GEANT_GEXACE_COMMAND*/
void r525make(T525* C,T0* a1);
/*GEANT_GEXACE_COMMAND*/
T6 r525is_validate_executable(T525* C);
/*GEANT_GEXACE_COMMAND*/
T6 r525is_system_executable(T525* C);
/*GEANT_GEXACE_COMMAND*/
void r525execute(T525* C);
/*GEANT_GEXACE_COMMAND*/
void r525execute_shell(T525* C,T0* a1);
/*GEANT_GEXACE_COMMAND*/
T6 r525is_executable(T525* C);
/*GEANT_GEXACE_COMMAND*/
void r525_191Pmake(T525* C,T0* a1);
/*GEANT_GEXACE_COMMAND*/
T6 r525is_library_executable(T525* C);
extern T0*oBC14arguments;
extern int fBC14arguments;
/*UT_VERSION_NUMBER*/
T0* r770arguments(void);
/*UT_VERSION_NUMBER*/
void r770make(T770* C,T0* a1);
/*UT_VERSION_NUMBER*/
T0* r770message(T770* C,T0* a1);
/*UT_VERSION_NUMBER*/
T0* r770default_message(T770* C);
/*XM_EIFFEL_SCANNER*/
T2 r741yy_at_beginning_of_line(T741* C);
/*XM_EIFFEL_SCANNER*/
T2 r741start_condition(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741yy_chk_template_1(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r741yy_chk_template_2(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r741set_input_buffer(T741* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
T0* r741text_substring(T741* C,T2 a1,T2 a2);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_ec_template(void);
/*XM_EIFFEL_SCANNER*/
void r741yy_execute_action(T741* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_def_template(void);
/*XM_EIFFEL_SCANNER*/
T3 r741text_item(T741* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
T6 r741end_of_file(T741* C);
/*XM_EIFFEL_SCANNER*/
T0* r741system_literal_text(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741yy_load_input_buffer(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741make_with_buffer(T741* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
T2 r741yy_null_trans_state(T741* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
void r741pop_start_condition(T741* C);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_accept_template(void);
/*XM_EIFFEL_SCANNER*/
void r741read_token(T741* C);
/*XM_EIFFEL_SCANNER*/
T2 r741yy_previous_state(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741yy_refill_input_buffer(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741push_start_condition_dtd_ignore(T741* C);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_fixed_array(T0* a1);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_meta_template(void);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_base_template(void);
/*XM_EIFFEL_SCANNER*/
void r741set_input_stream(T741* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
T2 r741text_count(T741* C);
/*XM_EIFFEL_SCANNER*/
T0* r741new_file_buffer(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r741make_scanner(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741yy_initialize(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741reset(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741push_start_condition(T741* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
T0* r741text(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741close_input(T741* C);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_nxt_template(void);
/*XM_EIFFEL_SCANNER*/
void r741yy_set_line_column(T741* C);
/*XM_EIFFEL_SCANNER*/
void r741_245Preset(T741* C);
/*XM_EIFFEL_SCANNER*/
T6 r741valid_start_condition(T2 a1);
/*XM_EIFFEL_SCANNER*/
T0* r741empty_buffer(void);
/*XM_EIFFEL_SCANNER*/
void r741yy_nxt_template_1(T0* a1);
/*XM_EIFFEL_SCANNER*/
void r741yy_nxt_template_2(T0* a1);
/*XM_EIFFEL_SCANNER*/
T0* r741yy_chk_template(void);
/*XM_EIFFEL_SCANNER*/
void r741_246Pset_input_buffer(T741* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
void r741yy_set_content(T741* C,T0* a1);
/*XM_EIFFEL_SCANNER*/
void r741set_start_condition(T741* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
void r741yy_execute_eof_action(T741* C,T2 a1);
/*XM_EIFFEL_SCANNER*/
void r741yy_build_tables(T741* C);
extern T0*oBC529tokens_classname_attribute_name;
/*GEANT_GEYACC_TASK*/
T0* r529attribute_value(T529* C,T0* a1);
/*GEANT_GEYACC_TASK*/
T0* r529file_system(void);
extern T0*oBC529input_filename_attribute_name;
extern T0*oBC529separate_actions_attribute_name;
extern T0*oBC529tokens_filename_attribute_name;
/*GEANT_GEYACC_TASK*/
void r529make(T529* C,T0* a1,T0* a2);
/*GEANT_GEYACC_TASK*/
T6 r529boolean_value(T529* C,T0* a1);
/*GEANT_GEYACC_TASK*/
void r529task_make(T529* C,T0* a1,T0* a2);
extern T0*oBC529output_filename_attribute_name;
/*GEANT_GEYACC_TASK*/
void r529execute(T529* C);
/*GEANT_GEYACC_TASK*/
T6 r529is_enabled(T529* C);
extern T0*oBC529verbose_filename_attribute_name;
/*GEANT_GEYACC_TASK*/
void r529interpreting_element_make(T529* C,T0* a1,T0* a2);
/*GEANT_REDEFINE*/
T6 r615is_executable(T615* C);
/*GEANT_DEFINE_ELEMENT*/
T6 r205has_value(T205* C);
/*GEANT_DEFINE_ELEMENT*/
T0* r205name(T205* C);
/*GEANT_DEFINE_ELEMENT*/
T0* r205attribute_value(T205* C,T0* a1);
extern T0*oBC205name_attribute_name;
/*GEANT_DEFINE_ELEMENT*/
T6 r205has_name(T205* C);
extern T0*oBC205value_attribute_name;
/*GEANT_DEFINE_ELEMENT*/
void r205make(T205* C,T0* a1,T0* a2);
/*GEANT_DEFINE_ELEMENT*/
T0* r205value(T205* C);
/*GEANT_DEFINE_ELEMENT*/
T6 r205is_enabled(T205* C);
/*LX_FULL_AND_REJECT_ERROR*/
T0* r413arguments(void);
/*LX_FULL_AND_REJECT_ERROR*/
void r413make(T413* C);
/*LX_FULL_AND_REJECT_ERROR*/
T0* r413message(T413* C,T0* a1);
/*LX_FULL_AND_REJECT_ERROR*/
T0* r413default_message(T413* C);
/*GEANT_PRECURSOR_TASK*/
T0* r578attribute_value(T578* C,T0* a1);
/*GEANT_PRECURSOR_TASK*/
T0* r578file_system(void);
/*GEANT_PRECURSOR_TASK*/
void r578make(T578* C,T0* a1,T0* a2);
/*GEANT_PRECURSOR_TASK*/
void r578task_make(T578* C,T0* a1,T0* a2);
/*GEANT_PRECURSOR_TASK*/
void r578execute(T578* C);
/*GEANT_PRECURSOR_TASK*/
T6 r578is_enabled(T578* C);
/*GEANT_PRECURSOR_TASK*/
void r578interpreting_element_make(T578* C,T0* a1,T0* a2);
extern T0*oBC578parent_attribute_name;
/*LX_UNRECOGNIZED_RULE_ERROR*/
T0* r426arguments(void);
/*LX_UNRECOGNIZED_RULE_ERROR*/
void r426make(T426* C,T0* a1,T2 a2);
/*LX_UNRECOGNIZED_RULE_ERROR*/
T0* r426message(T426* C,T0* a1);
/*LX_UNRECOGNIZED_RULE_ERROR*/
T0* r426default_message(T426* C);
/*XM_POSITION_TABLE*/
void r710put(T710* C,T0* a1,T0* a2);
/*XM_POSITION_TABLE*/
void r710make(T710* C);
/*XM_POSITION_TABLE*/
T6 r710has(T710* C,T0* a1);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r669callbacks_pipe(T0* a1);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r669new_tree_builder(void);
/*XM_TREE_CALLBACKS_PIPE*/
void r669make(T669* C);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r669new_namespace_resolver(void);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r669new_end_tag_checker(void);
/*XM_TREE_CALLBACKS_PIPE*/
T0* r669new_stop_on_error(void);
/*UT_ERROR_HANDLER*/
void r237make_null(T237* C);
extern T0*oBC238null_output_stream;
extern int fBC238null_output_stream;
/*UT_ERROR_HANDLER*/
T0* r237null_output_stream(void);
/*UT_ERROR_HANDLER*/
T0* r237message(T0* a1);
/*UT_ERROR_HANDLER*/
void r237report_info_message(T237* C,T0* a1);
/*UT_ERROR_HANDLER*/
void r237make_standard(T237* C);
/*UT_ERROR_HANDLER*/
void r237report_error_message(T237* C,T0* a1);
extern T0*oBC202mapped_filename_directory_attribute_name;
extern T0*oBC202exclude_attribute_name;
extern T0*oBC202directory_attribute_name;
/*GEANT_FILESET_ELEMENT*/
T0* r202attribute_value(T202* C,T0* a1);
/*GEANT_FILESET_ELEMENT*/
void r202_27Pmake(T202* C,T0* a1,T0* a2);
/*GEANT_FILESET_ELEMENT*/
T0* r202elements_by_name(T202* C,T0* a1);
extern T0*oBC202include_attribute_name;
/*GEANT_FILESET_ELEMENT*/
void r202make(T202* C,T0* a1,T0* a2);
/*GEANT_FILESET_ELEMENT*/
T6 r202boolean_value(T202* C,T0* a1);
extern T0*oBC202force_attribute_name;
extern T0*oBC202exclude_element_name;
extern T0*oBC13exceptions;
/*GEANT_FILESET_ELEMENT*/
void r202exit_application(T2 a1,T0* a2);
extern T0*oBC202map_element_name;
extern T0*oBC202include_element_name;
extern T0*oBC202mapped_filename_variable_name_attribute_name;
extern T0*oBC202filename_directory_attribute_name;
extern T0*oBC202filename_variable_name_attribute_name;
extern T0*oBC202concat_attribute_name;
/*YY_FILE_BUFFER*/
void r392fill(T392* C);
/*YY_FILE_BUFFER*/
void r392compact_left(T392* C);
/*YY_FILE_BUFFER*/
void r392set_position(T392* C,T2 a1,T2 a2,T2 a3);
/*YY_FILE_BUFFER*/
T0* r392name(T392* C);
/*YY_FILE_BUFFER*/
void r392make_from_string(T392* C,T0* a1);
/*YY_FILE_BUFFER*/
void r392make_from_buffer(T392* C,T0* a1);
/*YY_FILE_BUFFER*/
void r392resize(T392* C);
/*YY_FILE_BUFFER*/
T0* r392new_default_buffer(T2 a1);
/*YY_FILE_BUFFER*/
void r392make_with_size(T392* C,T0* a1,T2 a2);
/*YY_FILE_BUFFER*/
void r392set_file(T392* C,T0* a1);
/*YY_FILE_BUFFER*/
void r392flush(T392* C);
/*LX_MISSING_QUOTE_ERROR*/
T0* r410arguments(void);
/*LX_MISSING_QUOTE_ERROR*/
void r410make(T410* C,T0* a1,T2 a2);
/*LX_MISSING_QUOTE_ERROR*/
T0* r410message(T410* C,T0* a1);
/*LX_MISSING_QUOTE_ERROR*/
T0* r410default_message(T410* C);
/*LX_FULL_AND_META_ERROR*/
T0* r415arguments(void);
/*LX_FULL_AND_META_ERROR*/
void r415make(T415* C);
/*LX_FULL_AND_META_ERROR*/
T0* r415message(T415* C,T0* a1);
/*LX_FULL_AND_META_ERROR*/
T0* r415default_message(T415* C);
/*GEANT_AVAILABLE_COMMAND*/
T0* r581file_system(void);
/*GEANT_AVAILABLE_COMMAND*/
T6 r581is_file_executable(T581* C);
/*GEANT_AVAILABLE_COMMAND*/
void r581execute(T581* C);
/*GEANT_ECHO_COMMAND*/
void r541execute(T541* C);
/*GEANT_RENAME*/
T6 r629is_executable(T629* C);
/*GEANT_INHERIT_ELEMENT*/
void r675make_old(T675* C,T0* a1,T0* a2);
/*GEANT_INHERIT_ELEMENT*/
T0* r675elements_by_name(T675* C,T0* a1);
/*GEANT_INHERIT_ELEMENT*/
void r675make(T675* C,T0* a1,T0* a2);
extern T0*oBC675parent_element_name;
/*GEANT_INHERIT_ELEMENT*/
void r675exit_application(T2 a1,T0* a2);
/*GEANT_INHERIT_ELEMENT*/
void r675interpreting_element_make(T675* C,T0* a1,T0* a2);
/*GEANT_GEANT_COMMAND*/
T0* r537file_system(void);
/*GEANT_GEANT_COMMAND*/
T6 r537is_filename_executable(T537* C);
/*GEANT_GEANT_COMMAND*/
T6 r537is_target_executable(T537* C);
/*GEANT_GEANT_COMMAND*/
void r537execute(T537* C);
/*GEANT_GEANT_COMMAND*/
void r537exit_application(T2 a1,T0* a2);
/*GEANT_GEANT_COMMAND*/
T6 r537is_executable(T537* C);
/*GEANT_PARENT_ELEMENT*/
T0* r676attribute_value(T676* C,T0* a1);
/*GEANT_PARENT_ELEMENT*/
void r676make_old(T676* C,T0* a1,T0* a2);
extern T0*oBC676inherit_attribute_name;
/*GEANT_PARENT_ELEMENT*/
T0* r676elements_by_name(T676* C,T0* a1);
extern T0*oBC676redefine_element_name;
/*GEANT_PARENT_ELEMENT*/
void r676make(T676* C,T0* a1,T0* a2);
extern T0*oBC676rename_element_name;
extern T0*oBC676location_attribute_name;
extern T0*oBC676select_element_name;
/*GEANT_PARENT_ELEMENT*/
void r676exit_application(T2 a1,T0* a2);
/*GEANT_PARENT_ELEMENT*/
void r676interpreting_element_make(T676* C,T0* a1,T0* a2);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_start_tag_finish(T705* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
T0* r705next_open_composite(T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705enable_position_table(T705* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_finish(T705* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_content(T705* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705make_null(T705* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_start(T705* C);
/*XM_CALLBACKS_TO_TREE_FILTER*/
T6 r705is_local_part(T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_processing_instruction(T705* C,T0* a1,T0* a2);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_start_tag(T705* C,T0* a1,T0* a2,T0* a3);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705handle_position(T705* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_comment(T705* C,T0* a1);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_end_tag(T705* C,T0* a1,T0* a2,T0* a3);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_attribute(T705* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_CALLBACKS_TO_TREE_FILTER*/
T0* r705new_namespace(T705* C,T0* a1,T0* a2);
/*XM_CALLBACKS_TO_TREE_FILTER*/
void r705on_error(T705* C,T0* a1);
/*GEANT_MKDIR_COMMAND*/
T0* r543file_system(void);
/*GEANT_MKDIR_COMMAND*/
void r543execute(T543* C);
/*GEANT_MKDIR_COMMAND*/
T6 r543is_executable(T543* C);
/*GEANT_UNSET_COMMAND*/
void r523execute(T523* C);
/*GEANT_UNSET_COMMAND*/
T6 r523is_executable(T523* C);
/*GEANT_GELEX_COMMAND*/
T0* r528file_system(void);
/*GEANT_GELEX_COMMAND*/
T0* r528clone(T0* a1);
/*GEANT_GELEX_COMMAND*/
void r528make(T528* C,T0* a1);
/*GEANT_GELEX_COMMAND*/
void r528execute(T528* C);
/*GEANT_GELEX_COMMAND*/
void r528execute_shell(T528* C,T0* a1);
/*GEANT_GELEX_COMMAND*/
T6 r528is_executable(T528* C);
/*GEANT_GELEX_COMMAND*/
void r528_191Pmake(T528* C,T0* a1);
/*XM_DTD_ELEMENT_CONTENT*/
T6 r806is_equal(T806* C,T0* a1);
/*XM_DTD_ELEMENT_CONTENT*/
void r806make_choice(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806make_mixed(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806set_content_mixed(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806make_empty(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806set_default(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806make_any(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806make_sequence(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806make_list(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806make_name(T806* C,T0* a1);
/*XM_DTD_ELEMENT_CONTENT*/
T0* r806twin(T806* C);
/*XM_DTD_ELEMENT_CONTENT*/
void r806set_content_any(T806* C);
/*LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR*/
T0* r453arguments(void);
/*LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR*/
void r453make(T453* C,T0* a1,T2 a2);
/*LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR*/
T0* r453message(T453* C,T0* a1);
/*LX_NEGATIVE_RANGE_IN_CHARACTER_CLASS_ERROR*/
T0* r453default_message(T453* C);
/*GEANT_SELECT*/
T6 r599is_executable(T599* C);
/*GEANT_GEXMLSPLIT_COMMAND*/
T0* r539file_system(void);
/*GEANT_GEXMLSPLIT_COMMAND*/
T0* r539clone(T0* a1);
/*GEANT_GEXMLSPLIT_COMMAND*/
void r539make(T539* C,T0* a1);
/*GEANT_GEXMLSPLIT_COMMAND*/
void r539execute(T539* C);
/*GEANT_GEXMLSPLIT_COMMAND*/
void r539execute_shell(T539* C,T0* a1);
/*GEANT_GEXMLSPLIT_COMMAND*/
T6 r539is_executable(T539* C);
/*GEANT_GEXMLSPLIT_COMMAND*/
void r539_191Pmake(T539* C,T0* a1);
/*LX_SYMBOL_CLASS*/
T2 r398new_capacity(T2 a1);
/*LX_SYMBOL_CLASS*/
void r398copy(T398* C,T0* a1);
/*LX_SYMBOL_CLASS*/
T6 r398extendible(T398* C,T2 a1);
/*LX_SYMBOL_CLASS*/
T2 r398last(T398* C);
/*LX_SYMBOL_CLASS*/
void r398put(T398* C,T2 a1);
/*LX_SYMBOL_CLASS*/
T6 r398is_equal(T398* C,T0* a1);
/*LX_SYMBOL_CLASS*/
void r398move_all_cursors_after(T398* C);
/*LX_SYMBOL_CLASS*/
T6 r398se_assigned_from(T0* a1);
/*LX_SYMBOL_CLASS*/
T0* r398clone(T0* a1);
/*LX_SYMBOL_CLASS*/
void r398sort(T398* C);
/*LX_SYMBOL_CLASS*/
T6 r398arrayed_has(T398* C,T2 a1);
/*LX_SYMBOL_CLASS*/
T6 r398same_type(T398* C,T0* a1);
/*LX_SYMBOL_CLASS*/
void r398make(T398* C,T2 a1);
/*LX_SYMBOL_CLASS*/
void r398convert(T398* C,T0* a1);
extern T0*oBC398sorter;
extern int fBC398sorter;
/*LX_SYMBOL_CLASS*/
T0* r398sorter(void);
/*LX_SYMBOL_CLASS*/
T6 r398conforms_to(T398* C,T0* a1);
/*LX_SYMBOL_CLASS*/
T6 r398has(T398* C,T2 a1);
/*LX_SYMBOL_CLASS*/
void r398resize(T398* C,T2 a1);
/*LX_SYMBOL_CLASS*/
T0* r398twin(T398* C);
/*LX_SYMBOL_CLASS*/
void r398force_last(T398* C,T2 a1);
/*LX_SYMBOL_CLASS*/
T0* r398new_cursor(T398* C);
/*GEANT_HACT_TASK*/
T0* r197attribute_value(T197* C,T0* a1);
/*GEANT_HACT_TASK*/
T0* r197file_system(void);
extern T0*oBC197fish_attribute_name;
/*GEANT_HACT_TASK*/
void r197make(T197* C,T0* a1,T0* a2);
extern T0*oBC197finalize_attribute_name;
/*GEANT_HACT_TASK*/
T6 r197boolean_value(T197* C,T0* a1);
/*GEANT_HACT_TASK*/
void r197task_make(T197* C,T0* a1,T0* a2);
/*GEANT_HACT_TASK*/
void r197execute(T197* C);
extern T0*oBC197ace_attribute_name;
/*GEANT_HACT_TASK*/
T6 r197is_enabled(T197* C);
/*GEANT_HACT_TASK*/
T0* r197attribute_value_or_default(T197* C,T0* a1,T0* a2);
extern T0*oBC197system_attribute_name;
/*GEANT_HACT_TASK*/
void r197interpreting_element_make(T197* C,T0* a1,T0* a2);
extern T0*oBC197clean_attribute_name;
/*GEANT_FILESET*/
void r204remove_fileset_entry(T204* C,T0* a1);
/*GEANT_FILESET*/
T6 r204is_in_gobo_32_format(T204* C);
/*GEANT_FILESET*/
T0* r204item_mapped_filename(T204* C);
/*GEANT_FILESET*/
void r204set_include_wc_string(T204* C,T0* a1);
/*GEANT_FILESET*/
T0* r204file_system(void);
/*GEANT_FILESET*/
void r204scan_internal(T204* C,T0* a1);
/*GEANT_FILESET*/
void r204make(T204* C,T0* a1);
/*GEANT_FILESET*/
void r204update_project_variables(T204* C);
/*GEANT_FILESET*/
void r204forth(T204* C);
/*GEANT_FILESET*/
void r204set_exclude_wc_string(T204* C,T0* a1);
/*GEANT_FILESET*/
void r204start(T204* C);
/*GEANT_FILESET*/
void r204execute(T204* C);
/*GEANT_FILESET*/
T6 r204is_file_outofdate(T0* a1,T0* a2);
/*GEANT_FILESET*/
void r204remove_project_variables(T204* C);
/*GEANT_FILESET*/
void r204add_fileset_entry_if_necessary(T204* C,T0* a1);
/*GEANT_FILESET*/
T0* r204item_filename(T204* C);
/*GEANT_FILESET*/
T6 r204is_executable(T204* C);
/*GEANT_FILESET*/
T6 r204is_in_gobo_31_format(T204* C);
extern int fBC204set_convert_to_filesystem;
/*GEANT_FILESET*/
void r204set_convert_to_filesystem(T204* C,T6 a1);
extern T0*oBC542directory_attribute_name;
/*GEANT_MKDIR_TASK*/
T0* r542attribute_value(T542* C,T0* a1);
/*GEANT_MKDIR_TASK*/
T0* r542file_system(void);
/*GEANT_MKDIR_TASK*/
void r542make(T542* C,T0* a1,T0* a2);
/*GEANT_MKDIR_TASK*/
void r542task_make(T542* C,T0* a1,T0* a2);
/*GEANT_MKDIR_TASK*/
void r542execute(T542* C);
/*GEANT_MKDIR_TASK*/
T6 r542is_enabled(T542* C);
/*GEANT_MKDIR_TASK*/
void r542interpreting_element_make(T542* C,T0* a1,T0* a2);
/*XM_COMMENT*/
void r919make(T919* C,T0* a1,T0* a2);
/*LX_NFA*/
void r339copy(T339* C,T0* a1);
/*LX_NFA*/
T6 r339is_equal(T339* C,T0* a1);
/*LX_NFA*/
void r339build_closure(T339* C);
/*LX_NFA*/
T6 r339se_assigned_from(T0* a1);
/*LX_NFA*/
T0* r339clone(T0* a1);
/*LX_NFA*/
void r339make_symbol(T339* C,T2 a1,T6 a2);
/*LX_NFA*/
T6 r339same_type(T339* C,T0* a1);
/*LX_NFA*/
void r339build_optional(T339* C);
/*LX_NFA*/
T6 r339conforms_to(T339* C,T0* a1);
/*LX_NFA*/
void r339build_positive_closure(T339* C);
/*LX_NFA*/
T0* r339twin(T339* C);
/*LX_NFA*/
void r339build_concatenation(T339* C,T0* a1);
/*LX_NFA*/
void r339make_epsilon(T339* C,T6 a1);
/*LX_NFA*/
void r339make_symbol_class(T339* C,T0* a1,T6 a2);
/*LX_NFA*/
void r339build_union(T339* C,T0* a1);
/*UT_USAGE_MESSAGE*/
T0* r771arguments(void);
/*UT_USAGE_MESSAGE*/
void r771make(T771* C,T0* a1);
/*UT_USAGE_MESSAGE*/
T0* r771message(T771* C,T0* a1);
/*UT_USAGE_MESSAGE*/
T0* r771default_message(T771* C);
/*GEANT_COPY_TASK*/
T0* r548attribute_value(T548* C,T0* a1);
extern T0*oBC548file_attribute_name;
extern T0*oBC548fileset_element_name;
/*GEANT_COPY_TASK*/
T0* r548file_system(void);
extern T0*oBC548to_directory_attribute_name;
extern T0*oBC548to_file_attribute_name;
/*GEANT_COPY_TASK*/
void r548make(T548* C,T0* a1,T0* a2);
/*GEANT_COPY_TASK*/
T6 r548boolean_value(T548* C,T0* a1);
extern T0*oBC548force_attribute_name;
/*GEANT_COPY_TASK*/
void r548task_make(T548* C,T0* a1,T0* a2);
/*GEANT_COPY_TASK*/
void r548execute(T548* C);
/*GEANT_COPY_TASK*/
T6 r548is_enabled(T548* C);
/*GEANT_COPY_TASK*/
void r548interpreting_element_make(T548* C,T0* a1,T0* a2);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184pathname_from_file_system(T184* C,T0* a1,T0* a2);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184is_absolute_pathname(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184current_working_directory(T184* C);
/*KL_WINDOWS_FILE_SYSTEM*/
void r184cd(T184* C,T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184file_exists(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184directory_exists(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
void r184recursive_delete_directory(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184absolute_pathname(T184* C,T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184current_drive(T184* C);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184file_system(void);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184se_assigned_from(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184is_directory_readable(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184clone(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184dirname(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
void r184delete_file(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
void r184set_current_working_directory(T184* C,T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184cwd(T184* C);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184same_type(T184* C,T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184is_file_readable(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
void r184recursive_create_directory(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184tmp_file(void);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184is_current_file_system(T184* C);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184conforms_to(T184* C,T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
void r184copy_file(T0* a1,T0* a2);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184string_to_pathname(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
void r184rename_file(T0* a1,T0* a2);
/*KL_WINDOWS_FILE_SYSTEM*/
T2 r184file_time_stamp(T0* a1);
extern T0*oBC184root_directory;
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184is_relative_pathname(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184is_root_directory(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T6 r184same_physical_file(T0* a1,T0* a2);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184pathname_to_string(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184canonical_pathname(T0* a1);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184pathname(T0* a1,T0* a2);
/*KL_WINDOWS_FILE_SYSTEM*/
T0* r184tmp_directory(void);
/*KL_BINARY_INPUT_FILE*/
T6 r788is_closed(T788* C);
/*KL_BINARY_INPUT_FILE*/
void r788old_close(T788* C);
/*KL_BINARY_INPUT_FILE*/
void r788open_read(T788* C);
/*KL_BINARY_INPUT_FILE*/
void r788read_character(T788* C);
/*KL_BINARY_INPUT_FILE*/
void r788fill_buffer(T788* C);
/*KL_BINARY_INPUT_FILE*/
void r788close(T788* C);
/*KL_BINARY_INPUT_FILE*/
void r788make(T788* C,T0* a1);
/*KL_BINARY_INPUT_FILE*/
void r788connect_to(T788* C,T0* a1);
/*KL_BINARY_INPUT_FILE*/
void r788read_string(T788* C,T2 a1);
/*KL_BINARY_INPUT_FILE*/
void r788old_read_byte(T788* C);
/*KL_BINARY_INPUT_FILE*/
void r788old_open_read(T788* C);
/*LX_DESCRIPTION*/
void r239make(T239* C);
/*LX_DESCRIPTION*/
void r239create_equiv_classes(T239* C);
/*GEANT_DIRECTORYSET*/
void r547remove_fileset_entry(T547* C,T0* a1);
/*GEANT_DIRECTORYSET*/
void r547set_include_wc_string(T547* C,T0* a1);
/*GEANT_DIRECTORYSET*/
T0* r547file_system(void);
/*GEANT_DIRECTORYSET*/
void r547scan_internal(T547* C,T0* a1);
/*GEANT_DIRECTORYSET*/
void r547make(T547* C,T0* a1);
/*GEANT_DIRECTORYSET*/
void r547update_project_variables(T547* C);
/*GEANT_DIRECTORYSET*/
void r547forth(T547* C);
/*GEANT_DIRECTORYSET*/
T0* r547item_directory_name(T547* C);
/*GEANT_DIRECTORYSET*/
void r547set_exclude_wc_string(T547* C,T0* a1);
/*GEANT_DIRECTORYSET*/
void r547start(T547* C);
/*GEANT_DIRECTORYSET*/
void r547execute(T547* C);
/*GEANT_DIRECTORYSET*/
void r547add_fileset_entry_if_necessary(T547* C,T0* a1);
/*GEANT_DIRECTORYSET*/
T6 r547is_executable(T547* C);
/*XM_EIFFEL_PARSER_NAME*/
T0* r807last(T807* C);
/*XM_EIFFEL_PARSER_NAME*/
T6 r807is_equal(T807* C,T0* a1);
/*XM_EIFFEL_PARSER_NAME*/
T0* r807item(T807* C,T2 a1);
/*XM_EIFFEL_PARSER_NAME*/
T0* r807clone(T0* a1);
/*XM_EIFFEL_PARSER_NAME*/
void r807make(T807* C);
/*XM_EIFFEL_PARSER_NAME*/
T2 r807hash_code(T807* C);
/*XM_EIFFEL_PARSER_NAME*/
T6 r807same_string(T0* a1,T0* a2);
/*XM_EIFFEL_PARSER_NAME*/
T0* r807twin(T807* C);
/*XM_EIFFEL_PARSER_NAME*/
void r807force_last(T807* C,T0* a1);
/*XM_EIFFEL_PARSER_NAME*/
T0* r807ns_prefix(T807* C);
/*XM_EIFFEL_PARSER_NAME*/
T0* r807local_part(T807* C);
/*XM_EIFFEL_PARSER_NAME*/
T6 r807is_namespace_name(T807* C);
/*XM_EIFFEL_PARSER_NAME*/
T0* r807new_string_bilinked_list(void);
/*GEANT_GEANT_TASK*/
T0* r536attribute_value(T536* C,T0* a1);
extern T0*oBC536start_target_attribute_name;
extern T0*oBC536fileset_element_name;
/*GEANT_GEANT_TASK*/
T0* r536file_system(void);
extern T0*oBC536filename_attribute_name;
/*GEANT_GEANT_TASK*/
void r536make(T536* C,T0* a1,T0* a2);
/*GEANT_GEANT_TASK*/
T6 r536boolean_value(T536* C,T0* a1);
/*GEANT_GEANT_TASK*/
void r536task_make(T536* C,T0* a1,T0* a2);
/*GEANT_GEANT_TASK*/
void r536execute(T536* C);
/*GEANT_GEANT_TASK*/
T6 r536is_enabled(T536* C);
extern T0*oBC536reuse_variables_attribute_name;
/*GEANT_GEANT_TASK*/
void r536interpreting_element_make(T536* C,T0* a1,T0* a2);
/*GEANT_GEYACC_COMMAND*/
T0* r530file_system(void);
/*GEANT_GEYACC_COMMAND*/
T0* r530clone(T0* a1);
/*GEANT_GEYACC_COMMAND*/
void r530make(T530* C,T0* a1);
/*GEANT_GEYACC_COMMAND*/
void r530execute(T530* C);
/*GEANT_GEYACC_COMMAND*/
void r530execute_shell(T530* C,T0* a1);
/*GEANT_GEYACC_COMMAND*/
T6 r530is_executable(T530* C);
/*GEANT_GEYACC_COMMAND*/
void r530_191Pmake(T530* C,T0* a1);
/*GEANT_GEPP_COMMAND*/
T0* r532file_system(void);
/*GEANT_GEPP_COMMAND*/
T0* r532clone(T0* a1);
/*GEANT_GEPP_COMMAND*/
void r532create_directory(T532* C,T0* a1);
/*GEANT_GEPP_COMMAND*/
T6 r532is_file_executable(T532* C);
/*GEANT_GEPP_COMMAND*/
void r532make(T532* C,T0* a1);
/*GEANT_GEPP_COMMAND*/
void r532execute(T532* C);
/*GEANT_GEPP_COMMAND*/
T6 r532is_file_outofdate(T0* a1,T0* a2);
/*GEANT_GEPP_COMMAND*/
void r532execute_shell(T532* C,T0* a1);
/*GEANT_GEPP_COMMAND*/
T6 r532is_executable(T532* C);
/*GEANT_GEPP_COMMAND*/
void r532_191Pmake(T532* C,T0* a1);
/*GEANT_GEPP_COMMAND*/
T6 r532is_fileset_executable(T532* C);
/*XM_CHARACTER_DATA*/
void r704make(T704* C,T0* a1,T0* a2);
/*KL_NULL_TEXT_OUTPUT_STREAM*/
void r481put_line(T0* a1);
/*GEANT_EXEC_TASK*/
T0* r201attribute_value(T201* C,T0* a1);
extern T0*oBC201fileset_element_name;
/*GEANT_EXEC_TASK*/
T0* r201file_system(void);
/*GEANT_EXEC_TASK*/
void r201make(T201* C,T0* a1,T0* a2);
/*GEANT_EXEC_TASK*/
T6 r201boolean_value(T201* C,T0* a1);
/*GEANT_EXEC_TASK*/
void r201task_make(T201* C,T0* a1,T0* a2);
extern T0*oBC201executable_attribute_name;
/*GEANT_EXEC_TASK*/
void r201execute(T201* C);
/*GEANT_EXEC_TASK*/
T6 r201is_enabled(T201* C);
extern T0*oBC201accept_errors_attribute_name;
/*GEANT_EXEC_TASK*/
void r201interpreting_element_make(T201* C,T0* a1,T0* a2);
/*XM_NAMESPACE_RESOLVER*/
void r723on_start_tag_finish(T723* C);
/*XM_NAMESPACE_RESOLVER*/
void r723on_finish(T723* C);
/*XM_NAMESPACE_RESOLVER*/
void r723on_content(T723* C,T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r723make_null(T723* C);
/*XM_NAMESPACE_RESOLVER*/
void r723on_start(T723* C);
/*XM_NAMESPACE_RESOLVER*/
T6 r723is_local_part(T0* a1);
/*XM_NAMESPACE_RESOLVER*/
T6 r723is_xmlns(T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r723on_processing_instruction(T723* C,T0* a1,T0* a2);
/*XM_NAMESPACE_RESOLVER*/
T0* r723new_string_queue(void);
/*XM_NAMESPACE_RESOLVER*/
void r723on_start_tag(T723* C,T0* a1,T0* a2,T0* a3);
/*XM_NAMESPACE_RESOLVER*/
T6 r723has_prefix(T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r723on_comment(T723* C,T0* a1);
/*XM_NAMESPACE_RESOLVER*/
void r723on_end_tag(T723* C,T0* a1,T0* a2,T0* a3);
/*XM_NAMESPACE_RESOLVER*/
void r723_673Pon_start_tag_finish(T723* C);
extern T0*oBC160xmlns;
/*XM_NAMESPACE_RESOLVER*/
void r723attributes_make(T723* C);
/*XM_NAMESPACE_RESOLVER*/
void r723on_attribute(T723* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_NAMESPACE_RESOLVER*/
void r723on_error(T723* C,T0* a1);
/*XM_NAMESPACE_RESOLVER*/
T6 r723same_string(T0* a1,T0* a2);
/*XM_NAMESPACE_RESOLVER*/
void r723attributes_remove(T723* C);
/*XM_NAMESPACE_RESOLVER*/
void r723_673Pon_end_tag(T723* C,T0* a1,T0* a2,T0* a3);
/*XM_NAMESPACE_RESOLVER*/
void r723attributes_force(T723* C,T0* a1,T0* a2,T0* a3);
/*XM_EIFFEL_CHARACTER_ENTITY*/
void r769from_hexadecimal(T769* C,T0* a1);
extern T0*oBC57utf8;
/*XM_EIFFEL_CHARACTER_ENTITY*/
T0* r769to_utf8(T769* C);
/*XM_EIFFEL_CHARACTER_ENTITY*/
T6 r769is_valid(T769* C);
/*XM_EIFFEL_CHARACTER_ENTITY*/
void r769from_decimal(T769* C,T0* a1);
extern T0*oBC51unicode;
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r874new_string_string_table(void);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T6 r874shallow_has(T874* C,T0* a1);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
void r874make(T874* C);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r874resolve(T874* C,T0* a1);
extern T0*oBC874default_pseudo_prefix;
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T6 r874has(T874* C,T0* a1);
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
T0* r874resolve_default(T874* C);
extern T0*oBC874default_namespace;
/*XM_NAMESPACE_RESOLVER_CONTEXT*/
void r874pop(T874* C);
/*LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR*/
T0* r414arguments(void);
/*LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR*/
void r414make(T414* C);
/*LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR*/
T0* r414message(T414* C,T0* a1);
/*LX_FULL_AND_VARIABLE_TRAILING_CONTEXT_ERROR*/
T0* r414default_message(T414* C);
/*GEANT_COPY_COMMAND*/
T6 r549is_fileset_to_directory_executable(T549* C);
/*GEANT_COPY_COMMAND*/
T0* r549file_system(void);
/*GEANT_COPY_COMMAND*/
void r549create_directory(T549* C,T0* a1);
/*GEANT_COPY_COMMAND*/
void r549create_directory_for_pathname(T549* C,T0* a1);
/*GEANT_COPY_COMMAND*/
void r549copy_file(T549* C,T0* a1,T0* a2);
/*GEANT_COPY_COMMAND*/
void r549execute(T549* C);
/*GEANT_COPY_COMMAND*/
T6 r549is_file_outofdate(T0* a1,T0* a2);
/*GEANT_COPY_COMMAND*/
T6 r549is_file_to_directory_executable(T549* C);
/*GEANT_COPY_COMMAND*/
T6 r549is_file_to_file_executable(T549* C);
/*GEANT_COPY_COMMAND*/
T6 r549is_executable(T549* C);
extern T0*oBC574source_attribute_name;
extern T0*oBC574target_attribute_name;
/*GEANT_OUTOFDATE_TASK*/
T0* r574attribute_value(T574* C,T0* a1);
extern T0*oBC574fileset_element_name;
/*GEANT_OUTOFDATE_TASK*/
T0* r574file_system(void);
extern T0*oBC574true_value_attribute_name;
/*GEANT_OUTOFDATE_TASK*/
void r574make(T574* C,T0* a1,T0* a2);
/*GEANT_OUTOFDATE_TASK*/
void r574task_make(T574* C,T0* a1,T0* a2);
/*GEANT_OUTOFDATE_TASK*/
void r574execute(T574* C);
/*GEANT_OUTOFDATE_TASK*/
T6 r574is_enabled(T574* C);
extern T0*oBC574false_value_attribute_name;
/*GEANT_OUTOFDATE_TASK*/
void r574interpreting_element_make(T574* C,T0* a1,T0* a2);
extern T0*oBC574variable_attribute_name;
/*LX_START_CONDITION*/
void r341make(T341* C,T0* a1,T2 a2,T6 a3);
/*TEXT_FILE_READ*/
void r650disconnect(T650* C);
/*TEXT_FILE_READ*/
void r650connect_to(T650* C,T0* a1);
/*KL_BINARY_OUTPUT_FILE*/
T6 r782is_closed(T782* C);
/*KL_BINARY_OUTPUT_FILE*/
void r782old_close(T782* C);
/*KL_BINARY_OUTPUT_FILE*/
void r782old_open_write(T782* C);
/*KL_BINARY_OUTPUT_FILE*/
void r782close(T782* C);
/*KL_BINARY_OUTPUT_FILE*/
void r782make(T782* C,T0* a1);
/*KL_BINARY_OUTPUT_FILE*/
void r782put_byte(T782* C,T2 a1);
/*KL_BINARY_OUTPUT_FILE*/
void r782old_put_string(T782* C,T0* a1);
/*KL_BINARY_OUTPUT_FILE*/
void r782connect_to(T782* C,T0* a1);
/*KL_BINARY_OUTPUT_FILE*/
void r782old_make(T782* C);
/*KL_BINARY_OUTPUT_FILE*/
void r782open_write(T782* C);
/*KL_BINARY_OUTPUT_FILE*/
void r782write_buffer(T782* C);
extern T0*oBC683target_attribute_name;
/*GEANT_REDEFINE_ELEMENT*/
T0* r683attribute_value(T683* C,T0* a1);
/*GEANT_REDEFINE_ELEMENT*/
void r683make(T683* C,T0* a1,T0* a2);
/*GEANT_REDEFINE_ELEMENT*/
void r683interpreting_element_make(T683* C,T0* a1,T0* a2);
extern T0*oBC534feature_attribute_name;
extern T0*oBC534define_element_name;
/*GEANT_GETEST_TASK*/
T0* r534attribute_value(T534* C,T0* a1);
/*GEANT_GETEST_TASK*/
T0* r534file_system(void);
extern T0*oBC534config_filename_attribute_name;
/*GEANT_GETEST_TASK*/
T0* r534elements_by_name(T534* C,T0* a1);
/*GEANT_GETEST_TASK*/
void r534make(T534* C,T0* a1,T0* a2);
/*GEANT_GETEST_TASK*/
void r534task_make(T534* C,T0* a1,T0* a2);
extern T0*oBC534compile_attribute_name;
/*GEANT_GETEST_TASK*/
void r534execute(T534* C);
/*GEANT_GETEST_TASK*/
T6 r534is_enabled(T534* C);
extern T0*oBC534class_attribute_name;
/*GEANT_GETEST_TASK*/
void r534interpreting_element_make(T534* C,T0* a1,T0* a2);
/*LX_RULE*/
void r254make_default(T254* C,T2 a1);
/*LX_RULE*/
T6 r254is_equal(T254* C,T0* a1);
extern T0*oBC254dummy_pattern;
extern int fBC254dummy_pattern;
/*LX_RULE*/
T0* r254dummy_pattern(void);
extern T0*oBC254dummy_action;
extern int fBC254dummy_action;
/*LX_RULE*/
T0* r254dummy_action(void);
/*LX_RULE*/
T6 r254_ix_60(T254* C,T0* a1);
/*GEANT_MOVE_TASK*/
T0* r550attribute_value(T550* C,T0* a1);
extern T0*oBC550file_attribute_name;
extern T0*oBC550fileset_element_name;
/*GEANT_MOVE_TASK*/
T0* r550file_system(void);
extern T0*oBC550to_directory_attribute_name;
extern T0*oBC550to_file_attribute_name;
/*GEANT_MOVE_TASK*/
void r550make(T550* C,T0* a1,T0* a2);
/*GEANT_MOVE_TASK*/
void r550task_make(T550* C,T0* a1,T0* a2);
/*GEANT_MOVE_TASK*/
void r550execute(T550* C);
/*GEANT_MOVE_TASK*/
T6 r550is_enabled(T550* C);
/*GEANT_MOVE_TASK*/
void r550interpreting_element_make(T550* C,T0* a1,T0* a2);
/*KL_DIRECTORY*/
T6 r696is_closed(T696* C);
/*KL_DIRECTORY*/
T6 r696old_end_of_input(T696* C);
/*KL_DIRECTORY*/
void r696open_read(T696* C);
/*KL_DIRECTORY*/
T0* r696file_system(void);
/*KL_DIRECTORY*/
T0* r696clone(T0* a1);
/*KL_DIRECTORY*/
void r696create_directory(T696* C);
/*KL_DIRECTORY*/
T6 r696is_open_read(T696* C);
/*KL_DIRECTORY*/
void r696close(T696* C);
/*KL_DIRECTORY*/
void r696make(T696* C,T0* a1);
/*KL_DIRECTORY*/
T6 r696exists(T696* C);
/*KL_DIRECTORY*/
void r696recursive_create_directory(T696* C);
/*KL_DIRECTORY*/
void r696read_entry(T696* C);
/*KL_DIRECTORY*/
void r696delete(T696* C);
/*KL_DIRECTORY*/
void r696recursive_delete(T696* C);
/*KL_DIRECTORY*/
T6 r696is_readable(T696* C);
extern T0*oBC682target_attribute_name;
/*GEANT_SELECT_ELEMENT*/
T0* r682attribute_value(T682* C,T0* a1);
/*GEANT_SELECT_ELEMENT*/
void r682make(T682* C,T0* a1,T0* a2);
/*GEANT_SELECT_ELEMENT*/
void r682interpreting_element_make(T682* C,T0* a1,T0* a2);
/*GEANT_SETENV_TASK*/
T0* r552attribute_value(T552* C,T0* a1);
/*GEANT_SETENV_TASK*/
T0* r552file_system(void);
extern T0*oBC552name_attribute_name;
extern T0*oBC552value_attribute_name;
/*GEANT_SETENV_TASK*/
void r552make(T552* C,T0* a1,T0* a2);
/*GEANT_SETENV_TASK*/
void r552task_make(T552* C,T0* a1,T0* a2);
/*GEANT_SETENV_TASK*/
void r552execute(T552* C);
/*GEANT_SETENV_TASK*/
T6 r552is_enabled(T552* C);
/*GEANT_SETENV_TASK*/
void r552interpreting_element_make(T552* C,T0* a1,T0* a2);
/*GEANT_HACT_COMMAND*/
T6 r198is_cleanable(T198* C);
/*GEANT_HACT_COMMAND*/
T0* r198file_system(void);
/*GEANT_HACT_COMMAND*/
T0* r198clone(T0* a1);
/*GEANT_HACT_COMMAND*/
void r198execute_clean(T198* C);
/*GEANT_HACT_COMMAND*/
void r198execute_compile(T198* C);
/*GEANT_HACT_COMMAND*/
T6 r198is_compilable(T198* C);
/*GEANT_HACT_COMMAND*/
void r198execute(T198* C);
/*GEANT_HACT_COMMAND*/
void r198execute_shell(T198* C,T0* a1);
/*GEANT_HACT_COMMAND*/
T6 r198is_executable(T198* C);
/*GEANT_ISE_TASK*/
T0* r195attribute_value(T195* C,T0* a1);
/*GEANT_ISE_TASK*/
T0* r195file_system(void);
/*GEANT_ISE_TASK*/
void r195make(T195* C,T0* a1,T0* a2);
extern T0*oBC195finalize_attribute_name;
/*GEANT_ISE_TASK*/
T6 r195boolean_value(T195* C,T0* a1);
/*GEANT_ISE_TASK*/
void r195task_make(T195* C,T0* a1,T0* a2);
/*GEANT_ISE_TASK*/
void r195execute(T195* C);
extern T0*oBC195ace_attribute_name;
/*GEANT_ISE_TASK*/
T6 r195is_enabled(T195* C);
/*GEANT_ISE_TASK*/
T0* r195attribute_value_or_default(T195* C,T0* a1,T0* a2);
extern T0*oBC195finish_freezing_attribute_name;
extern T0*oBC195system_attribute_name;
/*GEANT_ISE_TASK*/
void r195interpreting_element_make(T195* C,T0* a1,T0* a2);
extern T0*oBC195clean_attribute_name;
/*YY_BUFFER*/
void r393set_position(T393* C,T2 a1,T2 a2,T2 a3);
/*YY_BUFFER*/
T0* r393name(void);
/*YY_BUFFER*/
void r393make(T393* C,T0* a1);
/*YY_BUFFER*/
void r393make_from_buffer(T393* C,T0* a1);
/*YY_BUFFER*/
T0* r393new_default_buffer(T2 a1);
/*GEANT_FILESET_ENTRY*/
T6 r496is_equal(T496* C,T0* a1);
/*GEANT_FILESET_ENTRY*/
T0* r496file_system(void);
/*GEANT_FILESET_ENTRY*/
void r496make(T496* C,T0* a1,T0* a2);
/*GEANT_FILESET_ENTRY*/
T2 r496hash_code(T496* C);
/*GEANT_FILESET_ENTRY*/
T0* r496mapped_filename_converted(T496* C);
/*GEANT_FILESET_ENTRY*/
T0* r496filename_converted(T496* C);
/*LX_CHARACTER_OUT_OF_RANGE_ERROR*/
T0* r409arguments(void);
/*LX_CHARACTER_OUT_OF_RANGE_ERROR*/
void r409make(T409* C,T0* a1,T2 a2,T0* a3);
/*LX_CHARACTER_OUT_OF_RANGE_ERROR*/
T0* r409message(T409* C,T0* a1);
/*LX_CHARACTER_OUT_OF_RANGE_ERROR*/
T0* r409default_message(T409* C);
extern T0*oBC544directory_attribute_name;
/*GEANT_DELETE_TASK*/
T0* r544attribute_value(T544* C,T0* a1);
extern T0*oBC544file_attribute_name;
extern T0*oBC544fileset_element_name;
/*GEANT_DELETE_TASK*/
T0* r544file_system(void);
extern T0*oBC544directoryset_element_name;
/*GEANT_DELETE_TASK*/
void r544make(T544* C,T0* a1,T0* a2);
/*GEANT_DELETE_TASK*/
void r544task_make(T544* C,T0* a1,T0* a2);
/*GEANT_DELETE_TASK*/
void r544execute(T544* C);
/*GEANT_DELETE_TASK*/
T6 r544is_enabled(T544* C);
/*GEANT_DELETE_TASK*/
void r544interpreting_element_make(T544* C,T0* a1,T0* a2);
/*XM_DTD_ATTRIBUTE_CONTENT*/
T6 r804is_value_required(T804* C);
/*XM_DTD_ATTRIBUTE_CONTENT*/
T6 r804is_equal(T804* C,T0* a1);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r804set_default_value(T804* C,T0* a1);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r804make(T804* C);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r804copy_default(T804* C,T0* a1);
/*XM_DTD_ATTRIBUTE_CONTENT*/
T0* r804twin(T804* C);
/*XM_DTD_ATTRIBUTE_CONTENT*/
void r804set_value_fixed(T804* C,T0* a1);
/*GEANT_GETEST_COMMAND*/
T0* r535file_system(void);
/*GEANT_GETEST_COMMAND*/
T0* r535clone(T0* a1);
/*GEANT_GETEST_COMMAND*/
void r535make(T535* C,T0* a1);
/*GEANT_GETEST_COMMAND*/
void r535execute(T535* C);
/*GEANT_GETEST_COMMAND*/
void r535execute_shell(T535* C,T0* a1);
/*GEANT_GETEST_COMMAND*/
T6 r535is_executable(T535* C);
/*GEANT_GETEST_COMMAND*/
void r535_191Pmake(T535* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729new_namespace_name(void);
/*XM_EIFFEL_PARSER*/
T0* r729onstring_utf8(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729on_start_tag_finish(T729* C);
/*XM_EIFFEL_PARSER*/
T6 r729syntax_error(T729* C);
/*XM_EIFFEL_PARSER*/
void r729_673Pon_error(T729* C,T0* a1);
extern T0*oBC729yycheck_template;
extern int fBC729yycheck_template;
/*XM_EIFFEL_PARSER*/
T0* r729yycheck_template(void);
/*XM_EIFFEL_PARSER*/
void r729process_entity_scanner(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729source(T729* C);
/*XM_EIFFEL_PARSER*/
void r729on_doctype(T729* C,T0* a1,T0* a2,T6 a3);
/*XM_EIFFEL_PARSER*/
void r729when_entity_declared(T729* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r729on_finish(T729* C);
/*XM_EIFFEL_PARSER*/
void r729process_entity(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729read_token(T729* C);
extern T0*oBC730shared_empty_string_string;
extern T0*oBC55integer_;
/*XM_EIFFEL_PARSER*/
void r729on_content(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729new_entities_table(void);
/*XM_EIFFEL_PARSER*/
void r729yy_build_parser_tables(T729* C);
/*XM_EIFFEL_PARSER*/
void r729when_external_dtd(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729process_attribute_entity(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729clone(T0* a1);
/*XM_EIFFEL_PARSER*/
void r729on_start(T729* C);
extern T0*oBC729yytable_template;
extern int fBC729yytable_template;
/*XM_EIFFEL_PARSER*/
T0* r729yytable_template(void);
/*XM_EIFFEL_PARSER*/
T6 r729is_local_part(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729new_unicode_string_from_utf8(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729new_dtd_attribute_content(void);
/*XM_EIFFEL_PARSER*/
void r729on_processing_instruction(T729* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
T0* r729external_entity_to_string(T729* C,T0* a1);
extern T0*oBC730shared_empty_string_uc;
extern int fBC730shared_empty_string_uc;
/*XM_EIFFEL_PARSER*/
T0* r729shared_empty_string_uc(void);
/*XM_EIFFEL_PARSER*/
T0* r729shared_empty_string(T729* C);
/*XM_EIFFEL_PARSER*/
void r729make_parser(T729* C);
/*XM_EIFFEL_PARSER*/
T0* r729yyfixed_array(T0* a1);
extern T0*oBC729yypgoto_template;
extern int fBC729yypgoto_template;
/*XM_EIFFEL_PARSER*/
T0* r729yypgoto_template(void);
/*XM_EIFFEL_PARSER*/
void r729on_attribute_declarations(T729* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
T6 r729is_string_mode_unicode(T729* C);
/*XM_EIFFEL_PARSER*/
void r729check_void(T729* C);
/*XM_EIFFEL_PARSER*/
T0* r729position(T729* C);
/*XM_EIFFEL_PARSER*/
void r729on_start_tag(T729* C,T0* a1,T0* a2,T0* a3);
/*XM_EIFFEL_PARSER*/
void r729make(T729* C);
/*XM_EIFFEL_PARSER*/
T0* r729entity_referenced_in_entity_value(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729on_comment(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729onstring_ascii(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729parse_from_stream(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T2 r729byte_position(T729* C);
extern T0*oBC729yypact_template;
extern int fBC729yypact_template;
/*XM_EIFFEL_PARSER*/
T0* r729yypact_template(void);
/*XM_EIFFEL_PARSER*/
T6 r729is_correct(T729* C);
/*XM_EIFFEL_PARSER*/
void r729on_end_tag(T729* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC729yydefact_template;
extern int fBC729yydefact_template;
/*XM_EIFFEL_PARSER*/
T0* r729yydefact_template(void);
/*XM_EIFFEL_PARSER*/
void r729set_element_repetition(T0* a1,T3 a2);
/*XM_EIFFEL_PARSER*/
T0* r729yytype1(T0* a1);
/*XM_EIFFEL_PARSER*/
void r729yy_clear_all(T729* C);
/*XM_EIFFEL_PARSER*/
T0* r729yytype2(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729yytype3(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729yytype4(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729yytype5(T0* a1);
/*XM_EIFFEL_PARSER*/
T3 r729yytype6(T0* a1);
/*XM_EIFFEL_PARSER*/
void r729on_entity_declaration(T729* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5);
/*XM_EIFFEL_PARSER*/
T0* r729yytype7(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729yytype8(T0* a1);
/*XM_EIFFEL_PARSER*/
void r729on_element_declaration(T729* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
T0* r729yytype9(T0* a1);
/*XM_EIFFEL_PARSER*/
T0* r729new_name_set(void);
/*XM_EIFFEL_PARSER*/
T0* r729defined_entity_referenced(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729on_attribute(T729* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*XM_EIFFEL_PARSER*/
void r729reset(T729* C);
/*XM_EIFFEL_PARSER*/
void r729yy_do_error_action(T729* C,T2 a1);
/*XM_EIFFEL_PARSER*/
T0* r729new_dtd_attribute_content_list(void);
/*XM_EIFFEL_PARSER*/
T0* r729new_dtd_external_id(void);
extern T0*oBC729yyr1_template;
extern int fBC729yyr1_template;
/*XM_EIFFEL_PARSER*/
T0* r729yyr1_template(void);
/*XM_EIFFEL_PARSER*/
void r729on_notation_declaration(T729* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r729on_error(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729parse(T729* C);
/*XM_EIFFEL_PARSER*/
T0* r729last_error_extended_description(T729* C);
/*XM_EIFFEL_PARSER*/
void r729yy_do_action(T729* C,T2 a1);
/*XM_EIFFEL_PARSER*/
T0* r729new_external_entity(T729* C,T0* a1);
extern T0*oBC729yytranslate_template;
extern int fBC729yytranslate_template;
/*XM_EIFFEL_PARSER*/
T0* r729yytranslate_template(void);
/*XM_EIFFEL_PARSER*/
T0* r729element_name(T0* a1);
/*XM_EIFFEL_PARSER*/
void r729force_error(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
void r729on_attribute_declaration(T729* C,T0* a1,T0* a2,T0* a3);
/*XM_EIFFEL_PARSER*/
T6 r729is_string_mode_ascii(T729* C);
/*XM_EIFFEL_PARSER*/
T2 r729line(T729* C);
/*XM_EIFFEL_PARSER*/
T0* r729new_string_bilinked_list(void);
/*XM_EIFFEL_PARSER*/
T2 r729column(T729* C);
/*XM_EIFFEL_PARSER*/
void r729when_pe_entity_declared(T729* C,T0* a1,T0* a2);
/*XM_EIFFEL_PARSER*/
void r729process_pe_entity(T729* C,T0* a1);
/*XM_EIFFEL_PARSER*/
T2 r729yy_translate(T729* C,T2 a1);
extern T0*oBC729yyr2_template;
extern int fBC729yyr2_template;
/*XM_EIFFEL_PARSER*/
T0* r729yyr2_template(void);
/*XM_EIFFEL_PARSER*/
void r729make_scanner(T729* C);
extern T0*oBC729yydefgoto_template;
extern int fBC729yydefgoto_template;
/*XM_EIFFEL_PARSER*/
T0* r729yydefgoto_template(void);
/*XM_EIFFEL_PARSER*/
T0* r729new_literal_entity(T0* a1);
/*XM_DOCUMENT*/
T6 r663valid_cursor(T663* C,T0* a1);
/*XM_DOCUMENT*/
void r663remove_traversing_cursor(T663* C,T0* a1);
/*XM_DOCUMENT*/
void r663cursor_go_after(T663* C,T0* a1);
/*XM_DOCUMENT*/
void r663add_traversing_cursor(T663* C,T0* a1);
/*XM_DOCUMENT*/
T6 r663cursor_after(T0* a1);
/*XM_DOCUMENT*/
void r663make_list(T663* C);
/*XM_DOCUMENT*/
void r663cursor_forth(T663* C,T0* a1);
/*XM_DOCUMENT*/
void r663cursor_start(T663* C,T0* a1);
/*XM_DOCUMENT*/
void r663force_last(T663* C,T0* a1);
/*XM_DOCUMENT*/
T0* r663new_cursor(T663* C);
/*XM_DOCUMENT*/
T6 r663cursor_off(T0* a1);
/*XM_DOCUMENT*/
void r663set_root_element(T663* C,T0* a1);
/*LX_BAD_CHARACTER_ERROR*/
T0* r412arguments(void);
/*LX_BAD_CHARACTER_ERROR*/
void r412make(T412* C,T0* a1,T2 a2,T0* a3);
/*LX_BAD_CHARACTER_ERROR*/
T0* r412message(T412* C,T0* a1);
/*LX_BAD_CHARACTER_ERROR*/
T0* r412default_message(T412* C);
/*GEANT_MOVE_COMMAND*/
void r551move_file(T551* C,T0* a1,T0* a2);
/*GEANT_MOVE_COMMAND*/
T6 r551is_fileset_to_directory_executable(T551* C);
/*GEANT_MOVE_COMMAND*/
T0* r551file_system(void);
/*GEANT_MOVE_COMMAND*/
void r551create_directory(T551* C,T0* a1);
/*GEANT_MOVE_COMMAND*/
void r551create_directory_for_pathname(T551* C,T0* a1);
/*GEANT_MOVE_COMMAND*/
void r551execute(T551* C);
/*GEANT_MOVE_COMMAND*/
T6 r551is_file_to_directory_executable(T551* C);
/*GEANT_MOVE_COMMAND*/
T6 r551is_file_to_file_executable(T551* C);
/*GEANT_MOVE_COMMAND*/
T6 r551is_executable(T551* C);
/*GEANT_PROJECT_ELEMENT*/
T0* r647attribute_value(T647* C,T0* a1);
extern T0*oBC647inherit_element_name;
extern T0*oBC647name_attribute_name;
extern T0*oBC647inherit_attribute_name;
/*GEANT_PROJECT_ELEMENT*/
T0* r647elements_by_name(T647* C,T0* a1);
extern T0*oBC28description_element_name;
/*GEANT_PROJECT_ELEMENT*/
T6 r647has_inherit_element(T647* C);
extern T0*oBC647default_attribute_name;
/*GEANT_PROJECT_ELEMENT*/
void r647make(T647* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*GEANT_PROJECT_ELEMENT*/
void r647load_parent_projects(T647* C);
extern T0*oBC647target_element_name;
/*GEANT_PROJECT_ELEMENT*/
void r647exit_application(T2 a1,T0* a2);
/*GEANT_SET_TASK*/
T0* r520attribute_value(T520* C,T0* a1);
/*GEANT_SET_TASK*/
T0* r520file_system(void);
extern T0*oBC520name_attribute_name;
extern T0*oBC520value_attribute_name;
/*GEANT_SET_TASK*/
void r520make(T520* C,T0* a1,T0* a2);
/*GEANT_SET_TASK*/
void r520task_make(T520* C,T0* a1,T0* a2);
/*GEANT_SET_TASK*/
void r520execute(T520* C);
/*GEANT_SET_TASK*/
T6 r520is_enabled(T520* C);
/*GEANT_SET_TASK*/
void r520interpreting_element_make(T520* C,T0* a1,T0* a2);
/*LX_DFA_STATE*/
T6 r251is_equal(T251* C,T0* a1);
extern T0*oBC251rule_sorter;
extern int fBC251rule_sorter;
/*LX_DFA_STATE*/
T0* r251rule_sorter(void);
/*LX_DFA_STATE*/
T6 r251se_assigned_from(T0* a1);
extern T0*oBC251bubble_sorter;
extern int fBC251bubble_sorter;
/*LX_DFA_STATE*/
T0* r251bubble_sorter(void);
/*LX_DFA_STATE*/
T6 r251same_type(T251* C,T0* a1);
/*LX_DFA_STATE*/
void r251make(T251* C,T0* a1,T2 a2,T2 a3);
/*LX_DFA_STATE*/
void r251partition(T251* C,T0* a1);
/*LX_DFA_STATE*/
T6 r251conforms_to(T251* C,T0* a1);
/*LX_DFA_STATE*/
T6 r251is_accepting(T251* C);
/*LX_DFA_STATE*/
T0* r251new_state(T251* C,T2 a1);
/*GEANT_LCC_TASK*/
T0* r518attribute_value(T518* C,T0* a1);
/*GEANT_LCC_TASK*/
T0* r518file_system(void);
/*GEANT_LCC_TASK*/
void r518make(T518* C,T0* a1,T0* a2);
/*GEANT_LCC_TASK*/
void r518task_make(T518* C,T0* a1,T0* a2);
extern T0*oBC518executable_attribute_name;
/*GEANT_LCC_TASK*/
void r518execute(T518* C);
/*GEANT_LCC_TASK*/
T6 r518is_enabled(T518* C);
extern T0*oBC518source_filename_attribute_name;
/*GEANT_LCC_TASK*/
void r518interpreting_element_make(T518* C,T0* a1,T0* a2);
/*GEANT_PROJECT*/
void r32calculate_depend_order(T32* C,T0* a1);
/*GEANT_PROJECT*/
void r32build(T32* C);
/*GEANT_PROJECT*/
void r32trace(T32* C,T0* a1);
/*GEANT_PROJECT*/
void r32build_target(T32* C,T0* a1);
/*GEANT_PROJECT*/
void r32log(T32* C,T0* a1);
/*GEANT_PROJECT*/
void r32make(T32* C,T0* a1,T0* a2);
/*GEANT_PROJECT*/
T0* r32default_target(T32* C);
/*GEANT_PROJECT*/
T0* r32target_name(T32* C,T0* a1);
/*GEANT_PROJECT*/
T0* r32start_target(T32* C);
/*GEANT_PROJECT*/
void r32trace_debug(T32* C,T0* a1);
/*GEANT_PROJECT*/
void r32show_target_info(T32* C);
/*GEANT_PROJECT*/
void r32execute_target(T32* C,T0* a1,T6 a2,T6 a3);
/*GEANT_PROJECT*/
void r32merge_in_parent_projects(T32* C);
/*GEANT_PROJECT*/
void r32exit_application(T2 a1,T0* a2);
/*GEANT_PROJECT*/
T6 r32has_parent_with_name(T32* C,T0* a1);
/*UC_STRING*/
T0* r54out(T54* C);
/*UC_STRING*/
void r54copy(T54* C,T0* a1);
/*UC_STRING*/
T0* r54substring(T54* C,T2 a1,T2 a2);
/*UC_STRING*/
void r54reset_byte_index_cache(T54* C);
/*UC_STRING*/
void r54wipe_out(T54* C);
/*UC_STRING*/
void r54keep_tail(T54* C,T2 a1);
/*UC_STRING*/
void r54remove_first(T54* C,T2 a1);
/*UC_STRING*/
T6 r54same_unicode_string(T54* C,T0* a1);
/*UC_STRING*/
T2 r54item_code(T54* C,T2 a1);
/*UC_STRING*/
T3 r54character_item_at_byte_index(T54* C,T2 a1);
/*UC_STRING*/
void r54put(T54* C,T3 a1,T2 a2);
/*UC_STRING*/
void r54remove_between(T54* C,T2 a1,T2 a2);
/*UC_STRING*/
T6 r54is_equal(T54* C,T0* a1);
/*UC_STRING*/
T2 r54index_of_code(T54* C,T2 a1,T2 a2);
/*UC_STRING*/
T3 r54item(T54* C,T2 a1);
/*UC_STRING*/
void r54resize_byte_storage(T54* C,T2 a1);
/*UC_STRING*/
T6 r54valid_index(T54* C,T2 a1);
/*UC_STRING*/
void r54append(T54* C,T0* a1);
/*UC_STRING*/
T6 r54se_assigned_from(T0* a1);
/*UC_STRING*/
T2 r54byte_index(T54* C,T2 a1);
/*UC_STRING*/
T0* r54clone(T0* a1);
/*UC_STRING*/
T2 r54index_of(T54* C,T3 a1,T2 a2);
/*UC_STRING*/
void r54out_in_tagged_out_memory(T54* C);
/*UC_STRING*/
void r54move_bytes_right(T54* C,T2 a1,T2 a2);
/*UC_STRING*/
void r54set_count(T54* C,T2 a1);
/*UC_STRING*/
T2 r54next_byte_index(T54* C,T2 a1);
/*UC_STRING*/
T6 r54same_type(T54* C,T0* a1);
/*UC_STRING*/
void r54remove_tail(T54* C,T2 a1);
/*UC_STRING*/
void r54make(T54* C,T2 a1);
/*UC_STRING*/
void r54old_make_filled(T54* C,T3 a1,T2 a2);
/*UC_STRING*/
void r54append_string(T54* C,T0* a1);
/*UC_STRING*/
void r54remove(T54* C,T2 a1);
/*UC_STRING*/
void r54append_substring(T54* C,T0* a1,T2 a2,T2 a3);
/*UC_STRING*/
T2 r54item_code_at_byte_index(T54* C,T2 a1);
extern T0*oBC53platform;
/*UC_STRING*/
T0* r54string(T54* C);
/*UC_STRING*/
void r54extend(T54* C,T3 a1);
/*UC_STRING*/
T2 r54hash_code(T54* C);
/*UC_STRING*/
void r54remove_last(T54* C,T2 a1);
/*UC_STRING*/
T0* r54prefixed_string(T54* C,T0* a1);
/*UC_STRING*/
T6 r54conforms_to(T54* C,T0* a1);
/*UC_STRING*/
void r54keep_head(T54* C,T2 a1);
/*UC_STRING*/
T2 r54to_integer(T54* C);
/*UC_STRING*/
T0* r54new_empty_string(T2 a1);
/*UC_STRING*/
void r54append_character(T54* C,T3 a1);
/*UC_STRING*/
void r54make_from_substring(T54* C,T0* a1,T2 a2,T2 a3);
/*UC_STRING*/
void r54put_code_at_byte_index(T54* C,T2 a1,T2 a2,T2 a3);
/*UC_STRING*/
void r54fill_with(T54* C,T3 a1);
/*UC_STRING*/
void r54put_character_at_byte_index(T54* C,T3 a1,T2 a2,T2 a3);
/*UC_STRING*/
void r54resize(T54* C,T2 a1);
/*UC_STRING*/
void r54put_substring_at_byte_index(T54* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
/*UC_STRING*/
T2 r54substring_index(T54* C,T0* a1,T2 a2);
/*UC_STRING*/
void r54from_external_copy(T54* C,T8 a1);
/*UC_STRING*/
T3 r54byte_item(T54* C,T2 a1);
/*UC_STRING*/
void r54move_bytes_left(T54* C,T2 a1,T2 a2);
/*UC_STRING*/
void r54old_make(T54* C,T2 a1);
/*UC_STRING*/
T8 r54to_external(T54* C);
/*UC_STRING*/
void r54old_make_from_string(T54* C,T0* a1);
/*UC_STRING*/
T0* r54twin(T54* C);
/*UC_STRING*/
T0* r54to_utf8(T54* C);
/*UC_STRING*/
T0* r54_ix_43(T54* C,T0* a1);
/*UC_STRING*/
T2 r54_7Phash_code(T54* C);
/*UC_STRING*/
T2 r54unicode_substring_index(T54* C,T0* a1,T2 a2);
/*UC_STRING*/
void r54swap(T54* C,T2 a1,T2 a2);
/*LX_EQUIVALENCE_CLASSES*/
void r270build(T270* C);
/*LX_EQUIVALENCE_CLASSES*/
void r270put(T270* C,T2 a1);
/*LX_EQUIVALENCE_CLASSES*/
T2 r270upper(T270* C);
/*LX_EQUIVALENCE_CLASSES*/
T2 r270lower(T270* C);
/*LX_EQUIVALENCE_CLASSES*/
T6 r270valid_symbol_class(T270* C,T0* a1);
/*LX_EQUIVALENCE_CLASSES*/
T0* r270to_array(T270* C,T2 a1,T2 a2);
/*LX_EQUIVALENCE_CLASSES*/
void r270make(T270* C,T2 a1,T2 a2);
/*LX_EQUIVALENCE_CLASSES*/
T6 r270valid_symbol(T270* C,T2 a1);
/*LX_EQUIVALENCE_CLASSES*/
T2 r270equivalence_class(T270* C,T2 a1);
/*LX_EQUIVALENCE_CLASSES*/
void r270add(T270* C,T0* a1);
/*LX_EQUIVALENCE_CLASSES*/
T6 r270is_representative(T270* C,T2 a1);
/*LX_EQUIVALENCE_CLASSES*/
void r270initialize(T270* C);
/*GEANT_DELETE_COMMAND*/
T6 r546is_directory_executable(T546* C);
/*GEANT_DELETE_COMMAND*/
T0* r546file_system(void);
/*GEANT_DELETE_COMMAND*/
T6 r546is_file_executable(T546* C);
/*GEANT_DELETE_COMMAND*/
void r546execute(T546* C);
/*GEANT_DELETE_COMMAND*/
T6 r546is_executable(T546* C);
extern T0*oBC531define_element_name;
/*GEANT_GEPP_TASK*/
T0* r531attribute_value(T531* C,T0* a1);
extern T0*oBC531fileset_element_name;
/*GEANT_GEPP_TASK*/
T0* r531file_system(void);
extern T0*oBC531input_filename_attribute_name;
extern T0*oBC531to_directory_attribute_name;
/*GEANT_GEPP_TASK*/
T0* r531elements_by_name(T531* C,T0* a1);
/*GEANT_GEPP_TASK*/
void r531make(T531* C,T0* a1,T0* a2);
/*GEANT_GEPP_TASK*/
T6 r531boolean_value(T531* C,T0* a1);
extern T0*oBC531force_attribute_name;
/*GEANT_GEPP_TASK*/
void r531task_make(T531* C,T0* a1,T0* a2);
extern T0*oBC531output_filename_attribute_name;
extern T0*oBC531lines_attribute_name;
/*GEANT_GEPP_TASK*/
void r531execute(T531* C);
/*GEANT_GEPP_TASK*/
T6 r531is_enabled(T531* C);
/*GEANT_GEPP_TASK*/
void r531interpreting_element_make(T531* C,T0* a1,T0* a2);
/*GEANT_OUTOFDATE_COMMAND*/
T0* r575file_system(void);
/*GEANT_OUTOFDATE_COMMAND*/
T6 r575is_file_executable(T575* C);
/*GEANT_OUTOFDATE_COMMAND*/
void r575execute(T575* C);
/*GEANT_OUTOFDATE_COMMAND*/
T6 r575is_file_outofdate(T0* a1,T0* a2);
/*GEANT_OUTOFDATE_COMMAND*/
T6 r575is_executable(T575* C);
/*GEANT_OUTOFDATE_COMMAND*/
T6 r575is_fileset_executable(T575* C);
/*XM_PROCESSING_INSTRUCTION*/
void r915make(T915* C,T0* a1,T0* a2);
/*GEANT_SET_COMMAND*/
void r521execute(T521* C);
/*GEANT_SET_COMMAND*/
T6 r521is_executable(T521* C);
/*KL_STDOUT_FILE*/
void r584make(T584* C);
/*KL_STDOUT_FILE*/
void r584old_put_string(T584* C,T0* a1);
/*KL_STDOUT_FILE*/
void r584old_flush(T584* C);
/*KL_STDOUT_FILE*/
void r584old_put_character(T584* C,T3 a1);
/*KL_STDOUT_FILE*/
void r584put_line(T584* C,T0* a1);
/*KL_STDOUT_FILE*/
void r584old_make(T584* C);
/*KL_STDOUT_FILE*/
void r584write_buffer(T584* C);
/*KL_STDOUT_FILE*/
void r584put_string(T584* C,T0* a1);
/*GEANT_SE_COMMAND*/
T6 r194is_cleanable(T194* C);
/*GEANT_SE_COMMAND*/
T0* r194file_system(void);
/*GEANT_SE_COMMAND*/
T0* r194clone(T0* a1);
/*GEANT_SE_COMMAND*/
T0* r194new_ace_cmdline(T194* C);
/*GEANT_SE_COMMAND*/
T6 r194is_traditional_configuration(T194* C);
/*GEANT_SE_COMMAND*/
void r194execute(T194* C);
/*GEANT_SE_COMMAND*/
T0* r194new_clean_cmdline(T194* C);
/*GEANT_SE_COMMAND*/
T0* r194new_traditional_cmdline(T194* C);
/*GEANT_SE_COMMAND*/
void r194execute_shell(T194* C,T0* a1);
/*GEANT_SE_COMMAND*/
T6 r194is_executable(T194* C);
/*GEANT_SE_COMMAND*/
T6 r194is_ace_configuration(T194* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740_245P_741Preset(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r740yy_at_beginning_of_line(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740normalized_newline(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T6 r740is_literal(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r740start_condition(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_chk_template_1(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_chk_template_2(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740set_input_buffer(T740* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740text_substring(T740* C,T2 a1,T2 a2);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_ec_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_execute_action(T740* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_def_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
T3 r740text_item(T740* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
T6 r740end_of_file(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740system_literal_text(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740new_string_buffer(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_load_input_buffer(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740apply_input_buffer(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740make_with_buffer(T740* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r740yy_null_trans_state(T740* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740pop_start_condition(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_accept_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r740read_token(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r740yy_previous_state(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_refill_input_buffer(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740push_start_condition_dtd_ignore(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_fixed_array(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_meta_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_base_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r740set_input_stream(T740* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T2 r740text_count(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740new_file_buffer(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740make_scanner(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_initialize(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740_245Pread_token(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740reset(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740push_start_condition(T740* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740text(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740close_input(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_nxt_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_set_line_column(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
T6 r740valid_start_condition(T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740make_literal(T740* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740empty_buffer(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_nxt_template_1(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_nxt_template_2(T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
T0* r740yy_chk_template(void);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_set_content(T740* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740_246Pset_input_buffer(T740* C,T0* a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740_741Preset(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740set_start_condition(T740* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_execute_eof_action(T740* C,T2 a1);
/*XM_EIFFEL_ENTITY_DEF*/
void r740yy_build_tables(T740* C);
/*XM_EIFFEL_ENTITY_DEF*/
void r740make_external(T740* C,T0* a1,T0* a2);
/*LX_BAD_CHARACTER_CLASS_ERROR*/
T0* r411arguments(void);
/*LX_BAD_CHARACTER_CLASS_ERROR*/
void r411make(T411* C,T0* a1,T2 a2);
/*LX_BAD_CHARACTER_CLASS_ERROR*/
T0* r411message(T411* C,T0* a1);
/*LX_BAD_CHARACTER_CLASS_ERROR*/
T0* r411default_message(T411* C);
/*KL_STDERR_FILE*/
void r40make(T40* C);
/*KL_STDERR_FILE*/
void r40old_put_string(T0* a1);
/*KL_STDERR_FILE*/
void r40put_line(T0* a1);
/*KL_STDERR_FILE*/
void r40put_string(T0* a1);
/*XM_DEFAULT_POSITION*/
T0* r793out(T793* C);
/*XM_DEFAULT_POSITION*/
void r793make(T793* C,T0* a1,T2 a2,T2 a3,T2 a4);
/*XM_ATTRIBUTE*/
void r159make(T159* C,T0* a1,T0* a2,T0* a3,T0* a4);
/*GEANT_VE_COMMAND*/
T6 r200is_cleanable(T200* C);
/*GEANT_VE_COMMAND*/
T0* r200file_system(void);
/*GEANT_VE_COMMAND*/
T0* r200clone(T0* a1);
/*GEANT_VE_COMMAND*/
void r200execute_clean(T200* C);
/*GEANT_VE_COMMAND*/
void r200execute_tuner(T200* C);
/*GEANT_VE_COMMAND*/
T6 r200is_compilable(T200* C);
/*GEANT_VE_COMMAND*/
void r200execute(T200* C);
/*GEANT_VE_COMMAND*/
T6 r200is_tunable(T200* C);
/*GEANT_VE_COMMAND*/
void r200execute_shell(T200* C,T0* a1);
/*GEANT_VE_COMMAND*/
T6 r200is_executable(T200* C);
/*GEANT_TARGET*/
void r23execute_task(T23* C,T0* a1);
extern T0*oBC24se_task_name;
/*GEANT_TARGET*/
T6 r23is_exported_to_project(T23* C,T0* a1);
/*GEANT_TARGET*/
T0* r23full_name(T23* C);
/*GEANT_TARGET*/
T6 r23is_exported_to_any(T23* C);
/*GEANT_TARGET*/
T0* r23dependencies(T23* C);
/*GEANT_TARGET*/
T6 r23valid_xml_element(T0* a1);
extern T0*oBC24available_task_name;
extern T0*oBC24exec_task_name;
extern T0*oBC24hact_task_name;
extern T0*oBC23depend_attribute_name;
extern T0*oBC24precursor_task_name;
extern T0*oBC23export_attribute_name;
/*GEANT_TARGET*/
T6 r23conflicts_with(T23* C,T0* a1);
/*GEANT_TARGET*/
T0* r23dependent_targets(T23* C);
extern T0*oBC24mkdir_task_name;
extern T0*oBC24geyacc_task_name;
extern T0*oBC24lcc_task_name;
/*GEANT_TARGET*/
T0* r23file_system(void);
extern T0*oBC23name_attribute_name;
/*GEANT_TARGET*/
T6 r23has_dependencies(T23* C);
extern T0*oBC24gexmlsplit_task_name;
/*GEANT_TARGET*/
T0* r23clone(T0* a1);
/*GEANT_TARGET*/
void r23_27Pmake(T23* C,T0* a1,T0* a2);
extern T0*oBC24delete_task_name;
extern T0*oBC24copy_task_name;
extern T0*oBC24exit_task_name;
/*GEANT_TARGET*/
T6 r23has_precursor_target(T23* C,T0* a1);
/*GEANT_TARGET*/
void r23make(T23* C,T0* a1,T0* a2);
extern T0*oBC24outofdate_task_name;
/*GEANT_TARGET*/
T6 r23has_redefining_target(T23* C,T0* a1);
extern T0*oBC24getest_task_name;
extern T0*oBC23project_name_any;
extern T0*oBC24set_task_name;
/*GEANT_TARGET*/
T0* r23string_tokens(T0* a1,T3 a2);
extern T0*oBC24ise_task_name;
extern T0*oBC24ve_task_name;
/*GEANT_TARGET*/
void r23show_dependent_targets(T0* a1);
/*GEANT_TARGET*/
void r23execute(T23* C);
/*GEANT_TARGET*/
T0* r23seed(T23* C);
/*GEANT_TARGET*/
T6 r23is_enabled(T23* C);
extern T0*oBC24gepp_task_name;
/*GEANT_TARGET*/
void r23exit_application(T2 a1,T0* a2);
/*GEANT_TARGET*/
T0* r23final_target(T23* C);
extern T0*oBC24xslt_task_name;
extern T0*oBC24geant_task_name;
extern T0*oBC24move_task_name;
extern T0*oBC24setenv_task_name;
extern T0*oBC24gexace_task_name;
extern T0*oBC24unset_task_name;
extern T0*oBC24gelex_task_name;
/*GEANT_TARGET*/
void r23show_precursors(T23* C);
extern T0*oBC24echo_task_name;
/*UC_UTF8_STRING*/
T0* r122out(T122* C);
/*UC_UTF8_STRING*/
void r122copy(T122* C,T0* a1);
/*UC_UTF8_STRING*/
T0* r122substring(T122* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
void r122reset_byte_index_cache(T122* C);
/*UC_UTF8_STRING*/
T2 r122shifted_byte_index(T122* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
void r122wipe_out(T122* C);
/*UC_UTF8_STRING*/
void r122keep_tail(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122remove_first(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T6 r122same_unicode_string(T122* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r122item_code(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T3 r122character_item_at_byte_index(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122put(T122* C,T3 a1,T2 a2);
/*UC_UTF8_STRING*/
void r122remove_between(T122* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
T6 r122is_equal(T122* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r122index_of_code(T122* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
T3 r122item(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122resize_byte_storage(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T6 r122valid_index(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122append(T122* C,T0* a1);
/*UC_UTF8_STRING*/
T6 r122se_assigned_from(T0* a1);
/*UC_UTF8_STRING*/
T2 r122byte_index(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T0* r122clone(T0* a1);
/*UC_UTF8_STRING*/
T2 r122index_of(T122* C,T3 a1,T2 a2);
/*UC_UTF8_STRING*/
void r122out_in_tagged_out_memory(T122* C);
/*UC_UTF8_STRING*/
void r122move_bytes_right(T122* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
void r122set_count(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T2 r122next_byte_index(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T6 r122same_type(T122* C,T0* a1);
/*UC_UTF8_STRING*/
void r122remove_tail(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122make(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122old_make_filled(T122* C,T3 a1,T2 a2);
/*UC_UTF8_STRING*/
void r122remove(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122append_substring(T122* C,T0* a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
T2 r122item_code_at_byte_index(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T0* r122string(T122* C);
/*UC_UTF8_STRING*/
void r122extend(T122* C,T3 a1);
/*UC_UTF8_STRING*/
T2 r122hash_code(T122* C);
/*UC_UTF8_STRING*/
T0* r122prefixed_string(T122* C,T0* a1);
/*UC_UTF8_STRING*/
void r122remove_last(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T6 r122conforms_to(T122* C,T0* a1);
/*UC_UTF8_STRING*/
void r122keep_head(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T2 r122to_integer(T122* C);
/*UC_UTF8_STRING*/
T0* r122new_empty_string(T2 a1);
/*UC_UTF8_STRING*/
void r122append_character(T122* C,T3 a1);
/*UC_UTF8_STRING*/
void r122put_code_at_byte_index(T122* C,T2 a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
void r122make_from_substring(T122* C,T0* a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
void r122fill_with(T122* C,T3 a1);
/*UC_UTF8_STRING*/
void r122put_character_at_byte_index(T122* C,T3 a1,T2 a2,T2 a3);
/*UC_UTF8_STRING*/
void r122resize(T122* C,T2 a1);
/*UC_UTF8_STRING*/
void r122put_substring_at_byte_index(T122* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
/*UC_UTF8_STRING*/
T2 r122substring_index(T122* C,T0* a1,T2 a2);
/*UC_UTF8_STRING*/
void r122append_utf8(T122* C,T0* a1);
/*UC_UTF8_STRING*/
void r122from_external_copy(T122* C,T8 a1);
/*UC_UTF8_STRING*/
void r122move_bytes_left(T122* C,T2 a1,T2 a2);
/*UC_UTF8_STRING*/
void r122old_make(T122* C,T2 a1);
/*UC_UTF8_STRING*/
T8 r122to_external(T122* C);
/*UC_UTF8_STRING*/
void r122old_make_from_string(T122* C,T0* a1);
/*UC_UTF8_STRING*/
T0* r122twin(T122* C);
/*UC_UTF8_STRING*/
T0* r122to_utf8(T122* C);
/*UC_UTF8_STRING*/
T0* r122_ix_43(T122* C,T0* a1);
/*UC_UTF8_STRING*/
T2 r122unicode_substring_index(T122* C,T0* a1,T2 a2);
/*UC_UTF8_STRING*/
T2 r122_7Phash_code(T122* C);
/*UC_UTF8_STRING*/
void r122make_from_utf8(T122* C,T0* a1);
/*UC_UTF8_STRING*/
void r122swap(T122* C,T2 a1,T2 a2);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872_245P_740Pread_token(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r872yy_at_beginning_of_line(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872normalized_newline(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r872start_condition(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872_740Pread_token(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872set_input_buffer(T872* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872text_substring(T872* C,T2 a1,T2 a2);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_ec_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872yy_execute_action(T872* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_def_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T3 r872text_item(T872* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T6 r872end_of_file(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872system_literal_text(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872new_string_buffer(T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872yy_load_input_buffer(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872apply_input_buffer(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872make_with_buffer(T872* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r872yy_null_trans_state(T872* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872pop_start_condition(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_accept_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872read_token(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r872yy_previous_state(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872yy_refill_input_buffer(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_fixed_array(T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_meta_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872_245P_741P_740Preset(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_base_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872set_input_stream(T872* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T2 r872text_count(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872new_file_buffer(T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872make_scanner(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872yy_initialize(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872reset(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872push_start_condition(T872* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872text(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872make_def(T872* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872reset_sent(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872close_input(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_nxt_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872yy_set_line_column(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872_741P_740Preset(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T6 r872valid_start_condition(T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872make_literal(T872* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872_740Preset(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872empty_buffer(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
T0* r872yy_chk_template(void);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872yy_set_content(T872* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872_246Pset_input_buffer(T872* C,T0* a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872set_start_condition(T872* C,T2 a1);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872yy_build_tables(T872* C);
/*XM_EIFFEL_PE_ENTITY_DEF*/
void r872make_external(T872* C,T0* a1,T0* a2);
/*GEANT_INHERIT*/
void r588merge_in_renamed_targets(T588* C,T0* a1);
/*GEANT_INHERIT*/
void r588merge_in_unchanged_targets(T588* C,T0* a1);
/*GEANT_INHERIT*/
void r588apply_selects(T588* C);
/*GEANT_INHERIT*/
void r588make(T588* C,T0* a1);
/*GEANT_INHERIT*/
void r588validate_parent_selects(T588* C);
/*GEANT_INHERIT*/
void r588merge_in_parent_project(T588* C,T0* a1);
/*GEANT_INHERIT*/
void r588check_targets_for_conflicts(T588* C);
/*GEANT_INHERIT*/
void r588merge_in_redefined_targets(T588* C,T0* a1);
/*GEANT_INHERIT*/
void r588exit_application(T2 a1,T0* a2);
/*GEANT_INHERIT*/
void r588sort_out_selected_targets(T588* C);
/*GEANT_VE_TASK*/
T0* r199attribute_value(T199* C,T0* a1);
/*GEANT_VE_TASK*/
T0* r199file_system(void);
extern T0*oBC199level_attribute_name;
extern T0*oBC199tune_attribute_name;
/*GEANT_VE_TASK*/
void r199make(T199* C,T0* a1,T0* a2);
/*GEANT_VE_TASK*/
T6 r199boolean_value(T199* C,T0* a1);
/*GEANT_VE_TASK*/
void r199task_make(T199* C,T0* a1,T0* a2);
extern T0*oBC199esd_attribute_name;
/*GEANT_VE_TASK*/
void r199execute(T199* C);
/*GEANT_VE_TASK*/
T6 r199is_enabled(T199* C);
/*GEANT_VE_TASK*/
T0* r199attribute_value_or_default(T199* C,T0* a1,T0* a2);
/*GEANT_VE_TASK*/
void r199interpreting_element_make(T199* C,T0* a1,T0* a2);
extern T0*oBC199clean_attribute_name;
extern T0*oBC199recursive_attribute_name;
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
void r797make_from_stream(T797* C,T0* a1);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T0* r797name(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T2 r797read_to_string(T797* C,T0* a1,T2 a2,T2 a3);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T2 r797most_significant(T797* C,T3 a1,T3 a2);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
void r797noqueue_read_character(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T0* r797clone(T0* a1);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
void r797read_character(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T6 r797is_open_read(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
void r797utf16_detect_read_character(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T2 r797least_significant(T797* C,T3 a1,T3 a2);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T2 r797read_to_buffer(T797* C,T0* a1,T2 a2,T2 a3);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T6 r797end_of_input(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
void r797append_character(T797* C,T2 a1);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
void r797utf16_read_character(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T3 r797last_character(T797* C);
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
void r797read_string(T797* C,T2 a1);
extern T0*oBC56utf16;
extern T0*oBC797utf8_buffer;
extern int fBC797utf8_buffer;
/*XM_EIFFEL_UTF16_INPUT_STREAM*/
T0* r797utf8_buffer(void);
/*GEANT_ECHO_TASK*/
T0* r540attribute_value(T540* C,T0* a1);
/*GEANT_ECHO_TASK*/
T0* r540file_system(void);
/*GEANT_ECHO_TASK*/
void r540make(T540* C,T0* a1,T0* a2);
/*GEANT_ECHO_TASK*/
void r540task_make(T540* C,T0* a1,T0* a2);
/*GEANT_ECHO_TASK*/
void r540execute(T540* C);
/*GEANT_ECHO_TASK*/
T6 r540is_enabled(T540* C);
/*GEANT_ECHO_TASK*/
void r540interpreting_element_make(T540* C,T0* a1,T0* a2);
extern T0*oBC540message_attribute_name;
/*XM_ELEMENT*/
T6 r140valid_cursor(T140* C,T0* a1);
/*XM_ELEMENT*/
T6 r140same_namespace(T140* C,T0* a1);
/*XM_ELEMENT*/
void r140remove_traversing_cursor(T140* C,T0* a1);
/*XM_ELEMENT*/
void r140cursor_go_after(T140* C,T0* a1);
/*XM_ELEMENT*/
T6 r140has_attribute_by_name(T140* C,T0* a1);
/*XM_ELEMENT*/
void r140add_traversing_cursor(T140* C,T0* a1);
/*XM_ELEMENT*/
T0* r140clone(T0* a1);
/*XM_ELEMENT*/
T0* r140attribute_by_name(T140* C,T0* a1);
/*XM_ELEMENT*/
void r140make(T140* C,T0* a1,T0* a2,T0* a3);
/*XM_ELEMENT*/
T6 r140cursor_after(T0* a1);
/*XM_ELEMENT*/
void r140make_list(T140* C);
/*XM_ELEMENT*/
void r140cursor_forth(T140* C,T0* a1);
/*XM_ELEMENT*/
void r140cursor_start(T140* C,T0* a1);
/*XM_ELEMENT*/
T6 r140same_string(T0* a1,T0* a2);
/*XM_ELEMENT*/
void r140force_last(T140* C,T0* a1);
/*XM_ELEMENT*/
T0* r140new_cursor(T140* C);
/*XM_ELEMENT*/
T6 r140has_element_by_name(T140* C,T0* a1);
/*XM_ELEMENT*/
T0* r140element_by_name(T140* C,T0* a1);
/*XM_ELEMENT*/
T0* r140text(T140* C);
/*XM_ELEMENT*/
T6 r140cursor_off(T0* a1);
/*XM_ELEMENT*/
T6 r140named_same_name(T140* C,T0* a1,T0* a2);
/*GEANT_EXIT_TASK*/
T0* r576attribute_value(T576* C,T0* a1);
/*GEANT_EXIT_TASK*/
T0* r576file_system(void);
/*GEANT_EXIT_TASK*/
void r576make(T576* C,T0* a1,T0* a2);
extern T0*oBC576code_attribute_name;
/*GEANT_EXIT_TASK*/
void r576task_make(T576* C,T0* a1,T0* a2);
/*GEANT_EXIT_TASK*/
void r576execute(T576* C);
/*GEANT_EXIT_TASK*/
T6 r576is_enabled(T576* C);
/*GEANT_EXIT_TASK*/
void r576interpreting_element_make(T576* C,T0* a1,T0* a2);
/*GEANT_GEXMLSPLIT_TASK*/
T0* r538attribute_value(T538* C,T0* a1);
/*GEANT_GEXMLSPLIT_TASK*/
T0* r538file_system(void);
extern T0*oBC538input_filename_attribute_name;
/*GEANT_GEXMLSPLIT_TASK*/
void r538make(T538* C,T0* a1,T0* a2);
/*GEANT_GEXMLSPLIT_TASK*/
void r538task_make(T538* C,T0* a1,T0* a2);
/*GEANT_GEXMLSPLIT_TASK*/
void r538execute(T538* C);
/*GEANT_GEXMLSPLIT_TASK*/
T6 r538is_enabled(T538* C);
/*GEANT_GEXMLSPLIT_TASK*/
void r538interpreting_element_make(T538* C,T0* a1,T0* a2);
/*GEANT_PRECURSOR_COMMAND*/
T6 r579is_executable(T579* C);
/*GEANT_PARENT*/
void r586apply_renames(T586* C);
/*GEANT_PARENT*/
void r586apply_redefines(T586* C);
/*GEANT_PARENT*/
void r586apply_selects(T586* C);
/*GEANT_PARENT*/
void r586make(T586* C,T0* a1);
/*GEANT_PARENT*/
void r586prepare_project(T586* C);
/*GEANT_PARENT*/
void r586apply_undeclared_redefines(T586* C);
/*GEANT_PARENT*/
void r586exit_application(T2 a1,T0* a2);
/*GEANT_PARENT*/
void r586apply_unchangeds(T586* C);
extern T0*oBC527case_insensitive_attribute_name;
/*GEANT_GELEX_TASK*/
T0* r527attribute_value(T527* C,T0* a1);
/*GEANT_GELEX_TASK*/
T0* r527file_system(void);
extern T0*oBC527input_filename_attribute_name;
extern T0*oBC527no_warn_attribute_name;
extern T0*oBC527separate_actions_attribute_name;
extern T0*oBC527full_attribute_name;
/*GEANT_GELEX_TASK*/
void r527make(T527* C,T0* a1,T0* a2);
extern T0*oBC527backup_attribute_name;
/*GEANT_GELEX_TASK*/
T6 r527boolean_value(T527* C,T0* a1);
extern T0*oBC527meta_ecs_attribute_name;
extern T0*oBC527no_default_attribute_name;
/*GEANT_GELEX_TASK*/
void r527task_make(T527* C,T0* a1,T0* a2);
extern T0*oBC527output_filename_attribute_name;
extern T0*oBC527size_attribute_name;
/*GEANT_GELEX_TASK*/
void r527execute(T527* C);
/*GEANT_GELEX_TASK*/
T6 r527is_enabled(T527* C);
extern T0*oBC527ecs_attribute_name;
/*GEANT_GELEX_TASK*/
void r527interpreting_element_make(T527* C,T0* a1,T0* a2);
/*GEANT_PROJECT_PARSER*/
void r648make(T648* C,T0* a1,T0* a2,T0* a3);
/*GEANT_PROJECT_PARSER*/
void r648parse_file(T648* C,T0* a1);
/*GEANT_XSLT_COMMAND*/
T0* r557file_system(void);
/*GEANT_XSLT_COMMAND*/
T0* r557clone(T0* a1);
/*GEANT_XSLT_COMMAND*/
void r557make(T557* C,T0* a1);
/*GEANT_XSLT_COMMAND*/
void r557execute_xalan_java(T557* C);
/*GEANT_XSLT_COMMAND*/
void r557execute_xsltproc(T557* C);
/*GEANT_XSLT_COMMAND*/
void r557execute(T557* C);
/*GEANT_XSLT_COMMAND*/
void r557execute_xalan_cpp(T557* C);
/*GEANT_XSLT_COMMAND*/
void r557execute_shell(T557* C,T0* a1);
/*GEANT_XSLT_COMMAND*/
T6 r557is_executable(T557* C);
/*GEANT_XSLT_COMMAND*/
void r557_191Pmake(T557* C,T0* a1);
extern T0*oBC545exclude_attribute_name;
extern T0*oBC545directory_attribute_name;
/*GEANT_DIRECTORYSET_ELEMENT*/
T0* r545attribute_value(T545* C,T0* a1);
/*GEANT_DIRECTORYSET_ELEMENT*/
void r545_27Pmake(T545* C,T0* a1,T0* a2);
/*GEANT_DIRECTORYSET_ELEMENT*/
T0* r545elements_by_name(T545* C,T0* a1);
extern T0*oBC545include_attribute_name;
/*GEANT_DIRECTORYSET_ELEMENT*/
void r545make(T545* C,T0* a1,T0* a2);
/*GEANT_DIRECTORYSET_ELEMENT*/
T6 r545boolean_value(T545* C,T0* a1);
extern T0*oBC545exclude_element_name;
extern T0*oBC545include_element_name;
extern T0*oBC545concat_attribute_name;
extern T0*oBC209type_attribute_value_flat;
/*GEANT_MAP*/
T0* r209clone(T0* a1);
/*GEANT_MAP*/
T0* r209glob_prefix(T0* a1);
/*GEANT_MAP*/
void r209make(T209* C,T0* a1);
extern T0*oBC209type_attribute_value_merge;
/*GEANT_MAP*/
T0* r209mapped_filename(T209* C,T0* a1);
extern T0*oBC209type_attribute_value_identity;
/*GEANT_MAP*/
T0* r209glob_postfix(T0* a1);
extern T0*oBC209type_attribute_value_glob;
/*GEANT_MAP*/
T6 r209is_executable(T209* C);
/*KL_PATHNAME*/
void r778append_name(T778* C,T0* a1);
/*KL_PATHNAME*/
T6 r778is_parent(T778* C,T2 a1);
/*KL_PATHNAME*/
void r778make(T778* C);
/*KL_PATHNAME*/
void r778set_canonical(T778* C);
/*KL_PATHNAME*/
T6 r778is_current(T778* C,T2 a1);
/*GEANT_PROJECT_LOADER*/
T0* r31file_system(void);
/*GEANT_PROJECT_LOADER*/
void r31load(T31* C,T0* a1,T0* a2);
/*GEANT_PROJECT_LOADER*/
void r31make(T31* C,T0* a1);
/*GEANT_PROJECT_LOADER*/
void r31exit_application(T2 a1,T0* a2);
/*XM_NAMESPACE*/
T6 r162is_equal(T162* C,T0* a1);
/*XM_NAMESPACE*/
void r162make(T162* C,T0* a1,T0* a2);
/*XM_NAMESPACE*/
T2 r162hash_code(T162* C);
/*XM_NAMESPACE*/
T6 r162same_prefix(T162* C,T0* a1);
/*GEANT_EXEC_COMMAND*/
T6 r203is_commandline_executable(T203* C);
/*GEANT_EXEC_COMMAND*/
void r203set_fileset(T203* C,T0* a1);
/*GEANT_EXEC_COMMAND*/
void r203execute(T203* C);
/*GEANT_EXEC_COMMAND*/
void r203execute_shell(T203* C,T0* a1);
/*GEANT_EXEC_COMMAND*/
T6 r203is_executable(T203* C);
/*GEANT_EXEC_COMMAND*/
T6 r203is_fileset_executable(T203* C);
/*LX_WILDCARD_PARSER*/
void r240yy_do_action(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
void r240process_escaped_character(T240* C);
/*LX_WILDCARD_PARSER*/
void r240report_bad_character_error(T240* C,T0* a1);
extern T0*oBC240yytable_template;
extern int fBC240yytable_template;
/*LX_WILDCARD_PARSER*/
T0* r240yytable_template(void);
/*LX_WILDCARD_PARSER*/
void r240make_parser_skeleton(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240append_character_set_to_character_class(T240* C,T2 a1,T2 a2,T0* a3);
/*LX_WILDCARD_PARSER*/
T2 r240yy_at_beginning_of_line(T240* C);
/*LX_WILDCARD_PARSER*/
void r240report_unrecognized_rule_error(T240* C);
/*LX_WILDCARD_PARSER*/
void r240fatal_error(T0* a1);
/*LX_WILDCARD_PARSER*/
T2 r240yytype1(T0* a1);
/*LX_WILDCARD_PARSER*/
T0* r240yytype2(T0* a1);
/*LX_WILDCARD_PARSER*/
T0* r240yytype3(T0* a1);
/*LX_WILDCARD_PARSER*/
T0* r240yytype4(T0* a1);
/*LX_WILDCARD_PARSER*/
T2 r240start_condition(T240* C);
/*LX_WILDCARD_PARSER*/
void r240yy_do_error_action(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
T0* r240new_nfa_from_character(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
void r240parse(T240* C);
/*LX_WILDCARD_PARSER*/
void r240check_options(T240* C);
/*LX_WILDCARD_PARSER*/
void r240report_missing_quote_error(T240* C);
/*LX_WILDCARD_PARSER*/
void r240set_input_buffer(T240* C,T0* a1);
/*LX_WILDCARD_PARSER*/
T2 r240yy_translate(T240* C,T2 a1);
extern T0*oBC241yy_ec_template;
extern int fBC241yy_ec_template;
/*LX_WILDCARD_PARSER*/
T0* r240yy_ec_template(void);
/*LX_WILDCARD_PARSER*/
void r240yy_execute_action(T240* C,T2 a1);
extern T0*oBC240yytranslate_template;
extern int fBC240yytranslate_template;
/*LX_WILDCARD_PARSER*/
T0* r240yytranslate_template(void);
extern T0*oBC241yy_def_template;
extern int fBC241yy_def_template;
/*LX_WILDCARD_PARSER*/
T0* r240yy_def_template(void);
/*LX_WILDCARD_PARSER*/
void r240report_full_and_meta_equiv_classes_error(T240* C);
/*LX_WILDCARD_PARSER*/
T3 r240text_item(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
T0* r240new_string_buffer(T0* a1);
/*LX_WILDCARD_PARSER*/
void r240yy_load_input_buffer(T240* C);
extern T0*oBC240yyr1_template;
extern int fBC240yyr1_template;
/*LX_WILDCARD_PARSER*/
T0* r240yyr1_template(void);
/*LX_WILDCARD_PARSER*/
void r240make_with_buffer(T240* C,T0* a1);
/*LX_WILDCARD_PARSER*/
void r240process_rule(T240* C,T0* a1);
/*LX_WILDCARD_PARSER*/
void r240process_character(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
T2 r240yy_null_trans_state(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
void r240report_negative_range_in_character_class_error(T240* C);
/*LX_WILDCARD_PARSER*/
void r240report_full_and_variable_trailing_context_error(T240* C);
extern T0*oBC241yy_accept_template;
extern int fBC241yy_accept_template;
/*LX_WILDCARD_PARSER*/
T0* r240yy_accept_template(void);
/*LX_WILDCARD_PARSER*/
void r240read_token(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240question_character_class(T240* C);
extern T0*oBC240yyr2_template;
extern int fBC240yyr2_template;
/*LX_WILDCARD_PARSER*/
T0* r240yyr2_template(void);
/*LX_WILDCARD_PARSER*/
T2 r240yy_previous_state(T240* C);
extern T0*oBC240yypgoto_template;
extern int fBC240yypgoto_template;
/*LX_WILDCARD_PARSER*/
T0* r240yypgoto_template(void);
/*LX_WILDCARD_PARSER*/
void r240yy_refill_input_buffer(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240yy_fixed_array(T0* a1);
extern T0*oBC241yy_meta_template;
extern int fBC241yy_meta_template;
/*LX_WILDCARD_PARSER*/
T0* r240yy_meta_template(void);
/*LX_WILDCARD_PARSER*/
void r240report_character_out_of_range_error(T240* C,T0* a1);
/*LX_WILDCARD_PARSER*/
T0* r240new_epsilon_nfa(T240* C);
extern T0*oBC241yy_base_template;
extern int fBC241yy_base_template;
/*LX_WILDCARD_PARSER*/
T0* r240yy_base_template(void);
/*LX_WILDCARD_PARSER*/
void r240report_full_and_reject_error(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240append_character_to_character_class(T240* C,T2 a1,T0* a2);
/*LX_WILDCARD_PARSER*/
T2 r240text_count(T240* C);
/*LX_WILDCARD_PARSER*/
void r240parse_string(T240* C,T0* a1);
/*LX_WILDCARD_PARSER*/
void r240yy_initialize(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240text(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240new_symbol_nfa(T240* C,T2 a1);
extern T0*oBC241yy_nxt_template;
extern int fBC241yy_nxt_template;
/*LX_WILDCARD_PARSER*/
T0* r240yy_nxt_template(void);
/*LX_WILDCARD_PARSER*/
void r240yy_set_line_column(T240* C);
/*LX_WILDCARD_PARSER*/
void r240yy_build_parser_tables(T240* C);
/*LX_WILDCARD_PARSER*/
void r240build_equiv_classes(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240new_symbol_class_nfa(T240* C,T0* a1);
/*LX_WILDCARD_PARSER*/
T6 r240valid_start_condition(T2 a1);
/*LX_WILDCARD_PARSER*/
T0* r240empty_buffer(void);
/*LX_WILDCARD_PARSER*/
void r240report_error(T240* C,T0* a1);
/*LX_WILDCARD_PARSER*/
T0* r240append_character_to_string(T240* C,T2 a1,T0* a2);
extern T0*oBC240yydefact_template;
extern int fBC240yydefact_template;
/*LX_WILDCARD_PARSER*/
T0* r240yydefact_template(void);
extern T0*oBC241yy_chk_template;
extern int fBC241yy_chk_template;
/*LX_WILDCARD_PARSER*/
T0* r240yy_chk_template(void);
/*LX_WILDCARD_PARSER*/
T0* r240new_nfa_from_character_class(T240* C,T0* a1);
extern T0*oBC240yycheck_template;
extern int fBC240yycheck_template;
/*LX_WILDCARD_PARSER*/
T0* r240yycheck_template(void);
/*LX_WILDCARD_PARSER*/
T0* r240new_character_class(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240filename(T240* C);
/*LX_WILDCARD_PARSER*/
T0* r240yyfixed_array(T0* a1);
extern T0*oBC240yydefgoto_template;
extern int fBC240yydefgoto_template;
/*LX_WILDCARD_PARSER*/
T0* r240yydefgoto_template(void);
/*LX_WILDCARD_PARSER*/
void r240yy_clear_all(T240* C);
/*LX_WILDCARD_PARSER*/
void r240yy_set_content(T240* C,T0* a1);
extern T0*oBC240yypact_template;
extern int fBC240yypact_template;
/*LX_WILDCARD_PARSER*/
T0* r240yypact_template(void);
/*LX_WILDCARD_PARSER*/
void r240set_start_condition(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
void r240yy_build_tables(T240* C);
/*LX_WILDCARD_PARSER*/
void r240make_lex_scanner_from_description(T240* C,T0* a1,T0* a2);
/*LX_WILDCARD_PARSER*/
void r240less(T240* C,T2 a1);
/*LX_WILDCARD_PARSER*/
void r240report_bad_character_class_error(T240* C);
/*LX_WILDCARD_PARSER*/
void r240make_from_description(T240* C,T0* a1,T0* a2);
/*GEANT_ISE_COMMAND*/
T6 r196is_cleanable(T196* C);
/*GEANT_ISE_COMMAND*/
T0* r196file_system(void);
/*GEANT_ISE_COMMAND*/
T0* r196clone(T0* a1);
/*GEANT_ISE_COMMAND*/
void r196execute_clean(T196* C);
/*GEANT_ISE_COMMAND*/
void r196execute_compile(T196* C);
/*GEANT_ISE_COMMAND*/
T6 r196is_compilable(T196* C);
/*GEANT_ISE_COMMAND*/
void r196execute(T196* C);
/*GEANT_ISE_COMMAND*/
void r196execute_shell(T196* C,T0* a1);
/*GEANT_ISE_COMMAND*/
T6 r196is_executable(T196* C);
/*UT_SYNTAX_ERROR*/
T0* r388arguments(void);
/*UT_SYNTAX_ERROR*/
void r388make(T388* C,T0* a1,T2 a2);
/*UT_SYNTAX_ERROR*/
T0* r388message(T388* C,T0* a1);
/*UT_SYNTAX_ERROR*/
T0* r388default_message(T388* C);
/*GEANT_VARIABLES*/
T0* r29expanded_variable_value(T29* C,T0* a1);
/*GEANT_VARIABLES*/
T0* r29variable_value(T29* C,T0* a1);
/*GEANT_VARIABLES*/
T0* r29file_system(void);
extern T0*oBC15commandline_variables;
extern int fBC15commandline_variables;
/*GEANT_VARIABLES*/
T0* r29commandline_variables(void);
/*GEANT_VARIABLES*/
T0* r29clone(T0* a1);
extern T0*oBC17execution_environment;
/*GEANT_VARIABLES*/
void r29make(T29* C);
/*GEANT_VARIABLES*/
T6 r29boolean_condition_value(T29* C,T0* a1);
/*GEANT_VARIABLES*/
T0* r29string_tokens(T0* a1,T3 a2);
/*GEANT_VARIABLES*/
T0* r29interpreted_string(T29* C,T0* a1);
/*GEANT_VARIABLES*/
void r29exit_application(T2 a1,T0* a2);
/*GEANT_VARIABLES*/
T6 r29has_variable(T29* C,T0* a1);
extern T0*oBC22command_arguments;
extern int fBC22command_arguments;
/*KL_ARGUMENTS*/
T0* r390command_arguments(void);
/*KL_ARGUMENTS*/
T0* r390argument(T2 a1);
/*DP_SHELL_COMMAND*/
T2 r779execute_command(T0* a1);
/*DP_SHELL_COMMAND*/
void r779make(T779* C,T0* a1);
/*DP_SHELL_COMMAND*/
void r779execute(T779* C);
extern T0*oBC524validate_attribute_name;
extern T0*oBC524define_element_name;
/*GEANT_GEXACE_TASK*/
T0* r524attribute_value(T524* C,T0* a1);
/*GEANT_GEXACE_TASK*/
T0* r524file_system(void);
extern T0*oBC524xace_filename_attribute_name;
/*GEANT_GEXACE_TASK*/
T0* r524elements_by_name(T524* C,T0* a1);
extern T0*oBC524library_attribute_name;
/*GEANT_GEXACE_TASK*/
void r524make(T524* C,T0* a1,T0* a2);
/*GEANT_GEXACE_TASK*/
T6 r524boolean_value(T524* C,T0* a1);
/*GEANT_GEXACE_TASK*/
void r524task_make(T524* C,T0* a1,T0* a2);
extern T0*oBC524output_filename_attribute_name;
extern T0*oBC524verbose_attribute_name;
/*GEANT_GEXACE_TASK*/
void r524execute(T524* C);
/*GEANT_GEXACE_TASK*/
T6 r524is_enabled(T524* C);
extern T0*oBC524system_attribute_name;
/*GEANT_GEXACE_TASK*/
void r524interpreting_element_make(T524* C,T0* a1,T0* a2);
extern T0*oBC524cluster_attribute_name;
/*GEANT_UNSET_TASK*/
T0* r522attribute_value(T522* C,T0* a1);
/*GEANT_UNSET_TASK*/
T0* r522file_system(void);
extern T0*oBC522name_attribute_name;
/*GEANT_UNSET_TASK*/
void r522make(T522* C,T0* a1,T0* a2);
/*GEANT_UNSET_TASK*/
void r522task_make(T522* C,T0* a1,T0* a2);
/*GEANT_UNSET_TASK*/
void r522execute(T522* C);
/*GEANT_UNSET_TASK*/
T6 r522is_enabled(T522* C);
/*GEANT_UNSET_TASK*/
void r522interpreting_element_make(T522* C,T0* a1,T0* a2);
/*GEANT_SETENV_COMMAND*/
void r553execute(T553* C);
/*GEANT_SETENV_COMMAND*/
T6 r553is_executable(T553* C);
/*KL_TEXT_INPUT_FILE*/
T6 r649is_closed(T649* C);
/*KL_TEXT_INPUT_FILE*/
void r649old_close(T649* C);
/*KL_TEXT_INPUT_FILE*/
void r649old_delete(T0* a1);
/*KL_TEXT_INPUT_FILE*/
T2 r649count(T649* C);
/*KL_TEXT_INPUT_FILE*/
T2 r649time_stamp(T649* C);
/*KL_TEXT_INPUT_FILE*/
T6 r649file_exists(T0* a1);
/*KL_TEXT_INPUT_FILE*/
T2 r649epoch_days(T2 a1,T2 a2,T2 a3);
/*KL_TEXT_INPUT_FILE*/
T2 r649read_to_string(T649* C,T0* a1,T2 a2,T2 a3);
/*KL_TEXT_INPUT_FILE*/
T774 r649last_change_of(T0* a1);
/*KL_TEXT_INPUT_FILE*/
void r649rename_to(T0* a1,T0* a2);
/*KL_TEXT_INPUT_FILE*/
void r649open_read(T649* C);
/*KL_TEXT_INPUT_FILE*/
T0* r649file_system(void);
/*KL_TEXT_INPUT_FILE*/
void r649old_read_character(T649* C);
/*KL_TEXT_INPUT_FILE*/
void r649read_character(T649* C);
/*KL_TEXT_INPUT_FILE*/
void r649fill_buffer(T649* C);
/*KL_TEXT_INPUT_FILE*/
T2 r649days_at_month(T2 a1,T2 a2);
/*KL_TEXT_INPUT_FILE*/
void r649close(T649* C);
/*KL_TEXT_INPUT_FILE*/
void r649make(T649* C,T0* a1);
/*KL_TEXT_INPUT_FILE*/
T6 r649exists(T649* C);
/*KL_TEXT_INPUT_FILE*/
T2 r649read_to_buffer(T649* C,T0* a1,T2 a2,T2 a3);
/*KL_TEXT_INPUT_FILE*/
T2 r649size_of(T0* a1);
/*KL_TEXT_INPUT_FILE*/
void r649copy_file(T649* C,T0* a1);
/*KL_TEXT_INPUT_FILE*/
void r649connect_to(T649* C,T0* a1);
extern T655 oBC22file_tools;
extern T2 oBC654epoch_days_at_month;
extern int fBC654epoch_days_at_month;
/*KL_TEXT_INPUT_FILE*/
T2 r649epoch_days_at_month(void);
/*KL_TEXT_INPUT_FILE*/
T6 r649same_physical_file(T649* C,T0* a1);
/*KL_TEXT_INPUT_FILE*/
T6 r649leap_year(T2 a1);
/*KL_TEXT_INPUT_FILE*/
void r649delete(T649* C);
extern T2 oBC654epoch_leap_years;
extern int fBC654epoch_leap_years;
/*KL_TEXT_INPUT_FILE*/
T2 r649epoch_leap_years(void);
/*KL_TEXT_INPUT_FILE*/
void r649change_name(T649* C,T0* a1);
extern T0*oBC653tmp_file1;
extern int fBC653tmp_file1;
/*KL_TEXT_INPUT_FILE*/
T0* r649tmp_file1(void);
/*KL_TEXT_INPUT_FILE*/
void r649old_open_read(T649* C);
/*KL_TEXT_INPUT_FILE*/
T6 r649is_readable(T649* C);
/*KL_TEXT_INPUT_FILE*/
T2 r649_395Pread_to_buffer(T649* C,T0* a1,T2 a2,T2 a3);
extern T0*oBC652tmp_directory;
extern int fBC652tmp_directory;
/*KL_TEXT_INPUT_FILE*/
T0* r649tmp_directory(void);
extern T0*oBC208from_attribute_name;
extern T0*oBC208type_attribute_name;
/*GEANT_MAP_ELEMENT*/
T0* r208attribute_value(T208* C,T0* a1);
/*GEANT_MAP_ELEMENT*/
void r208_27Pmake(T208* C,T0* a1,T0* a2);
/*GEANT_MAP_ELEMENT*/
void r208make(T208* C,T0* a1,T0* a2);
extern T0*oBC208to_attribute_name;
extern T0*oBC208map_element_name;
/*KL_CHARACTER_BUFFER*/
T0* r454substring(T454* C,T2 a1,T2 a2);
/*KL_CHARACTER_BUFFER*/
void r454fill_from_string(T454* C,T0* a1,T2 a2);
/*KL_CHARACTER_BUFFER*/
T2 r454fill_from_stream(T454* C,T0* a1,T2 a2,T2 a3);
/*KL_CHARACTER_BUFFER*/
void r454move_left(T454* C,T2 a1,T2 a2,T2 a3);
/*KL_CHARACTER_BUFFER*/
void r454make(T454* C,T2 a1);
/*KL_CHARACTER_BUFFER*/
void r454resize(T454* C,T2 a1);
extern T0*oBC655tfr1;
/*FILE_TOOLS*/
T6 r655is_readable(T0* a1);
/*UC_UTF16_ROUTINES*/
T6 r814is_endian_detection_character_least_first(T2 a1,T2 a2);
/*UC_UTF16_ROUTINES*/
T6 r814is_high_surrogate(T2 a1);
/*UC_UTF16_ROUTINES*/
T6 r814is_low_surrogate(T2 a1);
/*UC_UTF16_ROUTINES*/
T6 r814is_endian_detection_character_most_first(T2 a1,T2 a2);
/*UC_UTF16_ROUTINES*/
T6 r814is_surrogate(T2 a1);
/*UC_UTF16_ROUTINES*/
T2 r814least_10_bits(T2 a1,T2 a2);
/*UC_UTF16_ROUTINES*/
T2 r814surrogate(T2 a1,T2 a2);
/*GEANT*/
void r12read_command_line(T12* C);
/*GEANT*/
T0* r12arguments(void);
/*GEANT*/
T0* r12commandline_variables(void);
/*GEANT*/
T0* r12clone(T0* a1);
/*GEANT*/
void r12report_usage_message(T12* C);
extern T0*oBC12usage_message;
extern int fBC12usage_message;
/*GEANT*/
T0* r12usage_message(void);
/*GEANT*/
void r12make(T12* C);
extern T0*oBC12default_build_filename;
/*GEANT*/
void r12report_version_number(T12* C);
/*GEANT*/
void r12exit_application(T2 a1,T0* a2);
/*GEANT*/
void r12report_usage_error(T12* C);
extern T0*oBC39error;
extern int fBC39error;
/*KL_STANDARD_FILES*/
T0* r39error(void);
extern T0*oBC39output;
extern int fBC39output;
/*KL_STANDARD_FILES*/
T0* r39output(void);
/*reference CHARACTER*/
T6 r852is_equal(T852* C,T0* a1);
/*reference CHARACTER*/
T0* r852twin(T852* C);
extern T2 oBC63maximum_character_code;
extern int fBC63maximum_character_code;
/*KL_PLATFORM*/
T2 r63maximum_character_code(T63* C);
extern T2 oBC63maximum_integer;
/*reference INTEGER_8*/
T6 r408is_equal(T408* C,T0* a1);
/*reference INTEGER_8*/
T0* r408twin(T408* C);
/*UC_UNICODE_ROUTINES*/
T6 r123valid_code(T2 a1);
/*UC_UTF8_ROUTINES*/
T2 r62encoded_next_value(T3 a1);
/*UC_UTF8_ROUTINES*/
T2 r62character_byte_count(T3 a1);
/*UC_UTF8_ROUTINES*/
T2 r62encoded_first_value(T3 a1);
/*UC_UTF8_ROUTINES*/
T2 r62code_byte_count(T2 a1);
/*UC_UTF8_ROUTINES*/
T2 r62encoded_byte_count(T3 a1);
/*UC_UTF8_ROUTINES*/
T6 r62is_encoded_first_byte(T3 a1);
/*UC_UTF8_ROUTINES*/
T6 r62is_encoded_next_byte(T3 a1);
/*UC_UTF8_ROUTINES*/
void r62append_code_to_utf8(T0* a1,T2 a2);
/*UC_UTF8_ROUTINES*/
T0* r62to_utf8(T0* a1);
/*UC_UTF8_ROUTINES*/
T6 r62valid_utf8(T0* a1);
/*UC_UTF8_ROUTINES*/
T2 r62substring_byte_count(T0* a1,T2 a2,T2 a3);
/*KL_INTEGER_ROUTINES*/
T3 r65to_character(T2 a1);
/*UC_EQUALITY_TESTER*/
T6 r161test(T0* a1,T0* a2);
/*SYSTEM*/
T0* r164get_environment_variable(T0* a1);
/*reference INTEGER*/
T6 r407is_equal(T407* C,T0* a1);
/*reference INTEGER*/
T0* r407twin(T407* C);
/*XM_NODE_TYPER*/
void r144process_comment(T144* C,T0* a1);
/*XM_NODE_TYPER*/
void r144process_processing_instruction(T144* C,T0* a1);
/*XM_NODE_TYPER*/
void r144process_element(T144* C,T0* a1);
/*XM_NODE_TYPER*/
void r144process_attribute(T144* C,T0* a1);
/*XM_NODE_TYPER*/
void r144process_character_data(T144* C,T0* a1);
/*XM_NODE_TYPER*/
void r144reset(T144* C);
/*BASIC_DIRECTORY*/
void r183connect_to_current_working_directory(T183* C);
/*BASIC_DIRECTORY*/
void r183disconnect(T183* C);
/*BASIC_DIRECTORY*/
T6 r183remove_directory(T0* a1);
extern T0*oBC183last_entry;
/*BASIC_DIRECTORY*/
void r183change_current_working_directory(T183* C,T0* a1);
/*BASIC_DIRECTORY*/
void r183read_entry(T183* C);
/*BASIC_DIRECTORY*/
void r183connect_to(T183* C,T0* a1);
/*BASIC_DIRECTORY*/
T6 r183create_new_directory(T0* a1);
/*KL_STRING_ROUTINES*/
void r50wipe_out(T0* a1);
/*KL_STRING_ROUTINES*/
void r50keep_tail(T0* a1,T2 a2);
/*KL_STRING_ROUTINES*/
T0* r50as_string(T0* a1);
/*KL_STRING_ROUTINES*/
T0* r50clone(T0* a1);
/*KL_STRING_ROUTINES*/
T0* r50appended_string(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
void r50remove_tail(T0* a1,T2 a2);
/*KL_STRING_ROUTINES*/
T6 r50is_integer(T0* a1);
/*KL_STRING_ROUTINES*/
T0* r50make(T2 a1);
/*KL_STRING_ROUTINES*/
T0* r50string(T0* a1);
/*KL_STRING_ROUTINES*/
T2 r50hexadecimal_to_integer(T0* a1);
/*KL_STRING_ROUTINES*/
void r50keep_head(T0* a1,T2 a2);
/*KL_STRING_ROUTINES*/
T0* r50appended_substring(T0* a1,T0* a2,T2 a3,T2 a4);
/*KL_STRING_ROUTINES*/
T0* r50new_empty_string(T0* a1,T2 a2);
/*KL_STRING_ROUTINES*/
T0* r50concat(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
T2 r50substring_index(T0* a1,T0* a2,T2 a3);
/*KL_STRING_ROUTINES*/
T6 r50is_hexadecimal(T0* a1);
/*KL_STRING_ROUTINES*/
T6 r50same_string(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
T6 r50elks_same_string(T0* a1,T0* a2);
/*KL_STRING_ROUTINES*/
void r50remove_head(T0* a1,T2 a2);
/*KL_STRING_ROUTINES*/
void r50append_substring_to_string(T0* a1,T0* a2,T2 a3,T2 a4);
/*XM_NULL_EXTERNAL_RESOLVER*/
T0* r739last_error(void);
/*KL_BOOLEAN_ROUTINES*/
T6 r792nxor(T0* a1);
/*KL_EXECUTION_ENVIRONMENT*/
T0* r163variable_value(T0* a1);
extern T164 oBC163environment_impl;
/*TIME*/
T2 r774day(T774* C);
/*TIME*/
T2 r774hour(T774* C);
/*TIME*/
T2 r774year(T774* C);
/*TIME*/
T2 r774month(T774* C);
extern T0*oBC774time_mode_memo;
/*TIME*/
T2 r774minute(T774* C);
/*TIME*/
T6 r774is_local_time(void);
/*TIME*/
T2 r774second(T774* C);
/*KL_OPERATING_SYSTEM*/
T0* r43current_working_directory(T43* C);
/*KL_OPERATING_SYSTEM*/
T0* r43variable_value(T0* a1);
/*KL_OPERATING_SYSTEM*/
T0* r43clone(T0* a1);
extern T6 oBC43is_windows;
extern int fBC43is_windows;
/*KL_OPERATING_SYSTEM*/
T6 r43is_windows(T43* C);
extern T164 oBC43environment_impl;
/*KL_OPERATING_SYSTEM*/
T6 r43equal(T0* a1,T0* a2);
extern T6 oBC43is_unix;
extern int fBC43is_unix;
/*KL_OPERATING_SYSTEM*/
T6 r43is_unix(T43* C);
extern T12*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 928
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms40_10;
extern T7*ms6_59251;
extern T7*ms184_8976;
extern T7*ms388_1449702436;
extern T7*ms733_1864547461;
extern T7*ms733_2065551545;
extern T7*ms770_1158552108;
extern T7*ms741_192;
extern T7*ms413_1686894687;
extern T7*ms481_10;
extern T7*ms19_1554;
extern T7*ms415_1531431095;
extern T7*ms393_6934577;
extern T7*ms184_276;
extern T7*ms453_823229232;
extern T7*ms733_513387338;
extern T7*ms733_1787513656;
extern T7*ms733_438332871;
extern T7*ms741_32;
extern T7*ms771_1515383187;
extern T7*ms733_1383485945;
extern T7*ms411_1086870388;
extern T7*ms185_276;
extern T7*ms733_1040340337;
extern T7*ms412_215272365;
extern T7*ms778_276;
extern T7*ms653_250860571;
extern T7*ms414_1520688928;
extern T7*ms733_993001251;
extern T7*ms733_930325994;
extern T7*ms733_1718816811;
extern T7*ms50_0;
extern T7*ms410_1203377682;
extern T7*ms54_0;
extern T7*ms62_0;
extern T7*ms723_415578366;
extern T7*ms723_473224273;
extern T7*ms733_429369815;
extern T7*ms6_14036;
extern T7*ms733_1232318322;
extern T7*ms426_280487577;
extern T7*ms733_1785408556;
extern T7*ms409_645257649;
extern T7*ms184_46;
extern T7*ms185_46;
extern T7*ms778_46;
extern T7*ms584_10;
extern T7*ms733_758578972;
extern T7*ms733_224621212;
extern T7*ms225_0;
extern T7*ms185_0;
extern T7*ms733_313350252;
extern T7*ms733_1105337616;
extern T7*ms733_1639807481;
extern T7*ms180_80516;
extern T7*ms733_414094759;
extern T7*ms733_620986269;
extern T7*ms653_80516;
extern T7*ms728_969380041;
extern T7*ms733_1389019675;
extern T7*ms733_1680506019;
extern T7*ms733_225532234;
extern T7*ms733_1806545392;
extern T7*ms232_1338085634;
extern T7*ms733_880035048;
extern T7*ms728_1806352573;
extern T7*ms733_1806352573;
extern T7*ms733_729820516;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
/*
-- This file is  free  software, which  comes  along  with  SmartEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmartEiffel@loria.fr
--                       http://SmartEiffel.loria.fr
--
*/
/*
  This file (SmartEiffel/sys/runtime/manifest_string_trace.h) is automatically
  included when the -manifest_string_trace command line flag is used.
*/

EIF_STRING se_ms_trace(int count, char* c_string, int li, int co, char* path);
void se_msi1(void);
void se_msi2(void);
void*se_ma70(int argc,...);
void*se_ma271(int argc,...);
void*se_ma468(int argc,...);
void*se_ma472(int argc,...);
void*se_ma725(int argc,...);
void X270put(T0*C,T2 a1);
T0* X270to_array(T0*C,T2 a1,T2 a2);
void X270add(T0*C,T0* a1);
void X253put(T0*C,T2 a1,T2 a2);
T2 X253item(T0*C,T2 a1);
T6 X116test(T0*C,T0* a1,T0* a2);
T6 X54same_unicode_string(T0*C,T0* a1);
T0* X54as_string(T0*C);
T2 X54byte_index(T0*C,T2 a1);
T2 X54next_byte_index(T0*C,T2 a1);
void X54append_string(T0*C,T0* a1);
void X54append_substring(T0*C,T0* a1,T2 a2,T2 a3);
T2 X54item_code_at_byte_index(T0*C,T2 a1);
T0* X54string(T0*C);
T0* X54prefixed_string(T0*C,T0* a1);
T0* X54new_empty_string(T0*C,T2 a1);
T2 X54substring_index(T0*C,T0* a1,T2 a2);
T3 X54byte_item(T0*C,T2 a1);
T0* X54to_utf8(T0*C);
T0* X54_ix_43(T0*C,T0* a1);
T0* X7out(T0*C);
T0* X7substring(T0*C,T2 a1,T2 a2);
void X7wipe_out(T0*C);
void X7keep_tail(T0*C,T2 a1);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
T2 X7index_of(T0*C,T3 a1,T2 a2);
void X7set_count(T0*C,T2 a1);
T6 X7same_type(T0*C,T0* a1);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
void X7remove(T0*C,T2 a1);
T0* X7string(T0*C);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
void X7keep_head(T0*C,T2 a1);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
T2 X7substring_index(T0*C,T0* a1,T2 a2);
void X7from_external_copy(T0*C,T8 a1);
T8 X7to_external(T0*C);
T0* X7twin(T0*C);
T0* X7_ix_43(T0*C,T0* a1);
void X7swap(T0*C,T2 a1,T2 a2);
T11 X182item(T0*C);
void X869put_right(T0*C,T0* a1);
T2 X190exit_code(T0*C);
void X190execute(T0*C);
T6 X190is_executable(T0*C);
T0* X119last(T0*C);
T0* X119cursor_item(T0*C,T0* a1);
T6 X119is_equal(T0*C,T0* a1);
T0* X119item(T0*C,T2 a1);
T6 X119cursor_after(T0*C,T0* a1);
void X119cursor_forth(T0*C,T0* a1);
void X119cursor_start(T0*C,T0* a1);
void X119force_last(T0*C,T0* a1);
T0* X119new_cursor(T0*C);
T6 X20is_equal(T0*C,T0* a1);
T0* X20twin(T0*C);
void X137process(T0*C,T0* a1);
void X740apply_input_buffer(T0*C);
T6 X22se_assigned_from(T0*C,T0* a1);
T6 X22conforms_to(T0*C,T0* a1);
void X44put_new_line(T0*C);
void X44put_line(T0*C,T0* a1);
void X44flush(T0*C);
void X44put_string(T0*C,T0* a1);
T6 X394is_closable(T0*C);
T0* X394name(T0*C);
T2 X394read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X394read_character(T0*C);
T6 X394is_open_read(T0*C);
void X394close(T0*C);
T2 X394read_to_buffer(T0*C,T0* a1,T2 a2,T2 a3);
T6 X394end_of_input(T0*C);
T3 X394last_character(T0*C);
void X142force_last(T0*C,T0* a1);
void X393fill(T0*C);
T0* X393name(T0*C);
void X674on_start_tag_finish(T0*C);
void X674on_finish(T0*C);
void X674on_content(T0*C,T0* a1);
void X674on_start(T0*C);
void X674on_processing_instruction(T0*C,T0* a1,T0* a2);
void X674on_start_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X674on_comment(T0*C,T0* a1);
void X674on_end_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X674on_attribute(T0*C,T0* a1,T0* a2,T0* a3,T0* a4);
void X674on_error(T0*C,T0* a1);
T2 X471count(T0*C);
T2 X471item(T0*C,T2 a1);
T6 X282labeled(T0*C,T2 a1);
void X282record(T0*C,T0* a1);
T0* X186item(T0*C);
T6 X186after(T0*C);
void X186forth(T0*C);
void X186start(T0*C);
void X154cursor_go_after(T0*C,T0* a1);
void X154cursor_forth(T0*C,T0* a1);
void X154cursor_start(T0*C,T0* a1);
T2 X407item(T0*C);
T2 X191exit_code(T0*C);
void X191execute(T0*C);
T6 X191is_executable(T0*C);
T0* X389default_message(T0*C);
void X741read_token(T0*C);
void X741close_input(T0*C);
void X741reset(T0*C);
void X741set_input_stream(T0*C,T0* a1);
T0* X169container(T0*C);
T0* X180pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X180relative_current_directory(T0*C);
T0* X180absolute_pathname(T0*C,T0* a1);
T0* X180dirname(T0*C,T0* a1);
T0* X180exe_extension(T0*C);
T0* X180relative_parent_directory(T0*C);
T0* X180pathname(T0*C,T0* a1,T0* a2);
T0* X180canonical_pathname(T0*C,T0* a1);
T0* T3toT852(T3 source);
T0* T2toT407(T2 source);
T0* T11toT182(T11 source);
T0* T1toT408(T1 source);

#ifdef __cplusplus
}
#endif
