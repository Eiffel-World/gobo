#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #7 (Monday October 1st 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S60 T60;
typedef struct S366 T366;
typedef struct S236 T236;
typedef int T270;
typedef struct S396 T396;
typedef struct S196 T196;
typedef struct S217 T217;
typedef struct S287 T287;
typedef struct S265 T265;
typedef struct S154 T154;
typedef struct S64 T64;
typedef struct S16 T16;
typedef struct S199 T199;
typedef struct S319 T319;
typedef int T293;
typedef struct S316 T316;
typedef struct S192 T192;
typedef struct S84 T84;
typedef struct S130 T130;
typedef struct S46 T46;
typedef struct S309 T309;
typedef struct S47 T47;
typedef struct S122 T122;
typedef struct S354 T354;
typedef struct S119 T119;
typedef struct S317 T317;
typedef struct S321 T321;
typedef struct S44 T44;
typedef struct S146 T146;
typedef struct S221 T221;
typedef struct S370 T370;
typedef struct S399 T399;
typedef struct S51 T51;
typedef struct S391 T391;
typedef struct S224 T224;
typedef struct S71 T71;
typedef struct S158 T158;
typedef struct S398 T398;
typedef struct S131 T131;
typedef struct S207 T207;
typedef struct S78 T78;
typedef struct S400 T400;
typedef struct S325 T325;
typedef struct S355 T355;
typedef struct S211 T211;
typedef struct S152 T152;
typedef struct S342 T342;
typedef struct S203 T203;
typedef struct S350 T350;
typedef struct S162 T162;
typedef struct S43 T43;
typedef struct S395 T395;
typedef struct S376 T376;
typedef struct S239 T239;
typedef struct S102 T102;
typedef struct S267 T267;
typedef struct S7 T7;
typedef struct S337 T337;
typedef struct S63 T63;
typedef struct S201 T201;
typedef struct S262 T262;
typedef struct S213 T213;
typedef struct S278 T278;
typedef struct S381 T381;
typedef struct S42 T42;
typedef struct S380 T380;
typedef struct S292 T292;
typedef struct S186 T186;
typedef struct S215 T215;
typedef struct S57 T57;
typedef struct S156 T156;
typedef struct S246 T246;
typedef struct S133 T133;
typedef struct S351 T351;
typedef struct S76 T76;
typedef struct S222 T222;
typedef struct S209 T209;
typedef struct S81 T81;
typedef struct S151 T151;
typedef struct S353 T353;
typedef struct S132 T132;
typedef struct S80 T80;
typedef struct S25 T25;
typedef struct S166 T166;
typedef struct S241 T241;
typedef struct S164 T164;
typedef struct S174 T174;
typedef struct S28 T28;
typedef struct S100 T100;
typedef struct S66 T66;
typedef struct S244 T244;
typedef struct S194 T194;
typedef struct S95 T95;
typedef struct S88 T88;
typedef struct S348 T348;
typedef struct S167 T167;
typedef struct S374 T374;
typedef struct S314 T314;
typedef struct S326 T326;
typedef struct S290 T290;
typedef struct S330 T330;
typedef struct S153 T153;
typedef struct S123 T123;
typedef struct S322 T322;
typedef struct S127 T127;
typedef struct S308 T308;
typedef struct S87 T87;
typedef struct S160 T160;
typedef struct S82 T82;
typedef struct S205 T205;
typedef struct S50 T50;
typedef struct S294 T294;
typedef struct S190 T190;
typedef struct S247 T247;
typedef struct S99 T99;
typedef struct S315 T315;
typedef struct S401 T401;
typedef struct S150 T150;
typedef struct S397 T397;
typedef int T291;
typedef struct S189 T189;
typedef struct S48 T48;
typedef struct S86 T86;
typedef struct S323 T323;
typedef struct S286 T286;
typedef struct S332 T332;
typedef struct S170 T170;
typedef struct S227 T227;
typedef struct S168 T168;

/*C Header Pass 2 :*/
typedef T0**T176;
typedef T0**T104;
typedef T0**T243;
typedef T0**T77;
typedef T3*T9;
typedef T0**T129;
typedef T2*T85;
typedef T0**T226;
typedef T0**T312;

/*C Header Pass 3 :*/
extern T293 M293;
struct S395{T5 _time_memory;};
int se_cmpT395(T395 o1,T395 o2);
struct S151{T8 _directory_stream;T8 _current_entry;};
int se_cmpT151(T151 o1,T151 o2);
struct S66{T2 _i_code;};
int se_cmpT66(T66 o1,T66 o2);
extern T291 M291;

/*C Header Pass 4 :*/
struct S366{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T366 M366;
struct S236{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T236 M236;
extern T270 M270;
struct S396{Tid id;T5 _item;};
extern T396 M396;
struct S196{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T196 M196;
struct S217{Tid id;T0* _project;T0* _element;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;};
extern T217 M217;
struct S287{Tid id;T0* _event_parser_factory;};
extern T287 M287;
struct S265{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T6 _end_of_file;T0* _character_buffer;};
extern T265 M265;
struct S154{Tid id;T0* _project;T6 _case_insensitive;T0* _creation_procedure;T0* _element;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _ace_filename;T0* _clean;};
extern T154 M154;
struct S64{Tid id;T0* _name;T0* _value;};
extern T64 M64;
struct S16{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;};
extern T16 M16;
struct S199{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T199 M199;
struct S319{Tid id;T0* _parameters;};
extern T319 M319;
struct S316{Tid id;};
extern T316 M316;
struct S192{Tid id;T0* _project;T0* _element;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T192 M192;
struct S84{Tid id;T85 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T84 M84;
struct S130{Tid id;};
extern T130 M130;
struct S46{Tid id;};
extern T46 M46;
struct S309{Tid id;};
extern T309 M309;
struct S47{Tid id;};
extern T47 M47;
struct S122{Tid id;};
extern T122 M122;
struct S354{Tid id;T0* _first;T0* _second;};
extern T354 M354;
struct S119{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T119 M119;
struct S317{Tid id;T6 _push_back_flag;T151 _basic_directory;T2 _memory;T0* _name;T6 _end_of_file;};
extern T317 M317;
struct S321{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T321 M321;
struct S44{Tid id;T2 _item;};
extern T44 M44;
struct S146{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T146 M146;
struct S221{Tid id;T0* _first;T0* _second;};
extern T221 M221;
struct S370{Tid id;T0* _item;T0* _right;};
extern T370 M370;
struct S399{Tid id;};
extern T399 M399;
struct S51{Tid id;T8 _item;};
extern T51 M51;
struct S391{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T391 M391;
struct S224{Tid id;T226 _storage;T2 _capacity;T2 _upper;};
extern T224 M224;
struct S71{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T71 M71;
struct S158{Tid id;T0* _project;T6 _finalize;T0* _element;T0* _ace_filename;T0* _system_name;T6 _fish;T0* _clean;};
extern T158 M158;
struct S398{Tid id;};
extern T398 M398;
struct S131{Tid id;};
extern T131 M131;
struct S207{Tid id;T0* _project;T0* _directory;T0* _element;};
extern T207 M207;
struct S78{Tid id;};
extern T78 M78;
struct S400{Tid id;};
extern T400 M400;
struct S325{Tid id;T0* _parameters;};
extern T325 M325;
struct S355{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T355 M355;
struct S211{Tid id;T0* _project;T0* _file;T0* _to_directory;T0* _element;T0* _to_file;};
extern T211 M211;
struct S152{Tid id;T151 _basic_directory;};
extern T152 M152;
struct S342{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T342 M342;
struct S203{Tid id;T0* _project;T0* _start_target_name;T0* _element;T0* _filename;T6 _reuse_variables;};
extern T203 M203;
struct S350{Tid id;T0* _item;};
extern T350 M350;
struct S162{Tid id;T0* _project;T0* _element;T0* _command_line;};
extern T162 M162;
struct S43{Tid id;T6 _item;};
extern T43 M43;
extern T395 M395;
struct S376{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T376 M376;
struct S239{Tid id;T0* _project;T0* _target_filename;T0* _element;T0* _source_filenames;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;};
extern T239 M239;
struct S102{Tid id;T104 _storage;T2 _capacity;T2 _upper;};
extern T102 M102;
struct S267{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T267 M267;
struct S337{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T337 M337;
struct S63{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T63 M63;
struct S201{Tid id;T0* _project;T0* _element;T0* _config_filename;T0* _compile;};
extern T201 M201;
struct S262{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T262 M262;
struct S213{Tid id;T0* _project;T0* _file;T0* _to_directory;T0* _element;T0* _to_file;};
extern T213 M213;
struct S60{Tid id;T0* _children;T0* _attributes;T0* _name;T0* _content;};
extern T60 M60;
struct S278{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _entry_buffer;T151 _basic_directory;};
extern T278 M278;
struct S381{Tid id;};
extern T381 M381;
struct S380{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T380 M380;
struct S292{Tid id;};
extern T292 M292;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S186{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T186 M186;
struct S215{Tid id;T0* _project;T0* _element;T0* _name;T0* _value;};
extern T215 M215;
struct S57{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T57 M57;
struct S156{Tid id;T0* _project;T6 _finalize;T0* _element;T0* _ace_filename;T0* _system_name;T6 _finish_freezing;T0* _clean;};
extern T156 M156;
struct S246{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T246 M246;
struct S133{Tid id;};
extern T133 M133;
struct S351{Tid id;};
extern T351 M351;
struct S76{Tid id;T77 _storage;T2 _capacity;T2 _upper;};
extern T76 M76;
struct S222{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T222 M222;
struct S209{Tid id;T0* _project;T0* _directory;T0* _file;T0* _element;};
extern T209 M209;
struct S81{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T81 M81;
extern T151 M151;
struct S353{Tid id;T0* _first;T0* _second;};
extern T353 M353;
struct S132{Tid id;};
extern T132 M132;
struct S80{Tid id;T2 _type;};
extern T80 M80;
struct S166{Tid id;T0* _project;T0* _element;T0* _name;T0* _value;};
extern T166 M166;
struct S241{Tid id;T243 _storage;T2 _capacity;T2 _upper;};
extern T241 M241;
struct S164{Tid id;T0* _project;T0* _element;T0* _executable;T0* _source_filename;};
extern T164 M164;
struct S174{Tid id;T176 _storage;T2 _capacity;T2 _upper;};
extern T174 M174;
struct S28{Tid id;T0* _build_filename;T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T0* _parent_project;T0* _child_project;T0* _current_target;T0* _root_element;};
extern T28 M28;
struct S25{Tid id;T0* _i_representation;};
extern T25 M25;
struct S100{Tid id;T85 _storage;T2 _capacity;T2 _upper;};
extern T100 M100;
extern T66 M66;
struct S244{Tid id;};
extern T244 M244;
struct S194{Tid id;T0* _project;T0* _element;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;};
extern T194 M194;
struct S95{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T95 M95;
struct S88{Tid id;};
extern T88 M88;
struct S348{Tid id;T2 _last_code;T2 _next_pos;};
extern T348 M348;
struct S167{Tid id;T0* _project;T0* _name;T0* _value;};
extern T167 M167;
struct S374{Tid id;T0* _uri;};
extern T374 M374;
struct S314{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T314 M314;
struct S326{Tid id;T151 _basic_directory;T0* _name;};
extern T326 M326;
struct S290{Tid id;};
extern T290 M290;
struct S330{Tid id;T151 _basic_directory;T0* _name;};
extern T330 M330;
struct S153{Tid id;T151 _basic_directory;};
extern T153 M153;
struct S42{Tid id;T0* _description;T0* _name;T0* _project;T6 _is_executed;T0* _target_element;};
extern T42 M42;
struct S123{Tid id;};
extern T123 M123;
struct S322{Tid id;T104 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T322 M322;
struct S127{Tid id;T129 _storage;T2 _capacity;T2 _upper;};
extern T127 M127;
struct S308{Tid id;T312 _storage;T2 _capacity;T2 _upper;};
extern T308 M308;
struct S87{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T87 M87;
struct S160{Tid id;T0* _project;T0* _element;T0* _esd_filename;T0* _clean;T6 _recursive_clean;};
extern T160 M160;
struct S82{Tid id;T2 _count;T0* _storage;};
extern T82 M82;
struct S205{Tid id;T0* _project;T0* _element;T0* _message;};
extern T205 M205;
struct S50{Tid id;T3 _item;};
extern T50 M50;
struct S294{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T294 M294;
struct S190{Tid id;T0* _project;T0* _size;T6 _case_insensitive;T0* _element;T6 _backup;T6 _ecs;T6 _full;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T190 M190;
struct S247{Tid id;T0* _implementation;T0* _root_element;};
extern T247 M247;
struct S99{Tid id;};
extern T99 M99;
struct S315{Tid id;};
extern T315 M315;
struct S401{Tid id;};
extern T401 M401;
struct S150{Tid id;T151 _basic_directory;};
extern T150 M150;
struct S397{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T397 M397;
struct S189{Tid id;};
extern T189 M189;
struct S48{Tid id;};
extern T48 M48;
struct S86{Tid id;T0* _variables;};
extern T86 M86;
struct S323{Tid id;T0* _program_name;};
extern T323 M323;
struct S286{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T286 M286;
struct S332{Tid id;T0* _command;T2 _exit_code;};
extern T332 M332;
struct S170{Tid id;T0* _project;T0* _element;T0* _options;T0* _command;T0* _command_options;T0* _xace_filename;T6 _compile;T0* _defines;};
extern T170 M170;
struct S227{Tid id;};
extern T227 M227;
struct S168{Tid id;T0* _project;T0* _element;T0* _name;};
extern T168 M168;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_fstat.h) is automatically 
  included when some external "SmallEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_ctime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_sprintf_* feature is used.
*/

void basic_sprintf_double(char*b, int f, double d);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_time.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_TIME
  is used (ie. in live code).
*/
#include <time.h>

#ifdef WIN32
#include <windows.h>
#endif

#define basic_time_clock (clock())
#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, 
			     EIF_INTEGER mon,
			     EIF_INTEGER mday,
			     EIF_INTEGER hour,
			     EIF_INTEGER min,
			     EIF_INTEGER sec);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically 
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
extern T9 oBC5sprintf_buffer;
extern int fBC5sprintf_buffer;
T9 r5sprintf_buffer(void);
void r5append_in_format(T5 C,T0* a1,T2 a2);
void r176clear_all(T176 C,T2 a1);
T176 r176realloc(T176 C,T2 a1,T2 a2);
void r176set_all_with(T176 C,T0* a1,T2 a2);
void r176clear(T176 C,T2 a1,T2 a2);
void r176copy_from(T176 C,T176 a1,T2 a2);
void r104clear_all(T104 C,T2 a1);
T104 r104realloc(T104 C,T2 a1,T2 a2);
void r104move(T104 C,T2 a1,T2 a2,T2 a3);
void r104set_all_with(T104 C,T0* a1,T2 a2);
void r104clear(T104 C,T2 a1,T2 a2);
void r104copy_from(T104 C,T104 a1,T2 a2);
void r243clear_all(T243 C,T2 a1);
T243 r243realloc(T243 C,T2 a1,T2 a2);
void r243set_all_with(T243 C,T0* a1,T2 a2);
void r243clear(T243 C,T2 a1,T2 a2);
void r243copy_from(T243 C,T243 a1,T2 a2);
void r77clear_all(T77 C,T2 a1);
T77 r77realloc(T77 C,T2 a1,T2 a2);
void r77set_all_with(T77 C,T0* a1,T2 a2);
void r77clear(T77 C,T2 a1,T2 a2);
void r77copy_from(T77 C,T77 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r129clear_all(T129 C,T2 a1);
T129 r129realloc(T129 C,T2 a1,T2 a2);
void r129set_all_with(T129 C,T0* a1,T2 a2);
void r129clear(T129 C,T2 a1,T2 a2);
void r129copy_from(T129 C,T129 a1,T2 a2);
void r85clear_all(T85 C,T2 a1);
T85 r85realloc(T85 C,T2 a1,T2 a2);
void r85move(T85 C,T2 a1,T2 a2,T2 a3);
void r85set_all_with(T85 C,T2 a1,T2 a2);
void r85clear(T85 C,T2 a1,T2 a2);
void r85copy_from(T85 C,T85 a1,T2 a2);
void r226clear_all(T226 C,T2 a1);
T226 r226realloc(T226 C,T2 a1,T2 a2);
void r226set_all_with(T226 C,T0* a1,T2 a2);
void r226clear(T226 C,T2 a1,T2 a2);
void r226copy_from(T226 C,T226 a1,T2 a2);
void r312clear_all(T312 C,T2 a1);
T312 r312realloc(T312 C,T2 a1,T2 a2);
void r312set_all_with(T312 C,T0* a1,T2 a2);
void r312clear(T312 C,T2 a1,T2 a2);
void r312copy_from(T312 C,T312 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
void r7remove_first(T7* C,T2 a1);
void r7remove_between(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7tail(T7* C,T2 a1);
void r7swap(T7* C,T2 a1,T2 a2);
void r84copy(T84* C,T0* a1);
T2 r84count(T84* C);
T2 r84item(T84* C,T2 a1);
T6 r84se_assigned_from(T0* a1);
void r84print_on(T84* C,T0* a1);
void r84out_in_tagged_out_memory(T84* C);
void r84make(T84* C,T2 a1,T2 a2);
void r84fill_tagged_out_memory(T84* C);
T6 r84conforms_to(T84* C,T0* a1);
void r84resize(T84* C,T2 a1,T2 a2);
T0* r84twin(T84* C);
void r224copy(T224* C,T0* a1);
T6 r224se_assigned_from(T0* a1);
void r224print_on(T224* C,T0* a1);
void r224out_in_tagged_out_memory(T224* C);
void r224make(T224* C,T2 a1);
void r224fill_tagged_out_memory(T224* C);
T6 r224conforms_to(T224* C,T0* a1);
void r224resize(T224* C,T2 a1);
T0* r224twin(T224* C);
void r102copy(T102* C,T0* a1);
T6 r102se_assigned_from(T0* a1);
void r102print_on(T102* C,T0* a1);
void r102out_in_tagged_out_memory(T102* C);
void r102make(T102* C,T2 a1);
void r102fill_tagged_out_memory(T102* C);
T6 r102conforms_to(T102* C,T0* a1);
void r102resize(T102* C,T2 a1);
T0* r102twin(T102* C);
void r76copy(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76print_on(T76* C,T0* a1);
void r76out_in_tagged_out_memory(T76* C);
void r76make(T76* C,T2 a1);
void r76fill_tagged_out_memory(T76* C);
T6 r76conforms_to(T76* C,T0* a1);
void r76resize(T76* C,T2 a1);
T0* r76twin(T76* C);
void r241copy(T241* C,T0* a1);
T6 r241se_assigned_from(T0* a1);
void r241print_on(T241* C,T0* a1);
void r241out_in_tagged_out_memory(T241* C);
void r241make(T241* C,T2 a1);
void r241fill_tagged_out_memory(T241* C);
T6 r241conforms_to(T241* C,T0* a1);
void r241resize(T241* C,T2 a1);
T0* r241twin(T241* C);
void r174copy(T174* C,T0* a1);
T6 r174se_assigned_from(T0* a1);
void r174print_on(T174* C,T0* a1);
void r174out_in_tagged_out_memory(T174* C);
void r174make(T174* C,T2 a1);
void r174fill_tagged_out_memory(T174* C);
T6 r174conforms_to(T174* C,T0* a1);
void r174resize(T174* C,T2 a1);
T0* r174twin(T174* C);
void r100copy(T100* C,T0* a1);
T6 r100se_assigned_from(T0* a1);
void r100print_on(T100* C,T0* a1);
void r100out_in_tagged_out_memory(T100* C);
void r100make(T100* C,T2 a1);
void r100fill_tagged_out_memory(T100* C);
T6 r100conforms_to(T100* C,T0* a1);
void r100resize(T100* C,T2 a1);
T0* r100twin(T100* C);
void r100with_capacity(T100* C,T2 a1);
void r100from_collection(T100* C,T0* a1);
void r322copy(T322* C,T0* a1);
void r322force(T322* C,T0* a1,T2 a2);
T2 r322count(T322* C);
T0* r322item(T322* C,T2 a1);
T6 r322valid_index(T322* C,T2 a1);
T6 r322se_assigned_from(T0* a1);
void r322print_on(T322* C,T0* a1);
void r322out_in_tagged_out_memory(T322* C);
void r322make(T322* C,T2 a1,T2 a2);
void r322fill_tagged_out_memory(T322* C);
T6 r322conforms_to(T322* C,T0* a1);
void r322add_last(T322* C,T0* a1);
void r322resize(T322* C,T2 a1,T2 a2);
T0* r322twin(T322* C);
void r127copy(T127* C,T0* a1);
T6 r127se_assigned_from(T0* a1);
void r127print_on(T127* C,T0* a1);
void r127out_in_tagged_out_memory(T127* C);
void r127make(T127* C,T2 a1);
void r127fill_tagged_out_memory(T127* C);
T6 r127conforms_to(T127* C,T0* a1);
void r127resize(T127* C,T2 a1);
T0* r127twin(T127* C);
void r308copy(T308* C,T0* a1);
T2 r308count(T308* C);
T0* r308item(T308* C,T2 a1);
T6 r308se_assigned_from(T0* a1);
void r308print_on(T308* C,T0* a1);
void r308out_in_tagged_out_memory(T308* C);
void r308make(T308* C,T2 a1);
void r308fill_tagged_out_memory(T308* C);
T6 r308conforms_to(T308* C,T0* a1);
void r308resize(T308* C,T2 a1);
T0* r308twin(T308* C);
void r366copy(T366* C,T0* a1);
void r366set(T366* C,T0* a1,T6 a2,T6 a3);
T6 r366se_assigned_from(T0* a1);
void r366print_on(T366* C,T0* a1);
void r366out_in_tagged_out_memory(T366* C);
void r366make(T366* C,T0* a1);
T6 r366conforms_to(T366* C,T0* a1);
void r366set_after(T366* C);
T0* r366twin(T366* C);
void r236copy(T236* C,T0* a1);
T6 r236se_assigned_from(T0* a1);
void r236print_on(T236* C,T0* a1);
void r236out_in_tagged_out_memory(T236* C);
T6 r236off(T236* C);
T6 r236conforms_to(T236* C,T0* a1);
T0* r236twin(T236* C);
T2 r196new_capacity(T2 a1);
void r196copy(T196* C,T0* a1);
T6 r196extendible(T196* C,T2 a1);
void r196remove_traversing_cursor(T196* C,T0* a1);
void r196move_all_cursors_after(T196* C);
void r196add_traversing_cursor(T196* C,T0* a1);
T6 r196se_assigned_from(T0* a1);
void r196print_on(T196* C,T0* a1);
T0* r196clone(T0* a1);
void r196out_in_tagged_out_memory(T196* C);
T6 r196cursor_before(T0* a1);
void r196make(T196* C,T2 a1);
T6 r196cursor_after(T0* a1);
T6 r196conforms_to(T196* C,T0* a1);
void r196resize(T196* C,T2 a1);
T0* r196twin(T196* C);
void r196force_last(T196* C,T0* a1);
T0* r196new_cursor(T196* C);
T6 r196cursor_off(T0* a1);
void r199copy(T199* C,T0* a1);
T6 r199se_assigned_from(T0* a1);
void r199print_on(T199* C,T0* a1);
void r199out_in_tagged_out_memory(T199* C);
T6 r199off(T199* C);
T6 r199conforms_to(T199* C,T0* a1);
T0* r199twin(T199* C);
void r309clear_all(T0* a1);
T6 r309se_assigned_from(T0* a1);
void r309print_on(T309* C,T0* a1);
void r309out_in_tagged_out_memory(T309* C);
T0* r309make(T2 a1);
T6 r309conforms_to(T309* C,T0* a1);
T0* r309resize(T0* a1,T2 a2);
T0* r309twin(T309* C);
T6 r122se_assigned_from(T0* a1);
void r122print_on(T122* C,T0* a1);
void r122out_in_tagged_out_memory(T122* C);
T0* r122to_fixed_array(T0* a1);
T0* r122make(T2 a1);
T0* r122make_from_array(T0* a1);
T6 r122conforms_to(T122* C,T0* a1);
T0* r122resize(T0* a1,T2 a2);
T0* r122twin(T122* C);
T6 r354se_assigned_from(T0* a1);
void r354print_on(T354* C,T0* a1);
void r354out_in_tagged_out_memory(T354* C);
void r354make(T354* C,T0* a1,T0* a2);
T6 r354conforms_to(T354* C,T0* a1);
T0* r354twin(T354* C);
void r119copy(T119* C,T0* a1);
T6 r119se_assigned_from(T0* a1);
void r119print_on(T119* C,T0* a1);
void r119out_in_tagged_out_memory(T119* C);
void r119make(T119* C,T0* a1);
T6 r119off(T119* C);
T6 r119conforms_to(T119* C,T0* a1);
T0* r119twin(T119* C);
void r146copy(T146* C,T0* a1);
T6 r146se_assigned_from(T0* a1);
void r146print_on(T146* C,T0* a1);
void r146out_in_tagged_out_memory(T146* C);
T6 r146off(T146* C);
T6 r146conforms_to(T146* C,T0* a1);
T0* r146twin(T146* C);
T6 r221se_assigned_from(T0* a1);
void r221print_on(T221* C,T0* a1);
void r221out_in_tagged_out_memory(T221* C);
void r221make(T221* C,T0* a1,T0* a2);
T6 r221conforms_to(T221* C,T0* a1);
T0* r221twin(T221* C);
T6 r370se_assigned_from(T0* a1);
void r370print_on(T370* C,T0* a1);
void r370out_in_tagged_out_memory(T370* C);
T6 r370conforms_to(T370* C,T0* a1);
T0* r370twin(T370* C);
void r391copy(T391* C,T0* a1);
T6 r391se_assigned_from(T0* a1);
void r391print_on(T391* C,T0* a1);
void r391out_in_tagged_out_memory(T391* C);
T6 r391off(T391* C);
T6 r391conforms_to(T391* C,T0* a1);
T0* r391twin(T391* C);
T2 r71new_capacity(T2 a1);
void r71copy(T71* C,T0* a1);
T6 r71extendible(T71* C,T2 a1);
void r71remove_traversing_cursor(T71* C,T0* a1);
T0* r71item(T71* C,T2 a1);
void r71move_all_cursors_after(T71* C);
void r71add_traversing_cursor(T71* C,T0* a1);
T6 r71se_assigned_from(T0* a1);
void r71print_on(T71* C,T0* a1);
T0* r71clone(T0* a1);
void r71out_in_tagged_out_memory(T71* C);
T6 r71cursor_before(T0* a1);
void r71make(T71* C,T2 a1);
T6 r71cursor_after(T0* a1);
T6 r71conforms_to(T71* C,T0* a1);
void r71resize(T71* C,T2 a1);
T0* r71twin(T71* C);
void r71force_last(T71* C,T0* a1);
T0* r71new_cursor(T71* C);
T6 r71cursor_off(T0* a1);
void r355copy(T355* C,T0* a1);
T0* r355cursor_item(T0* a1);
void r355remove_traversing_cursor(T355* C,T0* a1);
void r355move_all_cursors_after(T355* C);
void r355add_traversing_cursor(T355* C,T0* a1);
T6 r355se_assigned_from(T0* a1);
void r355print_on(T355* C,T0* a1);
void r355out_in_tagged_out_memory(T355* C);
void r355make(T355* C);
T6 r355cursor_after(T0* a1);
T6 r355conforms_to(T355* C,T0* a1);
void r355cursor_forth(T355* C,T0* a1);
void r355cursor_start(T355* C,T0* a1);
T0* r355twin(T355* C);
T0* r355new_cursor(T355* C);
void r355put_last(T355* C,T0* a1);
T6 r355cursor_off(T0* a1);
T6 r350se_assigned_from(T0* a1);
void r350print_on(T350* C,T0* a1);
void r350out_in_tagged_out_memory(T350* C);
T6 r350conforms_to(T350* C,T0* a1);
T0* r350twin(T350* C);
T2 r376new_capacity(T2 a1);
void r376copy(T376* C,T0* a1);
T6 r376extendible(T376* C,T2 a1);
void r376force(T376* C,T0* a1);
T0* r376item(T376* C);
T6 r376se_assigned_from(T0* a1);
void r376print_on(T376* C,T0* a1);
T0* r376clone(T0* a1);
void r376out_in_tagged_out_memory(T376* C);
void r376make(T376* C,T2 a1);
void r376remove(T376* C);
T6 r376conforms_to(T376* C,T0* a1);
void r376resize(T376* C,T2 a1);
T0* r376twin(T376* C);
T2 r63new_capacity(T2 a1);
void r63copy(T63* C,T0* a1);
T6 r63extendible(T63* C,T2 a1);
void r63remove_traversing_cursor(T63* C,T0* a1);
void r63move_all_cursors_after(T63* C);
void r63add_traversing_cursor(T63* C,T0* a1);
T6 r63se_assigned_from(T0* a1);
void r63print_on(T63* C,T0* a1);
T0* r63clone(T0* a1);
void r63out_in_tagged_out_memory(T63* C);
T6 r63cursor_before(T0* a1);
void r63make(T63* C,T2 a1);
T6 r63cursor_after(T0* a1);
T6 r63conforms_to(T63* C,T0* a1);
void r63resize(T63* C,T2 a1);
T0* r63twin(T63* C);
void r63force_last(T63* C,T0* a1);
T0* r63new_cursor(T63* C);
void r63put_last(T63* C,T0* a1);
T6 r63cursor_off(T0* a1);
void r262copy(T262* C,T0* a1);
T6 r262se_assigned_from(T0* a1);
void r262print_on(T262* C,T0* a1);
void r262out_in_tagged_out_memory(T262* C);
T6 r262off(T262* C);
T6 r262conforms_to(T262* C,T0* a1);
T0* r262twin(T262* C);
T6 r381se_assigned_from(T0* a1);
void r381print_on(T381* C,T0* a1);
void r381out_in_tagged_out_memory(T381* C);
T0* r381make(T2 a1);
T6 r381conforms_to(T381* C,T0* a1);
T0* r381resize(T0* a1,T2 a2);
T0* r381twin(T381* C);
void r186copy(T186* C,T0* a1);
T6 r186se_assigned_from(T0* a1);
void r186print_on(T186* C,T0* a1);
void r186out_in_tagged_out_memory(T186* C);
T6 r186off(T186* C);
T6 r186conforms_to(T186* C,T0* a1);
T0* r186twin(T186* C);
T2 r57new_capacity(T2 a1);
void r57copy(T57* C,T0* a1);
T6 r57extendible(T57* C,T2 a1);
void r57force(T57* C,T0* a1);
T0* r57item(T57* C);
T6 r57se_assigned_from(T0* a1);
void r57print_on(T57* C,T0* a1);
T0* r57clone(T0* a1);
void r57out_in_tagged_out_memory(T57* C);
void r57make(T57* C,T2 a1);
void r57remove(T57* C);
T6 r57conforms_to(T57* C,T0* a1);
void r57resize(T57* C,T2 a1);
T0* r57twin(T57* C);
T2 r246new_capacity(T2 a1);
void r246copy(T246* C,T0* a1);
T6 r246extendible(T246* C,T2 a1);
void r246remove_traversing_cursor(T246* C,T0* a1);
void r246move_all_cursors_after(T246* C);
void r246add_traversing_cursor(T246* C,T0* a1);
T6 r246se_assigned_from(T0* a1);
void r246print_on(T246* C,T0* a1);
T0* r246clone(T0* a1);
void r246out_in_tagged_out_memory(T246* C);
T6 r246cursor_before(T0* a1);
void r246make(T246* C,T2 a1);
T6 r246cursor_after(T0* a1);
T6 r246conforms_to(T246* C,T0* a1);
void r246resize(T246* C,T2 a1);
T0* r246twin(T246* C);
void r246force_last(T246* C,T0* a1);
T0* r246new_cursor(T246* C);
T6 r246cursor_off(T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133print_on(T133* C,T0* a1);
void r133out_in_tagged_out_memory(T133* C);
T0* r133make(T2 a1);
T6 r133conforms_to(T133* C,T0* a1);
T0* r133resize(T0* a1,T2 a2);
T0* r133twin(T133* C);
T2 r222new_capacity(T2 a1);
void r222copy(T222* C,T0* a1);
T6 r222extendible(T222* C,T2 a1);
void r222remove_traversing_cursor(T222* C,T0* a1);
void r222move_all_cursors_after(T222* C);
void r222add_traversing_cursor(T222* C,T0* a1);
T6 r222se_assigned_from(T0* a1);
void r222print_on(T222* C,T0* a1);
T0* r222clone(T0* a1);
void r222out_in_tagged_out_memory(T222* C);
T6 r222cursor_before(T0* a1);
void r222make(T222* C,T2 a1);
T6 r222cursor_after(T0* a1);
T6 r222conforms_to(T222* C,T0* a1);
void r222resize(T222* C,T2 a1);
T0* r222twin(T222* C);
void r222force_last(T222* C,T0* a1);
T0* r222new_cursor(T222* C);
T6 r222cursor_off(T0* a1);
T6 r353se_assigned_from(T0* a1);
void r353print_on(T353* C,T0* a1);
void r353out_in_tagged_out_memory(T353* C);
void r353make(T353* C,T0* a1,T0* a2);
T6 r353conforms_to(T353* C,T0* a1);
T0* r353twin(T353* C);
T6 r244se_assigned_from(T0* a1);
void r244print_on(T244* C,T0* a1);
void r244out_in_tagged_out_memory(T244* C);
T0* r244make(T2 a1);
T6 r244conforms_to(T244* C,T0* a1);
T0* r244resize(T0* a1,T2 a2);
T0* r244twin(T244* C);
T2 r95new_capacity(T2 a1);
void r95copy(T95* C,T0* a1);
void r95force(T95* C,T0* a1,T0* a2);
void r95make_clashes(T95* C,T2 a1);
T0* r95cursor_item(T95* C,T0* a1);
void r95search_position(T95* C,T0* a1);
void r95remove_traversing_cursor(T95* C,T0* a1);
void r95clone_slots(T95* C);
extern T0*oBC91FIXED_INTEGER_ARRAY_;
void r95keys_resize(T95* C,T2 a1);
void r95clone_clashes(T95* C);
void r95move_all_cursors_after(T95* C);
void r95make_items(T95* C,T2 a1);
void r95add_traversing_cursor(T95* C,T0* a1);
T6 r95se_assigned_from(T0* a1);
void r95print_on(T95* C,T0* a1);
T0* r95clone(T0* a1);
void r95remove_position(T95* C,T2 a1);
void r95out_in_tagged_out_memory(T95* C);
T0* r95key_for_iteration(T95* C);
T6 r95after(T95* C);
void r95make(T95* C,T2 a1);
T0* r95item_for_iteration(T95* C);
void r95remove(T95* C,T0* a1);
T0* r95cursor_key(T95* C,T0* a1);
void r95clone_items(T95* C);
T6 r95cursor_after(T0* a1);
T6 r95conforms_to(T95* C,T0* a1);
void r95make_keys(T95* C,T2 a1);
T2 r95hash_position(T95* C,T0* a1);
void r95cursor_forth(T95* C,T0* a1);
void r95items_resize(T95* C,T2 a1);
void r95clone_keys(T95* C);
void r95move_cursors_after(T95* C,T2 a1);
void r95resize(T95* C,T2 a1);
T0* r95found_item(T95* C);
void r95make_with_equality_testers(T95* C,T2 a1,T0* a2,T0* a3);
T6 r95found(T95* C);
void r95move_cursors_forth(T95* C,T2 a1);
void r95cursor_start(T95* C,T0* a1);
void r95search(T95* C,T0* a1);
void r95clashes_resize(T95* C,T2 a1);
void r95slots_resize(T95* C,T2 a1);
T0* r95twin(T95* C);
T0* r95new_cursor(T95* C);
void r95make_slots(T95* C,T2 a1);
void r95move_all_cursors(T95* C,T2 a1,T2 a2);
T2 r95new_modulus(T2 a1);
T6 r95cursor_off(T0* a1);
T6 r123se_assigned_from(T0* a1);
void r123print_on(T123* C,T0* a1);
void r123out_in_tagged_out_memory(T123* C);
T0* r123make(T2 a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
T2 r87new_capacity(T2 a1);
void r87copy(T87* C,T0* a1);
T6 r87extendible(T87* C,T2 a1);
void r87remove_traversing_cursor(T87* C,T0* a1);
void r87move_all_cursors_after(T87* C);
void r87add_traversing_cursor(T87* C,T0* a1);
T6 r87se_assigned_from(T0* a1);
void r87print_on(T87* C,T0* a1);
T0* r87clone(T0* a1);
void r87out_in_tagged_out_memory(T87* C);
T6 r87cursor_before(T0* a1);
void r87make(T87* C,T2 a1);
T6 r87cursor_after(T0* a1);
T6 r87conforms_to(T87* C,T0* a1);
void r87resize(T87* C,T2 a1);
T0* r87twin(T87* C);
void r87force_last(T87* C,T0* a1);
T0* r87new_cursor(T87* C);
T6 r87cursor_off(T0* a1);
T6 r99se_assigned_from(T0* a1);
void r99print_on(T99* C,T0* a1);
void r99out_in_tagged_out_memory(T99* C);
T6 r99conforms_to(T99* C,T0* a1);
T6 r99test(T0* a1,T0* a2);
T0* r99twin(T99* C);
T6 r189se_assigned_from(T0* a1);
void r189print_on(T189* C,T0* a1);
void r189out_in_tagged_out_memory(T189* C);
T0* r189make(T2 a1);
T6 r189conforms_to(T189* C,T0* a1);
T0* r189resize(T0* a1,T2 a2);
T0* r189twin(T189* C);
T6 r227se_assigned_from(T0* a1);
void r227print_on(T227* C,T0* a1);
void r227out_in_tagged_out_memory(T227* C);
T0* r227make(T2 a1);
T6 r227conforms_to(T227* C,T0* a1);
T0* r227resize(T0* a1,T2 a2);
T0* r227twin(T227* C);
extern T0*oBC58Dir_attribute_name;
extern int fBC58Dir_attribute_name;
T0* r217Dir_attribute_name(void);
extern T0*oBC217Output_filename_attribute_name;
extern int fBC217Output_filename_attribute_name;
T0* r217Output_filename_attribute_name(void);
void r217make_from_element(T217* C,T0* a1,T0* a2);
void r217trace(T217* C,T0* a1);
extern T0*oBC58Unless_attribute_name;
extern int fBC58Unless_attribute_name;
T0* r217Unless_attribute_name(void);
extern T0*oBC58If_attribute_name;
extern int fBC58If_attribute_name;
T0* r217If_attribute_name(void);
extern T0*oBC217Stylesheet_filename_attribute_name;
extern int fBC217Stylesheet_filename_attribute_name;
T0* r217Stylesheet_filename_attribute_name(void);
T6 r217se_assigned_from(T0* a1);
void r217print_on(T217* C,T0* a1);
T0* r217clone(T0* a1);
void r217out_in_tagged_out_memory(T217* C);
extern T0*oBC17Exceptions;
void r217make(T217* C,T0* a1);
extern T0*oBC217Parameter_element_name;
extern int fBC217Parameter_element_name;
T0* r217Parameter_element_name(void);
T0* r217uc_attribute_value(T217* C,T0* a1,T0* a2);
extern T0*oBC217Value_attribute_name;
extern int fBC217Value_attribute_name;
T0* r217Value_attribute_name(void);
void r217_59Pmake(T217* C,T0* a1);
T6 r217conforms_to(T217* C,T0* a1);
void r217print(T0* a1);
void r217_58Pmake_from_element(T217* C,T0* a1,T0* a2);
void r217execute(T217* C);
T6 r217has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC19Name_attribute_name;
extern int fBC19Name_attribute_name;
T0* r217Name_attribute_name(void);
extern T0*oBC1std_output;
T6 r217is_enabled(T217* C);
void r217exit_application(T2 a1,T0* a2);
T0* r217twin(T217* C);
void r217execute_shell(T0* a1);
T6 r217is_executable(T217* C);
extern T0*oBC217Input_filename_attribute_name;
extern int fBC217Input_filename_attribute_name;
T0* r217Input_filename_attribute_name(void);
T6 r287se_assigned_from(T0* a1);
void r287print_on(T287* C,T0* a1);
void r287out_in_tagged_out_memory(T287* C);
T6 r287conforms_to(T287* C,T0* a1);
T0* r287twin(T287* C);
T0* r152pathname_from_file_system(T152* C,T0* a1,T0* a2);
T0* r152current_working_directory(T152* C);
void r152cd(T152* C,T0* a1);
T6 r152se_assigned_from(T0* a1);
T6 r152is_directory_readable(T0* a1);
void r152print_on(T152* C,T0* a1);
T0* r152clone(T0* a1);
T0* r152dirname(T0* a1);
void r152delete_file(T0* a1);
void r152out_in_tagged_out_memory(T152* C);
void r152set_current_working_directory(T152* C,T0* a1);
T0* r152cwd(T152* C);
T6 r152same_type(T152* C,T0* a1);
T6 r152is_file_readable(T0* a1);
extern T0*oBC148tmp_file;
extern int fBC148tmp_file;
T0* r152tmp_file(void);
T6 r152conforms_to(T152* C,T0* a1);
void r152copy_file(T0* a1,T0* a2);
T0* r152string_to_pathname(T0* a1);
void r152rename_file(T0* a1,T0* a2);
extern T0*oBC152root_directory;
T6 r152is_root_directory(T0* a1);
T0* r152pathname_to_string(T0* a1);
T0* r152twin(T152* C);
extern T0*oBC22STRING_;
T0* r152canonical_pathname(T0* a1);
T0* r152pathname(T0* a1,T0* a2);
extern T0*oBC148tmp_directory;
extern int fBC148tmp_directory;
T0* r152tmp_directory(void);
extern T0*oBC154Clean_attribute_name;
extern int fBC154Clean_attribute_name;
T0* r154Clean_attribute_name(void);
T0* r154Dir_attribute_name(void);
extern T0*oBC29unix_file_system;
void r154make_from_element(T154* C,T0* a1,T0* a2);
void r154trace(T154* C,T0* a1);
T6 r154is_cleanable(T154* C);
T0* r154Unless_attribute_name(void);
T0* r154attribute_value(T154* C,T0* a1,T0* a2);
T0* r154If_attribute_name(void);
extern T0*oBC154Ace_attribute_name;
extern int fBC154Ace_attribute_name;
T0* r154Ace_attribute_name(void);
extern T0*oBC154Root_class_attribute_name;
extern int fBC154Root_class_attribute_name;
T0* r154Root_class_attribute_name(void);
extern T0*oBC29file_system;
extern int fBC29file_system;
T0* r154file_system(void);
T6 r154se_assigned_from(T0* a1);
void r154print_on(T154* C,T0* a1);
T0* r154clone(T0* a1);
void r154out_in_tagged_out_memory(T154* C);
T0* r154new_ace_cmdline(T154* C);
T6 r154uc_boolean_value(T154* C,T0* a1,T0* a2);
extern T0*oBC30operating_system;
extern T0*oBC19True_attribute_value;
extern int fBC19True_attribute_value;
T0* r154True_attribute_value(void);
T0* r154uc_attribute_value(T154* C,T0* a1,T0* a2);
extern T0*oBC154Case_insensitive_attribute_name;
extern int fBC154Case_insensitive_attribute_name;
T0* r154Case_insensitive_attribute_name(void);
T6 r154is_traditional_configuration(T154* C);
T6 r154conforms_to(T154* C,T0* a1);
void r154print(T0* a1);
void r154_58Pmake_from_element(T154* C,T0* a1,T0* a2);
extern T0*oBC154Executable_attribute_name;
extern int fBC154Executable_attribute_name;
T0* r154Executable_attribute_name(void);
extern T0*oBC154No_style_warning_attribute_name;
extern int fBC154No_style_warning_attribute_name;
T0* r154No_style_warning_attribute_name(void);
void r154execute(T154* C);
T6 r154has_uc_attribute(T0* a1,T0* a2);
T0* r154uc_attribute_value_or_default(T154* C,T0* a1,T0* a2,T0* a3);
T6 r154is_enabled(T154* C);
void r154exit_application(T2 a1,T0* a2);
extern T0*oBC19False_attribute_value;
extern int fBC19False_attribute_value;
T0* r154False_attribute_value(void);
T0* r154attribute_value_or_default(T154* C,T0* a1,T0* a2,T0* a3);
T0* r154twin(T154* C);
T0* r154new_clean_cmdline(T154* C);
extern T0*oBC154Creation_procedure_attribute_name;
extern int fBC154Creation_procedure_attribute_name;
T0* r154Creation_procedure_attribute_name(void);
T0* r154new_traditional_cmdline(T154* C);
extern T0*oBC29windows_file_system;
void r154execute_shell(T0* a1);
T6 r154is_executable(T154* C);
T6 r154is_ace_configuration(T154* C);
T6 r64se_assigned_from(T0* a1);
void r64print_on(T64* C,T0* a1);
void r64out_in_tagged_out_memory(T64* C);
void r64make(T64* C,T0* a1,T0* a2);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T6 r319se_assigned_from(T0* a1);
void r319print_on(T319* C,T0* a1);
void r319out_in_tagged_out_memory(T319* C);
extern T0*oBC18Arguments;
extern int fBC18Arguments;
T0* r319Arguments(void);
void r319make(T319* C,T0* a1);
T0* r319message(T319* C,T0* a1);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319twin(T319* C);
T0* r319default_message(T319* C);
T0* r192Dir_attribute_name(void);
extern T0*oBC192Output_filename_attribute_name;
extern int fBC192Output_filename_attribute_name;
T0* r192Output_filename_attribute_name(void);
void r192make_from_element(T192* C,T0* a1,T0* a2);
void r192trace(T192* C,T0* a1);
T0* r192Unless_attribute_name(void);
T0* r192If_attribute_name(void);
T6 r192se_assigned_from(T0* a1);
void r192print_on(T192* C,T0* a1);
T0* r192clone(T0* a1);
void r192out_in_tagged_out_memory(T192* C);
T6 r192uc_boolean_value(T192* C,T0* a1,T0* a2);
void r192make(T192* C,T0* a1);
T0* r192True_attribute_value(void);
extern T0*oBC192Verbose_filename_attribute_name;
extern int fBC192Verbose_filename_attribute_name;
T0* r192Verbose_filename_attribute_name(void);
T0* r192uc_attribute_value(T192* C,T0* a1,T0* a2);
void r192_59Pmake(T192* C,T0* a1);
T6 r192conforms_to(T192* C,T0* a1);
void r192print(T0* a1);
void r192_58Pmake_from_element(T192* C,T0* a1,T0* a2);
void r192execute(T192* C);
T6 r192has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC192Tokens_classname_attribute_name;
extern int fBC192Tokens_classname_attribute_name;
T0* r192Tokens_classname_attribute_name(void);
T6 r192is_enabled(T192* C);
void r192exit_application(T2 a1,T0* a2);
T0* r192False_attribute_value(void);
extern T0*oBC192Separate_actions_attribute_name;
extern int fBC192Separate_actions_attribute_name;
T0* r192Separate_actions_attribute_name(void);
T0* r192twin(T192* C);
void r192execute_shell(T0* a1);
T6 r192is_executable(T192* C);
extern T0*oBC192Input_filename_attribute_name;
extern int fBC192Input_filename_attribute_name;
T0* r192Input_filename_attribute_name(void);
T0* r317current_working_directory(T317* C);
T6 r317se_assigned_from(T0* a1);
void r317print_on(T317* C,T0* a1);
void r317old_read_character(T317* C);
T0* r317clone(T0* a1);
extern T6 oBC150is_windows;
extern int fBC150is_windows;
T6 r317is_windows(T317* C);
T6 r317old_end_of_file(T317* C);
void r317out_in_tagged_out_memory(T317* C);
void r317make(T317* C);
T6 r317conforms_to(T317* C,T0* a1);
extern T6 oBC150is_unix;
extern int fBC150is_unix;
T6 r317is_unix(T317* C);
T0* r317twin(T317* C);
T6 r321se_assigned_from(T0* a1);
void r321print_on(T321* C,T0* a1);
void r321out_in_tagged_out_memory(T321* C);
void r321report_message(T321* C,T0* a1);
extern T0*oBC303std;
T0* r321message(T0* a1);
T6 r321conforms_to(T321* C,T0* a1);
T0* r321twin(T321* C);
void r321make_standard(T321* C);
void r321report_error(T321* C,T0* a1);
extern T0*oBC158Clean_attribute_name;
extern int fBC158Clean_attribute_name;
T0* r158Clean_attribute_name(void);
T0* r158Dir_attribute_name(void);
extern T0*oBC158System_attribute_name;
extern int fBC158System_attribute_name;
T0* r158System_attribute_name(void);
void r158make_from_element(T158* C,T0* a1,T0* a2);
void r158trace(T158* C,T0* a1);
T6 r158is_cleanable(T158* C);
T0* r158Unless_attribute_name(void);
T0* r158If_attribute_name(void);
extern T0*oBC158Ace_attribute_name;
extern int fBC158Ace_attribute_name;
T0* r158Ace_attribute_name(void);
T0* r158file_system(void);
T6 r158se_assigned_from(T0* a1);
void r158print_on(T158* C,T0* a1);
T0* r158clone(T0* a1);
void r158out_in_tagged_out_memory(T158* C);
T6 r158uc_boolean_value(T158* C,T0* a1,T0* a2);
void r158execute_clean(T158* C);
void r158execute_compile(T158* C);
T0* r158True_attribute_value(void);
extern T0*oBC158Finalize_attribute_name;
extern int fBC158Finalize_attribute_name;
T0* r158Finalize_attribute_name(void);
T0* r158uc_attribute_value(T158* C,T0* a1,T0* a2);
T6 r158conforms_to(T158* C,T0* a1);
void r158print(T0* a1);
void r158_58Pmake_from_element(T158* C,T0* a1,T0* a2);
T6 r158is_compilable(T158* C);
void r158execute(T158* C);
T6 r158has_uc_attribute(T0* a1,T0* a2);
T0* r158uc_attribute_value_or_default(T158* C,T0* a1,T0* a2,T0* a3);
T6 r158is_enabled(T158* C);
void r158exit_application(T2 a1,T0* a2);
T0* r158False_attribute_value(void);
T0* r158attribute_value_or_default(T158* C,T0* a1,T0* a2,T0* a3);
T0* r158twin(T158* C);
extern T0*oBC158Fish_attribute_name;
extern int fBC158Fish_attribute_name;
T0* r158Fish_attribute_name(void);
void r158execute_shell(T0* a1);
T6 r158is_executable(T158* C);
T0* r207Dir_attribute_name(void);
void r207make_from_element(T207* C,T0* a1,T0* a2);
void r207trace(T207* C,T0* a1);
T0* r207Unless_attribute_name(void);
T0* r207attribute_value(T207* C,T0* a1,T0* a2);
T0* r207If_attribute_name(void);
T0* r207file_system(void);
T6 r207se_assigned_from(T0* a1);
void r207print_on(T207* C,T0* a1);
void r207out_in_tagged_out_memory(T207* C);
T6 r207conforms_to(T207* C,T0* a1);
void r207print(T0* a1);
void r207_58Pmake_from_element(T207* C,T0* a1,T0* a2);
void r207execute(T207* C);
T6 r207is_enabled(T207* C);
T0* r207twin(T207* C);
extern T0*oBC207Directory_attribute_name;
extern int fBC207Directory_attribute_name;
T0* r207Directory_attribute_name(void);
T6 r207is_executable(T207* C);
T6 r325se_assigned_from(T0* a1);
void r325print_on(T325* C,T0* a1);
void r325out_in_tagged_out_memory(T325* C);
T0* r325Arguments(void);
void r325make(T325* C,T0* a1);
T0* r325message(T325* C,T0* a1);
T6 r325conforms_to(T325* C,T0* a1);
T0* r325twin(T325* C);
T0* r325default_message(T325* C);
T0* r211Dir_attribute_name(void);
void r211make_from_element(T211* C,T0* a1,T0* a2);
void r211trace(T211* C,T0* a1);
T0* r211Unless_attribute_name(void);
T0* r211attribute_value(T211* C,T0* a1,T0* a2);
T0* r211If_attribute_name(void);
T0* r211file_system(void);
T6 r211se_assigned_from(T0* a1);
void r211print_on(T211* C,T0* a1);
void r211out_in_tagged_out_memory(T211* C);
T6 r211is_to_file_executable(T211* C);
extern T0*oBC211To_directory_attribute_name;
extern int fBC211To_directory_attribute_name;
T0* r211To_directory_attribute_name(void);
extern T0*oBC211To_file_attribute_name;
extern int fBC211To_file_attribute_name;
T0* r211To_file_attribute_name(void);
T6 r211conforms_to(T211* C,T0* a1);
void r211print(T0* a1);
void r211_58Pmake_from_element(T211* C,T0* a1,T0* a2);
void r211execute(T211* C);
T6 r211is_enabled(T211* C);
T6 r211is_to_directory_executable(T211* C);
T0* r211twin(T211* C);
extern T0*oBC211File_attribute_name;
extern int fBC211File_attribute_name;
T0* r211File_attribute_name(void);
T6 r211is_executable(T211* C);
T6 r342is_closed(T342* C);
void r342old_close(T342* C);
T2 r342time_stamp(T342* C);
T6 r342file_exists(T0* a1);
extern T395 oBC269epoch_time;
extern int fBC269epoch_time;
T395 r342epoch_time(void);
T395 r342last_change_of(T0* a1);
void r342open_read(T342* C);
T6 r342se_assigned_from(T0* a1);
void r342print_on(T342* C,T0* a1);
void r342old_read_character(T342* C);
T6 r342old_end_of_file(T342* C);
void r342out_in_tagged_out_memory(T342* C);
void r342read_character(T342* C);
void r342close(T342* C);
void r342make(T342* C,T0* a1);
T6 r342conforms_to(T342* C,T0* a1);
void r342connect_to(T342* C,T0* a1);
extern T270 oBC1file_tools;
void r342read_string(T342* C,T2 a1);
T0* r342twin(T342* C);
void r342old_open_read(T342* C);
T0* r203Dir_attribute_name(void);
void r203make_from_element(T203* C,T0* a1,T0* a2);
extern T0*oBC203Start_target_attribute_name;
extern int fBC203Start_target_attribute_name;
T0* r203Start_target_attribute_name(void);
T0* r203Unless_attribute_name(void);
extern T0*oBC203Reuse_variables_attribute_name;
extern int fBC203Reuse_variables_attribute_name;
T0* r203Reuse_variables_attribute_name(void);
T0* r203attribute_value(T203* C,T0* a1,T0* a2);
T0* r203If_attribute_name(void);
T6 r203se_assigned_from(T0* a1);
T6 r203is_filename_executable(T203* C);
void r203print_on(T203* C,T0* a1);
void r203out_in_tagged_out_memory(T203* C);
T6 r203uc_boolean_value(T203* C,T0* a1,T0* a2);
T6 r203is_target_executable(T203* C);
T0* r203True_attribute_value(void);
T0* r203uc_attribute_value(T203* C,T0* a1,T0* a2);
T6 r203conforms_to(T203* C,T0* a1);
void r203print(T0* a1);
void r203_58Pmake_from_element(T203* C,T0* a1,T0* a2);
extern T0*oBC203Filename_attribute_name;
extern int fBC203Filename_attribute_name;
T0* r203Filename_attribute_name(void);
void r203execute(T203* C);
T6 r203has_uc_attribute(T0* a1,T0* a2);
T6 r203is_enabled(T203* C);
void r203exit_application(T2 a1,T0* a2);
T0* r203False_attribute_value(void);
T0* r203twin(T203* C);
T6 r203is_executable(T203* C);
T0* r162Dir_attribute_name(void);
void r162make_from_element(T162* C,T0* a1,T0* a2);
void r162trace(T162* C,T0* a1);
T0* r162Unless_attribute_name(void);
T0* r162attribute_value(T162* C,T0* a1,T0* a2);
T0* r162If_attribute_name(void);
T6 r162se_assigned_from(T0* a1);
void r162print_on(T162* C,T0* a1);
void r162out_in_tagged_out_memory(T162* C);
T6 r162conforms_to(T162* C,T0* a1);
void r162print(T0* a1);
void r162_58Pmake_from_element(T162* C,T0* a1,T0* a2);
extern T0*oBC162Executable_attribute_name;
extern int fBC162Executable_attribute_name;
T0* r162Executable_attribute_name(void);
void r162execute(T162* C);
T6 r162is_enabled(T162* C);
void r162exit_application(T2 a1,T0* a2);
T0* r162twin(T162* C);
void r162execute_shell(T0* a1);
T6 r162is_executable(T162* C);
T0* r239Dir_attribute_name(void);
extern T0*oBC239Variable_attribute_name;
extern int fBC239Variable_attribute_name;
T0* r239Variable_attribute_name(void);
void r239make_from_element(T239* C,T0* a1,T0* a2);
T0* r239Unless_attribute_name(void);
T0* r239If_attribute_name(void);
T0* r239file_system(void);
T6 r239se_assigned_from(T0* a1);
void r239print_on(T239* C,T0* a1);
T0* r239clone(T0* a1);
void r239out_in_tagged_out_memory(T239* C);
extern T0*oBC239True_value_attribute_name;
extern int fBC239True_value_attribute_name;
T0* r239True_value_attribute_name(void);
void r239make(T239* C,T0* a1);
extern T0*oBC239False_value_attribute_name;
extern int fBC239False_value_attribute_name;
T0* r239False_value_attribute_name(void);
T0* r239uc_attribute_value(T239* C,T0* a1,T0* a2);
void r239_59Pmake(T239* C,T0* a1);
T6 r239conforms_to(T239* C,T0* a1);
void r239print(T0* a1);
T0* r239string_tokens(T0* a1,T3 a2);
void r239_58Pmake_from_element(T239* C,T0* a1,T0* a2);
void r239execute(T239* C);
T6 r239has_uc_attribute(T0* a1,T0* a2);
T6 r239is_enabled(T239* C);
extern T0*oBC239Source_attribute_name;
extern int fBC239Source_attribute_name;
T0* r239Source_attribute_name(void);
void r239exit_application(T2 a1,T0* a2);
T0* r239twin(T239* C);
T6 r239is_executable(T239* C);
extern T0*oBC239Target_attribute_name;
extern int fBC239Target_attribute_name;
T0* r239Target_attribute_name(void);
void r267disconnect(T267* C);
T6 r267se_assigned_from(T0* a1);
void r267print_on(T267* C,T0* a1);
void r267out_in_tagged_out_memory(T267* C);
void r267read_character(T267* C);
T6 r267conforms_to(T267* C,T0* a1);
T6 r267end_of_input(T267* C);
void r267connect_to(T267* C,T0* a1);
T3 r267last_character(T267* C);
T0* r267twin(T267* C);
T6 r337is_closed(T337* C);
void r337old_close(T337* C);
T2 r337time_stamp(T337* C);
T6 r337file_exists(T0* a1);
T395 r337epoch_time(void);
T395 r337last_change_of(T0* a1);
T6 r337se_assigned_from(T0* a1);
void r337print_on(T337* C,T0* a1);
void r337out_in_tagged_out_memory(T337* C);
void r337old_open_write(T337* C);
void r337close(T337* C);
void r337make(T337* C,T0* a1);
void r337old_put_string(T337* C,T0* a1);
T6 r337conforms_to(T337* C,T0* a1);
T0* r337twin(T337* C);
void r337open_write(T337* C);
T0* r201Dir_attribute_name(void);
void r201make_from_element(T201* C,T0* a1,T0* a2);
void r201trace(T201* C,T0* a1);
T0* r201Unless_attribute_name(void);
T0* r201If_attribute_name(void);
T6 r201se_assigned_from(T0* a1);
void r201print_on(T201* C,T0* a1);
T0* r201clone(T0* a1);
extern T0*oBC201Config_filename_attribute_name;
extern int fBC201Config_filename_attribute_name;
T0* r201Config_filename_attribute_name(void);
extern T0*oBC201Compile_attribute_name;
extern int fBC201Compile_attribute_name;
T0* r201Compile_attribute_name(void);
void r201out_in_tagged_out_memory(T201* C);
T0* r201uc_attribute_value(T201* C,T0* a1,T0* a2);
T6 r201conforms_to(T201* C,T0* a1);
void r201print(T0* a1);
void r201_58Pmake_from_element(T201* C,T0* a1,T0* a2);
void r201execute(T201* C);
T6 r201has_uc_attribute(T0* a1,T0* a2);
T6 r201is_enabled(T201* C);
void r201exit_application(T2 a1,T0* a2);
T0* r201twin(T201* C);
void r201execute_shell(T0* a1);
T6 r201is_executable(T201* C);
T0* r213Dir_attribute_name(void);
void r213make_from_element(T213* C,T0* a1,T0* a2);
void r213trace(T213* C,T0* a1);
T0* r213Unless_attribute_name(void);
T0* r213attribute_value(T213* C,T0* a1,T0* a2);
T0* r213If_attribute_name(void);
T0* r213file_system(void);
T6 r213se_assigned_from(T0* a1);
void r213print_on(T213* C,T0* a1);
void r213out_in_tagged_out_memory(T213* C);
T6 r213is_to_file_executable(T213* C);
extern T0*oBC213To_directory_attribute_name;
extern int fBC213To_directory_attribute_name;
T0* r213To_directory_attribute_name(void);
extern T0*oBC213To_file_attribute_name;
extern int fBC213To_file_attribute_name;
T0* r213To_file_attribute_name(void);
T6 r213conforms_to(T213* C,T0* a1);
void r213print(T0* a1);
void r213_58Pmake_from_element(T213* C,T0* a1,T0* a2);
void r213execute(T213* C);
T6 r213is_enabled(T213* C);
T6 r213is_to_directory_executable(T213* C);
T0* r213twin(T213* C);
extern T0*oBC213File_attribute_name;
extern int fBC213File_attribute_name;
T0* r213File_attribute_name(void);
T6 r213is_executable(T213* C);
T0* r60attribute_value_by_name(T60* C,T0* a1);
void r60add_attributes(T60* C,T0* a1);
T6 r60se_assigned_from(T0* a1);
void r60print_on(T60* C,T0* a1);
void r60add_attribute(T60* C,T0* a1);
void r60out_in_tagged_out_memory(T60* C);
void r60make(T60* C,T0* a1);
T0* r60children_by_name(T60* C,T0* a1);
T6 r60conforms_to(T60* C,T0* a1);
void r60make_attribute_handler(T60* C);
extern T0*oBC19Empty_string;
extern int fBC19Empty_string;
T0* r60Empty_string(void);
T0* r60twin(T60* C);
void r60make_composite(T60* C);
T6 r60has_attribute(T60* C,T0* a1);
T0* r153pathname_from_file_system(T153* C,T0* a1,T0* a2);
T0* r153current_working_directory(T153* C);
void r153cd(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
T6 r153is_directory_readable(T0* a1);
void r153print_on(T153* C,T0* a1);
T0* r153clone(T0* a1);
T0* r153dirname(T0* a1);
void r153delete_file(T0* a1);
void r153out_in_tagged_out_memory(T153* C);
void r153set_current_working_directory(T153* C,T0* a1);
T0* r153cwd(T153* C);
T6 r153same_type(T153* C,T0* a1);
T6 r153is_file_readable(T0* a1);
T0* r153tmp_file(void);
T6 r153conforms_to(T153* C,T0* a1);
void r153copy_file(T0* a1,T0* a2);
T0* r153string_to_pathname(T0* a1);
void r153rename_file(T0* a1,T0* a2);
extern T0*oBC153root_directory;
T6 r153is_root_directory(T0* a1);
T0* r153pathname_to_string(T0* a1);
T0* r153twin(T153* C);
T0* r153basename(T0* a1);
T0* r153canonical_pathname(T0* a1);
T0* r153pathname(T0* a1,T0* a2);
T0* r153tmp_directory(void);
T2 r380new_capacity(T2 a1);
void r380copy(T380* C,T0* a1);
T6 r380extendible(T380* C,T2 a1);
void r380remove_traversing_cursor(T380* C,T0* a1);
void r380move_all_cursors_after(T380* C);
void r380add_traversing_cursor(T380* C,T0* a1);
T6 r380se_assigned_from(T0* a1);
void r380print_on(T380* C,T0* a1);
T0* r380clone(T0* a1);
void r380out_in_tagged_out_memory(T380* C);
T6 r380cursor_before(T0* a1);
void r380ds_arrayed_list_make(T380* C,T2 a1);
T6 r380cursor_after(T0* a1);
T6 r380conforms_to(T380* C,T0* a1);
void r380resize(T380* C,T2 a1);
void r380make_from_bilinear(T380* C,T0* a1);
T0* r380twin(T380* C);
void r380force_last(T380* C,T0* a1);
T0* r380new_cursor(T380* C);
void r380put_last(T380* C,T0* a1);
T6 r380cursor_off(T0* a1);
T0* r215Dir_attribute_name(void);
void r215make_from_element(T215* C,T0* a1,T0* a2);
void r215trace(T215* C,T0* a1);
T0* r215Unless_attribute_name(void);
T0* r215If_attribute_name(void);
T6 r215se_assigned_from(T0* a1);
void r215print_on(T215* C,T0* a1);
void r215out_in_tagged_out_memory(T215* C);
extern T0*oBC21Execution_environment;
T0* r215uc_attribute_value(T215* C,T0* a1,T0* a2);
extern T0*oBC215Value_attribute_name;
extern int fBC215Value_attribute_name;
T0* r215Value_attribute_name(void);
T6 r215conforms_to(T215* C,T0* a1);
void r215print(T0* a1);
void r215_58Pmake_from_element(T215* C,T0* a1,T0* a2);
void r215execute(T215* C);
T0* r215Name_attribute_name(void);
T6 r215has_uc_attribute(T0* a1,T0* a2);
T6 r215is_enabled(T215* C);
T0* r215twin(T215* C);
T6 r215is_executable(T215* C);
extern T0*oBC156Clean_attribute_name;
extern int fBC156Clean_attribute_name;
T0* r156Clean_attribute_name(void);
T0* r156Dir_attribute_name(void);
extern T0*oBC156System_attribute_name;
extern int fBC156System_attribute_name;
T0* r156System_attribute_name(void);
extern T0*oBC156Finish_freezing_attribute_name;
extern int fBC156Finish_freezing_attribute_name;
T0* r156Finish_freezing_attribute_name(void);
void r156make_from_element(T156* C,T0* a1,T0* a2);
void r156trace(T156* C,T0* a1);
T6 r156is_cleanable(T156* C);
T0* r156Unless_attribute_name(void);
T0* r156If_attribute_name(void);
extern T0*oBC156Ace_attribute_name;
extern int fBC156Ace_attribute_name;
T0* r156Ace_attribute_name(void);
T0* r156file_system(void);
T6 r156se_assigned_from(T0* a1);
void r156print_on(T156* C,T0* a1);
T0* r156clone(T0* a1);
void r156out_in_tagged_out_memory(T156* C);
T6 r156uc_boolean_value(T156* C,T0* a1,T0* a2);
void r156execute_clean(T156* C);
void r156execute_compile(T156* C);
T0* r156True_attribute_value(void);
extern T0*oBC156Finalize_attribute_name;
extern int fBC156Finalize_attribute_name;
T0* r156Finalize_attribute_name(void);
T0* r156uc_attribute_value(T156* C,T0* a1,T0* a2);
T6 r156conforms_to(T156* C,T0* a1);
void r156print(T0* a1);
void r156_58Pmake_from_element(T156* C,T0* a1,T0* a2);
T6 r156is_compilable(T156* C);
void r156execute(T156* C);
T6 r156has_uc_attribute(T0* a1,T0* a2);
T0* r156uc_attribute_value_or_default(T156* C,T0* a1,T0* a2,T0* a3);
T6 r156is_enabled(T156* C);
void r156exit_application(T2 a1,T0* a2);
T0* r156False_attribute_value(void);
T0* r156attribute_value_or_default(T156* C,T0* a1,T0* a2,T0* a3);
T0* r156twin(T156* C);
void r156execute_shell(T0* a1);
T6 r156is_executable(T156* C);
T0* r209Dir_attribute_name(void);
void r209make_from_element(T209* C,T0* a1,T0* a2);
T6 r209is_directory_executable(T209* C);
void r209trace(T209* C,T0* a1);
T0* r209Unless_attribute_name(void);
T0* r209attribute_value(T209* C,T0* a1,T0* a2);
T0* r209If_attribute_name(void);
T0* r209file_system(void);
T6 r209se_assigned_from(T0* a1);
void r209print_on(T209* C,T0* a1);
void r209out_in_tagged_out_memory(T209* C);
T6 r209is_file_executable(T209* C);
T6 r209conforms_to(T209* C,T0* a1);
void r209print(T0* a1);
void r209_58Pmake_from_element(T209* C,T0* a1,T0* a2);
void r209execute(T209* C);
T6 r209is_enabled(T209* C);
T0* r209twin(T209* C);
extern T0*oBC209File_attribute_name;
extern int fBC209File_attribute_name;
T0* r209File_attribute_name(void);
extern T0*oBC209Directory_attribute_name;
extern int fBC209Directory_attribute_name;
T0* r209Directory_attribute_name(void);
T6 r209is_executable(T209* C);
extern T0*oBC81utils;
T2 r81item_code(T81* C,T2 a1);
T6 r81se_assigned_from(T0* a1);
void r81print_on(T81* C,T0* a1);
void r81out_in_tagged_out_memory(T81* C);
void r81make(T81* C);
void r81insert(T81* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r81add_to_storage_count(T81* C,T2 a1);
void r81remove(T81* C,T2 a1,T2 a2);
void r81find_slice_position(T81* C,T2 a1,T2 a2);
void r81insert_code(T81* C,T2 a1,T2 a2);
T6 r81conforms_to(T81* C,T0* a1);
extern T6 oBC81optimize_access;
void r81storage_move(T81* C,T2 a1,T2 a2,T2 a3);
T0* r81twin(T81* C);
T2 r81storage_slice_count(T81* C);
void r81find_position(T81* C,T2 a1);
T0* r80create_representation(T80* C);
T6 r80se_assigned_from(T0* a1);
void r80print_on(T80* C,T0* a1);
void r80out_in_tagged_out_memory(T80* C);
T6 r80conforms_to(T80* C,T0* a1);
T0* r80twin(T80* C);
T0* r166Dir_attribute_name(void);
void r166make_from_element(T166* C,T0* a1,T0* a2);
void r166trace(T166* C,T0* a1);
T0* r166Unless_attribute_name(void);
T0* r166If_attribute_name(void);
T6 r166se_assigned_from(T0* a1);
void r166print_on(T166* C,T0* a1);
void r166out_in_tagged_out_memory(T166* C);
T0* r166uc_attribute_value(T166* C,T0* a1,T0* a2);
extern T0*oBC166Value_attribute_name;
extern int fBC166Value_attribute_name;
T0* r166Value_attribute_name(void);
T6 r166conforms_to(T166* C,T0* a1);
void r166print(T0* a1);
void r166_58Pmake_from_element(T166* C,T0* a1,T0* a2);
void r166execute(T166* C);
T0* r166Name_attribute_name(void);
T6 r166has_uc_attribute(T0* a1,T0* a2);
T6 r166is_enabled(T166* C);
T0* r166twin(T166* C);
T6 r166is_executable(T166* C);
T0* r164Dir_attribute_name(void);
void r164make_from_element(T164* C,T0* a1,T0* a2);
void r164trace(T164* C,T0* a1);
T0* r164Unless_attribute_name(void);
T0* r164If_attribute_name(void);
T6 r164se_assigned_from(T0* a1);
void r164print_on(T164* C,T0* a1);
T0* r164clone(T0* a1);
void r164out_in_tagged_out_memory(T164* C);
T0* r164uc_attribute_value(T164* C,T0* a1,T0* a2);
T6 r164conforms_to(T164* C,T0* a1);
void r164print(T0* a1);
void r164_58Pmake_from_element(T164* C,T0* a1,T0* a2);
extern T0*oBC164Executable_attribute_name;
extern int fBC164Executable_attribute_name;
T0* r164Executable_attribute_name(void);
void r164execute(T164* C);
T6 r164has_uc_attribute(T0* a1,T0* a2);
T6 r164is_enabled(T164* C);
extern T0*oBC164Source_filename_attribute_name;
extern int fBC164Source_filename_attribute_name;
T0* r164Source_filename_attribute_name(void);
void r164exit_application(T2 a1,T0* a2);
T0* r164twin(T164* C);
void r164execute_shell(T0* a1);
T6 r164is_executable(T164* C);
void r28calculate_depend_order(T0* a1);
void r28build(T28* C);
extern T0*oBC28Parser_factory;
extern int fBC28Parser_factory;
T0* r28Parser_factory(void);
void r28build_target(T28* C,T0* a1);
T0* r28file_system(void);
T6 r28se_assigned_from(T0* a1);
void r28print_on(T28* C,T0* a1);
extern T0*oBC19Target_element_name;
extern int fBC19Target_element_name;
T0* r28Target_element_name(void);
T0* r28clone(T0* a1);
void r28load(T28* C,T0* a1);
void r28out_in_tagged_out_memory(T28* C);
extern T0*oBC19Description_element_name;
extern int fBC19Description_element_name;
T0* r28Description_element_name(void);
extern T0*oBC19Default_attribute_name;
extern int fBC19Default_attribute_name;
T0* r28Default_attribute_name(void);
T0* r28target_with_name(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
void r28print(T0* a1);
void r28make_with_filename(T28* C,T0* a1,T0* a2,T0* a3);
void r28execute_target(T28* C,T0* a1,T6 a2);
T0* r28Name_attribute_name(void);
void r28reset(T28* C);
void r28exit_application(T2 a1,T0* a2);
T0* r28twin(T28* C);
extern T0*oBC19Default_build_filename;
extern int fBC19Default_build_filename;
T0* r28Default_build_filename(void);
extern T0*oBC28Inherit_attribute_name;
extern int fBC28Inherit_attribute_name;
T0* r28Inherit_attribute_name(void);
T0* r25out(T25* C);
void r25copy(T25* C,T0* a1);
T0* r25substring(T25* C,T2 a1,T2 a2);
T2 r25count(T25* C);
T2 r25item_code(T25* C,T2 a1);
T6 r25is_whitespace(T2 a1);
void r25remove_between(T25* C,T2 a1,T2 a2);
T6 r25is_equal(T25* C,T0* a1);
T66 r25item(T25* C,T2 a1);
void r25append_uc_string(T25* C,T0* a1);
T6 r25se_assigned_from(T0* a1);
void r25print_on(T25* C,T0* a1);
void r25make_from_string(T25* C,T0* a1);
T2 r25index_of(T25* C,T66 a1,T2 a2);
void r25out_in_tagged_out_memory(T25* C);
void r25make(T25* C,T2 a1);
void r25append_string(T25* C,T0* a1);
void r25head(T25* C,T2 a1);
T6 r25conforms_to(T25* C,T0* a1);
void r25append_ucc_code(T25* C,T2 a1);
void r25right_adjust(T25* C);
T6 r25empty(T25* C);
T0* r25twin(T25* C);
T2 r25three_way_comparison(T25* C,T0* a1);
void r25left_adjust(T25* C);
extern T0*oBC25i_settings;
void r25tail(T25* C,T2 a1);
T0* r194Dir_attribute_name(void);
extern T0*oBC194Output_filename_attribute_name;
extern int fBC194Output_filename_attribute_name;
T0* r194Output_filename_attribute_name(void);
void r194make_from_element(T194* C,T0* a1,T0* a2);
void r194trace(T194* C,T0* a1);
T0* r194Unless_attribute_name(void);
T0* r194If_attribute_name(void);
T0* r194file_system(void);
T6 r194se_assigned_from(T0* a1);
void r194print_on(T194* C,T0* a1);
T0* r194clone(T0* a1);
extern T0*oBC194Define_element_name;
extern int fBC194Define_element_name;
T0* r194Define_element_name(void);
extern T0*oBC194Lines_attribute_name;
extern int fBC194Lines_attribute_name;
T0* r194Lines_attribute_name(void);
void r194out_in_tagged_out_memory(T194* C);
T6 r194uc_boolean_value(T194* C,T0* a1,T0* a2);
void r194make(T194* C,T0* a1);
T0* r194True_attribute_value(void);
T0* r194uc_attribute_value(T194* C,T0* a1,T0* a2);
void r194_59Pmake(T194* C,T0* a1);
T6 r194conforms_to(T194* C,T0* a1);
void r194print(T0* a1);
void r194_58Pmake_from_element(T194* C,T0* a1,T0* a2);
void r194execute(T194* C);
T6 r194has_uc_attribute(T0* a1,T0* a2);
T0* r194Name_attribute_name(void);
T6 r194is_enabled(T194* C);
void r194exit_application(T2 a1,T0* a2);
T0* r194False_attribute_value(void);
T0* r194twin(T194* C);
void r194execute_shell(T0* a1);
T6 r194is_executable(T194* C);
extern T0*oBC194Input_filename_attribute_name;
extern int fBC194Input_filename_attribute_name;
T0* r194Input_filename_attribute_name(void);
void r167trace(T167* C,T0* a1);
T6 r167se_assigned_from(T0* a1);
void r167print_on(T167* C,T0* a1);
void r167out_in_tagged_out_memory(T167* C);
void r167make(T167* C,T0* a1);
T6 r167conforms_to(T167* C,T0* a1);
void r167print(T0* a1);
void r167execute(T167* C);
T0* r167twin(T167* C);
T6 r374se_assigned_from(T0* a1);
void r374print_on(T374* C,T0* a1);
void r374out_in_tagged_out_memory(T374* C);
T6 r374conforms_to(T374* C,T0* a1);
T0* r374twin(T374* C);
void r314fill(T314* C);
void r314compact_left(T314* C);
T2 r314count(T314* C);
void r314set_position(T314* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC313lower;
extern int fBC313lower;
T2 r314lower(void);
T6 r314se_assigned_from(T0* a1);
void r314print_on(T314* C,T0* a1);
void r314out_in_tagged_out_memory(T314* C);
extern T0*oBC251STRING_BUFFER_;
T6 r314conforms_to(T314* C,T0* a1);
void r314resize(T314* C);
void r314make_with_size(T314* C,T0* a1,T2 a2);
T0* r314twin(T314* C);
void r314set_file(T314* C,T0* a1);
extern T0*oBC252INPUT_STREAM_;
void r314flush(T314* C);
T0* r326current_working_directory(T326* C);
T6 r326se_assigned_from(T0* a1);
void r326print_on(T326* C,T0* a1);
T0* r326clone(T0* a1);
T6 r326is_windows(T326* C);
void r326out_in_tagged_out_memory(T326* C);
void r326make(T326* C);
void r326old_put_string(T0* a1);
T6 r326conforms_to(T326* C,T0* a1);
T6 r326is_unix(T326* C);
T0* r326twin(T326* C);
T0* r330current_working_directory(T330* C);
T6 r330se_assigned_from(T0* a1);
void r330print_on(T330* C,T0* a1);
T0* r330clone(T0* a1);
T6 r330is_windows(T330* C);
void r330out_in_tagged_out_memory(T330* C);
void r330make(T330* C);
void r330old_put_string(T0* a1);
T6 r330conforms_to(T330* C,T0* a1);
T6 r330is_unix(T330* C);
T0* r330twin(T330* C);
extern T0*oBC19Echo_task_name;
extern int fBC19Echo_task_name;
T0* r42Echo_task_name(void);
extern T0*oBC42Dir_attribute_name;
extern int fBC42Dir_attribute_name;
T0* r42Dir_attribute_name(void);
extern T0*oBC19Outofdate_task_name;
extern int fBC19Outofdate_task_name;
T0* r42Outofdate_task_name(void);
extern T0*oBC19Delete_task_name;
extern int fBC19Delete_task_name;
T0* r42Delete_task_name(void);
T0* r42dependencies(T42* C);
extern T0*oBC19Set_task_name;
extern int fBC19Set_task_name;
T0* r42Set_task_name(void);
extern T0*oBC19Ise_task_name;
extern int fBC19Ise_task_name;
T0* r42Ise_task_name(void);
extern T0*oBC19Exec_task_name;
extern int fBC19Exec_task_name;
T0* r42Exec_task_name(void);
extern T0*oBC42Unless_attribute_name;
extern int fBC42Unless_attribute_name;
T0* r42Unless_attribute_name(void);
T0* r42dependent_targets(T42* C);
extern T0*oBC42If_attribute_name;
extern int fBC42If_attribute_name;
T0* r42If_attribute_name(void);
extern T0*oBC19Mkdir_task_name;
extern int fBC19Mkdir_task_name;
T0* r42Mkdir_task_name(void);
T0* r42file_system(void);
extern T0*oBC19Setenv_task_name;
extern int fBC19Setenv_task_name;
T0* r42Setenv_task_name(void);
T6 r42has_dependencies(T42* C);
T6 r42se_assigned_from(T0* a1);
void r42print_on(T42* C,T0* a1);
T0* r42clone(T0* a1);
extern T0*oBC42Depend_attribute_name;
extern int fBC42Depend_attribute_name;
T0* r42Depend_attribute_name(void);
extern T0*oBC19Geant_task_name;
extern int fBC19Geant_task_name;
T0* r42Geant_task_name(void);
void r42out_in_tagged_out_memory(T42* C);
T0* r42Description_element_name(void);
extern T0*oBC19Hact_task_name;
extern int fBC19Hact_task_name;
T0* r42Hact_task_name(void);
void r42make(T42* C,T0* a1,T0* a2);
extern T0*oBC19Gexace_task_name;
extern int fBC19Gexace_task_name;
T0* r42Gexace_task_name(void);
extern T0*oBC19Gelex_task_name;
extern int fBC19Gelex_task_name;
T0* r42Gelex_task_name(void);
extern T0*oBC19Unset_task_name;
extern int fBC19Unset_task_name;
T0* r42Unset_task_name(void);
extern T0*oBC19Se_task_name;
extern int fBC19Se_task_name;
T0* r42Se_task_name(void);
T6 r42conforms_to(T42* C,T0* a1);
void r42print(T0* a1);
T0* r42string_tokens(T0* a1,T3 a2);
extern T0*oBC19Getest_task_name;
extern int fBC19Getest_task_name;
T0* r42Getest_task_name(void);
extern T0*oBC19Copy_task_name;
extern int fBC19Copy_task_name;
T0* r42Copy_task_name(void);
void r42execute(T42* C);
T0* r42Name_attribute_name(void);
T6 r42is_enabled(T42* C);
extern T0*oBC19Lcc_task_name;
extern int fBC19Lcc_task_name;
T0* r42Lcc_task_name(void);
void r42exit_application(T2 a1,T0* a2);
extern T0*oBC19Xslt_task_name;
extern int fBC19Xslt_task_name;
T0* r42Xslt_task_name(void);
extern T0*oBC19Gepp_task_name;
extern int fBC19Gepp_task_name;
T0* r42Gepp_task_name(void);
T0* r42twin(T42* C);
extern T0*oBC19Move_task_name;
extern int fBC19Move_task_name;
T0* r42Move_task_name(void);
extern T0*oBC19Geyacc_task_name;
extern int fBC19Geyacc_task_name;
T0* r42Geyacc_task_name(void);
extern T0*oBC19Ve_task_name;
extern int fBC19Ve_task_name;
T0* r42Ve_task_name(void);
extern T0*oBC160Clean_attribute_name;
extern int fBC160Clean_attribute_name;
T0* r160Clean_attribute_name(void);
T0* r160Dir_attribute_name(void);
void r160make_from_element(T160* C,T0* a1,T0* a2);
void r160trace(T160* C,T0* a1);
T6 r160is_cleanable(T160* C);
T0* r160Unless_attribute_name(void);
T0* r160If_attribute_name(void);
T0* r160file_system(void);
T6 r160se_assigned_from(T0* a1);
void r160print_on(T160* C,T0* a1);
T0* r160clone(T0* a1);
extern T0*oBC160Esd_attribute_name;
extern int fBC160Esd_attribute_name;
T0* r160Esd_attribute_name(void);
void r160out_in_tagged_out_memory(T160* C);
T6 r160uc_boolean_value(T160* C,T0* a1,T0* a2);
void r160execute_clean(T160* C);
T0* r160True_attribute_value(void);
T0* r160uc_attribute_value(T160* C,T0* a1,T0* a2);
T6 r160conforms_to(T160* C,T0* a1);
void r160print(T0* a1);
void r160_58Pmake_from_element(T160* C,T0* a1,T0* a2);
T6 r160is_compilable(T160* C);
void r160execute(T160* C);
T6 r160has_uc_attribute(T0* a1,T0* a2);
T0* r160uc_attribute_value_or_default(T160* C,T0* a1,T0* a2,T0* a3);
T6 r160is_enabled(T160* C);
void r160exit_application(T2 a1,T0* a2);
T0* r160False_attribute_value(void);
extern T0*oBC160Recursive_attribute_name;
extern int fBC160Recursive_attribute_name;
T0* r160Recursive_attribute_name(void);
T0* r160attribute_value_or_default(T160* C,T0* a1,T0* a2,T0* a3);
T0* r160twin(T160* C);
void r160execute_shell(T0* a1);
T6 r160is_executable(T160* C);
T6 r82se_assigned_from(T0* a1);
void r82print_on(T82* C,T0* a1);
void r82out_in_tagged_out_memory(T82* C);
void r82make(T82* C);
void r82insert(T82* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r82remove(T82* C,T2 a1,T2 a2);
void r82insert_code(T82* C,T2 a1,T2 a2);
void r82move(T82* C,T2 a1,T2 a2,T2 a3);
T6 r82conforms_to(T82* C,T0* a1);
void r82storage_ensure_capacity(T82* C,T2 a1);
T0* r82twin(T82* C);
T0* r205Dir_attribute_name(void);
void r205make_from_element(T205* C,T0* a1,T0* a2);
void r205trace(T205* C,T0* a1);
T0* r205Unless_attribute_name(void);
T0* r205attribute_value(T205* C,T0* a1,T0* a2);
T0* r205If_attribute_name(void);
T6 r205se_assigned_from(T0* a1);
void r205print_on(T205* C,T0* a1);
void r205out_in_tagged_out_memory(T205* C);
T6 r205conforms_to(T205* C,T0* a1);
void r205print(T0* a1);
void r205_58Pmake_from_element(T205* C,T0* a1,T0* a2);
extern T0*oBC205Message_attribute_name;
extern int fBC205Message_attribute_name;
T0* r205Message_attribute_name(void);
void r205execute(T205* C);
T6 r205is_enabled(T205* C);
T0* r205twin(T205* C);
void r294yy_do_action(T294* C,T2 a1);
extern T0*oBC295yytable_template;
extern int fBC295yytable_template;
T0* r294yytable_template(void);
T0* r294empty_ucstring(void);
void r294make_parser_skeleton(T294* C);
T2 r294yy_at_beginning_of_line(T294* C);
void r294fatal_error(T0* a1);
T0* r294yytype1(T0* a1);
T0* r294yytype2(T0* a1);
T0* r294yytype3(T0* a1);
T0* r294yytype4(T0* a1);
void r294handle_found_text(T294* C);
void r294parse(T294* C);
void r294set_input_buffer(T294* C,T0* a1);
T2 r294yy_translate(T294* C,T2 a1);
extern T0*oBC296yy_ec_template;
extern int fBC296yy_ec_template;
T0* r294yy_ec_template(void);
void r294yy_execute_action(T294* C,T2 a1);
extern T0*oBC295yytranslate_template;
extern int fBC295yytranslate_template;
T0* r294yytranslate_template(void);
void r294clear_stacks(T294* C);
extern T0*oBC296yy_def_template;
extern int fBC296yy_def_template;
T0* r294yy_def_template(void);
T3 r294text_item(T294* C,T2 a1);
void r294yy_load_input_buffer(T294* C);
extern T66 oBC295uc_collon;
extern int fBC295uc_collon;
T66 r294uc_collon(void);
extern T0*oBC295yyr1_template;
extern int fBC295yyr1_template;
T0* r294yyr1_template(void);
void r294make_with_buffer(T294* C,T0* a1);
T2 r294yy_null_trans_state(T294* C,T2 a1);
extern T0*oBC296yy_accept_template;
extern int fBC296yy_accept_template;
T0* r294yy_accept_template(void);
void r294read_token(T294* C);
extern T0*oBC295yyr2_template;
extern int fBC295yyr2_template;
T0* r294yyr2_template(void);
T2 r294yy_previous_state(T294* C);
extern T0*oBC295yypgoto_template;
extern int fBC295yypgoto_template;
T0* r294yypgoto_template(void);
void r294yy_refill_input_buffer(T294* C);
T0* r294yy_fixed_array(T0* a1);
T6 r294conforms_to(T294* C,T0* a1);
extern T0*oBC296yy_meta_template;
extern int fBC296yy_meta_template;
T0* r294yy_meta_template(void);
extern T0*oBC296yy_base_template;
extern int fBC296yy_base_template;
T0* r294yy_base_template(void);
T0* r294twin(T294* C);
T0* r294clone(T0* a1);
T0* r294new_file_buffer(T0* a1);
void r294yy_initialize(T294* C);
void r294reset(T294* C);
void r294parse_from_file_name(T294* C,T0* a1);
T0* r294text(T294* C);
void r294out_in_tagged_out_memory(T294* C);
extern T0*oBC296yy_nxt_template;
extern int fBC296yy_nxt_template;
T0* r294yy_nxt_template(void);
void r294parse_from_stream(T294* C,T0* a1);
void r294yy_set_line_column(T294* C);
void r294yy_build_parser_tables(T294* C);
T0* r294split_name_and_prefix(T0* a1);
void r294report_error(T294* C,T0* a1);
extern T0*oBC295yydefact_template;
extern int fBC295yydefact_template;
T0* r294yydefact_template(void);
extern T0*oBC296yy_chk_template;
extern int fBC296yy_chk_template;
T0* r294yy_chk_template(void);
extern T0*oBC295yycheck_template;
extern int fBC295yycheck_template;
T0* r294yycheck_template(void);
void r294make(T294* C);
T0* r294yyfixed_array(T0* a1);
void r294yy_clear_all(T294* C);
extern T0*oBC295yydefgoto_template;
extern int fBC295yydefgoto_template;
T0* r294yydefgoto_template(void);
void r294yy_set_content(T294* C,T0* a1);
extern T0*oBC295yypact_template;
extern int fBC295yypact_template;
T0* r294yypact_template(void);
void r294set_start_condition(T294* C,T2 a1);
T6 r294se_assigned_from(T0* a1);
void r294yy_build_tables(T294* C);
void r294print_on(T294* C,T0* a1);
extern T0*oBC190Meta_ecs_attribute_name;
extern int fBC190Meta_ecs_attribute_name;
T0* r190Meta_ecs_attribute_name(void);
T0* r190Dir_attribute_name(void);
extern T0*oBC190Output_filename_attribute_name;
extern int fBC190Output_filename_attribute_name;
T0* r190Output_filename_attribute_name(void);
extern T0*oBC190Size_attribute_name;
extern int fBC190Size_attribute_name;
T0* r190Size_attribute_name(void);
void r190make_from_element(T190* C,T0* a1,T0* a2);
extern T0*oBC190Ecs_attribute_name;
extern int fBC190Ecs_attribute_name;
T0* r190Ecs_attribute_name(void);
void r190trace(T190* C,T0* a1);
T0* r190Unless_attribute_name(void);
T0* r190If_attribute_name(void);
T6 r190se_assigned_from(T0* a1);
void r190print_on(T190* C,T0* a1);
T0* r190clone(T0* a1);
void r190out_in_tagged_out_memory(T190* C);
T6 r190uc_boolean_value(T190* C,T0* a1,T0* a2);
void r190make(T190* C,T0* a1);
T0* r190True_attribute_value(void);
T0* r190uc_attribute_value(T190* C,T0* a1,T0* a2);
extern T0*oBC190Case_insensitive_attribute_name;
extern int fBC190Case_insensitive_attribute_name;
T0* r190Case_insensitive_attribute_name(void);
void r190_59Pmake(T190* C,T0* a1);
extern T0*oBC190No_default_attribute_name;
extern int fBC190No_default_attribute_name;
T0* r190No_default_attribute_name(void);
T6 r190conforms_to(T190* C,T0* a1);
void r190print(T0* a1);
void r190_58Pmake_from_element(T190* C,T0* a1,T0* a2);
extern T0*oBC190Backup_attribute_name;
extern int fBC190Backup_attribute_name;
T0* r190Backup_attribute_name(void);
extern T0*oBC190No_warn_attribute_name;
extern int fBC190No_warn_attribute_name;
T0* r190No_warn_attribute_name(void);
void r190execute(T190* C);
T6 r190has_uc_attribute(T0* a1,T0* a2);
T6 r190is_enabled(T190* C);
void r190exit_application(T2 a1,T0* a2);
T0* r190False_attribute_value(void);
extern T0*oBC190Separate_actions_attribute_name;
extern int fBC190Separate_actions_attribute_name;
T0* r190Separate_actions_attribute_name(void);
T0* r190twin(T190* C);
void r190execute_shell(T0* a1);
T6 r190is_executable(T190* C);
extern T0*oBC190Input_filename_attribute_name;
extern int fBC190Input_filename_attribute_name;
T0* r190Input_filename_attribute_name(void);
extern T0*oBC190Full_attribute_name;
extern int fBC190Full_attribute_name;
T0* r190Full_attribute_name(void);
extern T0*oBC247stack;
extern int fBC247stack;
T0* r247stack(void);
void r247on_content(T0* a1);
T6 r247se_assigned_from(T0* a1);
void r247print_on(T247* C,T0* a1);
T0* r247clone(T0* a1);
void r247out_in_tagged_out_memory(T247* C);
void r247on_start_tag(T247* C,T0* a1,T0* a2,T0* a3);
void r247make_from_implementation(T247* C,T0* a1);
T6 r247conforms_to(T247* C,T0* a1);
T0* r247twin(T247* C);
void r397copy(T397* C,T0* a1);
void r397append_name(T397* C,T0* a1);
T6 r397se_assigned_from(T0* a1);
void r397print_on(T397* C,T0* a1);
T0* r397clone(T0* a1);
void r397out_in_tagged_out_memory(T397* C);
T6 r397is_parent(T397* C,T2 a1);
void r397make(T397* C);
void r397set_canonical(T397* C);
T6 r397conforms_to(T397* C,T0* a1);
T0* r397twin(T397* C);
T6 r397is_current(T397* C,T2 a1);
T6 r48se_assigned_from(T0* a1);
void r48print_on(T48* C,T0* a1);
void r48out_in_tagged_out_memory(T48* C);
T6 r48conforms_to(T48* C,T0* a1);
T0* r48twin(T48* C);
void r48put_character(T3 a1);
void r48put_string(T0* a1);
T0* r86expanded_variable_value(T86* C,T0* a1);
T0* r86variable_value(T86* C,T0* a1);
T0* r86file_system(void);
T6 r86se_assigned_from(T0* a1);
void r86print_on(T86* C,T0* a1);
T0* r86clone(T0* a1);
void r86out_in_tagged_out_memory(T86* C);
void r86make(T86* C);
extern T0*oBC20Commandline_variables;
extern int fBC20Commandline_variables;
T0* r86Commandline_variables(void);
T6 r86boolean_condition_value(T86* C,T0* a1);
T6 r86conforms_to(T86* C,T0* a1);
void r86print(T0* a1);
T0* r86string_tokens(T0* a1,T3 a2);
T0* r86interpreted_string(T86* C,T0* a1);
void r86exit_application(T2 a1,T0* a2);
T0* r86twin(T86* C);
T6 r86has_variable(T86* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r323command_arguments(void);
T6 r323se_assigned_from(T0* a1);
void r323print_on(T323* C,T0* a1);
void r323out_in_tagged_out_memory(T323* C);
T6 r323conforms_to(T323* C,T0* a1);
T0* r323twin(T323* C);
T0* r323argument(T2 a1);
T6 r286se_assigned_from(T0* a1);
void r286print_on(T286* C,T0* a1);
void r286out_in_tagged_out_memory(T286* C);
void r286make(T286* C);
T6 r286conforms_to(T286* C,T0* a1);
T0* r286new_eiffel_event_parser_imp(T286* C);
T0* r286twin(T286* C);
T6 r332se_assigned_from(T0* a1);
void r332print_on(T332* C,T0* a1);
void r332out_in_tagged_out_memory(T332* C);
T2 r332execute_command(T0* a1);
T6 r332conforms_to(T332* C,T0* a1);
void r332execute(T332* C);
T0* r332twin(T332* C);
T0* r170Dir_attribute_name(void);
void r170make_from_element(T170* C,T0* a1,T0* a2);
void r170trace(T170* C,T0* a1);
extern T0*oBC170Xace_filename_attribute_name;
extern int fBC170Xace_filename_attribute_name;
T0* r170Xace_filename_attribute_name(void);
extern T0*oBC170Command_attribute_name;
extern int fBC170Command_attribute_name;
T0* r170Command_attribute_name(void);
T0* r170Unless_attribute_name(void);
T0* r170If_attribute_name(void);
T6 r170se_assigned_from(T0* a1);
void r170print_on(T170* C,T0* a1);
T0* r170clone(T0* a1);
extern T0*oBC170Define_element_name;
extern int fBC170Define_element_name;
T0* r170Define_element_name(void);
extern T0*oBC170Compile_attribute_name;
extern int fBC170Compile_attribute_name;
T0* r170Compile_attribute_name(void);
extern T0*oBC170Options_attribute_name;
extern int fBC170Options_attribute_name;
T0* r170Options_attribute_name(void);
void r170out_in_tagged_out_memory(T170* C);
T6 r170uc_boolean_value(T170* C,T0* a1,T0* a2);
void r170make(T170* C,T0* a1);
T0* r170True_attribute_value(void);
T0* r170uc_attribute_value(T170* C,T0* a1,T0* a2);
extern T0*oBC170Value_attribute_name;
extern int fBC170Value_attribute_name;
T0* r170Value_attribute_name(void);
void r170_59Pmake(T170* C,T0* a1);
T6 r170conforms_to(T170* C,T0* a1);
void r170print(T0* a1);
void r170_58Pmake_from_element(T170* C,T0* a1,T0* a2);
void r170execute(T170* C);
T6 r170has_uc_attribute(T0* a1,T0* a2);
T0* r170Name_attribute_name(void);
T0* r170uc_attribute_value_or_default(T170* C,T0* a1,T0* a2,T0* a3);
T6 r170is_enabled(T170* C);
extern T0*oBC170Command_options_attribute_name;
extern int fBC170Command_options_attribute_name;
T0* r170Command_options_attribute_name(void);
void r170exit_application(T2 a1,T0* a2);
T0* r170False_attribute_value(void);
T0* r170attribute_value_or_default(T170* C,T0* a1,T0* a2,T0* a3);
T0* r170twin(T170* C);
T6 r170uc_boolean_value_or_default(T170* C,T0* a1,T0* a2,T6 a3);
void r170execute_shell(T0* a1);
T6 r170is_executable(T170* C);
T0* r168Dir_attribute_name(void);
void r168make_from_element(T168* C,T0* a1,T0* a2);
void r168trace(T168* C,T0* a1);
T0* r168Unless_attribute_name(void);
T0* r168If_attribute_name(void);
T6 r168se_assigned_from(T0* a1);
void r168print_on(T168* C,T0* a1);
void r168out_in_tagged_out_memory(T168* C);
T0* r168uc_attribute_value(T168* C,T0* a1,T0* a2);
T6 r168conforms_to(T168* C,T0* a1);
void r168print(T0* a1);
void r168_58Pmake_from_element(T168* C,T0* a1,T0* a2);
void r168execute(T168* C);
T6 r168has_uc_attribute(T0* a1,T0* a2);
T0* r168Name_attribute_name(void);
T6 r168is_enabled(T168* C);
T0* r168twin(T168* C);
T6 r168is_executable(T168* C);
T6 r265is_closed(T265* C);
void r265old_close(T265* C);
void r265old_delete(T0* a1);
T2 r265time_stamp(T265* C);
T6 r265file_exists(T0* a1);
T395 r265epoch_time(void);
T395 r265last_change_of(T0* a1);
void r265rename_to(T0* a1,T0* a2);
void r265open_read(T265* C);
T6 r265se_assigned_from(T0* a1);
void r265print_on(T265* C,T0* a1);
void r265old_read_character(T265* C);
T6 r265old_end_of_file(T265* C);
void r265out_in_tagged_out_memory(T265* C);
void r265close(T265* C);
void r265make(T265* C,T0* a1);
T6 r265conforms_to(T265* C,T0* a1);
void r265copy_file(T265* C,T0* a1);
void r265connect_to(T265* C,T0* a1);
void r265delete(T265* C);
T0* r265twin(T265* C);
void r265change_name(T265* C,T0* a1);
T6 r265is_readable(T265* C);
extern T0*oBC266tmp_directory;
extern int fBC266tmp_directory;
T0* r265tmp_directory(void);
T6 r278is_closed(T278* C);
T6 r278old_end_of_input(T278* C);
void r278open_read(T278* C);
T0* r278file_system(void);
T6 r278se_assigned_from(T0* a1);
void r278print_on(T278* C,T0* a1);
T0* r278clone(T0* a1);
void r278create_directory(T278* C);
void r278out_in_tagged_out_memory(T278* C);
T6 r278is_open_read(T278* C);
void r278close(T278* C);
T6 r278exists(T278* C);
void r278recursive_create_directory(T278* C);
void r278read_entry(T278* C);
T6 r278conforms_to(T278* C,T0* a1);
void r278delete(T278* C);
T0* r278twin(T278* C);
void r278recursive_delete(T278* C);
T6 r278is_readable(T278* C);
extern T0*oBC270tfr1;
T6 r270is_readable(T0* a1);
T6 r396se_assigned_from(T0* a1);
void r396print_on(T396* C,T0* a1);
T6 r396conforms_to(T396* C,T0* a1);
T0* r396twin(T396* C);
void r16read_command_line(T16* C);
T6 r16se_assigned_from(T0* a1);
void r16print_on(T16* C,T0* a1);
T0* r16clone(T0* a1);
void r16out_in_tagged_out_memory(T16* C);
void r16report_usage_message(T16* C);
T0* r16Arguments(void);
T0* r16Commandline_variables(void);
void r16make(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16print(T0* a1);
void r16report_version_number(T16* C);
void r16exit_application(T2 a1,T0* a2);
T0* r16twin(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
void r16report_usage_error(T16* C);
extern T0*oBC316error;
extern int fBC316error;
T0* r316error(void);
T6 r316se_assigned_from(T0* a1);
void r316print_on(T316* C,T0* a1);
void r316out_in_tagged_out_memory(T316* C);
extern T0*oBC316input;
extern int fBC316input;
T0* r316input(void);
extern T0*oBC316output;
extern int fBC316output;
T0* r316output(void);
T6 r316conforms_to(T316* C,T0* a1);
T0* r316twin(T316* C);
T6 r130se_assigned_from(T0* a1);
void r130print_on(T130* C,T0* a1);
void r130out_in_tagged_out_memory(T130* C);
T6 r130conforms_to(T130* C,T0* a1);
T0* r130twin(T130* C);
void r46raise(T46* C,T0* a1);
T6 r46se_assigned_from(T0* a1);
void r46print_on(T46* C,T0* a1);
void r46out_in_tagged_out_memory(T46* C);
T6 r46conforms_to(T46* C,T0* a1);
T0* r46twin(T46* C);
extern T0*oBC47developer_exception_name_memory;
void r47raise(T47* C,T0* a1);
T6 r47se_assigned_from(T0* a1);
void r47print_on(T47* C,T0* a1);
void r47out_in_tagged_out_memory(T47* C);
T6 r47conforms_to(T47* C,T0* a1);
T0* r47twin(T47* C);
T6 r44se_assigned_from(T0* a1);
void r44print_on(T44* C,T0* a1);
T6 r44conforms_to(T44* C,T0* a1);
T0* r44twin(T44* C);
T6 r399se_assigned_from(T0* a1);
void r399print_on(T399* C,T0* a1);
void r399out_in_tagged_out_memory(T399* C);
T6 r399conforms_to(T399* C,T0* a1);
T0* r399twin(T399* C);
T6 r51se_assigned_from(T0* a1);
void r51print_on(T51* C,T0* a1);
void r51out_in_tagged_out_memory(T51* C);
T6 r51conforms_to(T51* C,T0* a1);
T0* r51twin(T51* C);
T6 r398se_assigned_from(T0* a1);
void r398print_on(T398* C,T0* a1);
void r398out_in_tagged_out_memory(T398* C);
T6 r398conforms_to(T398* C,T0* a1);
T0* r398twin(T398* C);
T6 r131se_assigned_from(T0* a1);
void r131print_on(T131* C,T0* a1);
void r131out_in_tagged_out_memory(T131* C);
T0* r131to_hexadecimal(T2 a1,T6 a2);
T6 r131conforms_to(T131* C,T0* a1);
T3 r131to_character(T2 a1);
T0* r131twin(T131* C);
void r131append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC78factory;
extern int fBC78factory;
T0* r78factory(void);
T6 r78se_assigned_from(T0* a1);
void r78print_on(T78* C,T0* a1);
void r78out_in_tagged_out_memory(T78* C);
T6 r78conforms_to(T78* C,T0* a1);
T0* r78twin(T78* C);
T6 r400se_assigned_from(T0* a1);
void r400print_on(T400* C,T0* a1);
void r400out_in_tagged_out_memory(T400* C);
T6 r400conforms_to(T400* C,T0* a1);
T0* r400twin(T400* C);
T6 r43se_assigned_from(T0* a1);
void r43print_on(T43* C,T0* a1);
T6 r43conforms_to(T43* C,T0* a1);
T0* r43twin(T43* C);
T2 r395elapsed_seconds(T395* C,T395 a1);
T6 r395set(T395* C,T2 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T6 r292se_assigned_from(T0* a1);
void r292print_on(T292* C,T0* a1);
void r292out_in_tagged_out_memory(T292* C);
T6 r292conforms_to(T292* C,T0* a1);
T0* r292twin(T292* C);
T0* r351name(T0* a1);
T0* r351make_file_open_read(T0* a1);
T6 r351se_assigned_from(T0* a1);
void r351print_on(T351* C,T0* a1);
void r351out_in_tagged_out_memory(T351* C);
void r351close(T0* a1);
T6 r351conforms_to(T351* C,T0* a1);
T6 r351end_of_input(T0* a1);
T2 r351read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r351twin(T351* C);
void r151connect_to_current_working_directory(T151* C);
void r151disconnect(T151* C);
T6 r151remove_directory(T0* a1);
extern T0*oBC151last_entry;
void r151change_current_working_directory(T151* C,T0* a1);
void r151read_entry(T151* C);
void r151connect_to(T151* C,T0* a1);
T6 r151create_new_directory(T0* a1);
T6 r132se_assigned_from(T0* a1);
void r132print_on(T132* C,T0* a1);
void r132out_in_tagged_out_memory(T132* C);
T6 r132is_integer(T0* a1);
T0* r132make(T2 a1);
T6 r132conforms_to(T132* C,T0* a1);
T0* r132twin(T132* C);
T0* r66out(T66* C);
extern T0*oBC69Platform;
T3 r66as_character(T66* C);
T6 r66_px_60(T66* C,T66 a1);
T6 r66_px_62(T66* C,T66 a1);
T0* r66as_hexadecimal(T66* C);
T3 r66code_to_character(T2 a1);
extern T0*oBC68INTEGER_;
T0* r88variable_value(T0* a1);
T6 r88se_assigned_from(T0* a1);
void r88print_on(T88* C,T0* a1);
void r88out_in_tagged_out_memory(T88* C);
T0* r88get_environment_variable(T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
T0* r88twin(T88* C);
T2 r348nr_of_following_octets(T3 a1);
T6 r348se_assigned_from(T0* a1);
void r348print_on(T348* C,T0* a1);
void r348read_code(T348* C,T0* a1,T2 a2);
void r348out_in_tagged_out_memory(T348* C);
void r348put_code(T2 a1,T0* a2,T2 a3);
void r348read_following_octet(T348* C,T0* a1);
T6 r348conforms_to(T348* C,T0* a1);
T3 r348code_to_character(T2 a1);
T2 r348octet_size(T2 a1);
T0* r348twin(T348* C);
extern T0*oBC348specific;
T6 r348is_leading_octet(T3 a1);
T2 r348read_leading_octet(T348* C,T0* a1,T2 a2);
T6 r290se_assigned_from(T0* a1);
void r290print_on(T290* C,T0* a1);
void r290out_in_tagged_out_memory(T290* C);
T6 r290conforms_to(T290* C,T0* a1);
T0* r290twin(T290* C);
T6 r50se_assigned_from(T0* a1);
void r50print_on(T50* C,T0* a1);
T6 r50conforms_to(T50* C,T0* a1);
T0* r50twin(T50* C);
T0* r315substring(T0* a1,T2 a2,T2 a3);
T6 r315se_assigned_from(T0* a1);
void r315print_on(T315* C,T0* a1);
void r315out_in_tagged_out_memory(T315* C);
void r315move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r315make(T2 a1);
T6 r315conforms_to(T315* C,T0* a1);
T0* r315resize(T0* a1,T2 a2);
T2 r315copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r315twin(T315* C);
T6 r401se_assigned_from(T0* a1);
void r401print_on(T401* C,T0* a1);
void r401out_in_tagged_out_memory(T401* C);
T6 r401conforms_to(T401* C,T0* a1);
T0* r401twin(T401* C);
T0* r150current_working_directory(T150* C);
T6 r150se_assigned_from(T0* a1);
void r150print_on(T150* C,T0* a1);
T0* r150clone(T0* a1);
T6 r150is_windows(T150* C);
void r150out_in_tagged_out_memory(T150* C);
T6 r150conforms_to(T150* C,T0* a1);
T6 r150is_unix(T150* C);
T0* r150twin(T150* C);
T0* r291new_event_parser_imp(void);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 402
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms159_10aaaaa;
extern T7*ms16_23340076;
extern T7*ms239_282198636;
extern T7*ms28_1962337529;
extern T7*ms154_109478249;
extern T7*ms208_84225847;
extern T7*ms159_60094111a;
extern T7*ms157_10aaaaa;
extern T7*ms211_1606898500;
extern T7*ms171_420622897;
extern T7*ms7_241908472;
extern T7*ms296_1173251759;
extern T7*ms58_451090;
extern T7*ms159_10aaa;
extern T7*ms205_2108041;
extern T7*ms159_1033196635a;
extern T7*ms161_674647;
extern T7*ms218_141612;
extern T7*ms202_2013612;
extern T7*ms214_16849647;
extern T7*ms157_208339478;
extern T7*ms42_10;
extern T7*ms157_420927632;
extern T7*ms158_78495;
extern T7*ms159_10aaaa;
extern T7*ms156_1890742889;
extern T7*ms239_18036;
extern T7*ms218_140577;
extern T7*ms42_1367980604;
extern T7*ms159_10aaaaaaa;
extern T7*ms206_16815647;
extern T7*ms397_276;
extern T7*ms192_448440;
extern T7*ms212_16818147a;
extern T7*ms86_3226a;
extern T7*ms161_1169151010a;
extern T7*ms158_0aa;
extern T7*ms325_1515383187;
extern T7*ms214_16849647a;
extern T7*ms155_392507;
extern T7*ms74_14150;
extern T7*ms16_323;
extern T7*ms202_420615272;
extern T7*ms190_2142980;
extern T7*ms16_329;
extern T7*ms16_288;
extern T7*ms16_343;
extern T7*ms19_247356966;
extern T7*ms19_3301;
extern T7*ms28_1510;
extern T7*ms214_10a;
extern T7*ms159_10a;
extern T7*ms19_3294;
extern T7*ms169_84369147;
extern T7*ms161_9366019;
extern T7*ms159_32a;
extern T7*ms19_3496;
extern T7*ms58_1341038798;
extern T7*ms86_1307186427a;
extern T7*ms192_1801319434;
extern T7*ms157_10aaaaaa;
extern T7*ms170_884663453;
extern T7*ms28_10aa;
extern T7*ms42_1145887148;
extern T7*ms161_2110593349;
extern T7*ms192_438001;
extern T7*ms195_16824172;
extern T7*ms217_82876;
extern T7*ms217_438001;
extern T7*ms42_3139;
extern T7*ms157_143262;
extern T7*ms6_79251;
extern T7*ms157_1139505;
extern T7*ms218_27872;
extern T7*ms161_210841101;
extern T7*ms159_10aaaaaa;
extern T7*ms42_205;
extern T7*ms217_53496769;
extern T7*ms215_89261;
extern T7*ms170_89261;
extern T7*ms19_403021;
extern T7*ms42_10a;
extern T7*ms28_1299730420;
extern T7*ms19_403144;
extern T7*ms19_402716;
extern T7*ms19_80091;
extern T7*ms170_1979141;
extern T7*ms170_1978575;
extern T7*ms19_80325;
extern T7*ms42_627;
extern T7*ms154_3021;
extern T7*ms295_38;
extern T7*ms42_392800;
extern T7*ms295_60;
extern T7*ms295_62;
extern T7*ms163_16828097;
extern T7*ms156_3021;
extern T7*ms160_54423316;
extern T7*ms210_420355647a;
extern T7*ms161_10aa;
extern T7*ms148_80516;
extern T7*ms86_1410228aa;
extern T7*ms154_388005040;
extern T7*ms202_10;
extern T7*ms156_452889;
extern T7*ms152_46;
extern T7*ms158_3021;
extern T7*ms152_92;
extern T7*ms211_16016;
extern T7*ms7_280756769;
extern T7*ms157_1933260220;
extern T7*ms351_1338085634;
extern T7*ms153_46;
extern T7*ms153_47;
extern T7*ms191_401657;
extern T7*ms217_89261;
extern T7*ms165_3294;
extern T7*ms42_451090;
extern T7*ms157_1560205919;
extern T7*ms204_10;
extern T7*ms19_79251;
extern T7*ms154_0a;
extern T7*ms216_421552197;
extern T7*ms157_271606681;
extern T7*ms295_38a;
extern T7*ms167_3372272;
extern T7*ms191_84117997;
extern T7*ms295_60a;
extern T7*ms295_62a;
extern T7*ms210_10;
extern T7*ms155_10;
extern T7*ms155_32;
extern T7*ms19_84639;
extern T7*ms160_0a;
extern T7*ms161_3373326;
extern T7*ms165_3367222;
extern T7*ms19_90371;
extern T7*ms171_10a;
extern T7*ms159_2102912007a;
extern T7*ms206_10;
extern T7*ms161_10;
extern T7*ms193_2015752;
extern T7*ms157_90108711;
extern T7*ms171_32a;
extern T7*ms161_46;
extern T7*ms159_179802;
extern T7*ms58_627;
extern T7*ms165_5586;
extern T7*ms213_16016;
extern T7*ms157_1933260220a;
extern T7*ms156_0a;
extern T7*ms19_0;
extern T7*ms158_16054;
extern T7*ms159_1081376;
extern T7*ms86_2077395;
extern T7*ms152_8976;
extern T7*ms212_10;
extern T7*ms157_10;
extern T7*ms157_32;
extern T7*ms190_3135;
extern T7*ms86_205a;
extern T7*ms218_55455187;
extern T7*ms16_1771134706;
extern T7*ms159_16823272a;
extern T7*ms208_10;
extern T7*ms163_10;
extern T7*ms191_0aa;
extern T7*ms86_3226;
extern T7*ms158_0a;
extern T7*ms161_1428018568;
extern T7*ms86_1307186427;
extern T7*ms160_78495;
extern T7*ms214_10;
extern T7*ms159_10;
extern T7*ms157_272198;
extern T7*ms159_90108711;
extern T7*ms159_32;
extern T7*ms159_1033196635;
extern T7*ms202_202;
extern T7*ms161_1391903168;
extern T7*ms19_676;
extern T7*ms202_576822614;
extern T7*ms212_7487a;
extern T7*ms19_691;
extern T7*ms165_10;
extern T7*ms152_276;
extern T7*ms165_32;
extern T7*ms74_4763922;
extern T7*ms7_1983847;
extern T7*ms157_10aaaa;
extern T7*ms218_3506042;
extern T7*ms330_447584;
extern T7*ms348_1684857857;
extern T7*ms171_2015137;
extern T7*ms216_10;
extern T7*ms171_10;
extern T7*ms171_32;
extern T7*ms171_34;
extern T7*ms216_61;
extern T7*ms171_61;
extern T7*ms299_195717202;
extern T7*ms86_2272235;
extern T7*ms16_184927;
extern T7*ms218_16885647;
extern T7*ms157_661692583;
extern T7*ms167_10;
extern T7*ms167_61;
extern T7*ms240_2043304089;
extern T7*ms218_10;
extern T7*ms155_674272a;
extern T7*ms218_32;
extern T7*ms218_0a;
extern T7*ms207_49442341;
extern T7*ms190_82876;
extern T7*ms190_267582581;
extern T7*ms28_1404162515a;
extern T7*ms214_7487a;
extern T7*ms169_10;
extern T7*ms161_1546380197;
extern T7*ms171_2499240;
extern T7*ms213_1606898500;
extern T7*ms86_259694110;
extern T7*ms28_1404162515;
extern T7*ms28_1569122284;
extern T7*ms203_440571;
extern T7*ms155_658766397;
extern T7*ms153_276;
extern T7*ms192_2246326;
extern T7*ms157_1086847256a;
extern T7*ms86_259694110a;
extern T7*ms195_16072;
extern T7*ms204_1569122284;
extern T7*ms209_49442341;
extern T7*ms6_18036;
extern T7*ms159_179802a;
extern T7*ms193_32a;
extern T7*ms190_438001;
extern T7*ms19_440193;
extern T7*ms203_199275083;
extern T7*ms157_179802a;
extern T7*ms16_1316598903;
extern T7*ms192_82876;
extern T7*ms19_440571;
extern T7*ms20_691485293;
extern T7*ms170_391651;
extern T7*ms23_1479;
extern T7*ms159_60094111;
extern T7*ms16_80091;
extern T7*ms19_392331;
extern T7*ms212_16818147;
extern T7*ms28_834968801;
extern T7*ms195_3427745;
extern T7*ms157_47904999;
extern T7*ms86_2077395a;
extern T7*ms86_1410228;
extern T7*ms19_16036;
extern T7*ms28_803892311;
extern T7*ms19_16072;
extern T7*ms190_388005040;
extern T7*ms190_1801319434;
extern T7*ms19_54738731;
extern T7*ms153_0;
extern T7*ms19_15731;
extern T7*ms19_16229;
extern T7*ms154_0;
extern T7*ms19_15831;
extern T7*ms160_0;
extern T7*ms156_0;
extern T7*ms191_10;
extern T7*ms203_16016;
extern T7*ms86_125;
extern T7*ms191_32;
extern T7*ms161_945839905;
extern T7*ms86_205;
extern T7*ms19_17091;
extern T7*ms191_0a;
extern T7*ms86_303;
extern T7*ms158_0;
extern T7*ms194_82876;
extern T7*ms19_16821;
extern T7*ms170_0;
extern T7*ms190_382622;
extern T7*ms28_2065491;
extern T7*ms171_0;
extern T7*ms348_336971577;
extern T7*ms159_8902a;
extern T7*ms239_446821;
extern T7*ms19_18036;
extern T7*ms239_79251;
extern T7*ms218_0;
extern T7*ms162_254031466;
extern T7*ms159_16823272;
extern T7*ms157_661958208;
extern T7*ms194_83995;
extern T7*ms193_10;
extern T7*ms19_18531;
extern T7*ms193_32;
extern T7*ms193_0a;
extern T7*ms269_80516;
extern T7*ms191_0;
extern T7*ms240_1147220595;
extern T7*ms19_1957581;
extern T7*ms157_1086847256;
extern T7*ms193_0;
extern T7*ms159_91038212;
extern T7*ms239_1238683011;
extern T7*ms195_0;
extern T7*ms326_447851;
extern T7*ms210_10a;
extern T7*ms155_10a;
extern T7*ms195_10;
extern T7*ms159_15065a;
extern T7*ms195_32;
extern T7*ms154_254031466;
extern T7*ms155_674272;
extern T7*ms213_2234766;
extern T7*ms155_1775;
extern T7*ms195_0a;
extern T7*ms155_32a;
extern T7*ms28_924849867;
extern T7*ms159_453255442;
extern T7*ms211_2234766;
extern T7*ms160_3200;
extern T7*ms157_179802;
extern T7*ms157_1819;
extern T7*ms166_89261;
extern T7*ms171_1070;
extern T7*ms155_1979141;
extern T7*ms67_577;
extern T7*ms155_16686;
extern T7*ms154_276875365;
extern T7*ms157_10aa;
extern T7*ms194_438001;
extern T7*ms305_1338477769;
extern T7*ms195_32a;
extern T7*ms161_29512420;
extern T7*ms194_391651;
extern T7*ms201_1979141;
extern T7*ms159_10aa;
extern T7*ms1_14150;
extern T7*ms58_3139;
extern T7*ms397_46;
extern T7*ms58_915611165;
extern T7*ms159_143262;
extern T7*ms155_9895737;
extern T7*ms171_115260364;
extern T7*ms164_1544179189;
extern T7*ms239_440571;
extern T7*ms86_1410228aaa;
extern T7*ms317_89510;
extern T7*ms28_180;
extern T7*ms28_10a;
extern T7*ms155_5712;
extern T7*ms201_395678;
extern T7*ms161_1169151010;
extern T7*ms217_281466146;
extern T7*ms159_1028251;
extern T7*ms190_10531885;
extern T7*ms19_1228681540;
extern T7*ms161_10a;
extern T7*ms351_0;
extern T7*ms161_276;
extern T7*ms161_2230607;
extern T7*ms156_10030586;
extern T7*ms157_3367397;
extern T7*ms161_497;
extern T7*ms58_1756715249;
extern T7*ms239_11171466;
extern T7*ms190_16323;
extern T7*ms157_272198a;
extern T7*ms193_420625972;
extern T7*ms191_1642;
extern T7*ms191_1647;
extern T7*ms191_1652;
extern T7*ms191_1702;
extern T7*ms191_1662;
extern T7*ms191_1712;
extern T7*ms170_2173440;
extern T7*ms191_1667;
extern T7*ms191_1682;
extern T7*ms191_1732;
extern T7*ms154_78495;
extern T7*ms191_1752;
extern T7*ms212_7487;
extern T7*ms158_452889;
extern T7*ms191_1757;
extern T7*ms156_0aa;
extern T7*ms195_1093;
extern T7*ms159_15065;
extern T7*ms193_1712;
extern T7*ms193_1737;
extern T7*ms159_2102912007;
extern T7*ms193_1747;
extern T7*ms214_7487;
extern T7*ms193_1757;
extern T7*ms190_17711;
extern T7*ms74_5426;
extern T7*ms171_1070a;
extern T7*ms209_16016;
extern T7*ms159_16054;
extern T7*ms155_1749788964;
extern T7*ms158_10030586;
extern T7*ms157_8949;
extern T7*ms86_18036a;
extern T7*ms159_8711;
extern T7*ms161_674647a;
extern T7*ms159_1955941869;
extern T7*ms159_8902;
extern T7*ms161_210841101a;
extern T7*ms319_1158552108;
extern T7*ms154_2020550321;
extern T7*ms305_1338477769a;
extern T7*ms157_3367397a;
extern T7*ms212_10a;
extern T7*ms157_10a;
extern T7*ms157_10aaa;
extern T7*ms28_10;
extern T7*ms157_32a;
extern T7*ms193_32aa;
extern T7*ms156_78495;
extern T7*ms240_54738731;
extern T7*ms28_39;
extern T7*ms210_420355647;
extern T7*ms28_46;
extern T7*ms74_251;
extern T7*ms161_2230607a;
extern T7*ms16_23342040;
extern T7*ms171_420622897a;
extern T7*ms157_208286353;
extern T7*ms86_18020;
extern T7*ms86_18036;
extern T7*ms74_2124547;
extern T7*ms42_768830101;
extern T7*ms16_14036;
extern T7*ms164_254031466;
extern T7*ms86_1410228a;
extern T7*ms170_203658589;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void*se_ma84(int argc,...);
void X49put_character(T0*C,T3 a1);
void X49put_string(T0*C,T0* a1);
void X58execute(T0*C);
T6 X58is_enabled(T0*C);
T0* X58element(T0*C);
T6 X58is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X48put_string(T0*C,T0* a1);
void X267disconnect(T0*C);
T6 X267is_connected(T0*C);
void X267connect_to(T0*C,T0* a1);
T0* X267path(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
void X1print_on(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X309clear_all(T0*C,T0* a1);
T0* X309make(T0*C,T2 a1);
T0* X309resize(T0*C,T0* a1,T2 a2);
void X167set_name(T0*C,T0* a1);
void X167execute(T0*C);
void X167set_value(T0*C,T0* a1);
void X47raise(T0*C,T0* a1);
T2 X307count(T0*C);
T2 X307item(T0*C,T2 a1);
T2 X307lower(T0*C);
void X308put(T0*C,T0* a1,T2 a2);
T0* X308item(T0*C,T2 a1);
void X308set_all_with(T0*C,T0* a1);
void X308resize(T0*C,T2 a1);
T2 X65item_code(T0*C,T2 a1);
void X65insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X65remove(T0*C,T2 a1,T2 a2);
void X65insert_code(T0*C,T2 a1,T2 a2);
void X268read_character(T0*C);
T6 X268end_of_input(T0*C);
T3 X268last_character(T0*C);
T0* X149string_to_pathname(T0*C,T0* a1);
T2 X271time_stamp(T0*C);
T0* X320default_message(T0*C);
T6 X150is_windows(T0*C);
T6 X150is_unix(T0*C);
T0* X148pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X148relative_current_directory(T0*C);
T0* X148dirname(T0*C,T0* a1);
T0* X148exe_extension(T0*C);
T0* X148relative_parent_directory(T0*C);
T0* X148pathname(T0*C,T0* a1,T0* a2);
T0* X148canonical_pathname(T0*C,T0* a1);
T0* T293toT292(int source);
T0* T291toT290(int source);
T0* T2toT44(T2 source);
T2 T44toT2(T0* source);

#ifdef __cplusplus
}
#endif
