#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 (Tuesday May 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S759 T759;
typedef struct S552 T552;
typedef struct S319 T319;
typedef struct S268 T268;
typedef struct S666 T666;
typedef struct S487 T487;
typedef int T683;
typedef struct S225 T225;
typedef struct S768 T768;
typedef struct S721 T721;
typedef struct S350 T350;
typedef struct S234 T234;
typedef struct S532 T532;
typedef struct S223 T223;
typedef struct S187 T187;
typedef struct S558 T558;
typedef struct S702 T702;
typedef struct S182 T182;
typedef struct S678 T678;
typedef struct S791 T791;
typedef struct S237 T237;
typedef struct S456 T456;
typedef struct S480 T480;
typedef struct S76 T76;
typedef struct S166 T166;
typedef struct S80 T80;
typedef struct S305 T305;
typedef struct S367 T367;
typedef struct S11 T11;
typedef struct S233 T233;
typedef struct S396 T396;
typedef struct S494 T494;
typedef struct S452 T452;
typedef struct S713 T713;
typedef struct S43 T43;
typedef struct S395 T395;
typedef struct S322 T322;
typedef struct S511 T511;
typedef struct S612 T612;
typedef struct S210 T210;
typedef struct S493 T493;
typedef struct S380 T380;
typedef struct S739 T739;
typedef struct S41 T41;
typedef struct S559 T559;
typedef struct S306 T306;
typedef struct S393 T393;
typedef struct S351 T351;
typedef struct S309 T309;
typedef struct S413 T413;
typedef struct S130 T130;
typedef struct S481 T481;
typedef struct S745 T745;
typedef struct S304 T304;
typedef struct S127 T127;
typedef struct S711 T711;
typedef struct S193 T193;
typedef struct S572 T572;
typedef struct S39 T39;
typedef struct S178 T178;
typedef struct S638 T638;
typedef struct S364 T364;
typedef struct S158 T158;
typedef struct S377 T377;
typedef struct S382 T382;
typedef struct S521 T521;
typedef struct S438 T438;
typedef struct S259 T259;
typedef struct S212 T212;
typedef struct S593 T593;
typedef struct S534 T534;
typedef struct S762 T762;
typedef struct S287 T287;
typedef struct S596 T596;
typedef struct S626 T626;
typedef struct S657 T657;
typedef struct S519 T519;
typedef struct S627 T627;
typedef struct S736 T736;
typedef struct S658 T658;
typedef struct S523 T523;
typedef struct S491 T491;
typedef struct S510 T510;
typedef struct S224 T224;
typedef struct S582 T582;
typedef struct S54 T54;
typedef struct S784 T784;
typedef struct S422 T422;
typedef struct S217 T217;
typedef struct S90 T90;
typedef struct S460 T460;
typedef struct S538 T538;
typedef struct S81 T81;
typedef struct S170 T170;
typedef struct S788 T788;
typedef struct S177 T177;
typedef struct S89 T89;
typedef struct S307 T307;
typedef struct S592 T592;
typedef struct S522 T522;
typedef struct S790 T790;
typedef struct S303 T303;
typedef struct S601 T601;
typedef struct S714 T714;
typedef struct S746 T746;
typedef struct S526 T526;
typedef struct S142 T142;
typedef struct S732 T732;
typedef struct S272 T272;
typedef struct S195 T195;
typedef struct S373 T373;
typedef struct S383 T383;
typedef struct S518 T518;
typedef struct S668 T668;
typedef struct S512 T512;
typedef struct S514 T514;
typedef struct S446 T446;
typedef struct S240 T240;
typedef struct S454 T454;
typedef struct S660 T660;
typedef struct S174 T174;
typedef struct S38 T38;
typedef struct S671 T671;
typedef struct S561 T561;
typedef struct S227 T227;
typedef struct S663 T663;
typedef struct S723 T723;
typedef struct S381 T381;
typedef struct S527 T527;
typedef struct S555 T555;
typedef int T95;
typedef struct S110 T110;
typedef struct S214 T214;
typedef struct S680 T680;
typedef struct S7 T7;
typedef struct S727 T727;
typedef struct S665 T665;
typedef struct S516 T516;
typedef struct S313 T313;
typedef struct S211 T211;
typedef struct S482 T482;
typedef struct S528 T528;
typedef struct S689 T689;
typedef struct S664 T664;
typedef struct S772 T772;
typedef struct S789 T789;
typedef struct S55 T55;
typedef struct S771 T771;
typedef struct S505 T505;
typedef struct S297 T297;
typedef struct S508 T508;
typedef struct S267 T267;
typedef struct S333 T333;
typedef struct S706 T706;
typedef struct S530 T530;
typedef struct S641 T641;
typedef struct S67 T67;
typedef struct S694 T694;
typedef struct S161 T161;
typedef struct S171 T171;
typedef struct S168 T168;
typedef struct S361 T361;
typedef struct S435 T435;
typedef struct S624 T624;
typedef struct S145 T145;
typedef struct S696 T696;
typedef struct S238 T238;
typedef struct S376 T376;
typedef struct S677 T677;
typedef struct S423 T423;
typedef struct S608 T608;
typedef struct S86 T86;
typedef struct S468 T468;
typedef struct S536 T536;
typedef struct S524 T524;
typedef struct S517 T517;
typedef struct S258 T258;
typedef struct S141 T141;
typedef struct S379 T379;
typedef struct S744 T744;
typedef struct S138 T138;
typedef struct S529 T529;
typedef struct S644 T644;
typedef struct S488 T488;
typedef struct S575 T575;
typedef struct S246 T246;
typedef struct S207 T207;
typedef struct S486 T486;
typedef struct S37 T37;
typedef struct S302 T302;
typedef struct S107 T107;
typedef struct S226 T226;
typedef struct S525 T525;
typedef struct S144 T144;
typedef struct S578 T578;
typedef struct S513 T513;
typedef struct S102 T102;
typedef struct S94 T94;
typedef struct S556 T556;
typedef struct S489 T489;
typedef struct S219 T219;
typedef struct S766 T766;
typedef struct S360 T360;
typedef struct S91 T91;
typedef struct S167 T167;
typedef struct S705 T705;
typedef struct S378 T378;
typedef struct S44 T44;
typedef struct S173 T173;
typedef struct S617 T617;
typedef struct S143 T143;
typedef struct S131 T131;
typedef struct S720 T720;
typedef struct S88 T88;
typedef struct S673 T673;
typedef struct S349 T349;
typedef struct S135 T135;
typedef struct S353 T353;
typedef struct S584 T584;
typedef struct S93 T93;
typedef struct S316 T316;
typedef struct S172 T172;
typedef struct S698 T698;
typedef struct S348 T348;
typedef struct S520 T520;
typedef struct S51 T51;
typedef struct S557 T557;
typedef struct S418 T418;
typedef struct S560 T560;
typedef struct S707 T707;
typedef struct S509 T509;
typedef struct S649 T649;
typedef struct S535 T535;
typedef struct S106 T106;
typedef struct S273 T273;
typedef struct S47 T47;
typedef struct S179 T179;
typedef struct S726 T726;
typedef struct S36 T36;
typedef struct S368 T368;
typedef struct S176 T176;
typedef struct S196 T196;
typedef struct S169 T169;
typedef struct S676 T676;
typedef struct S175 T175;
typedef struct S356 T356;
typedef struct S35 T35;
typedef struct S32 T32;
typedef struct S358 T358;
typedef struct S79 T79;
typedef struct S701 T701;
typedef struct S715 T715;
typedef struct S409 T409;
typedef struct S417 T417;
typedef struct S492 T492;
typedef struct S541 T541;
typedef struct S345 T345;
typedef struct S490 T490;
typedef struct S531 T531;

/*C Header Pass 2 :*/
typedef T0**T236;
typedef T0**T485;
typedef T0**T375;
typedef T0**T315;
typedef T6*T229;
typedef T0**T311;
typedef T0**T670;
typedef T0**T662;
typedef T0**T643;
typedef T0**T112;
typedef T0**T163;
typedef T0**T242;
typedef T0**T577;
typedef T0**T87;
typedef T0**T675;
typedef T0**T216;
typedef T3*T9;
typedef T0**T137;
typedef T2*T109;
typedef T0**T540;
typedef T0**T221;
typedef T0**T355;

/*C Header Pass 3 :*/
struct S141{T8 _directory_stream;T8 _current_entry;};
int se_cmpT141(T141 o1,T141 o2);
struct S720{T5 _time_memory;};
int se_cmpT720(T720 o1,T720 o2);

/*C Header Pass 4 :*/
struct S759{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T759 M759;
struct S552{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T552 M552;
struct S319{Tid id;};
extern T319 M319;
struct S268{Tid id;T0* _comparator;};
extern T268 M268;
struct S666{Tid id;T0* _xml_element;T0* _project;T0* _rename_clause;};
extern T666 M666;
struct S487{Tid id;T2 _exit_code;T0* _project;T0* _executable;T0* _source_filename;};
extern T487 M487;
extern T683 M683;
struct S225{Tid id;T2 _count;T0* _storage;T0* _symbols;};
extern T225 M225;
struct S768{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;};
extern T768 M768;
struct S721{Tid id;T5 _item;};
extern T721 M721;
struct S350{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T350 M350;
struct S532{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T532 M532;
struct S223{Tid id;T2 _count;T0* _storage;};
extern T223 M223;
struct S187{Tid id;T6 _yyline_used;T0* _states;T0* _yy_accept;T0* _yy_ec;T6 _yyposition_used;T0* _eiffel_header;T6 _bol_needed;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T0* _yy_nxt;T6 _yybacking_up;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _backing_up_count;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T2 _yynb_rules;T2 _yynull_equiv_class;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T2 _yynb_rows;T2 _minimum_symbol;T2 _yyend_of_buffer;T6 _inspect_used;};
extern T187 M187;
struct S558{Tid id;T2 _exit_code;T0* _project;T2 _code;};
extern T558 M558;
struct S702{Tid id;T0* _event_parser_factory;};
extern T702 M702;
struct S182{Tid id;T0* _yy_nxt;T0* _yy_accept;T2 _yynb_rows;};
extern T182 M182;
struct S678{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T678 M678;
struct S234{Tid id;T2 _item;T0* _right;T0* _left;};
extern T234 M234;
struct S791{Tid id;};
extern T791 M791;
struct S237{Tid id;T0* _transition;T0* _epsilon_transition;T0* _accepted_rule;T2 _id;T6 _in_trail_context;};
extern T237 M237;
struct S480{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T480 M480;
struct S76{Tid id;T0* _attributes;T0* _children;T0* _name;T0* _content;};
extern T76 M76;
struct S166{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T166 M166;
struct S80{Tid id;T0* _name;T0* _value;};
extern T80 M80;
struct S305{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T305 M305;
struct S11{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;T6 _debug_mode;T6 _no_exec;};
extern T11 M11;
struct S233{Tid id;T236 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T233 M233;
struct S396{Tid id;};
extern T396 M396;
struct S494{Tid id;T2 _exit_code;T0* _project;T6 _verbose;T0* _system_command;T0* _cluster_command;T6 _validate_command;T0* _xace_filename;T0* _output_filename;T0* _defines;};
extern T494 M494;
struct S452{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T452 M452;
struct S713{Tid id;T0* _parameters;};
extern T713 M713;
struct S43{Tid id;};
extern T43 M43;
struct S395{Tid id;T0* _target;T0* _label;};
extern T395 M395;
struct S322{Tid id;};
extern T322 M322;
struct S511{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T511 M511;
struct S612{Tid id;T0* _name;};
extern T612 M612;
struct S210{Tid id;T109 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T210 M210;
struct S493{Tid id;T0* _xml_element;T0* _project;};
extern T493 M493;
struct S380{Tid id;T0* _parameters;};
extern T380 M380;
struct S739{Tid id;};
extern T739 M739;
struct S41{Tid id;};
extern T41 M41;
struct S559{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T559 M559;
struct S393{Tid id;T0* _parameters;};
extern T393 M393;
struct S351{Tid id;};
extern T351 M351;
struct S309{Tid id;T311 _storage;T2 _capacity;T2 _upper;};
extern T309 M309;
struct S413{Tid id;T0* _target;T2 _label;};
extern T413 M413;
struct S130{Tid id;};
extern T130 M130;
struct S481{Tid id;T485 _storage;T2 _capacity;T2 _upper;};
extern T481 M481;
struct S745{Tid id;T0* _first;T0* _second;};
extern T745 M745;
struct S127{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T127 M127;
struct S711{Tid id;T6 _push_back_flag;T141 _basic_directory;T2 _memory;T0* _name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T711 M711;
struct S193{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T193 M193;
struct S572{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T572 M572;
struct S39{Tid id;T2 _item;};
extern T39 M39;
struct S178{Tid id;T0* _xml_element;T0* _project;T0* _map;};
extern T178 M178;
struct S638{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T638 M638;
struct S364{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T364 M364;
struct S158{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T158 M158;
struct S377{Tid id;T0* _parameters;};
extern T377 M377;
struct S382{Tid id;T0* _parameters;};
extern T382 M382;
struct S521{Tid id;T2 _exit_code;T0* _project;T0* _message;};
extern T521 M521;
struct S438{Tid id;};
extern T438 M438;
struct S259{Tid id;T0* _comparator;};
extern T259 M259;
struct S212{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T212 M212;
struct S593{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T593 M593;
struct S534{Tid id;T0* _first;T0* _second;};
extern T534 M534;
struct S762{Tid id;T0* _item;T0* _right;};
extern T762 M762;
struct S287{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T287 M287;
struct S626{Tid id;T0* _original_name;T0* _new_name;};
extern T626 M626;
struct S657{Tid id;T0* _xml_element;T0* _project;T0* _geant_inherit;};
extern T657 M657;
struct S519{Tid id;T2 _exit_code;T0* _project;T0* _filename;T6 _reuse_variables;T0* _start_target_name;};
extern T519 M519;
struct S627{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T627 M627;
struct S736{Tid id;};
extern T736 M736;
struct S658{Tid id;T0* _xml_element;T0* _project;T0* _parent;};
extern T658 M658;
struct S523{Tid id;T2 _exit_code;T0* _project;T0* _directory;};
extern T523 M523;
struct S491{Tid id;T2 _exit_code;T0* _project;T0* _name;};
extern T491 M491;
struct S510{Tid id;T2 _exit_code;T0* _project;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T510 M510;
struct S224{Tid id;T221 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T224 M224;
struct S54{Tid id;T8 _item;};
extern T54 M54;
struct S784{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T784 M784;
struct S422{Tid id;T0* _parameters;};
extern T422 M422;
struct S217{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T217 M217;
struct S90{Tid id;};
extern T90 M90;
struct S596{Tid id;T0* _name;};
extern T596 M596;
struct S460{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T460 M460;
struct S367{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;T6 _negated;T6 _sort_needed;};
extern T367 M367;
struct S538{Tid id;T540 _storage;T2 _capacity;T2 _upper;};
extern T538 M538;
struct S81{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T81 M81;
struct S170{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T170 M170;
struct S788{Tid id;};
extern T788 M788;
struct S177{Tid id;T0* _project;T0* _directory_name;T0* _include_wc_string;T0* _exclude_wc_string;T6 _convert_to_filesystem;T0* _map;T6 _force;T6 _concat;T0* _filename_variable_name;T0* _mapped_filename_variable_name;T0* _include_wildcard;T0* _exclude_wildcard;T0* _filenames;};
extern T177 M177;
struct S89{Tid id;};
extern T89 M89;
struct S307{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T307 M307;
struct S592{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T592 M592;
struct S522{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T522 M522;
struct S790{Tid id;};
extern T790 M790;
struct S304{Tid id;T0* _states;T6 _in_trail_context;};
extern T304 M304;
struct S303{Tid id;T0* _text;};
extern T303 M303;
struct S601{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T601 M601;
struct S714{Tid id;T0* _parameters;};
extern T714 M714;
struct S746{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T746 M746;
struct S526{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T526 M526;
struct S142{Tid id;T141 _basic_directory;};
extern T142 M142;
struct S732{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T732 M732;
struct S272{Tid id;};
extern T272 M272;
struct S195{Tid id;T2 _array_size;T6 _case_insensitive;T2 _characters_count;T6 _equiv_classes_used;T6 _meta_equiv_classes_used;T6 _full_table;T6 _actions_separated;T6 _inspect_used;T6 _reject_used;T6 _line_used;T6 _position_used;T6 _pre_action_used;T6 _post_action_used;T6 _pre_eof_action_used;T6 _post_eof_action_used;T0* _start_conditions;T0* _rules;T0* _eof_rules;T0* _equiv_classes;T6 _bol_needed;T6 _variable_trail_context;T0* _eiffel_code;T0* _eiffel_header;};
extern T195 M195;
struct S373{Tid id;T375 _storage;T2 _capacity;T2 _upper;};
extern T373 M373;
struct S383{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T383 M383;
struct S518{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T518 M518;
struct S668{Tid id;T670 _storage;T2 _capacity;T2 _upper;};
extern T668 M668;
struct S512{Tid id;T2 _exit_code;T0* _project;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _tokens_filename;T0* _output_filename;T0* _input_filename;};
extern T512 M512;
struct S514{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;T0* _to_directory;T0* _fileset;T6 _force;};
extern T514 M514;
struct S446{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T446 M446;
struct S240{Tid id;T242 _storage;T2 _capacity;T2 _upper;};
extern T240 M240;
struct S454{Tid id;T0* _name;};
extern T454 M454;
struct S660{Tid id;T662 _storage;T2 _capacity;T2 _upper;};
extern T660 M660;
struct S174{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T174 M174;
struct S38{Tid id;T6 _item;};
extern T38 M38;
struct S671{Tid id;};
extern T671 M671;
struct S561{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T561 M561;
struct S227{Tid id;T229 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T227 M227;
struct S663{Tid id;};
extern T663 M663;
struct S723{Tid id;T2 _item;};
extern T723 M723;
struct S381{Tid id;T0* _parameters;};
extern T381 M381;
struct S527{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;T6 _force;};
extern T527 M527;
struct S555{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T555 M555;
extern T95 M95;
struct S110{Tid id;T112 _storage;T2 _capacity;T2 _upper;};
extern T110 M110;
struct S214{Tid id;T216 _storage;T2 _capacity;T2 _upper;};
extern T214 M214;
struct S306{Tid id;T2 _id;T0* _name;T0* _patterns;T0* _bol_patterns;T6 _is_exclusive;};
extern T306 M306;
struct S680{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T680 M680;
struct S727{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T727 M727;
struct S665{Tid id;T0* _xml_element;T0* _project;T0* _redefine_clause;};
extern T665 M665;
struct S516{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T516 M516;
struct S313{Tid id;T315 _storage;T2 _capacity;T2 _upper;};
extern T313 M313;
struct S211{Tid id;T2 _id;T0* _action;T0* _pattern;T2 _line_nb;T2 _trail_count;T2 _head_count;T2 _line_count;T2 _column_count;T6 _is_useful;T6 _has_trail_context;};
extern T211 M211;
struct S482{Tid id;};
extern T482 M482;
struct S528{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T528 M528;
struct S689{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _entry_buffer;T141 _basic_directory;};
extern T689 M689;
struct S664{Tid id;T0* _xml_element;T0* _project;T0* _select_clause;};
extern T664 M664;
struct S772{Tid id;};
extern T772 M772;
struct S789{Tid id;};
extern T789 M789;
struct S771{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T771 M771;
struct S505{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T505 M505;
struct S297{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T297 M297;
struct S508{Tid id;};
extern T508 M508;
struct S267{Tid id;};
extern T267 M267;
struct S333{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T333 M333;
struct S706{Tid id;};
extern T706 M706;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S530{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T530 M530;
struct S641{Tid id;T643 _storage;T2 _capacity;T2 _upper;};
extern T641 M641;
struct S67{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;};
extern T67 M67;
struct S694{Tid id;};
extern T694 M694;
struct S161{Tid id;T163 _storage;T2 _capacity;T2 _upper;};
extern T161 M161;
struct S171{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _fish;T0* _clean;};
extern T171 M171;
struct S168{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T168 M168;
struct S361{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T361 M361;
struct S456{Tid id;T0* _filename;T0* _mapped_filename;};
extern T456 M456;
struct S435{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T435 M435;
struct S624{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T624 M624;
struct S145{Tid id;};
extern T145 M145;
struct S696{Tid id;};
extern T696 M696;
struct S238{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T238 M238;
struct S376{Tid id;T0* _parameters;};
extern T376 M376;
struct S677{Tid id;};
extern T677 M677;
struct S423{Tid id;};
extern T423 M423;
struct S608{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T608 M608;
struct S86{Tid id;T87 _storage;T2 _capacity;T2 _upper;};
extern T86 M86;
struct S468{Tid id;};
extern T468 M468;
struct S536{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T536 M536;
struct S524{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T524 M524;
struct S517{Tid id;T2 _exit_code;T0* _project;T0* _config_filename;T0* _compile;T0* _defines;};
extern T517 M517;
struct S258{Tid id;};
extern T258 M258;
extern T141 M141;
struct S379{Tid id;T0* _parameters;};
extern T379 M379;
struct S744{Tid id;T0* _first;T0* _second;};
extern T744 M744;
struct S138{Tid id;};
extern T138 M138;
struct S529{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;};
extern T529 M529;
struct S644{Tid id;T0* _xml_element;T0* _project;};
extern T644 M644;
struct S488{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T488 M488;
struct S575{Tid id;T577 _storage;T2 _capacity;T2 _upper;};
extern T575 M575;
struct S246{Tid id;T0* _target;};
extern T246 M246;
struct S207{Tid id;T2 _id;T0* _states;T0* _accepted_rules;T0* _accepted_head_rules;T0* _transitions;T2 _code;};
extern T207 M207;
struct S486{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T486 M486;
struct S37{Tid id;T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _options;T0* _targets;T0* _selected_targets;T6 _build_successful;T0* _inherit_clause;T6 _old_inherit;T0* _default_target_name;T0* _current_target;};
extern T37 M37;
struct S302{Tid id;};
extern T302 M302;
struct S107{Tid id;T109 _storage;T2 _capacity;T2 _upper;};
extern T107 M107;
struct S226{Tid id;T2 _count;T0* _storage;};
extern T226 M226;
struct S525{Tid id;T2 _exit_code;T0* _project;T0* _directory;T0* _file;T0* _fileset;};
extern T525 M525;
struct S144{Tid id;T2 _code;};
extern T144 M144;
struct S578{Tid id;};
extern T578 M578;
struct S513{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T513 M513;
struct S102{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T102 M102;
struct S94{Tid id;};
extern T94 M94;
struct S556{Tid id;T2 _exit_code;T0* _project;T0* _source_filename;T0* _target_filename;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;T0* _fileset;};
extern T556 M556;
struct S489{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T489 M489;
struct S219{Tid id;T221 _storage;T2 _capacity;T2 _upper;};
extern T219 M219;
struct S766{Tid id;T0* _uri;};
extern T766 M766;
struct S360{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T360 M360;
struct S91{Tid id;T141 _basic_directory;T0* _name;};
extern T91 M91;
struct S167{Tid id;T2 _exit_code;T0* _project;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T167 M167;
struct S705{Tid id;};
extern T705 M705;
struct S378{Tid id;T0* _parameters;};
extern T378 M378;
struct S44{Tid id;T141 _basic_directory;T0* _name;};
extern T44 M44;
struct S173{Tid id;T2 _exit_code;T0* _project;T0* _esd_filename;T0* _clean;T6 _recursive_clean;T0* _tuned_system;T0* _tuning_level;};
extern T173 M173;
struct S617{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T617 M617;
struct S143{Tid id;T141 _basic_directory;};
extern T143 M143;
struct S55{Tid id;T0* _xml_element;T0* _project;T0* _name;T0* _precursor_target;T0* _redefining_target;T6 _is_executed;};
extern T55 M55;
struct S131{Tid id;};
extern T131 M131;
extern T720 M720;
struct S88{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;};
extern T88 M88;
struct S673{Tid id;T675 _storage;T2 _capacity;T2 _upper;};
extern T673 M673;
struct S349{Tid id;T112 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T349 M349;
struct S135{Tid id;T137 _storage;T2 _capacity;T2 _upper;};
extern T135 M135;
struct S353{Tid id;T355 _storage;T2 _capacity;T2 _upper;};
extern T353 M353;
struct S584{Tid id;T0* _project;T0* _parents;};
extern T584 M584;
struct S93{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T93 M93;
struct S316{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T316 M316;
struct S172{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T172 M172;
struct S698{Tid id;};
extern T698 M698;
struct S348{Tid id;T216 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T348 M348;
struct S520{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T520 M520;
struct S51{Tid id;T3 _item;};
extern T51 M51;
struct S557{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T557 M557;
struct S418{Tid id;T0* _comparator;};
extern T418 M418;
struct S560{Tid id;T2 _exit_code;T0* _project;T0* _parent;};
extern T560 M560;
struct S707{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _fixed_array_;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_column;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _yy_end;T2 _yy_start;T2 _yy_position;T2 _yy_more_len;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T707 M707;
struct S582{Tid id;T0* _project;T0* _parent_project;T0* _renames;T0* _redefines;T0* _selects;T0* _unchanged_targets;T0* _renamed_targets;T0* _redefined_targets;};
extern T582 M582;
struct S509{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T509 M509;
struct S649{Tid id;T0* _implementation;T0* _root_element;};
extern T649 M649;
struct S535{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;T2 _processor;T0* _format;T0* _indent;T0* _extdirs;T0* _classpath;};
extern T535 M535;
struct S106{Tid id;};
extern T106 M106;
struct S273{Tid id;};
extern T273 M273;
struct S47{Tid id;T141 _basic_directory;};
extern T47 M47;
struct S179{Tid id;T0* _project;T0* _type;T0* _source_pattern;T0* _target_pattern;T0* _map;};
extern T179 M179;
struct S726{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T726 M726;
struct S36{Tid id;T0* _build_filename;T0* _project_element;};
extern T36 M36;
struct S368{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T368 M368;
struct S176{Tid id;T2 _exit_code;T0* _project;T0* _command_line;T6 _accept_errors;T0* _fileset;};
extern T176 M176;
struct S196{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _description;T0* _error_handler;T2 _line_nb;T2 _rule_line_nb;T0* _last_value;T0* _character_classes;T0* _name_definitions;T0* _last_string;T0* _pending_rules;T0* _start_condition_stack;T0* _action_factory;T0* _rule;T6 _in_trail_context;T6 _has_trail_context;T2 _head_line;T2 _head_column;T2 _head_count;T2 _trail_count;};
extern T196 M196;
struct S169{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _finish_freezing;T0* _clean;};
extern T169 M169;
struct S676{Tid id;};
extern T676 M676;
struct S175{Tid id;T0* _xml_element;T0* _project;T0* _fileset;};
extern T175 M175;
struct S356{Tid id;T0* _parameters;};
extern T356 M356;
struct S35{Tid id;T6 _verbose;T6 _debug_mode;T6 _no_exec;};
extern T35 M35;
struct S32{Tid id;T0* _variables;};
extern T32 M32;
struct S358{Tid id;T0* _program_name;};
extern T358 M358;
struct S79{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T79 M79;
struct S701{Tid id;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T701 M701;
struct S715{Tid id;T0* _command;T2 _exit_code;};
extern T715 M715;
struct S409{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T409 M409;
struct S417{Tid id;};
extern T417 M417;
struct S492{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T492 M492;
struct S541{Tid id;};
extern T541 M541;
struct S345{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T345 M345;
struct S490{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T490 M490;
struct S531{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T531 M531;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_fstat.h) is automatically
  included when some external "SmallEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_mtime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_time.h) is automatically
  included when some external "SmallEiffel" basic_time_* feature is
  used (i.e. in live code).
*/
#include <time.h>

#ifdef WIN32
#include <windows.h>
#endif

#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, EIF_INTEGER mon,
			     EIF_INTEGER mday, EIF_INTEGER hour,
			     EIF_INTEGER min,  EIF_INTEGER sec);
void basic_time_add_second(EIF_DOUBLE *t, int s);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_putenv.h) is automatically
  included when the basic_putenv feature is used (ie. in live code).
*/

void basic_putenv(EIF_POINTER variable, EIF_POINTER value);
T6 r8is_null(T8 C);
T0* r6out(T6 C);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
void r6out_in_tagged_out_memory(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
void r236set_all_with(T236 C,T0* a1,T2 a2);
void r236copy_from(T236 C,T236 a1,T2 a2);
void r485clear_all(T485 C,T2 a1);
T485 r485realloc(T485 C,T2 a1,T2 a2);
void r485set_all_with(T485 C,T0* a1,T2 a2);
void r485clear(T485 C,T2 a1,T2 a2);
void r485copy_from(T485 C,T485 a1,T2 a2);
void r375clear_all(T375 C,T2 a1);
T375 r375realloc(T375 C,T2 a1,T2 a2);
void r375set_all_with(T375 C,T0* a1,T2 a2);
void r375clear(T375 C,T2 a1,T2 a2);
void r375copy_from(T375 C,T375 a1,T2 a2);
void r315clear_all(T315 C,T2 a1);
T315 r315realloc(T315 C,T2 a1,T2 a2);
void r315set_all_with(T315 C,T0* a1,T2 a2);
void r315clear(T315 C,T2 a1,T2 a2);
void r315copy_from(T315 C,T315 a1,T2 a2);
void r229set_all_with(T229 C,T6 a1,T2 a2);
void r229copy_from(T229 C,T229 a1,T2 a2);
void r311clear_all(T311 C,T2 a1);
T311 r311realloc(T311 C,T2 a1,T2 a2);
void r311set_all_with(T311 C,T0* a1,T2 a2);
void r311clear(T311 C,T2 a1,T2 a2);
void r311copy_from(T311 C,T311 a1,T2 a2);
void r670clear_all(T670 C,T2 a1);
T670 r670realloc(T670 C,T2 a1,T2 a2);
void r670set_all_with(T670 C,T0* a1,T2 a2);
void r670clear(T670 C,T2 a1,T2 a2);
void r670copy_from(T670 C,T670 a1,T2 a2);
void r662clear_all(T662 C,T2 a1);
T662 r662realloc(T662 C,T2 a1,T2 a2);
void r662set_all_with(T662 C,T0* a1,T2 a2);
void r662clear(T662 C,T2 a1,T2 a2);
void r662copy_from(T662 C,T662 a1,T2 a2);
void r643clear_all(T643 C,T2 a1);
T643 r643realloc(T643 C,T2 a1,T2 a2);
void r643set_all_with(T643 C,T0* a1,T2 a2);
void r643clear(T643 C,T2 a1,T2 a2);
void r643copy_from(T643 C,T643 a1,T2 a2);
void r112clear_all(T112 C,T2 a1);
T112 r112realloc(T112 C,T2 a1,T2 a2);
void r112move(T112 C,T2 a1,T2 a2,T2 a3);
void r112set_all_with(T112 C,T0* a1,T2 a2);
void r112clear(T112 C,T2 a1,T2 a2);
void r112copy_from(T112 C,T112 a1,T2 a2);
void r163clear_all(T163 C,T2 a1);
T163 r163realloc(T163 C,T2 a1,T2 a2);
void r163set_all_with(T163 C,T0* a1,T2 a2);
void r163clear(T163 C,T2 a1,T2 a2);
void r163copy_from(T163 C,T163 a1,T2 a2);
void r242clear_all(T242 C,T2 a1);
T242 r242realloc(T242 C,T2 a1,T2 a2);
void r242set_all_with(T242 C,T0* a1,T2 a2);
void r242clear(T242 C,T2 a1,T2 a2);
void r242copy_from(T242 C,T242 a1,T2 a2);
void r577clear_all(T577 C,T2 a1);
T577 r577realloc(T577 C,T2 a1,T2 a2);
void r577set_all_with(T577 C,T0* a1,T2 a2);
void r577clear(T577 C,T2 a1,T2 a2);
void r577copy_from(T577 C,T577 a1,T2 a2);
void r87clear_all(T87 C,T2 a1);
T87 r87realloc(T87 C,T2 a1,T2 a2);
void r87set_all_with(T87 C,T0* a1,T2 a2);
void r87clear(T87 C,T2 a1,T2 a2);
void r87copy_from(T87 C,T87 a1,T2 a2);
void r675clear_all(T675 C,T2 a1);
T675 r675realloc(T675 C,T2 a1,T2 a2);
void r675set_all_with(T675 C,T0* a1,T2 a2);
void r675clear(T675 C,T2 a1,T2 a2);
void r675copy_from(T675 C,T675 a1,T2 a2);
void r216clear_all(T216 C,T2 a1);
T216 r216realloc(T216 C,T2 a1,T2 a2);
void r216set_all_with(T216 C,T0* a1,T2 a2);
void r216clear(T216 C,T2 a1,T2 a2);
void r216copy_from(T216 C,T216 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r137clear_all(T137 C,T2 a1);
T137 r137realloc(T137 C,T2 a1,T2 a2);
void r137set_all_with(T137 C,T0* a1,T2 a2);
void r137clear(T137 C,T2 a1,T2 a2);
void r137copy_from(T137 C,T137 a1,T2 a2);
void r109clear_all(T109 C,T2 a1);
T109 r109realloc(T109 C,T2 a1,T2 a2);
void r109set_all_with(T109 C,T2 a1,T2 a2);
void r109clear(T109 C,T2 a1,T2 a2);
void r109copy_from(T109 C,T109 a1,T2 a2);
void r540clear_all(T540 C,T2 a1);
T540 r540realloc(T540 C,T2 a1,T2 a2);
void r540set_all_with(T540 C,T0* a1,T2 a2);
void r540clear(T540 C,T2 a1,T2 a2);
void r540copy_from(T540 C,T540 a1,T2 a2);
void r221clear_all(T221 C,T2 a1);
T221 r221realloc(T221 C,T2 a1,T2 a2);
void r221set_all_with(T221 C,T0* a1,T2 a2);
void r221clear(T221 C,T2 a1,T2 a2);
void r221copy_from(T221 C,T221 a1,T2 a2);
void r355clear_all(T355 C,T2 a1);
T355 r355realloc(T355 C,T2 a1,T2 a2);
void r355set_all_with(T355 C,T0* a1,T2 a2);
void r355clear(T355 C,T2 a1,T2 a2);
void r355copy_from(T355 C,T355 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
void r7keep_tail(T7* C,T2 a1);
void r7remove_first(T7* C,T2 a1);
T2 r7item_code(T7* C,T2 a1);
void r7remove_between(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T3 r7item(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
void r7out_in_tagged_out_memory(T7* C);
T6 r7same_type(T7* C,T0* a1);
void r7remove_tail(T7* C,T2 a1);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
void r7extend(T7* C,T3 a1);
T0* r7_px_43(T7* C,T0* a1);
T2 r7hash_code(T7* C);
void r7remove_last(T7* C,T2 a1);
T6 r7conforms_to(T7* C,T0* a1);
void r7keep_head(T7* C,T2 a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r233copy(T233* C,T0* a1);
T2 r233count(T233* C);
T0* r233item(T233* C,T2 a1);
T6 r233se_assigned_from(T0* a1);
void r233make(T233* C,T2 a1,T2 a2);
T6 r233conforms_to(T233* C,T0* a1);
T0* r233twin(T233* C);
void r210copy(T210* C,T0* a1);
T2 r210count(T210* C);
T2 r210item(T210* C,T2 a1);
T6 r210se_assigned_from(T0* a1);
void r210make(T210* C,T2 a1,T2 a2);
T6 r210conforms_to(T210* C,T0* a1);
T0* r210twin(T210* C);
void r309copy(T309* C,T0* a1);
T6 r309se_assigned_from(T0* a1);
void r309make(T309* C,T2 a1);
T6 r309conforms_to(T309* C,T0* a1);
void r309resize(T309* C,T2 a1);
T0* r309twin(T309* C);
void r481copy(T481* C,T0* a1);
T6 r481se_assigned_from(T0* a1);
void r481make(T481* C,T2 a1);
T6 r481conforms_to(T481* C,T0* a1);
void r481resize(T481* C,T2 a1);
T0* r481twin(T481* C);
void r224copy(T224* C,T0* a1);
T0* r224item(T224* C,T2 a1);
T6 r224se_assigned_from(T0* a1);
void r224make(T224* C,T2 a1,T2 a2);
T6 r224conforms_to(T224* C,T0* a1);
T0* r224twin(T224* C);
void r538copy(T538* C,T0* a1);
T6 r538se_assigned_from(T0* a1);
void r538make(T538* C,T2 a1);
T6 r538conforms_to(T538* C,T0* a1);
void r538resize(T538* C,T2 a1);
T0* r538twin(T538* C);
void r373copy(T373* C,T0* a1);
T6 r373se_assigned_from(T0* a1);
void r373make(T373* C,T2 a1);
T6 r373conforms_to(T373* C,T0* a1);
void r373resize(T373* C,T2 a1);
T0* r373twin(T373* C);
void r668copy(T668* C,T0* a1);
T6 r668se_assigned_from(T0* a1);
void r668make(T668* C,T2 a1);
T6 r668conforms_to(T668* C,T0* a1);
void r668resize(T668* C,T2 a1);
T0* r668twin(T668* C);
void r240copy(T240* C,T0* a1);
T6 r240se_assigned_from(T0* a1);
void r240make(T240* C,T2 a1);
T6 r240conforms_to(T240* C,T0* a1);
void r240resize(T240* C,T2 a1);
T0* r240twin(T240* C);
void r660copy(T660* C,T0* a1);
T6 r660se_assigned_from(T0* a1);
void r660make(T660* C,T2 a1);
T6 r660conforms_to(T660* C,T0* a1);
void r660resize(T660* C,T2 a1);
T0* r660twin(T660* C);
void r227copy(T227* C,T0* a1);
T6 r227item(T227* C,T2 a1);
T6 r227se_assigned_from(T0* a1);
void r227make(T227* C,T2 a1,T2 a2);
T6 r227conforms_to(T227* C,T0* a1);
T0* r227twin(T227* C);
void r110copy(T110* C,T0* a1);
T2 r110count(T110* C);
T0* r110item(T110* C,T2 a1);
T6 r110se_assigned_from(T0* a1);
void r110make(T110* C,T2 a1);
T6 r110conforms_to(T110* C,T0* a1);
void r110resize(T110* C,T2 a1);
T0* r110twin(T110* C);
void r214copy(T214* C,T0* a1);
T6 r214se_assigned_from(T0* a1);
void r214make(T214* C,T2 a1);
T6 r214conforms_to(T214* C,T0* a1);
void r214resize(T214* C,T2 a1);
T0* r214twin(T214* C);
void r313copy(T313* C,T0* a1);
T6 r313se_assigned_from(T0* a1);
void r313make(T313* C,T2 a1);
T6 r313conforms_to(T313* C,T0* a1);
void r313resize(T313* C,T2 a1);
T0* r313twin(T313* C);
void r641copy(T641* C,T0* a1);
T6 r641se_assigned_from(T0* a1);
void r641make(T641* C,T2 a1);
T6 r641conforms_to(T641* C,T0* a1);
void r641resize(T641* C,T2 a1);
T0* r641twin(T641* C);
void r161copy(T161* C,T0* a1);
T6 r161se_assigned_from(T0* a1);
void r161make(T161* C,T2 a1);
T6 r161conforms_to(T161* C,T0* a1);
void r161resize(T161* C,T2 a1);
T0* r161twin(T161* C);
void r86copy(T86* C,T0* a1);
T6 r86se_assigned_from(T0* a1);
void r86make(T86* C,T2 a1);
T6 r86conforms_to(T86* C,T0* a1);
void r86resize(T86* C,T2 a1);
T0* r86twin(T86* C);
void r575copy(T575* C,T0* a1);
T6 r575se_assigned_from(T0* a1);
void r575make(T575* C,T2 a1);
T6 r575conforms_to(T575* C,T0* a1);
void r575resize(T575* C,T2 a1);
T0* r575twin(T575* C);
void r107copy(T107* C,T0* a1);
T6 r107se_assigned_from(T0* a1);
void r107make(T107* C,T2 a1);
T6 r107conforms_to(T107* C,T0* a1);
void r107resize(T107* C,T2 a1);
T0* r107twin(T107* C);
void r107with_capacity(T107* C,T2 a1);
void r107from_collection(T107* C,T0* a1);
void r219copy(T219* C,T0* a1);
T6 r219se_assigned_from(T0* a1);
void r219make(T219* C,T2 a1);
T6 r219conforms_to(T219* C,T0* a1);
void r219resize(T219* C,T2 a1);
T0* r219twin(T219* C);
void r673copy(T673* C,T0* a1);
T6 r673se_assigned_from(T0* a1);
void r673make(T673* C,T2 a1);
T6 r673conforms_to(T673* C,T0* a1);
void r673resize(T673* C,T2 a1);
T0* r673twin(T673* C);
void r349copy(T349* C,T0* a1);
void r349force(T349* C,T0* a1,T2 a2);
T2 r349count(T349* C);
T0* r349item(T349* C,T2 a1);
T6 r349valid_index(T349* C,T2 a1);
T6 r349se_assigned_from(T0* a1);
void r349make(T349* C,T2 a1,T2 a2);
T6 r349conforms_to(T349* C,T0* a1);
void r349add_last(T349* C,T0* a1);
void r349resize(T349* C,T2 a1,T2 a2);
T0* r349twin(T349* C);
void r135copy(T135* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
void r135make(T135* C,T2 a1);
T6 r135conforms_to(T135* C,T0* a1);
void r135resize(T135* C,T2 a1);
T0* r135twin(T135* C);
void r353copy(T353* C,T0* a1);
T2 r353count(T353* C);
T0* r353item(T353* C,T2 a1);
T6 r353se_assigned_from(T0* a1);
void r353make(T353* C,T2 a1);
T6 r353conforms_to(T353* C,T0* a1);
void r353resize(T353* C,T2 a1);
T0* r353twin(T353* C);
void r348copy(T348* C,T0* a1);
T6 r348se_assigned_from(T0* a1);
void r348make(T348* C,T2 a1,T2 a2);
T6 r348conforms_to(T348* C,T0* a1);
T0* r348twin(T348* C);
void r759copy(T759* C,T0* a1);
void r759set(T759* C,T0* a1,T6 a2,T6 a3);
T6 r759se_assigned_from(T0* a1);
void r759make(T759* C,T0* a1);
T6 r759conforms_to(T759* C,T0* a1);
void r759set_after(T759* C);
T0* r759twin(T759* C);
void r552copy(T552* C,T0* a1);
T6 r552se_assigned_from(T0* a1);
T6 r552off(T552* C);
T6 r552conforms_to(T552* C,T0* a1);
T0* r552twin(T552* C);
T6 r319se_assigned_from(T0* a1);
T6 r319conforms_to(T319* C,T0* a1);
T6 r319test(T2 a1,T2 a2);
T0* r319twin(T319* C);
void r268subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r268se_assigned_from(T0* a1);
T6 r268conforms_to(T268* C,T0* a1);
T0* r268twin(T268* C);
void r268sort_with_comparator(T0* a1,T0* a2);
T2 r768new_capacity(T2 a1);
void r768copy(T768* C,T0* a1);
T6 r768extendible(T768* C,T2 a1);
void r768force(T768* C,T0* a1);
T0* r768item(T768* C);
T6 r768se_assigned_from(T0* a1);
T0* r768clone(T0* a1);
void r768make(T768* C,T2 a1);
void r768remove(T768* C);
T6 r768conforms_to(T768* C,T0* a1);
void r768resize(T768* C,T2 a1);
T0* r768twin(T768* C);
T2 r350new_capacity(T2 a1);
void r350copy(T350* C,T0* a1);
T6 r350extendible(T350* C,T2 a1);
void r350remove_traversing_cursor(T350* C,T0* a1);
T0* r350item(T350* C,T2 a1);
void r350move_all_cursors_after(T350* C);
void r350add_traversing_cursor(T350* C,T0* a1);
T6 r350se_assigned_from(T0* a1);
T0* r350clone(T0* a1);
T6 r350cursor_before(T0* a1);
void r350make(T350* C,T2 a1);
T6 r350cursor_after(T0* a1);
T6 r350conforms_to(T350* C,T0* a1);
void r350resize(T350* C,T2 a1);
T0* r350twin(T350* C);
void r350force_last(T350* C,T0* a1);
T0* r350new_cursor(T350* C);
T6 r350cursor_off(T0* a1);
void r223copy(T223* C,T0* a1);
void r223set_target(T223* C,T0* a1,T2 a2);
T6 r223se_assigned_from(T0* a1);
T0* r223clone(T0* a1);
void r223make(T223* C,T2 a1,T2 a2);
T6 r223conforms_to(T223* C,T0* a1);
T0* r223twin(T223* C);
void r234put_left(T234* C,T0* a1);
T6 r234se_assigned_from(T0* a1);
T6 r234conforms_to(T234* C,T0* a1);
T0* r234twin(T234* C);
void r234put_right(T234* C,T0* a1);
void r480copy(T480* C,T0* a1);
T6 r480se_assigned_from(T0* a1);
void r480make(T480* C,T0* a1);
T6 r480off(T480* C);
T6 r480conforms_to(T480* C,T0* a1);
T0* r480twin(T480* C);
T6 r396se_assigned_from(T0* a1);
T0* r396make(T2 a1);
T6 r396conforms_to(T396* C,T0* a1);
T0* r396resize(T0* a1,T2 a2);
T0* r396twin(T396* C);
void r452copy(T452* C,T0* a1);
T6 r452se_assigned_from(T0* a1);
T6 r452off(T452* C);
T6 r452conforms_to(T452* C,T0* a1);
T0* r452twin(T452* C);
T6 r395labeled(T395* C,T2 a1);
T6 r395se_assigned_from(T0* a1);
void r395make(T395* C,T0* a1,T0* a2);
T6 r395conforms_to(T395* C,T0* a1);
T0* r395twin(T395* C);
void r395record(T395* C,T0* a1);
T6 r322se_assigned_from(T0* a1);
T0* r322make(T2 a1);
T6 r322conforms_to(T322* C,T0* a1);
T0* r322resize(T0* a1,T2 a2);
T0* r322twin(T322* C);
void r351clear_all(T0* a1);
T6 r351se_assigned_from(T0* a1);
T0* r351make(T2 a1);
T6 r351conforms_to(T351* C,T0* a1);
T0* r351resize(T0* a1,T2 a2);
T0* r351twin(T351* C);
T6 r413se_assigned_from(T0* a1);
void r413make(T413* C,T2 a1,T0* a2);
T6 r413conforms_to(T413* C,T0* a1);
T0* r413twin(T413* C);
void r413record(T413* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
T0* r130to_fixed_array(T0* a1);
T0* r130make(T2 a1);
T0* r130make_from_array(T0* a1);
T6 r130conforms_to(T130* C,T0* a1);
T0* r130resize(T0* a1,T2 a2);
T0* r130twin(T130* C);
T6 r745se_assigned_from(T0* a1);
void r745make(T745* C,T0* a1,T0* a2);
T6 r745conforms_to(T745* C,T0* a1);
T0* r745twin(T745* C);
void r127copy(T127* C,T0* a1);
T0* r127key(T127* C);
T0* r127item(T127* C);
T6 r127se_assigned_from(T0* a1);
T6 r127after(T127* C);
void r127make(T127* C,T0* a1);
T6 r127off(T127* C);
T6 r127conforms_to(T127* C,T0* a1);
T0* r127twin(T127* C);
T2 r572new_capacity(T2 a1);
void r572copy(T572* C,T0* a1);
T0* r572keys_item(T572* C,T2 a1);
void r572cursor_back(T572* C,T0* a1);
void r572make_clashes(T572* C,T2 a1);
T0* r572cursor_item(T572* C,T0* a1);
void r572search_position(T572* C,T0* a1);
void r572remove_traversing_cursor(T572* C,T0* a1);
void r572clone_slots(T572* C);
void r572keys_resize(T572* C,T2 a1);
void r572clone_clashes(T572* C);
T0* r572item(T572* C,T0* a1);
void r572move_all_cursors_after(T572* C);
void r572make_items(T572* C,T2 a1);
void r572add_traversing_cursor(T572* C,T0* a1);
T6 r572se_assigned_from(T0* a1);
T0* r572clone(T0* a1);
T6 r572has_item(T572* C,T0* a1);
void r572remove_position(T572* C,T2 a1);
T6 r572cursor_before(T0* a1);
void r572make(T572* C,T2 a1);
void r572remove(T572* C,T0* a1);
T0* r572cursor_key(T572* C,T0* a1);
void r572clone_items(T572* C);
T6 r572cursor_after(T0* a1);
T6 r572conforms_to(T572* C,T0* a1);
T6 r572has(T572* C,T0* a1);
void r572cursor_finish(T572* C,T0* a1);
void r572make_keys(T572* C,T2 a1);
T2 r572hash_position(T572* C,T0* a1);
extern T0*oBC98fixed_integer_array_;
void r572cursor_forth(T572* C,T0* a1);
void r572items_resize(T572* C,T2 a1);
void r572clone_keys(T572* C);
void r572make_with_equality_testers(T572* C,T2 a1,T0* a2,T0* a3);
void r572resize(T572* C,T2 a1);
void r572move_cursors_after(T572* C,T2 a1);
void r572move_cursors_forth(T572* C,T2 a1);
void r572cursor_start(T572* C,T0* a1);
void r572clashes_resize(T572* C,T2 a1);
void r572slots_resize(T572* C,T2 a1);
T0* r572twin(T572* C);
void r572force_last(T572* C,T0* a1,T0* a2);
T0* r572new_cursor(T572* C);
void r572make_slots(T572* C,T2 a1);
void r572keys_put(T572* C,T0* a1,T2 a2);
T2 r572new_modulus(T2 a1);
void r572move_all_cursors(T572* C,T2 a1,T2 a2);
T6 r572cursor_off(T0* a1);
T2 r638new_capacity(T2 a1);
void r638copy(T638* C,T0* a1);
void r638make_equal(T638* C,T2 a1);
T0* r638keys_item(T638* C,T2 a1);
void r638cursor_back(T638* C,T0* a1);
void r638make_clashes(T638* C,T2 a1);
T0* r638cursor_item(T638* C,T0* a1);
void r638search_position(T638* C,T0* a1);
void r638remove_traversing_cursor(T638* C,T0* a1);
void r638clone_slots(T638* C);
void r638keys_resize(T638* C,T2 a1);
void r638clone_clashes(T638* C);
void r638move_all_cursors_after(T638* C);
void r638make_items(T638* C,T2 a1);
void r638add_traversing_cursor(T638* C,T0* a1);
T6 r638se_assigned_from(T0* a1);
T0* r638clone(T0* a1);
T6 r638cursor_before(T0* a1);
void r638clone_items(T638* C);
T6 r638conforms_to(T638* C,T0* a1);
T6 r638has(T638* C,T0* a1);
void r638cursor_finish(T638* C,T0* a1);
void r638make_keys(T638* C,T2 a1);
T2 r638hash_position(T638* C,T0* a1);
void r638items_resize(T638* C,T2 a1);
void r638clone_keys(T638* C);
void r638make_with_equality_testers(T638* C,T2 a1,T0* a2,T0* a3);
void r638resize(T638* C,T2 a1);
void r638clashes_resize(T638* C,T2 a1);
void r638slots_resize(T638* C,T2 a1);
T0* r638twin(T638* C);
void r638force_last(T638* C,T0* a1,T0* a2);
T0* r638new_cursor(T638* C);
void r638make_slots(T638* C,T2 a1);
void r638keys_put(T638* C,T0* a1,T2 a2);
T2 r638new_modulus(T2 a1);
T6 r638cursor_off(T0* a1);
void r158copy(T158* C,T0* a1);
T6 r158se_assigned_from(T0* a1);
T6 r158off(T158* C);
T6 r158conforms_to(T158* C,T0* a1);
T0* r158twin(T158* C);
T6 r438se_assigned_from(T0* a1);
T0* r438make(T2 a1);
T6 r438conforms_to(T438* C,T0* a1);
T0* r438resize(T0* a1,T2 a2);
T0* r438twin(T438* C);
void r259subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r259se_assigned_from(T0* a1);
T6 r259conforms_to(T259* C,T0* a1);
void r259sort_with_comparator(T0* a1,T0* a2);
T0* r259twin(T259* C);
T2 r212new_capacity(T2 a1);
void r212copy(T212* C,T0* a1);
T6 r212extendible(T212* C,T2 a1);
void r212move_cursors_right(T212* C,T2 a1,T2 a2);
void r212put(T212* C,T0* a1,T2 a2);
void r212remove_traversing_cursor(T212* C,T0* a1);
void r212move_all_cursors_after(T212* C);
void r212add_traversing_cursor(T212* C,T0* a1);
T6 r212se_assigned_from(T0* a1);
T0* r212clone(T0* a1);
void r212force_first(T212* C,T0* a1);
T6 r212cursor_before(T0* a1);
void r212make(T212* C,T2 a1);
T6 r212cursor_after(T0* a1);
T6 r212conforms_to(T212* C,T0* a1);
void r212move_right(T212* C,T2 a1,T2 a2);
void r212resize(T212* C,T2 a1);
T0* r212twin(T212* C);
void r212force_last(T212* C,T0* a1);
T0* r212new_cursor(T212* C);
void r212put_last(T212* C,T0* a1);
T6 r212cursor_off(T0* a1);
void r593copy(T593* C,T0* a1);
T0* r593item(T593* C);
T6 r593se_assigned_from(T0* a1);
T6 r593after(T593* C);
T6 r593off(T593* C);
T6 r593conforms_to(T593* C,T0* a1);
T0* r593twin(T593* C);
T6 r534se_assigned_from(T0* a1);
void r534make(T534* C,T0* a1,T0* a2);
T6 r534conforms_to(T534* C,T0* a1);
T0* r534twin(T534* C);
T6 r762se_assigned_from(T0* a1);
T6 r762conforms_to(T762* C,T0* a1);
T0* r762twin(T762* C);
void r287copy(T287* C,T0* a1);
T6 r287se_assigned_from(T0* a1);
T6 r287off(T287* C);
T6 r287conforms_to(T287* C,T0* a1);
T0* r287twin(T287* C);
void r627copy(T627* C,T0* a1);
T0* r627item(T627* C);
T6 r627se_assigned_from(T0* a1);
void r627make(T627* C,T0* a1);
T6 r627off(T627* C);
T6 r627conforms_to(T627* C,T0* a1);
T6 r627before(T627* C);
T0* r627twin(T627* C);
void r784copy(T784* C,T0* a1);
T6 r784se_assigned_from(T0* a1);
T6 r784off(T784* C);
T6 r784conforms_to(T784* C,T0* a1);
T0* r784twin(T784* C);
void r217copy(T217* C,T0* a1);
void r217remove_traversing_cursor(T217* C,T0* a1);
void r217move_all_cursors_after(T217* C);
void r217add_traversing_cursor(T217* C,T0* a1);
T6 r217se_assigned_from(T0* a1);
T0* r217clone(T0* a1);
T6 r217cursor_before(T0* a1);
void r217make(T217* C,T2 a1);
T6 r217cursor_after(T0* a1);
T6 r217conforms_to(T217* C,T0* a1);
void r217resize(T217* C,T2 a1);
T0* r217twin(T217* C);
T0* r217new_cursor(T217* C);
void r217put_last(T217* C,T0* a1);
T6 r217cursor_off(T0* a1);
T2 r460new_capacity(T2 a1);
void r460copy(T460* C,T0* a1);
void r460make_equal(T460* C,T2 a1);
void r460make_clashes(T460* C,T2 a1);
T0* r460cursor_item(T460* C,T0* a1);
void r460search_position(T460* C,T0* a1);
void r460remove_traversing_cursor(T460* C,T0* a1);
void r460clone_slots(T460* C);
void r460clone_clashes(T460* C);
void r460move_all_cursors_after(T460* C);
void r460make_items(T460* C,T2 a1);
void r460add_traversing_cursor(T460* C,T0* a1);
T6 r460se_assigned_from(T0* a1);
T0* r460clone(T0* a1);
T6 r460after(T460* C);
void r460make(T460* C,T2 a1);
T0* r460item_for_iteration(T460* C);
void r460clone_items(T460* C);
T6 r460cursor_after(T0* a1);
T6 r460conforms_to(T460* C,T0* a1);
T2 r460hash_position(T460* C,T0* a1);
void r460cursor_forth(T460* C,T0* a1);
void r460items_resize(T460* C,T2 a1);
void r460resize(T460* C,T2 a1);
void r460cursor_start(T460* C,T0* a1);
void r460clashes_resize(T460* C,T2 a1);
void r460slots_resize(T460* C,T2 a1);
T0* r460twin(T460* C);
void r460force_last(T460* C,T0* a1);
T0* r460new_cursor(T460* C);
void r460make_slots(T460* C,T2 a1);
T2 r460new_modulus(T2 a1);
T6 r460cursor_off(T0* a1);
T2 r81new_capacity(T2 a1);
void r81copy(T81* C,T0* a1);
T6 r81extendible(T81* C,T2 a1);
void r81remove_traversing_cursor(T81* C,T0* a1);
T0* r81item(T81* C,T2 a1);
void r81move_all_cursors_after(T81* C);
void r81add_traversing_cursor(T81* C,T0* a1);
T6 r81se_assigned_from(T0* a1);
T0* r81clone(T0* a1);
T6 r81cursor_before(T0* a1);
void r81make(T81* C,T2 a1);
T6 r81cursor_after(T0* a1);
T6 r81conforms_to(T81* C,T0* a1);
void r81resize(T81* C,T2 a1);
T0* r81twin(T81* C);
void r81force_last(T81* C,T0* a1);
T0* r81new_cursor(T81* C);
T6 r81cursor_off(T0* a1);
T2 r307new_capacity(T2 a1);
void r307copy(T307* C,T0* a1);
T6 r307extendible(T307* C,T2 a1);
void r307remove_traversing_cursor(T307* C,T0* a1);
void r307move_all_cursors_after(T307* C);
void r307add_traversing_cursor(T307* C,T0* a1);
T6 r307se_assigned_from(T0* a1);
T0* r307clone(T0* a1);
T6 r307cursor_before(T0* a1);
void r307make(T307* C,T2 a1);
T6 r307cursor_after(T0* a1);
T6 r307conforms_to(T307* C,T0* a1);
void r307resize(T307* C,T2 a1);
T0* r307twin(T307* C);
void r307force_last(T307* C,T0* a1);
T0* r307new_cursor(T307* C);
T6 r307cursor_off(T0* a1);
T2 r592new_capacity(T2 a1);
void r592copy(T592* C,T0* a1);
T6 r592extendible(T592* C,T2 a1);
T0* r592cursor_item(T592* C,T0* a1);
void r592remove_traversing_cursor(T592* C,T0* a1);
void r592move_all_cursors_after(T592* C);
void r592add_traversing_cursor(T592* C,T0* a1);
T6 r592se_assigned_from(T0* a1);
T0* r592clone(T0* a1);
T6 r592cursor_before(T0* a1);
void r592make(T592* C,T2 a1);
T6 r592cursor_after(T0* a1);
T6 r592conforms_to(T592* C,T0* a1);
void r592cursor_forth(T592* C,T0* a1);
void r592resize(T592* C,T2 a1);
void r592cursor_start(T592* C,T0* a1);
T0* r592twin(T592* C);
void r592force_last(T592* C,T0* a1);
T0* r592new_cursor(T592* C);
T6 r592cursor_off(T0* a1);
T2 r601new_capacity(T2 a1);
void r601copy(T601* C,T0* a1);
void r601make_equal(T601* C,T2 a1);
T0* r601keys_item(T601* C,T2 a1);
void r601make_clashes(T601* C,T2 a1);
T0* r601cursor_item(T601* C,T0* a1);
void r601search_position(T601* C,T0* a1);
void r601remove_traversing_cursor(T601* C,T0* a1);
void r601clone_slots(T601* C);
void r601keys_resize(T601* C,T2 a1);
void r601clone_clashes(T601* C);
void r601move_all_cursors_after(T601* C);
void r601make_items(T601* C,T2 a1);
void r601add_traversing_cursor(T601* C,T0* a1);
T6 r601se_assigned_from(T0* a1);
T0* r601clone(T0* a1);
void r601clone_items(T601* C);
T6 r601cursor_after(T0* a1);
T6 r601conforms_to(T601* C,T0* a1);
void r601make_keys(T601* C,T2 a1);
T2 r601hash_position(T601* C,T0* a1);
void r601cursor_forth(T601* C,T0* a1);
void r601items_resize(T601* C,T2 a1);
void r601clone_keys(T601* C);
void r601make_with_equality_testers(T601* C,T2 a1,T0* a2,T0* a3);
void r601resize(T601* C,T2 a1);
void r601cursor_start(T601* C,T0* a1);
void r601clashes_resize(T601* C,T2 a1);
void r601slots_resize(T601* C,T2 a1);
T0* r601twin(T601* C);
void r601force_last(T601* C,T0* a1,T0* a2);
T0* r601new_cursor(T601* C);
void r601make_slots(T601* C,T2 a1);
void r601keys_put(T601* C,T0* a1,T2 a2);
T2 r601new_modulus(T2 a1);
T6 r601cursor_off(T0* a1);
void r746copy(T746* C,T0* a1);
T0* r746cursor_item(T0* a1);
void r746remove_traversing_cursor(T746* C,T0* a1);
void r746move_all_cursors_after(T746* C);
void r746add_traversing_cursor(T746* C,T0* a1);
T6 r746se_assigned_from(T0* a1);
void r746make(T746* C);
T6 r746cursor_after(T0* a1);
T6 r746conforms_to(T746* C,T0* a1);
void r746cursor_forth(T746* C,T0* a1);
void r746cursor_start(T746* C,T0* a1);
T0* r746twin(T746* C);
T0* r746new_cursor(T746* C);
void r746put_last(T746* C,T0* a1);
T6 r746cursor_off(T0* a1);
T6 r272se_assigned_from(T0* a1);
T0* r272make(T2 a1);
T6 r272conforms_to(T272* C,T0* a1);
T0* r272resize(T0* a1,T2 a2);
T0* r272twin(T272* C);
void r383copy(T383* C,T0* a1);
T0* r383item(T383* C);
T6 r383se_assigned_from(T0* a1);
T6 r383after(T383* C);
void r383make(T383* C,T0* a1);
T6 r383off(T383* C);
T6 r383conforms_to(T383* C,T0* a1);
T0* r383twin(T383* C);
void r446copy(T446* C,T0* a1);
T6 r446se_assigned_from(T0* a1);
T6 r446off(T446* C);
T6 r446conforms_to(T446* C,T0* a1);
T0* r446twin(T446* C);
T6 r671se_assigned_from(T0* a1);
T0* r671make(T2 a1);
T6 r671conforms_to(T671* C,T0* a1);
T0* r671resize(T0* a1,T2 a2);
T0* r671twin(T671* C);
void r561copy(T561* C,T0* a1);
T0* r561key(T561* C);
T0* r561item(T561* C);
T6 r561se_assigned_from(T0* a1);
T6 r561after(T561* C);
void r561make(T561* C,T0* a1);
T6 r561off(T561* C);
T6 r561conforms_to(T561* C,T0* a1);
T6 r561before(T561* C);
T0* r561twin(T561* C);
T6 r663se_assigned_from(T0* a1);
T0* r663make(T2 a1);
T6 r663conforms_to(T663* C,T0* a1);
T0* r663resize(T0* a1,T2 a2);
T0* r663twin(T663* C);
T6 r723se_assigned_from(T0* a1);
T6 r723conforms_to(T723* C,T0* a1);
T0* r723twin(T723* C);
T6 r482se_assigned_from(T0* a1);
T0* r482make(T2 a1);
T6 r482conforms_to(T482* C,T0* a1);
T0* r482resize(T0* a1,T2 a2);
T0* r482twin(T482* C);
T6 r772se_assigned_from(T0* a1);
T0* r772make(T2 a1);
T6 r772conforms_to(T772* C,T0* a1);
T0* r772resize(T0* a1,T2 a2);
T0* r772twin(T772* C);
void r505copy(T505* C,T0* a1);
T6 r505se_assigned_from(T0* a1);
T6 r505off(T505* C);
T6 r505conforms_to(T505* C,T0* a1);
T0* r505twin(T505* C);
void r297copy(T297* C,T0* a1);
T0* r297item(T297* C);
T6 r297se_assigned_from(T0* a1);
T6 r297after(T297* C);
T6 r297off(T297* C);
T6 r297conforms_to(T297* C,T0* a1);
T0* r297twin(T297* C);
T6 r508se_assigned_from(T0* a1);
T0* r508make(T2 a1);
T6 r508conforms_to(T508* C,T0* a1);
T0* r508resize(T0* a1,T2 a2);
T0* r508twin(T508* C);
T6 r267se_assigned_from(T0* a1);
T6 r267conforms_to(T267* C,T0* a1);
T6 r267less_than(T0* a1,T0* a2);
T0* r267twin(T267* C);
void r333copy(T333* C,T0* a1);
T6 r333se_assigned_from(T0* a1);
void r333make(T333* C,T0* a1);
T6 r333off(T333* C);
T6 r333conforms_to(T333* C,T0* a1);
T0* r333twin(T333* C);
T2 r67new_capacity(T2 a1);
void r67copy(T67* C,T0* a1);
T6 r67extendible(T67* C,T2 a1);
void r67force(T67* C,T0* a1);
T0* r67item(T67* C);
T6 r67se_assigned_from(T0* a1);
T0* r67clone(T0* a1);
void r67make(T67* C,T2 a1);
void r67remove(T67* C);
T6 r67conforms_to(T67* C,T0* a1);
void r67resize(T67* C,T2 a1);
T0* r67twin(T67* C);
T6 r694se_assigned_from(T0* a1);
T6 r694conforms_to(T694* C,T0* a1);
T0* r694twin(T694* C);
void r435copy(T435* C,T0* a1);
T6 r435se_assigned_from(T0* a1);
T6 r435off(T435* C);
T6 r435conforms_to(T435* C,T0* a1);
T0* r435twin(T435* C);
void r624copy(T624* C,T0* a1);
T0* r624item(T624* C);
T6 r624se_assigned_from(T0* a1);
T6 r624after(T624* C);
void r624make(T624* C,T0* a1);
T6 r624off(T624* C);
T6 r624conforms_to(T624* C,T0* a1);
T0* r624twin(T624* C);
T6 r145se_assigned_from(T0* a1);
T0* r145make(T2 a1);
T6 r145conforms_to(T145* C,T0* a1);
T0* r145resize(T0* a1,T2 a2);
T0* r145twin(T145* C);
T6 r696se_assigned_from(T0* a1);
T6 r696conforms_to(T696* C,T0* a1);
T0* r696twin(T696* C);
T2 r238new_capacity(T2 a1);
void r238copy(T238* C,T0* a1);
T6 r238extendible(T238* C,T2 a1);
void r238append_last(T238* C,T0* a1);
void r238move_cursors_right(T238* C,T2 a1,T2 a2);
T0* r238last(T238* C);
void r238put(T238* C,T0* a1,T2 a2);
T0* r238cursor_item(T238* C,T0* a1);
T6 r238is_equal(T238* C,T0* a1);
void r238remove_traversing_cursor(T238* C,T0* a1);
void r238move_all_cursors_after(T238* C);
void r238add_traversing_cursor(T238* C,T0* a1);
T6 r238se_assigned_from(T0* a1);
T0* r238clone(T0* a1);
T6 r238cursor_before(T0* a1);
T6 r238same_type(T238* C,T0* a1);
void r238make(T238* C,T2 a1);
T6 r238cursor_after(T0* a1);
T6 r238conforms_to(T238* C,T0* a1);
T6 r238has(T238* C,T0* a1);
void r238move_right(T238* C,T2 a1,T2 a2);
void r238cursor_forth(T238* C,T0* a1);
void r238resize(T238* C,T2 a1);
void r238cursor_start(T238* C,T0* a1);
T0* r238twin(T238* C);
void r238force_last(T238* C,T0* a1);
T0* r238new_cursor(T238* C);
void r238extend_last(T238* C,T0* a1);
void r238put_last(T238* C,T0* a1);
T6 r238cursor_off(T0* a1);
T6 r677se_assigned_from(T0* a1);
T0* r677make(T2 a1);
T6 r677conforms_to(T677* C,T0* a1);
T0* r677resize(T0* a1,T2 a2);
T0* r677twin(T677* C);
void r608copy(T608* C,T0* a1);
T0* r608item(T608* C);
T6 r608se_assigned_from(T0* a1);
T6 r608after(T608* C);
void r608make(T608* C,T0* a1);
T6 r608off(T608* C);
T6 r608conforms_to(T608* C,T0* a1);
T0* r608twin(T608* C);
T6 r468se_assigned_from(T0* a1);
T6 r468conforms_to(T468* C,T0* a1);
T6 r468test(T0* a1,T0* a2);
T0* r468twin(T468* C);
T2 r536new_capacity(T2 a1);
void r536copy(T536* C,T0* a1);
T6 r536extendible(T536* C,T2 a1);
void r536remove_traversing_cursor(T536* C,T0* a1);
void r536move_all_cursors_after(T536* C);
void r536add_traversing_cursor(T536* C,T0* a1);
T6 r536se_assigned_from(T0* a1);
T0* r536clone(T0* a1);
T6 r536cursor_before(T0* a1);
void r536make(T536* C,T2 a1);
T6 r536cursor_after(T0* a1);
T6 r536conforms_to(T536* C,T0* a1);
void r536resize(T536* C,T2 a1);
T0* r536twin(T536* C);
void r536force_last(T536* C,T0* a1);
T0* r536new_cursor(T536* C);
T6 r536cursor_off(T0* a1);
T6 r258se_assigned_from(T0* a1);
T6 r258conforms_to(T258* C,T0* a1);
T6 r258less_than(T0* a1,T0* a2);
T0* r258twin(T258* C);
T6 r744se_assigned_from(T0* a1);
void r744make(T744* C,T0* a1,T0* a2);
T6 r744conforms_to(T744* C,T0* a1);
T0* r744twin(T744* C);
T6 r246se_assigned_from(T0* a1);
T6 r246conforms_to(T246* C,T0* a1);
T0* r246twin(T246* C);
T6 r302se_assigned_from(T0* a1);
T0* r302make(T2 a1);
T6 r302conforms_to(T302* C,T0* a1);
T0* r302resize(T0* a1,T2 a2);
T0* r302twin(T302* C);
T6 r578se_assigned_from(T0* a1);
T0* r578make(T2 a1);
T6 r578conforms_to(T578* C,T0* a1);
T0* r578resize(T0* a1,T2 a2);
T0* r578twin(T578* C);
T2 r102new_capacity(T2 a1);
void r102copy(T102* C,T0* a1);
void r102make_equal(T102* C,T2 a1);
void r102force(T102* C,T0* a1,T0* a2);
T0* r102keys_item(T102* C,T2 a1);
void r102make_clashes(T102* C,T2 a1);
T0* r102cursor_item(T102* C,T0* a1);
void r102search_position(T102* C,T0* a1);
void r102remove_traversing_cursor(T102* C,T0* a1);
void r102clone_slots(T102* C);
void r102keys_resize(T102* C,T2 a1);
T0* r102items_item(T102* C,T2 a1);
void r102clone_clashes(T102* C);
void r102move_all_cursors_after(T102* C);
void r102make_items(T102* C,T2 a1);
void r102add_traversing_cursor(T102* C,T0* a1);
T6 r102se_assigned_from(T0* a1);
T0* r102clone(T0* a1);
void r102remove_position(T102* C,T2 a1);
void r102make(T102* C,T2 a1);
void r102remove(T102* C,T0* a1);
T0* r102cursor_key(T102* C,T0* a1);
void r102clone_items(T102* C);
T6 r102cursor_after(T0* a1);
T6 r102conforms_to(T102* C,T0* a1);
void r102make_keys(T102* C,T2 a1);
T2 r102hash_position(T102* C,T0* a1);
void r102cursor_forth(T102* C,T0* a1);
void r102items_resize(T102* C,T2 a1);
void r102clone_keys(T102* C);
void r102move_cursors_after(T102* C,T2 a1);
void r102resize(T102* C,T2 a1);
T0* r102found_item(T102* C);
void r102make_with_equality_testers(T102* C,T2 a1,T0* a2,T0* a3);
T6 r102found(T102* C);
void r102move_cursors_forth(T102* C,T2 a1);
void r102cursor_start(T102* C,T0* a1);
void r102search(T102* C,T0* a1);
void r102clashes_resize(T102* C,T2 a1);
void r102slots_resize(T102* C,T2 a1);
T0* r102twin(T102* C);
T0* r102new_cursor(T102* C);
void r102make_slots(T102* C,T2 a1);
void r102keys_put(T102* C,T0* a1,T2 a2);
void r102move_all_cursors(T102* C,T2 a1,T2 a2);
T2 r102new_modulus(T2 a1);
T6 r102cursor_off(T0* a1);
void r102items_put(T102* C,T0* a1,T2 a2);
T2 r617new_capacity(T2 a1);
void r617copy(T617* C,T0* a1);
void r617make_equal(T617* C,T2 a1);
T0* r617keys_item(T617* C,T2 a1);
void r617make_clashes(T617* C,T2 a1);
T0* r617cursor_item(T617* C,T0* a1);
void r617search_position(T617* C,T0* a1);
void r617remove_traversing_cursor(T617* C,T0* a1);
void r617clone_slots(T617* C);
void r617keys_resize(T617* C,T2 a1);
void r617clone_clashes(T617* C);
void r617move_all_cursors_after(T617* C);
void r617make_items(T617* C,T2 a1);
void r617add_traversing_cursor(T617* C,T0* a1);
T6 r617se_assigned_from(T0* a1);
T0* r617clone(T0* a1);
void r617clone_items(T617* C);
T6 r617cursor_after(T0* a1);
T6 r617conforms_to(T617* C,T0* a1);
void r617make_keys(T617* C,T2 a1);
T2 r617hash_position(T617* C,T0* a1);
void r617cursor_forth(T617* C,T0* a1);
void r617items_resize(T617* C,T2 a1);
void r617clone_keys(T617* C);
void r617make_with_equality_testers(T617* C,T2 a1,T0* a2,T0* a3);
void r617resize(T617* C,T2 a1);
void r617cursor_start(T617* C,T0* a1);
void r617clashes_resize(T617* C,T2 a1);
void r617slots_resize(T617* C,T2 a1);
T0* r617twin(T617* C);
void r617force_last(T617* C,T0* a1,T0* a2);
T0* r617new_cursor(T617* C);
void r617make_slots(T617* C,T2 a1);
void r617keys_put(T617* C,T0* a1,T2 a2);
T2 r617new_modulus(T2 a1);
T6 r617cursor_off(T0* a1);
void r131clear_all(T0* a1);
T6 r131se_assigned_from(T0* a1);
T0* r131make(T2 a1);
T6 r131conforms_to(T131* C,T0* a1);
T0* r131resize(T0* a1,T2 a2);
T0* r131twin(T131* C);
T2 r93new_capacity(T2 a1);
void r93copy(T93* C,T0* a1);
T6 r93extendible(T93* C,T2 a1);
void r93remove_traversing_cursor(T93* C,T0* a1);
void r93move_all_cursors_after(T93* C);
void r93add_traversing_cursor(T93* C,T0* a1);
T6 r93se_assigned_from(T0* a1);
T0* r93clone(T0* a1);
T6 r93cursor_before(T0* a1);
void r93make(T93* C,T2 a1);
T6 r93cursor_after(T0* a1);
T6 r93conforms_to(T93* C,T0* a1);
void r93resize(T93* C,T2 a1);
T0* r93twin(T93* C);
void r93force_last(T93* C,T0* a1);
T0* r93new_cursor(T93* C);
T6 r93cursor_off(T0* a1);
T2 r316new_capacity(T2 a1);
void r316copy(T316* C,T0* a1);
void r316force(T316* C,T0* a1,T2 a2);
void r316make_clashes(T316* C,T2 a1);
void r316search_position(T316* C,T2 a1);
void r316remove_traversing_cursor(T316* C,T0* a1);
void r316clone_slots(T316* C);
void r316keys_resize(T316* C,T2 a1);
void r316clone_clashes(T316* C);
T0* r316item(T316* C,T2 a1);
void r316move_all_cursors_after(T316* C);
void r316make_items(T316* C,T2 a1);
void r316add_traversing_cursor(T316* C,T0* a1);
T6 r316se_assigned_from(T0* a1);
T0* r316clone(T0* a1);
void r316make(T316* C,T2 a1);
void r316clone_items(T316* C);
T6 r316conforms_to(T316* C,T0* a1);
T6 r316has(T316* C,T2 a1);
void r316make_keys(T316* C,T2 a1);
T2 r316hash_position(T316* C,T2 a1);
void r316items_resize(T316* C,T2 a1);
void r316clone_keys(T316* C);
void r316make_with_equality_testers(T316* C,T2 a1,T0* a2,T0* a3);
void r316resize(T316* C,T2 a1);
void r316clashes_resize(T316* C,T2 a1);
void r316slots_resize(T316* C,T2 a1);
T0* r316twin(T316* C);
T0* r316new_cursor(T316* C);
void r316make_slots(T316* C,T2 a1);
T2 r316new_modulus(T2 a1);
T6 r316cursor_off(T0* a1);
T6 r698se_assigned_from(T0* a1);
T6 r698conforms_to(T698* C,T0* a1);
T0* r698twin(T698* C);
void r418subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r418se_assigned_from(T0* a1);
T6 r418conforms_to(T418* C,T0* a1);
void r418sort_with_comparator(T0* a1,T0* a2);
T0* r418twin(T418* C);
T6 r106se_assigned_from(T0* a1);
T6 r106conforms_to(T106* C,T0* a1);
T6 r106test(T0* a1,T0* a2);
T0* r106twin(T106* C);
T6 r273se_assigned_from(T0* a1);
T0* r273make(T2 a1);
T6 r273conforms_to(T273* C,T0* a1);
T0* r273resize(T0* a1,T2 a2);
T0* r273twin(T273* C);
T2 r368new_capacity(T2 a1);
void r368copy(T368* C,T0* a1);
void r368force(T368* C,T0* a1,T0* a2);
T0* r368keys_item(T368* C,T2 a1);
void r368make_clashes(T368* C,T2 a1);
T0* r368cursor_item(T368* C,T0* a1);
void r368search_position(T368* C,T0* a1);
void r368remove_traversing_cursor(T368* C,T0* a1);
void r368clone_slots(T368* C);
void r368keys_resize(T368* C,T2 a1);
void r368clone_clashes(T368* C);
T0* r368item(T368* C,T0* a1);
void r368move_all_cursors_after(T368* C);
void r368make_items(T368* C,T2 a1);
void r368add_traversing_cursor(T368* C,T0* a1);
T6 r368se_assigned_from(T0* a1);
T0* r368clone(T0* a1);
void r368make(T368* C,T2 a1);
void r368clone_items(T368* C);
T6 r368cursor_after(T0* a1);
T6 r368conforms_to(T368* C,T0* a1);
T6 r368has(T368* C,T0* a1);
void r368make_keys(T368* C,T2 a1);
T2 r368hash_position(T368* C,T0* a1);
void r368cursor_forth(T368* C,T0* a1);
void r368items_resize(T368* C,T2 a1);
void r368clone_keys(T368* C);
void r368make_with_equality_testers(T368* C,T2 a1,T0* a2,T0* a3);
void r368resize(T368* C,T2 a1);
void r368cursor_start(T368* C,T0* a1);
void r368clashes_resize(T368* C,T2 a1);
void r368slots_resize(T368* C,T2 a1);
T0* r368twin(T368* C);
T0* r368new_cursor(T368* C);
void r368make_slots(T368* C,T2 a1);
void r368keys_put(T368* C,T0* a1,T2 a2);
T2 r368new_modulus(T2 a1);
T6 r368cursor_off(T0* a1);
T6 r676se_assigned_from(T0* a1);
T0* r676make(T2 a1);
T6 r676conforms_to(T676* C,T0* a1);
T0* r676resize(T0* a1,T2 a2);
T0* r676twin(T676* C);
T2 r79new_capacity(T2 a1);
void r79copy(T79* C,T0* a1);
T6 r79extendible(T79* C,T2 a1);
void r79remove_traversing_cursor(T79* C,T0* a1);
void r79move_all_cursors_after(T79* C);
void r79add_traversing_cursor(T79* C,T0* a1);
T6 r79se_assigned_from(T0* a1);
T0* r79clone(T0* a1);
T6 r79cursor_before(T0* a1);
void r79make(T79* C,T2 a1);
T6 r79cursor_after(T0* a1);
T6 r79conforms_to(T79* C,T0* a1);
void r79resize(T79* C,T2 a1);
T0* r79twin(T79* C);
void r79force_last(T79* C,T0* a1);
T0* r79new_cursor(T79* C);
void r79put_last(T79* C,T0* a1);
T6 r79cursor_off(T0* a1);
void r409copy(T409* C,T0* a1);
T6 r409se_assigned_from(T0* a1);
T6 r409off(T409* C);
T6 r409conforms_to(T409* C,T0* a1);
T0* r409twin(T409* C);
T6 r417se_assigned_from(T0* a1);
T6 r417conforms_to(T417* C,T0* a1);
T6 r417less_than(T2 a1,T2 a2);
T0* r417twin(T417* C);
T6 r541se_assigned_from(T0* a1);
T0* r541make(T2 a1);
T6 r541conforms_to(T541* C,T0* a1);
T0* r541resize(T0* a1,T2 a2);
T0* r541twin(T541* C);
void r345copy(T345* C,T0* a1);
T6 r345se_assigned_from(T0* a1);
T6 r345off(T345* C);
T6 r345conforms_to(T345* C,T0* a1);
T0* r345twin(T345* C);
extern T0*oBC666target_attribute_name;
extern int fBC666target_attribute_name;
T0* r666target_attribute_name(void);
T6 r666se_assigned_from(T0* a1);
extern T0*oBC666as_attribute_name;
extern int fBC666as_attribute_name;
T0* r666as_attribute_name(void);
void r666make(T666* C,T0* a1,T0* a2);
T0* r666uc_attribute_value(T666* C,T0* a1);
T6 r666conforms_to(T666* C,T0* a1);
T0* r666twin(T666* C);
void r666interpreting_element_make(T666* C,T0* a1,T0* a2);
T0* r666new_unicode_string(T0* a1);
extern T0*oBC33unix_file_system;
extern T0*oBC33file_system;
extern int fBC33file_system;
T0* r487file_system(void);
T6 r487se_assigned_from(T0* a1);
T0* r487clone(T0* a1);
extern T0*oBC34operating_system;
T6 r487conforms_to(T487* C,T0* a1);
void r487execute(T487* C);
T0* r487twin(T487* C);
extern T0*oBC33windows_file_system;
void r487execute_shell(T487* C,T0* a1);
T6 r487is_executable(T487* C);
void r225build(T225* C);
T2 r225previous_symbol(T225* C,T2 a1);
void r225put(T225* C,T2 a1);
T6 r225se_assigned_from(T0* a1);
T0* r225to_array(T225* C,T2 a1,T2 a2);
void r225make(T225* C,T2 a1,T2 a2);
void r225equiv_add(T225* C,T0* a1);
T6 r225conforms_to(T225* C,T0* a1);
void r225equiv_initialize(T225* C);
T2 r225equivalence_class(T225* C,T2 a1);
void r225add(T225* C,T0* a1);
T6 r225is_representative(T225* C,T2 a1);
T0* r225twin(T225* C);
void r225initialize(T225* C);
void r225equiv_put(T225* C,T2 a1);
extern T0*oBC19string_;
extern T0*oBC532stylesheet_filename_attribute_name;
extern int fBC532stylesheet_filename_attribute_name;
T0* r532stylesheet_filename_attribute_name(void);
extern T0*oBC532format_attribute_name;
extern int fBC532format_attribute_name;
T0* r532format_attribute_name(void);
T0* r532file_system(void);
extern T0*oBC532input_filename_attribute_name;
extern int fBC532input_filename_attribute_name;
T0* r532input_filename_attribute_name(void);
T6 r532se_assigned_from(T0* a1);
extern T0*oBC57unless_attribute_name;
extern int fBC57unless_attribute_name;
T0* r532unless_attribute_name(void);
void r532make(T532* C,T0* a1,T0* a2);
T0* r532uc_attribute_value(T532* C,T0* a1);
void r532task_make(T532* C,T0* a1,T0* a2);
T6 r532conforms_to(T532* C,T0* a1);
extern T0*oBC532output_filename_attribute_name;
extern int fBC532output_filename_attribute_name;
T0* r532output_filename_attribute_name(void);
extern T0*oBC57dir_attribute_name;
extern int fBC57dir_attribute_name;
T0* r532dir_attribute_name(void);
extern T0*oBC532indent_attribute_name;
extern int fBC532indent_attribute_name;
T0* r532indent_attribute_name(void);
void r532execute(T532* C);
extern T0*oBC532classpath_attribute_name;
extern int fBC532classpath_attribute_name;
T0* r532classpath_attribute_name(void);
T6 r532is_enabled(T532* C);
extern T0*oBC532processor_attribute_value_xalan_java;
extern int fBC532processor_attribute_value_xalan_java;
T0* r532processor_attribute_value_xalan_java(void);
extern T0*oBC532extdirs_attribute_name;
extern int fBC532extdirs_attribute_name;
T0* r532extdirs_attribute_name(void);
extern T0*oBC532processor_attribute_value_xalan_cpp;
extern int fBC532processor_attribute_value_xalan_cpp;
T0* r532processor_attribute_value_xalan_cpp(void);
T0* r532twin(T532* C);
extern T0*oBC532parameter_element_name;
extern int fBC532parameter_element_name;
T0* r532parameter_element_name(void);
extern T0*oBC57if_attribute_name;
extern int fBC57if_attribute_name;
T0* r532if_attribute_name(void);
void r532interpreting_element_make(T532* C,T0* a1,T0* a2);
T0* r532new_unicode_string(T0* a1);
extern T0*oBC532processor_attribute_name;
extern int fBC532processor_attribute_name;
T0* r532processor_attribute_name(void);
void r187build(T187* C);
void r187build_accept_table(T187* C);
void r187initialize_dfa(T187* C,T0* a1,T2 a2,T2 a3);
T6 r187se_assigned_from(T0* a1);
void r187put_start_condition(T187* C,T0* a1);
void r187set_nfa_state_ids(T0* a1);
void r187make(T187* C,T0* a1);
void r187build_eof_rules(T187* C,T0* a1,T2 a2,T2 a3);
T6 r187conforms_to(T187* C,T0* a1);
T0* r187twin(T187* C);
void r187build_transitions(T187* C,T0* a1);
void r187initialize(T187* C,T0* a1);
void r187put_eob_state(T187* C);
void r187build_rules(T187* C,T0* a1);
void r187build_nxt_table(T187* C);
T0* r187new_state(T187* C,T0* a1);
T6 r558se_assigned_from(T0* a1);
T6 r558conforms_to(T558* C,T0* a1);
void r558execute(T558* C);
T0* r558twin(T558* C);
T6 r702se_assigned_from(T0* a1);
T6 r702conforms_to(T702* C,T0* a1);
T0* r702twin(T702* C);
T6 r182se_assigned_from(T0* a1);
T6 r182recognizes(T182* C,T0* a1);
T6 r182conforms_to(T182* C,T0* a1);
void r182compile(T182* C,T0* a1,T6 a2);
T0* r182twin(T182* C);
T2 r182longest_end_position(T182* C,T0* a1,T2 a2);
T0* r143pathname_from_file_system(T143* C,T0* a1,T0* a2);
T6 r143is_absolute_pathname(T0* a1);
T0* r143current_working_directory(T143* C);
void r143cd(T143* C,T0* a1);
T6 r143file_exists(T0* a1);
T6 r143directory_exists(T0* a1);
void r143recursive_delete_directory(T0* a1);
T0* r143absolute_pathname(T143* C,T0* a1);
T6 r143se_assigned_from(T0* a1);
T6 r143is_directory_readable(T0* a1);
T0* r143clone(T0* a1);
T0* r143dirname(T0* a1);
void r143delete_file(T0* a1);
void r143set_current_working_directory(T143* C,T0* a1);
T0* r143cwd(T143* C);
T6 r143same_type(T143* C,T0* a1);
T6 r143is_file_readable(T0* a1);
void r143recursive_create_directory(T0* a1);
extern T0*oBC139tmp_file;
extern int fBC139tmp_file;
T0* r143tmp_file(void);
T6 r143conforms_to(T143* C,T0* a1);
void r143copy_file(T0* a1,T0* a2);
T0* r143string_to_pathname(T0* a1);
void r143rename_file(T0* a1,T0* a2);
T2 r143file_time_stamp(T0* a1);
extern T0*oBC143root_directory;
T6 r143is_root_directory(T0* a1);
T6 r143same_physical_file(T0* a1,T0* a2);
T0* r143pathname_to_string(T0* a1);
T0* r143twin(T143* C);
T0* r143basename(T0* a1);
T0* r143canonical_pathname(T0* a1);
T0* r143pathname(T0* a1,T0* a2);
extern T0*oBC139tmp_directory;
extern int fBC139tmp_directory;
T0* r143tmp_directory(void);
T6 r237is_equal(T237* C,T0* a1);
T6 r237has_transition(T237* C);
T6 r237se_assigned_from(T0* a1);
T6 r237conforms_to(T237* C,T0* a1);
T6 r237_px_60(T237* C,T0* a1);
T6 r237is_accepting_head(T237* C);
T0* r237twin(T237* C);
T0* r76attribute_value_by_name(T76* C,T0* a1);
void r76add_attributes(T76* C,T0* a1);
T0* r76child_by_name(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76add_attribute(T76* C,T0* a1);
void r76make(T76* C,T0* a1);
T0* r76children_by_name(T76* C,T0* a1);
T6 r76conforms_to(T76* C,T0* a1);
void r76make_attribute_handler(T76* C);
extern T0*oBC76empty_string;
extern int fBC76empty_string;
T0* r76empty_string(void);
T0* r76twin(T76* C);
void r76make_composite(T76* C);
T0* r76new_unicode_string(T0* a1);
T6 r76has_attribute(T76* C,T0* a1);
extern T0*oBC166case_insensitive_attribute_name;
extern int fBC166case_insensitive_attribute_name;
T0* r166case_insensitive_attribute_name(void);
extern T0*oBC166no_style_warning_attribute_name;
extern int fBC166no_style_warning_attribute_name;
T0* r166no_style_warning_attribute_name(void);
T0* r166attribute_value(T166* C,T0* a1);
T0* r166file_system(void);
T6 r166se_assigned_from(T0* a1);
extern T0*oBC166creation_procedure_attribute_name;
extern int fBC166creation_procedure_attribute_name;
T0* r166creation_procedure_attribute_name(void);
T0* r166unless_attribute_name(void);
extern T0*oBC17std;
T6 r166uc_boolean_value(T166* C,T0* a1);
void r166make(T166* C,T0* a1,T0* a2);
extern T0*oBC58true_attribute_value;
extern int fBC58true_attribute_value;
T0* r166true_attribute_value(void);
T0* r166uc_attribute_value(T166* C,T0* a1);
void r166task_make(T166* C,T0* a1,T0* a2);
T6 r166conforms_to(T166* C,T0* a1);
T0* r166dir_attribute_name(void);
extern T0*oBC166executable_attribute_name;
extern int fBC166executable_attribute_name;
T0* r166executable_attribute_name(void);
void r166execute(T166* C);
extern T0*oBC166ace_attribute_name;
extern int fBC166ace_attribute_name;
T0* r166ace_attribute_name(void);
T0* r166uc_attribute_value_or_default(T166* C,T0* a1,T0* a2);
T6 r166is_enabled(T166* C);
extern T0*oBC166root_class_attribute_name;
extern int fBC166root_class_attribute_name;
T0* r166root_class_attribute_name(void);
T0* r166attribute_value_or_default(T166* C,T0* a1,T0* a2);
T0* r166twin(T166* C);
T0* r166if_attribute_name(void);
extern T0*oBC58false_attribute_value;
extern int fBC58false_attribute_value;
T0* r166false_attribute_value(void);
void r166interpreting_element_make(T166* C,T0* a1,T0* a2);
extern T0*oBC166clean_attribute_name;
extern int fBC166clean_attribute_name;
T0* r166clean_attribute_name(void);
T0* r166new_unicode_string(T0* a1);
T6 r80se_assigned_from(T0* a1);
void r80make(T80* C,T0* a1,T0* a2);
T6 r80conforms_to(T80* C,T0* a1);
T0* r80twin(T80* C);
void r305copy(T305* C,T0* a1);
void r305move_cursors_right(T305* C,T2 a1,T2 a2);
void r305put(T305* C,T0* a1,T2 a2);
void r305remove_traversing_cursor(T305* C,T0* a1);
void r305move_all_cursors_after(T305* C);
void r305make_with_initial(T305* C,T2 a1);
void r305add_traversing_cursor(T305* C,T0* a1);
T6 r305se_assigned_from(T0* a1);
T0* r305clone(T0* a1);
T0* r305names(T305* C);
void r305add_nfa_to_non_exclusive(T305* C,T0* a1);
T6 r305cursor_before(T0* a1);
void r305make(T305* C,T2 a1);
T6 r305cursor_after(T0* a1);
T6 r305conforms_to(T305* C,T0* a1);
void r305move_right(T305* C,T2 a1,T2 a2);
void r305add_nfa_to_all(T305* C,T0* a1);
T0* r305twin(T305* C);
T0* r305new_cursor(T305* C);
void r305put_last(T305* C,T0* a1);
T6 r305cursor_off(T0* a1);
T0* r494file_system(void);
T6 r494se_assigned_from(T0* a1);
T0* r494clone(T0* a1);
void r494make(T494* C,T0* a1);
T6 r494conforms_to(T494* C,T0* a1);
T6 r494is_validate_executable(T494* C);
void r494_164Pmake(T494* C,T0* a1);
T6 r494is_system_executable(T494* C);
void r494execute(T494* C);
T0* r494twin(T494* C);
T6 r494is_cluster_executable(T494* C);
void r494execute_shell(T494* C,T0* a1);
T6 r494is_executable(T494* C);
extern T0*oBC15arguments;
extern int fBC15arguments;
T0* r713arguments(void);
T6 r713se_assigned_from(T0* a1);
void r713make(T713* C,T0* a1);
T0* r713message(T713* C,T0* a1);
T6 r713conforms_to(T713* C,T0* a1);
T0* r713twin(T713* C);
T0* r713default_message(T713* C);
extern T0*oBC511tokens_classname_attribute_name;
extern int fBC511tokens_classname_attribute_name;
T0* r511tokens_classname_attribute_name(void);
T0* r511file_system(void);
extern T0*oBC511input_filename_attribute_name;
extern int fBC511input_filename_attribute_name;
T0* r511input_filename_attribute_name(void);
T6 r511se_assigned_from(T0* a1);
extern T0*oBC511separate_actions_attribute_name;
extern int fBC511separate_actions_attribute_name;
T0* r511separate_actions_attribute_name(void);
T0* r511unless_attribute_name(void);
extern T0*oBC511tokens_filename_attribute_name;
extern int fBC511tokens_filename_attribute_name;
T0* r511tokens_filename_attribute_name(void);
T6 r511uc_boolean_value(T511* C,T0* a1);
void r511make(T511* C,T0* a1,T0* a2);
T0* r511true_attribute_value(void);
T0* r511uc_attribute_value(T511* C,T0* a1);
void r511task_make(T511* C,T0* a1,T0* a2);
T6 r511conforms_to(T511* C,T0* a1);
extern T0*oBC511output_filename_attribute_name;
extern int fBC511output_filename_attribute_name;
T0* r511output_filename_attribute_name(void);
T0* r511dir_attribute_name(void);
void r511execute(T511* C);
T6 r511is_enabled(T511* C);
T0* r511twin(T511* C);
T0* r511if_attribute_name(void);
extern T0*oBC511verbose_filename_attribute_name;
extern int fBC511verbose_filename_attribute_name;
T0* r511verbose_filename_attribute_name(void);
T0* r511false_attribute_value(void);
void r511interpreting_element_make(T511* C,T0* a1,T0* a2);
T0* r511new_unicode_string(T0* a1);
T6 r612se_assigned_from(T0* a1);
T6 r612conforms_to(T612* C,T0* a1);
T0* r612twin(T612* C);
T6 r612is_executable(T612* C);
T6 r493has_value(T493* C);
T0* r493name(T493* C);
extern T0*oBC493name_attribute_name;
extern int fBC493name_attribute_name;
T0* r493name_attribute_name(void);
T6 r493has_name(T493* C);
T6 r493se_assigned_from(T0* a1);
T0* r493unless_attribute_name(void);
extern T0*oBC493value_attribute_name;
extern int fBC493value_attribute_name;
T0* r493value_attribute_name(void);
void r493make(T493* C,T0* a1,T0* a2);
T0* r493value(T493* C);
T0* r493uc_attribute_value(T493* C,T0* a1);
T6 r493conforms_to(T493* C,T0* a1);
T6 r493is_enabled(T493* C);
T0* r493twin(T493* C);
T0* r493if_attribute_name(void);
T0* r493new_unicode_string(T0* a1);
T0* r380arguments(void);
T6 r380se_assigned_from(T0* a1);
void r380make(T380* C);
T0* r380message(T380* C,T0* a1);
T6 r380conforms_to(T380* C,T0* a1);
T0* r380twin(T380* C);
T0* r380default_message(T380* C);
T0* r559attribute_value(T559* C,T0* a1);
T0* r559file_system(void);
T6 r559se_assigned_from(T0* a1);
T0* r559unless_attribute_name(void);
void r559make(T559* C,T0* a1,T0* a2);
void r559task_make(T559* C,T0* a1,T0* a2);
T6 r559conforms_to(T559* C,T0* a1);
T0* r559dir_attribute_name(void);
void r559execute(T559* C);
T6 r559is_enabled(T559* C);
T0* r559twin(T559* C);
T0* r559if_attribute_name(void);
void r559interpreting_element_make(T559* C,T0* a1,T0* a2);
T0* r559new_unicode_string(T0* a1);
extern T0*oBC559parent_attribute_name;
extern int fBC559parent_attribute_name;
T0* r559parent_attribute_name(void);
T0* r393arguments(void);
T6 r393se_assigned_from(T0* a1);
void r393make(T393* C,T0* a1,T2 a2);
T0* r393message(T393* C,T0* a1);
T6 r393conforms_to(T393* C,T0* a1);
T0* r393twin(T393* C);
T0* r393default_message(T393* C);
T0* r711current_working_directory(T711* C);
T2 r711read_to_string(T711* C,T0* a1,T2 a2,T2 a3);
T6 r711se_assigned_from(T0* a1);
void r711old_read_character(T711* C);
T0* r711clone(T0* a1);
extern T6 oBC47is_windows;
extern int fBC47is_windows;
T6 r711is_windows(T711* C);
T6 r711old_end_of_file(T711* C);
void r711read_character(T711* C);
void r711make(T711* C);
T6 r711conforms_to(T711* C,T0* a1);
extern T6 oBC47is_unix;
extern int fBC47is_unix;
T6 r711is_unix(T711* C);
T0* r711twin(T711* C);
void r193make_null(T193* C);
T6 r193se_assigned_from(T0* a1);
extern T0*oBC194null_output_stream;
extern int fBC194null_output_stream;
T0* r193null_output_stream(void);
void r193report_message(T193* C,T0* a1);
T0* r193message(T0* a1);
T6 r193conforms_to(T193* C,T0* a1);
T0* r193twin(T193* C);
void r193make_standard(T193* C);
void r193report_error(T193* C,T0* a1);
extern T0*oBC175exclude_attribute_name;
extern int fBC175exclude_attribute_name;
T0* r175exclude_attribute_name(void);
extern T0*oBC175directory_attribute_name;
extern int fBC175directory_attribute_name;
T0* r175directory_attribute_name(void);
void r175_57Pmake(T175* C,T0* a1,T0* a2);
T6 r175se_assigned_from(T0* a1);
extern T0*oBC175include_attribute_name;
extern int fBC175include_attribute_name;
T0* r175include_attribute_name(void);
T6 r175uc_boolean_value(T175* C,T0* a1);
void r175make(T175* C,T0* a1,T0* a2);
T0* r175true_attribute_value(void);
extern T0*oBC175force_attribute_name;
extern int fBC175force_attribute_name;
T0* r175force_attribute_name(void);
T0* r175uc_attribute_value(T175* C,T0* a1);
T6 r175conforms_to(T175* C,T0* a1);
extern T0*oBC175map_element_name;
extern int fBC175map_element_name;
T0* r175map_element_name(void);
T0* r175twin(T175* C);
T0* r175false_attribute_value(void);
T0* r175new_unicode_string(T0* a1);
extern T0*oBC175concat_attribute_name;
extern int fBC175concat_attribute_name;
T0* r175concat_attribute_name(void);
T0* r364substring(T364* C,T2 a1,T2 a2);
void r364fill_from_string(T364* C,T0* a1,T2 a2);
T2 r364fill_from_stream(T364* C,T0* a1,T2 a2,T2 a3);
T6 r364se_assigned_from(T0* a1);
void r364move_left(T364* C,T2 a1,T2 a2,T2 a3);
void r364make(T364* C,T2 a1);
T6 r364conforms_to(T364* C,T0* a1);
void r364resize(T364* C,T2 a1);
T0* r364twin(T364* C);
T0* r377arguments(void);
T6 r377se_assigned_from(T0* a1);
void r377make(T377* C,T0* a1,T2 a2);
T0* r377message(T377* C,T0* a1);
T6 r377conforms_to(T377* C,T0* a1);
T0* r377twin(T377* C);
T0* r377default_message(T377* C);
T0* r382arguments(void);
T6 r382se_assigned_from(T0* a1);
void r382make(T382* C);
T0* r382message(T382* C,T0* a1);
T6 r382conforms_to(T382* C,T0* a1);
T0* r382twin(T382* C);
T0* r382default_message(T382* C);
T6 r521se_assigned_from(T0* a1);
T6 r521conforms_to(T521* C,T0* a1);
void r521execute(T521* C);
T0* r521twin(T521* C);
T6 r626se_assigned_from(T0* a1);
T6 r626conforms_to(T626* C,T0* a1);
T0* r626twin(T626* C);
T6 r626is_executable(T626* C);
void r657make_old(T657* C,T0* a1,T0* a2);
T6 r657se_assigned_from(T0* a1);
void r657make(T657* C,T0* a1,T0* a2);
T6 r657conforms_to(T657* C,T0* a1);
extern T0*oBC14exceptions;
extern T0*oBC657parent_element_name;
extern int fBC657parent_element_name;
T0* r657parent_element_name(void);
void r657exit_application(T2 a1,T0* a2);
T0* r657twin(T657* C);
void r657interpreting_element_make(T657* C,T0* a1,T0* a2);
T0* r657new_unicode_string(T0* a1);
T0* r519file_system(void);
T6 r519se_assigned_from(T0* a1);
T6 r519is_filename_executable(T519* C);
T6 r519is_target_executable(T519* C);
T6 r519conforms_to(T519* C,T0* a1);
void r519execute(T519* C);
T0* r519twin(T519* C);
T0* r519new_unicode_string(T0* a1);
T6 r519is_executable(T519* C);
void r658make_old(T658* C,T0* a1,T0* a2);
T6 r658se_assigned_from(T0* a1);
extern T0*oBC658inherit_attribute_name;
extern int fBC658inherit_attribute_name;
T0* r658inherit_attribute_name(void);
T0* r658clone(T0* a1);
extern T0*oBC658redefine_element_name;
extern int fBC658redefine_element_name;
T0* r658redefine_element_name(void);
void r658make(T658* C,T0* a1,T0* a2);
extern T0*oBC658rename_element_name;
extern int fBC658rename_element_name;
T0* r658rename_element_name(void);
T0* r658uc_attribute_value(T658* C,T0* a1);
T6 r658conforms_to(T658* C,T0* a1);
extern T0*oBC658location_attribute_name;
extern int fBC658location_attribute_name;
T0* r658location_attribute_name(void);
extern T0*oBC658select_element_name;
extern int fBC658select_element_name;
T0* r658select_element_name(void);
void r658exit_application(T2 a1,T0* a2);
T0* r658twin(T658* C);
void r658interpreting_element_make(T658* C,T0* a1,T0* a2);
T0* r658new_unicode_string(T0* a1);
T0* r523file_system(void);
T6 r523se_assigned_from(T0* a1);
T6 r523conforms_to(T523* C,T0* a1);
void r523execute(T523* C);
T0* r523twin(T523* C);
T6 r523is_executable(T523* C);
T6 r491se_assigned_from(T0* a1);
T6 r491conforms_to(T491* C,T0* a1);
void r491execute(T491* C);
T0* r491twin(T491* C);
T6 r491is_executable(T491* C);
T0* r510file_system(void);
T6 r510se_assigned_from(T0* a1);
T0* r510clone(T0* a1);
void r510make(T510* C,T0* a1);
T6 r510conforms_to(T510* C,T0* a1);
void r510_164Pmake(T510* C,T0* a1);
void r510execute(T510* C);
T0* r510twin(T510* C);
void r510execute_shell(T510* C,T0* a1);
T6 r510is_executable(T510* C);
T0* r422arguments(void);
T6 r422se_assigned_from(T0* a1);
void r422make(T422* C,T0* a1,T2 a2);
T0* r422message(T422* C,T0* a1);
T6 r422conforms_to(T422* C,T0* a1);
T0* r422twin(T422* C);
T0* r422default_message(T422* C);
T6 r596se_assigned_from(T0* a1);
T6 r596conforms_to(T596* C,T0* a1);
T0* r596twin(T596* C);
T6 r596is_executable(T596* C);
T2 r367new_capacity(T2 a1);
void r367copy(T367* C,T0* a1);
T6 r367extendible(T367* C,T2 a1);
T2 r367last(T367* C);
void r367put(T367* C,T2 a1);
void r367remove_traversing_cursor(T367* C,T0* a1);
void r367move_all_cursors_after(T367* C);
void r367add_traversing_cursor(T367* C,T0* a1);
T6 r367se_assigned_from(T0* a1);
T0* r367clone(T0* a1);
void r367sort(T367* C);
T6 r367arrayed_has(T367* C,T2 a1);
T6 r367cursor_before(T0* a1);
void r367make(T367* C,T2 a1);
void r367convert(T367* C,T0* a1);
T6 r367cursor_after(T0* a1);
extern T0*oBC367sorter;
extern int fBC367sorter;
T0* r367sorter(void);
T6 r367conforms_to(T367* C,T0* a1);
T6 r367has(T367* C,T2 a1);
void r367resize(T367* C,T2 a1);
T0* r367twin(T367* C);
void r367force_last(T367* C,T2 a1);
T0* r367new_cursor(T367* C);
T6 r367cursor_off(T0* a1);
T0* r170file_system(void);
extern T0*oBC170fish_attribute_name;
extern int fBC170fish_attribute_name;
T0* r170fish_attribute_name(void);
T6 r170se_assigned_from(T0* a1);
T0* r170unless_attribute_name(void);
T6 r170uc_boolean_value(T170* C,T0* a1);
void r170make(T170* C,T0* a1,T0* a2);
extern T0*oBC170finalize_attribute_name;
extern int fBC170finalize_attribute_name;
T0* r170finalize_attribute_name(void);
T0* r170true_attribute_value(void);
T0* r170uc_attribute_value(T170* C,T0* a1);
void r170task_make(T170* C,T0* a1,T0* a2);
T6 r170conforms_to(T170* C,T0* a1);
T0* r170dir_attribute_name(void);
void r170execute(T170* C);
extern T0*oBC170ace_attribute_name;
extern int fBC170ace_attribute_name;
T0* r170ace_attribute_name(void);
T0* r170uc_attribute_value_or_default(T170* C,T0* a1,T0* a2);
T6 r170is_enabled(T170* C);
T0* r170attribute_value_or_default(T170* C,T0* a1,T0* a2);
T0* r170twin(T170* C);
extern T0*oBC170system_attribute_name;
extern int fBC170system_attribute_name;
T0* r170system_attribute_name(void);
T0* r170if_attribute_name(void);
T0* r170false_attribute_value(void);
void r170interpreting_element_make(T170* C,T0* a1,T0* a2);
extern T0*oBC170clean_attribute_name;
extern int fBC170clean_attribute_name;
T0* r170clean_attribute_name(void);
T0* r170new_unicode_string(T0* a1);
T0* r177item_mapped_filename(T177* C);
void r177set_include_wc_string(T177* C,T0* a1);
T0* r177file_system(void);
T6 r177se_assigned_from(T0* a1);
T0* r177clone(T0* a1);
void r177scan_internal(T177* C,T0* a1);
void r177make(T177* C,T0* a1);
void r177update_project_variables(T177* C);
void r177forth(T177* C);
T6 r177conforms_to(T177* C,T0* a1);
void r177set_exclude_wc_string(T177* C,T0* a1);
void r177start(T177* C);
void r177execute(T177* C);
T6 r177is_file_outofdate(T0* a1,T0* a2);
T0* r177twin(T177* C);
void r177add_fileset_entry_if_necessary(T177* C,T0* a1);
T0* r177item_filename(T177* C);
T6 r177is_executable(T177* C);
extern int fBC177set_convert_to_filesystem;
void r177set_convert_to_filesystem(T177* C,T6 a1);
extern T0*oBC522directory_attribute_name;
extern int fBC522directory_attribute_name;
T0* r522directory_attribute_name(void);
T0* r522attribute_value(T522* C,T0* a1);
T0* r522file_system(void);
T6 r522se_assigned_from(T0* a1);
T0* r522unless_attribute_name(void);
void r522make(T522* C,T0* a1,T0* a2);
void r522task_make(T522* C,T0* a1,T0* a2);
T6 r522conforms_to(T522* C,T0* a1);
T0* r522dir_attribute_name(void);
void r522execute(T522* C);
T6 r522is_enabled(T522* C);
T0* r522twin(T522* C);
T0* r522if_attribute_name(void);
void r522interpreting_element_make(T522* C,T0* a1,T0* a2);
T0* r522new_unicode_string(T0* a1);
void r304copy(T304* C,T0* a1);
T6 r304se_assigned_from(T0* a1);
T0* r304clone(T0* a1);
T0* r304_ix_12443124(T304* C);
void r304make_symbol(T304* C,T2 a1,T6 a2);
T0* r304_px_38(T304* C,T0* a1);
T6 r304conforms_to(T304* C,T0* a1);
T0* r304_px_124(T304* C,T0* a1);
T0* r304_ix_12442124(T304* C);
T0* r304twin(T304* C);
void r304make_epsilon(T304* C,T6 a1);
T0* r304_ix_12463124(T304* C);
void r304make_symbol_class(T304* C,T0* a1,T6 a2);
T6 r303se_assigned_from(T0* a1);
T6 r303conforms_to(T303* C,T0* a1);
T0* r303twin(T303* C);
T0* r714arguments(void);
T6 r714se_assigned_from(T0* a1);
void r714make(T714* C,T0* a1);
T0* r714message(T714* C,T0* a1);
T6 r714conforms_to(T714* C,T0* a1);
T0* r714twin(T714* C);
T0* r714default_message(T714* C);
T0* r526attribute_value(T526* C,T0* a1);
extern T0*oBC526file_attribute_name;
extern int fBC526file_attribute_name;
T0* r526file_attribute_name(void);
extern T0*oBC526fileset_element_name;
extern int fBC526fileset_element_name;
T0* r526fileset_element_name(void);
T0* r526file_system(void);
T6 r526se_assigned_from(T0* a1);
extern T0*oBC526to_directory_attribute_name;
extern int fBC526to_directory_attribute_name;
T0* r526to_directory_attribute_name(void);
T0* r526unless_attribute_name(void);
extern T0*oBC526to_file_attribute_name;
extern int fBC526to_file_attribute_name;
T0* r526to_file_attribute_name(void);
T6 r526uc_boolean_value(T526* C,T0* a1);
void r526make(T526* C,T0* a1,T0* a2);
T0* r526true_attribute_value(void);
extern T0*oBC526force_attribute_name;
extern int fBC526force_attribute_name;
T0* r526force_attribute_name(void);
T0* r526uc_attribute_value(T526* C,T0* a1);
void r526task_make(T526* C,T0* a1,T0* a2);
T6 r526conforms_to(T526* C,T0* a1);
T0* r526dir_attribute_name(void);
void r526execute(T526* C);
T6 r526is_enabled(T526* C);
T0* r526twin(T526* C);
T0* r526if_attribute_name(void);
T0* r526false_attribute_value(void);
void r526interpreting_element_make(T526* C,T0* a1,T0* a2);
T0* r526new_unicode_string(T0* a1);
T0* r142pathname_from_file_system(T142* C,T0* a1,T0* a2);
T6 r142is_absolute_pathname(T0* a1);
T0* r142current_working_directory(T142* C);
void r142cd(T142* C,T0* a1);
T6 r142file_exists(T0* a1);
T6 r142directory_exists(T0* a1);
void r142recursive_delete_directory(T0* a1);
T0* r142absolute_pathname(T142* C,T0* a1);
T0* r142current_drive(T142* C);
T6 r142se_assigned_from(T0* a1);
T6 r142is_directory_readable(T0* a1);
T0* r142clone(T0* a1);
T0* r142dirname(T0* a1);
void r142delete_file(T0* a1);
void r142set_current_working_directory(T142* C,T0* a1);
T0* r142cwd(T142* C);
T6 r142same_type(T142* C,T0* a1);
T6 r142is_file_readable(T0* a1);
void r142recursive_create_directory(T0* a1);
T0* r142tmp_file(void);
T6 r142conforms_to(T142* C,T0* a1);
void r142copy_file(T0* a1,T0* a2);
T0* r142string_to_pathname(T0* a1);
void r142rename_file(T0* a1,T0* a2);
T2 r142file_time_stamp(T0* a1);
extern T0*oBC142root_directory;
T6 r142is_relative_pathname(T0* a1);
T6 r142is_root_directory(T0* a1);
T6 r142same_physical_file(T0* a1,T0* a2);
T0* r142pathname_to_string(T0* a1);
T0* r142twin(T142* C);
T0* r142canonical_pathname(T0* a1);
T0* r142pathname(T0* a1,T0* a2);
T0* r142tmp_directory(void);
T6 r732is_closed(T732* C);
void r732old_close(T732* C);
T2 r732read_to_string(T732* C,T0* a1,T2 a2,T2 a3);
void r732open_read(T732* C);
T6 r732se_assigned_from(T0* a1);
void r732old_read_character(T732* C);
T6 r732old_end_of_file(T732* C);
void r732read_character(T732* C);
void r732close(T732* C);
void r732make(T732* C,T0* a1);
T6 r732conforms_to(T732* C,T0* a1);
void r732connect_to(T732* C,T0* a1);
void r732read_string(T732* C,T2 a1);
T0* r732twin(T732* C);
void r732old_open_read(T732* C);
T6 r195se_assigned_from(T0* a1);
void r195make(T195* C);
T6 r195conforms_to(T195* C,T0* a1);
T0* r195twin(T195* C);
void r195create_equiv_classes(T195* C);
T0* r518attribute_value(T518* C,T0* a1);
extern T0*oBC518start_target_attribute_name;
extern int fBC518start_target_attribute_name;
T0* r518start_target_attribute_name(void);
T0* r518file_system(void);
T6 r518se_assigned_from(T0* a1);
T0* r518unless_attribute_name(void);
extern T0*oBC518filename_attribute_name;
extern int fBC518filename_attribute_name;
T0* r518filename_attribute_name(void);
T6 r518uc_boolean_value(T518* C,T0* a1);
void r518make(T518* C,T0* a1,T0* a2);
T0* r518true_attribute_value(void);
T0* r518uc_attribute_value(T518* C,T0* a1);
void r518task_make(T518* C,T0* a1,T0* a2);
T6 r518conforms_to(T518* C,T0* a1);
T0* r518dir_attribute_name(void);
void r518execute(T518* C);
T6 r518is_enabled(T518* C);
extern T0*oBC518reuse_variables_attribute_name;
extern int fBC518reuse_variables_attribute_name;
T0* r518reuse_variables_attribute_name(void);
T0* r518twin(T518* C);
T0* r518if_attribute_name(void);
T0* r518false_attribute_value(void);
void r518interpreting_element_make(T518* C,T0* a1,T0* a2);
T0* r518new_unicode_string(T0* a1);
T0* r512file_system(void);
T6 r512se_assigned_from(T0* a1);
T0* r512clone(T0* a1);
void r512make(T512* C,T0* a1);
T6 r512conforms_to(T512* C,T0* a1);
void r512_164Pmake(T512* C,T0* a1);
void r512execute(T512* C);
T0* r512twin(T512* C);
void r512execute_shell(T512* C,T0* a1);
T6 r512is_executable(T512* C);
T0* r514file_system(void);
T6 r514se_assigned_from(T0* a1);
T0* r514clone(T0* a1);
void r514create_directory(T514* C,T0* a1);
T6 r514is_file_executable(T514* C);
void r514make(T514* C,T0* a1);
T6 r514conforms_to(T514* C,T0* a1);
void r514_164Pmake(T514* C,T0* a1);
void r514execute(T514* C);
T6 r514is_file_outofdate(T0* a1,T0* a2);
T0* r514twin(T514* C);
void r514execute_shell(T514* C,T0* a1);
T6 r514is_executable(T514* C);
T6 r514is_fileset_executable(T514* C);
T6 r454se_assigned_from(T0* a1);
T6 r454conforms_to(T454* C,T0* a1);
void r454put_line(T0* a1);
T0* r454twin(T454* C);
T0* r174attribute_value(T174* C,T0* a1);
extern T0*oBC174fileset_element_name;
extern int fBC174fileset_element_name;
T0* r174fileset_element_name(void);
T0* r174file_system(void);
T6 r174se_assigned_from(T0* a1);
T0* r174unless_attribute_name(void);
T6 r174uc_boolean_value(T174* C,T0* a1);
void r174make(T174* C,T0* a1,T0* a2);
T0* r174true_attribute_value(void);
T0* r174uc_attribute_value(T174* C,T0* a1);
void r174task_make(T174* C,T0* a1,T0* a2);
T6 r174conforms_to(T174* C,T0* a1);
T0* r174dir_attribute_name(void);
extern T0*oBC174executable_attribute_name;
extern int fBC174executable_attribute_name;
T0* r174executable_attribute_name(void);
void r174execute(T174* C);
T6 r174is_enabled(T174* C);
T0* r174twin(T174* C);
extern T0*oBC174accept_errors_attribute_name;
extern int fBC174accept_errors_attribute_name;
T0* r174accept_errors_attribute_name(void);
T0* r174if_attribute_name(void);
T0* r174false_attribute_value(void);
void r174interpreting_element_make(T174* C,T0* a1,T0* a2);
T0* r174new_unicode_string(T0* a1);
T0* r381arguments(void);
T6 r381se_assigned_from(T0* a1);
void r381make(T381* C);
T0* r381message(T381* C,T0* a1);
T6 r381conforms_to(T381* C,T0* a1);
T0* r381twin(T381* C);
T0* r381default_message(T381* C);
T6 r527is_fileset_to_directory_executable(T527* C);
T0* r527file_system(void);
T6 r527se_assigned_from(T0* a1);
void r527create_directory(T527* C,T0* a1);
void r527create_directory_for_pathname(T527* C,T0* a1);
T6 r527conforms_to(T527* C,T0* a1);
void r527copy_file(T527* C,T0* a1,T0* a2);
void r527execute(T527* C);
T6 r527is_file_outofdate(T0* a1,T0* a2);
T0* r527twin(T527* C);
T6 r527is_file_to_directory_executable(T527* C);
T6 r527is_file_to_file_executable(T527* C);
T6 r527is_executable(T527* C);
extern T0*oBC555source_attribute_name;
extern int fBC555source_attribute_name;
T0* r555source_attribute_name(void);
extern T0*oBC555target_attribute_name;
extern int fBC555target_attribute_name;
T0* r555target_attribute_name(void);
extern T0*oBC555fileset_element_name;
extern int fBC555fileset_element_name;
T0* r555fileset_element_name(void);
T0* r555file_system(void);
T6 r555se_assigned_from(T0* a1);
T0* r555unless_attribute_name(void);
extern T0*oBC555true_value_attribute_name;
extern int fBC555true_value_attribute_name;
T0* r555true_value_attribute_name(void);
void r555make(T555* C,T0* a1,T0* a2);
T0* r555uc_attribute_value(T555* C,T0* a1);
void r555task_make(T555* C,T0* a1,T0* a2);
T6 r555conforms_to(T555* C,T0* a1);
T0* r555dir_attribute_name(void);
void r555execute(T555* C);
T6 r555is_enabled(T555* C);
extern T0*oBC555false_value_attribute_name;
extern int fBC555false_value_attribute_name;
T0* r555false_value_attribute_name(void);
T0* r555twin(T555* C);
T0* r555if_attribute_name(void);
void r555interpreting_element_make(T555* C,T0* a1,T0* a2);
T0* r555new_unicode_string(T0* a1);
extern T0*oBC555variable_attribute_name;
extern int fBC555variable_attribute_name;
T0* r555variable_attribute_name(void);
T6 r306se_assigned_from(T0* a1);
void r306make(T306* C,T0* a1,T2 a2,T6 a3);
T6 r306conforms_to(T306* C,T0* a1);
T0* r306twin(T306* C);
void r680disconnect(T680* C);
T6 r680se_assigned_from(T0* a1);
T6 r680conforms_to(T680* C,T0* a1);
void r680connect_to(T680* C,T0* a1);
T0* r680twin(T680* C);
T6 r727is_closed(T727* C);
void r727old_close(T727* C);
T6 r727se_assigned_from(T0* a1);
void r727old_open_write(T727* C);
void r727close(T727* C);
void r727make(T727* C,T0* a1);
void r727old_put_string(T727* C,T0* a1);
T6 r727conforms_to(T727* C,T0* a1);
T0* r727twin(T727* C);
void r727open_write(T727* C);
extern T0*oBC665target_attribute_name;
extern int fBC665target_attribute_name;
T0* r665target_attribute_name(void);
T6 r665se_assigned_from(T0* a1);
void r665make(T665* C,T0* a1,T0* a2);
T0* r665uc_attribute_value(T665* C,T0* a1);
T6 r665conforms_to(T665* C,T0* a1);
T0* r665twin(T665* C);
void r665interpreting_element_make(T665* C,T0* a1,T0* a2);
T0* r665new_unicode_string(T0* a1);
extern T0*oBC516define_element_name;
extern int fBC516define_element_name;
T0* r516define_element_name(void);
T0* r516file_system(void);
T6 r516se_assigned_from(T0* a1);
extern T0*oBC516config_filename_attribute_name;
extern int fBC516config_filename_attribute_name;
T0* r516config_filename_attribute_name(void);
T0* r516unless_attribute_name(void);
void r516make(T516* C,T0* a1,T0* a2);
T0* r516uc_attribute_value(T516* C,T0* a1);
void r516task_make(T516* C,T0* a1,T0* a2);
T6 r516conforms_to(T516* C,T0* a1);
T0* r516dir_attribute_name(void);
extern T0*oBC516compile_attribute_name;
extern int fBC516compile_attribute_name;
T0* r516compile_attribute_name(void);
void r516execute(T516* C);
T6 r516is_enabled(T516* C);
T0* r516twin(T516* C);
T0* r516if_attribute_name(void);
void r516interpreting_element_make(T516* C,T0* a1,T0* a2);
T0* r516new_unicode_string(T0* a1);
void r211make_default(T211* C,T2 a1);
T6 r211se_assigned_from(T0* a1);
extern T0*oBC211dummy_pattern;
extern int fBC211dummy_pattern;
T0* r211dummy_pattern(void);
T6 r211conforms_to(T211* C,T0* a1);
T6 r211_px_60(T211* C,T0* a1);
extern T0*oBC211dummy_action;
extern int fBC211dummy_action;
T0* r211dummy_action(void);
T0* r211twin(T211* C);
T0* r528attribute_value(T528* C,T0* a1);
extern T0*oBC528file_attribute_name;
extern int fBC528file_attribute_name;
T0* r528file_attribute_name(void);
T0* r528file_system(void);
T6 r528se_assigned_from(T0* a1);
extern T0*oBC528to_directory_attribute_name;
extern int fBC528to_directory_attribute_name;
T0* r528to_directory_attribute_name(void);
T0* r528unless_attribute_name(void);
extern T0*oBC528to_file_attribute_name;
extern int fBC528to_file_attribute_name;
T0* r528to_file_attribute_name(void);
void r528make(T528* C,T0* a1,T0* a2);
void r528task_make(T528* C,T0* a1,T0* a2);
T6 r528conforms_to(T528* C,T0* a1);
T0* r528dir_attribute_name(void);
void r528execute(T528* C);
T6 r528is_enabled(T528* C);
T0* r528twin(T528* C);
T0* r528if_attribute_name(void);
void r528interpreting_element_make(T528* C,T0* a1,T0* a2);
T0* r528new_unicode_string(T0* a1);
T6 r689is_closed(T689* C);
T6 r689old_end_of_input(T689* C);
void r689open_read(T689* C);
T0* r689file_system(void);
T6 r689se_assigned_from(T0* a1);
T0* r689clone(T0* a1);
void r689create_directory(T689* C);
T6 r689is_open_read(T689* C);
void r689close(T689* C);
T6 r689exists(T689* C);
void r689recursive_create_directory(T689* C);
void r689read_entry(T689* C);
T6 r689conforms_to(T689* C,T0* a1);
void r689delete(T689* C);
T0* r689twin(T689* C);
void r689recursive_delete(T689* C);
T6 r689is_readable(T689* C);
extern T0*oBC664target_attribute_name;
extern int fBC664target_attribute_name;
T0* r664target_attribute_name(void);
T6 r664se_assigned_from(T0* a1);
void r664make(T664* C,T0* a1,T0* a2);
T0* r664uc_attribute_value(T664* C,T0* a1);
T6 r664conforms_to(T664* C,T0* a1);
T0* r664twin(T664* C);
void r664interpreting_element_make(T664* C,T0* a1,T0* a2);
T0* r664new_unicode_string(T0* a1);
T2 r771new_capacity(T2 a1);
void r771copy(T771* C,T0* a1);
T6 r771extendible(T771* C,T2 a1);
void r771remove_traversing_cursor(T771* C,T0* a1);
void r771move_all_cursors_after(T771* C);
void r771add_traversing_cursor(T771* C,T0* a1);
T6 r771se_assigned_from(T0* a1);
T0* r771clone(T0* a1);
T6 r771cursor_before(T0* a1);
void r771ds_arrayed_list_make(T771* C,T2 a1);
T6 r771cursor_after(T0* a1);
T6 r771conforms_to(T771* C,T0* a1);
void r771resize(T771* C,T2 a1);
void r771make_from_bilinear(T771* C,T0* a1);
T0* r771twin(T771* C);
void r771force_last(T771* C,T0* a1);
T0* r771new_cursor(T771* C);
void r771put_last(T771* C,T0* a1);
T6 r771cursor_off(T0* a1);
T0* r530file_system(void);
extern T0*oBC530name_attribute_name;
extern int fBC530name_attribute_name;
T0* r530name_attribute_name(void);
T6 r530se_assigned_from(T0* a1);
T0* r530unless_attribute_name(void);
extern T0*oBC530value_attribute_name;
extern int fBC530value_attribute_name;
T0* r530value_attribute_name(void);
void r530make(T530* C,T0* a1,T0* a2);
T0* r530uc_attribute_value(T530* C,T0* a1);
void r530task_make(T530* C,T0* a1,T0* a2);
T6 r530conforms_to(T530* C,T0* a1);
T0* r530dir_attribute_name(void);
void r530execute(T530* C);
T6 r530is_enabled(T530* C);
T0* r530twin(T530* C);
T0* r530if_attribute_name(void);
void r530interpreting_element_make(T530* C,T0* a1,T0* a2);
T0* r530new_unicode_string(T0* a1);
T6 r171is_cleanable(T171* C);
T0* r171file_system(void);
T6 r171se_assigned_from(T0* a1);
T0* r171clone(T0* a1);
void r171execute_clean(T171* C);
void r171execute_compile(T171* C);
T6 r171conforms_to(T171* C,T0* a1);
T6 r171is_compilable(T171* C);
void r171execute(T171* C);
T0* r171twin(T171* C);
void r171execute_shell(T171* C,T0* a1);
T6 r171is_executable(T171* C);
T0* r168file_system(void);
T6 r168se_assigned_from(T0* a1);
T0* r168unless_attribute_name(void);
T6 r168uc_boolean_value(T168* C,T0* a1);
void r168make(T168* C,T0* a1,T0* a2);
extern T0*oBC168finalize_attribute_name;
extern int fBC168finalize_attribute_name;
T0* r168finalize_attribute_name(void);
T0* r168true_attribute_value(void);
T0* r168uc_attribute_value(T168* C,T0* a1);
void r168task_make(T168* C,T0* a1,T0* a2);
T6 r168conforms_to(T168* C,T0* a1);
T0* r168dir_attribute_name(void);
void r168execute(T168* C);
extern T0*oBC168ace_attribute_name;
extern int fBC168ace_attribute_name;
T0* r168ace_attribute_name(void);
T0* r168uc_attribute_value_or_default(T168* C,T0* a1,T0* a2);
T6 r168is_enabled(T168* C);
T0* r168attribute_value_or_default(T168* C,T0* a1,T0* a2);
T0* r168twin(T168* C);
extern T0*oBC168finish_freezing_attribute_name;
extern int fBC168finish_freezing_attribute_name;
T0* r168finish_freezing_attribute_name(void);
extern T0*oBC168system_attribute_name;
extern int fBC168system_attribute_name;
T0* r168system_attribute_name(void);
T0* r168if_attribute_name(void);
T0* r168false_attribute_value(void);
void r168interpreting_element_make(T168* C,T0* a1,T0* a2);
extern T0*oBC168clean_attribute_name;
extern int fBC168clean_attribute_name;
T0* r168clean_attribute_name(void);
T0* r168new_unicode_string(T0* a1);
void r361set_position(T361* C,T2 a1,T2 a2,T2 a3);
T6 r361se_assigned_from(T0* a1);
void r361make(T361* C,T0* a1);
T6 r361conforms_to(T361* C,T0* a1);
void r361make_from_buffer(T361* C,T0* a1);
T0* r361twin(T361* C);
T6 r456is_equal(T456* C,T0* a1);
T0* r456file_system(void);
T6 r456se_assigned_from(T0* a1);
void r456make(T456* C,T0* a1,T0* a2);
T2 r456hash_code(T456* C);
T6 r456conforms_to(T456* C,T0* a1);
T0* r456mapped_filename_converted(T456* C);
T0* r456filename_converted(T456* C);
T0* r456twin(T456* C);
T0* r376arguments(void);
T6 r376se_assigned_from(T0* a1);
void r376make(T376* C,T0* a1,T2 a2,T0* a3);
T0* r376message(T376* C,T0* a1);
T6 r376conforms_to(T376* C,T0* a1);
T0* r376twin(T376* C);
T0* r376default_message(T376* C);
T6 r423se_assigned_from(T0* a1);
T6 r423conforms_to(T423* C,T0* a1);
T0* r423twin(T423* C);
extern T0*oBC524directory_attribute_name;
extern int fBC524directory_attribute_name;
T0* r524directory_attribute_name(void);
T0* r524attribute_value(T524* C,T0* a1);
extern T0*oBC524file_attribute_name;
extern int fBC524file_attribute_name;
T0* r524file_attribute_name(void);
extern T0*oBC524fileset_element_name;
extern int fBC524fileset_element_name;
T0* r524fileset_element_name(void);
T0* r524file_system(void);
T6 r524se_assigned_from(T0* a1);
T0* r524unless_attribute_name(void);
void r524make(T524* C,T0* a1,T0* a2);
void r524task_make(T524* C,T0* a1,T0* a2);
T6 r524conforms_to(T524* C,T0* a1);
T0* r524dir_attribute_name(void);
void r524execute(T524* C);
T6 r524is_enabled(T524* C);
T0* r524twin(T524* C);
T0* r524if_attribute_name(void);
void r524interpreting_element_make(T524* C,T0* a1,T0* a2);
T0* r524new_unicode_string(T0* a1);
T0* r517file_system(void);
T6 r517se_assigned_from(T0* a1);
T0* r517clone(T0* a1);
void r517make(T517* C,T0* a1);
T6 r517conforms_to(T517* C,T0* a1);
void r517_164Pmake(T517* C,T0* a1);
void r517execute(T517* C);
T0* r517twin(T517* C);
void r517execute_shell(T517* C,T0* a1);
T6 r517is_executable(T517* C);
T0* r379arguments(void);
T6 r379se_assigned_from(T0* a1);
void r379make(T379* C,T0* a1,T2 a2,T0* a3);
T0* r379message(T379* C,T0* a1);
T6 r379conforms_to(T379* C,T0* a1);
T0* r379twin(T379* C);
T0* r379default_message(T379* C);
void r529move_file(T529* C,T0* a1,T0* a2);
T6 r529is_fileset_to_directory_executable(T529* C);
T0* r529file_system(void);
T6 r529se_assigned_from(T0* a1);
void r529create_directory(T529* C,T0* a1);
void r529create_directory_for_pathname(T529* C,T0* a1);
T6 r529conforms_to(T529* C,T0* a1);
void r529execute(T529* C);
T0* r529twin(T529* C);
T6 r529is_file_to_directory_executable(T529* C);
T6 r529is_file_to_file_executable(T529* C);
T6 r529is_executable(T529* C);
extern T0*oBC644inherit_element_name;
extern int fBC644inherit_element_name;
T0* r644inherit_element_name(void);
extern T0*oBC644name_attribute_name;
extern int fBC644name_attribute_name;
T0* r644name_attribute_name(void);
T6 r644se_assigned_from(T0* a1);
T0* r644clone(T0* a1);
extern T0*oBC644inherit_attribute_name;
extern int fBC644inherit_attribute_name;
T0* r644inherit_attribute_name(void);
extern T0*oBC58description_element_name;
extern int fBC58description_element_name;
T0* r644description_element_name(void);
T6 r644has_inherit_element(T644* C);
extern T0*oBC644default_attribute_name;
extern int fBC644default_attribute_name;
T0* r644default_attribute_name(void);
void r644make(T644* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r644load_parent_projects(T644* C);
T6 r644conforms_to(T644* C,T0* a1);
T0* r644description(T644* C);
T6 r644has_description(T644* C);
extern T0*oBC644target_element_name;
extern int fBC644target_element_name;
T0* r644target_element_name(void);
void r644exit_application(T2 a1,T0* a2);
T0* r644twin(T644* C);
T0* r644new_unicode_string(T0* a1);
T0* r488file_system(void);
extern T0*oBC488name_attribute_name;
extern int fBC488name_attribute_name;
T0* r488name_attribute_name(void);
T6 r488se_assigned_from(T0* a1);
T0* r488unless_attribute_name(void);
extern T0*oBC488value_attribute_name;
extern int fBC488value_attribute_name;
T0* r488value_attribute_name(void);
void r488make(T488* C,T0* a1,T0* a2);
T0* r488uc_attribute_value(T488* C,T0* a1);
void r488task_make(T488* C,T0* a1,T0* a2);
T6 r488conforms_to(T488* C,T0* a1);
T0* r488dir_attribute_name(void);
void r488execute(T488* C);
T6 r488is_enabled(T488* C);
T0* r488twin(T488* C);
T0* r488if_attribute_name(void);
void r488interpreting_element_make(T488* C,T0* a1,T0* a2);
T0* r488new_unicode_string(T0* a1);
T6 r207is_equal(T207* C,T0* a1);
extern T0*oBC207rule_sorter;
extern int fBC207rule_sorter;
T0* r207rule_sorter(void);
T6 r207se_assigned_from(T0* a1);
extern T0*oBC207bubble_sorter;
extern int fBC207bubble_sorter;
T0* r207bubble_sorter(void);
T6 r207same_type(T207* C,T0* a1);
void r207make(T207* C,T0* a1,T2 a2,T2 a3);
void r207partition(T207* C,T0* a1);
T6 r207conforms_to(T207* C,T0* a1);
T6 r207is_accepting(T207* C);
T0* r207twin(T207* C);
T0* r207new_state(T207* C,T2 a1);
T0* r486file_system(void);
T6 r486se_assigned_from(T0* a1);
T0* r486unless_attribute_name(void);
void r486make(T486* C,T0* a1,T0* a2);
T0* r486uc_attribute_value(T486* C,T0* a1);
void r486task_make(T486* C,T0* a1,T0* a2);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486dir_attribute_name(void);
extern T0*oBC486executable_attribute_name;
extern int fBC486executable_attribute_name;
T0* r486executable_attribute_name(void);
void r486execute(T486* C);
T6 r486is_enabled(T486* C);
T0* r486twin(T486* C);
T0* r486if_attribute_name(void);
extern T0*oBC486source_filename_attribute_name;
extern int fBC486source_filename_attribute_name;
T0* r486source_filename_attribute_name(void);
void r486interpreting_element_make(T486* C,T0* a1,T0* a2);
T0* r486new_unicode_string(T0* a1);
void r37calculate_depend_order(T37* C,T0* a1);
void r37build(T37* C);
void r37trace(T37* C,T0* a1);
void r37build_target(T37* C,T0* a1);
T6 r37se_assigned_from(T0* a1);
void r37log(T0* a1);
void r37make(T37* C,T0* a1,T0* a2);
T6 r37conforms_to(T37* C,T0* a1);
T0* r37target_name(T37* C,T0* a1);
void r37trace_debug(T37* C,T0* a1);
void r37execute_target(T37* C,T0* a1,T6 a2,T6 a3);
void r37merge_in_parent_projects(T37* C);
void r37exit_application(T2 a1,T0* a2);
T0* r37twin(T37* C);
void r226build(T226* C);
void r226put(T226* C,T2 a1);
T2 r226upper(T226* C);
T2 r226lower(T226* C);
T6 r226se_assigned_from(T0* a1);
T0* r226to_array(T226* C,T2 a1,T2 a2);
void r226make(T226* C,T2 a1,T2 a2);
T6 r226conforms_to(T226* C,T0* a1);
T2 r226equivalence_class(T226* C,T2 a1);
void r226add(T226* C,T0* a1);
T6 r226is_representative(T226* C,T2 a1);
T0* r226twin(T226* C);
void r226initialize(T226* C);
T6 r525is_directory_executable(T525* C);
T0* r525file_system(void);
T6 r525se_assigned_from(T0* a1);
T6 r525is_file_executable(T525* C);
T6 r525conforms_to(T525* C,T0* a1);
void r525execute(T525* C);
T0* r525twin(T525* C);
T6 r525is_executable(T525* C);
T0* r88out(T88* C);
void r88copy(T88* C,T0* a1);
T0* r88substring(T88* C,T2 a1,T2 a2);
T2 r88shifted_byte_index(T88* C,T2 a1,T2 a2);
void r88remove_first(T88* C,T2 a1);
T2 r88item_code(T88* C,T2 a1);
void r88old_keep_tail(T88* C,T2 a1);
void r88put_latin1(T88* C,T3 a1,T2 a2);
void r88remove_between(T88* C,T2 a1,T2 a2);
T6 r88is_equal(T88* C,T0* a1);
T2 r88index_of_code(T88* C,T2 a1,T2 a2);
T3 r88latin1_item(T88* C,T2 a1);
T0* r88item(T88* C,T2 a1);
extern T0*oBC23integer_;
void r88resize_byte_storage(T88* C,T2 a1);
void r88append(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
T2 r88byte_index(T88* C,T2 a1);
T0* r88clone(T0* a1);
void r88make_from_string(T88* C,T0* a1);
T2 r88index_of(T88* C,T0* a1,T2 a2);
void r88out_in_tagged_out_memory(T88* C);
void r88move_bytes_right(T88* C,T2 a1,T2 a2);
T2 r88next_byte_index(T88* C,T2 a1);
T6 r88same_type(T88* C,T0* a1);
T6 r88is_integer(T88* C);
void r88make(T88* C,T2 a1);
void r88old_make_filled(T88* C,T3 a1,T2 a2);
void r88append_string(T88* C,T0* a1);
void r88head(T88* C,T2 a1);
void r88old_remove_tail(T88* C,T2 a1);
T2 r88item_code_at_byte_index(T88* C,T2 a1);
extern T0*oBC25platform;
T0* r88_px_43(T88* C,T0* a1);
void r88extend(T88* C,T3 a1);
T2 r88hash_code(T88* C);
void r88remove_last(T88* C,T2 a1);
T2 r88index_of_latin1(T88* C,T3 a1,T2 a2);
T6 r88conforms_to(T88* C,T0* a1);
T2 r88to_integer(T88* C);
void r88append_latin1(T88* C,T3 a1);
void r88old_keep_head(T88* C,T2 a1);
void r88put_code_at_byte_index(T88* C,T2 a1,T2 a2,T2 a3);
void r88make_from_substring(T88* C,T0* a1,T2 a2,T2 a3);
void r88resize(T88* C,T2 a1);
void r88put_substring_at_byte_index(T88* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
extern T0*oBC13utf8;
void r88from_external_copy(T88* C,T8 a1);
void r88move_bytes_left(T88* C,T2 a1,T2 a2);
void r88old_make(T88* C,T2 a1);
T8 r88to_external(T88* C);
T0* r88old_infix_plus(T88* C,T0* a1);
T0* r88twin(T88* C);
T3 r88latin1_item_at_byte_index(T88* C,T2 a1);
extern T0*oBC24unicode;
void r88put_latin1_at_byte_index(T88* C,T3 a1,T2 a2,T2 a3);
void r88tail(T88* C,T2 a1);
void r88swap(T88* C,T2 a1,T2 a2);
extern T0*oBC513define_element_name;
extern int fBC513define_element_name;
T0* r513define_element_name(void);
T0* r513attribute_value(T513* C,T0* a1);
extern T0*oBC513fileset_element_name;
extern int fBC513fileset_element_name;
T0* r513fileset_element_name(void);
T0* r513file_system(void);
extern T0*oBC513input_filename_attribute_name;
extern int fBC513input_filename_attribute_name;
T0* r513input_filename_attribute_name(void);
T6 r513se_assigned_from(T0* a1);
extern T0*oBC513to_directory_attribute_name;
extern int fBC513to_directory_attribute_name;
T0* r513to_directory_attribute_name(void);
T0* r513unless_attribute_name(void);
T6 r513uc_boolean_value(T513* C,T0* a1);
void r513make(T513* C,T0* a1,T0* a2);
T0* r513true_attribute_value(void);
extern T0*oBC513force_attribute_name;
extern int fBC513force_attribute_name;
T0* r513force_attribute_name(void);
T0* r513uc_attribute_value(T513* C,T0* a1);
void r513task_make(T513* C,T0* a1,T0* a2);
T6 r513conforms_to(T513* C,T0* a1);
extern T0*oBC513output_filename_attribute_name;
extern int fBC513output_filename_attribute_name;
T0* r513output_filename_attribute_name(void);
T0* r513dir_attribute_name(void);
extern T0*oBC513lines_attribute_name;
extern int fBC513lines_attribute_name;
T0* r513lines_attribute_name(void);
void r513execute(T513* C);
T6 r513is_enabled(T513* C);
T0* r513twin(T513* C);
T0* r513if_attribute_name(void);
T0* r513false_attribute_value(void);
void r513interpreting_element_make(T513* C,T0* a1,T0* a2);
T0* r513new_unicode_string(T0* a1);
T0* r556file_system(void);
T6 r556se_assigned_from(T0* a1);
T6 r556is_file_executable(T556* C);
T6 r556conforms_to(T556* C,T0* a1);
void r556execute(T556* C);
T6 r556is_file_outofdate(T0* a1,T0* a2);
T0* r556twin(T556* C);
T6 r556is_executable(T556* C);
T6 r556is_fileset_executable(T556* C);
T6 r489se_assigned_from(T0* a1);
T6 r489conforms_to(T489* C,T0* a1);
void r489execute(T489* C);
T0* r489twin(T489* C);
T6 r489is_executable(T489* C);
T6 r766se_assigned_from(T0* a1);
T6 r766conforms_to(T766* C,T0* a1);
T0* r766twin(T766* C);
void r360fill(T360* C);
void r360compact_left(T360* C);
void r360set_position(T360* C,T2 a1,T2 a2,T2 a3);
T6 r360se_assigned_from(T0* a1);
void r360make_from_string(T360* C,T0* a1);
T6 r360conforms_to(T360* C,T0* a1);
void r360make_from_buffer(T360* C,T0* a1);
void r360resize(T360* C);
void r360make_with_size(T360* C,T0* a1,T2 a2);
T0* r360twin(T360* C);
void r360set_file(T360* C,T0* a1);
void r360flush(T360* C);
T0* r91current_working_directory(T91* C);
T6 r91se_assigned_from(T0* a1);
T0* r91clone(T0* a1);
T6 r91is_windows(T91* C);
void r91make(T91* C);
void r91old_put_string(T0* a1);
T6 r91conforms_to(T91* C,T0* a1);
T6 r91is_unix(T91* C);
void r91put_line(T0* a1);
T0* r91twin(T91* C);
T6 r167is_cleanable(T167* C);
T0* r167file_system(void);
T6 r167se_assigned_from(T0* a1);
T0* r167clone(T0* a1);
T0* r167new_ace_cmdline(T167* C);
T6 r167is_traditional_configuration(T167* C);
T6 r167conforms_to(T167* C,T0* a1);
void r167execute(T167* C);
T0* r167twin(T167* C);
T0* r167new_clean_cmdline(T167* C);
T0* r167new_traditional_cmdline(T167* C);
void r167execute_shell(T167* C,T0* a1);
T6 r167is_executable(T167* C);
T6 r167is_ace_configuration(T167* C);
T0* r378arguments(void);
T6 r378se_assigned_from(T0* a1);
void r378make(T378* C,T0* a1,T2 a2);
T0* r378message(T378* C,T0* a1);
T6 r378conforms_to(T378* C,T0* a1);
T0* r378twin(T378* C);
T0* r378default_message(T378* C);
T0* r44current_working_directory(T44* C);
T6 r44se_assigned_from(T0* a1);
T0* r44clone(T0* a1);
T6 r44is_windows(T44* C);
void r44make(T44* C);
void r44old_put_string(T0* a1);
T6 r44conforms_to(T44* C,T0* a1);
T6 r44is_unix(T44* C);
void r44put_line(T0* a1);
T0* r44twin(T44* C);
T6 r173is_cleanable(T173* C);
T0* r173file_system(void);
T6 r173se_assigned_from(T0* a1);
T0* r173clone(T0* a1);
void r173execute_clean(T173* C);
T6 r173conforms_to(T173* C,T0* a1);
void r173execute_tuner(T173* C);
T6 r173is_compilable(T173* C);
void r173execute(T173* C);
T6 r173is_tunable(T173* C);
T0* r173twin(T173* C);
void r173execute_shell(T173* C,T0* a1);
T6 r173is_executable(T173* C);
extern T0*oBC56se_task_name;
extern int fBC56se_task_name;
T0* r55se_task_name(void);
T0* r55full_name(T55* C);
T0* r55dependencies(T55* C);
extern T0*oBC56exec_task_name;
extern int fBC56exec_task_name;
T0* r55exec_task_name(void);
extern T0*oBC56hact_task_name;
extern int fBC56hact_task_name;
T0* r55hact_task_name(void);
extern T0*oBC55depend_attribute_name;
extern int fBC55depend_attribute_name;
T0* r55depend_attribute_name(void);
extern T0*oBC56precursor_task_name;
extern int fBC56precursor_task_name;
T0* r55precursor_task_name(void);
T6 r55is_equal(T55* C,T0* a1);
void r55_57Pmake(T55* C,T0* a1,T0* a2);
T6 r55conflicts_with(T55* C,T0* a1);
T0* r55dependent_targets(T55* C);
extern T0*oBC56mkdir_task_name;
extern int fBC56mkdir_task_name;
T0* r55mkdir_task_name(void);
extern T0*oBC56geyacc_task_name;
extern int fBC56geyacc_task_name;
T0* r55geyacc_task_name(void);
extern T0*oBC56lcc_task_name;
extern int fBC56lcc_task_name;
T0* r55lcc_task_name(void);
T0* r55file_system(void);
extern T0*oBC55name_attribute_name;
extern int fBC55name_attribute_name;
T0* r55name_attribute_name(void);
T6 r55has_dependencies(T55* C);
T6 r55se_assigned_from(T0* a1);
T0* r55clone(T0* a1);
extern T0*oBC56delete_task_name;
extern int fBC56delete_task_name;
T0* r55delete_task_name(void);
extern T0*oBC56copy_task_name;
extern int fBC56copy_task_name;
T0* r55copy_task_name(void);
extern T0*oBC56exit_task_name;
extern int fBC56exit_task_name;
T0* r55exit_task_name(void);
T0* r55unless_attribute_name(void);
T0* r55description_element_name(void);
T0* r55new_unicode_character(T3 a1);
void r55make(T55* C,T0* a1,T0* a2);
extern T0*oBC56outofdate_task_name;
extern int fBC56outofdate_task_name;
T0* r55outofdate_task_name(void);
extern T0*oBC56getest_task_name;
extern int fBC56getest_task_name;
T0* r55getest_task_name(void);
T6 r55conforms_to(T55* C,T0* a1);
extern T0*oBC56set_task_name;
extern int fBC56set_task_name;
T0* r55set_task_name(void);
T0* r55string_tokens(T0* a1,T3 a2);
T0* r55dir_attribute_name(void);
extern T0*oBC56ise_task_name;
extern int fBC56ise_task_name;
T0* r55ise_task_name(void);
T6 r55has_description(T55* C);
extern T0*oBC56ve_task_name;
extern int fBC56ve_task_name;
T0* r55ve_task_name(void);
void r55show_dependent_targets(T0* a1);
void r55execute(T55* C);
T0* r55seed(T55* C);
T6 r55is_enabled(T55* C);
extern T0*oBC56gepp_task_name;
extern int fBC56gepp_task_name;
T0* r55gepp_task_name(void);
void r55exit_application(T2 a1,T0* a2);
T0* r55final_target(T55* C);
extern T0*oBC56xslt_task_name;
extern int fBC56xslt_task_name;
T0* r55xslt_task_name(void);
extern T0*oBC56geant_task_name;
extern int fBC56geant_task_name;
T0* r55geant_task_name(void);
T0* r55twin(T55* C);
extern T0*oBC56move_task_name;
extern int fBC56move_task_name;
T0* r55move_task_name(void);
extern T0*oBC56setenv_task_name;
extern int fBC56setenv_task_name;
T0* r55setenv_task_name(void);
extern T0*oBC56gexace_task_name;
extern int fBC56gexace_task_name;
T0* r55gexace_task_name(void);
extern T0*oBC56unset_task_name;
extern int fBC56unset_task_name;
T0* r55unset_task_name(void);
T0* r55if_attribute_name(void);
extern T0*oBC56gelex_task_name;
extern int fBC56gelex_task_name;
T0* r55gelex_task_name(void);
T0* r55new_unicode_string(T0* a1);
void r55show_precursors(T55* C);
extern T0*oBC56echo_task_name;
extern int fBC56echo_task_name;
T0* r55echo_task_name(void);
void r584merge_in_renamed_targets(T584* C,T0* a1);
void r584merge_in_unchanged_targets(T584* C,T0* a1);
T6 r584se_assigned_from(T0* a1);
T0* r584clone(T0* a1);
void r584apply_selects(T584* C);
void r584make(T584* C,T0* a1);
T6 r584conforms_to(T584* C,T0* a1);
void r584validate_parent_selects(T584* C);
void r584merge_in_parent_project(T584* C,T0* a1);
void r584check_targets_for_conflicts(T584* C);
void r584merge_in_redefined_targets(T584* C,T0* a1);
void r584exit_application(T2 a1,T0* a2);
T0* r584twin(T584* C);
void r584sort_out_selected_targets(T584* C);
T0* r172file_system(void);
T6 r172se_assigned_from(T0* a1);
extern T0*oBC172level_attribute_name;
extern int fBC172level_attribute_name;
T0* r172level_attribute_name(void);
T0* r172unless_attribute_name(void);
extern T0*oBC172tune_attribute_name;
extern int fBC172tune_attribute_name;
T0* r172tune_attribute_name(void);
T6 r172uc_boolean_value(T172* C,T0* a1);
void r172make(T172* C,T0* a1,T0* a2);
T0* r172true_attribute_value(void);
T0* r172uc_attribute_value(T172* C,T0* a1);
void r172task_make(T172* C,T0* a1,T0* a2);
T6 r172conforms_to(T172* C,T0* a1);
T0* r172dir_attribute_name(void);
extern T0*oBC172esd_attribute_name;
extern int fBC172esd_attribute_name;
T0* r172esd_attribute_name(void);
void r172execute(T172* C);
T0* r172uc_attribute_value_or_default(T172* C,T0* a1,T0* a2);
T6 r172is_enabled(T172* C);
T0* r172attribute_value_or_default(T172* C,T0* a1,T0* a2);
T0* r172twin(T172* C);
T0* r172if_attribute_name(void);
T0* r172false_attribute_value(void);
void r172interpreting_element_make(T172* C,T0* a1,T0* a2);
extern T0*oBC172clean_attribute_name;
extern int fBC172clean_attribute_name;
T0* r172clean_attribute_name(void);
T0* r172new_unicode_string(T0* a1);
extern T0*oBC172recursive_attribute_name;
extern int fBC172recursive_attribute_name;
T0* r172recursive_attribute_name(void);
T0* r520attribute_value(T520* C,T0* a1);
T0* r520file_system(void);
T6 r520se_assigned_from(T0* a1);
T0* r520unless_attribute_name(void);
void r520make(T520* C,T0* a1,T0* a2);
void r520task_make(T520* C,T0* a1,T0* a2);
T6 r520conforms_to(T520* C,T0* a1);
T0* r520dir_attribute_name(void);
void r520execute(T520* C);
T6 r520is_enabled(T520* C);
T0* r520twin(T520* C);
T0* r520if_attribute_name(void);
void r520interpreting_element_make(T520* C,T0* a1,T0* a2);
T0* r520new_unicode_string(T0* a1);
extern T0*oBC520message_attribute_name;
extern int fBC520message_attribute_name;
T0* r520message_attribute_name(void);
void r557keep_tail(T0* a1,T2 a2);
T0* r557attribute_value(T557* C,T0* a1);
T0* r557file_system(void);
T6 r557se_assigned_from(T0* a1);
T0* r557unless_attribute_name(void);
T6 r557is_integer(T0* a1);
void r557make(T557* C,T0* a1,T0* a2);
extern T0*oBC557code_attribute_name;
extern int fBC557code_attribute_name;
T0* r557code_attribute_name(void);
void r557task_make(T557* C,T0* a1,T0* a2);
T6 r557conforms_to(T557* C,T0* a1);
void r557keep_head(T0* a1,T2 a2);
T0* r557kl_string_routines_make(T2 a1);
T0* r557dir_attribute_name(void);
void r557execute(T557* C);
T6 r557is_enabled(T557* C);
T0* r557twin(T557* C);
T0* r557if_attribute_name(void);
void r557interpreting_element_make(T557* C,T0* a1,T0* a2);
T0* r557new_unicode_string(T0* a1);
T6 r560se_assigned_from(T0* a1);
T6 r560conforms_to(T560* C,T0* a1);
T0* r560twin(T560* C);
T6 r560is_executable(T560* C);
void r707yy_do_action(T707* C,T2 a1);
extern T0*oBC708yytable_template;
extern int fBC708yytable_template;
T0* r707yytable_template(void);
T0* r707empty_ucstring(void);
void r707make_parser_skeleton(T707* C);
T2 r707yy_at_beginning_of_line(T707* C);
void r707fatal_error(T0* a1);
T0* r707yytype1(T0* a1);
T6 r707yytype2(T0* a1);
T0* r707yytype3(T0* a1);
T0* r707yytype4(T0* a1);
T0* r707yytype5(T0* a1);
void r707handle_found_text(T707* C);
void r707parse(T707* C);
void r707set_input_buffer(T707* C,T0* a1);
T2 r707yy_translate(T707* C,T2 a1);
extern T0*oBC709yy_ec_template;
extern int fBC709yy_ec_template;
T0* r707yy_ec_template(void);
void r707yy_execute_action(T707* C,T2 a1);
extern T0*oBC708yytranslate_template;
extern int fBC708yytranslate_template;
T0* r707yytranslate_template(void);
void r707clear_stacks(T707* C);
extern T0*oBC709yy_def_template;
extern int fBC709yy_def_template;
T0* r707yy_def_template(void);
T3 r707text_item(T707* C,T2 a1);
void r707yy_load_input_buffer(T707* C);
extern T0*oBC708uc_collon;
extern int fBC708uc_collon;
T0* r707uc_collon(void);
extern T0*oBC708yyr1_template;
extern int fBC708yyr1_template;
T0* r707yyr1_template(void);
void r707make_with_buffer(T707* C,T0* a1);
T2 r707yy_null_trans_state(T707* C,T2 a1);
extern T0*oBC709yy_accept_template;
extern int fBC709yy_accept_template;
T0* r707yy_accept_template(void);
void r707read_token(T707* C);
extern T0*oBC708yyr2_template;
extern int fBC708yyr2_template;
T0* r707yyr2_template(void);
T2 r707yy_previous_state(T707* C);
extern T0*oBC708yypgoto_template;
extern int fBC708yypgoto_template;
T0* r707yypgoto_template(void);
void r707yy_refill_input_buffer(T707* C);
T0* r707yy_fixed_array(T0* a1);
T6 r707conforms_to(T707* C,T0* a1);
extern T0*oBC709yy_meta_template;
extern int fBC709yy_meta_template;
T0* r707yy_meta_template(void);
extern T0*oBC709yy_base_template;
extern int fBC709yy_base_template;
T0* r707yy_base_template(void);
T0* r707twin(T707* C);
T2 r707text_count(T707* C);
T0* r707clone(T0* a1);
T0* r707new_file_buffer(T0* a1);
void r707yy_initialize(T707* C);
void r707reset(T707* C);
void r707parse_from_file_name(T707* C,T0* a1);
T0* r707text(T707* C);
extern T0*oBC709yy_nxt_template;
extern int fBC709yy_nxt_template;
T0* r707yy_nxt_template(void);
void r707parse_from_stream(T707* C,T0* a1);
void r707yy_set_line_column(T707* C);
void r707yy_build_parser_tables(T707* C);
T0* r707new_unicode_character(T3 a1);
T0* r707new_unicode_string(T0* a1);
T0* r707split_name_and_prefix(T0* a1);
void r707report_error(T707* C,T0* a1);
extern T0*oBC708yydefact_template;
extern int fBC708yydefact_template;
T0* r707yydefact_template(void);
extern T0*oBC709yy_chk_template;
extern int fBC709yy_chk_template;
T0* r707yy_chk_template(void);
extern T0*oBC708yycheck_template;
extern int fBC708yycheck_template;
T0* r707yycheck_template(void);
void r707make(T707* C);
T0* r707yyfixed_array(T0* a1);
void r707yy_clear_all(T707* C);
extern T0*oBC708yydefgoto_template;
extern int fBC708yydefgoto_template;
T0* r707yydefgoto_template(void);
void r707yy_set_content(T707* C,T0* a1);
extern T0*oBC708yypact_template;
extern int fBC708yypact_template;
T0* r707yypact_template(void);
void r707set_start_condition(T707* C,T2 a1);
T6 r707se_assigned_from(T0* a1);
void r707yy_build_tables(T707* C);
void r707less(T707* C,T2 a1);
void r582apply_renames(T582* C);
void r582apply_redefines(T582* C);
T6 r582se_assigned_from(T0* a1);
T0* r582clone(T0* a1);
void r582apply_selects(T582* C);
void r582make(T582* C,T0* a1);
void r582prepare_project(T582* C);
T6 r582conforms_to(T582* C,T0* a1);
void r582apply_undeclared_redefines(T582* C);
void r582exit_application(T2 a1,T0* a2);
T0* r582twin(T582* C);
void r582apply_unchangeds(T582* C);
extern T0*oBC509case_insensitive_attribute_name;
extern int fBC509case_insensitive_attribute_name;
T0* r509case_insensitive_attribute_name(void);
T0* r509file_system(void);
extern T0*oBC509input_filename_attribute_name;
extern int fBC509input_filename_attribute_name;
T0* r509input_filename_attribute_name(void);
extern T0*oBC509no_warn_attribute_name;
extern int fBC509no_warn_attribute_name;
T0* r509no_warn_attribute_name(void);
T6 r509se_assigned_from(T0* a1);
extern T0*oBC509separate_actions_attribute_name;
extern int fBC509separate_actions_attribute_name;
T0* r509separate_actions_attribute_name(void);
T0* r509unless_attribute_name(void);
extern T0*oBC509full_attribute_name;
extern int fBC509full_attribute_name;
T0* r509full_attribute_name(void);
T6 r509uc_boolean_value(T509* C,T0* a1);
void r509make(T509* C,T0* a1,T0* a2);
T0* r509true_attribute_value(void);
extern T0*oBC509backup_attribute_name;
extern int fBC509backup_attribute_name;
T0* r509backup_attribute_name(void);
extern T0*oBC509meta_ecs_attribute_name;
extern int fBC509meta_ecs_attribute_name;
T0* r509meta_ecs_attribute_name(void);
extern T0*oBC509no_default_attribute_name;
extern int fBC509no_default_attribute_name;
T0* r509no_default_attribute_name(void);
T0* r509uc_attribute_value(T509* C,T0* a1);
void r509task_make(T509* C,T0* a1,T0* a2);
T6 r509conforms_to(T509* C,T0* a1);
extern T0*oBC509output_filename_attribute_name;
extern int fBC509output_filename_attribute_name;
T0* r509output_filename_attribute_name(void);
T0* r509dir_attribute_name(void);
extern T0*oBC509size_attribute_name;
extern int fBC509size_attribute_name;
T0* r509size_attribute_name(void);
void r509execute(T509* C);
T6 r509is_enabled(T509* C);
extern T0*oBC509ecs_attribute_name;
extern int fBC509ecs_attribute_name;
T0* r509ecs_attribute_name(void);
T0* r509twin(T509* C);
T0* r509if_attribute_name(void);
T0* r509false_attribute_value(void);
void r509interpreting_element_make(T509* C,T0* a1,T0* a2);
T0* r509new_unicode_string(T0* a1);
extern T0*oBC649stack;
extern int fBC649stack;
T0* r649stack(void);
void r649on_content(T0* a1);
T6 r649se_assigned_from(T0* a1);
T0* r649clone(T0* a1);
void r649on_start_tag(T649* C,T0* a1,T0* a2,T0* a3);
void r649make_from_implementation(T649* C,T0* a1);
T6 r649conforms_to(T649* C,T0* a1);
T0* r649twin(T649* C);
T0* r535file_system(void);
T6 r535se_assigned_from(T0* a1);
T0* r535clone(T0* a1);
void r535make(T535* C,T0* a1);
void r535execute_xalan_java(T535* C);
T6 r535conforms_to(T535* C,T0* a1);
void r535_164Pmake(T535* C,T0* a1);
void r535execute(T535* C);
T0* r535twin(T535* C);
void r535execute_xalan_cpp(T535* C);
void r535execute_shell(T535* C,T0* a1);
T6 r535is_executable(T535* C);
extern T0*oBC179type_attribute_value_flat;
T6 r179se_assigned_from(T0* a1);
T0* r179clone(T0* a1);
T0* r179string_remove_head(T0* a1,T2 a2);
T0* r179glob_prefix(T0* a1);
void r179make(T179* C,T0* a1);
T6 r179conforms_to(T179* C,T0* a1);
extern T0*oBC179type_attribute_value_merge;
T0* r179mapped_filename(T179* C,T0* a1);
T0* r179twin(T179* C);
T0* r179string_remove_tail(T0* a1,T2 a2);
extern T0*oBC179type_attribute_value_identity;
T0* r179glob_postfix(T0* a1);
extern T0*oBC179type_attribute_value_glob;
T6 r179is_executable(T179* C);
void r726copy(T726* C,T0* a1);
void r726append_name(T726* C,T0* a1);
T6 r726se_assigned_from(T0* a1);
T0* r726clone(T0* a1);
T6 r726is_parent(T726* C,T2 a1);
void r726make(T726* C);
void r726set_canonical(T726* C);
T6 r726conforms_to(T726* C,T0* a1);
T0* r726twin(T726* C);
T6 r726is_current(T726* C,T2 a1);
extern T0*oBC36parser_factory;
extern int fBC36parser_factory;
T0* r36parser_factory(void);
T0* r36file_system(void);
T6 r36se_assigned_from(T0* a1);
T0* r36clone(T0* a1);
void r36load(T36* C,T0* a1,T0* a2);
void r36make(T36* C,T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
void r36exit_application(T2 a1,T0* a2);
T0* r36twin(T36* C);
T6 r176se_assigned_from(T0* a1);
T6 r176is_commandline_executable(T176* C);
T6 r176conforms_to(T176* C,T0* a1);
void r176set_fileset(T176* C,T0* a1);
void r176execute(T176* C);
T0* r176twin(T176* C);
void r176execute_shell(T176* C,T0* a1);
T6 r176is_executable(T176* C);
T6 r176is_fileset_executable(T176* C);
void r196yy_do_action(T196* C,T2 a1);
void r196process_escaped_character(T196* C);
void r196report_bad_character_error(T196* C,T0* a1);
extern T0*oBC196yytable_template;
extern int fBC196yytable_template;
T0* r196yytable_template(void);
void r196make_parser_skeleton(T196* C);
T0* r196append_character_set_to_character_class(T196* C,T2 a1,T2 a2,T0* a3);
T2 r196yy_at_beginning_of_line(T196* C);
void r196report_unrecognized_rule_error(T196* C);
void r196fatal_error(T0* a1);
T2 r196yytype1(T0* a1);
T0* r196yytype2(T0* a1);
T0* r196yytype3(T0* a1);
T0* r196yytype4(T0* a1);
T2 r196start_condition(T196* C);
T0* r196new_nfa_from_character(T196* C,T2 a1);
void r196parse(T196* C);
void r196check_options(T196* C);
void r196report_missing_quote_error(T196* C);
void r196set_input_buffer(T196* C,T0* a1);
T2 r196yy_translate(T196* C,T2 a1);
extern T0*oBC197yy_ec_template;
extern int fBC197yy_ec_template;
T0* r196yy_ec_template(void);
void r196yy_execute_action(T196* C,T2 a1);
extern T0*oBC196yytranslate_template;
extern int fBC196yytranslate_template;
T0* r196yytranslate_template(void);
void r196clear_stacks(T196* C);
extern T0*oBC197yy_def_template;
extern int fBC197yy_def_template;
T0* r196yy_def_template(void);
void r196report_full_and_meta_equiv_classes_error(T196* C);
T3 r196text_item(T196* C,T2 a1);
T0* r196new_string_buffer(T0* a1);
void r196yy_load_input_buffer(T196* C);
extern T0*oBC196yyr1_template;
extern int fBC196yyr1_template;
T0* r196yyr1_template(void);
void r196make_with_buffer(T196* C,T0* a1);
void r196process_rule(T196* C,T0* a1);
void r196process_character(T196* C,T2 a1);
T2 r196yy_null_trans_state(T196* C,T2 a1);
void r196report_negative_range_in_character_class_error(T196* C);
void r196report_full_and_variable_trailing_context_error(T196* C);
extern T0*oBC197yy_accept_template;
extern int fBC197yy_accept_template;
T0* r196yy_accept_template(void);
void r196read_token(T196* C);
T0* r196question_character_class(T196* C);
extern T0*oBC196yyr2_template;
extern int fBC196yyr2_template;
T0* r196yyr2_template(void);
T2 r196yy_previous_state(T196* C);
extern T0*oBC196yypgoto_template;
extern int fBC196yypgoto_template;
T0* r196yypgoto_template(void);
void r196yy_refill_input_buffer(T196* C);
T0* r196yy_fixed_array(T0* a1);
T6 r196conforms_to(T196* C,T0* a1);
extern T0*oBC197yy_meta_template;
extern int fBC197yy_meta_template;
T0* r196yy_meta_template(void);
void r196report_character_out_of_range_error(T196* C,T0* a1);
T0* r196new_epsilon_nfa(T196* C);
extern T0*oBC197yy_base_template;
extern int fBC197yy_base_template;
T0* r196yy_base_template(void);
void r196report_full_and_reject_error(T196* C);
T0* r196twin(T196* C);
T0* r196append_character_to_character_class(T196* C,T2 a1,T0* a2);
T2 r196text_count(T196* C);
void r196parse_string(T196* C,T0* a1);
void r196yy_initialize(T196* C);
T0* r196text(T196* C);
T0* r196new_symbol_nfa(T196* C,T2 a1);
extern T0*oBC197yy_nxt_template;
extern int fBC197yy_nxt_template;
T0* r196yy_nxt_template(void);
void r196yy_set_line_column(T196* C);
void r196yy_build_parser_tables(T196* C);
void r196build_equiv_classes(T196* C);
T0* r196new_symbol_class_nfa(T196* C,T0* a1);
extern T0*oBC203empty_buffer;
extern int fBC203empty_buffer;
T0* r196empty_buffer(void);
void r196report_error(T196* C,T0* a1);
T0* r196append_character_to_string(T196* C,T2 a1,T0* a2);
extern T0*oBC196yydefact_template;
extern int fBC196yydefact_template;
T0* r196yydefact_template(void);
extern T0*oBC197yy_chk_template;
extern int fBC197yy_chk_template;
T0* r196yy_chk_template(void);
T0* r196new_nfa_from_character_class(T196* C,T0* a1);
extern T0*oBC196yycheck_template;
extern int fBC196yycheck_template;
T0* r196yycheck_template(void);
T0* r196new_character_class(T196* C);
T0* r196filename(T196* C);
T0* r196yyfixed_array(T0* a1);
extern T0*oBC196yydefgoto_template;
extern int fBC196yydefgoto_template;
T0* r196yydefgoto_template(void);
void r196yy_clear_all(T196* C);
void r196yy_set_content(T196* C,T0* a1);
extern T0*oBC196yypact_template;
extern int fBC196yypact_template;
T0* r196yypact_template(void);
void r196set_start_condition(T196* C,T2 a1);
T6 r196se_assigned_from(T0* a1);
void r196yy_build_tables(T196* C);
void r196make_lex_scanner_from_description(T196* C,T0* a1,T0* a2);
void r196less(T196* C,T2 a1);
void r196report_bad_character_class_error(T196* C);
void r196make_from_description(T196* C,T0* a1,T0* a2);
T6 r169is_cleanable(T169* C);
T0* r169file_system(void);
T6 r169se_assigned_from(T0* a1);
T0* r169clone(T0* a1);
void r169execute_clean(T169* C);
void r169execute_compile(T169* C);
T6 r169conforms_to(T169* C,T0* a1);
T6 r169is_compilable(T169* C);
void r169execute(T169* C);
T0* r169twin(T169* C);
void r169execute_shell(T169* C,T0* a1);
T6 r169is_executable(T169* C);
T0* r356arguments(void);
T6 r356se_assigned_from(T0* a1);
void r356make(T356* C,T0* a1,T2 a2);
T0* r356message(T356* C,T0* a1);
T6 r356conforms_to(T356* C,T0* a1);
T0* r356twin(T356* C);
T0* r356default_message(T356* C);
T6 r35se_assigned_from(T0* a1);
T6 r35conforms_to(T35* C,T0* a1);
T0* r35twin(T35* C);
T0* r32expanded_variable_value(T32* C,T0* a1);
T0* r32variable_value(T32* C,T0* a1);
T0* r32file_system(void);
extern T0*oBC16commandline_variables;
extern int fBC16commandline_variables;
T0* r32commandline_variables(void);
T6 r32se_assigned_from(T0* a1);
T0* r32clone(T0* a1);
extern T0*oBC18execution_environment;
T0* r32new_unicode_character(T3 a1);
void r32make(T32* C);
T6 r32boolean_condition_value(T32* C,T0* a1);
T6 r32conforms_to(T32* C,T0* a1);
T0* r32string_tokens(T0* a1,T3 a2);
T0* r32interpreted_string(T32* C,T0* a1);
void r32exit_application(T2 a1,T0* a2);
T0* r32twin(T32* C);
T6 r32has_variable(T32* C,T0* a1);
T0* r32new_unicode_string(T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r358command_arguments(void);
T6 r358se_assigned_from(T0* a1);
T6 r358conforms_to(T358* C,T0* a1);
T0* r358twin(T358* C);
T0* r358argument(T2 a1);
extern T0*oBC701ep_event_fact;
T6 r701se_assigned_from(T0* a1);
void r701make(T701* C);
T6 r701conforms_to(T701* C,T0* a1);
extern T0*oBC701ef_event_fact;
T0* r701twin(T701* C);
T6 r715se_assigned_from(T0* a1);
T2 r715execute_command(T0* a1);
T6 r715conforms_to(T715* C,T0* a1);
void r715execute(T715* C);
T0* r715twin(T715* C);
extern T0*oBC492validate_attribute_name;
extern int fBC492validate_attribute_name;
T0* r492validate_attribute_name(void);
extern T0*oBC492define_element_name;
extern int fBC492define_element_name;
T0* r492define_element_name(void);
T0* r492file_system(void);
T6 r492se_assigned_from(T0* a1);
extern T0*oBC492xace_filename_attribute_name;
extern int fBC492xace_filename_attribute_name;
T0* r492xace_filename_attribute_name(void);
T0* r492unless_attribute_name(void);
T6 r492uc_boolean_value(T492* C,T0* a1);
void r492make(T492* C,T0* a1,T0* a2);
T0* r492true_attribute_value(void);
T0* r492uc_attribute_value(T492* C,T0* a1);
void r492task_make(T492* C,T0* a1,T0* a2);
T6 r492conforms_to(T492* C,T0* a1);
extern T0*oBC492output_filename_attribute_name;
extern int fBC492output_filename_attribute_name;
T0* r492output_filename_attribute_name(void);
T0* r492dir_attribute_name(void);
extern T0*oBC492verbose_attribute_name;
extern int fBC492verbose_attribute_name;
T0* r492verbose_attribute_name(void);
void r492execute(T492* C);
T6 r492is_enabled(T492* C);
T0* r492twin(T492* C);
extern T0*oBC492system_attribute_name;
extern int fBC492system_attribute_name;
T0* r492system_attribute_name(void);
T0* r492if_attribute_name(void);
T0* r492false_attribute_value(void);
void r492interpreting_element_make(T492* C,T0* a1,T0* a2);
extern T0*oBC492cluster_attribute_name;
extern int fBC492cluster_attribute_name;
T0* r492cluster_attribute_name(void);
T0* r492new_unicode_string(T0* a1);
T0* r490file_system(void);
extern T0*oBC490name_attribute_name;
extern int fBC490name_attribute_name;
T0* r490name_attribute_name(void);
T6 r490se_assigned_from(T0* a1);
T0* r490unless_attribute_name(void);
void r490make(T490* C,T0* a1,T0* a2);
T0* r490uc_attribute_value(T490* C,T0* a1);
void r490task_make(T490* C,T0* a1,T0* a2);
T6 r490conforms_to(T490* C,T0* a1);
T0* r490dir_attribute_name(void);
void r490execute(T490* C);
T6 r490is_enabled(T490* C);
T0* r490twin(T490* C);
T0* r490if_attribute_name(void);
void r490interpreting_element_make(T490* C,T0* a1,T0* a2);
T0* r490new_unicode_string(T0* a1);
T6 r531se_assigned_from(T0* a1);
T6 r531conforms_to(T531* C,T0* a1);
void r531execute(T531* C);
T0* r531twin(T531* C);
T6 r531is_executable(T531* C);
T6 r678is_closed(T678* C);
void r678old_close(T678* C);
T2 r678count(T678* C);
void r678old_delete(T0* a1);
T2 r678time_stamp(T678* C);
T6 r678file_exists(T0* a1);
extern T720 oBC682epoch_time;
extern int fBC682epoch_time;
T720 r678epoch_time(void);
T2 r678read_to_string(T678* C,T0* a1,T2 a2,T2 a3);
T720 r678last_change_of(T0* a1);
void r678rename_to(T0* a1,T0* a2);
void r678open_read(T678* C);
T0* r678file_system(void);
T6 r678se_assigned_from(T0* a1);
void r678old_read_character(T678* C);
T6 r678old_end_of_file(T678* C);
void r678read_character(T678* C);
void r678close(T678* C);
void r678make(T678* C,T0* a1);
T6 r678exists(T678* C);
T2 r678size_of(T0* a1);
T6 r678conforms_to(T678* C,T0* a1);
void r678copy_file(T678* C,T0* a1);
void r678connect_to(T678* C,T0* a1);
extern T683 oBC1file_tools;
T6 r678same_physical_file(T678* C,T0* a1);
void r678delete(T678* C);
T0* r678twin(T678* C);
void r678change_name(T678* C,T0* a1);
extern T0*oBC682tmp_file1;
extern int fBC682tmp_file1;
T0* r678tmp_file1(void);
T6 r678is_readable(T678* C);
extern T0*oBC679tmp_directory;
extern int fBC679tmp_directory;
T0* r678tmp_directory(void);
extern T0*oBC178from_attribute_name;
extern int fBC178from_attribute_name;
T0* r178from_attribute_name(void);
extern T0*oBC178type_attribute_name;
extern int fBC178type_attribute_name;
T0* r178type_attribute_name(void);
void r178_57Pmake(T178* C,T0* a1,T0* a2);
T6 r178se_assigned_from(T0* a1);
void r178make(T178* C,T0* a1,T0* a2);
T0* r178uc_attribute_value(T178* C,T0* a1);
T6 r178conforms_to(T178* C,T0* a1);
extern T0*oBC178to_attribute_name;
extern int fBC178to_attribute_name;
T0* r178to_attribute_name(void);
extern T0*oBC178map_element_name;
extern int fBC178map_element_name;
T0* r178map_element_name(void);
T0* r178twin(T178* C);
T0* r178new_unicode_string(T0* a1);
T6 r144is_equal(T144* C,T0* a1);
T6 r144se_assigned_from(T0* a1);
T6 r144conforms_to(T144* C,T0* a1);
T6 r144_px_60(T144* C,T0* a1);
void r144make_from_character(T144* C,T3 a1);
T0* r144twin(T144* C);
extern T0*oBC683tfr1;
T6 r683is_readable(T0* a1);
T6 r721se_assigned_from(T0* a1);
T6 r721conforms_to(T721* C,T0* a1);
T0* r721twin(T721* C);
T6 r791se_assigned_from(T0* a1);
T6 r791conforms_to(T791* C,T0* a1);
T0* r791twin(T791* C);
void r11read_command_line(T11* C);
T0* r11arguments(void);
T0* r11commandline_variables(void);
T6 r11se_assigned_from(T0* a1);
T0* r11clone(T0* a1);
void r11report_usage_message(T11* C);
extern T0*oBC11usage_message;
extern int fBC11usage_message;
T0* r11usage_message(void);
void r11make(T11* C);
extern T0*oBC11default_build_filename;
T6 r11conforms_to(T11* C,T0* a1);
void r11report_version_number(T11* C);
void r11exit_application(T2 a1,T0* a2);
T0* r11twin(T11* C);
T0* r11new_unicode_string(T0* a1);
void r11report_usage_error(T11* C);
extern T0*oBC43error;
extern int fBC43error;
T0* r43error(void);
T6 r43se_assigned_from(T0* a1);
extern T0*oBC43input;
extern int fBC43input;
T0* r43input(void);
extern T0*oBC43output;
extern int fBC43output;
T0* r43output(void);
T6 r43conforms_to(T43* C,T0* a1);
T0* r43twin(T43* C);
extern T2 oBC739maximum_character_code;
extern int fBC739maximum_character_code;
T2 r739maximum_character_code(T739* C);
T6 r739se_assigned_from(T0* a1);
T6 r739conforms_to(T739* C,T0* a1);
T0* r739twin(T739* C);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
T6 r39se_assigned_from(T0* a1);
T6 r39conforms_to(T39* C,T0* a1);
T0* r39twin(T39* C);
T6 r736se_assigned_from(T0* a1);
T6 r736conforms_to(T736* C,T0* a1);
T0* r736twin(T736* C);
T6 r54se_assigned_from(T0* a1);
T6 r54conforms_to(T54* C,T0* a1);
T0* r54twin(T54* C);
T2 r90encoded_next_value(T3 a1);
T6 r90se_assigned_from(T0* a1);
T2 r90encoded_first_value(T3 a1);
T6 r90conforms_to(T90* C,T0* a1);
T2 r90code_byte_count(T2 a1);
T2 r90encoded_byte_count(T3 a1);
T2 r90latin1_byte_count(T3 a1);
T0* r90twin(T90* C);
T2 r90substring_byte_count(T0* a1,T2 a2,T2 a3);
T6 r788se_assigned_from(T0* a1);
T6 r788conforms_to(T788* C,T0* a1);
T0* r788twin(T788* C);
T6 r89se_assigned_from(T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
T3 r89to_character(T2 a1);
T0* r89twin(T89* C);
T6 r790se_assigned_from(T0* a1);
T6 r790conforms_to(T790* C,T0* a1);
T0* r790twin(T790* C);
T6 r38se_assigned_from(T0* a1);
T6 r38conforms_to(T38* C,T0* a1);
T0* r38twin(T38* C);
T0* r95get_environment_variable(T0* a1);
T6 r789se_assigned_from(T0* a1);
T6 r789conforms_to(T789* C,T0* a1);
T0* r789twin(T789* C);
T6 r706se_assigned_from(T0* a1);
T6 r706conforms_to(T706* C,T0* a1);
T0* r706twin(T706* C);
void r141connect_to_current_working_directory(T141* C);
void r141disconnect(T141* C);
T6 r141remove_directory(T0* a1);
extern T0*oBC141last_entry;
void r141change_current_working_directory(T141* C,T0* a1);
void r141read_entry(T141* C);
void r141connect_to(T141* C,T0* a1);
T6 r141create_new_directory(T0* a1);
void r138keep_tail(T0* a1,T2 a2);
T6 r138se_assigned_from(T0* a1);
T6 r138is_integer(T0* a1);
T0* r138make(T2 a1);
T6 r138conforms_to(T138* C,T0* a1);
void r138keep_head(T0* a1,T2 a2);
T0* r138twin(T138* C);
T0* r94variable_value(T0* a1);
T6 r94se_assigned_from(T0* a1);
extern T95 oBC94environment_impl;
T6 r94conforms_to(T94* C,T0* a1);
T0* r94twin(T94* C);
T6 r705se_assigned_from(T0* a1);
T0* r705new_event_parser_imp(void);
T6 r705conforms_to(T705* C,T0* a1);
T0* r705twin(T705* C);
T2 r720day(T720* C);
T2 r720elapsed_seconds(T720* C,T720 a1);
T6 r720set(T720* C,T2 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T2 r720hour(T720* C);
T2 r720year(T720* C);
T2 r720month(T720* C);
extern T0*oBC720time_mode_memo;
T2 r720minute(T720* C);
T2 r720second(T720* C);
T6 r51se_assigned_from(T0* a1);
T6 r51conforms_to(T51* C,T0* a1);
T0* r51twin(T51* C);
T0* r47current_working_directory(T47* C);
T6 r47se_assigned_from(T0* a1);
T0* r47clone(T0* a1);
T6 r47is_windows(T47* C);
T6 r47conforms_to(T47* C,T0* a1);
T6 r47is_unix(T47* C);
T0* r47twin(T47* C);
extern T11*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 792
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms381_1520688928;
extern T7*ms143_276;
extern T7*ms379_215272365;
extern T7*ms44_10;
extern T7*ms20_1484;
extern T7*ms393_280487577;
extern T7*ms726_46;
extern T7*ms139_80516;
extern T7*ms376_645257649;
extern T7*ms378_1086870388;
extern T7*ms142_46;
extern T7*ms143_46;
extern T7*ms6_79251;
extern T7*ms377_1203377682;
extern T7*ms22_0;
extern T7*ms682_80516;
extern T7*ms90_0;
extern T7*ms91_10;
extern T7*ms713_1158552108;
extern T7*ms726_276;
extern T7*ms6_18036;
extern T7*ms143_0;
extern T7*ms714_1515383187;
extern T7*ms380_1686894687;
extern T7*ms422_823229232;
extern T7*ms382_1531431095;
extern T7*ms142_8976;
extern T7*ms454_10;
extern T7*ms356_1449702436;
extern T7*ms142_276;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void*se_ma210(int argc,...);
void X226put(T0*C,T2 a1);
T0* X226to_array(T0*C,T2 a1,T2 a2);
void X226add(T0*C,T0* a1);
void X350remove_traversing_cursor(T0*C,T0* a1);
T0* X350item(T0*C,T2 a1);
void X350add_traversing_cursor(T0*C,T0* a1);
void X350force_last(T0*C,T0* a1);
T6 X350cursor_off(T0*C,T0* a1);
T0* X7out(T0*C);
T0* X7substring(T0*C,T2 a1,T2 a2);
void X7keep_tail(T0*C,T2 a1);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
T2 X7index_of(T0*C,T3 a1,T2 a2);
void X7set_count(T0*C,T2 a1);
T2 X7capacity(T0*C);
T6 X7same_type(T0*C,T0* a1);
T6 X7is_integer(T0*C);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
void X7extend(T0*C,T3 a1);
T0* X7_px_43(T0*C,T0* a1);
T2 X7hash_code(T0*C);
void X7keep_head(T0*C,T2 a1);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
void X7from_external_copy(T0*C,T8 a1);
T8 X7to_external(T0*C);
T0* X7twin(T0*C);
void X7swap(T0*C,T2 a1,T2 a2);
T2 X75exit_code(T0*C);
void X75execute(T0*C);
T6 X75is_enabled(T0*C);
T6 X75is_executable(T0*C);
T0* X10twin(T0*C);
void X138keep_tail(T0*C,T0* a1,T2 a2);
T0* X138make(T0*C,T2 a1);
void X138keep_head(T0*C,T0* a1,T2 a2);
T0* X131make(T0*C,T2 a1);
T0* X131resize(T0*C,T0* a1,T2 a2);
void X680disconnect(T0*C);
T6 X680is_connected(T0*C);
void X680connect_to(T0*C,T0* a1);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X351clear_all(T0*C,T0* a1);
T0* X351make(T0*C,T2 a1);
T0* X351resize(T0*C,T0* a1,T2 a2);
void X48put_line(T0*C,T0* a1);
T0* X362name(T0*C);
T2 X362read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X362read_character(T0*C);
T6 X362end_of_input(T0*C);
void X361fill(T0*C);
void X110put(T0*C,T0* a1,T2 a2);
T0* X110item(T0*C,T2 a1);
void X110set_all_with(T0*C,T0* a1);
void X110resize(T0*C,T2 a1);
T2 X439count(T0*C);
T2 X439item(T0*C,T2 a1);
T2 X439lower(T0*C);
T6 X244labeled(T0*C,T2 a1);
void X244record(T0*C,T0* a1);
void X353put(T0*C,T0* a1,T2 a2);
T0* X353item(T0*C,T2 a1);
T355 X353storage(T0*C);
void X353set_all_with(T0*C,T0* a1);
void X353resize(T0*C,T2 a1);
void X452set_next_cursor(T0*C,T0* a1);
T2 X164exit_code(T0*C);
void X164execute(T0*C);
T6 X164is_executable(T0*C);
T0* X140string_to_pathname(T0*C,T0* a1);
T0* X357default_message(T0*C);
T6 X47is_windows(T0*C);
T6 X47is_unix(T0*C);
T0* X139pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X139relative_current_directory(T0*C);
T0* X139absolute_pathname(T0*C,T0* a1);
T0* X139dirname(T0*C,T0* a1);
T0* X139exe_extension(T0*C);
T0* X139relative_parent_directory(T0*C);
T0* X139pathname(T0*C,T0* a1,T0* a2);
T0* X139canonical_pathname(T0*C,T0* a1);
T0* T2toT39(T2 source);
T2 T39toT2(T0* source);
T0* T6toT38(T6 source);

#ifdef __cplusplus
}
#endif
