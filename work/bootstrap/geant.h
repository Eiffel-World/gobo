#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #9 (Sunday October 21th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S61 T61;
typedef struct S384 T384;
typedef struct S244 T244;
typedef int T282;
typedef struct S358 T358;
typedef struct S200 T200;
typedef struct S223 T223;
typedef struct S299 T299;
typedef struct S277 T277;
typedef struct S155 T155;
typedef struct S65 T65;
typedef struct S16 T16;
typedef struct S205 T205;
typedef struct S331 T331;
typedef int T305;
typedef struct S328 T328;
typedef struct S196 T196;
typedef struct S85 T85;
typedef struct S131 T131;
typedef struct S47 T47;
typedef struct S321 T321;
typedef struct S48 T48;
typedef struct S123 T123;
typedef struct S370 T370;
typedef struct S120 T120;
typedef struct S329 T329;
typedef struct S333 T333;
typedef struct S45 T45;
typedef struct S153 T153;
typedef struct S227 T227;
typedef struct S388 T388;
typedef struct S415 T415;
typedef struct S52 T52;
typedef struct S410 T410;
typedef struct S230 T230;
typedef struct S72 T72;
typedef struct S159 T159;
typedef struct S414 T414;
typedef struct S132 T132;
typedef struct S213 T213;
typedef struct S79 T79;
typedef struct S416 T416;
typedef struct S341 T341;
typedef struct S371 T371;
typedef struct S217 T217;
typedef struct S138 T138;
typedef struct S355 T355;
typedef struct S209 T209;
typedef struct S365 T365;
typedef struct S163 T163;
typedef struct S44 T44;
typedef struct S357 T357;
typedef struct S394 T394;
typedef struct S247 T247;
typedef struct S103 T103;
typedef struct S279 T279;
typedef struct S7 T7;
typedef struct S350 T350;
typedef struct S64 T64;
typedef struct S207 T207;
typedef struct S274 T274;
typedef struct S219 T219;
typedef struct S290 T290;
typedef struct S398 T398;
typedef struct S43 T43;
typedef struct S397 T397;
typedef struct S304 T304;
typedef struct S190 T190;
typedef struct S221 T221;
typedef struct S58 T58;
typedef struct S157 T157;
typedef struct S254 T254;
typedef struct S140 T140;
typedef struct S367 T367;
typedef struct S77 T77;
typedef struct S228 T228;
typedef struct S215 T215;
typedef struct S82 T82;
typedef struct S137 T137;
typedef struct S369 T369;
typedef struct S133 T133;
typedef struct S81 T81;
typedef struct S25 T25;
typedef struct S167 T167;
typedef struct S249 T249;
typedef struct S165 T165;
typedef struct S175 T175;
typedef struct S28 T28;
typedef struct S101 T101;
typedef struct S67 T67;
typedef struct S252 T252;
typedef struct S198 T198;
typedef struct S96 T96;
typedef struct S89 T89;
typedef struct S363 T363;
typedef struct S168 T168;
typedef struct S392 T392;
typedef struct S326 T326;
typedef struct S342 T342;
typedef struct S302 T302;
typedef struct S343 T343;
typedef struct S139 T139;
typedef struct S124 T124;
typedef struct S338 T338;
typedef struct S128 T128;
typedef struct S320 T320;
typedef struct S88 T88;
typedef struct S161 T161;
typedef struct S83 T83;
typedef struct S211 T211;
typedef struct S51 T51;
typedef struct S306 T306;
typedef struct S194 T194;
typedef struct S257 T257;
typedef struct S100 T100;
typedef struct S327 T327;
typedef struct S417 T417;
typedef struct S136 T136;
typedef struct S366 T366;
typedef int T303;
typedef struct S193 T193;
typedef struct S49 T49;
typedef struct S87 T87;
typedef struct S339 T339;
typedef struct S298 T298;
typedef struct S345 T345;
typedef struct S171 T171;
typedef struct S233 T233;
typedef struct S169 T169;

/*C Header Pass 2 :*/
typedef T0**T177;
typedef T0**T105;
typedef T0**T251;
typedef T0**T78;
typedef T3*T9;
typedef T0**T130;
typedef T2*T86;
typedef T0**T232;
typedef T0**T324;

/*C Header Pass 3 :*/
extern T305 M305;
struct S357{T5 _time_memory;};
int se_cmpT357(T357 o1,T357 o2);
struct S137{T8 _directory_stream;T8 _current_entry;};
int se_cmpT137(T137 o1,T137 o2);
struct S67{T2 _i_code;};
int se_cmpT67(T67 o1,T67 o2);
extern T303 M303;

/*C Header Pass 4 :*/
struct S384{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T384 M384;
struct S244{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T244 M244;
extern T282 M282;
struct S358{Tid id;T5 _item;};
extern T358 M358;
struct S200{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T200 M200;
struct S223{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;};
extern T223 M223;
struct S299{Tid id;T0* _event_parser_factory;};
extern T299 M299;
struct S277{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T6 _end_of_file;T0* _character_buffer;};
extern T277 M277;
struct S155{Tid id;T2 _exit_code;T0* _project;T6 _case_insensitive;T0* _creation_procedure;T0* _element;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _ace_filename;T0* _clean;};
extern T155 M155;
struct S65{Tid id;T0* _name;T0* _value;};
extern T65 M65;
struct S16{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;};
extern T16 M16;
struct S205{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T205 M205;
struct S331{Tid id;T0* _parameters;};
extern T331 M331;
struct S328{Tid id;};
extern T328 M328;
struct S196{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T196 M196;
struct S85{Tid id;T86 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T85 M85;
struct S131{Tid id;};
extern T131 M131;
struct S47{Tid id;};
extern T47 M47;
struct S321{Tid id;};
extern T321 M321;
struct S48{Tid id;};
extern T48 M48;
struct S123{Tid id;};
extern T123 M123;
struct S370{Tid id;T0* _first;T0* _second;};
extern T370 M370;
struct S120{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T120 M120;
struct S329{Tid id;T6 _push_back_flag;T137 _basic_directory;T2 _memory;T0* _name;T6 _end_of_file;};
extern T329 M329;
struct S333{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T333 M333;
struct S45{Tid id;T2 _item;};
extern T45 M45;
struct S153{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T153 M153;
struct S227{Tid id;T0* _first;T0* _second;};
extern T227 M227;
struct S388{Tid id;T0* _item;T0* _right;};
extern T388 M388;
struct S415{Tid id;};
extern T415 M415;
struct S52{Tid id;T8 _item;};
extern T52 M52;
struct S410{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T410 M410;
struct S230{Tid id;T232 _storage;T2 _capacity;T2 _upper;};
extern T230 M230;
struct S72{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T72 M72;
struct S159{Tid id;T2 _exit_code;T0* _project;T6 _finalize;T0* _element;T0* _ace_filename;T0* _system_name;T6 _fish;T0* _clean;};
extern T159 M159;
struct S414{Tid id;};
extern T414 M414;
struct S132{Tid id;};
extern T132 M132;
struct S213{Tid id;T2 _exit_code;T0* _project;T0* _directory;T0* _element;};
extern T213 M213;
struct S79{Tid id;};
extern T79 M79;
struct S416{Tid id;};
extern T416 M416;
struct S341{Tid id;T0* _parameters;};
extern T341 M341;
struct S371{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T371 M371;
struct S217{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_directory;T0* _element;T0* _to_file;};
extern T217 M217;
struct S138{Tid id;T137 _basic_directory;};
extern T138 M138;
struct S355{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T355 M355;
struct S209{Tid id;T2 _exit_code;T0* _project;T0* _start_target_name;T0* _element;T0* _filename;T6 _reuse_variables;};
extern T209 M209;
struct S365{Tid id;T0* _item;};
extern T365 M365;
struct S163{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _command_line;};
extern T163 M163;
struct S44{Tid id;T6 _item;};
extern T44 M44;
extern T357 M357;
struct S394{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T394 M394;
struct S247{Tid id;T2 _exit_code;T0* _project;T0* _target_filename;T0* _element;T0* _source_filenames;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;};
extern T247 M247;
struct S103{Tid id;T105 _storage;T2 _capacity;T2 _upper;};
extern T103 M103;
struct S279{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T279 M279;
struct S350{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T350 M350;
struct S64{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T64 M64;
struct S207{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _config_filename;T0* _compile;};
extern T207 M207;
struct S274{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T274 M274;
struct S219{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_directory;T0* _element;T0* _to_file;};
extern T219 M219;
struct S61{Tid id;T0* _children;T0* _attributes;T0* _name;T0* _content;};
extern T61 M61;
struct S290{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _entry_buffer;T137 _basic_directory;};
extern T290 M290;
struct S398{Tid id;};
extern T398 M398;
struct S397{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T397 M397;
struct S304{Tid id;};
extern T304 M304;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S190{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T190 M190;
struct S221{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _name;T0* _value;};
extern T221 M221;
struct S58{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T58 M58;
struct S157{Tid id;T2 _exit_code;T0* _project;T6 _finalize;T0* _element;T0* _ace_filename;T0* _system_name;T6 _finish_freezing;T0* _clean;};
extern T157 M157;
struct S254{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T254 M254;
struct S140{Tid id;};
extern T140 M140;
struct S367{Tid id;};
extern T367 M367;
struct S77{Tid id;T78 _storage;T2 _capacity;T2 _upper;};
extern T77 M77;
struct S228{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T228 M228;
struct S215{Tid id;T2 _exit_code;T0* _project;T0* _directory;T0* _file;T0* _element;};
extern T215 M215;
struct S82{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T82 M82;
extern T137 M137;
struct S369{Tid id;T0* _first;T0* _second;};
extern T369 M369;
struct S133{Tid id;};
extern T133 M133;
struct S81{Tid id;T2 _type;};
extern T81 M81;
struct S167{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _name;T0* _value;};
extern T167 M167;
struct S249{Tid id;T251 _storage;T2 _capacity;T2 _upper;};
extern T249 M249;
struct S165{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _executable;T0* _source_filename;};
extern T165 M165;
struct S175{Tid id;T177 _storage;T2 _capacity;T2 _upper;};
extern T175 M175;
struct S28{Tid id;T0* _build_filename;T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T0* _parent_project;T0* _child_project;T0* _current_target;T0* _root_element;};
extern T28 M28;
struct S25{Tid id;T0* _i_representation;};
extern T25 M25;
struct S101{Tid id;T86 _storage;T2 _capacity;T2 _upper;};
extern T101 M101;
extern T67 M67;
struct S252{Tid id;};
extern T252 M252;
struct S198{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;};
extern T198 M198;
struct S96{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T96 M96;
struct S89{Tid id;};
extern T89 M89;
struct S363{Tid id;T2 _last_code;T2 _next_pos;};
extern T363 M363;
struct S168{Tid id;T0* _project;T0* _name;T0* _value;};
extern T168 M168;
struct S392{Tid id;T0* _uri;};
extern T392 M392;
struct S326{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T326 M326;
struct S342{Tid id;T137 _basic_directory;T0* _name;};
extern T342 M342;
struct S302{Tid id;};
extern T302 M302;
struct S343{Tid id;T137 _basic_directory;T0* _name;};
extern T343 M343;
struct S139{Tid id;T137 _basic_directory;};
extern T139 M139;
struct S43{Tid id;T0* _description;T0* _name;T0* _project;T6 _is_executed;T0* _target_element;};
extern T43 M43;
struct S124{Tid id;};
extern T124 M124;
struct S338{Tid id;T105 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T338 M338;
struct S128{Tid id;T130 _storage;T2 _capacity;T2 _upper;};
extern T128 M128;
struct S320{Tid id;T324 _storage;T2 _capacity;T2 _upper;};
extern T320 M320;
struct S88{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T88 M88;
struct S161{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _esd_filename;T0* _clean;T6 _recursive_clean;};
extern T161 M161;
struct S83{Tid id;T2 _count;T0* _storage;};
extern T83 M83;
struct S211{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _message;};
extern T211 M211;
struct S51{Tid id;T3 _item;};
extern T51 M51;
struct S306{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T306 M306;
struct S194{Tid id;T2 _exit_code;T0* _project;T0* _size;T6 _case_insensitive;T0* _element;T6 _backup;T6 _ecs;T6 _full;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T194 M194;
struct S257{Tid id;T0* _implementation;T0* _root_element;};
extern T257 M257;
struct S100{Tid id;};
extern T100 M100;
struct S327{Tid id;};
extern T327 M327;
struct S417{Tid id;};
extern T417 M417;
struct S136{Tid id;T137 _basic_directory;};
extern T136 M136;
struct S366{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T366 M366;
struct S193{Tid id;};
extern T193 M193;
struct S49{Tid id;};
extern T49 M49;
struct S87{Tid id;T0* _variables;};
extern T87 M87;
struct S339{Tid id;T0* _program_name;};
extern T339 M339;
struct S298{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T298 M298;
struct S345{Tid id;T0* _command;T2 _exit_code;};
extern T345 M345;
struct S171{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _options;T0* _command;T0* _command_options;T0* _xace_filename;T0* _output_filename;T0* _defines;};
extern T171 M171;
struct S233{Tid id;};
extern T233 M233;
struct S169{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _name;};
extern T169 M169;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_fstat.h) is automatically 
  included when some external "SmallEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_mtime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_sprintf_* feature is used.
*/

void basic_sprintf_double(char*b, int f, double d);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_time.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_TIME
  is used (ie. in live code).
*/
#include <time.h>

#ifdef WIN32
#include <windows.h>
#endif

#define basic_time_clock (clock())
#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, 
			     EIF_INTEGER mon,
			     EIF_INTEGER mday,
			     EIF_INTEGER hour,
			     EIF_INTEGER min,
			     EIF_INTEGER sec);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically 
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
extern T9 oBC5sprintf_buffer;
extern int fBC5sprintf_buffer;
T9 r5sprintf_buffer(void);
void r5append_in_format(T5 C,T0* a1,T2 a2);
void r177clear_all(T177 C,T2 a1);
T177 r177realloc(T177 C,T2 a1,T2 a2);
void r177set_all_with(T177 C,T0* a1,T2 a2);
void r177clear(T177 C,T2 a1,T2 a2);
void r177copy_from(T177 C,T177 a1,T2 a2);
void r105clear_all(T105 C,T2 a1);
T105 r105realloc(T105 C,T2 a1,T2 a2);
void r105move(T105 C,T2 a1,T2 a2,T2 a3);
void r105set_all_with(T105 C,T0* a1,T2 a2);
void r105clear(T105 C,T2 a1,T2 a2);
void r105copy_from(T105 C,T105 a1,T2 a2);
void r251clear_all(T251 C,T2 a1);
T251 r251realloc(T251 C,T2 a1,T2 a2);
void r251set_all_with(T251 C,T0* a1,T2 a2);
void r251clear(T251 C,T2 a1,T2 a2);
void r251copy_from(T251 C,T251 a1,T2 a2);
void r78clear_all(T78 C,T2 a1);
T78 r78realloc(T78 C,T2 a1,T2 a2);
void r78set_all_with(T78 C,T0* a1,T2 a2);
void r78clear(T78 C,T2 a1,T2 a2);
void r78copy_from(T78 C,T78 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r130clear_all(T130 C,T2 a1);
T130 r130realloc(T130 C,T2 a1,T2 a2);
void r130set_all_with(T130 C,T0* a1,T2 a2);
void r130clear(T130 C,T2 a1,T2 a2);
void r130copy_from(T130 C,T130 a1,T2 a2);
void r86clear_all(T86 C,T2 a1);
T86 r86realloc(T86 C,T2 a1,T2 a2);
void r86move(T86 C,T2 a1,T2 a2,T2 a3);
void r86set_all_with(T86 C,T2 a1,T2 a2);
void r86clear(T86 C,T2 a1,T2 a2);
void r86copy_from(T86 C,T86 a1,T2 a2);
void r232clear_all(T232 C,T2 a1);
T232 r232realloc(T232 C,T2 a1,T2 a2);
void r232set_all_with(T232 C,T0* a1,T2 a2);
void r232clear(T232 C,T2 a1,T2 a2);
void r232copy_from(T232 C,T232 a1,T2 a2);
void r324clear_all(T324 C,T2 a1);
T324 r324realloc(T324 C,T2 a1,T2 a2);
void r324set_all_with(T324 C,T0* a1,T2 a2);
void r324clear(T324 C,T2 a1,T2 a2);
void r324copy_from(T324 C,T324 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r85copy(T85* C,T0* a1);
T2 r85count(T85* C);
T2 r85item(T85* C,T2 a1);
T6 r85se_assigned_from(T0* a1);
void r85print_on(T85* C,T0* a1);
void r85out_in_tagged_out_memory(T85* C);
void r85make(T85* C,T2 a1,T2 a2);
void r85fill_tagged_out_memory(T85* C);
T6 r85conforms_to(T85* C,T0* a1);
void r85resize(T85* C,T2 a1,T2 a2);
T0* r85twin(T85* C);
void r230copy(T230* C,T0* a1);
T6 r230se_assigned_from(T0* a1);
void r230print_on(T230* C,T0* a1);
void r230out_in_tagged_out_memory(T230* C);
void r230make(T230* C,T2 a1);
void r230fill_tagged_out_memory(T230* C);
T6 r230conforms_to(T230* C,T0* a1);
void r230resize(T230* C,T2 a1);
T0* r230twin(T230* C);
void r103copy(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_on(T103* C,T0* a1);
void r103out_in_tagged_out_memory(T103* C);
void r103make(T103* C,T2 a1);
void r103fill_tagged_out_memory(T103* C);
T6 r103conforms_to(T103* C,T0* a1);
void r103resize(T103* C,T2 a1);
T0* r103twin(T103* C);
void r77copy(T77* C,T0* a1);
T6 r77se_assigned_from(T0* a1);
void r77print_on(T77* C,T0* a1);
void r77out_in_tagged_out_memory(T77* C);
void r77make(T77* C,T2 a1);
void r77fill_tagged_out_memory(T77* C);
T6 r77conforms_to(T77* C,T0* a1);
void r77resize(T77* C,T2 a1);
T0* r77twin(T77* C);
void r249copy(T249* C,T0* a1);
T6 r249se_assigned_from(T0* a1);
void r249print_on(T249* C,T0* a1);
void r249out_in_tagged_out_memory(T249* C);
void r249make(T249* C,T2 a1);
void r249fill_tagged_out_memory(T249* C);
T6 r249conforms_to(T249* C,T0* a1);
void r249resize(T249* C,T2 a1);
T0* r249twin(T249* C);
void r175copy(T175* C,T0* a1);
T6 r175se_assigned_from(T0* a1);
void r175print_on(T175* C,T0* a1);
void r175out_in_tagged_out_memory(T175* C);
void r175make(T175* C,T2 a1);
void r175fill_tagged_out_memory(T175* C);
T6 r175conforms_to(T175* C,T0* a1);
void r175resize(T175* C,T2 a1);
T0* r175twin(T175* C);
void r101copy(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
void r101print_on(T101* C,T0* a1);
void r101out_in_tagged_out_memory(T101* C);
void r101make(T101* C,T2 a1);
void r101fill_tagged_out_memory(T101* C);
T6 r101conforms_to(T101* C,T0* a1);
void r101resize(T101* C,T2 a1);
T0* r101twin(T101* C);
void r101with_capacity(T101* C,T2 a1);
void r101from_collection(T101* C,T0* a1);
void r338copy(T338* C,T0* a1);
void r338force(T338* C,T0* a1,T2 a2);
T2 r338count(T338* C);
T0* r338item(T338* C,T2 a1);
T6 r338valid_index(T338* C,T2 a1);
T6 r338se_assigned_from(T0* a1);
void r338print_on(T338* C,T0* a1);
void r338out_in_tagged_out_memory(T338* C);
void r338make(T338* C,T2 a1,T2 a2);
void r338fill_tagged_out_memory(T338* C);
T6 r338conforms_to(T338* C,T0* a1);
void r338add_last(T338* C,T0* a1);
void r338resize(T338* C,T2 a1,T2 a2);
T0* r338twin(T338* C);
void r128copy(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
void r128print_on(T128* C,T0* a1);
void r128out_in_tagged_out_memory(T128* C);
void r128make(T128* C,T2 a1);
void r128fill_tagged_out_memory(T128* C);
T6 r128conforms_to(T128* C,T0* a1);
void r128resize(T128* C,T2 a1);
T0* r128twin(T128* C);
void r320copy(T320* C,T0* a1);
T2 r320count(T320* C);
T0* r320item(T320* C,T2 a1);
T6 r320se_assigned_from(T0* a1);
void r320print_on(T320* C,T0* a1);
void r320out_in_tagged_out_memory(T320* C);
void r320make(T320* C,T2 a1);
void r320fill_tagged_out_memory(T320* C);
T6 r320conforms_to(T320* C,T0* a1);
void r320resize(T320* C,T2 a1);
T0* r320twin(T320* C);
void r384copy(T384* C,T0* a1);
void r384set(T384* C,T0* a1,T6 a2,T6 a3);
T6 r384se_assigned_from(T0* a1);
void r384print_on(T384* C,T0* a1);
void r384out_in_tagged_out_memory(T384* C);
void r384make(T384* C,T0* a1);
T6 r384conforms_to(T384* C,T0* a1);
void r384set_after(T384* C);
T0* r384twin(T384* C);
void r244copy(T244* C,T0* a1);
T6 r244se_assigned_from(T0* a1);
void r244print_on(T244* C,T0* a1);
void r244out_in_tagged_out_memory(T244* C);
T6 r244off(T244* C);
T6 r244conforms_to(T244* C,T0* a1);
T0* r244twin(T244* C);
T2 r200new_capacity(T2 a1);
void r200copy(T200* C,T0* a1);
T6 r200extendible(T200* C,T2 a1);
void r200remove_traversing_cursor(T200* C,T0* a1);
void r200move_all_cursors_after(T200* C);
void r200add_traversing_cursor(T200* C,T0* a1);
T6 r200se_assigned_from(T0* a1);
void r200print_on(T200* C,T0* a1);
T0* r200clone(T0* a1);
void r200out_in_tagged_out_memory(T200* C);
T6 r200cursor_before(T0* a1);
void r200make(T200* C,T2 a1);
T6 r200cursor_after(T0* a1);
T6 r200conforms_to(T200* C,T0* a1);
void r200resize(T200* C,T2 a1);
T0* r200twin(T200* C);
void r200force_last(T200* C,T0* a1);
T0* r200new_cursor(T200* C);
T6 r200cursor_off(T0* a1);
void r205copy(T205* C,T0* a1);
T6 r205se_assigned_from(T0* a1);
void r205print_on(T205* C,T0* a1);
void r205out_in_tagged_out_memory(T205* C);
T6 r205off(T205* C);
T6 r205conforms_to(T205* C,T0* a1);
T0* r205twin(T205* C);
void r321clear_all(T0* a1);
T6 r321se_assigned_from(T0* a1);
void r321print_on(T321* C,T0* a1);
void r321out_in_tagged_out_memory(T321* C);
T0* r321make(T2 a1);
T6 r321conforms_to(T321* C,T0* a1);
T0* r321resize(T0* a1,T2 a2);
T0* r321twin(T321* C);
T6 r123se_assigned_from(T0* a1);
void r123print_on(T123* C,T0* a1);
void r123out_in_tagged_out_memory(T123* C);
T0* r123to_fixed_array(T0* a1);
T0* r123make(T2 a1);
T0* r123make_from_array(T0* a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
T6 r370se_assigned_from(T0* a1);
void r370print_on(T370* C,T0* a1);
void r370out_in_tagged_out_memory(T370* C);
void r370make(T370* C,T0* a1,T0* a2);
T6 r370conforms_to(T370* C,T0* a1);
T0* r370twin(T370* C);
void r120copy(T120* C,T0* a1);
T6 r120se_assigned_from(T0* a1);
void r120print_on(T120* C,T0* a1);
void r120out_in_tagged_out_memory(T120* C);
void r120make(T120* C,T0* a1);
T6 r120off(T120* C);
T6 r120conforms_to(T120* C,T0* a1);
T0* r120twin(T120* C);
void r153copy(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
void r153print_on(T153* C,T0* a1);
void r153out_in_tagged_out_memory(T153* C);
T6 r153off(T153* C);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
T6 r227se_assigned_from(T0* a1);
void r227print_on(T227* C,T0* a1);
void r227out_in_tagged_out_memory(T227* C);
void r227make(T227* C,T0* a1,T0* a2);
T6 r227conforms_to(T227* C,T0* a1);
T0* r227twin(T227* C);
T6 r388se_assigned_from(T0* a1);
void r388print_on(T388* C,T0* a1);
void r388out_in_tagged_out_memory(T388* C);
T6 r388conforms_to(T388* C,T0* a1);
T0* r388twin(T388* C);
void r410copy(T410* C,T0* a1);
T6 r410se_assigned_from(T0* a1);
void r410print_on(T410* C,T0* a1);
void r410out_in_tagged_out_memory(T410* C);
T6 r410off(T410* C);
T6 r410conforms_to(T410* C,T0* a1);
T0* r410twin(T410* C);
T2 r72new_capacity(T2 a1);
void r72copy(T72* C,T0* a1);
T6 r72extendible(T72* C,T2 a1);
void r72remove_traversing_cursor(T72* C,T0* a1);
T0* r72item(T72* C,T2 a1);
void r72move_all_cursors_after(T72* C);
void r72add_traversing_cursor(T72* C,T0* a1);
T6 r72se_assigned_from(T0* a1);
void r72print_on(T72* C,T0* a1);
T0* r72clone(T0* a1);
void r72out_in_tagged_out_memory(T72* C);
T6 r72cursor_before(T0* a1);
void r72make(T72* C,T2 a1);
T6 r72cursor_after(T0* a1);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1);
T0* r72twin(T72* C);
void r72force_last(T72* C,T0* a1);
T0* r72new_cursor(T72* C);
T6 r72cursor_off(T0* a1);
void r371copy(T371* C,T0* a1);
T0* r371cursor_item(T0* a1);
void r371remove_traversing_cursor(T371* C,T0* a1);
void r371move_all_cursors_after(T371* C);
void r371add_traversing_cursor(T371* C,T0* a1);
T6 r371se_assigned_from(T0* a1);
void r371print_on(T371* C,T0* a1);
void r371out_in_tagged_out_memory(T371* C);
void r371make(T371* C);
T6 r371cursor_after(T0* a1);
T6 r371conforms_to(T371* C,T0* a1);
void r371cursor_forth(T371* C,T0* a1);
void r371cursor_start(T371* C,T0* a1);
T0* r371twin(T371* C);
T0* r371new_cursor(T371* C);
void r371put_last(T371* C,T0* a1);
T6 r371cursor_off(T0* a1);
T6 r365se_assigned_from(T0* a1);
void r365print_on(T365* C,T0* a1);
void r365out_in_tagged_out_memory(T365* C);
T6 r365conforms_to(T365* C,T0* a1);
T0* r365twin(T365* C);
T2 r394new_capacity(T2 a1);
void r394copy(T394* C,T0* a1);
T6 r394extendible(T394* C,T2 a1);
void r394force(T394* C,T0* a1);
T0* r394item(T394* C);
T6 r394se_assigned_from(T0* a1);
void r394print_on(T394* C,T0* a1);
T0* r394clone(T0* a1);
void r394out_in_tagged_out_memory(T394* C);
void r394make(T394* C,T2 a1);
void r394remove(T394* C);
T6 r394conforms_to(T394* C,T0* a1);
void r394resize(T394* C,T2 a1);
T0* r394twin(T394* C);
T2 r64new_capacity(T2 a1);
void r64copy(T64* C,T0* a1);
T6 r64extendible(T64* C,T2 a1);
void r64remove_traversing_cursor(T64* C,T0* a1);
void r64move_all_cursors_after(T64* C);
void r64add_traversing_cursor(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
void r64print_on(T64* C,T0* a1);
T0* r64clone(T0* a1);
void r64out_in_tagged_out_memory(T64* C);
T6 r64cursor_before(T0* a1);
void r64make(T64* C,T2 a1);
T6 r64cursor_after(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
void r64resize(T64* C,T2 a1);
T0* r64twin(T64* C);
void r64force_last(T64* C,T0* a1);
T0* r64new_cursor(T64* C);
void r64put_last(T64* C,T0* a1);
T6 r64cursor_off(T0* a1);
void r274copy(T274* C,T0* a1);
T6 r274se_assigned_from(T0* a1);
void r274print_on(T274* C,T0* a1);
void r274out_in_tagged_out_memory(T274* C);
T6 r274off(T274* C);
T6 r274conforms_to(T274* C,T0* a1);
T0* r274twin(T274* C);
T6 r398se_assigned_from(T0* a1);
void r398print_on(T398* C,T0* a1);
void r398out_in_tagged_out_memory(T398* C);
T0* r398make(T2 a1);
T6 r398conforms_to(T398* C,T0* a1);
T0* r398resize(T0* a1,T2 a2);
T0* r398twin(T398* C);
void r190copy(T190* C,T0* a1);
T6 r190se_assigned_from(T0* a1);
void r190print_on(T190* C,T0* a1);
void r190out_in_tagged_out_memory(T190* C);
T6 r190off(T190* C);
T6 r190conforms_to(T190* C,T0* a1);
T0* r190twin(T190* C);
T2 r58new_capacity(T2 a1);
void r58copy(T58* C,T0* a1);
T6 r58extendible(T58* C,T2 a1);
void r58force(T58* C,T0* a1);
T0* r58item(T58* C);
T6 r58se_assigned_from(T0* a1);
void r58print_on(T58* C,T0* a1);
T0* r58clone(T0* a1);
void r58out_in_tagged_out_memory(T58* C);
void r58make(T58* C,T2 a1);
void r58remove(T58* C);
T6 r58conforms_to(T58* C,T0* a1);
void r58resize(T58* C,T2 a1);
T0* r58twin(T58* C);
T2 r254new_capacity(T2 a1);
void r254copy(T254* C,T0* a1);
T6 r254extendible(T254* C,T2 a1);
void r254remove_traversing_cursor(T254* C,T0* a1);
void r254move_all_cursors_after(T254* C);
void r254add_traversing_cursor(T254* C,T0* a1);
T6 r254se_assigned_from(T0* a1);
void r254print_on(T254* C,T0* a1);
T0* r254clone(T0* a1);
void r254out_in_tagged_out_memory(T254* C);
T6 r254cursor_before(T0* a1);
void r254make(T254* C,T2 a1);
T6 r254cursor_after(T0* a1);
T6 r254conforms_to(T254* C,T0* a1);
void r254resize(T254* C,T2 a1);
T0* r254twin(T254* C);
void r254force_last(T254* C,T0* a1);
T0* r254new_cursor(T254* C);
T6 r254cursor_off(T0* a1);
T6 r140se_assigned_from(T0* a1);
void r140print_on(T140* C,T0* a1);
void r140out_in_tagged_out_memory(T140* C);
T0* r140make(T2 a1);
T6 r140conforms_to(T140* C,T0* a1);
T0* r140resize(T0* a1,T2 a2);
T0* r140twin(T140* C);
T2 r228new_capacity(T2 a1);
void r228copy(T228* C,T0* a1);
T6 r228extendible(T228* C,T2 a1);
void r228remove_traversing_cursor(T228* C,T0* a1);
void r228move_all_cursors_after(T228* C);
void r228add_traversing_cursor(T228* C,T0* a1);
T6 r228se_assigned_from(T0* a1);
void r228print_on(T228* C,T0* a1);
T0* r228clone(T0* a1);
void r228out_in_tagged_out_memory(T228* C);
T6 r228cursor_before(T0* a1);
void r228make(T228* C,T2 a1);
T6 r228cursor_after(T0* a1);
T6 r228conforms_to(T228* C,T0* a1);
void r228resize(T228* C,T2 a1);
T0* r228twin(T228* C);
void r228force_last(T228* C,T0* a1);
T0* r228new_cursor(T228* C);
T6 r228cursor_off(T0* a1);
T6 r369se_assigned_from(T0* a1);
void r369print_on(T369* C,T0* a1);
void r369out_in_tagged_out_memory(T369* C);
void r369make(T369* C,T0* a1,T0* a2);
T6 r369conforms_to(T369* C,T0* a1);
T0* r369twin(T369* C);
T6 r252se_assigned_from(T0* a1);
void r252print_on(T252* C,T0* a1);
void r252out_in_tagged_out_memory(T252* C);
T0* r252make(T2 a1);
T6 r252conforms_to(T252* C,T0* a1);
T0* r252resize(T0* a1,T2 a2);
T0* r252twin(T252* C);
T2 r96new_capacity(T2 a1);
void r96copy(T96* C,T0* a1);
void r96force(T96* C,T0* a1,T0* a2);
void r96make_clashes(T96* C,T2 a1);
T0* r96cursor_item(T96* C,T0* a1);
void r96search_position(T96* C,T0* a1);
void r96remove_traversing_cursor(T96* C,T0* a1);
void r96clone_slots(T96* C);
extern T0*oBC92FIXED_INTEGER_ARRAY_;
void r96keys_resize(T96* C,T2 a1);
void r96clone_clashes(T96* C);
void r96move_all_cursors_after(T96* C);
void r96make_items(T96* C,T2 a1);
void r96add_traversing_cursor(T96* C,T0* a1);
T6 r96se_assigned_from(T0* a1);
void r96print_on(T96* C,T0* a1);
T0* r96clone(T0* a1);
void r96remove_position(T96* C,T2 a1);
void r96out_in_tagged_out_memory(T96* C);
T0* r96key_for_iteration(T96* C);
T6 r96after(T96* C);
void r96make(T96* C,T2 a1);
T0* r96item_for_iteration(T96* C);
void r96remove(T96* C,T0* a1);
T0* r96cursor_key(T96* C,T0* a1);
void r96clone_items(T96* C);
T6 r96cursor_after(T0* a1);
T6 r96conforms_to(T96* C,T0* a1);
void r96make_keys(T96* C,T2 a1);
T2 r96hash_position(T96* C,T0* a1);
void r96cursor_forth(T96* C,T0* a1);
void r96items_resize(T96* C,T2 a1);
void r96clone_keys(T96* C);
void r96move_cursors_after(T96* C,T2 a1);
void r96resize(T96* C,T2 a1);
T0* r96found_item(T96* C);
void r96make_with_equality_testers(T96* C,T2 a1,T0* a2,T0* a3);
T6 r96found(T96* C);
void r96move_cursors_forth(T96* C,T2 a1);
void r96cursor_start(T96* C,T0* a1);
void r96search(T96* C,T0* a1);
void r96clashes_resize(T96* C,T2 a1);
void r96slots_resize(T96* C,T2 a1);
T0* r96twin(T96* C);
T0* r96new_cursor(T96* C);
void r96make_slots(T96* C,T2 a1);
void r96move_all_cursors(T96* C,T2 a1,T2 a2);
T2 r96new_modulus(T2 a1);
T6 r96cursor_off(T0* a1);
T6 r124se_assigned_from(T0* a1);
void r124print_on(T124* C,T0* a1);
void r124out_in_tagged_out_memory(T124* C);
T0* r124make(T2 a1);
T6 r124conforms_to(T124* C,T0* a1);
T0* r124resize(T0* a1,T2 a2);
T0* r124twin(T124* C);
T2 r88new_capacity(T2 a1);
void r88copy(T88* C,T0* a1);
T6 r88extendible(T88* C,T2 a1);
void r88remove_traversing_cursor(T88* C,T0* a1);
void r88move_all_cursors_after(T88* C);
void r88add_traversing_cursor(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
void r88print_on(T88* C,T0* a1);
T0* r88clone(T0* a1);
void r88out_in_tagged_out_memory(T88* C);
T6 r88cursor_before(T0* a1);
void r88make(T88* C,T2 a1);
T6 r88cursor_after(T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
void r88resize(T88* C,T2 a1);
T0* r88twin(T88* C);
void r88force_last(T88* C,T0* a1);
T0* r88new_cursor(T88* C);
T6 r88cursor_off(T0* a1);
T6 r100se_assigned_from(T0* a1);
void r100print_on(T100* C,T0* a1);
void r100out_in_tagged_out_memory(T100* C);
T6 r100conforms_to(T100* C,T0* a1);
T6 r100test(T0* a1,T0* a2);
T0* r100twin(T100* C);
T6 r193se_assigned_from(T0* a1);
void r193print_on(T193* C,T0* a1);
void r193out_in_tagged_out_memory(T193* C);
T0* r193make(T2 a1);
T6 r193conforms_to(T193* C,T0* a1);
T0* r193resize(T0* a1,T2 a2);
T0* r193twin(T193* C);
T6 r233se_assigned_from(T0* a1);
void r233print_on(T233* C,T0* a1);
void r233out_in_tagged_out_memory(T233* C);
T0* r233make(T2 a1);
T6 r233conforms_to(T233* C,T0* a1);
T0* r233resize(T0* a1,T2 a2);
T0* r233twin(T233* C);
extern T0*oBC59Dir_attribute_name;
extern int fBC59Dir_attribute_name;
T0* r223Dir_attribute_name(void);
void r223_59Pmake_from_element(T223* C,T0* a1,T0* a2);
extern T0*oBC223Output_filename_attribute_name;
extern int fBC223Output_filename_attribute_name;
T0* r223Output_filename_attribute_name(void);
void r223make_from_element(T223* C,T0* a1,T0* a2);
void r223trace(T223* C,T0* a1);
extern T0*oBC223Stylesheet_filename_attribute_name;
extern int fBC223Stylesheet_filename_attribute_name;
T0* r223Stylesheet_filename_attribute_name(void);
T6 r223se_assigned_from(T0* a1);
void r223print_on(T223* C,T0* a1);
T0* r223clone(T0* a1);
void r223out_in_tagged_out_memory(T223* C);
void r223make(T223* C,T0* a1);
extern T0*oBC223Parameter_element_name;
extern int fBC223Parameter_element_name;
T0* r223Parameter_element_name(void);
T0* r223uc_attribute_value(T223* C,T0* a1,T0* a2);
extern T0*oBC223Value_attribute_name;
extern int fBC223Value_attribute_name;
T0* r223Value_attribute_name(void);
T6 r223conforms_to(T223* C,T0* a1);
void r223print(T0* a1);
void r223execute(T223* C);
T6 r223has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC19Name_attribute_name;
extern int fBC19Name_attribute_name;
T0* r223Name_attribute_name(void);
extern T0*oBC1std_output;
void r223_60Pmake(T223* C,T0* a1);
T0* r223twin(T223* C);
void r223execute_shell(T223* C,T0* a1);
T6 r223is_executable(T223* C);
extern T0*oBC223Input_filename_attribute_name;
extern int fBC223Input_filename_attribute_name;
T0* r223Input_filename_attribute_name(void);
T6 r299se_assigned_from(T0* a1);
void r299print_on(T299* C,T0* a1);
void r299out_in_tagged_out_memory(T299* C);
T6 r299conforms_to(T299* C,T0* a1);
T0* r299twin(T299* C);
T0* r138pathname_from_file_system(T138* C,T0* a1,T0* a2);
T6 r138is_absolute_pathname(T0* a1);
T0* r138current_working_directory(T138* C);
void r138cd(T138* C,T0* a1);
T0* r138absolute_pathname(T138* C,T0* a1);
T0* r138current_drive(T138* C);
T6 r138se_assigned_from(T0* a1);
T6 r138is_directory_readable(T0* a1);
void r138print_on(T138* C,T0* a1);
T0* r138clone(T0* a1);
T0* r138dirname(T0* a1);
void r138delete_file(T0* a1);
void r138out_in_tagged_out_memory(T138* C);
void r138set_current_working_directory(T138* C,T0* a1);
T0* r138cwd(T138* C);
T6 r138same_type(T138* C,T0* a1);
T6 r138is_file_readable(T0* a1);
extern T0*oBC134tmp_file;
extern int fBC134tmp_file;
T0* r138tmp_file(void);
T6 r138conforms_to(T138* C,T0* a1);
void r138copy_file(T0* a1,T0* a2);
T0* r138string_to_pathname(T0* a1);
void r138rename_file(T0* a1,T0* a2);
extern T0*oBC138root_directory;
T6 r138is_relative_pathname(T0* a1);
T6 r138is_root_directory(T0* a1);
T0* r138pathname_to_string(T0* a1);
T0* r138twin(T138* C);
extern T0*oBC22STRING_;
T0* r138canonical_pathname(T0* a1);
T0* r138pathname(T0* a1,T0* a2);
extern T0*oBC134tmp_directory;
extern int fBC134tmp_directory;
T0* r138tmp_directory(void);
extern T0*oBC155Clean_attribute_name;
extern int fBC155Clean_attribute_name;
T0* r155Clean_attribute_name(void);
T0* r155Dir_attribute_name(void);
extern T0*oBC29unix_file_system;
void r155_59Pmake_from_element(T155* C,T0* a1,T0* a2);
void r155make_from_element(T155* C,T0* a1,T0* a2);
void r155trace(T155* C,T0* a1);
T6 r155is_cleanable(T155* C);
T0* r155attribute_value(T155* C,T0* a1,T0* a2);
extern T0*oBC155Ace_attribute_name;
extern int fBC155Ace_attribute_name;
T0* r155Ace_attribute_name(void);
extern T0*oBC155Root_class_attribute_name;
extern int fBC155Root_class_attribute_name;
T0* r155Root_class_attribute_name(void);
extern T0*oBC29file_system;
extern int fBC29file_system;
T0* r155file_system(void);
T6 r155se_assigned_from(T0* a1);
void r155print_on(T155* C,T0* a1);
T0* r155clone(T0* a1);
void r155out_in_tagged_out_memory(T155* C);
T0* r155new_ace_cmdline(T155* C);
T6 r155uc_boolean_value(T155* C,T0* a1,T0* a2);
extern T0*oBC30operating_system;
extern T0*oBC19True_attribute_value;
extern int fBC19True_attribute_value;
T0* r155True_attribute_value(void);
T0* r155uc_attribute_value(T155* C,T0* a1,T0* a2);
extern T0*oBC155Case_insensitive_attribute_name;
extern int fBC155Case_insensitive_attribute_name;
T0* r155Case_insensitive_attribute_name(void);
T6 r155is_traditional_configuration(T155* C);
T6 r155conforms_to(T155* C,T0* a1);
void r155print(T0* a1);
extern T0*oBC155Executable_attribute_name;
extern int fBC155Executable_attribute_name;
T0* r155Executable_attribute_name(void);
extern T0*oBC155No_style_warning_attribute_name;
extern int fBC155No_style_warning_attribute_name;
T0* r155No_style_warning_attribute_name(void);
void r155execute(T155* C);
T6 r155has_uc_attribute(T0* a1,T0* a2);
T0* r155uc_attribute_value_or_default(T155* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC19False_attribute_value;
extern int fBC19False_attribute_value;
T0* r155False_attribute_value(void);
T0* r155attribute_value_or_default(T155* C,T0* a1,T0* a2,T0* a3);
T0* r155twin(T155* C);
T0* r155new_clean_cmdline(T155* C);
extern T0*oBC155Creation_procedure_attribute_name;
extern int fBC155Creation_procedure_attribute_name;
T0* r155Creation_procedure_attribute_name(void);
T0* r155new_traditional_cmdline(T155* C);
extern T0*oBC29windows_file_system;
void r155execute_shell(T155* C,T0* a1);
T6 r155is_executable(T155* C);
T6 r155is_ace_configuration(T155* C);
T6 r65se_assigned_from(T0* a1);
void r65print_on(T65* C,T0* a1);
void r65out_in_tagged_out_memory(T65* C);
void r65make(T65* C,T0* a1,T0* a2);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
T6 r331se_assigned_from(T0* a1);
void r331print_on(T331* C,T0* a1);
void r331out_in_tagged_out_memory(T331* C);
extern T0*oBC18Arguments;
extern int fBC18Arguments;
T0* r331Arguments(void);
void r331make(T331* C,T0* a1);
T0* r331message(T331* C,T0* a1);
T6 r331conforms_to(T331* C,T0* a1);
T0* r331twin(T331* C);
T0* r331default_message(T331* C);
T0* r196Dir_attribute_name(void);
void r196_59Pmake_from_element(T196* C,T0* a1,T0* a2);
extern T0*oBC196Output_filename_attribute_name;
extern int fBC196Output_filename_attribute_name;
T0* r196Output_filename_attribute_name(void);
void r196make_from_element(T196* C,T0* a1,T0* a2);
void r196trace(T196* C,T0* a1);
T6 r196se_assigned_from(T0* a1);
void r196print_on(T196* C,T0* a1);
T0* r196clone(T0* a1);
void r196out_in_tagged_out_memory(T196* C);
T6 r196uc_boolean_value(T196* C,T0* a1,T0* a2);
void r196make(T196* C,T0* a1);
T0* r196True_attribute_value(void);
extern T0*oBC196Verbose_filename_attribute_name;
extern int fBC196Verbose_filename_attribute_name;
T0* r196Verbose_filename_attribute_name(void);
T0* r196uc_attribute_value(T196* C,T0* a1,T0* a2);
T6 r196conforms_to(T196* C,T0* a1);
void r196print(T0* a1);
void r196execute(T196* C);
T6 r196has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC196Tokens_classname_attribute_name;
extern int fBC196Tokens_classname_attribute_name;
T0* r196Tokens_classname_attribute_name(void);
T0* r196False_attribute_value(void);
void r196_60Pmake(T196* C,T0* a1);
extern T0*oBC196Separate_actions_attribute_name;
extern int fBC196Separate_actions_attribute_name;
T0* r196Separate_actions_attribute_name(void);
T0* r196twin(T196* C);
void r196execute_shell(T196* C,T0* a1);
T6 r196is_executable(T196* C);
extern T0*oBC196Input_filename_attribute_name;
extern int fBC196Input_filename_attribute_name;
T0* r196Input_filename_attribute_name(void);
T0* r329current_working_directory(T329* C);
T6 r329se_assigned_from(T0* a1);
void r329print_on(T329* C,T0* a1);
void r329old_read_character(T329* C);
T0* r329clone(T0* a1);
extern T6 oBC136is_windows;
extern int fBC136is_windows;
T6 r329is_windows(T329* C);
T6 r329old_end_of_file(T329* C);
void r329out_in_tagged_out_memory(T329* C);
void r329make(T329* C);
T6 r329conforms_to(T329* C,T0* a1);
extern T6 oBC136is_unix;
extern int fBC136is_unix;
T6 r329is_unix(T329* C);
T0* r329twin(T329* C);
T6 r333se_assigned_from(T0* a1);
void r333print_on(T333* C,T0* a1);
void r333out_in_tagged_out_memory(T333* C);
void r333report_message(T333* C,T0* a1);
extern T0*oBC315std;
T0* r333message(T0* a1);
T6 r333conforms_to(T333* C,T0* a1);
T0* r333twin(T333* C);
void r333make_standard(T333* C);
void r333report_error(T333* C,T0* a1);
extern T0*oBC159Clean_attribute_name;
extern int fBC159Clean_attribute_name;
T0* r159Clean_attribute_name(void);
T0* r159Dir_attribute_name(void);
void r159_59Pmake_from_element(T159* C,T0* a1,T0* a2);
extern T0*oBC159System_attribute_name;
extern int fBC159System_attribute_name;
T0* r159System_attribute_name(void);
void r159make_from_element(T159* C,T0* a1,T0* a2);
void r159trace(T159* C,T0* a1);
T6 r159is_cleanable(T159* C);
extern T0*oBC159Ace_attribute_name;
extern int fBC159Ace_attribute_name;
T0* r159Ace_attribute_name(void);
T0* r159file_system(void);
T6 r159se_assigned_from(T0* a1);
void r159print_on(T159* C,T0* a1);
T0* r159clone(T0* a1);
void r159out_in_tagged_out_memory(T159* C);
T6 r159uc_boolean_value(T159* C,T0* a1,T0* a2);
void r159execute_clean(T159* C);
void r159execute_compile(T159* C);
T0* r159True_attribute_value(void);
extern T0*oBC159Finalize_attribute_name;
extern int fBC159Finalize_attribute_name;
T0* r159Finalize_attribute_name(void);
T0* r159uc_attribute_value(T159* C,T0* a1,T0* a2);
T6 r159conforms_to(T159* C,T0* a1);
void r159print(T0* a1);
T6 r159is_compilable(T159* C);
void r159execute(T159* C);
T6 r159has_uc_attribute(T0* a1,T0* a2);
T0* r159uc_attribute_value_or_default(T159* C,T0* a1,T0* a2,T0* a3);
T0* r159False_attribute_value(void);
T0* r159attribute_value_or_default(T159* C,T0* a1,T0* a2,T0* a3);
T0* r159twin(T159* C);
extern T0*oBC159Fish_attribute_name;
extern int fBC159Fish_attribute_name;
T0* r159Fish_attribute_name(void);
void r159execute_shell(T159* C,T0* a1);
T6 r159is_executable(T159* C);
T0* r213Dir_attribute_name(void);
void r213_59Pmake_from_element(T213* C,T0* a1,T0* a2);
void r213make_from_element(T213* C,T0* a1,T0* a2);
void r213trace(T213* C,T0* a1);
T0* r213attribute_value(T213* C,T0* a1,T0* a2);
T0* r213file_system(void);
T6 r213se_assigned_from(T0* a1);
void r213print_on(T213* C,T0* a1);
void r213out_in_tagged_out_memory(T213* C);
T6 r213conforms_to(T213* C,T0* a1);
void r213print(T0* a1);
void r213execute(T213* C);
T0* r213twin(T213* C);
extern T0*oBC213Directory_attribute_name;
extern int fBC213Directory_attribute_name;
T0* r213Directory_attribute_name(void);
T6 r213is_executable(T213* C);
T6 r341se_assigned_from(T0* a1);
void r341print_on(T341* C,T0* a1);
void r341out_in_tagged_out_memory(T341* C);
T0* r341Arguments(void);
void r341make(T341* C,T0* a1);
T0* r341message(T341* C,T0* a1);
T6 r341conforms_to(T341* C,T0* a1);
T0* r341twin(T341* C);
T0* r341default_message(T341* C);
T0* r217Dir_attribute_name(void);
void r217_59Pmake_from_element(T217* C,T0* a1,T0* a2);
void r217make_from_element(T217* C,T0* a1,T0* a2);
void r217trace(T217* C,T0* a1);
T0* r217attribute_value(T217* C,T0* a1,T0* a2);
T0* r217file_system(void);
T6 r217se_assigned_from(T0* a1);
void r217print_on(T217* C,T0* a1);
void r217out_in_tagged_out_memory(T217* C);
T6 r217is_to_file_executable(T217* C);
extern T0*oBC217To_directory_attribute_name;
extern int fBC217To_directory_attribute_name;
T0* r217To_directory_attribute_name(void);
extern T0*oBC217To_file_attribute_name;
extern int fBC217To_file_attribute_name;
T0* r217To_file_attribute_name(void);
T6 r217conforms_to(T217* C,T0* a1);
void r217print(T0* a1);
void r217execute(T217* C);
T6 r217is_to_directory_executable(T217* C);
T0* r217twin(T217* C);
extern T0*oBC217File_attribute_name;
extern int fBC217File_attribute_name;
T0* r217File_attribute_name(void);
T6 r217is_executable(T217* C);
T6 r355is_closed(T355* C);
void r355old_close(T355* C);
T2 r355time_stamp(T355* C);
T6 r355file_exists(T0* a1);
extern T357 oBC281epoch_time;
extern int fBC281epoch_time;
T357 r355epoch_time(void);
T357 r355last_change_of(T0* a1);
void r355open_read(T355* C);
T6 r355se_assigned_from(T0* a1);
void r355print_on(T355* C,T0* a1);
void r355old_read_character(T355* C);
T6 r355old_end_of_file(T355* C);
void r355out_in_tagged_out_memory(T355* C);
void r355read_character(T355* C);
void r355close(T355* C);
void r355make(T355* C,T0* a1);
T6 r355conforms_to(T355* C,T0* a1);
void r355connect_to(T355* C,T0* a1);
extern T282 oBC1file_tools;
void r355read_string(T355* C,T2 a1);
T0* r355twin(T355* C);
void r355old_open_read(T355* C);
T0* r209Dir_attribute_name(void);
void r209_59Pmake_from_element(T209* C,T0* a1,T0* a2);
void r209make_from_element(T209* C,T0* a1,T0* a2);
extern T0*oBC209Start_target_attribute_name;
extern int fBC209Start_target_attribute_name;
T0* r209Start_target_attribute_name(void);
extern T0*oBC209Reuse_variables_attribute_name;
extern int fBC209Reuse_variables_attribute_name;
T0* r209Reuse_variables_attribute_name(void);
T0* r209attribute_value(T209* C,T0* a1,T0* a2);
T6 r209se_assigned_from(T0* a1);
T6 r209is_filename_executable(T209* C);
void r209print_on(T209* C,T0* a1);
void r209out_in_tagged_out_memory(T209* C);
T6 r209uc_boolean_value(T209* C,T0* a1,T0* a2);
T6 r209is_target_executable(T209* C);
T0* r209True_attribute_value(void);
T0* r209uc_attribute_value(T209* C,T0* a1,T0* a2);
T6 r209conforms_to(T209* C,T0* a1);
void r209print(T0* a1);
extern T0*oBC209Filename_attribute_name;
extern int fBC209Filename_attribute_name;
T0* r209Filename_attribute_name(void);
void r209execute(T209* C);
T6 r209has_uc_attribute(T0* a1,T0* a2);
T0* r209False_attribute_value(void);
T0* r209twin(T209* C);
T6 r209is_executable(T209* C);
T0* r163Dir_attribute_name(void);
void r163_59Pmake_from_element(T163* C,T0* a1,T0* a2);
void r163make_from_element(T163* C,T0* a1,T0* a2);
void r163trace(T163* C,T0* a1);
T0* r163attribute_value(T163* C,T0* a1,T0* a2);
T6 r163se_assigned_from(T0* a1);
void r163print_on(T163* C,T0* a1);
void r163out_in_tagged_out_memory(T163* C);
T6 r163conforms_to(T163* C,T0* a1);
void r163print(T0* a1);
extern T0*oBC163Executable_attribute_name;
extern int fBC163Executable_attribute_name;
T0* r163Executable_attribute_name(void);
void r163execute(T163* C);
T0* r163twin(T163* C);
void r163execute_shell(T163* C,T0* a1);
T6 r163is_executable(T163* C);
T0* r247Dir_attribute_name(void);
void r247_59Pmake_from_element(T247* C,T0* a1,T0* a2);
extern T0*oBC247Variable_attribute_name;
extern int fBC247Variable_attribute_name;
T0* r247Variable_attribute_name(void);
void r247make_from_element(T247* C,T0* a1,T0* a2);
T0* r247file_system(void);
T6 r247se_assigned_from(T0* a1);
void r247print_on(T247* C,T0* a1);
T0* r247clone(T0* a1);
void r247out_in_tagged_out_memory(T247* C);
extern T0*oBC247True_value_attribute_name;
extern int fBC247True_value_attribute_name;
T0* r247True_value_attribute_name(void);
void r247make(T247* C,T0* a1);
extern T0*oBC247False_value_attribute_name;
extern int fBC247False_value_attribute_name;
T0* r247False_value_attribute_name(void);
T0* r247uc_attribute_value(T247* C,T0* a1,T0* a2);
T6 r247conforms_to(T247* C,T0* a1);
void r247print(T0* a1);
T0* r247string_tokens(T0* a1,T3 a2);
void r247execute(T247* C);
T6 r247has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC247Source_attribute_name;
extern int fBC247Source_attribute_name;
T0* r247Source_attribute_name(void);
void r247_60Pmake(T247* C,T0* a1);
T0* r247twin(T247* C);
T6 r247is_executable(T247* C);
extern T0*oBC247Target_attribute_name;
extern int fBC247Target_attribute_name;
T0* r247Target_attribute_name(void);
void r279disconnect(T279* C);
T6 r279se_assigned_from(T0* a1);
void r279print_on(T279* C,T0* a1);
void r279out_in_tagged_out_memory(T279* C);
void r279read_character(T279* C);
T6 r279conforms_to(T279* C,T0* a1);
T6 r279end_of_input(T279* C);
void r279connect_to(T279* C,T0* a1);
T3 r279last_character(T279* C);
T0* r279twin(T279* C);
T6 r350is_closed(T350* C);
void r350old_close(T350* C);
T2 r350time_stamp(T350* C);
T6 r350file_exists(T0* a1);
T357 r350epoch_time(void);
T357 r350last_change_of(T0* a1);
T6 r350se_assigned_from(T0* a1);
void r350print_on(T350* C,T0* a1);
void r350out_in_tagged_out_memory(T350* C);
void r350old_open_write(T350* C);
void r350close(T350* C);
void r350make(T350* C,T0* a1);
void r350old_put_string(T350* C,T0* a1);
T6 r350conforms_to(T350* C,T0* a1);
T0* r350twin(T350* C);
void r350open_write(T350* C);
T0* r207Dir_attribute_name(void);
void r207_59Pmake_from_element(T207* C,T0* a1,T0* a2);
void r207make_from_element(T207* C,T0* a1,T0* a2);
void r207trace(T207* C,T0* a1);
T6 r207se_assigned_from(T0* a1);
void r207print_on(T207* C,T0* a1);
T0* r207clone(T0* a1);
extern T0*oBC207Config_filename_attribute_name;
extern int fBC207Config_filename_attribute_name;
T0* r207Config_filename_attribute_name(void);
extern T0*oBC207Compile_attribute_name;
extern int fBC207Compile_attribute_name;
T0* r207Compile_attribute_name(void);
void r207out_in_tagged_out_memory(T207* C);
T0* r207uc_attribute_value(T207* C,T0* a1,T0* a2);
T6 r207conforms_to(T207* C,T0* a1);
void r207print(T0* a1);
void r207execute(T207* C);
T6 r207has_uc_attribute(T0* a1,T0* a2);
T0* r207twin(T207* C);
void r207execute_shell(T207* C,T0* a1);
T6 r207is_executable(T207* C);
T0* r219Dir_attribute_name(void);
void r219_59Pmake_from_element(T219* C,T0* a1,T0* a2);
void r219make_from_element(T219* C,T0* a1,T0* a2);
void r219trace(T219* C,T0* a1);
T0* r219attribute_value(T219* C,T0* a1,T0* a2);
T0* r219file_system(void);
T6 r219se_assigned_from(T0* a1);
void r219print_on(T219* C,T0* a1);
void r219out_in_tagged_out_memory(T219* C);
T6 r219is_to_file_executable(T219* C);
extern T0*oBC219To_directory_attribute_name;
extern int fBC219To_directory_attribute_name;
T0* r219To_directory_attribute_name(void);
extern T0*oBC219To_file_attribute_name;
extern int fBC219To_file_attribute_name;
T0* r219To_file_attribute_name(void);
T6 r219conforms_to(T219* C,T0* a1);
void r219print(T0* a1);
void r219execute(T219* C);
T6 r219is_to_directory_executable(T219* C);
T0* r219twin(T219* C);
extern T0*oBC219File_attribute_name;
extern int fBC219File_attribute_name;
T0* r219File_attribute_name(void);
T6 r219is_executable(T219* C);
T0* r61attribute_value_by_name(T61* C,T0* a1);
void r61add_attributes(T61* C,T0* a1);
T6 r61se_assigned_from(T0* a1);
void r61print_on(T61* C,T0* a1);
void r61add_attribute(T61* C,T0* a1);
void r61out_in_tagged_out_memory(T61* C);
void r61make(T61* C,T0* a1);
T0* r61children_by_name(T61* C,T0* a1);
T6 r61conforms_to(T61* C,T0* a1);
void r61make_attribute_handler(T61* C);
extern T0*oBC19Empty_string;
extern int fBC19Empty_string;
T0* r61Empty_string(void);
T0* r61twin(T61* C);
void r61make_composite(T61* C);
T6 r61has_attribute(T61* C,T0* a1);
T0* r139pathname_from_file_system(T139* C,T0* a1,T0* a2);
T6 r139is_absolute_pathname(T0* a1);
T0* r139current_working_directory(T139* C);
void r139cd(T139* C,T0* a1);
T0* r139absolute_pathname(T139* C,T0* a1);
T6 r139se_assigned_from(T0* a1);
T6 r139is_directory_readable(T0* a1);
void r139print_on(T139* C,T0* a1);
T0* r139clone(T0* a1);
T0* r139dirname(T0* a1);
void r139delete_file(T0* a1);
void r139out_in_tagged_out_memory(T139* C);
void r139set_current_working_directory(T139* C,T0* a1);
T0* r139cwd(T139* C);
T6 r139same_type(T139* C,T0* a1);
T6 r139is_file_readable(T0* a1);
T0* r139tmp_file(void);
T6 r139conforms_to(T139* C,T0* a1);
void r139copy_file(T0* a1,T0* a2);
T0* r139string_to_pathname(T0* a1);
void r139rename_file(T0* a1,T0* a2);
extern T0*oBC139root_directory;
T6 r139is_root_directory(T0* a1);
T0* r139pathname_to_string(T0* a1);
T0* r139twin(T139* C);
T0* r139basename(T0* a1);
T0* r139canonical_pathname(T0* a1);
T0* r139pathname(T0* a1,T0* a2);
T0* r139tmp_directory(void);
T2 r397new_capacity(T2 a1);
void r397copy(T397* C,T0* a1);
T6 r397extendible(T397* C,T2 a1);
void r397remove_traversing_cursor(T397* C,T0* a1);
void r397move_all_cursors_after(T397* C);
void r397add_traversing_cursor(T397* C,T0* a1);
T6 r397se_assigned_from(T0* a1);
void r397print_on(T397* C,T0* a1);
T0* r397clone(T0* a1);
void r397out_in_tagged_out_memory(T397* C);
T6 r397cursor_before(T0* a1);
void r397ds_arrayed_list_make(T397* C,T2 a1);
T6 r397cursor_after(T0* a1);
T6 r397conforms_to(T397* C,T0* a1);
void r397resize(T397* C,T2 a1);
void r397make_from_bilinear(T397* C,T0* a1);
T0* r397twin(T397* C);
void r397force_last(T397* C,T0* a1);
T0* r397new_cursor(T397* C);
void r397put_last(T397* C,T0* a1);
T6 r397cursor_off(T0* a1);
T0* r221Dir_attribute_name(void);
void r221_59Pmake_from_element(T221* C,T0* a1,T0* a2);
void r221make_from_element(T221* C,T0* a1,T0* a2);
void r221trace(T221* C,T0* a1);
T6 r221se_assigned_from(T0* a1);
void r221print_on(T221* C,T0* a1);
void r221out_in_tagged_out_memory(T221* C);
extern T0*oBC21Execution_environment;
T0* r221uc_attribute_value(T221* C,T0* a1,T0* a2);
extern T0*oBC221Value_attribute_name;
extern int fBC221Value_attribute_name;
T0* r221Value_attribute_name(void);
T6 r221conforms_to(T221* C,T0* a1);
void r221print(T0* a1);
void r221execute(T221* C);
T0* r221Name_attribute_name(void);
T6 r221has_uc_attribute(T0* a1,T0* a2);
T0* r221twin(T221* C);
T6 r221is_executable(T221* C);
extern T0*oBC157Clean_attribute_name;
extern int fBC157Clean_attribute_name;
T0* r157Clean_attribute_name(void);
T0* r157Dir_attribute_name(void);
void r157_59Pmake_from_element(T157* C,T0* a1,T0* a2);
extern T0*oBC157System_attribute_name;
extern int fBC157System_attribute_name;
T0* r157System_attribute_name(void);
extern T0*oBC157Finish_freezing_attribute_name;
extern int fBC157Finish_freezing_attribute_name;
T0* r157Finish_freezing_attribute_name(void);
void r157make_from_element(T157* C,T0* a1,T0* a2);
void r157trace(T157* C,T0* a1);
T6 r157is_cleanable(T157* C);
extern T0*oBC157Ace_attribute_name;
extern int fBC157Ace_attribute_name;
T0* r157Ace_attribute_name(void);
T0* r157file_system(void);
T6 r157se_assigned_from(T0* a1);
void r157print_on(T157* C,T0* a1);
T0* r157clone(T0* a1);
void r157out_in_tagged_out_memory(T157* C);
T6 r157uc_boolean_value(T157* C,T0* a1,T0* a2);
void r157execute_clean(T157* C);
void r157execute_compile(T157* C);
T0* r157True_attribute_value(void);
extern T0*oBC157Finalize_attribute_name;
extern int fBC157Finalize_attribute_name;
T0* r157Finalize_attribute_name(void);
T0* r157uc_attribute_value(T157* C,T0* a1,T0* a2);
T6 r157conforms_to(T157* C,T0* a1);
void r157print(T0* a1);
T6 r157is_compilable(T157* C);
void r157execute(T157* C);
T6 r157has_uc_attribute(T0* a1,T0* a2);
T0* r157uc_attribute_value_or_default(T157* C,T0* a1,T0* a2,T0* a3);
T0* r157False_attribute_value(void);
T0* r157attribute_value_or_default(T157* C,T0* a1,T0* a2,T0* a3);
T0* r157twin(T157* C);
void r157execute_shell(T157* C,T0* a1);
T6 r157is_executable(T157* C);
T0* r215Dir_attribute_name(void);
void r215_59Pmake_from_element(T215* C,T0* a1,T0* a2);
void r215make_from_element(T215* C,T0* a1,T0* a2);
T6 r215is_directory_executable(T215* C);
void r215trace(T215* C,T0* a1);
T0* r215attribute_value(T215* C,T0* a1,T0* a2);
T0* r215file_system(void);
T6 r215se_assigned_from(T0* a1);
void r215print_on(T215* C,T0* a1);
void r215out_in_tagged_out_memory(T215* C);
T6 r215is_file_executable(T215* C);
T6 r215conforms_to(T215* C,T0* a1);
void r215print(T0* a1);
void r215execute(T215* C);
T0* r215twin(T215* C);
extern T0*oBC215File_attribute_name;
extern int fBC215File_attribute_name;
T0* r215File_attribute_name(void);
extern T0*oBC215Directory_attribute_name;
extern int fBC215Directory_attribute_name;
T0* r215Directory_attribute_name(void);
T6 r215is_executable(T215* C);
extern T0*oBC82utils;
T2 r82item_code(T82* C,T2 a1);
T6 r82se_assigned_from(T0* a1);
void r82print_on(T82* C,T0* a1);
void r82out_in_tagged_out_memory(T82* C);
void r82make(T82* C);
void r82insert(T82* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r82add_to_storage_count(T82* C,T2 a1);
void r82remove(T82* C,T2 a1,T2 a2);
void r82find_slice_position(T82* C,T2 a1,T2 a2);
void r82insert_code(T82* C,T2 a1,T2 a2);
T6 r82conforms_to(T82* C,T0* a1);
extern T6 oBC82optimize_access;
void r82storage_move(T82* C,T2 a1,T2 a2,T2 a3);
T0* r82twin(T82* C);
T2 r82storage_slice_count(T82* C);
void r82find_position(T82* C,T2 a1);
T0* r81create_representation(T81* C);
T6 r81se_assigned_from(T0* a1);
void r81print_on(T81* C,T0* a1);
void r81out_in_tagged_out_memory(T81* C);
T6 r81conforms_to(T81* C,T0* a1);
T0* r81twin(T81* C);
T0* r167Dir_attribute_name(void);
void r167_59Pmake_from_element(T167* C,T0* a1,T0* a2);
void r167make_from_element(T167* C,T0* a1,T0* a2);
void r167trace(T167* C,T0* a1);
T6 r167se_assigned_from(T0* a1);
void r167print_on(T167* C,T0* a1);
void r167out_in_tagged_out_memory(T167* C);
T0* r167uc_attribute_value(T167* C,T0* a1,T0* a2);
extern T0*oBC167Value_attribute_name;
extern int fBC167Value_attribute_name;
T0* r167Value_attribute_name(void);
T6 r167conforms_to(T167* C,T0* a1);
void r167print(T0* a1);
void r167execute(T167* C);
T0* r167Name_attribute_name(void);
T6 r167has_uc_attribute(T0* a1,T0* a2);
T0* r167twin(T167* C);
T6 r167is_executable(T167* C);
T0* r165Dir_attribute_name(void);
void r165_59Pmake_from_element(T165* C,T0* a1,T0* a2);
void r165make_from_element(T165* C,T0* a1,T0* a2);
void r165trace(T165* C,T0* a1);
T6 r165se_assigned_from(T0* a1);
void r165print_on(T165* C,T0* a1);
T0* r165clone(T0* a1);
void r165out_in_tagged_out_memory(T165* C);
T0* r165uc_attribute_value(T165* C,T0* a1,T0* a2);
T6 r165conforms_to(T165* C,T0* a1);
void r165print(T0* a1);
extern T0*oBC165Executable_attribute_name;
extern int fBC165Executable_attribute_name;
T0* r165Executable_attribute_name(void);
void r165execute(T165* C);
T6 r165has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC165Source_filename_attribute_name;
extern int fBC165Source_filename_attribute_name;
T0* r165Source_filename_attribute_name(void);
T0* r165twin(T165* C);
void r165execute_shell(T165* C,T0* a1);
T6 r165is_executable(T165* C);
void r28calculate_depend_order(T0* a1);
void r28build(T28* C);
extern T0*oBC28Parser_factory;
extern int fBC28Parser_factory;
T0* r28Parser_factory(void);
void r28build_target(T28* C,T0* a1);
T0* r28file_system(void);
T6 r28se_assigned_from(T0* a1);
void r28print_on(T28* C,T0* a1);
extern T0*oBC19Target_element_name;
extern int fBC19Target_element_name;
T0* r28Target_element_name(void);
T0* r28clone(T0* a1);
void r28load(T28* C,T0* a1);
void r28out_in_tagged_out_memory(T28* C);
extern T0*oBC17Exceptions;
extern T0*oBC19Description_element_name;
extern int fBC19Description_element_name;
T0* r28Description_element_name(void);
extern T0*oBC19Default_attribute_name;
extern int fBC19Default_attribute_name;
T0* r28Default_attribute_name(void);
T0* r28target_with_name(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
void r28print(T0* a1);
void r28make_with_filename(T28* C,T0* a1,T0* a2,T0* a3);
void r28execute_target(T28* C,T0* a1,T6 a2);
T0* r28Name_attribute_name(void);
void r28reset(T28* C);
void r28exit_application(T2 a1,T0* a2);
T0* r28twin(T28* C);
extern T0*oBC19Default_build_filename;
extern int fBC19Default_build_filename;
T0* r28Default_build_filename(void);
extern T0*oBC28Inherit_attribute_name;
extern int fBC28Inherit_attribute_name;
T0* r28Inherit_attribute_name(void);
T0* r25out(T25* C);
void r25copy(T25* C,T0* a1);
T0* r25substring(T25* C,T2 a1,T2 a2);
T2 r25count(T25* C);
T2 r25item_code(T25* C,T2 a1);
T6 r25is_whitespace(T2 a1);
void r25remove_between(T25* C,T2 a1,T2 a2);
T6 r25is_equal(T25* C,T0* a1);
T67 r25item(T25* C,T2 a1);
void r25append_uc_string(T25* C,T0* a1);
T6 r25se_assigned_from(T0* a1);
void r25print_on(T25* C,T0* a1);
void r25make_from_string(T25* C,T0* a1);
T2 r25index_of(T25* C,T67 a1,T2 a2);
void r25out_in_tagged_out_memory(T25* C);
void r25make(T25* C,T2 a1);
void r25append_string(T25* C,T0* a1);
void r25head(T25* C,T2 a1);
T6 r25conforms_to(T25* C,T0* a1);
void r25append_ucc_code(T25* C,T2 a1);
void r25right_adjust(T25* C);
T6 r25empty(T25* C);
T0* r25twin(T25* C);
T2 r25three_way_comparison(T25* C,T0* a1);
void r25left_adjust(T25* C);
extern T0*oBC25i_settings;
void r25tail(T25* C,T2 a1);
T0* r198Dir_attribute_name(void);
void r198_59Pmake_from_element(T198* C,T0* a1,T0* a2);
extern T0*oBC198Output_filename_attribute_name;
extern int fBC198Output_filename_attribute_name;
T0* r198Output_filename_attribute_name(void);
void r198make_from_element(T198* C,T0* a1,T0* a2);
void r198trace(T198* C,T0* a1);
extern T0*oBC19Unless_attribute_name;
extern int fBC19Unless_attribute_name;
T0* r198Unless_attribute_name(void);
extern T0*oBC19If_attribute_name;
extern int fBC19If_attribute_name;
T0* r198If_attribute_name(void);
T0* r198file_system(void);
T6 r198se_assigned_from(T0* a1);
void r198print_on(T198* C,T0* a1);
T0* r198clone(T0* a1);
extern T0*oBC198Define_element_name;
extern int fBC198Define_element_name;
T0* r198Define_element_name(void);
extern T0*oBC198Lines_attribute_name;
extern int fBC198Lines_attribute_name;
T0* r198Lines_attribute_name(void);
void r198out_in_tagged_out_memory(T198* C);
T6 r198uc_boolean_value(T198* C,T0* a1,T0* a2);
void r198make(T198* C,T0* a1);
T0* r198True_attribute_value(void);
T0* r198uc_attribute_value(T198* C,T0* a1,T0* a2);
T6 r198conforms_to(T198* C,T0* a1);
void r198print(T0* a1);
T6 r198is_element_enabled(T0* a1,T0* a2);
void r198execute(T198* C);
T6 r198has_uc_attribute(T0* a1,T0* a2);
T0* r198Name_attribute_name(void);
T0* r198False_attribute_value(void);
void r198_60Pmake(T198* C,T0* a1);
T0* r198twin(T198* C);
void r198execute_shell(T198* C,T0* a1);
T6 r198is_executable(T198* C);
extern T0*oBC198Input_filename_attribute_name;
extern int fBC198Input_filename_attribute_name;
T0* r198Input_filename_attribute_name(void);
void r168trace(T168* C,T0* a1);
T6 r168se_assigned_from(T0* a1);
void r168print_on(T168* C,T0* a1);
void r168out_in_tagged_out_memory(T168* C);
void r168make(T168* C,T0* a1);
T6 r168conforms_to(T168* C,T0* a1);
void r168print(T0* a1);
void r168execute(T168* C);
T0* r168twin(T168* C);
T6 r392se_assigned_from(T0* a1);
void r392print_on(T392* C,T0* a1);
void r392out_in_tagged_out_memory(T392* C);
T6 r392conforms_to(T392* C,T0* a1);
T0* r392twin(T392* C);
void r326fill(T326* C);
void r326compact_left(T326* C);
T2 r326count(T326* C);
void r326set_position(T326* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC325lower;
extern int fBC325lower;
T2 r326lower(void);
T6 r326se_assigned_from(T0* a1);
void r326print_on(T326* C,T0* a1);
void r326out_in_tagged_out_memory(T326* C);
extern T0*oBC261STRING_BUFFER_;
T6 r326conforms_to(T326* C,T0* a1);
void r326resize(T326* C);
void r326make_with_size(T326* C,T0* a1,T2 a2);
T0* r326twin(T326* C);
void r326set_file(T326* C,T0* a1);
extern T0*oBC262INPUT_STREAM_;
void r326flush(T326* C);
T0* r342current_working_directory(T342* C);
T6 r342se_assigned_from(T0* a1);
void r342print_on(T342* C,T0* a1);
T0* r342clone(T0* a1);
T6 r342is_windows(T342* C);
void r342out_in_tagged_out_memory(T342* C);
void r342make(T342* C);
void r342old_put_string(T0* a1);
T6 r342conforms_to(T342* C,T0* a1);
T6 r342is_unix(T342* C);
void r342put_line(T0* a1);
T0* r342twin(T342* C);
T0* r343current_working_directory(T343* C);
T6 r343se_assigned_from(T0* a1);
void r343print_on(T343* C,T0* a1);
T0* r343clone(T0* a1);
T6 r343is_windows(T343* C);
void r343out_in_tagged_out_memory(T343* C);
void r343make(T343* C);
void r343old_put_string(T0* a1);
T6 r343conforms_to(T343* C,T0* a1);
T6 r343is_unix(T343* C);
void r343put_line(T0* a1);
T0* r343twin(T343* C);
extern T0*oBC19Echo_task_name;
extern int fBC19Echo_task_name;
T0* r43Echo_task_name(void);
extern T0*oBC43Dir_attribute_name;
extern int fBC43Dir_attribute_name;
T0* r43Dir_attribute_name(void);
extern T0*oBC19Outofdate_task_name;
extern int fBC19Outofdate_task_name;
T0* r43Outofdate_task_name(void);
extern T0*oBC19Delete_task_name;
extern int fBC19Delete_task_name;
T0* r43Delete_task_name(void);
T0* r43dependencies(T43* C);
extern T0*oBC19Set_task_name;
extern int fBC19Set_task_name;
T0* r43Set_task_name(void);
extern T0*oBC19Ise_task_name;
extern int fBC19Ise_task_name;
T0* r43Ise_task_name(void);
extern T0*oBC19Exec_task_name;
extern int fBC19Exec_task_name;
T0* r43Exec_task_name(void);
T0* r43Unless_attribute_name(void);
T0* r43dependent_targets(T43* C);
T0* r43If_attribute_name(void);
extern T0*oBC19Mkdir_task_name;
extern int fBC19Mkdir_task_name;
T0* r43Mkdir_task_name(void);
T0* r43file_system(void);
extern T0*oBC19Setenv_task_name;
extern int fBC19Setenv_task_name;
T0* r43Setenv_task_name(void);
T6 r43has_dependencies(T43* C);
T6 r43se_assigned_from(T0* a1);
void r43print_on(T43* C,T0* a1);
T0* r43clone(T0* a1);
extern T0*oBC43Depend_attribute_name;
extern int fBC43Depend_attribute_name;
T0* r43Depend_attribute_name(void);
extern T0*oBC19Geant_task_name;
extern int fBC19Geant_task_name;
T0* r43Geant_task_name(void);
void r43out_in_tagged_out_memory(T43* C);
T0* r43Description_element_name(void);
extern T0*oBC19Hact_task_name;
extern int fBC19Hact_task_name;
T0* r43Hact_task_name(void);
void r43make(T43* C,T0* a1,T0* a2);
extern T0*oBC19Gexace_task_name;
extern int fBC19Gexace_task_name;
T0* r43Gexace_task_name(void);
extern T0*oBC19Gelex_task_name;
extern int fBC19Gelex_task_name;
T0* r43Gelex_task_name(void);
extern T0*oBC19Unset_task_name;
extern int fBC19Unset_task_name;
T0* r43Unset_task_name(void);
extern T0*oBC19Se_task_name;
extern int fBC19Se_task_name;
T0* r43Se_task_name(void);
T6 r43conforms_to(T43* C,T0* a1);
void r43print(T0* a1);
T0* r43string_tokens(T0* a1,T3 a2);
extern T0*oBC19Getest_task_name;
extern int fBC19Getest_task_name;
T0* r43Getest_task_name(void);
T6 r43is_element_enabled(T0* a1,T0* a2);
extern T0*oBC19Copy_task_name;
extern int fBC19Copy_task_name;
T0* r43Copy_task_name(void);
void r43execute(T43* C);
T0* r43Name_attribute_name(void);
extern T0*oBC19Lcc_task_name;
extern int fBC19Lcc_task_name;
T0* r43Lcc_task_name(void);
void r43exit_application(T2 a1,T0* a2);
extern T0*oBC19Xslt_task_name;
extern int fBC19Xslt_task_name;
T0* r43Xslt_task_name(void);
extern T0*oBC19Gepp_task_name;
extern int fBC19Gepp_task_name;
T0* r43Gepp_task_name(void);
T0* r43twin(T43* C);
extern T0*oBC19Move_task_name;
extern int fBC19Move_task_name;
T0* r43Move_task_name(void);
extern T0*oBC19Geyacc_task_name;
extern int fBC19Geyacc_task_name;
T0* r43Geyacc_task_name(void);
extern T0*oBC19Ve_task_name;
extern int fBC19Ve_task_name;
T0* r43Ve_task_name(void);
extern T0*oBC161Clean_attribute_name;
extern int fBC161Clean_attribute_name;
T0* r161Clean_attribute_name(void);
T0* r161Dir_attribute_name(void);
void r161_59Pmake_from_element(T161* C,T0* a1,T0* a2);
void r161make_from_element(T161* C,T0* a1,T0* a2);
void r161trace(T161* C,T0* a1);
T6 r161is_cleanable(T161* C);
T0* r161file_system(void);
T6 r161se_assigned_from(T0* a1);
void r161print_on(T161* C,T0* a1);
T0* r161clone(T0* a1);
extern T0*oBC161Esd_attribute_name;
extern int fBC161Esd_attribute_name;
T0* r161Esd_attribute_name(void);
void r161out_in_tagged_out_memory(T161* C);
T6 r161uc_boolean_value(T161* C,T0* a1,T0* a2);
void r161execute_clean(T161* C);
T0* r161True_attribute_value(void);
T0* r161uc_attribute_value(T161* C,T0* a1,T0* a2);
T6 r161conforms_to(T161* C,T0* a1);
void r161print(T0* a1);
T6 r161is_compilable(T161* C);
void r161execute(T161* C);
T6 r161has_uc_attribute(T0* a1,T0* a2);
T0* r161uc_attribute_value_or_default(T161* C,T0* a1,T0* a2,T0* a3);
T0* r161False_attribute_value(void);
extern T0*oBC161Recursive_attribute_name;
extern int fBC161Recursive_attribute_name;
T0* r161Recursive_attribute_name(void);
T0* r161attribute_value_or_default(T161* C,T0* a1,T0* a2,T0* a3);
T0* r161twin(T161* C);
void r161execute_shell(T161* C,T0* a1);
T6 r161is_executable(T161* C);
T6 r83se_assigned_from(T0* a1);
void r83print_on(T83* C,T0* a1);
void r83out_in_tagged_out_memory(T83* C);
void r83make(T83* C);
void r83insert(T83* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r83remove(T83* C,T2 a1,T2 a2);
void r83insert_code(T83* C,T2 a1,T2 a2);
void r83move(T83* C,T2 a1,T2 a2,T2 a3);
T6 r83conforms_to(T83* C,T0* a1);
void r83storage_ensure_capacity(T83* C,T2 a1);
T0* r83twin(T83* C);
T0* r211Dir_attribute_name(void);
void r211_59Pmake_from_element(T211* C,T0* a1,T0* a2);
void r211make_from_element(T211* C,T0* a1,T0* a2);
void r211trace(T211* C,T0* a1);
T0* r211attribute_value(T211* C,T0* a1,T0* a2);
T6 r211se_assigned_from(T0* a1);
void r211print_on(T211* C,T0* a1);
void r211out_in_tagged_out_memory(T211* C);
T6 r211conforms_to(T211* C,T0* a1);
void r211print(T0* a1);
extern T0*oBC211Message_attribute_name;
extern int fBC211Message_attribute_name;
T0* r211Message_attribute_name(void);
void r211execute(T211* C);
T0* r211twin(T211* C);
void r306yy_do_action(T306* C,T2 a1);
extern T0*oBC307yytable_template;
extern int fBC307yytable_template;
T0* r306yytable_template(void);
T0* r306empty_ucstring(void);
void r306make_parser_skeleton(T306* C);
T2 r306yy_at_beginning_of_line(T306* C);
void r306fatal_error(T0* a1);
T0* r306yytype1(T0* a1);
T0* r306yytype2(T0* a1);
T0* r306yytype3(T0* a1);
T0* r306yytype4(T0* a1);
void r306handle_found_text(T306* C);
void r306parse(T306* C);
void r306set_input_buffer(T306* C,T0* a1);
T2 r306yy_translate(T306* C,T2 a1);
extern T0*oBC308yy_ec_template;
extern int fBC308yy_ec_template;
T0* r306yy_ec_template(void);
void r306yy_execute_action(T306* C,T2 a1);
extern T0*oBC307yytranslate_template;
extern int fBC307yytranslate_template;
T0* r306yytranslate_template(void);
void r306clear_stacks(T306* C);
extern T0*oBC308yy_def_template;
extern int fBC308yy_def_template;
T0* r306yy_def_template(void);
T3 r306text_item(T306* C,T2 a1);
void r306yy_load_input_buffer(T306* C);
extern T67 oBC307uc_collon;
extern int fBC307uc_collon;
T67 r306uc_collon(void);
extern T0*oBC307yyr1_template;
extern int fBC307yyr1_template;
T0* r306yyr1_template(void);
void r306make_with_buffer(T306* C,T0* a1);
T2 r306yy_null_trans_state(T306* C,T2 a1);
extern T0*oBC308yy_accept_template;
extern int fBC308yy_accept_template;
T0* r306yy_accept_template(void);
void r306read_token(T306* C);
extern T0*oBC307yyr2_template;
extern int fBC307yyr2_template;
T0* r306yyr2_template(void);
T2 r306yy_previous_state(T306* C);
extern T0*oBC307yypgoto_template;
extern int fBC307yypgoto_template;
T0* r306yypgoto_template(void);
void r306yy_refill_input_buffer(T306* C);
T0* r306yy_fixed_array(T0* a1);
T6 r306conforms_to(T306* C,T0* a1);
extern T0*oBC308yy_meta_template;
extern int fBC308yy_meta_template;
T0* r306yy_meta_template(void);
extern T0*oBC308yy_base_template;
extern int fBC308yy_base_template;
T0* r306yy_base_template(void);
T0* r306twin(T306* C);
T0* r306clone(T0* a1);
T0* r306new_file_buffer(T0* a1);
void r306yy_initialize(T306* C);
void r306reset(T306* C);
void r306parse_from_file_name(T306* C,T0* a1);
T0* r306text(T306* C);
void r306out_in_tagged_out_memory(T306* C);
extern T0*oBC308yy_nxt_template;
extern int fBC308yy_nxt_template;
T0* r306yy_nxt_template(void);
void r306parse_from_stream(T306* C,T0* a1);
void r306yy_set_line_column(T306* C);
void r306yy_build_parser_tables(T306* C);
T0* r306split_name_and_prefix(T0* a1);
void r306report_error(T306* C,T0* a1);
extern T0*oBC307yydefact_template;
extern int fBC307yydefact_template;
T0* r306yydefact_template(void);
extern T0*oBC308yy_chk_template;
extern int fBC308yy_chk_template;
T0* r306yy_chk_template(void);
extern T0*oBC307yycheck_template;
extern int fBC307yycheck_template;
T0* r306yycheck_template(void);
void r306make(T306* C);
T0* r306yyfixed_array(T0* a1);
void r306yy_clear_all(T306* C);
extern T0*oBC307yydefgoto_template;
extern int fBC307yydefgoto_template;
T0* r306yydefgoto_template(void);
void r306yy_set_content(T306* C,T0* a1);
extern T0*oBC307yypact_template;
extern int fBC307yypact_template;
T0* r306yypact_template(void);
void r306set_start_condition(T306* C,T2 a1);
T6 r306se_assigned_from(T0* a1);
void r306yy_build_tables(T306* C);
void r306print_on(T306* C,T0* a1);
extern T0*oBC194Meta_ecs_attribute_name;
extern int fBC194Meta_ecs_attribute_name;
T0* r194Meta_ecs_attribute_name(void);
T0* r194Dir_attribute_name(void);
void r194_59Pmake_from_element(T194* C,T0* a1,T0* a2);
extern T0*oBC194Output_filename_attribute_name;
extern int fBC194Output_filename_attribute_name;
T0* r194Output_filename_attribute_name(void);
extern T0*oBC194Size_attribute_name;
extern int fBC194Size_attribute_name;
T0* r194Size_attribute_name(void);
void r194make_from_element(T194* C,T0* a1,T0* a2);
extern T0*oBC194Ecs_attribute_name;
extern int fBC194Ecs_attribute_name;
T0* r194Ecs_attribute_name(void);
void r194trace(T194* C,T0* a1);
T6 r194se_assigned_from(T0* a1);
void r194print_on(T194* C,T0* a1);
T0* r194clone(T0* a1);
void r194out_in_tagged_out_memory(T194* C);
T6 r194uc_boolean_value(T194* C,T0* a1,T0* a2);
void r194make(T194* C,T0* a1);
T0* r194True_attribute_value(void);
T0* r194uc_attribute_value(T194* C,T0* a1,T0* a2);
extern T0*oBC194Case_insensitive_attribute_name;
extern int fBC194Case_insensitive_attribute_name;
T0* r194Case_insensitive_attribute_name(void);
extern T0*oBC194No_default_attribute_name;
extern int fBC194No_default_attribute_name;
T0* r194No_default_attribute_name(void);
T6 r194conforms_to(T194* C,T0* a1);
void r194print(T0* a1);
extern T0*oBC194Backup_attribute_name;
extern int fBC194Backup_attribute_name;
T0* r194Backup_attribute_name(void);
extern T0*oBC194No_warn_attribute_name;
extern int fBC194No_warn_attribute_name;
T0* r194No_warn_attribute_name(void);
void r194execute(T194* C);
T6 r194has_uc_attribute(T0* a1,T0* a2);
T0* r194False_attribute_value(void);
void r194_60Pmake(T194* C,T0* a1);
extern T0*oBC194Separate_actions_attribute_name;
extern int fBC194Separate_actions_attribute_name;
T0* r194Separate_actions_attribute_name(void);
T0* r194twin(T194* C);
void r194execute_shell(T194* C,T0* a1);
T6 r194is_executable(T194* C);
extern T0*oBC194Input_filename_attribute_name;
extern int fBC194Input_filename_attribute_name;
T0* r194Input_filename_attribute_name(void);
extern T0*oBC194Full_attribute_name;
extern int fBC194Full_attribute_name;
T0* r194Full_attribute_name(void);
extern T0*oBC257stack;
extern int fBC257stack;
T0* r257stack(void);
void r257on_content(T0* a1);
T6 r257se_assigned_from(T0* a1);
void r257print_on(T257* C,T0* a1);
T0* r257clone(T0* a1);
void r257out_in_tagged_out_memory(T257* C);
void r257on_start_tag(T257* C,T0* a1,T0* a2,T0* a3);
void r257make_from_implementation(T257* C,T0* a1);
T6 r257conforms_to(T257* C,T0* a1);
T0* r257twin(T257* C);
void r366copy(T366* C,T0* a1);
void r366append_name(T366* C,T0* a1);
T6 r366se_assigned_from(T0* a1);
void r366print_on(T366* C,T0* a1);
T0* r366clone(T0* a1);
void r366out_in_tagged_out_memory(T366* C);
T6 r366is_parent(T366* C,T2 a1);
void r366make(T366* C);
void r366set_canonical(T366* C);
T6 r366conforms_to(T366* C,T0* a1);
T0* r366twin(T366* C);
T6 r366is_current(T366* C,T2 a1);
T6 r49se_assigned_from(T0* a1);
void r49print_on(T49* C,T0* a1);
void r49out_in_tagged_out_memory(T49* C);
T6 r49conforms_to(T49* C,T0* a1);
T0* r49twin(T49* C);
void r49put_character(T3 a1);
void r49put_string(T0* a1);
T0* r87expanded_variable_value(T87* C,T0* a1);
T0* r87variable_value(T87* C,T0* a1);
T0* r87file_system(void);
T6 r87se_assigned_from(T0* a1);
void r87print_on(T87* C,T0* a1);
T0* r87clone(T0* a1);
void r87out_in_tagged_out_memory(T87* C);
void r87make(T87* C);
extern T0*oBC20Commandline_variables;
extern int fBC20Commandline_variables;
T0* r87Commandline_variables(void);
T6 r87boolean_condition_value(T87* C,T0* a1);
T6 r87conforms_to(T87* C,T0* a1);
void r87print(T0* a1);
T0* r87string_tokens(T0* a1,T3 a2);
T0* r87interpreted_string(T87* C,T0* a1);
void r87exit_application(T2 a1,T0* a2);
T0* r87twin(T87* C);
T6 r87has_variable(T87* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r339command_arguments(void);
T6 r339se_assigned_from(T0* a1);
void r339print_on(T339* C,T0* a1);
void r339out_in_tagged_out_memory(T339* C);
T6 r339conforms_to(T339* C,T0* a1);
T0* r339twin(T339* C);
T0* r339argument(T2 a1);
T6 r298se_assigned_from(T0* a1);
void r298print_on(T298* C,T0* a1);
void r298out_in_tagged_out_memory(T298* C);
void r298make(T298* C);
T6 r298conforms_to(T298* C,T0* a1);
T0* r298new_eiffel_event_parser_imp(T298* C);
T0* r298twin(T298* C);
T6 r345se_assigned_from(T0* a1);
void r345print_on(T345* C,T0* a1);
void r345out_in_tagged_out_memory(T345* C);
T2 r345execute_command(T0* a1);
T6 r345conforms_to(T345* C,T0* a1);
void r345execute(T345* C);
T0* r345twin(T345* C);
T0* r171Dir_attribute_name(void);
void r171_59Pmake_from_element(T171* C,T0* a1,T0* a2);
extern T0*oBC171Output_filename_attribute_name;
extern int fBC171Output_filename_attribute_name;
T0* r171Output_filename_attribute_name(void);
void r171make_from_element(T171* C,T0* a1,T0* a2);
void r171trace(T171* C,T0* a1);
extern T0*oBC171Xace_filename_attribute_name;
extern int fBC171Xace_filename_attribute_name;
T0* r171Xace_filename_attribute_name(void);
extern T0*oBC171Command_attribute_name;
extern int fBC171Command_attribute_name;
T0* r171Command_attribute_name(void);
T0* r171Unless_attribute_name(void);
T0* r171If_attribute_name(void);
T6 r171se_assigned_from(T0* a1);
void r171print_on(T171* C,T0* a1);
T0* r171clone(T0* a1);
extern T0*oBC171Define_element_name;
extern int fBC171Define_element_name;
T0* r171Define_element_name(void);
extern T0*oBC171Options_attribute_name;
extern int fBC171Options_attribute_name;
T0* r171Options_attribute_name(void);
void r171out_in_tagged_out_memory(T171* C);
void r171make(T171* C,T0* a1);
T0* r171uc_attribute_value(T171* C,T0* a1,T0* a2);
extern T0*oBC171Value_attribute_name;
extern int fBC171Value_attribute_name;
T0* r171Value_attribute_name(void);
T6 r171conforms_to(T171* C,T0* a1);
void r171print(T0* a1);
T6 r171is_element_enabled(T0* a1,T0* a2);
void r171execute(T171* C);
T6 r171has_uc_attribute(T0* a1,T0* a2);
T0* r171Name_attribute_name(void);
T0* r171uc_attribute_value_or_default(T171* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC171Command_options_attribute_name;
extern int fBC171Command_options_attribute_name;
T0* r171Command_options_attribute_name(void);
void r171_60Pmake(T171* C,T0* a1);
T0* r171attribute_value_or_default(T171* C,T0* a1,T0* a2,T0* a3);
T0* r171twin(T171* C);
void r171execute_shell(T171* C,T0* a1);
T6 r171is_executable(T171* C);
T0* r169Dir_attribute_name(void);
void r169_59Pmake_from_element(T169* C,T0* a1,T0* a2);
void r169make_from_element(T169* C,T0* a1,T0* a2);
void r169trace(T169* C,T0* a1);
T6 r169se_assigned_from(T0* a1);
void r169print_on(T169* C,T0* a1);
void r169out_in_tagged_out_memory(T169* C);
T0* r169uc_attribute_value(T169* C,T0* a1,T0* a2);
T6 r169conforms_to(T169* C,T0* a1);
void r169print(T0* a1);
void r169execute(T169* C);
T6 r169has_uc_attribute(T0* a1,T0* a2);
T0* r169Name_attribute_name(void);
T0* r169twin(T169* C);
T6 r169is_executable(T169* C);
T6 r277is_closed(T277* C);
void r277old_close(T277* C);
void r277old_delete(T0* a1);
T2 r277count(T277* C);
T2 r277time_stamp(T277* C);
T6 r277file_exists(T0* a1);
T357 r277epoch_time(void);
T357 r277last_change_of(T0* a1);
void r277rename_to(T0* a1,T0* a2);
void r277open_read(T277* C);
T0* r277file_system(void);
T6 r277se_assigned_from(T0* a1);
void r277print_on(T277* C,T0* a1);
void r277old_read_character(T277* C);
T6 r277old_end_of_file(T277* C);
void r277out_in_tagged_out_memory(T277* C);
void r277close(T277* C);
void r277make(T277* C,T0* a1);
T6 r277exists(T277* C);
T2 r277size_of(T0* a1);
T6 r277conforms_to(T277* C,T0* a1);
void r277copy_file(T277* C,T0* a1);
void r277connect_to(T277* C,T0* a1);
T6 r277same_physical_file(T277* C,T0* a1);
void r277delete(T277* C);
T0* r277twin(T277* C);
void r277change_name(T277* C,T0* a1);
extern T0*oBC281tmp_file1;
extern int fBC281tmp_file1;
T0* r277tmp_file1(void);
T6 r277is_readable(T277* C);
extern T0*oBC278tmp_directory;
extern int fBC278tmp_directory;
T0* r277tmp_directory(void);
T6 r290is_closed(T290* C);
T6 r290old_end_of_input(T290* C);
void r290open_read(T290* C);
T0* r290file_system(void);
T6 r290se_assigned_from(T0* a1);
void r290print_on(T290* C,T0* a1);
T0* r290clone(T0* a1);
void r290create_directory(T290* C);
void r290out_in_tagged_out_memory(T290* C);
T6 r290is_open_read(T290* C);
void r290close(T290* C);
T6 r290exists(T290* C);
void r290recursive_create_directory(T290* C);
void r290read_entry(T290* C);
T6 r290conforms_to(T290* C,T0* a1);
void r290delete(T290* C);
T0* r290twin(T290* C);
void r290recursive_delete(T290* C);
T6 r290is_readable(T290* C);
extern T0*oBC282tfr1;
T6 r282is_readable(T0* a1);
T6 r358se_assigned_from(T0* a1);
void r358print_on(T358* C,T0* a1);
T6 r358conforms_to(T358* C,T0* a1);
T0* r358twin(T358* C);
void r16read_command_line(T16* C);
T6 r16se_assigned_from(T0* a1);
void r16print_on(T16* C,T0* a1);
T0* r16clone(T0* a1);
void r16out_in_tagged_out_memory(T16* C);
void r16report_usage_message(T16* C);
T0* r16Arguments(void);
T0* r16Commandline_variables(void);
void r16make(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16print(T0* a1);
void r16report_version_number(T16* C);
void r16exit_application(T2 a1,T0* a2);
T0* r16twin(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
void r16report_usage_error(T16* C);
extern T0*oBC328error;
extern int fBC328error;
T0* r328error(void);
T6 r328se_assigned_from(T0* a1);
void r328print_on(T328* C,T0* a1);
void r328out_in_tagged_out_memory(T328* C);
extern T0*oBC328input;
extern int fBC328input;
T0* r328input(void);
extern T0*oBC328output;
extern int fBC328output;
T0* r328output(void);
T6 r328conforms_to(T328* C,T0* a1);
T0* r328twin(T328* C);
T6 r131se_assigned_from(T0* a1);
void r131print_on(T131* C,T0* a1);
void r131out_in_tagged_out_memory(T131* C);
T6 r131conforms_to(T131* C,T0* a1);
T0* r131twin(T131* C);
void r47raise(T47* C,T0* a1);
T6 r47se_assigned_from(T0* a1);
void r47print_on(T47* C,T0* a1);
void r47out_in_tagged_out_memory(T47* C);
T6 r47conforms_to(T47* C,T0* a1);
T0* r47twin(T47* C);
extern T0*oBC48developer_exception_name_memory;
void r48raise(T48* C,T0* a1);
T6 r48se_assigned_from(T0* a1);
void r48print_on(T48* C,T0* a1);
void r48out_in_tagged_out_memory(T48* C);
T6 r48conforms_to(T48* C,T0* a1);
T0* r48twin(T48* C);
T6 r45se_assigned_from(T0* a1);
void r45print_on(T45* C,T0* a1);
T6 r45conforms_to(T45* C,T0* a1);
T0* r45twin(T45* C);
T6 r415se_assigned_from(T0* a1);
void r415print_on(T415* C,T0* a1);
void r415out_in_tagged_out_memory(T415* C);
T6 r415conforms_to(T415* C,T0* a1);
T0* r415twin(T415* C);
T6 r52se_assigned_from(T0* a1);
void r52print_on(T52* C,T0* a1);
void r52out_in_tagged_out_memory(T52* C);
T6 r52conforms_to(T52* C,T0* a1);
T0* r52twin(T52* C);
T6 r414se_assigned_from(T0* a1);
void r414print_on(T414* C,T0* a1);
void r414out_in_tagged_out_memory(T414* C);
T6 r414conforms_to(T414* C,T0* a1);
T0* r414twin(T414* C);
T6 r132se_assigned_from(T0* a1);
void r132print_on(T132* C,T0* a1);
void r132out_in_tagged_out_memory(T132* C);
T0* r132to_hexadecimal(T2 a1,T6 a2);
T6 r132conforms_to(T132* C,T0* a1);
T3 r132to_character(T2 a1);
T0* r132twin(T132* C);
void r132append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC79factory;
extern int fBC79factory;
T0* r79factory(void);
T6 r79se_assigned_from(T0* a1);
void r79print_on(T79* C,T0* a1);
void r79out_in_tagged_out_memory(T79* C);
T6 r79conforms_to(T79* C,T0* a1);
T0* r79twin(T79* C);
T6 r416se_assigned_from(T0* a1);
void r416print_on(T416* C,T0* a1);
void r416out_in_tagged_out_memory(T416* C);
T6 r416conforms_to(T416* C,T0* a1);
T0* r416twin(T416* C);
T6 r44se_assigned_from(T0* a1);
void r44print_on(T44* C,T0* a1);
T6 r44conforms_to(T44* C,T0* a1);
T0* r44twin(T44* C);
T2 r357elapsed_seconds(T357* C,T357 a1);
T6 r357set(T357* C,T2 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T6 r304se_assigned_from(T0* a1);
void r304print_on(T304* C,T0* a1);
void r304out_in_tagged_out_memory(T304* C);
T6 r304conforms_to(T304* C,T0* a1);
T0* r304twin(T304* C);
T0* r367name(T0* a1);
T0* r367make_file_open_read(T0* a1);
T6 r367se_assigned_from(T0* a1);
void r367print_on(T367* C,T0* a1);
void r367out_in_tagged_out_memory(T367* C);
void r367close(T0* a1);
T6 r367conforms_to(T367* C,T0* a1);
T6 r367end_of_input(T0* a1);
T2 r367read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r367twin(T367* C);
void r137connect_to_current_working_directory(T137* C);
void r137disconnect(T137* C);
T6 r137remove_directory(T0* a1);
extern T0*oBC137last_entry;
void r137change_current_working_directory(T137* C,T0* a1);
void r137read_entry(T137* C);
void r137connect_to(T137* C,T0* a1);
T6 r137create_new_directory(T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133print_on(T133* C,T0* a1);
void r133out_in_tagged_out_memory(T133* C);
T6 r133is_integer(T0* a1);
T0* r133make(T2 a1);
T6 r133conforms_to(T133* C,T0* a1);
T0* r133twin(T133* C);
T0* r67out(T67* C);
extern T0*oBC70Platform;
T3 r67as_character(T67* C);
T6 r67_px_60(T67* C,T67 a1);
T6 r67_px_62(T67* C,T67 a1);
T0* r67as_hexadecimal(T67* C);
T3 r67code_to_character(T2 a1);
extern T0*oBC69INTEGER_;
T0* r89variable_value(T0* a1);
T6 r89se_assigned_from(T0* a1);
void r89print_on(T89* C,T0* a1);
void r89out_in_tagged_out_memory(T89* C);
T0* r89get_environment_variable(T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
T0* r89twin(T89* C);
T2 r363nr_of_following_octets(T3 a1);
T6 r363se_assigned_from(T0* a1);
void r363print_on(T363* C,T0* a1);
void r363read_code(T363* C,T0* a1,T2 a2);
void r363out_in_tagged_out_memory(T363* C);
void r363put_code(T2 a1,T0* a2,T2 a3);
void r363read_following_octet(T363* C,T0* a1);
T6 r363conforms_to(T363* C,T0* a1);
T3 r363code_to_character(T2 a1);
T2 r363octet_size(T2 a1);
T0* r363twin(T363* C);
extern T0*oBC363specific;
T6 r363is_leading_octet(T3 a1);
T2 r363read_leading_octet(T363* C,T0* a1,T2 a2);
T6 r302se_assigned_from(T0* a1);
void r302print_on(T302* C,T0* a1);
void r302out_in_tagged_out_memory(T302* C);
T6 r302conforms_to(T302* C,T0* a1);
T0* r302twin(T302* C);
T6 r51se_assigned_from(T0* a1);
void r51print_on(T51* C,T0* a1);
T6 r51conforms_to(T51* C,T0* a1);
T0* r51twin(T51* C);
T0* r327substring(T0* a1,T2 a2,T2 a3);
T6 r327se_assigned_from(T0* a1);
void r327print_on(T327* C,T0* a1);
void r327out_in_tagged_out_memory(T327* C);
void r327move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r327make(T2 a1);
T6 r327conforms_to(T327* C,T0* a1);
T0* r327resize(T0* a1,T2 a2);
T2 r327copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r327twin(T327* C);
T6 r417se_assigned_from(T0* a1);
void r417print_on(T417* C,T0* a1);
void r417out_in_tagged_out_memory(T417* C);
T6 r417conforms_to(T417* C,T0* a1);
T0* r417twin(T417* C);
T0* r136current_working_directory(T136* C);
T6 r136se_assigned_from(T0* a1);
void r136print_on(T136* C,T0* a1);
T0* r136clone(T0* a1);
T6 r136is_windows(T136* C);
void r136out_in_tagged_out_memory(T136* C);
T6 r136conforms_to(T136* C,T0* a1);
T6 r136is_unix(T136* C);
T0* r136twin(T136* C);
T0* r303new_event_parser_imp(void);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 418
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms156_674272a;
extern T7*ms208_2013612;
extern T7*ms16_23340076;
extern T7*ms28_1962337529;
extern T7*ms208_420615272;
extern T7*ms224_16885647;
extern T7*ms247_1238683011;
extern T7*ms7_241908472;
extern T7*ms194_16323;
extern T7*ms160_10aaaaa;
extern T7*ms171_18021;
extern T7*ms138_276;
extern T7*ms170_84369147;
extern T7*ms213_49442341;
extern T7*ms208_202;
extern T7*ms156_674272;
extern T7*ms158_10a;
extern T7*ms158_1933260220;
extern T7*ms43_10;
extern T7*ms194_17711;
extern T7*ms158_32a;
extern T7*ms75_251;
extern T7*ms158_179802;
extern T7*ms281_2034932;
extern T7*ms158_1560205919;
extern T7*ms219_1606898500;
extern T7*ms158_179802a;
extern T7*ms194_2142980;
extern T7*ms59_1756715249;
extern T7*ms215_49442341;
extern T7*ms160_10aaaaaa;
extern T7*ms194_267582581;
extern T7*ms87_2077395a;
extern T7*ms16_323;
extern T7*ms16_329;
extern T7*ms16_288;
extern T7*ms16_343;
extern T7*ms218_1191017681;
extern T7*ms158_661692583;
extern T7*ms139_276;
extern T7*ms87_1410228;
extern T7*ms214_205;
extern T7*ms19_247356966;
extern T7*ms19_3301;
extern T7*ms28_1510;
extern T7*ms19_3294;
extern T7*ms220_2145909738;
extern T7*ms158_1933260220a;
extern T7*ms19_3496;
extern T7*ms160_453255442;
extern T7*ms158_47904999;
extern T7*ms160_179802;
extern T7*ms162_1428018568;
extern T7*ms87_1307186427;
extern T7*ms28_10aa;
extern T7*ms87_259694110;
extern T7*ms159_452889;
extern T7*ms218_1206173931;
extern T7*ms159_0aa;
extern T7*ms160_2102912007a;
extern T7*ms156_658766397;
extern T7*ms199_32a;
extern T7*ms342_10;
extern T7*ms162_1391903168;
extern T7*ms196_1801319434;
extern T7*ms138_46;
extern T7*ms138_92;
extern T7*ms343_10;
extern T7*ms6_79251;
extern T7*ms139_46;
extern T7*ms139_47;
extern T7*ms19_403021;
extern T7*ms28_1299730420;
extern T7*ms19_403144;
extern T7*ms19_402716;
extern T7*ms19_80091;
extern T7*ms194_388005040;
extern T7*ms19_80325;
extern T7*ms210_836387112;
extern T7*ms220_205;
extern T7*ms196_448440;
extern T7*ms156_1775;
extern T7*ms156_1979141;
extern T7*ms161_3200;
extern T7*ms158_1819;
extern T7*ms216_1127570490;
extern T7*ms172_1070;
extern T7*ms162_1546380197;
extern T7*ms158_10aa;
extern T7*ms220_205a;
extern T7*ms7_280756769;
extern T7*ms43_1367980604;
extern T7*ms160_90108711;
extern T7*ms156_9895737;
extern T7*ms199_16824172;
extern T7*ms59_3139;
extern T7*ms87_259694110a;
extern T7*ms167_89261;
extern T7*ms247_79251;
extern T7*ms156_16686;
extern T7*ms162_945839905;
extern T7*ms162_29512420;
extern T7*ms19_79251;
extern T7*ms208_576822614;
extern T7*ms43_205;
extern T7*ms162_674647;
extern T7*ms224_141612;
extern T7*ms43_10a;
extern T7*ms209_440571;
extern T7*ms156_5712;
extern T7*ms158_1086847256a;
extern T7*ms197_2015752;
extern T7*ms210_10;
extern T7*ms160_10;
extern T7*ms160_32;
extern T7*ms163_254031466;
extern T7*ms19_84639;
extern T7*ms138_8976;
extern T7*ms162_2230607;
extern T7*ms155_0a;
extern T7*ms158_3367397;
extern T7*ms216_205;
extern T7*ms158_661958208;
extern T7*ms224_140577;
extern T7*ms19_90371;
extern T7*ms216_10a;
extern T7*ms158_272198a;
extern T7*ms156_10;
extern T7*ms156_32;
extern T7*ms161_0a;
extern T7*ms19_0;
extern T7*ms171_2173440;
extern T7*ms87_1307186427a;
extern T7*ms158_838447038;
extern T7*ms220_296008834;
extern T7*ms196_438001;
extern T7*ms212_10;
extern T7*ms162_10;
extern T7*ms162_46;
extern T7*ms157_10030586;
extern T7*ms157_0a;
extern T7*ms16_1771134706;
extern T7*ms160_1081376;
extern T7*ms160_1033196635;
extern T7*ms155_254031466;
extern T7*ms208_10;
extern T7*ms158_10;
extern T7*ms156_392507;
extern T7*ms158_32;
extern T7*ms220_7487;
extern T7*ms220_591632351;
extern T7*ms59_1341038798;
extern T7*ms75_5426;
extern T7*ms158_10aaaaaaa;
extern T7*ms134_80516;
extern T7*ms162_674647a;
extern T7*ms194_3135;
extern T7*ms160_60094111a;
extern T7*ms155_78495;
extern T7*ms43_1145887148;
extern T7*ms214_10;
extern T7*ms164_10;
extern T7*ms331_1158552108;
extern T7*ms158_8949;
extern T7*ms155_276875365;
extern T7*ms159_0a;
extern T7*ms19_627;
extern T7*ms366_276;
extern T7*ms19_676;
extern T7*ms19_691;
extern T7*ms172_1070a;
extern T7*ms220_10;
extern T7*ms170_10;
extern T7*ms159_10030586;
extern T7*ms215_16016;
extern T7*ms247_11171466;
extern T7*ms7_1983847;
extern T7*ms195_84117997;
extern T7*ms59_915611165;
extern T7*ms197_420625972;
extern T7*ms87_1410228a;
extern T7*ms172_115260364;
extern T7*ms216_10;
extern T7*ms166_10;
extern T7*ms166_32;
extern T7*ms160_10aaaaaaa;
extern T7*ms172_32a;
extern T7*ms172_34a;
extern T7*ms214_1463233606;
extern T7*ms75_2124547;
extern T7*ms16_184927;
extern T7*ms158_3367397a;
extern T7*ms209_199275083;
extern T7*ms366_46;
extern T7*ms222_10;
extern T7*ms172_10;
extern T7*ms172_32;
extern T7*ms172_34;
extern T7*ms222_61;
extern T7*ms172_61;
extern T7*ms158_10aaa;
extern T7*ms158_1086847256;
extern T7*ms223_281466146;
extern T7*ms220_205aa;
extern T7*ms162_2230607a;
extern T7*ms223_438001;
extern T7*ms195_401657;
extern T7*ms157_78495;
extern T7*ms160_60094111;
extern T7*ms307_38a;
extern T7*ms218_10;
extern T7*ms168_10;
extern T7*ms317_1338477769a;
extern T7*ms158_10aaaaa;
extern T7*ms168_61;
extern T7*ms307_60a;
extern T7*ms307_62a;
extern T7*ms158_143262;
extern T7*ms87_18020;
extern T7*ms87_18036;
extern T7*ms28_1404162515a;
extern T7*ms172_428919114;
extern T7*ms196_2246326;
extern T7*ms224_10;
extern T7*ms224_32;
extern T7*ms211_2108041;
extern T7*ms160_8902a;
extern T7*ms217_16016;
extern T7*ms224_0a;
extern T7*ms28_1404162515;
extern T7*ms342_447851;
extern T7*ms28_1569122284;
extern T7*ms158_1086847256aa;
extern T7*ms214_84225847;
extern T7*ms341_1515383187;
extern T7*ms160_15065a;
extern T7*ms218_205;
extern T7*ms311_195717202;
extern T7*ms217_1606898500;
extern T7*ms220_16849647;
extern T7*ms165_1544179189;
extern T7*ms6_18036;
extern T7*ms160_16823272;
extern T7*ms87_1410228aaa;
extern T7*ms159_78495;
extern T7*ms157_452889;
extern T7*ms247_446821;
extern T7*ms19_440193;
extern T7*ms212_16815647;
extern T7*ms16_1316598903;
extern T7*ms162_1169151010;
extern T7*ms19_440571;
extern T7*ms160_179802a;
extern T7*ms248_462337930;
extern T7*ms329_89510;
extern T7*ms220_1628747191;
extern T7*ms219_16016;
extern T7*ms20_691485293;
extern T7*ms199_3427745;
extern T7*ms23_1479;
extern T7*ms87_3226a;
extern T7*ms160_143262;
extern T7*ms158_208286353;
extern T7*ms16_80091;
extern T7*ms160_91038212;
extern T7*ms87_18036a;
extern T7*ms216_643481948;
extern T7*ms207_395678;
extern T7*ms19_392331;
extern T7*ms138_0;
extern T7*ms43_768830101;
extern T7*ms28_834968801;
extern T7*ms139_0;
extern T7*ms165_254031466;
extern T7*ms171_203658589;
extern T7*ms220_2065776307;
extern T7*ms19_16036;
extern T7*ms28_803892311;
extern T7*ms19_16072;
extern T7*ms19_54738731;
extern T7*ms162_9366019;
extern T7*ms19_15731;
extern T7*ms19_16229;
extern T7*ms75_14150;
extern T7*ms155_109478249;
extern T7*ms19_15831;
extern T7*ms155_0;
extern T7*ms363_1684857857;
extern T7*ms161_0;
extern T7*ms172_420622897;
extern T7*ms157_0;
extern T7*ms156_1749788964;
extern T7*ms19_17091;
extern T7*ms247_18036;
extern T7*ms308_1173251759;
extern T7*ms159_0;
extern T7*ms194_82876;
extern T7*ms19_16821;
extern T7*ms28_2065491;
extern T7*ms194_1801319434;
extern T7*ms158_208339478;
extern T7*ms171_0;
extern T7*ms158_420927632;
extern T7*ms19_18036;
extern T7*ms172_0;
extern T7*ms162_210841101a;
extern T7*ms224_0;
extern T7*ms158_10aaaaaa;
extern T7*ms155_2020550321;
extern T7*ms19_451090;
extern T7*ms19_18531;
extern T7*ms158_1139505;
extern T7*ms247_440571;
extern T7*ms219_2234766;
extern T7*ms199_16072;
extern T7*ms43_3139;
extern T7*ms158_272198;
extern T7*ms248_1378798665;
extern T7*ms217_2234766;
extern T7*ms160_15065;
extern T7*ms19_1957581;
extern T7*ms218_498244349;
extern T7*ms223_82876;
extern T7*ms171_1978575;
extern T7*ms195_0;
extern T7*ms160_10a;
extern T7*ms195_10;
extern T7*ms195_32;
extern T7*ms160_16054;
extern T7*ms158_10aaaa;
extern T7*ms197_0;
extern T7*ms195_0a;
extern T7*ms160_32a;
extern T7*ms28_924849867;
extern T7*ms199_0;
extern T7*ms196_82876;
extern T7*ms207_1979141;
extern T7*ms155_3021;
extern T7*ms223_53496769;
extern T7*ms160_10aa;
extern T7*ms224_27872;
extern T7*ms87_125;
extern T7*ms87_205;
extern T7*ms221_89261;
extern T7*ms171_89261;
extern T7*ms87_303;
extern T7*ms157_3021;
extern T7*ms162_10aa;
extern T7*ms194_438001;
extern T7*ms197_10;
extern T7*ms197_32;
extern T7*ms220_498244349;
extern T7*ms159_3021;
extern T7*ms164_16828097;
extern T7*ms197_0a;
extern T7*ms216_205a;
extern T7*ms1_14150;
extern T7*ms161_54423316;
extern T7*ms281_80516;
extern T7*ms160_16823272a;
extern T7*ms157_1890742889;
extern T7*ms218_16818147;
extern T7*ms195_0aa;
extern T7*ms218_205a;
extern T7*ms216_420355647a;
extern T7*ms166_3294;
extern T7*ms28_180;
extern T7*ms28_10a;
extern T7*ms168_3372272;
extern T7*ms199_10;
extern T7*ms199_32;
extern T7*ms199_0a;
extern T7*ms198_82876;
extern T7*ms162_3373326;
extern T7*ms166_3367222;
extern T7*ms343_447584;
extern T7*ms19_1228681540;
extern T7*ms156_10a;
extern T7*ms216_420355647;
extern T7*ms223_89261;
extern T7*ms160_10aaaa;
extern T7*ms156_32a;
extern T7*ms160_2102912007;
extern T7*ms198_83995;
extern T7*ms160_1028251;
extern T7*ms160_1033196635a;
extern T7*ms160_10aaa;
extern T7*ms162_1169151010a;
extern T7*ms87_2077395;
extern T7*ms68_577;
extern T7*ms166_5586;
extern T7*ms162_210841101;
extern T7*ms194_382622;
extern T7*ms218_1628747191;
extern T7*ms160_8711;
extern T7*ms307_38;
extern T7*ms367_0;
extern T7*ms317_1338477769;
extern T7*ms158_90108711;
extern T7*ms307_60;
extern T7*ms307_62;
extern T7*ms160_1955941869;
extern T7*ms87_205a;
extern T7*ms160_8902;
extern T7*ms171_438001;
extern T7*ms281_2034932a;
extern T7*ms195_1642;
extern T7*ms209_16016;
extern T7*ms195_1647;
extern T7*ms195_1652;
extern T7*ms195_1702;
extern T7*ms195_1662;
extern T7*ms195_1712;
extern T7*ms195_1667;
extern T7*ms218_989772422;
extern T7*ms195_1682;
extern T7*ms195_1732;
extern T7*ms171_391651;
extern T7*ms159_16054;
extern T7*ms195_1752;
extern T7*ms195_1757;
extern T7*ms87_3170;
extern T7*ms87_3226;
extern T7*ms199_1093;
extern T7*ms224_55455187;
extern T7*ms197_1712;
extern T7*ms87_1410228aa;
extern T7*ms155_388005040;
extern T7*ms197_1737;
extern T7*ms197_1747;
extern T7*ms218_7487;
extern T7*ms363_336971577;
extern T7*ms197_1757;
extern T7*ms162_2110593349;
extern T7*ms75_4763922;
extern T7*ms224_3506042;
extern T7*ms162_10a;
extern T7*ms247_282198636;
extern T7*ms162_276;
extern T7*ms172_2015137;
extern T7*ms28_10;
extern T7*ms367_1338085634;
extern T7*ms161_78495;
extern T7*ms43_392800;
extern T7*ms28_39;
extern T7*ms28_46;
extern T7*ms162_497;
extern T7*ms194_10531885;
extern T7*ms16_23342040;
extern T7*ms87_2272235;
extern T7*ms222_421552197;
extern T7*ms198_438001;
extern T7*ms158_271606681;
extern T7*ms157_0aa;
extern T7*ms16_14036;
extern T7*ms197_32a;
extern T7*ms198_391651;
extern T7*ms197_32aa;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void se_msi10(void);
void*se_ma85(int argc,...);
void X50put_string(T0*C,T0* a1);
void X59execute(T0*C);
T0* X59element(T0*C);
T6 X59is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X49put_string(T0*C,T0* a1);
void X279disconnect(T0*C);
T6 X279is_connected(T0*C);
void X279connect_to(T0*C,T0* a1);
T0* X279path(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
void X1print_on(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X321clear_all(T0*C,T0* a1);
T0* X321make(T0*C,T2 a1);
T0* X321resize(T0*C,T0* a1,T2 a2);
void X168set_name(T0*C,T0* a1);
void X168execute(T0*C);
void X168set_value(T0*C,T0* a1);
void X335put_line(T0*C,T0* a1);
void X48raise(T0*C,T0* a1);
T2 X319count(T0*C);
T2 X319item(T0*C,T2 a1);
T2 X319lower(T0*C);
void X320put(T0*C,T0* a1,T2 a2);
T0* X320item(T0*C,T2 a1);
void X320set_all_with(T0*C,T0* a1);
void X320resize(T0*C,T2 a1);
T2 X66item_code(T0*C,T2 a1);
void X66insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X66remove(T0*C,T2 a1,T2 a2);
void X66insert_code(T0*C,T2 a1,T2 a2);
void X280read_character(T0*C);
T6 X280end_of_input(T0*C);
T3 X280last_character(T0*C);
T0* X135string_to_pathname(T0*C,T0* a1);
T2 X283time_stamp(T0*C);
T0* X332default_message(T0*C);
T6 X136is_windows(T0*C);
T6 X136is_unix(T0*C);
T0* X134pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X134relative_current_directory(T0*C);
T0* X134absolute_pathname(T0*C,T0* a1);
T0* X134dirname(T0*C,T0* a1);
T0* X134exe_extension(T0*C);
T0* X134relative_parent_directory(T0*C);
T0* X134pathname(T0*C,T0* a1,T0* a2);
T0* X134canonical_pathname(T0*C,T0* a1);
T0* T305toT304(int source);
T0* T303toT302(int source);
T0* T2toT45(T2 source);
T2 T45toT2(T0* source);

#ifdef __cplusplus
}
#endif
