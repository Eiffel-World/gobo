#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #7 (Monday October 1st 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S60 T60;
typedef struct S362 T362;
typedef struct S219 T219;
typedef int T308;
typedef struct S178 T178;
typedef struct S199 T199;
typedef struct S268 T268;
typedef struct S304 T304;
typedef struct S328 T328;
typedef struct S95 T95;
typedef struct S64 T64;
typedef struct S16 T16;
typedef struct S181 T181;
typedef struct S315 T315;
typedef int T274;
typedef struct S298 T298;
typedef struct S174 T174;
typedef struct S84 T84;
typedef struct S92 T92;
typedef struct S44 T44;
typedef struct S290 T290;
typedef struct S45 T45;
typedef struct S132 T132;
typedef struct S350 T350;
typedef struct S129 T129;
typedef struct S299 T299;
typedef struct S317 T317;
typedef struct S46 T46;
typedef struct S236 T236;
typedef struct S203 T203;
typedef struct S366 T366;
typedef struct S51 T51;
typedef struct S387 T387;
typedef struct S206 T206;
typedef struct S71 T71;
typedef struct S138 T138;
typedef struct S392 T392;
typedef struct S93 T93;
typedef struct S189 T189;
typedef struct S78 T78;
typedef struct S394 T394;
typedef struct S321 T321;
typedef struct S351 T351;
typedef struct S193 T193;
typedef struct S90 T90;
typedef struct S336 T336;
typedef struct S185 T185;
typedef struct S346 T346;
typedef struct S142 T142;
typedef struct S43 T43;
typedef struct S372 T372;
typedef struct S107 T107;
typedef int T330;
typedef struct S306 T306;
typedef struct S7 T7;
typedef struct S331 T331;
typedef struct S63 T63;
typedef struct S183 T183;
typedef struct S260 T260;
typedef struct S195 T195;
typedef struct S339 T339;
typedef struct S377 T377;
typedef struct S393 T393;
typedef struct S42 T42;
typedef struct S376 T376;
typedef struct S273 T273;
typedef struct S169 T169;
typedef struct S197 T197;
typedef struct S57 T57;
typedef struct S136 T136;
typedef struct S244 T244;
typedef struct S227 T227;
typedef struct S347 T347;
typedef struct S76 T76;
typedef struct S204 T204;
typedef struct S191 T191;
typedef struct S81 T81;
typedef struct S89 T89;
typedef struct S349 T349;
typedef struct S94 T94;
typedef struct S80 T80;
typedef struct S25 T25;
typedef struct S146 T146;
typedef struct S239 T239;
typedef struct S144 T144;
typedef struct S154 T154;
typedef struct S28 T28;
typedef struct S113 T113;
typedef struct S66 T66;
typedef struct S242 T242;
typedef struct S176 T176;
typedef struct S105 T105;
typedef struct S98 T98;
typedef struct S344 T344;
typedef struct S370 T370;
typedef struct S296 T296;
typedef struct S322 T322;
typedef struct S271 T271;
typedef struct S326 T326;
typedef struct S91 T91;
typedef struct S133 T133;
typedef struct S318 T318;
typedef struct S224 T224;
typedef struct S289 T289;
typedef struct S222 T222;
typedef struct S140 T140;
typedef struct S82 T82;
typedef struct S187 T187;
typedef struct S50 T50;
typedef struct S275 T275;
typedef struct S172 T172;
typedef struct S245 T245;
typedef struct S112 T112;
typedef struct S297 T297;
typedef struct S395 T395;
typedef struct S88 T88;
typedef struct S391 T391;
typedef int T272;
typedef struct S171 T171;
typedef struct S48 T48;
typedef struct S97 T97;
typedef struct S319 T319;
typedef struct S267 T267;
typedef struct S150 T150;
typedef struct S209 T209;
typedef struct S148 T148;

/*C Header Pass 2 :*/
typedef T0**T156;
typedef T0**T109;
typedef T0**T241;
typedef T0**T77;
typedef T3*T9;
typedef T0**T226;
typedef T2*T85;
typedef T0**T208;
typedef T0**T293;

/*C Header Pass 3 :*/
extern T274 M274;
struct S89{T8 _directory_stream;T8 _current_entry;};
int se_cmpT89(T89 o1,T89 o2);
struct S66{T2 _i_code;};
int se_cmpT66(T66 o1,T66 o2);
extern T272 M272;

/*C Header Pass 4 :*/
struct S362{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T362 M362;
struct S219{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T219 M219;
extern T308 M308;
struct S178{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T178 M178;
struct S199{Tid id;T0* _project;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;};
extern T199 M199;
struct S268{Tid id;T0* _event_parser_factory;};
extern T268 M268;
struct S304{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T6 _end_of_file;T0* _character_buffer;};
extern T304 M304;
struct S328{Tid id;T0* _command;int _system_impl;};
extern T328 M328;
struct S95{Tid id;T0* _project;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T95 M95;
struct S64{Tid id;T0* _name;T0* _value;};
extern T64 M64;
struct S16{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;};
extern T16 M16;
struct S181{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T181 M181;
struct S315{Tid id;T0* _parameters;};
extern T315 M315;
struct S298{Tid id;};
extern T298 M298;
struct S174{Tid id;T0* _project;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T174 M174;
struct S84{Tid id;T85 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T84 M84;
struct S92{Tid id;};
extern T92 M92;
struct S44{Tid id;};
extern T44 M44;
struct S290{Tid id;};
extern T290 M290;
struct S45{Tid id;};
extern T45 M45;
struct S132{Tid id;};
extern T132 M132;
struct S350{Tid id;T0* _first;T0* _second;};
extern T350 M350;
struct S129{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T129 M129;
struct S299{Tid id;T6 _push_back_flag;T89 _basic_directory;T2 _memory;T0* _name;T6 _end_of_file;};
extern T299 M299;
struct S317{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T317 M317;
struct S46{Tid id;T2 _item;};
extern T46 M46;
struct S236{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T236 M236;
struct S203{Tid id;T0* _first;T0* _second;};
extern T203 M203;
struct S366{Tid id;T0* _item;T0* _right;};
extern T366 M366;
struct S51{Tid id;T8 _item;};
extern T51 M51;
struct S387{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T387 M387;
struct S206{Tid id;T208 _storage;T2 _capacity;T2 _upper;};
extern T206 M206;
struct S71{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T71 M71;
struct S138{Tid id;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _fish;T0* _clean;};
extern T138 M138;
struct S392{Tid id;};
extern T392 M392;
struct S93{Tid id;};
extern T93 M93;
struct S189{Tid id;T0* _project;T0* _directory;};
extern T189 M189;
struct S78{Tid id;};
extern T78 M78;
struct S394{Tid id;};
extern T394 M394;
struct S321{Tid id;T0* _parameters;};
extern T321 M321;
struct S351{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T351 M351;
struct S193{Tid id;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;};
extern T193 M193;
struct S90{Tid id;T89 _basic_directory;};
extern T90 M90;
struct S336{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T336 M336;
struct S185{Tid id;T0* _project;T0* _filename;T6 _reuse_variables;T0* _start_target_name;};
extern T185 M185;
struct S346{Tid id;T0* _item;};
extern T346 M346;
struct S142{Tid id;T0* _project;T0* _command_line;};
extern T142 M142;
struct S43{Tid id;T6 _item;};
extern T43 M43;
struct S372{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T372 M372;
struct S107{Tid id;T109 _storage;T2 _capacity;T2 _upper;};
extern T107 M107;
extern T330 M330;
struct S306{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T306 M306;
struct S331{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T331 M331;
struct S63{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T63 M63;
struct S183{Tid id;T0* _project;T0* _config_filename;};
extern T183 M183;
struct S260{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T260 M260;
struct S195{Tid id;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;};
extern T195 M195;
struct S60{Tid id;T0* _children;T0* _attributes;T0* _name;T0* _content;};
extern T60 M60;
struct S339{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _entry_buffer;T89 _basic_directory;};
extern T339 M339;
struct S377{Tid id;};
extern T377 M377;
struct S393{Tid id;};
extern T393 M393;
struct S376{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T376 M376;
struct S273{Tid id;};
extern T273 M273;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S169{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T169 M169;
struct S197{Tid id;T0* _project;T0* _name;T0* _value;};
extern T197 M197;
struct S57{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T57 M57;
struct S136{Tid id;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _finish_freezing;T0* _clean;};
extern T136 M136;
struct S244{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T244 M244;
struct S227{Tid id;};
extern T227 M227;
struct S347{Tid id;};
extern T347 M347;
struct S76{Tid id;T77 _storage;T2 _capacity;T2 _upper;};
extern T76 M76;
struct S204{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T204 M204;
struct S191{Tid id;T0* _project;T0* _directory;T0* _file;};
extern T191 M191;
struct S81{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T81 M81;
extern T89 M89;
struct S349{Tid id;T0* _first;T0* _second;};
extern T349 M349;
struct S94{Tid id;};
extern T94 M94;
struct S80{Tid id;T2 _type;};
extern T80 M80;
struct S146{Tid id;T0* _project;T0* _name;T0* _value;};
extern T146 M146;
struct S239{Tid id;T241 _storage;T2 _capacity;T2 _upper;};
extern T239 M239;
struct S144{Tid id;T0* _project;T0* _executable;T0* _source_filename;};
extern T144 M144;
struct S154{Tid id;T156 _storage;T2 _capacity;T2 _upper;};
extern T154 M154;
struct S28{Tid id;T0* _build_filename;T0* _start_target_name;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T0* _current_target;T0* _root_element;};
extern T28 M28;
struct S25{Tid id;T0* _i_representation;};
extern T25 M25;
struct S113{Tid id;T85 _storage;T2 _capacity;T2 _upper;};
extern T113 M113;
extern T66 M66;
struct S242{Tid id;};
extern T242 M242;
struct S176{Tid id;T0* _project;T0* _input_filename;T0* _output_filename;T0* _defines;};
extern T176 M176;
struct S105{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T105 M105;
struct S98{Tid id;};
extern T98 M98;
struct S344{Tid id;T2 _last_code;T2 _next_pos;};
extern T344 M344;
struct S370{Tid id;T0* _uri;};
extern T370 M370;
struct S296{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T296 M296;
struct S322{Tid id;T89 _basic_directory;T0* _name;};
extern T322 M322;
struct S271{Tid id;};
extern T271 M271;
struct S326{Tid id;T89 _basic_directory;T0* _name;};
extern T326 M326;
struct S91{Tid id;T89 _basic_directory;};
extern T91 M91;
struct S42{Tid id;T0* _description;T0* _name;T0* _project;T6 _is_executed;T0* _target_element;};
extern T42 M42;
struct S133{Tid id;};
extern T133 M133;
struct S318{Tid id;T109 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T318 M318;
struct S224{Tid id;T226 _storage;T2 _capacity;T2 _upper;};
extern T224 M224;
struct S289{Tid id;T293 _storage;T2 _capacity;T2 _upper;};
extern T289 M289;
struct S222{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T222 M222;
struct S140{Tid id;T0* _project;T0* _esd_filename;T0* _clean;T6 _recursive_clean;};
extern T140 M140;
struct S82{Tid id;T2 _count;T0* _storage;};
extern T82 M82;
struct S187{Tid id;T0* _project;T0* _message;};
extern T187 M187;
struct S50{Tid id;T3 _item;};
extern T50 M50;
struct S275{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T275 M275;
struct S172{Tid id;T0* _project;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T172 M172;
struct S245{Tid id;T0* _implementation;T0* _root_element;};
extern T245 M245;
struct S112{Tid id;};
extern T112 M112;
struct S297{Tid id;};
extern T297 M297;
struct S395{Tid id;};
extern T395 M395;
struct S88{Tid id;T89 _basic_directory;};
extern T88 M88;
struct S391{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T391 M391;
struct S171{Tid id;};
extern T171 M171;
struct S48{Tid id;};
extern T48 M48;
struct S97{Tid id;T0* _variables;};
extern T97 M97;
struct S319{Tid id;T0* _program_name;};
extern T319 M319;
struct S267{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T267 M267;
struct S150{Tid id;T0* _project;T0* _options;T0* _command;T0* _command_options;T0* _xace_filename;T6 _compile;T0* _defines;};
extern T150 M150;
struct S209{Tid id;};
extern T209 M209;
struct S148{Tid id;T0* _project;T0* _name;};
extern T148 M148;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically 
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T0* r6out(T6 C);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
void r156clear_all(T156 C,T2 a1);
T156 r156realloc(T156 C,T2 a1,T2 a2);
void r156set_all_with(T156 C,T0* a1,T2 a2);
void r156clear(T156 C,T2 a1,T2 a2);
void r156copy_from(T156 C,T156 a1,T2 a2);
void r109clear_all(T109 C,T2 a1);
T109 r109realloc(T109 C,T2 a1,T2 a2);
void r109move(T109 C,T2 a1,T2 a2,T2 a3);
void r109set_all_with(T109 C,T0* a1,T2 a2);
void r109clear(T109 C,T2 a1,T2 a2);
void r109copy_from(T109 C,T109 a1,T2 a2);
void r241clear_all(T241 C,T2 a1);
T241 r241realloc(T241 C,T2 a1,T2 a2);
void r241set_all_with(T241 C,T0* a1,T2 a2);
void r241clear(T241 C,T2 a1,T2 a2);
void r241copy_from(T241 C,T241 a1,T2 a2);
void r77clear_all(T77 C,T2 a1);
T77 r77realloc(T77 C,T2 a1,T2 a2);
void r77set_all_with(T77 C,T0* a1,T2 a2);
void r77clear(T77 C,T2 a1,T2 a2);
void r77copy_from(T77 C,T77 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r226clear_all(T226 C,T2 a1);
T226 r226realloc(T226 C,T2 a1,T2 a2);
void r226set_all_with(T226 C,T0* a1,T2 a2);
void r226clear(T226 C,T2 a1,T2 a2);
void r226copy_from(T226 C,T226 a1,T2 a2);
void r85clear_all(T85 C,T2 a1);
T85 r85realloc(T85 C,T2 a1,T2 a2);
void r85move(T85 C,T2 a1,T2 a2,T2 a3);
void r85set_all_with(T85 C,T2 a1,T2 a2);
void r85clear(T85 C,T2 a1,T2 a2);
void r85copy_from(T85 C,T85 a1,T2 a2);
void r208clear_all(T208 C,T2 a1);
T208 r208realloc(T208 C,T2 a1,T2 a2);
void r208set_all_with(T208 C,T0* a1,T2 a2);
void r208clear(T208 C,T2 a1,T2 a2);
void r208copy_from(T208 C,T208 a1,T2 a2);
void r293clear_all(T293 C,T2 a1);
T293 r293realloc(T293 C,T2 a1,T2 a2);
void r293set_all_with(T293 C,T0* a1,T2 a2);
void r293clear(T293 C,T2 a1,T2 a2);
void r293copy_from(T293 C,T293 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
void r7remove_first(T7* C,T2 a1);
void r7remove_between(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7tail(T7* C,T2 a1);
void r7swap(T7* C,T2 a1,T2 a2);
void r84copy(T84* C,T0* a1);
T2 r84count(T84* C);
T2 r84item(T84* C,T2 a1);
T6 r84se_assigned_from(T0* a1);
void r84print_on(T84* C,T0* a1);
void r84out_in_tagged_out_memory(T84* C);
void r84make(T84* C,T2 a1,T2 a2);
void r84fill_tagged_out_memory(T84* C);
T6 r84conforms_to(T84* C,T0* a1);
void r84resize(T84* C,T2 a1,T2 a2);
T0* r84twin(T84* C);
void r206copy(T206* C,T0* a1);
T6 r206se_assigned_from(T0* a1);
void r206print_on(T206* C,T0* a1);
void r206out_in_tagged_out_memory(T206* C);
void r206make(T206* C,T2 a1);
void r206fill_tagged_out_memory(T206* C);
T6 r206conforms_to(T206* C,T0* a1);
void r206resize(T206* C,T2 a1);
T0* r206twin(T206* C);
void r107copy(T107* C,T0* a1);
T6 r107se_assigned_from(T0* a1);
void r107print_on(T107* C,T0* a1);
void r107out_in_tagged_out_memory(T107* C);
void r107make(T107* C,T2 a1);
void r107fill_tagged_out_memory(T107* C);
T6 r107conforms_to(T107* C,T0* a1);
void r107resize(T107* C,T2 a1);
T0* r107twin(T107* C);
void r76copy(T76* C,T0* a1);
T6 r76se_assigned_from(T0* a1);
void r76print_on(T76* C,T0* a1);
void r76out_in_tagged_out_memory(T76* C);
void r76make(T76* C,T2 a1);
void r76fill_tagged_out_memory(T76* C);
T6 r76conforms_to(T76* C,T0* a1);
void r76resize(T76* C,T2 a1);
T0* r76twin(T76* C);
void r239copy(T239* C,T0* a1);
T6 r239se_assigned_from(T0* a1);
void r239print_on(T239* C,T0* a1);
void r239out_in_tagged_out_memory(T239* C);
void r239make(T239* C,T2 a1);
void r239fill_tagged_out_memory(T239* C);
T6 r239conforms_to(T239* C,T0* a1);
void r239resize(T239* C,T2 a1);
T0* r239twin(T239* C);
void r154copy(T154* C,T0* a1);
T6 r154se_assigned_from(T0* a1);
void r154print_on(T154* C,T0* a1);
void r154out_in_tagged_out_memory(T154* C);
void r154make(T154* C,T2 a1);
void r154fill_tagged_out_memory(T154* C);
T6 r154conforms_to(T154* C,T0* a1);
void r154resize(T154* C,T2 a1);
T0* r154twin(T154* C);
void r113copy(T113* C,T0* a1);
T6 r113se_assigned_from(T0* a1);
void r113print_on(T113* C,T0* a1);
void r113out_in_tagged_out_memory(T113* C);
void r113make(T113* C,T2 a1);
void r113fill_tagged_out_memory(T113* C);
T6 r113conforms_to(T113* C,T0* a1);
void r113resize(T113* C,T2 a1);
T0* r113twin(T113* C);
void r113with_capacity(T113* C,T2 a1);
void r113from_collection(T113* C,T0* a1);
void r318copy(T318* C,T0* a1);
void r318force(T318* C,T0* a1,T2 a2);
T2 r318count(T318* C);
T0* r318item(T318* C,T2 a1);
T6 r318valid_index(T318* C,T2 a1);
T6 r318se_assigned_from(T0* a1);
void r318print_on(T318* C,T0* a1);
void r318out_in_tagged_out_memory(T318* C);
void r318make(T318* C,T2 a1,T2 a2);
void r318fill_tagged_out_memory(T318* C);
T6 r318conforms_to(T318* C,T0* a1);
void r318add_last(T318* C,T0* a1);
void r318resize(T318* C,T2 a1,T2 a2);
T0* r318twin(T318* C);
void r224copy(T224* C,T0* a1);
T6 r224se_assigned_from(T0* a1);
void r224print_on(T224* C,T0* a1);
void r224out_in_tagged_out_memory(T224* C);
void r224make(T224* C,T2 a1);
void r224fill_tagged_out_memory(T224* C);
T6 r224conforms_to(T224* C,T0* a1);
void r224resize(T224* C,T2 a1);
T0* r224twin(T224* C);
void r289copy(T289* C,T0* a1);
T2 r289count(T289* C);
T0* r289item(T289* C,T2 a1);
T6 r289se_assigned_from(T0* a1);
void r289print_on(T289* C,T0* a1);
void r289out_in_tagged_out_memory(T289* C);
void r289make(T289* C,T2 a1);
void r289fill_tagged_out_memory(T289* C);
T6 r289conforms_to(T289* C,T0* a1);
void r289resize(T289* C,T2 a1);
T0* r289twin(T289* C);
void r362copy(T362* C,T0* a1);
void r362set(T362* C,T0* a1,T6 a2,T6 a3);
T6 r362se_assigned_from(T0* a1);
void r362print_on(T362* C,T0* a1);
void r362out_in_tagged_out_memory(T362* C);
void r362make(T362* C,T0* a1);
T6 r362conforms_to(T362* C,T0* a1);
void r362set_after(T362* C);
T0* r362twin(T362* C);
void r219copy(T219* C,T0* a1);
T6 r219se_assigned_from(T0* a1);
void r219print_on(T219* C,T0* a1);
void r219out_in_tagged_out_memory(T219* C);
T6 r219off(T219* C);
T6 r219conforms_to(T219* C,T0* a1);
T0* r219twin(T219* C);
T2 r178new_capacity(T2 a1);
void r178copy(T178* C,T0* a1);
T6 r178extendible(T178* C,T2 a1);
void r178remove_traversing_cursor(T178* C,T0* a1);
void r178move_all_cursors_after(T178* C);
void r178add_traversing_cursor(T178* C,T0* a1);
T6 r178se_assigned_from(T0* a1);
void r178print_on(T178* C,T0* a1);
T0* r178clone(T0* a1);
void r178out_in_tagged_out_memory(T178* C);
T6 r178cursor_before(T0* a1);
void r178make(T178* C,T2 a1);
T6 r178cursor_after(T0* a1);
T6 r178conforms_to(T178* C,T0* a1);
void r178resize(T178* C,T2 a1);
T0* r178twin(T178* C);
void r178force_last(T178* C,T0* a1);
T0* r178new_cursor(T178* C);
T6 r178cursor_off(T0* a1);
void r181copy(T181* C,T0* a1);
T6 r181se_assigned_from(T0* a1);
void r181print_on(T181* C,T0* a1);
void r181out_in_tagged_out_memory(T181* C);
T6 r181off(T181* C);
T6 r181conforms_to(T181* C,T0* a1);
T0* r181twin(T181* C);
void r290clear_all(T0* a1);
T6 r290se_assigned_from(T0* a1);
void r290print_on(T290* C,T0* a1);
void r290out_in_tagged_out_memory(T290* C);
T0* r290make(T2 a1);
T6 r290conforms_to(T290* C,T0* a1);
T0* r290resize(T0* a1,T2 a2);
T0* r290twin(T290* C);
T6 r132se_assigned_from(T0* a1);
void r132print_on(T132* C,T0* a1);
void r132out_in_tagged_out_memory(T132* C);
T0* r132to_fixed_array(T0* a1);
T0* r132make(T2 a1);
T0* r132make_from_array(T0* a1);
T6 r132conforms_to(T132* C,T0* a1);
T0* r132resize(T0* a1,T2 a2);
T0* r132twin(T132* C);
T6 r350se_assigned_from(T0* a1);
void r350print_on(T350* C,T0* a1);
void r350out_in_tagged_out_memory(T350* C);
void r350make(T350* C,T0* a1,T0* a2);
T6 r350conforms_to(T350* C,T0* a1);
T0* r350twin(T350* C);
void r129copy(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
void r129print_on(T129* C,T0* a1);
void r129out_in_tagged_out_memory(T129* C);
void r129make(T129* C,T0* a1);
T6 r129off(T129* C);
T6 r129conforms_to(T129* C,T0* a1);
T0* r129twin(T129* C);
void r236copy(T236* C,T0* a1);
T6 r236se_assigned_from(T0* a1);
void r236print_on(T236* C,T0* a1);
void r236out_in_tagged_out_memory(T236* C);
T6 r236off(T236* C);
T6 r236conforms_to(T236* C,T0* a1);
T0* r236twin(T236* C);
T6 r203se_assigned_from(T0* a1);
void r203print_on(T203* C,T0* a1);
void r203out_in_tagged_out_memory(T203* C);
void r203make(T203* C,T0* a1,T0* a2);
T6 r203conforms_to(T203* C,T0* a1);
T0* r203twin(T203* C);
T6 r366se_assigned_from(T0* a1);
void r366print_on(T366* C,T0* a1);
void r366out_in_tagged_out_memory(T366* C);
T6 r366conforms_to(T366* C,T0* a1);
T0* r366twin(T366* C);
void r387copy(T387* C,T0* a1);
T6 r387se_assigned_from(T0* a1);
void r387print_on(T387* C,T0* a1);
void r387out_in_tagged_out_memory(T387* C);
T6 r387off(T387* C);
T6 r387conforms_to(T387* C,T0* a1);
T0* r387twin(T387* C);
T2 r71new_capacity(T2 a1);
void r71copy(T71* C,T0* a1);
T6 r71extendible(T71* C,T2 a1);
void r71remove_traversing_cursor(T71* C,T0* a1);
T0* r71item(T71* C,T2 a1);
void r71move_all_cursors_after(T71* C);
void r71add_traversing_cursor(T71* C,T0* a1);
T6 r71se_assigned_from(T0* a1);
void r71print_on(T71* C,T0* a1);
T0* r71clone(T0* a1);
void r71out_in_tagged_out_memory(T71* C);
T6 r71cursor_before(T0* a1);
void r71make(T71* C,T2 a1);
T6 r71cursor_after(T0* a1);
T6 r71conforms_to(T71* C,T0* a1);
void r71resize(T71* C,T2 a1);
T0* r71twin(T71* C);
void r71force_last(T71* C,T0* a1);
T0* r71new_cursor(T71* C);
T6 r71cursor_off(T0* a1);
void r351copy(T351* C,T0* a1);
T0* r351cursor_item(T0* a1);
void r351remove_traversing_cursor(T351* C,T0* a1);
void r351move_all_cursors_after(T351* C);
void r351add_traversing_cursor(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
void r351print_on(T351* C,T0* a1);
void r351out_in_tagged_out_memory(T351* C);
void r351make(T351* C);
T6 r351cursor_after(T0* a1);
T6 r351conforms_to(T351* C,T0* a1);
void r351cursor_forth(T351* C,T0* a1);
void r351cursor_start(T351* C,T0* a1);
T0* r351twin(T351* C);
T0* r351new_cursor(T351* C);
void r351put_last(T351* C,T0* a1);
T6 r351cursor_off(T0* a1);
T6 r346se_assigned_from(T0* a1);
void r346print_on(T346* C,T0* a1);
void r346out_in_tagged_out_memory(T346* C);
T6 r346conforms_to(T346* C,T0* a1);
T0* r346twin(T346* C);
T2 r372new_capacity(T2 a1);
void r372copy(T372* C,T0* a1);
T6 r372extendible(T372* C,T2 a1);
void r372force(T372* C,T0* a1);
T0* r372item(T372* C);
T6 r372se_assigned_from(T0* a1);
void r372print_on(T372* C,T0* a1);
T0* r372clone(T0* a1);
void r372out_in_tagged_out_memory(T372* C);
void r372make(T372* C,T2 a1);
void r372remove(T372* C);
T6 r372conforms_to(T372* C,T0* a1);
void r372resize(T372* C,T2 a1);
T0* r372twin(T372* C);
T2 r63new_capacity(T2 a1);
void r63copy(T63* C,T0* a1);
T6 r63extendible(T63* C,T2 a1);
void r63remove_traversing_cursor(T63* C,T0* a1);
void r63move_all_cursors_after(T63* C);
void r63add_traversing_cursor(T63* C,T0* a1);
T6 r63se_assigned_from(T0* a1);
void r63print_on(T63* C,T0* a1);
T0* r63clone(T0* a1);
void r63out_in_tagged_out_memory(T63* C);
T6 r63cursor_before(T0* a1);
void r63make(T63* C,T2 a1);
T6 r63cursor_after(T0* a1);
T6 r63conforms_to(T63* C,T0* a1);
void r63resize(T63* C,T2 a1);
T0* r63twin(T63* C);
void r63force_last(T63* C,T0* a1);
T0* r63new_cursor(T63* C);
void r63put_last(T63* C,T0* a1);
T6 r63cursor_off(T0* a1);
void r260copy(T260* C,T0* a1);
T6 r260se_assigned_from(T0* a1);
void r260print_on(T260* C,T0* a1);
void r260out_in_tagged_out_memory(T260* C);
T6 r260off(T260* C);
T6 r260conforms_to(T260* C,T0* a1);
T0* r260twin(T260* C);
T6 r377se_assigned_from(T0* a1);
void r377print_on(T377* C,T0* a1);
void r377out_in_tagged_out_memory(T377* C);
T0* r377make(T2 a1);
T6 r377conforms_to(T377* C,T0* a1);
T0* r377resize(T0* a1,T2 a2);
T0* r377twin(T377* C);
void r169copy(T169* C,T0* a1);
T6 r169se_assigned_from(T0* a1);
void r169print_on(T169* C,T0* a1);
void r169out_in_tagged_out_memory(T169* C);
T6 r169off(T169* C);
T6 r169conforms_to(T169* C,T0* a1);
T0* r169twin(T169* C);
T2 r57new_capacity(T2 a1);
void r57copy(T57* C,T0* a1);
T6 r57extendible(T57* C,T2 a1);
void r57force(T57* C,T0* a1);
T0* r57item(T57* C);
T6 r57se_assigned_from(T0* a1);
void r57print_on(T57* C,T0* a1);
T0* r57clone(T0* a1);
void r57out_in_tagged_out_memory(T57* C);
void r57make(T57* C,T2 a1);
void r57remove(T57* C);
T6 r57conforms_to(T57* C,T0* a1);
void r57resize(T57* C,T2 a1);
T0* r57twin(T57* C);
T2 r244new_capacity(T2 a1);
void r244copy(T244* C,T0* a1);
T6 r244extendible(T244* C,T2 a1);
void r244remove_traversing_cursor(T244* C,T0* a1);
void r244move_all_cursors_after(T244* C);
void r244add_traversing_cursor(T244* C,T0* a1);
T6 r244se_assigned_from(T0* a1);
void r244print_on(T244* C,T0* a1);
T0* r244clone(T0* a1);
void r244out_in_tagged_out_memory(T244* C);
T6 r244cursor_before(T0* a1);
void r244make(T244* C,T2 a1);
T6 r244cursor_after(T0* a1);
T6 r244conforms_to(T244* C,T0* a1);
void r244resize(T244* C,T2 a1);
T0* r244twin(T244* C);
void r244force_last(T244* C,T0* a1);
T0* r244new_cursor(T244* C);
T6 r244cursor_off(T0* a1);
T6 r227se_assigned_from(T0* a1);
void r227print_on(T227* C,T0* a1);
void r227out_in_tagged_out_memory(T227* C);
T0* r227make(T2 a1);
T6 r227conforms_to(T227* C,T0* a1);
T0* r227resize(T0* a1,T2 a2);
T0* r227twin(T227* C);
T2 r204new_capacity(T2 a1);
void r204copy(T204* C,T0* a1);
T6 r204extendible(T204* C,T2 a1);
void r204remove_traversing_cursor(T204* C,T0* a1);
void r204move_all_cursors_after(T204* C);
void r204add_traversing_cursor(T204* C,T0* a1);
T6 r204se_assigned_from(T0* a1);
void r204print_on(T204* C,T0* a1);
T0* r204clone(T0* a1);
void r204out_in_tagged_out_memory(T204* C);
T6 r204cursor_before(T0* a1);
void r204make(T204* C,T2 a1);
T6 r204cursor_after(T0* a1);
T6 r204conforms_to(T204* C,T0* a1);
void r204resize(T204* C,T2 a1);
T0* r204twin(T204* C);
void r204force_last(T204* C,T0* a1);
T0* r204new_cursor(T204* C);
T6 r204cursor_off(T0* a1);
T6 r349se_assigned_from(T0* a1);
void r349print_on(T349* C,T0* a1);
void r349out_in_tagged_out_memory(T349* C);
void r349make(T349* C,T0* a1,T0* a2);
T6 r349conforms_to(T349* C,T0* a1);
T0* r349twin(T349* C);
T6 r242se_assigned_from(T0* a1);
void r242print_on(T242* C,T0* a1);
void r242out_in_tagged_out_memory(T242* C);
T0* r242make(T2 a1);
T6 r242conforms_to(T242* C,T0* a1);
T0* r242resize(T0* a1,T2 a2);
T0* r242twin(T242* C);
T2 r105new_capacity(T2 a1);
void r105copy(T105* C,T0* a1);
void r105force(T105* C,T0* a1,T0* a2);
void r105make_clashes(T105* C,T2 a1);
T0* r105cursor_item(T105* C,T0* a1);
void r105search_position(T105* C,T0* a1);
void r105remove_traversing_cursor(T105* C,T0* a1);
void r105clone_slots(T105* C);
extern T0*oBC101FIXED_INTEGER_ARRAY_;
void r105keys_resize(T105* C,T2 a1);
void r105clone_clashes(T105* C);
void r105move_all_cursors_after(T105* C);
void r105make_items(T105* C,T2 a1);
void r105add_traversing_cursor(T105* C,T0* a1);
T6 r105se_assigned_from(T0* a1);
void r105print_on(T105* C,T0* a1);
T0* r105clone(T0* a1);
void r105remove_position(T105* C,T2 a1);
void r105out_in_tagged_out_memory(T105* C);
T0* r105key_for_iteration(T105* C);
T6 r105after(T105* C);
void r105make(T105* C,T2 a1);
T0* r105item_for_iteration(T105* C);
void r105remove(T105* C,T0* a1);
T0* r105cursor_key(T105* C,T0* a1);
void r105clone_items(T105* C);
T6 r105cursor_after(T0* a1);
T6 r105conforms_to(T105* C,T0* a1);
void r105make_keys(T105* C,T2 a1);
T2 r105hash_position(T105* C,T0* a1);
void r105cursor_forth(T105* C,T0* a1);
void r105items_resize(T105* C,T2 a1);
void r105clone_keys(T105* C);
void r105move_cursors_after(T105* C,T2 a1);
void r105resize(T105* C,T2 a1);
void r105make_with_equality_testers(T105* C,T2 a1,T0* a2,T0* a3);
T0* r105found_item(T105* C);
T6 r105found(T105* C);
void r105move_cursors_forth(T105* C,T2 a1);
void r105cursor_start(T105* C,T0* a1);
void r105search(T105* C,T0* a1);
void r105clashes_resize(T105* C,T2 a1);
void r105slots_resize(T105* C,T2 a1);
T0* r105twin(T105* C);
T0* r105new_cursor(T105* C);
void r105make_slots(T105* C,T2 a1);
void r105move_all_cursors(T105* C,T2 a1,T2 a2);
T2 r105new_modulus(T2 a1);
T6 r105cursor_off(T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133print_on(T133* C,T0* a1);
void r133out_in_tagged_out_memory(T133* C);
T0* r133make(T2 a1);
T6 r133conforms_to(T133* C,T0* a1);
T0* r133resize(T0* a1,T2 a2);
T0* r133twin(T133* C);
T2 r222new_capacity(T2 a1);
void r222copy(T222* C,T0* a1);
T6 r222extendible(T222* C,T2 a1);
void r222remove_traversing_cursor(T222* C,T0* a1);
void r222move_all_cursors_after(T222* C);
void r222add_traversing_cursor(T222* C,T0* a1);
T6 r222se_assigned_from(T0* a1);
void r222print_on(T222* C,T0* a1);
T0* r222clone(T0* a1);
void r222out_in_tagged_out_memory(T222* C);
T6 r222cursor_before(T0* a1);
void r222make(T222* C,T2 a1);
T6 r222cursor_after(T0* a1);
T6 r222conforms_to(T222* C,T0* a1);
void r222resize(T222* C,T2 a1);
T0* r222twin(T222* C);
void r222force_last(T222* C,T0* a1);
T0* r222new_cursor(T222* C);
T6 r222cursor_off(T0* a1);
T6 r112se_assigned_from(T0* a1);
void r112print_on(T112* C,T0* a1);
void r112out_in_tagged_out_memory(T112* C);
T6 r112conforms_to(T112* C,T0* a1);
T6 r112test(T0* a1,T0* a2);
T0* r112twin(T112* C);
T6 r171se_assigned_from(T0* a1);
void r171print_on(T171* C,T0* a1);
void r171out_in_tagged_out_memory(T171* C);
T0* r171make(T2 a1);
T6 r171conforms_to(T171* C,T0* a1);
T0* r171resize(T0* a1,T2 a2);
T0* r171twin(T171* C);
T6 r209se_assigned_from(T0* a1);
void r209print_on(T209* C,T0* a1);
void r209out_in_tagged_out_memory(T209* C);
T0* r209make(T2 a1);
T6 r209conforms_to(T209* C,T0* a1);
T0* r209resize(T0* a1,T2 a2);
T0* r209twin(T209* C);
extern T0*oBC199Output_filename_attribute_name;
extern int fBC199Output_filename_attribute_name;
T0* r199Output_filename_attribute_name(void);
void r199make_from_element(T199* C,T0* a1,T0* a2);
extern T0*oBC199Stylesheet_filename_attribute_name;
extern int fBC199Stylesheet_filename_attribute_name;
T0* r199Stylesheet_filename_attribute_name(void);
T6 r199se_assigned_from(T0* a1);
void r199print_on(T199* C,T0* a1);
T0* r199clone(T0* a1);
void r199out_in_tagged_out_memory(T199* C);
void r199make(T199* C,T0* a1);
extern T0*oBC199Parameter_element_name;
extern int fBC199Parameter_element_name;
T0* r199Parameter_element_name(void);
T0* r199uc_attribute_value(T199* C,T0* a1,T0* a2);
extern T0*oBC199Value_attribute_name;
extern int fBC199Value_attribute_name;
T0* r199Value_attribute_name(void);
void r199_59Pmake(T199* C,T0* a1);
T6 r199conforms_to(T199* C,T0* a1);
void r199print(T0* a1);
void r199_58Pmake_from_element(T199* C,T0* a1,T0* a2);
void r199execute(T199* C);
T6 r199has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC19Name_attribute_name;
extern int fBC19Name_attribute_name;
T0* r199Name_attribute_name(void);
extern T0*oBC1std_output;
T0* r199twin(T199* C);
void r199execute_shell(T0* a1);
T6 r199is_executable(T199* C);
extern T0*oBC199Input_filename_attribute_name;
extern int fBC199Input_filename_attribute_name;
T0* r199Input_filename_attribute_name(void);
T6 r268se_assigned_from(T0* a1);
void r268print_on(T268* C,T0* a1);
void r268out_in_tagged_out_memory(T268* C);
T6 r268conforms_to(T268* C,T0* a1);
T0* r268twin(T268* C);
T0* r90pathname_from_file_system(T90* C,T0* a1,T0* a2);
T0* r90current_working_directory(T90* C);
void r90cd(T90* C,T0* a1);
T6 r90se_assigned_from(T0* a1);
T6 r90is_directory_readable(T0* a1);
void r90print_on(T90* C,T0* a1);
T0* r90clone(T0* a1);
T0* r90dirname(T0* a1);
void r90delete_file(T0* a1);
void r90out_in_tagged_out_memory(T90* C);
void r90set_current_working_directory(T90* C,T0* a1);
T0* r90cwd(T90* C);
T6 r90same_type(T90* C,T0* a1);
T6 r90is_file_readable(T0* a1);
extern T0*oBC86tmp_file;
extern int fBC86tmp_file;
T0* r90tmp_file(void);
T6 r90conforms_to(T90* C,T0* a1);
void r90copy_file(T0* a1,T0* a2);
T0* r90string_to_pathname(T0* a1);
void r90rename_file(T0* a1,T0* a2);
extern T0*oBC90root_directory;
T6 r90is_root_directory(T0* a1);
T0* r90pathname_to_string(T0* a1);
T0* r90twin(T90* C);
extern T0*oBC22STRING_;
T0* r90canonical_pathname(T0* a1);
T0* r90pathname(T0* a1,T0* a2);
extern T0*oBC86tmp_directory;
extern int fBC86tmp_directory;
T0* r90tmp_directory(void);
T6 r328se_assigned_from(T0* a1);
void r328print_on(T328* C,T0* a1);
void r328out_in_tagged_out_memory(T328* C);
T6 r328conforms_to(T328* C,T0* a1);
void r328execute(T328* C);
T0* r328twin(T328* C);
extern T0*oBC95Clean_attribute_name;
extern int fBC95Clean_attribute_name;
T0* r95Clean_attribute_name(void);
extern T0*oBC29unix_file_system;
void r95make_from_element(T95* C,T0* a1,T0* a2);
T6 r95is_cleanable(T95* C);
T0* r95attribute_value(T95* C,T0* a1,T0* a2);
extern T0*oBC95Ace_attribute_name;
extern int fBC95Ace_attribute_name;
T0* r95Ace_attribute_name(void);
extern T0*oBC95Root_class_attribute_name;
extern int fBC95Root_class_attribute_name;
T0* r95Root_class_attribute_name(void);
extern T0*oBC29file_system;
extern int fBC29file_system;
T0* r95file_system(void);
T6 r95se_assigned_from(T0* a1);
void r95print_on(T95* C,T0* a1);
T0* r95clone(T0* a1);
void r95out_in_tagged_out_memory(T95* C);
T0* r95new_ace_cmdline(T95* C);
T6 r95uc_boolean_value(T95* C,T0* a1,T0* a2);
extern T0*oBC30operating_system;
extern T0*oBC19True_attribute_value;
extern int fBC19True_attribute_value;
T0* r95True_attribute_value(void);
T0* r95uc_attribute_value(T95* C,T0* a1,T0* a2);
extern T0*oBC95Case_insensitive_attribute_name;
extern int fBC95Case_insensitive_attribute_name;
T0* r95Case_insensitive_attribute_name(void);
T6 r95is_traditional_configuration(T95* C);
T6 r95conforms_to(T95* C,T0* a1);
void r95print(T0* a1);
void r95_58Pmake_from_element(T95* C,T0* a1,T0* a2);
extern T0*oBC95Executable_attribute_name;
extern int fBC95Executable_attribute_name;
T0* r95Executable_attribute_name(void);
extern T0*oBC95No_style_warning_attribute_name;
extern int fBC95No_style_warning_attribute_name;
T0* r95No_style_warning_attribute_name(void);
void r95execute(T95* C);
T6 r95has_uc_attribute(T0* a1,T0* a2);
T0* r95uc_attribute_value_or_default(T95* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC19False_attribute_value;
extern int fBC19False_attribute_value;
T0* r95False_attribute_value(void);
T0* r95attribute_value_or_default(T95* C,T0* a1,T0* a2,T0* a3);
T0* r95twin(T95* C);
T0* r95new_clean_cmdline(T95* C);
extern T0*oBC95Creation_procedure_attribute_name;
extern int fBC95Creation_procedure_attribute_name;
T0* r95Creation_procedure_attribute_name(void);
T0* r95new_traditional_cmdline(T95* C);
extern T0*oBC29windows_file_system;
void r95execute_shell(T0* a1);
T6 r95is_executable(T95* C);
T6 r95is_ace_configuration(T95* C);
T6 r64se_assigned_from(T0* a1);
void r64print_on(T64* C,T0* a1);
void r64out_in_tagged_out_memory(T64* C);
void r64make(T64* C,T0* a1,T0* a2);
T6 r64conforms_to(T64* C,T0* a1);
T0* r64twin(T64* C);
T6 r315se_assigned_from(T0* a1);
void r315print_on(T315* C,T0* a1);
void r315out_in_tagged_out_memory(T315* C);
extern T0*oBC18Arguments;
extern int fBC18Arguments;
T0* r315Arguments(void);
void r315make(T315* C,T0* a1);
T0* r315message(T315* C,T0* a1);
T6 r315conforms_to(T315* C,T0* a1);
T0* r315twin(T315* C);
T0* r315default_message(T315* C);
extern T0*oBC174Output_filename_attribute_name;
extern int fBC174Output_filename_attribute_name;
T0* r174Output_filename_attribute_name(void);
void r174make_from_element(T174* C,T0* a1,T0* a2);
T6 r174se_assigned_from(T0* a1);
void r174print_on(T174* C,T0* a1);
T0* r174clone(T0* a1);
void r174out_in_tagged_out_memory(T174* C);
T6 r174uc_boolean_value(T174* C,T0* a1,T0* a2);
void r174make(T174* C,T0* a1);
T0* r174True_attribute_value(void);
extern T0*oBC174Verbose_filename_attribute_name;
extern int fBC174Verbose_filename_attribute_name;
T0* r174Verbose_filename_attribute_name(void);
T0* r174uc_attribute_value(T174* C,T0* a1,T0* a2);
void r174_59Pmake(T174* C,T0* a1);
T6 r174conforms_to(T174* C,T0* a1);
void r174print(T0* a1);
void r174_58Pmake_from_element(T174* C,T0* a1,T0* a2);
void r174execute(T174* C);
T6 r174has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC174Tokens_classname_attribute_name;
extern int fBC174Tokens_classname_attribute_name;
T0* r174Tokens_classname_attribute_name(void);
T0* r174False_attribute_value(void);
extern T0*oBC174Separate_actions_attribute_name;
extern int fBC174Separate_actions_attribute_name;
T0* r174Separate_actions_attribute_name(void);
T0* r174twin(T174* C);
void r174execute_shell(T0* a1);
T6 r174is_executable(T174* C);
extern T0*oBC174Input_filename_attribute_name;
extern int fBC174Input_filename_attribute_name;
T0* r174Input_filename_attribute_name(void);
T0* r299current_working_directory(T299* C);
T6 r299se_assigned_from(T0* a1);
void r299print_on(T299* C,T0* a1);
void r299old_read_character(T299* C);
T0* r299clone(T0* a1);
extern T6 oBC88is_windows;
extern int fBC88is_windows;
T6 r299is_windows(T299* C);
T6 r299old_end_of_file(T299* C);
void r299out_in_tagged_out_memory(T299* C);
void r299make(T299* C);
T6 r299conforms_to(T299* C,T0* a1);
extern T6 oBC88is_unix;
extern int fBC88is_unix;
T6 r299is_unix(T299* C);
T0* r299twin(T299* C);
T6 r317se_assigned_from(T0* a1);
void r317print_on(T317* C,T0* a1);
void r317out_in_tagged_out_memory(T317* C);
void r317report_message(T317* C,T0* a1);
extern T0*oBC284std;
T0* r317message(T0* a1);
T6 r317conforms_to(T317* C,T0* a1);
T0* r317twin(T317* C);
void r317make_standard(T317* C);
void r317report_error(T317* C,T0* a1);
extern T0*oBC138Clean_attribute_name;
extern int fBC138Clean_attribute_name;
T0* r138Clean_attribute_name(void);
extern T0*oBC138System_attribute_name;
extern int fBC138System_attribute_name;
T0* r138System_attribute_name(void);
void r138make_from_element(T138* C,T0* a1,T0* a2);
T6 r138is_cleanable(T138* C);
extern T0*oBC138Ace_attribute_name;
extern int fBC138Ace_attribute_name;
T0* r138Ace_attribute_name(void);
T0* r138file_system(void);
T6 r138se_assigned_from(T0* a1);
void r138print_on(T138* C,T0* a1);
T0* r138clone(T0* a1);
void r138out_in_tagged_out_memory(T138* C);
T6 r138uc_boolean_value(T138* C,T0* a1,T0* a2);
void r138execute_clean(T138* C);
void r138execute_compile(T138* C);
T0* r138True_attribute_value(void);
extern T0*oBC138Finalize_attribute_name;
extern int fBC138Finalize_attribute_name;
T0* r138Finalize_attribute_name(void);
T0* r138uc_attribute_value(T138* C,T0* a1,T0* a2);
T6 r138conforms_to(T138* C,T0* a1);
void r138print(T0* a1);
void r138_58Pmake_from_element(T138* C,T0* a1,T0* a2);
T6 r138is_compilable(T138* C);
void r138execute(T138* C);
T6 r138has_uc_attribute(T0* a1,T0* a2);
T0* r138uc_attribute_value_or_default(T138* C,T0* a1,T0* a2,T0* a3);
T0* r138False_attribute_value(void);
T0* r138attribute_value_or_default(T138* C,T0* a1,T0* a2,T0* a3);
T0* r138twin(T138* C);
extern T0*oBC138Fish_attribute_name;
extern int fBC138Fish_attribute_name;
T0* r138Fish_attribute_name(void);
void r138execute_shell(T0* a1);
T6 r138is_executable(T138* C);
void r189make_from_element(T189* C,T0* a1,T0* a2);
T0* r189attribute_value(T189* C,T0* a1,T0* a2);
T0* r189file_system(void);
T6 r189se_assigned_from(T0* a1);
void r189print_on(T189* C,T0* a1);
void r189out_in_tagged_out_memory(T189* C);
T6 r189conforms_to(T189* C,T0* a1);
void r189print(T0* a1);
void r189_58Pmake_from_element(T189* C,T0* a1,T0* a2);
void r189execute(T189* C);
T0* r189twin(T189* C);
extern T0*oBC189Directory_attribute_name;
extern int fBC189Directory_attribute_name;
T0* r189Directory_attribute_name(void);
T6 r189is_executable(T189* C);
T6 r321se_assigned_from(T0* a1);
void r321print_on(T321* C,T0* a1);
void r321out_in_tagged_out_memory(T321* C);
T0* r321Arguments(void);
void r321make(T321* C,T0* a1);
T0* r321message(T321* C,T0* a1);
T6 r321conforms_to(T321* C,T0* a1);
T0* r321twin(T321* C);
T0* r321default_message(T321* C);
void r193make_from_element(T193* C,T0* a1,T0* a2);
T0* r193attribute_value(T193* C,T0* a1,T0* a2);
T0* r193file_system(void);
T6 r193se_assigned_from(T0* a1);
void r193print_on(T193* C,T0* a1);
void r193out_in_tagged_out_memory(T193* C);
T6 r193is_to_file_executable(T193* C);
extern T0*oBC193To_directory_attribute_name;
extern int fBC193To_directory_attribute_name;
T0* r193To_directory_attribute_name(void);
extern T0*oBC193To_file_attribute_name;
extern int fBC193To_file_attribute_name;
T0* r193To_file_attribute_name(void);
T6 r193conforms_to(T193* C,T0* a1);
void r193print(T0* a1);
void r193_58Pmake_from_element(T193* C,T0* a1,T0* a2);
void r193execute(T193* C);
T6 r193is_to_directory_executable(T193* C);
T0* r193twin(T193* C);
extern T0*oBC193File_attribute_name;
extern int fBC193File_attribute_name;
T0* r193File_attribute_name(void);
T6 r193is_executable(T193* C);
T6 r336is_closed(T336* C);
void r336old_close(T336* C);
void r336open_read(T336* C);
T6 r336se_assigned_from(T0* a1);
void r336print_on(T336* C,T0* a1);
void r336old_read_character(T336* C);
T6 r336old_end_of_file(T336* C);
void r336out_in_tagged_out_memory(T336* C);
void r336read_character(T336* C);
void r336close(T336* C);
void r336make(T336* C,T0* a1);
T6 r336conforms_to(T336* C,T0* a1);
void r336connect_to(T336* C,T0* a1);
void r336read_string(T336* C,T2 a1);
T0* r336twin(T336* C);
void r336old_open_read(T336* C);
void r185make_from_element(T185* C,T0* a1,T0* a2);
extern T0*oBC185Start_target_attribute_name;
extern int fBC185Start_target_attribute_name;
T0* r185Start_target_attribute_name(void);
extern T0*oBC185Reuse_variables_attribute_name;
extern int fBC185Reuse_variables_attribute_name;
T0* r185Reuse_variables_attribute_name(void);
T0* r185attribute_value(T185* C,T0* a1,T0* a2);
T6 r185se_assigned_from(T0* a1);
T6 r185is_filename_executable(T185* C);
void r185print_on(T185* C,T0* a1);
void r185out_in_tagged_out_memory(T185* C);
extern T0*oBC17Exceptions;
T6 r185uc_boolean_value(T185* C,T0* a1,T0* a2);
T6 r185is_target_executable(T185* C);
T0* r185True_attribute_value(void);
T0* r185uc_attribute_value(T185* C,T0* a1,T0* a2);
T6 r185conforms_to(T185* C,T0* a1);
void r185print(T0* a1);
void r185_58Pmake_from_element(T185* C,T0* a1,T0* a2);
extern T0*oBC185Filename_attribute_name;
extern int fBC185Filename_attribute_name;
T0* r185Filename_attribute_name(void);
void r185execute(T185* C);
T6 r185has_uc_attribute(T0* a1,T0* a2);
T0* r185False_attribute_value(void);
T0* r185twin(T185* C);
T6 r185is_executable(T185* C);
void r142make_from_element(T142* C,T0* a1,T0* a2);
T0* r142attribute_value(T142* C,T0* a1,T0* a2);
T6 r142se_assigned_from(T0* a1);
void r142print_on(T142* C,T0* a1);
void r142out_in_tagged_out_memory(T142* C);
T6 r142conforms_to(T142* C,T0* a1);
void r142print(T0* a1);
void r142_58Pmake_from_element(T142* C,T0* a1,T0* a2);
extern T0*oBC142Executable_attribute_name;
extern int fBC142Executable_attribute_name;
T0* r142Executable_attribute_name(void);
void r142execute(T142* C);
T0* r142twin(T142* C);
void r142execute_shell(T0* a1);
T6 r142is_executable(T142* C);
void r306disconnect(T306* C);
T6 r306se_assigned_from(T0* a1);
void r306print_on(T306* C,T0* a1);
void r306out_in_tagged_out_memory(T306* C);
void r306read_character(T306* C);
T6 r306conforms_to(T306* C,T0* a1);
T6 r306end_of_input(T306* C);
void r306connect_to(T306* C,T0* a1);
T3 r306last_character(T306* C);
T0* r306twin(T306* C);
T6 r331is_closed(T331* C);
void r331old_close(T331* C);
T6 r331se_assigned_from(T0* a1);
void r331print_on(T331* C,T0* a1);
void r331out_in_tagged_out_memory(T331* C);
void r331old_open_write(T331* C);
void r331close(T331* C);
void r331make(T331* C,T0* a1);
void r331old_put_string(T331* C,T0* a1);
T6 r331conforms_to(T331* C,T0* a1);
T0* r331twin(T331* C);
void r331open_write(T331* C);
void r183make_from_element(T183* C,T0* a1,T0* a2);
T6 r183se_assigned_from(T0* a1);
void r183print_on(T183* C,T0* a1);
T0* r183clone(T0* a1);
extern T0*oBC183Config_filename_attribute_name;
extern int fBC183Config_filename_attribute_name;
T0* r183Config_filename_attribute_name(void);
void r183out_in_tagged_out_memory(T183* C);
T0* r183uc_attribute_value(T183* C,T0* a1,T0* a2);
T6 r183conforms_to(T183* C,T0* a1);
void r183print(T0* a1);
void r183_58Pmake_from_element(T183* C,T0* a1,T0* a2);
void r183execute(T183* C);
T6 r183has_uc_attribute(T0* a1,T0* a2);
T0* r183twin(T183* C);
void r183execute_shell(T0* a1);
T6 r183is_executable(T183* C);
void r195make_from_element(T195* C,T0* a1,T0* a2);
T0* r195attribute_value(T195* C,T0* a1,T0* a2);
T0* r195file_system(void);
T6 r195se_assigned_from(T0* a1);
void r195print_on(T195* C,T0* a1);
void r195out_in_tagged_out_memory(T195* C);
T6 r195is_to_file_executable(T195* C);
extern T0*oBC195To_directory_attribute_name;
extern int fBC195To_directory_attribute_name;
T0* r195To_directory_attribute_name(void);
extern T0*oBC195To_file_attribute_name;
extern int fBC195To_file_attribute_name;
T0* r195To_file_attribute_name(void);
T6 r195conforms_to(T195* C,T0* a1);
void r195print(T0* a1);
void r195_58Pmake_from_element(T195* C,T0* a1,T0* a2);
void r195execute(T195* C);
T6 r195is_to_directory_executable(T195* C);
T0* r195twin(T195* C);
extern T0*oBC195File_attribute_name;
extern int fBC195File_attribute_name;
T0* r195File_attribute_name(void);
T6 r195is_executable(T195* C);
T0* r60attribute_value_by_name(T60* C,T0* a1);
void r60add_attributes(T60* C,T0* a1);
T6 r60se_assigned_from(T0* a1);
void r60print_on(T60* C,T0* a1);
void r60add_attribute(T60* C,T0* a1);
void r60out_in_tagged_out_memory(T60* C);
void r60make(T60* C,T0* a1);
T0* r60children_by_name(T60* C,T0* a1);
T6 r60conforms_to(T60* C,T0* a1);
void r60make_attribute_handler(T60* C);
extern T0*oBC19Empty_string;
extern int fBC19Empty_string;
T0* r60Empty_string(void);
T0* r60twin(T60* C);
void r60make_composite(T60* C);
T6 r60has_attribute(T60* C,T0* a1);
T0* r91pathname_from_file_system(T91* C,T0* a1,T0* a2);
T0* r91current_working_directory(T91* C);
void r91cd(T91* C,T0* a1);
T6 r91se_assigned_from(T0* a1);
T6 r91is_directory_readable(T0* a1);
void r91print_on(T91* C,T0* a1);
T0* r91clone(T0* a1);
T0* r91dirname(T0* a1);
void r91delete_file(T0* a1);
void r91out_in_tagged_out_memory(T91* C);
void r91set_current_working_directory(T91* C,T0* a1);
T0* r91cwd(T91* C);
T6 r91same_type(T91* C,T0* a1);
T6 r91is_file_readable(T0* a1);
T0* r91tmp_file(void);
T6 r91conforms_to(T91* C,T0* a1);
void r91copy_file(T0* a1,T0* a2);
T0* r91string_to_pathname(T0* a1);
void r91rename_file(T0* a1,T0* a2);
extern T0*oBC91root_directory;
T6 r91is_root_directory(T0* a1);
T0* r91pathname_to_string(T0* a1);
T0* r91twin(T91* C);
T0* r91basename(T0* a1);
T0* r91canonical_pathname(T0* a1);
T0* r91pathname(T0* a1,T0* a2);
T0* r91tmp_directory(void);
T2 r376new_capacity(T2 a1);
void r376copy(T376* C,T0* a1);
T6 r376extendible(T376* C,T2 a1);
void r376remove_traversing_cursor(T376* C,T0* a1);
void r376move_all_cursors_after(T376* C);
void r376add_traversing_cursor(T376* C,T0* a1);
T6 r376se_assigned_from(T0* a1);
void r376print_on(T376* C,T0* a1);
T0* r376clone(T0* a1);
void r376out_in_tagged_out_memory(T376* C);
T6 r376cursor_before(T0* a1);
void r376ds_arrayed_list_make(T376* C,T2 a1);
T6 r376cursor_after(T0* a1);
T6 r376conforms_to(T376* C,T0* a1);
void r376resize(T376* C,T2 a1);
void r376make_from_bilinear(T376* C,T0* a1);
T0* r376twin(T376* C);
void r376force_last(T376* C,T0* a1);
T0* r376new_cursor(T376* C);
void r376put_last(T376* C,T0* a1);
T6 r376cursor_off(T0* a1);
void r197make_from_element(T197* C,T0* a1,T0* a2);
T6 r197se_assigned_from(T0* a1);
void r197print_on(T197* C,T0* a1);
void r197out_in_tagged_out_memory(T197* C);
extern T0*oBC21Execution_environment;
T0* r197uc_attribute_value(T197* C,T0* a1,T0* a2);
extern T0*oBC197Value_attribute_name;
extern int fBC197Value_attribute_name;
T0* r197Value_attribute_name(void);
T6 r197conforms_to(T197* C,T0* a1);
void r197print(T0* a1);
void r197_58Pmake_from_element(T197* C,T0* a1,T0* a2);
void r197execute(T197* C);
T0* r197Name_attribute_name(void);
T6 r197has_uc_attribute(T0* a1,T0* a2);
T0* r197twin(T197* C);
T6 r197is_executable(T197* C);
extern T0*oBC136Clean_attribute_name;
extern int fBC136Clean_attribute_name;
T0* r136Clean_attribute_name(void);
extern T0*oBC136System_attribute_name;
extern int fBC136System_attribute_name;
T0* r136System_attribute_name(void);
extern T0*oBC136Finish_freezing_attribute_name;
extern int fBC136Finish_freezing_attribute_name;
T0* r136Finish_freezing_attribute_name(void);
void r136make_from_element(T136* C,T0* a1,T0* a2);
T6 r136is_cleanable(T136* C);
extern T0*oBC136Ace_attribute_name;
extern int fBC136Ace_attribute_name;
T0* r136Ace_attribute_name(void);
T0* r136file_system(void);
T6 r136se_assigned_from(T0* a1);
void r136print_on(T136* C,T0* a1);
T0* r136clone(T0* a1);
void r136out_in_tagged_out_memory(T136* C);
T6 r136uc_boolean_value(T136* C,T0* a1,T0* a2);
void r136execute_clean(T136* C);
void r136execute_compile(T136* C);
T0* r136True_attribute_value(void);
extern T0*oBC136Finalize_attribute_name;
extern int fBC136Finalize_attribute_name;
T0* r136Finalize_attribute_name(void);
T0* r136uc_attribute_value(T136* C,T0* a1,T0* a2);
T6 r136conforms_to(T136* C,T0* a1);
void r136print(T0* a1);
void r136_58Pmake_from_element(T136* C,T0* a1,T0* a2);
T6 r136is_compilable(T136* C);
void r136execute(T136* C);
T6 r136has_uc_attribute(T0* a1,T0* a2);
T0* r136uc_attribute_value_or_default(T136* C,T0* a1,T0* a2,T0* a3);
T0* r136False_attribute_value(void);
T0* r136attribute_value_or_default(T136* C,T0* a1,T0* a2,T0* a3);
T0* r136twin(T136* C);
void r136execute_shell(T0* a1);
T6 r136is_executable(T136* C);
void r191make_from_element(T191* C,T0* a1,T0* a2);
T6 r191is_directory_executable(T191* C);
T0* r191attribute_value(T191* C,T0* a1,T0* a2);
T0* r191file_system(void);
T6 r191se_assigned_from(T0* a1);
void r191print_on(T191* C,T0* a1);
void r191out_in_tagged_out_memory(T191* C);
T6 r191is_file_executable(T191* C);
T6 r191conforms_to(T191* C,T0* a1);
void r191print(T0* a1);
void r191_58Pmake_from_element(T191* C,T0* a1,T0* a2);
void r191execute(T191* C);
T0* r191twin(T191* C);
extern T0*oBC191File_attribute_name;
extern int fBC191File_attribute_name;
T0* r191File_attribute_name(void);
extern T0*oBC191Directory_attribute_name;
extern int fBC191Directory_attribute_name;
T0* r191Directory_attribute_name(void);
T6 r191is_executable(T191* C);
extern T0*oBC81utils;
T2 r81item_code(T81* C,T2 a1);
T6 r81se_assigned_from(T0* a1);
void r81print_on(T81* C,T0* a1);
void r81out_in_tagged_out_memory(T81* C);
void r81make(T81* C);
void r81insert(T81* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r81add_to_storage_count(T81* C,T2 a1);
void r81remove(T81* C,T2 a1,T2 a2);
void r81find_slice_position(T81* C,T2 a1,T2 a2);
void r81insert_code(T81* C,T2 a1,T2 a2);
T6 r81conforms_to(T81* C,T0* a1);
extern T6 oBC81optimize_access;
void r81storage_move(T81* C,T2 a1,T2 a2,T2 a3);
T0* r81twin(T81* C);
T2 r81storage_slice_count(T81* C);
void r81find_position(T81* C,T2 a1);
T0* r80create_representation(T80* C);
T6 r80se_assigned_from(T0* a1);
void r80print_on(T80* C,T0* a1);
void r80out_in_tagged_out_memory(T80* C);
T6 r80conforms_to(T80* C,T0* a1);
T0* r80twin(T80* C);
void r146make_from_element(T146* C,T0* a1,T0* a2);
T6 r146se_assigned_from(T0* a1);
void r146print_on(T146* C,T0* a1);
void r146out_in_tagged_out_memory(T146* C);
T0* r146uc_attribute_value(T146* C,T0* a1,T0* a2);
extern T0*oBC146Value_attribute_name;
extern int fBC146Value_attribute_name;
T0* r146Value_attribute_name(void);
T6 r146conforms_to(T146* C,T0* a1);
void r146_58Pmake_from_element(T146* C,T0* a1,T0* a2);
T0* r146Name_attribute_name(void);
T6 r146has_uc_attribute(T0* a1,T0* a2);
T0* r146twin(T146* C);
T6 r146is_executable(T146* C);
void r144make_from_element(T144* C,T0* a1,T0* a2);
T6 r144se_assigned_from(T0* a1);
void r144print_on(T144* C,T0* a1);
T0* r144clone(T0* a1);
void r144out_in_tagged_out_memory(T144* C);
T0* r144uc_attribute_value(T144* C,T0* a1,T0* a2);
T6 r144conforms_to(T144* C,T0* a1);
void r144print(T0* a1);
void r144_58Pmake_from_element(T144* C,T0* a1,T0* a2);
extern T0*oBC144Executable_attribute_name;
extern int fBC144Executable_attribute_name;
T0* r144Executable_attribute_name(void);
void r144execute(T144* C);
T6 r144has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC144Source_filename_attribute_name;
extern int fBC144Source_filename_attribute_name;
T0* r144Source_filename_attribute_name(void);
T0* r144twin(T144* C);
void r144execute_shell(T0* a1);
T6 r144is_executable(T144* C);
void r28calculate_depend_order(T28* C,T0* a1);
void r28build(T28* C);
extern T0*oBC28Parser_factory;
extern int fBC28Parser_factory;
T0* r28Parser_factory(void);
void r28build_target(T28* C,T0* a1);
T0* r28file_system(void);
T6 r28se_assigned_from(T0* a1);
void r28print_on(T28* C,T0* a1);
extern T0*oBC19Target_element_name;
extern int fBC19Target_element_name;
T0* r28Target_element_name(void);
void r28load(T28* C,T0* a1);
void r28out_in_tagged_out_memory(T28* C);
extern T0*oBC19Description_element_name;
extern int fBC19Description_element_name;
T0* r28Description_element_name(void);
extern T0*oBC19Default_attribute_name;
extern int fBC19Default_attribute_name;
T0* r28Default_attribute_name(void);
T0* r28target_with_name(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
void r28print(T0* a1);
void r28make_with_filename(T28* C,T0* a1,T0* a2);
void r28execute_target(T28* C,T0* a1,T6 a2);
void r28reset(T28* C);
T0* r28twin(T28* C);
extern T0*oBC19Default_build_filename;
extern int fBC19Default_build_filename;
T0* r28Default_build_filename(void);
T0* r25out(T25* C);
void r25copy(T25* C,T0* a1);
T0* r25substring(T25* C,T2 a1,T2 a2);
T2 r25count(T25* C);
T2 r25item_code(T25* C,T2 a1);
T6 r25is_whitespace(T2 a1);
void r25remove_between(T25* C,T2 a1,T2 a2);
T6 r25is_equal(T25* C,T0* a1);
T66 r25item(T25* C,T2 a1);
T6 r25se_assigned_from(T0* a1);
void r25print_on(T25* C,T0* a1);
void r25make_from_string(T25* C,T0* a1);
T2 r25index_of(T25* C,T66 a1,T2 a2);
void r25out_in_tagged_out_memory(T25* C);
void r25make(T25* C,T2 a1);
void r25append_string(T25* C,T0* a1);
void r25head(T25* C,T2 a1);
T6 r25conforms_to(T25* C,T0* a1);
void r25append_ucc_code(T25* C,T2 a1);
void r25right_adjust(T25* C);
T6 r25empty(T25* C);
T0* r25twin(T25* C);
T2 r25three_way_comparison(T25* C,T0* a1);
void r25left_adjust(T25* C);
extern T0*oBC25i_settings;
void r25tail(T25* C,T2 a1);
extern T0*oBC176Output_filename_attribute_name;
extern int fBC176Output_filename_attribute_name;
T0* r176Output_filename_attribute_name(void);
void r176make_from_element(T176* C,T0* a1,T0* a2);
T6 r176se_assigned_from(T0* a1);
void r176print_on(T176* C,T0* a1);
T0* r176clone(T0* a1);
extern T0*oBC176Define_element_name;
extern int fBC176Define_element_name;
T0* r176Define_element_name(void);
void r176out_in_tagged_out_memory(T176* C);
void r176make(T176* C,T0* a1);
T0* r176uc_attribute_value(T176* C,T0* a1,T0* a2);
void r176_59Pmake(T176* C,T0* a1);
T6 r176conforms_to(T176* C,T0* a1);
void r176print(T0* a1);
void r176_58Pmake_from_element(T176* C,T0* a1,T0* a2);
void r176execute(T176* C);
T6 r176has_uc_attribute(T0* a1,T0* a2);
T0* r176Name_attribute_name(void);
T0* r176twin(T176* C);
void r176execute_shell(T0* a1);
T6 r176is_executable(T176* C);
extern T0*oBC176Input_filename_attribute_name;
extern int fBC176Input_filename_attribute_name;
T0* r176Input_filename_attribute_name(void);
T6 r370se_assigned_from(T0* a1);
void r370print_on(T370* C,T0* a1);
void r370out_in_tagged_out_memory(T370* C);
T6 r370conforms_to(T370* C,T0* a1);
T0* r370twin(T370* C);
void r296fill(T296* C);
void r296compact_left(T296* C);
T2 r296count(T296* C);
void r296set_position(T296* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC295lower;
extern int fBC295lower;
T2 r296lower(void);
T6 r296se_assigned_from(T0* a1);
void r296print_on(T296* C,T0* a1);
void r296out_in_tagged_out_memory(T296* C);
extern T0*oBC249STRING_BUFFER_;
T6 r296conforms_to(T296* C,T0* a1);
void r296resize(T296* C);
void r296make_with_size(T296* C,T0* a1,T2 a2);
T0* r296twin(T296* C);
void r296set_file(T296* C,T0* a1);
extern T0*oBC250INPUT_STREAM_;
void r296flush(T296* C);
T0* r322current_working_directory(T322* C);
T6 r322se_assigned_from(T0* a1);
void r322print_on(T322* C,T0* a1);
T0* r322clone(T0* a1);
T6 r322is_windows(T322* C);
void r322out_in_tagged_out_memory(T322* C);
void r322make(T322* C);
void r322old_put_string(T0* a1);
T6 r322conforms_to(T322* C,T0* a1);
T6 r322is_unix(T322* C);
T0* r322twin(T322* C);
T0* r326current_working_directory(T326* C);
T6 r326se_assigned_from(T0* a1);
void r326print_on(T326* C,T0* a1);
T0* r326clone(T0* a1);
T6 r326is_windows(T326* C);
void r326out_in_tagged_out_memory(T326* C);
void r326make(T326* C);
void r326old_put_string(T0* a1);
T6 r326conforms_to(T326* C,T0* a1);
T6 r326is_unix(T326* C);
T0* r326twin(T326* C);
extern T0*oBC19Echo_task_name;
extern int fBC19Echo_task_name;
T0* r42Echo_task_name(void);
extern T0*oBC42Dir_attribute_name;
extern int fBC42Dir_attribute_name;
T0* r42Dir_attribute_name(void);
extern T0*oBC19Delete_task_name;
extern int fBC19Delete_task_name;
T0* r42Delete_task_name(void);
T0* r42dependencies(T42* C);
extern T0*oBC19Set_task_name;
extern int fBC19Set_task_name;
T0* r42Set_task_name(void);
extern T0*oBC19Ise_task_name;
extern int fBC19Ise_task_name;
T0* r42Ise_task_name(void);
extern T0*oBC19Exec_task_name;
extern int fBC19Exec_task_name;
T0* r42Exec_task_name(void);
extern T0*oBC42Unless_attribute_name;
extern int fBC42Unless_attribute_name;
T0* r42Unless_attribute_name(void);
T0* r42dependent_targets(T42* C);
extern T0*oBC42If_attribute_name;
extern int fBC42If_attribute_name;
T0* r42If_attribute_name(void);
extern T0*oBC19Mkdir_task_name;
extern int fBC19Mkdir_task_name;
T0* r42Mkdir_task_name(void);
T0* r42file_system(void);
extern T0*oBC19Setenv_task_name;
extern int fBC19Setenv_task_name;
T0* r42Setenv_task_name(void);
T6 r42has_dependencies(T42* C);
T6 r42se_assigned_from(T0* a1);
void r42print_on(T42* C,T0* a1);
extern T0*oBC42Depend_attribute_name;
extern int fBC42Depend_attribute_name;
T0* r42Depend_attribute_name(void);
T0* r42clone(T0* a1);
extern T0*oBC19Geant_task_name;
extern int fBC19Geant_task_name;
T0* r42Geant_task_name(void);
void r42out_in_tagged_out_memory(T42* C);
T0* r42Description_element_name(void);
extern T0*oBC19Hact_task_name;
extern int fBC19Hact_task_name;
T0* r42Hact_task_name(void);
void r42make(T42* C,T0* a1,T0* a2);
extern T0*oBC19Gexace_task_name;
extern int fBC19Gexace_task_name;
T0* r42Gexace_task_name(void);
T6 r42boolean_condition_value(T42* C,T0* a1);
extern T0*oBC19Gelex_task_name;
extern int fBC19Gelex_task_name;
T0* r42Gelex_task_name(void);
extern T0*oBC19Unset_task_name;
extern int fBC19Unset_task_name;
T0* r42Unset_task_name(void);
extern T0*oBC19Se_task_name;
extern int fBC19Se_task_name;
T0* r42Se_task_name(void);
T6 r42conforms_to(T42* C,T0* a1);
void r42print(T0* a1);
T0* r42string_tokens(T0* a1,T3 a2);
extern T0*oBC19Getest_task_name;
extern int fBC19Getest_task_name;
T0* r42Getest_task_name(void);
void r42show_dependent_targets(T0* a1);
extern T0*oBC19Copy_task_name;
extern int fBC19Copy_task_name;
T0* r42Copy_task_name(void);
void r42execute(T42* C);
T0* r42Name_attribute_name(void);
extern T0*oBC19Lcc_task_name;
extern int fBC19Lcc_task_name;
T0* r42Lcc_task_name(void);
extern T0*oBC19Xslt_task_name;
extern int fBC19Xslt_task_name;
T0* r42Xslt_task_name(void);
extern T0*oBC19Gepp_task_name;
extern int fBC19Gepp_task_name;
T0* r42Gepp_task_name(void);
T0* r42twin(T42* C);
extern T0*oBC19Move_task_name;
extern int fBC19Move_task_name;
T0* r42Move_task_name(void);
extern T0*oBC19Geyacc_task_name;
extern int fBC19Geyacc_task_name;
T0* r42Geyacc_task_name(void);
extern T0*oBC19Ve_task_name;
extern int fBC19Ve_task_name;
T0* r42Ve_task_name(void);
extern T0*oBC140Clean_attribute_name;
extern int fBC140Clean_attribute_name;
T0* r140Clean_attribute_name(void);
void r140make_from_element(T140* C,T0* a1,T0* a2);
T6 r140is_cleanable(T140* C);
T0* r140file_system(void);
T6 r140se_assigned_from(T0* a1);
void r140print_on(T140* C,T0* a1);
T0* r140clone(T0* a1);
extern T0*oBC140Esd_attribute_name;
extern int fBC140Esd_attribute_name;
T0* r140Esd_attribute_name(void);
void r140out_in_tagged_out_memory(T140* C);
T6 r140uc_boolean_value(T140* C,T0* a1,T0* a2);
void r140execute_clean(T140* C);
T0* r140True_attribute_value(void);
T0* r140uc_attribute_value(T140* C,T0* a1,T0* a2);
T6 r140conforms_to(T140* C,T0* a1);
void r140print(T0* a1);
void r140_58Pmake_from_element(T140* C,T0* a1,T0* a2);
T6 r140is_compilable(T140* C);
void r140execute(T140* C);
T6 r140has_uc_attribute(T0* a1,T0* a2);
T0* r140uc_attribute_value_or_default(T140* C,T0* a1,T0* a2,T0* a3);
T0* r140False_attribute_value(void);
extern T0*oBC140Recursive_attribute_name;
extern int fBC140Recursive_attribute_name;
T0* r140Recursive_attribute_name(void);
T0* r140attribute_value_or_default(T140* C,T0* a1,T0* a2,T0* a3);
T0* r140twin(T140* C);
void r140execute_shell(T0* a1);
T6 r140is_executable(T140* C);
T6 r82se_assigned_from(T0* a1);
void r82print_on(T82* C,T0* a1);
void r82out_in_tagged_out_memory(T82* C);
void r82make(T82* C);
void r82insert(T82* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r82remove(T82* C,T2 a1,T2 a2);
void r82insert_code(T82* C,T2 a1,T2 a2);
void r82move(T82* C,T2 a1,T2 a2,T2 a3);
T6 r82conforms_to(T82* C,T0* a1);
void r82storage_ensure_capacity(T82* C,T2 a1);
T0* r82twin(T82* C);
void r187make_from_element(T187* C,T0* a1,T0* a2);
T0* r187attribute_value(T187* C,T0* a1,T0* a2);
T6 r187se_assigned_from(T0* a1);
void r187print_on(T187* C,T0* a1);
void r187out_in_tagged_out_memory(T187* C);
T6 r187conforms_to(T187* C,T0* a1);
void r187print(T0* a1);
void r187_58Pmake_from_element(T187* C,T0* a1,T0* a2);
extern T0*oBC187Message_attribute_name;
extern int fBC187Message_attribute_name;
T0* r187Message_attribute_name(void);
T0* r187twin(T187* C);
void r275yy_do_action(T275* C,T2 a1);
extern T0*oBC276yytable_template;
extern int fBC276yytable_template;
T0* r275yytable_template(void);
T0* r275empty_ucstring(void);
void r275make_parser_skeleton(T275* C);
T2 r275yy_at_beginning_of_line(T275* C);
void r275fatal_error(T0* a1);
T0* r275yytype1(T0* a1);
T0* r275yytype2(T0* a1);
T0* r275yytype3(T0* a1);
T0* r275yytype4(T0* a1);
void r275handle_found_text(T275* C);
void r275parse(T275* C);
void r275set_input_buffer(T275* C,T0* a1);
T2 r275yy_translate(T275* C,T2 a1);
extern T0*oBC277yy_ec_template;
extern int fBC277yy_ec_template;
T0* r275yy_ec_template(void);
void r275yy_execute_action(T275* C,T2 a1);
extern T0*oBC276yytranslate_template;
extern int fBC276yytranslate_template;
T0* r275yytranslate_template(void);
void r275clear_stacks(T275* C);
extern T0*oBC277yy_def_template;
extern int fBC277yy_def_template;
T0* r275yy_def_template(void);
T3 r275text_item(T275* C,T2 a1);
void r275yy_load_input_buffer(T275* C);
extern T66 oBC276uc_collon;
extern int fBC276uc_collon;
T66 r275uc_collon(void);
extern T0*oBC276yyr1_template;
extern int fBC276yyr1_template;
T0* r275yyr1_template(void);
void r275make_with_buffer(T275* C,T0* a1);
T2 r275yy_null_trans_state(T275* C,T2 a1);
extern T0*oBC277yy_accept_template;
extern int fBC277yy_accept_template;
T0* r275yy_accept_template(void);
void r275read_token(T275* C);
extern T0*oBC276yyr2_template;
extern int fBC276yyr2_template;
T0* r275yyr2_template(void);
T2 r275yy_previous_state(T275* C);
extern T0*oBC276yypgoto_template;
extern int fBC276yypgoto_template;
T0* r275yypgoto_template(void);
void r275yy_refill_input_buffer(T275* C);
T0* r275yy_fixed_array(T0* a1);
T6 r275conforms_to(T275* C,T0* a1);
extern T0*oBC277yy_meta_template;
extern int fBC277yy_meta_template;
T0* r275yy_meta_template(void);
extern T0*oBC277yy_base_template;
extern int fBC277yy_base_template;
T0* r275yy_base_template(void);
T0* r275twin(T275* C);
T0* r275clone(T0* a1);
T0* r275new_file_buffer(T0* a1);
void r275yy_initialize(T275* C);
void r275reset(T275* C);
void r275parse_from_file_name(T275* C,T0* a1);
T0* r275text(T275* C);
void r275out_in_tagged_out_memory(T275* C);
extern T0*oBC277yy_nxt_template;
extern int fBC277yy_nxt_template;
T0* r275yy_nxt_template(void);
void r275parse_from_stream(T275* C,T0* a1);
void r275yy_set_line_column(T275* C);
void r275yy_build_parser_tables(T275* C);
T0* r275split_name_and_prefix(T0* a1);
void r275report_error(T275* C,T0* a1);
extern T0*oBC276yydefact_template;
extern int fBC276yydefact_template;
T0* r275yydefact_template(void);
extern T0*oBC277yy_chk_template;
extern int fBC277yy_chk_template;
T0* r275yy_chk_template(void);
extern T0*oBC276yycheck_template;
extern int fBC276yycheck_template;
T0* r275yycheck_template(void);
void r275make(T275* C);
T0* r275yyfixed_array(T0* a1);
void r275yy_clear_all(T275* C);
extern T0*oBC276yydefgoto_template;
extern int fBC276yydefgoto_template;
T0* r275yydefgoto_template(void);
void r275yy_set_content(T275* C,T0* a1);
extern T0*oBC276yypact_template;
extern int fBC276yypact_template;
T0* r275yypact_template(void);
void r275set_start_condition(T275* C,T2 a1);
T6 r275se_assigned_from(T0* a1);
void r275yy_build_tables(T275* C);
void r275print_on(T275* C,T0* a1);
extern T0*oBC172Meta_ecs_attribute_name;
extern int fBC172Meta_ecs_attribute_name;
T0* r172Meta_ecs_attribute_name(void);
extern T0*oBC172Output_filename_attribute_name;
extern int fBC172Output_filename_attribute_name;
T0* r172Output_filename_attribute_name(void);
extern T0*oBC172Size_attribute_name;
extern int fBC172Size_attribute_name;
T0* r172Size_attribute_name(void);
void r172make_from_element(T172* C,T0* a1,T0* a2);
extern T0*oBC172Ecs_attribute_name;
extern int fBC172Ecs_attribute_name;
T0* r172Ecs_attribute_name(void);
T6 r172se_assigned_from(T0* a1);
void r172print_on(T172* C,T0* a1);
T0* r172clone(T0* a1);
void r172out_in_tagged_out_memory(T172* C);
T6 r172uc_boolean_value(T172* C,T0* a1,T0* a2);
void r172make(T172* C,T0* a1);
T0* r172True_attribute_value(void);
T0* r172uc_attribute_value(T172* C,T0* a1,T0* a2);
extern T0*oBC172Case_insensitive_attribute_name;
extern int fBC172Case_insensitive_attribute_name;
T0* r172Case_insensitive_attribute_name(void);
void r172_59Pmake(T172* C,T0* a1);
extern T0*oBC172No_default_attribute_name;
extern int fBC172No_default_attribute_name;
T0* r172No_default_attribute_name(void);
T6 r172conforms_to(T172* C,T0* a1);
void r172print(T0* a1);
void r172_58Pmake_from_element(T172* C,T0* a1,T0* a2);
extern T0*oBC172Backup_attribute_name;
extern int fBC172Backup_attribute_name;
T0* r172Backup_attribute_name(void);
extern T0*oBC172No_warn_attribute_name;
extern int fBC172No_warn_attribute_name;
T0* r172No_warn_attribute_name(void);
void r172execute(T172* C);
T6 r172has_uc_attribute(T0* a1,T0* a2);
T0* r172False_attribute_value(void);
extern T0*oBC172Separate_actions_attribute_name;
extern int fBC172Separate_actions_attribute_name;
T0* r172Separate_actions_attribute_name(void);
T0* r172twin(T172* C);
void r172execute_shell(T0* a1);
T6 r172is_executable(T172* C);
extern T0*oBC172Input_filename_attribute_name;
extern int fBC172Input_filename_attribute_name;
T0* r172Input_filename_attribute_name(void);
extern T0*oBC172Full_attribute_name;
extern int fBC172Full_attribute_name;
T0* r172Full_attribute_name(void);
extern T0*oBC245stack;
extern int fBC245stack;
T0* r245stack(void);
void r245on_content(T0* a1);
T6 r245se_assigned_from(T0* a1);
void r245print_on(T245* C,T0* a1);
T0* r245clone(T0* a1);
void r245out_in_tagged_out_memory(T245* C);
void r245on_start_tag(T245* C,T0* a1,T0* a2,T0* a3);
void r245make_from_implementation(T245* C,T0* a1);
T6 r245conforms_to(T245* C,T0* a1);
T0* r245twin(T245* C);
void r391copy(T391* C,T0* a1);
void r391append_name(T391* C,T0* a1);
T6 r391se_assigned_from(T0* a1);
void r391print_on(T391* C,T0* a1);
T0* r391clone(T0* a1);
void r391out_in_tagged_out_memory(T391* C);
T6 r391is_parent(T391* C,T2 a1);
void r391make(T391* C);
void r391set_canonical(T391* C);
T6 r391conforms_to(T391* C,T0* a1);
T0* r391twin(T391* C);
T6 r391is_current(T391* C,T2 a1);
T6 r48se_assigned_from(T0* a1);
void r48print_on(T48* C,T0* a1);
void r48out_in_tagged_out_memory(T48* C);
T6 r48conforms_to(T48* C,T0* a1);
T0* r48twin(T48* C);
void r48put_character(T3 a1);
void r48put_string(T0* a1);
T0* r97expanded_variable_value(T97* C,T0* a1);
T0* r97variable_value(T97* C,T0* a1);
T6 r97se_assigned_from(T0* a1);
void r97print_on(T97* C,T0* a1);
T0* r97clone(T0* a1);
void r97out_in_tagged_out_memory(T97* C);
void r97make(T97* C);
extern T0*oBC20Commandline_variables;
extern int fBC20Commandline_variables;
T0* r97Commandline_variables(void);
T6 r97conforms_to(T97* C,T0* a1);
T0* r97interpreted_string(T97* C,T0* a1);
T0* r97twin(T97* C);
T6 r97has_variable(T97* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r319command_arguments(void);
T6 r319se_assigned_from(T0* a1);
void r319print_on(T319* C,T0* a1);
void r319out_in_tagged_out_memory(T319* C);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319twin(T319* C);
T0* r319argument(T2 a1);
T6 r267se_assigned_from(T0* a1);
void r267print_on(T267* C,T0* a1);
void r267out_in_tagged_out_memory(T267* C);
void r267make(T267* C);
T6 r267conforms_to(T267* C,T0* a1);
T0* r267new_eiffel_event_parser_imp(T267* C);
T0* r267twin(T267* C);
void r150make_from_element(T150* C,T0* a1,T0* a2);
extern T0*oBC150Xace_filename_attribute_name;
extern int fBC150Xace_filename_attribute_name;
T0* r150Xace_filename_attribute_name(void);
extern T0*oBC150Command_attribute_name;
extern int fBC150Command_attribute_name;
T0* r150Command_attribute_name(void);
T6 r150se_assigned_from(T0* a1);
void r150print_on(T150* C,T0* a1);
T0* r150clone(T0* a1);
extern T0*oBC150Define_element_name;
extern int fBC150Define_element_name;
T0* r150Define_element_name(void);
extern T0*oBC150Compile_attribute_name;
extern int fBC150Compile_attribute_name;
T0* r150Compile_attribute_name(void);
extern T0*oBC150Options_attribute_name;
extern int fBC150Options_attribute_name;
T0* r150Options_attribute_name(void);
void r150out_in_tagged_out_memory(T150* C);
T6 r150uc_boolean_value(T150* C,T0* a1,T0* a2);
void r150make(T150* C,T0* a1);
T0* r150True_attribute_value(void);
T0* r150uc_attribute_value(T150* C,T0* a1,T0* a2);
extern T0*oBC150Value_attribute_name;
extern int fBC150Value_attribute_name;
T0* r150Value_attribute_name(void);
void r150_59Pmake(T150* C,T0* a1);
T6 r150conforms_to(T150* C,T0* a1);
void r150print(T0* a1);
void r150_58Pmake_from_element(T150* C,T0* a1,T0* a2);
void r150execute(T150* C);
T6 r150has_uc_attribute(T0* a1,T0* a2);
T0* r150Name_attribute_name(void);
T0* r150uc_attribute_value_or_default(T150* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC150Command_options_attribute_name;
extern int fBC150Command_options_attribute_name;
T0* r150Command_options_attribute_name(void);
T0* r150False_attribute_value(void);
T0* r150attribute_value_or_default(T150* C,T0* a1,T0* a2,T0* a3);
T0* r150twin(T150* C);
T6 r150uc_boolean_value_or_default(T150* C,T0* a1,T0* a2,T6 a3);
void r150execute_shell(T0* a1);
T6 r150is_executable(T150* C);
void r148make_from_element(T148* C,T0* a1,T0* a2);
T6 r148se_assigned_from(T0* a1);
void r148print_on(T148* C,T0* a1);
void r148out_in_tagged_out_memory(T148* C);
T0* r148uc_attribute_value(T148* C,T0* a1,T0* a2);
T6 r148conforms_to(T148* C,T0* a1);
void r148_58Pmake_from_element(T148* C,T0* a1,T0* a2);
T6 r148has_uc_attribute(T0* a1,T0* a2);
T0* r148Name_attribute_name(void);
T0* r148twin(T148* C);
T6 r148is_executable(T148* C);
T6 r304is_closed(T304* C);
void r304old_close(T304* C);
void r304old_delete(T0* a1);
T6 r304file_exists(T0* a1);
void r304rename_to(T0* a1,T0* a2);
void r304open_read(T304* C);
T6 r304se_assigned_from(T0* a1);
void r304print_on(T304* C,T0* a1);
void r304old_read_character(T304* C);
T6 r304old_end_of_file(T304* C);
void r304out_in_tagged_out_memory(T304* C);
void r304close(T304* C);
void r304make(T304* C,T0* a1);
T6 r304conforms_to(T304* C,T0* a1);
void r304copy_file(T304* C,T0* a1);
void r304connect_to(T304* C,T0* a1);
extern T308 oBC1file_tools;
void r304delete(T304* C);
T0* r304twin(T304* C);
void r304change_name(T304* C,T0* a1);
T6 r304is_readable(T304* C);
T6 r339is_closed(T339* C);
T6 r339old_end_of_input(T339* C);
void r339open_read(T339* C);
T0* r339file_system(void);
T6 r339se_assigned_from(T0* a1);
void r339print_on(T339* C,T0* a1);
T0* r339clone(T0* a1);
void r339create_directory(T339* C);
void r339out_in_tagged_out_memory(T339* C);
T6 r339is_open_read(T339* C);
void r339close(T339* C);
void r339recursive_create_directory(T339* C);
void r339read_entry(T339* C);
T6 r339conforms_to(T339* C,T0* a1);
void r339delete(T339* C);
T0* r339twin(T339* C);
void r339recursive_delete(T339* C);
T6 r339is_readable(T339* C);
extern T0*oBC308tfr1;
T6 r308is_readable(T0* a1);
void r16read_command_line(T16* C);
T6 r16se_assigned_from(T0* a1);
void r16print_on(T16* C,T0* a1);
T0* r16clone(T0* a1);
void r16out_in_tagged_out_memory(T16* C);
void r16report_usage_message(T16* C);
T0* r16Arguments(void);
T0* r16Commandline_variables(void);
void r16make(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16print(T0* a1);
void r16report_version_number(T16* C);
T0* r16twin(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
void r16report_usage_error(T16* C);
extern T0*oBC298error;
extern int fBC298error;
T0* r298error(void);
T6 r298se_assigned_from(T0* a1);
void r298print_on(T298* C,T0* a1);
void r298out_in_tagged_out_memory(T298* C);
extern T0*oBC298input;
extern int fBC298input;
T0* r298input(void);
extern T0*oBC298output;
extern int fBC298output;
T0* r298output(void);
T6 r298conforms_to(T298* C,T0* a1);
T0* r298twin(T298* C);
T6 r92se_assigned_from(T0* a1);
void r92print_on(T92* C,T0* a1);
void r92out_in_tagged_out_memory(T92* C);
T6 r92conforms_to(T92* C,T0* a1);
T0* r92twin(T92* C);
void r44raise(T44* C,T0* a1);
T6 r44se_assigned_from(T0* a1);
void r44print_on(T44* C,T0* a1);
void r44out_in_tagged_out_memory(T44* C);
T6 r44conforms_to(T44* C,T0* a1);
T0* r44twin(T44* C);
extern T0*oBC45developer_exception_name_memory;
void r45raise(T45* C,T0* a1);
T6 r45se_assigned_from(T0* a1);
void r45print_on(T45* C,T0* a1);
void r45out_in_tagged_out_memory(T45* C);
T6 r45conforms_to(T45* C,T0* a1);
T0* r45twin(T45* C);
T6 r46se_assigned_from(T0* a1);
void r46print_on(T46* C,T0* a1);
T6 r46conforms_to(T46* C,T0* a1);
T0* r46twin(T46* C);
T6 r51se_assigned_from(T0* a1);
void r51print_on(T51* C,T0* a1);
void r51out_in_tagged_out_memory(T51* C);
T6 r51conforms_to(T51* C,T0* a1);
T0* r51twin(T51* C);
T6 r392se_assigned_from(T0* a1);
void r392print_on(T392* C,T0* a1);
void r392out_in_tagged_out_memory(T392* C);
T6 r392conforms_to(T392* C,T0* a1);
T0* r392twin(T392* C);
T6 r93se_assigned_from(T0* a1);
void r93print_on(T93* C,T0* a1);
void r93out_in_tagged_out_memory(T93* C);
T0* r93to_hexadecimal(T2 a1,T6 a2);
T6 r93conforms_to(T93* C,T0* a1);
T3 r93to_character(T2 a1);
T0* r93twin(T93* C);
void r93append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC78factory;
extern int fBC78factory;
T0* r78factory(void);
T6 r78se_assigned_from(T0* a1);
void r78print_on(T78* C,T0* a1);
void r78out_in_tagged_out_memory(T78* C);
T6 r78conforms_to(T78* C,T0* a1);
T0* r78twin(T78* C);
T6 r394se_assigned_from(T0* a1);
void r394print_on(T394* C,T0* a1);
void r394out_in_tagged_out_memory(T394* C);
T6 r394conforms_to(T394* C,T0* a1);
T0* r394twin(T394* C);
T6 r43se_assigned_from(T0* a1);
void r43print_on(T43* C,T0* a1);
T6 r43conforms_to(T43* C,T0* a1);
T0* r43twin(T43* C);
void r330execute_command_line(T0* a1);
T2 r330execute_command(T0* a1);
T6 r393se_assigned_from(T0* a1);
void r393print_on(T393* C,T0* a1);
void r393out_in_tagged_out_memory(T393* C);
T6 r393conforms_to(T393* C,T0* a1);
T0* r393twin(T393* C);
T6 r273se_assigned_from(T0* a1);
void r273print_on(T273* C,T0* a1);
void r273out_in_tagged_out_memory(T273* C);
T6 r273conforms_to(T273* C,T0* a1);
T0* r273twin(T273* C);
T0* r347name(T0* a1);
T0* r347make_file_open_read(T0* a1);
T6 r347se_assigned_from(T0* a1);
void r347print_on(T347* C,T0* a1);
void r347out_in_tagged_out_memory(T347* C);
void r347close(T0* a1);
T6 r347conforms_to(T347* C,T0* a1);
T6 r347end_of_input(T0* a1);
T2 r347read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r347twin(T347* C);
void r89connect_to_current_working_directory(T89* C);
void r89disconnect(T89* C);
T6 r89remove_directory(T0* a1);
extern T0*oBC89last_entry;
void r89change_current_working_directory(T89* C,T0* a1);
void r89read_entry(T89* C);
void r89connect_to(T89* C,T0* a1);
T6 r89create_new_directory(T0* a1);
T6 r94se_assigned_from(T0* a1);
void r94print_on(T94* C,T0* a1);
void r94out_in_tagged_out_memory(T94* C);
T6 r94is_integer(T0* a1);
T0* r94make(T2 a1);
T6 r94conforms_to(T94* C,T0* a1);
T0* r94twin(T94* C);
T0* r66out(T66* C);
extern T0*oBC69Platform;
T3 r66as_character(T66* C);
T6 r66_px_60(T66* C,T66 a1);
T6 r66_px_62(T66* C,T66 a1);
T0* r66as_hexadecimal(T66* C);
T3 r66code_to_character(T2 a1);
extern T0*oBC68INTEGER_;
T0* r98variable_value(T0* a1);
T6 r98se_assigned_from(T0* a1);
void r98print_on(T98* C,T0* a1);
void r98out_in_tagged_out_memory(T98* C);
T0* r98get_environment_variable(T0* a1);
T6 r98conforms_to(T98* C,T0* a1);
T0* r98twin(T98* C);
T2 r344nr_of_following_octets(T3 a1);
T6 r344se_assigned_from(T0* a1);
void r344print_on(T344* C,T0* a1);
void r344read_code(T344* C,T0* a1,T2 a2);
void r344out_in_tagged_out_memory(T344* C);
void r344put_code(T2 a1,T0* a2,T2 a3);
void r344read_following_octet(T344* C,T0* a1);
T6 r344conforms_to(T344* C,T0* a1);
T3 r344code_to_character(T2 a1);
T2 r344octet_size(T2 a1);
T0* r344twin(T344* C);
extern T0*oBC344specific;
T6 r344is_leading_octet(T3 a1);
T2 r344read_leading_octet(T344* C,T0* a1,T2 a2);
T6 r271se_assigned_from(T0* a1);
void r271print_on(T271* C,T0* a1);
void r271out_in_tagged_out_memory(T271* C);
T6 r271conforms_to(T271* C,T0* a1);
T0* r271twin(T271* C);
T6 r50se_assigned_from(T0* a1);
void r50print_on(T50* C,T0* a1);
T6 r50conforms_to(T50* C,T0* a1);
T0* r50twin(T50* C);
T0* r297substring(T0* a1,T2 a2,T2 a3);
T6 r297se_assigned_from(T0* a1);
void r297print_on(T297* C,T0* a1);
void r297out_in_tagged_out_memory(T297* C);
void r297move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r297make(T2 a1);
T6 r297conforms_to(T297* C,T0* a1);
T0* r297resize(T0* a1,T2 a2);
T2 r297copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r297twin(T297* C);
T6 r395se_assigned_from(T0* a1);
void r395print_on(T395* C,T0* a1);
void r395out_in_tagged_out_memory(T395* C);
T6 r395conforms_to(T395* C,T0* a1);
T0* r395twin(T395* C);
T0* r88current_working_directory(T88* C);
T6 r88se_assigned_from(T0* a1);
void r88print_on(T88* C,T0* a1);
T0* r88clone(T0* a1);
T6 r88is_windows(T88* C);
void r88out_in_tagged_out_memory(T88* C);
T6 r88conforms_to(T88* C,T0* a1);
T6 r88is_unix(T88* C);
T0* r88twin(T88* C);
T0* r272new_event_parser_imp(void);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 396
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms139_1033196635a;
extern T7*ms137_661692583;
extern T7*ms16_23340076;
extern T7*ms96_5712;
extern T7*ms28_1962337529;
extern T7*ms299_89510;
extern T7*ms42_205aa;
extern T7*ms140_78495;
extern T7*ms7_241908472;
extern T7*ms200_3506042;
extern T7*ms90_8976;
extern T7*ms42_10;
extern T7*ms141_1169151010a;
extern T7*ms196_16849647;
extern T7*ms141_674647;
extern T7*ms42_1367980604;
extern T7*ms139_10aaaaa;
extern T7*ms139_10aaaa;
extern T7*ms188_16815647;
extern T7*ms137_90108711;
extern T7*ms286_1338477769;
extern T7*ms138_0aa;
extern T7*ms137_10aaaaa;
extern T7*ms42_10aaa;
extern T7*ms344_336971577;
extern T7*ms194_16818147a;
extern T7*ms173_84117997;
extern T7*ms174_1801319434;
extern T7*ms42_205aaa;
extern T7*ms74_14150;
extern T7*ms16_323;
extern T7*ms16_329;
extern T7*ms16_288;
extern T7*ms16_343;
extern T7*ms196_16849647a;
extern T7*ms42_1198723604;
extern T7*ms139_90108711;
extern T7*ms321_1515383187;
extern T7*ms42_118887899;
extern T7*ms139_10a;
extern T7*ms183_247314766;
extern T7*ms184_420615272;
extern T7*ms140_0a;
extern T7*ms139_32a;
extern T7*ms19_247356966;
extern T7*ms200_141612;
extern T7*ms137_1086847256;
extern T7*ms195_2234766;
extern T7*ms19_3301;
extern T7*ms28_1510;
extern T7*ms42_837540926aa;
extern T7*ms19_3294;
extern T7*ms141_10;
extern T7*ms141_46;
extern T7*ms192_420355647a;
extern T7*ms193_2234766;
extern T7*ms19_3496;
extern T7*ms136_0a;
extern T7*ms42_1784507747;
extern T7*ms172_2142980;
extern T7*ms200_140577;
extern T7*ms186_319419904a;
extern T7*ms58_689092889;
extern T7*ms28_10aa;
extern T7*ms137_10;
extern T7*ms42_1145887148;
extern T7*ms137_32;
extern T7*ms186_319419904;
extern T7*ms96_10a;
extern T7*ms58_2048314391;
extern T7*ms96_1749788964;
extern T7*ms141_945839905;
extern T7*ms136_3021;
extern T7*ms96_32a;
extern T7*ms141_10aa;
extern T7*ms42_205a;
extern T7*ms172_82876;
extern T7*ms172_438001;
extern T7*ms143_10;
extern T7*ms200_27872;
extern T7*ms138_3021;
extern T7*ms138_0a;
extern T7*ms42_837540926a;
extern T7*ms42_10aa;
extern T7*ms42_3139;
extern T7*ms142_254031466;
extern T7*ms95_2020550321;
extern T7*ms6_79251;
extern T7*ms42_256a;
extern T7*ms139_10;
extern T7*ms141_9366019;
extern T7*ms137_661958208;
extern T7*ms139_32;
extern T7*ms137_143262;
extern T7*ms42_205;
extern T7*ms19_403021;
extern T7*ms177_16072;
extern T7*ms42_10a;
extern T7*ms145_3294;
extern T7*ms144_1544179189;
extern T7*ms42_256;
extern T7*ms28_1299730420;
extern T7*ms199_53496769;
extern T7*ms19_403144;
extern T7*ms200_10;
extern T7*ms145_10;
extern T7*ms19_402716;
extern T7*ms200_32;
extern T7*ms145_32;
extern T7*ms19_80091;
extern T7*ms28_837540926a;
extern T7*ms200_0a;
extern T7*ms19_80325;
extern T7*ms95_388005040;
extern T7*ms42_627;
extern T7*ms141_1169151010;
extern T7*ms42_392800;
extern T7*ms151_10;
extern T7*ms151_32;
extern T7*ms151_34;
extern T7*ms151_61;
extern T7*ms174_82876;
extern T7*ms97_125;
extern T7*ms137_1139505;
extern T7*ms199_438001;
extern T7*ms139_453255442;
extern T7*ms97_303;
extern T7*ms139_8902a;
extern T7*ms145_5586;
extern T7*ms172_382622;
extern T7*ms7_280756769;
extern T7*ms136_452889;
extern T7*ms150_1979141;
extern T7*ms150_1978575;
extern T7*ms139_2102912007;
extern T7*ms42_451090;
extern T7*ms172_3135;
extern T7*ms139_60094111;
extern T7*ms19_79251;
extern T7*ms16_837540926;
extern T7*ms151_115260364;
extern T7*ms172_267582581;
extern T7*ms151_10a;
extern T7*ms137_47904999;
extern T7*ms19_84639;
extern T7*ms139_1955941869;
extern T7*ms151_32a;
extern T7*ms141_210841101a;
extern T7*ms198_421552197;
extern T7*ms19_90371;
extern T7*ms176_82876;
extern T7*ms190_84225847;
extern T7*ms19_0;
extern T7*ms146_89261;
extern T7*ms42_1784507747a;
extern T7*ms139_179802;
extern T7*ms199_82876;
extern T7*ms151_420622897a;
extern T7*ms191_16016;
extern T7*ms280_195717202;
extern T7*ms176_438001;
extern T7*ms16_1771134706;
extern T7*ms139_16823272;
extern T7*ms176_391651;
extern T7*ms141_3373326;
extern T7*ms145_3367222;
extern T7*ms175_2015752;
extern T7*ms197_89261;
extern T7*ms195_1606898500;
extern T7*ms139_1081376;
extern T7*ms95_3021;
extern T7*ms187_2108041;
extern T7*ms137_272198;
extern T7*ms184_2013612;
extern T7*ms19_676;
extern T7*ms42_112110024;
extern T7*ms19_691;
extern T7*ms139_91038212;
extern T7*ms74_4763922;
extern T7*ms7_1983847;
extern T7*ms391_276;
extern T7*ms42_837540926;
extern T7*ms186_1569122284;
extern T7*ms137_10aaaa;
extern T7*ms172_388005040;
extern T7*ms136_1890742889;
extern T7*ms193_16016;
extern T7*ms192_10a;
extern T7*ms16_184927;
extern T7*ms137_1086847256a;
extern T7*ms137_208286353;
extern T7*ms344_1684857857;
extern T7*ms139_15065;
extern T7*ms141_29512420;
extern T7*ms199_89261;
extern T7*ms42_10aaaa;
extern T7*ms151_1070a;
extern T7*ms91_0;
extern T7*ms173_10;
extern T7*ms173_32;
extern T7*ms200_55455187;
extern T7*ms144_254031466;
extern T7*ms139_16054;
extern T7*ms90_46;
extern T7*ms150_203658589;
extern T7*ms173_0a;
extern T7*ms90_92;
extern T7*ms95_0;
extern T7*ms96_658766397;
extern T7*ms194_7487;
extern T7*ms151_2015137;
extern T7*ms189_49442341;
extern T7*ms28_1404162515a;
extern T7*ms96_674272a;
extern T7*ms28_132132847;
extern T7*ms139_60094111a;
extern T7*ms91_46;
extern T7*ms91_47;
extern T7*ms196_7487;
extern T7*ms28_1404162515;
extern T7*ms151_420622897;
extern T7*ms28_1569122284;
extern T7*ms347_1338085634;
extern T7*ms172_16323;
extern T7*ms86_80516;
extern T7*ms175_10;
extern T7*ms175_32;
extern T7*ms137_10aaa;
extern T7*ms322_447851;
extern T7*ms16_837540926a;
extern T7*ms175_0a;
extern T7*ms195_16016;
extern T7*ms137_208339478;
extern T7*ms137_420927632;
extern T7*ms136_78495;
extern T7*ms136_10030586;
extern T7*ms90_276;
extern T7*ms139_10aaaaaaa;
extern T7*ms172_17711;
extern T7*ms6_18036;
extern T7*ms96_392507;
extern T7*ms177_10;
extern T7*ms172_1801319434;
extern T7*ms177_32;
extern T7*ms19_440193;
extern T7*ms151_2499240;
extern T7*ms177_0a;
extern T7*ms174_2246326;
extern T7*ms173_0aa;
extern T7*ms16_1316598903;
extern T7*ms200_16885647;
extern T7*ms141_2110593349;
extern T7*ms19_440571;
extern T7*ms172_10531885;
extern T7*ms185_199275083;
extern T7*ms23_1479;
extern T7*ms95_0a;
extern T7*ms138_10030586;
extern T7*ms16_80091;
extern T7*ms140_0;
extern T7*ms185_440571;
extern T7*ms150_391651;
extern T7*ms194_7487a;
extern T7*ms136_0;
extern T7*ms184_10;
extern T7*ms96_10;
extern T7*ms139_10aaa;
extern T7*ms96_32;
extern T7*ms19_392331;
extern T7*ms138_0;
extern T7*ms194_16818147;
extern T7*ms28_834968801;
extern T7*ms138_78495;
extern T7*ms139_179802a;
extern T7*ms200_0;
extern T7*ms150_0;
extern T7*ms42_205aaaa;
extern T7*ms151_0;
extern T7*ms190_10;
extern T7*ms19_16036;
extern T7*ms28_803892311;
extern T7*ms19_16072;
extern T7*ms137_179802a;
extern T7*ms137_3367397a;
extern T7*ms19_15731;
extern T7*ms19_16229;
extern T7*ms19_15831;
extern T7*ms137_1933260220a;
extern T7*ms96_16686;
extern T7*ms186_10;
extern T7*ms141_2230607a;
extern T7*ms139_2102912007a;
extern T7*ms19_17091;
extern T7*ms174_448440;
extern T7*ms91_276;
extern T7*ms194_10a;
extern T7*ms175_420625972;
extern T7*ms19_16821;
extern T7*ms391_46;
extern T7*ms192_10;
extern T7*ms140_3200;
extern T7*ms150_884663453;
extern T7*ms137_1819;
extern T7*ms19_18036;
extern T7*ms151_1070;
extern T7*ms173_0;
extern T7*ms28_837540926aaa;
extern T7*ms137_10aa;
extern T7*ms175_0;
extern T7*ms42_1307186427a;
extern T7*ms196_7487a;
extern T7*ms188_10;
extern T7*ms19_18531;
extern T7*ms177_0;
extern T7*ms137_1933260220;
extern T7*ms139_10aa;
extern T7*ms95_254031466;
extern T7*ms194_10;
extern T7*ms286_1338477769a;
extern T7*ms19_1957581;
extern T7*ms137_1560205919;
extern T7*ms141_210841101;
extern T7*ms95_276875365;
extern T7*ms326_447584;
extern T7*ms28_924849867;
extern T7*ms139_15065a;
extern T7*ms196_10;
extern T7*ms95_78495;
extern T7*ms175_32a;
extern T7*ms67_577;
extern T7*ms137_179802;
extern T7*ms96_1979141;
extern T7*ms174_438001;
extern T7*ms1_14150;
extern T7*ms198_10;
extern T7*ms58_915611166;
extern T7*ms173_1642;
extern T7*ms173_1647;
extern T7*ms173_1652;
extern T7*ms173_1702;
extern T7*ms173_1662;
extern T7*ms173_1712;
extern T7*ms198_61;
extern T7*ms173_1667;
extern T7*ms173_1682;
extern T7*ms173_1732;
extern T7*ms173_1752;
extern T7*ms173_1757;
extern T7*ms177_1093;
extern T7*ms139_143262;
extern T7*ms28_180;
extern T7*ms28_10a;
extern T7*ms175_1712;
extern T7*ms96_9895737;
extern T7*ms150_89261;
extern T7*ms175_1737;
extern T7*ms141_10a;
extern T7*ms141_1428018568;
extern T7*ms175_1747;
extern T7*ms175_1757;
extern T7*ms141_276;
extern T7*ms137_8949;
extern T7*ms139_8711;
extern T7*ms141_497;
extern T7*ms19_1228681540;
extern T7*ms137_271606681;
extern T7*ms139_1033196635;
extern T7*ms139_8902;
extern T7*ms185_16016;
extern T7*ms277_1173251759;
extern T7*ms347_0;
extern T7*ms141_1391903168;
extern T7*ms199_281466146;
extern T7*ms28_837540926;
extern T7*ms136_0aa;
extern T7*ms137_10aaaaaa;
extern T7*ms196_10a;
extern T7*ms138_452889;
extern T7*ms175_32aa;
extern T7*ms42_378995502;
extern T7*ms74_5426;
extern T7*ms42_1307186427;
extern T7*ms193_1606898500;
extern T7*ms139_1028251;
extern T7*ms141_2230607;
extern T7*ms173_401657;
extern T7*ms139_16823272a;
extern T7*ms137_3367397;
extern T7*ms137_272198a;
extern T7*ms191_49442341;
extern T7*ms28_10aaa;
extern T7*ms96_1775;
extern T7*ms137_10a;
extern T7*ms139_10aaaaaa;
extern T7*ms150_2173440;
extern T7*ms96_674272;
extern T7*ms137_32a;
extern T7*ms141_1546380197;
extern T7*ms177_16824172;
extern T7*ms28_10;
extern T7*ms28_39;
extern T7*ms74_251;
extern T7*ms16_23342040;
extern T7*ms143_16828097;
extern T7*ms138_16054;
extern T7*ms315_1158552108;
extern T7*ms177_32a;
extern T7*ms140_54423316;
extern T7*ms74_2124547;
extern T7*ms95_109478249;
extern T7*ms192_420355647;
extern T7*ms141_674647a;
extern T7*ms42_768830101;
extern T7*ms16_14036;
extern T7*ms28_837540926aa;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void*se_ma84(int argc,...);
void X49put_character(T0*C,T3 a1);
void X49put_string(T0*C,T0* a1);
void X58execute(T0*C);
T6 X58is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X48put_string(T0*C,T0* a1);
void X306disconnect(T0*C);
T6 X306is_connected(T0*C);
void X306connect_to(T0*C,T0* a1);
T0* X306path(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
void X1print_on(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X290clear_all(T0*C,T0* a1);
T0* X290make(T0*C,T2 a1);
T0* X290resize(T0*C,T0* a1,T2 a2);
void X45raise(T0*C,T0* a1);
T2 X288count(T0*C);
T2 X288item(T0*C,T2 a1);
T2 X288lower(T0*C);
void X289put(T0*C,T0* a1,T2 a2);
T0* X289item(T0*C,T2 a1);
void X289set_all_with(T0*C,T0* a1);
void X289resize(T0*C,T2 a1);
T2 X65item_code(T0*C,T2 a1);
void X65insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X65remove(T0*C,T2 a1,T2 a2);
void X65insert_code(T0*C,T2 a1,T2 a2);
void X294read_character(T0*C);
T6 X294end_of_input(T0*C);
T3 X294last_character(T0*C);
T0* X87string_to_pathname(T0*C,T0* a1);
T0* X316default_message(T0*C);
T6 X88is_windows(T0*C);
T6 X88is_unix(T0*C);
T0* X86pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X86relative_current_directory(T0*C);
T0* X86dirname(T0*C,T0* a1);
T0* X86exe_extension(T0*C);
T0* X86relative_parent_directory(T0*C);
T0* X86pathname(T0*C,T0* a1,T0* a2);
T0* X86canonical_pathname(T0*C,T0* a1);
T0* T274toT273(int source);
T0* T272toT271(int source);
T0* T2toT46(T2 source);
T2 T46toT2(T0* source);

#ifdef __cplusplus
}
#endif
