#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 (Tuesday May 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S184 T184;
typedef struct S559 T559;
typedef struct S291 T291;
typedef struct S831 T831;
typedef struct S687 T687;
typedef struct S472 T472;
typedef struct S507 T507;
typedef int T658;
typedef struct S251 T251;
typedef struct S892 T892;
typedef struct S787 T787;
typedef struct S853 T853;
typedef struct S120 T120;
typedef struct S258 T258;
typedef struct S539 T539;
typedef struct S249 T249;
typedef struct S888 T888;
typedef struct S213 T213;
typedef struct S565 T565;
typedef struct S208 T208;
typedef struct S818 T818;
typedef struct S653 T653;
typedef struct S717 T717;
typedef struct S912 T912;
typedef struct S735 T735;
typedef struct S734 T734;
typedef struct S261 T261;
typedef struct S483 T483;
typedef struct S500 T500;
typedef struct S832 T832;
typedef struct S170 T170;
typedef struct S327 T327;
typedef struct S895 T895;
typedef struct S387 T387;
typedef struct S11 T11;
typedef struct S675 T675;
typedef struct S769 T769;
typedef struct S257 T257;
typedef struct S416 T416;
typedef struct S513 T513;
typedef struct S89 T89;
typedef struct S165 T165;
typedef struct S779 T779;
typedef struct S747 T747;
typedef struct S33 T33;
typedef struct S415 T415;
typedef struct S344 T344;
typedef struct S516 T516;
typedef struct S619 T619;
typedef struct S235 T235;
typedef struct S132 T132;
typedef struct S182 T182;
typedef struct S400 T400;
typedef struct S828 T828;
typedef struct S58 T58;
typedef struct S31 T31;
typedef struct S566 T566;
typedef struct S328 T328;
typedef struct S765 T765;
typedef struct S413 T413;
typedef struct S371 T371;
typedef struct S715 T715;
typedef struct S331 T331;
typedef struct S728 T728;
typedef struct S433 T433;
typedef struct S152 T152;
typedef struct S673 T673;
typedef struct S290 T290;
typedef struct S502 T502;
typedef struct S326 T326;
typedef struct S149 T149;
typedef struct S219 T219;
typedef struct S579 T579;
typedef struct S27 T27;
typedef struct S185 T185;
typedef struct S645 T645;
typedef struct S384 T384;
typedef struct S397 T397;
typedef struct S402 T402;
typedef struct S437 T437;
typedef struct S528 T528;
typedef struct S458 T458;
typedef struct S282 T282;
typedef struct S237 T237;
typedef struct S600 T600;
typedef struct S541 T541;
typedef struct S310 T310;
typedef struct S603 T603;
typedef struct S633 T633;
typedef struct S678 T678;
typedef struct S524 T524;
typedef struct S634 T634;
typedef struct S813 T813;
typedef struct S679 T679;
typedef struct S710 T710;
typedef struct S530 T530;
typedef struct S511 T511;
typedef struct S515 T515;
typedef struct S776 T776;
typedef struct S250 T250;
typedef struct S822 T822;
typedef struct S589 T589;
typedef struct S44 T44;
typedef struct S442 T442;
typedef struct S716 T716;
typedef struct S243 T243;
typedef struct S482 T482;
typedef struct S57 T57;
typedef struct S526 T526;
typedef struct S485 T485;
typedef struct S545 T545;
typedef struct S174 T174;
typedef struct S909 T909;
typedef struct S181 T181;
typedef struct S60 T60;
typedef struct S329 T329;
typedef struct S731 T731;
typedef struct S599 T599;
typedef struct S839 T839;
typedef struct S529 T529;
typedef struct S911 T911;
typedef struct S906 T906;
typedef struct S325 T325;
typedef struct S608 T608;
typedef struct S780 T780;
typedef struct S533 T533;
typedef struct S160 T160;
typedef struct S798 T798;
typedef struct S295 T295;
typedef struct S221 T221;
typedef struct S393 T393;
typedef struct S823 T823;
typedef struct S403 T403;
typedef struct S523 T523;
typedef struct S902 T902;
typedef struct S689 T689;
typedef struct S517 T517;
typedef struct S519 T519;
typedef struct S466 T466;
typedef struct S264 T264;
typedef struct S709 T709;
typedef struct S468 T468;
typedef struct S681 T681;
typedef struct S178 T178;
typedef struct S855 T855;
typedef struct S26 T26;
typedef struct S692 T692;
typedef struct S568 T568;
typedef struct S829 T829;
typedef struct S253 T253;
typedef struct S778 T778;
typedef struct S684 T684;
typedef struct S789 T789;
typedef struct S115 T115;
typedef struct S401 T401;
typedef struct S534 T534;
typedef struct S562 T562;
typedef int T122;
typedef struct S136 T136;
typedef struct S239 T239;
typedef struct S655 T655;
typedef struct S7 T7;
typedef struct S793 T793;
typedef struct S686 T686;
typedef struct S521 T521;
typedef struct S335 T335;
typedef struct S323 T323;
typedef struct S236 T236;
typedef struct S503 T503;
typedef struct S535 T535;
typedef struct S699 T699;
typedef struct S685 T685;
typedef struct S867 T867;
typedef struct S885 T885;
typedef struct S704 T704;
typedef struct S761 T761;
typedef struct S910 T910;
typedef struct S67 T67;
typedef struct S319 T319;
typedef struct S197 T197;
typedef struct S355 T355;
typedef struct S746 T746;
typedef struct S702 T702;
typedef struct S537 T537;
typedef struct S648 T648;
typedef struct S79 T79;
typedef struct S821 T821;
typedef struct S175 T175;
typedef struct S172 T172;
typedef struct S381 T381;
typedef struct S455 T455;
typedef struct S631 T631;
typedef struct S889 T889;
typedef struct S804 T804;
typedef struct S262 T262;
typedef struct S396 T396;
typedef struct S698 T698;
typedef struct S443 T443;
typedef struct S615 T615;
typedef struct S543 T543;
typedef struct S531 T531;
typedef struct S820 T820;
typedef struct S522 T522;
typedef struct S736 T736;
typedef struct S666 T666;
typedef struct S159 T159;
typedef struct S399 T399;
typedef struct S45 T45;
typedef struct S114 T114;
typedef struct S536 T536;
typedef struct S651 T651;
typedef struct S508 T508;
typedef struct S582 T582;
typedef struct S492 T492;
typedef struct S270 T270;
typedef struct S233 T233;
typedef struct S506 T506;
typedef struct S25 T25;
typedef struct S901 T901;
typedef struct S324 T324;
typedef struct S49 T49;
typedef struct S134 T134;
typedef struct S252 T252;
typedef struct S532 T532;
typedef struct S585 T585;
typedef struct S518 T518;
typedef struct S129 T129;
typedef struct S121 T121;
typedef struct S563 T563;
typedef struct S905 T905;
typedef struct S509 T509;
typedef struct S245 T245;
typedef struct S380 T380;
typedef struct S117 T117;
typedef struct S713 T713;
typedef struct S171 T171;
typedef struct S398 T398;
typedef struct S34 T34;
typedef struct S802 T802;
typedef struct S100 T100;
typedef struct S845 T845;
typedef struct S177 T177;
typedef struct S624 T624;
typedef struct S161 T161;
typedef struct S153 T153;
typedef struct S786 T786;
typedef struct S156 T156;
typedef struct S694 T694;
typedef struct S891 T891;
typedef struct S65 T65;
typedef struct S373 T373;
typedef struct S591 T591;
typedef struct S748 T748;
typedef struct S764 T764;
typedef struct S341 T341;
typedef struct S706 T706;
typedef struct S338 T338;
typedef struct S176 T176;
typedef struct S806 T806;
typedef struct S370 T370;
typedef struct S527 T527;
typedef struct S90 T90;
typedef struct S41 T41;
typedef struct S564 T564;
typedef struct S438 T438;
typedef struct S525 T525;
typedef struct S567 T567;
typedef struct S514 T514;
typedef struct S809 T809;
typedef struct S652 T652;
typedef struct S542 T542;
typedef struct S878 T878;
typedef struct S836 T836;
typedef struct S296 T296;
typedef struct S773 T773;
typedef struct S37 T37;
typedef struct S824 T824;
typedef struct S186 T186;
typedef struct S792 T792;
typedef struct S24 T24;
typedef struct S388 T388;
typedef struct S819 T819;
typedef struct S180 T180;
typedef struct S222 T222;
typedef struct S173 T173;
typedef struct S281 T281;
typedef struct S697 T697;
typedef struct S179 T179;
typedef struct S376 T376;
typedef struct S23 T23;
typedef struct S20 T20;
typedef struct S378 T378;
typedef struct S781 T781;
typedef struct S429 T429;
typedef struct S183 T183;
typedef struct S512 T512;
typedef struct S548 T548;
typedef struct S367 T367;
typedef struct S510 T510;
typedef struct S538 T538;

/*C Header Pass 2 :*/
typedef T0**T260;
typedef T0**T505;
typedef T0**T395;
typedef T0**T337;
typedef T6*T255;
typedef T0**T333;
typedef T0**T691;
typedef T0**T683;
typedef T0**T733;
typedef T0**T650;
typedef T0**T66;
typedef T0**T838;
typedef T0**T266;
typedef T0**T584;
typedef T0**T696;
typedef T0**T241;
typedef T0**T767;
typedef T3*T9;
typedef T2*T135;
typedef T0**T547;
typedef T0**T247;
typedef T0**T375;

/*C Header Pass 3 :*/
struct S159{T8 _directory_stream;T8 _current_entry;};
int se_cmpT159(T159 o1,T159 o2);
struct S786{T5 _time_memory;};
int se_cmpT786(T786 o1,T786 o2);

/*C Header Pass 4 :*/
struct S184{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T184 M184;
struct S559{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T559 M559;
struct S291{Tid id;T0* _comparator;};
extern T291 M291;
struct S831{Tid id;};
extern T831 M831;
struct S687{Tid id;T0* _xml_element;T0* _project;T0* _rename_clause;};
extern T687 M687;
struct S472{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T472 M472;
struct S507{Tid id;T2 _exit_code;T0* _project;T0* _executable;T0* _source_filename;};
extern T507 M507;
extern T658 M658;
struct S251{Tid id;T2 _count;T0* _storage;T0* _symbols;};
extern T251 M251;
struct S892{Tid id;T0* _item;T0* _right;};
extern T892 M892;
struct S787{Tid id;T5 _item;};
extern T787 M787;
struct S853{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T853 M853;
struct S120{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T120 M120;
struct S539{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T539 M539;
struct S249{Tid id;T2 _count;T0* _storage;};
extern T249 M249;
struct S888{Tid id;T0* _item;T0* _right;};
extern T888 M888;
struct S213{Tid id;T6 _yyline_used;T0* _states;T0* _yy_accept;T0* _yy_ec;T6 _yyposition_used;T0* _input_filename;T0* _eiffel_header;T6 _bol_needed;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T0* _yy_nxt;T6 _yybacking_up;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _backing_up_count;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T2 _yynb_rules;T2 _yynull_equiv_class;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T2 _yynb_rows;T2 _minimum_symbol;T2 _yyend_of_buffer;T6 _inspect_used;};
extern T213 M213;
struct S565{Tid id;T2 _exit_code;T0* _project;T2 _code;};
extern T565 M565;
struct S208{Tid id;T0* _subject;T2 _subject_start;T2 _subject_end;T2 _match_count;T2 _matched_start;T2 _matched_end;T0* _yy_nxt;T0* _yy_accept;T2 _yynb_rows;};
extern T208 M208;
struct S818{Tid id;T0* _system_id;};
extern T818 M818;
struct S653{Tid id;T6 _push_back_flag;T0* _name;T0* _string_name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T653 M653;
struct S258{Tid id;T2 _item;T0* _right;T0* _left;};
extern T258 M258;
struct S717{Tid id;T0* _first;T0* _second;};
extern T717 M717;
struct S912{Tid id;};
extern T912 M912;
struct S735{Tid id;T0* _next;T0* _prefixes;T0* _local_parts;};
extern T735 M735;
struct S734{Tid id;};
extern T734 M734;
struct S261{Tid id;T0* _transition;T0* _epsilon_transition;T0* _accepted_rule;T2 _id;T6 _in_trail_context;};
extern T261 M261;
struct S500{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T500 M500;
struct S832{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _decl_start_sent;T6 _decl_end_sent;};
extern T832 M832;
struct S170{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T170 M170;
struct S327{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T327 M327;
struct S895{Tid id;T0* _item;T0* _right;T0* _left;};
extern T895 M895;
struct S11{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;T6 _debug_mode;T6 _no_exec;};
extern T11 M11;
struct S675{Tid id;T0* _next;T6 _has_error;T0* _last_error;};
extern T675 M675;
struct S769{Tid id;T2 _count;T0* _first_cell;};
extern T769 M769;
struct S257{Tid id;T260 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T257 M257;
struct S416{Tid id;};
extern T416 M416;
struct S513{Tid id;T2 _exit_code;T0* _project;T6 _verbose;T0* _system_command;T0* _cluster_command;T6 _validate_command;T0* _xace_filename;T0* _output_filename;T0* _defines;};
extern T513 M513;
struct S89{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T89 M89;
struct S165{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T165 M165;
struct S779{Tid id;T0* _parameters;};
extern T779 M779;
struct S747{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;};
extern T747 M747;
struct S33{Tid id;};
extern T33 M33;
struct S415{Tid id;T0* _target;T0* _label;};
extern T415 M415;
struct S344{Tid id;};
extern T344 M344;
struct S516{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T516 M516;
struct S619{Tid id;T0* _name;};
extern T619 M619;
struct S235{Tid id;T135 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T235 M235;
struct S132{Tid id;};
extern T132 M132;
struct S182{Tid id;T0* _xml_element;T0* _project;};
extern T182 M182;
struct S400{Tid id;T0* _parameters;};
extern T400 M400;
struct S828{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T828 M828;
struct S58{Tid id;};
extern T58 M58;
struct S31{Tid id;};
extern T31 M31;
struct S566{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T566 M566;
struct S765{Tid id;};
extern T765 M765;
struct S413{Tid id;T0* _parameters;};
extern T413 M413;
struct S371{Tid id;};
extern T371 M371;
struct S715{Tid id;T0* _table;};
extern T715 M715;
struct S331{Tid id;T333 _storage;T2 _capacity;T2 _upper;};
extern T331 M331;
struct S728{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T728 M728;
struct S433{Tid id;T0* _target;T2 _label;};
extern T433 M433;
struct S152{Tid id;};
extern T152 M152;
struct S673{Tid id;T0* _start;T0* _error;T0* _tree;T0* _last;};
extern T673 M673;
struct S290{Tid id;};
extern T290 M290;
struct S502{Tid id;T505 _storage;T2 _capacity;T2 _upper;};
extern T502 M502;
struct S149{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T149 M149;
struct S219{Tid id;T0* _error_file;T0* _warning_file;T0* _info_file;};
extern T219 M219;
struct S579{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T579 M579;
struct S27{Tid id;T2 _item;};
extern T27 M27;
struct S185{Tid id;T0* _xml_element;T0* _project;T0* _map;};
extern T185 M185;
struct S645{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T645 M645;
struct S384{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T384 M384;
struct S397{Tid id;T0* _parameters;};
extern T397 M397;
struct S402{Tid id;T0* _parameters;};
extern T402 M402;
struct S437{Tid id;};
extern T437 M437;
struct S528{Tid id;T2 _exit_code;T0* _project;T0* _message;};
extern T528 M528;
struct S458{Tid id;};
extern T458 M458;
struct S282{Tid id;T0* _comparator;};
extern T282 M282;
struct S237{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T237 M237;
struct S600{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T600 M600;
struct S541{Tid id;T0* _first;T0* _second;};
extern T541 M541;
struct S310{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T310 M310;
struct S633{Tid id;T0* _original_name;T0* _new_name;};
extern T633 M633;
struct S678{Tid id;T0* _xml_element;T0* _project;T0* _geant_inherit;};
extern T678 M678;
struct S524{Tid id;T2 _exit_code;T0* _project;T0* _filename;T6 _reuse_variables;T0* _start_target_name;};
extern T524 M524;
struct S634{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T634 M634;
struct S813{Tid id;};
extern T813 M813;
struct S679{Tid id;T0* _xml_element;T0* _project;T0* _parent;};
extern T679 M679;
struct S710{Tid id;T0* _next;T0* _document;T0* _last_position_table;T0* _current_node;T0* _current_open_composite;T0* _current_element;T0* _source_parser;};
extern T710 M710;
struct S530{Tid id;T2 _exit_code;T0* _project;T0* _directory;};
extern T530 M530;
struct S511{Tid id;T2 _exit_code;T0* _project;T0* _name;};
extern T511 M511;
struct S515{Tid id;T2 _exit_code;T0* _project;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T515 M515;
struct S776{Tid id;T0* _filename;};
extern T776 M776;
struct S250{Tid id;T247 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T250 M250;
struct S822{Tid id;T0* _name;T0* _items;T3 _type;T3 _repetition;T6 _is_character_data_allowed;};
extern T822 M822;
struct S44{Tid id;T8 _item;};
extern T44 M44;
struct S442{Tid id;T0* _parameters;};
extern T442 M442;
struct S716{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T716 M716;
struct S243{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T243 M243;
struct S482{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T482 M482;
struct S57{Tid id;};
extern T57 M57;
struct S603{Tid id;T0* _name;};
extern T603 M603;
struct S526{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;};
extern T526 M526;
struct S485{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T485 M485;
struct S387{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;T6 _negated;T6 _sort_needed;};
extern T387 M387;
struct S545{Tid id;T547 _storage;T2 _capacity;T2 _upper;};
extern T545 M545;
struct S174{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T174 M174;
struct S909{Tid id;};
extern T909 M909;
struct S181{Tid id;T0* _project;T0* _directory_name;T0* _include_wc_string;T0* _exclude_wc_string;T6 _convert_to_filesystem;T0* _map;T6 _force;T6 _concat;T0* _filename_variable_name;T0* _mapped_filename_variable_name;T0* _include_wildcard;T0* _exclude_wildcard;T0* _filenames;T0* _single_includes;T0* _single_excludes;};
extern T181 M181;
struct S60{Tid id;};
extern T60 M60;
struct S329{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T329 M329;
struct S731{Tid id;T733 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T731 M731;
struct S599{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T599 M599;
struct S839{Tid id;};
extern T839 M839;
struct S529{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T529 M529;
struct S911{Tid id;};
extern T911 M911;
struct S906{Tid id;T0* _parent;T0* _data;};
extern T906 M906;
struct S326{Tid id;T0* _states;T6 _in_trail_context;};
extern T326 M326;
struct S325{Tid id;T0* _text;};
extern T325 M325;
struct S608{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T608 M608;
struct S780{Tid id;T0* _parameters;};
extern T780 M780;
struct S533{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T533 M533;
struct S160{Tid id;T159 _basic_directory;};
extern T160 M160;
struct S798{Tid id;T6 _push_back_flag;T0* _name;T0* _string_name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T798 M798;
struct S295{Tid id;};
extern T295 M295;
struct S221{Tid id;T2 _array_size;T6 _case_insensitive;T2 _characters_count;T6 _equiv_classes_used;T6 _meta_equiv_classes_used;T6 _full_table;T6 _actions_separated;T6 _inspect_used;T6 _reject_used;T6 _line_used;T6 _position_used;T6 _pre_action_used;T6 _post_action_used;T6 _pre_eof_action_used;T6 _post_eof_action_used;T0* _input_filename;T0* _start_conditions;T0* _rules;T0* _eof_rules;T0* _equiv_classes;T6 _bol_needed;T6 _variable_trail_context;T0* _eiffel_code;T0* _eiffel_header;};
extern T221 M221;
struct S393{Tid id;T395 _storage;T2 _capacity;T2 _upper;};
extern T393 M393;
struct S823{Tid id;T0* _first;T2 _count;T0* _second;T0* _tail;};
extern T823 M823;
struct S403{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T403 M403;
struct S523{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T523 M523;
struct S902{Tid id;T2 _count;T0* _first_cell;};
extern T902 M902;
struct S689{Tid id;T691 _storage;T2 _capacity;T2 _upper;};
extern T689 M689;
struct S517{Tid id;T2 _exit_code;T0* _project;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _tokens_filename;T0* _output_filename;T0* _input_filename;};
extern T517 M517;
struct S519{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;T0* _to_directory;T0* _fileset;T6 _force;};
extern T519 M519;
struct S466{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T466 M466;
struct S264{Tid id;T266 _storage;T2 _capacity;T2 _upper;};
extern T264 M264;
struct S709{Tid id;T0* _parent;T0* _content;};
extern T709 M709;
struct S468{Tid id;T0* _name;};
extern T468 M468;
struct S681{Tid id;T683 _storage;T2 _capacity;T2 _upper;};
extern T681 M681;
struct S178{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T178 M178;
struct S855{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T855 M855;
struct S26{Tid id;T6 _item;};
extern T26 M26;
struct S692{Tid id;};
extern T692 M692;
struct S568{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T568 M568;
struct S829{Tid id;T3 _item;T0* _right;};
extern T829 M829;
struct S253{Tid id;T255 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T253 M253;
struct S778{Tid id;T2 _code;};
extern T778 M778;
struct S684{Tid id;};
extern T684 M684;
struct S789{Tid id;T2 _item;};
extern T789 M789;
struct S115{Tid id;};
extern T115 M115;
struct S401{Tid id;T0* _parameters;};
extern T401 M401;
struct S534{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;T6 _force;};
extern T534 M534;
struct S562{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T562 M562;
extern T122 M122;
struct S136{Tid id;T66 _storage;T2 _capacity;T2 _upper;};
extern T136 M136;
struct S239{Tid id;T241 _storage;T2 _capacity;T2 _upper;};
extern T239 M239;
struct S328{Tid id;T2 _id;T0* _name;T0* _patterns;T0* _bol_patterns;T6 _is_exclusive;};
extern T328 M328;
struct S655{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T655 M655;
struct S793{Tid id;T0* _name;T0* _string_name;T0* _path;T8 _output_stream;};
extern T793 M793;
struct S686{Tid id;T0* _xml_element;T0* _project;T0* _redefine_clause;};
extern T686 M686;
struct S521{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T521 M521;
struct S335{Tid id;T337 _storage;T2 _capacity;T2 _upper;};
extern T335 M335;
struct S323{Tid id;T2 _item;T0* _right;};
extern T323 M323;
struct S236{Tid id;T2 _id;T0* _action;T0* _pattern;T2 _line_nb;T2 _trail_count;T2 _head_count;T2 _line_count;T2 _column_count;T6 _is_useful;T6 _has_trail_context;};
extern T236 M236;
struct S503{Tid id;};
extern T503 M503;
struct S535{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T535 M535;
struct S699{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _string_name;T0* _entry_buffer;T159 _basic_directory;};
extern T699 M699;
struct S685{Tid id;T0* _xml_element;T0* _project;T0* _select_clause;};
extern T685 M685;
struct S867{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T867 M867;
struct S885{Tid id;T6 _after;T6 _before;T0* _container;T0* _current_cell;T0* _next_cursor;};
extern T885 M885;
struct S704{Tid id;};
extern T704 M704;
struct S761{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T761 M761;
struct S910{Tid id;};
extern T910 M910;
struct S319{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T319 M319;
struct S197{Tid id;T0* _item;T0* _right;};
extern T197 M197;
struct S355{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T355 M355;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S702{Tid id;};
extern T702 M702;
struct S537{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T537 M537;
struct S648{Tid id;T650 _storage;T2 _capacity;T2 _upper;};
extern T648 M648;
struct S79{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;};
extern T79 M79;
struct S821{Tid id;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T821 M821;
struct S175{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _fish;T0* _clean;};
extern T175 M175;
struct S172{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T172 M172;
struct S381{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T381 M381;
struct S483{Tid id;T0* _filename;T0* _mapped_filename;};
extern T483 M483;
struct S455{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T455 M455;
struct S631{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T631 M631;
struct S889{Tid id;T0* _item;T0* _right;T0* _left;};
extern T889 M889;
struct S804{Tid id;T0* _item;T0* _right;};
extern T804 M804;
struct S262{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T262 M262;
struct S396{Tid id;T0* _parameters;};
extern T396 M396;
struct S698{Tid id;};
extern T698 M698;
struct S443{Tid id;};
extern T443 M443;
struct S615{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T615 M615;
struct S543{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _fixed_array_;T0* _internal_cursor;};
extern T543 M543;
struct S531{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T531 M531;
struct S820{Tid id;T0* _name;T3 _type;T3 _value;T0* _default_value;T6 _is_list_type;};
extern T820 M820;
struct S522{Tid id;T2 _exit_code;T0* _project;T0* _config_filename;T0* _compile;T0* _defines;};
extern T522 M522;
struct S736{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T0* _callbacks;T0* _dtd_callbacks;T2 _string_mode;T0* _last_error_description;T6 _stand_alone;T0* _entities;T0* _pe_entities;T6 _in_external_dtd;T0* _scanner;T0* _scanners;T2 _last_token;T0* _last_value;};
extern T736 M736;
struct S666{Tid id;T0* _parent;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _root_element;};
extern T666 M666;
extern T159 M159;
struct S399{Tid id;T0* _parameters;};
extern T399 M399;
struct S45{Tid id;};
extern T45 M45;
struct S114{Tid id;T0* _item;T0* _right;};
extern T114 M114;
struct S536{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;};
extern T536 M536;
struct S651{Tid id;T0* _xml_element;T0* _project;};
extern T651 M651;
struct S508{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T508 M508;
struct S582{Tid id;T584 _storage;T2 _capacity;T2 _upper;};
extern T582 M582;
struct S492{Tid id;};
extern T492 M492;
struct S270{Tid id;T0* _target;};
extern T270 M270;
struct S233{Tid id;T2 _id;T0* _states;T0* _accepted_rules;T0* _accepted_head_rules;T0* _transitions;T2 _code;};
extern T233 M233;
struct S506{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T506 M506;
struct S25{Tid id;T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _options;T0* _targets;T0* _selected_targets;T6 _build_successful;T0* _inherit_clause;T6 _old_inherit;T0* _default_target_name;T0* _current_target;};
extern T25 M25;
struct S901{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T901 M901;
struct S324{Tid id;};
extern T324 M324;
struct S49{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T49 M49;
struct S134{Tid id;T135 _storage;T2 _capacity;T2 _upper;};
extern T134 M134;
struct S252{Tid id;T2 _count;T0* _storage;};
extern T252 M252;
struct S532{Tid id;T2 _exit_code;T0* _project;T0* _directory;T0* _file;T0* _fileset;};
extern T532 M532;
struct S585{Tid id;};
extern T585 M585;
struct S518{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T518 M518;
struct S129{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T129 M129;
struct S121{Tid id;};
extern T121 M121;
struct S563{Tid id;T2 _exit_code;T0* _project;T0* _source_filename;T0* _target_filename;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;T0* _fileset;};
extern T563 M563;
struct S905{Tid id;T0* _parent;T0* _target;T0* _data;};
extern T905 M905;
struct S509{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T509 M509;
struct S245{Tid id;T247 _storage;T2 _capacity;T2 _upper;};
extern T245 M245;
struct S380{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T380 M380;
struct S117{Tid id;T159 _basic_directory;T0* _name;};
extern T117 M117;
struct S713{Tid id;};
extern T713 M713;
struct S171{Tid id;T2 _exit_code;T0* _project;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T171 M171;
struct S746{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _is_external;T0* _value;T6 _in_use;};
extern T746 M746;
struct S398{Tid id;T0* _parameters;};
extern T398 M398;
struct S34{Tid id;T159 _basic_directory;T0* _name;};
extern T34 M34;
struct S802{Tid id;T0* _source;T2 _byte_index;T2 _column;T2 _row;};
extern T802 M802;
struct S100{Tid id;T0* _parent;T0* _name;T0* _ns_prefix;T0* _value;};
extern T100 M100;
struct S845{Tid id;};
extern T845 M845;
struct S177{Tid id;T2 _exit_code;T0* _project;T0* _esd_filename;T0* _clean;T6 _recursive_clean;T0* _tuned_system;T0* _tuning_level;};
extern T177 M177;
struct S624{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T624 M624;
struct S161{Tid id;T159 _basic_directory;};
extern T161 M161;
struct S67{Tid id;T0* _xml_element;T0* _project;T0* _name;T0* _precursor_target;T0* _redefining_target;T6 _is_executed;};
extern T67 M67;
struct S153{Tid id;};
extern T153 M153;
extern T786 M786;
struct S156{Tid id;T9 _storage;T2 _count;T2 _byte_count;T2 _byte_capacity;T2 _last_byte_index_input;T2 _last_byte_index_result;};
extern T156 M156;
struct S694{Tid id;T696 _storage;T2 _capacity;T2 _upper;};
extern T694 M694;
struct S891{Tid id;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _last_input_file_opened;T0* _last_error;T0* _filename;T0* _source;T0* _last_value;T0* _character_entity;T0* _start_conditions;T6 _is_external;T0* _value;T6 _in_use;T6 _pre_sent;T6 _post_sent;};
extern T891 M891;
struct S65{Tid id;T66 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T65 M65;
struct S373{Tid id;T375 _storage;T2 _capacity;T2 _upper;};
extern T373 M373;
struct S591{Tid id;T0* _project;T0* _parents;};
extern T591 M591;
struct S748{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T748 M748;
struct S764{Tid id;T767 _storage;T2 _capacity;T2 _upper;};
extern T764 M764;
struct S341{Tid id;};
extern T341 M341;
struct S706{Tid id;};
extern T706 M706;
struct S338{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T338 M338;
struct S176{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T176 M176;
struct S806{Tid id;T0* _last_string;T6 _is_utf16;T6 _is_msb_first;T6 _is_detected;T0* _utf_queue;T0* _impl;};
extern T806 M806;
struct S370{Tid id;T241 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T370 M370;
struct S527{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T527 M527;
struct S90{Tid id;T0* _parent;T0* _ns_prefix;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;T0* _namespaces;T0* _name;T2 _count;};
extern T90 M90;
struct S41{Tid id;T3 _item;};
extern T41 M41;
struct S564{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T564 M564;
struct S438{Tid id;T0* _comparator;};
extern T438 M438;
struct S525{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T525 M525;
struct S567{Tid id;T2 _exit_code;T0* _project;T0* _parent;};
extern T567 M567;
struct S589{Tid id;T0* _project;T0* _parent_project;T0* _renames;T0* _redefines;T0* _selects;T0* _unchanged_targets;T0* _renamed_targets;T0* _redefined_targets;};
extern T589 M589;
struct S514{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T514 M514;
struct S809{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;};
extern T809 M809;
struct S652{Tid id;T0* _last_project_element;T0* _build_filename;T0* _xml_parser;T0* _tree_pipe;T0* _variables;T0* _options;};
extern T652 M652;
struct S542{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;T2 _processor;T0* _format;T0* _indent;T0* _extdirs;T0* _classpath;};
extern T542 M542;
struct S878{Tid id;T0* _item;T0* _right;T0* _left;};
extern T878 M878;
struct S836{Tid id;T838 _storage;T2 _capacity;T2 _upper;};
extern T836 M836;
struct S296{Tid id;};
extern T296 M296;
struct S773{Tid id;T2 _count;T0* _first_cell;};
extern T773 M773;
struct S37{Tid id;T159 _basic_directory;};
extern T37 M37;
struct S824{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _fixed_item_array_;};
extern T824 M824;
struct S186{Tid id;T0* _project;T0* _type;T0* _source_pattern;T0* _target_pattern;T0* _map;};
extern T186 M186;
struct S792{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T792 M792;
struct S24{Tid id;T0* _build_filename;T0* _project_element;};
extern T24 M24;
struct S388{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _fixed_item_array_;T0* _fixed_key_array_;};
extern T388 M388;
struct S819{Tid id;T0* _equality_tester;T2 _count;T0* _last_cell;T0* _internal_cursor;T0* _first_cell;};
extern T819 M819;
struct S180{Tid id;T2 _exit_code;T0* _project;T0* _command_line;T6 _accept_errors;T0* _fileset;};
extern T180 M180;
struct S222{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _fixed_array_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _description;T0* _error_handler;T2 _line_nb;T2 _rule_line_nb;T0* _last_value;T0* _character_classes;T0* _name_definitions;T0* _last_string;T0* _pending_rules;T0* _start_condition_stack;T0* _action_factory;T0* _rule;T6 _in_trail_context;T6 _has_trail_context;T2 _head_line;T2 _head_column;T2 _head_count;T2 _trail_count;};
extern T222 M222;
struct S173{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _finish_freezing;T0* _clean;};
extern T173 M173;
struct S281{Tid id;};
extern T281 M281;
struct S697{Tid id;};
extern T697 M697;
struct S179{Tid id;T0* _xml_element;T0* _project;T0* _fileset;};
extern T179 M179;
struct S376{Tid id;T0* _parameters;};
extern T376 M376;
struct S23{Tid id;T6 _verbose;T6 _debug_mode;T6 _no_exec;};
extern T23 M23;
struct S20{Tid id;T0* _variables;};
extern T20 M20;
struct S378{Tid id;T0* _program_name;};
extern T378 M378;
struct S781{Tid id;T0* _command;T2 _exit_code;T6 _is_system_code;T0* _string_command;};
extern T781 M781;
struct S429{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T429 M429;
struct S183{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T183 M183;
struct S512{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T512 M512;
struct S548{Tid id;};
extern T548 M548;
struct S367{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T367 M367;
struct S510{Tid id;T0* _xml_element;T0* _project;T0* _command;};
extern T510 M510;
struct S538{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T538 M538;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_fstat.h) is automatically
  included when some external "SmallEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_mtime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_sprintf.h) is automatically
  included when the external "SmallEiffel" basic_sprintf feature is used.
*/

void basic_sprintf_double(EIF_CHARACTER* b, int f, double d);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_time.h) is automatically
  included when some external "SmallEiffel" basic_time_* feature is
  used (i.e. in live code).
*/
#include <time.h>

#ifdef WIN32
#include <windows.h>
#endif

#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, EIF_INTEGER mon,
			     EIF_INTEGER mday, EIF_INTEGER hour,
			     EIF_INTEGER min,  EIF_INTEGER sec);
void basic_time_add_second(EIF_DOUBLE *t, int s);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_putenv.h) is automatically
  included when the basic_putenv feature is used (ie. in live code).
*/

void basic_putenv(EIF_POINTER variable, EIF_POINTER value);
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T0* r6out(T6 C);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
void r6out_in_tagged_out_memory(T6 C);
T6 r6_px_or(T6 C,T6 a1);
void r6fill_tagged_out_memory(T6 C);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
void r3fill_tagged_out_memory(T3 C);
T2 r3value(T3 C);
T6 r3_px_60(T3 C,T3 a1);
T6 r3_px_62(T3 C,T3 a1);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T9 oBC5sprintf_buffer;
extern int fBC5sprintf_buffer;
T9 r5sprintf_buffer(void);
void r5append_in_format(T5 C,T0* a1,T2 a2);
void r260set_all_with(T260 C,T0* a1,T2 a2);
void r260copy_from(T260 C,T260 a1,T2 a2);
void r505clear_all(T505 C,T2 a1);
T505 r505realloc(T505 C,T2 a1,T2 a2);
void r505set_all_with(T505 C,T0* a1,T2 a2);
void r505clear(T505 C,T2 a1,T2 a2);
void r505copy_from(T505 C,T505 a1,T2 a2);
void r395clear_all(T395 C,T2 a1);
T395 r395realloc(T395 C,T2 a1,T2 a2);
void r395set_all_with(T395 C,T0* a1,T2 a2);
void r395clear(T395 C,T2 a1,T2 a2);
void r395copy_from(T395 C,T395 a1,T2 a2);
void r337clear_all(T337 C,T2 a1);
T337 r337realloc(T337 C,T2 a1,T2 a2);
void r337set_all_with(T337 C,T0* a1,T2 a2);
void r337clear(T337 C,T2 a1,T2 a2);
void r337copy_from(T337 C,T337 a1,T2 a2);
void r255set_all_with(T255 C,T6 a1,T2 a2);
void r255copy_from(T255 C,T255 a1,T2 a2);
void r333clear_all(T333 C,T2 a1);
T333 r333realloc(T333 C,T2 a1,T2 a2);
void r333set_all_with(T333 C,T0* a1,T2 a2);
void r333clear(T333 C,T2 a1,T2 a2);
void r333copy_from(T333 C,T333 a1,T2 a2);
void r691clear_all(T691 C,T2 a1);
T691 r691realloc(T691 C,T2 a1,T2 a2);
void r691set_all_with(T691 C,T0* a1,T2 a2);
void r691clear(T691 C,T2 a1,T2 a2);
void r691copy_from(T691 C,T691 a1,T2 a2);
void r683clear_all(T683 C,T2 a1);
T683 r683realloc(T683 C,T2 a1,T2 a2);
void r683set_all_with(T683 C,T0* a1,T2 a2);
void r683clear(T683 C,T2 a1,T2 a2);
void r683copy_from(T683 C,T683 a1,T2 a2);
void r733copy_from(T733 C,T733 a1,T2 a2);
void r650clear_all(T650 C,T2 a1);
T650 r650realloc(T650 C,T2 a1,T2 a2);
void r650set_all_with(T650 C,T0* a1,T2 a2);
void r650clear(T650 C,T2 a1,T2 a2);
void r650copy_from(T650 C,T650 a1,T2 a2);
void r66clear_all(T66 C,T2 a1);
T66 r66realloc(T66 C,T2 a1,T2 a2);
void r66move(T66 C,T2 a1,T2 a2,T2 a3);
void r66set_all_with(T66 C,T0* a1,T2 a2);
void r66clear(T66 C,T2 a1,T2 a2);
void r66copy_from(T66 C,T66 a1,T2 a2);
void r838clear_all(T838 C,T2 a1);
T838 r838realloc(T838 C,T2 a1,T2 a2);
void r838set_all_with(T838 C,T0* a1,T2 a2);
void r838clear(T838 C,T2 a1,T2 a2);
void r838copy_from(T838 C,T838 a1,T2 a2);
void r266clear_all(T266 C,T2 a1);
T266 r266realloc(T266 C,T2 a1,T2 a2);
void r266set_all_with(T266 C,T0* a1,T2 a2);
void r266clear(T266 C,T2 a1,T2 a2);
void r266copy_from(T266 C,T266 a1,T2 a2);
void r584clear_all(T584 C,T2 a1);
T584 r584realloc(T584 C,T2 a1,T2 a2);
void r584set_all_with(T584 C,T0* a1,T2 a2);
void r584clear(T584 C,T2 a1,T2 a2);
void r584copy_from(T584 C,T584 a1,T2 a2);
void r696clear_all(T696 C,T2 a1);
T696 r696realloc(T696 C,T2 a1,T2 a2);
void r696set_all_with(T696 C,T0* a1,T2 a2);
void r696clear(T696 C,T2 a1,T2 a2);
void r696copy_from(T696 C,T696 a1,T2 a2);
void r241clear_all(T241 C,T2 a1);
T241 r241realloc(T241 C,T2 a1,T2 a2);
void r241set_all_with(T241 C,T0* a1,T2 a2);
void r241clear(T241 C,T2 a1,T2 a2);
void r241copy_from(T241 C,T241 a1,T2 a2);
void r767clear_all(T767 C,T2 a1);
T767 r767realloc(T767 C,T2 a1,T2 a2);
void r767set_all_with(T767 C,T0* a1,T2 a2);
void r767clear(T767 C,T2 a1,T2 a2);
void r767copy_from(T767 C,T767 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r135clear_all(T135 C,T2 a1);
T135 r135realloc(T135 C,T2 a1,T2 a2);
void r135set_all_with(T135 C,T2 a1,T2 a2);
void r135clear(T135 C,T2 a1,T2 a2);
void r135copy_from(T135 C,T135 a1,T2 a2);
void r547clear_all(T547 C,T2 a1);
T547 r547realloc(T547 C,T2 a1,T2 a2);
void r547set_all_with(T547 C,T0* a1,T2 a2);
void r547clear(T547 C,T2 a1,T2 a2);
void r547copy_from(T547 C,T547 a1,T2 a2);
void r247clear_all(T247 C,T2 a1);
T247 r247realloc(T247 C,T2 a1,T2 a2);
void r247set_all_with(T247 C,T0* a1,T2 a2);
void r247clear(T247 C,T2 a1,T2 a2);
void r247copy_from(T247 C,T247 a1,T2 a2);
void r375clear_all(T375 C,T2 a1);
T375 r375realloc(T375 C,T2 a1,T2 a2);
void r375set_all_with(T375 C,T0* a1,T2 a2);
void r375clear(T375 C,T2 a1,T2 a2);
void r375copy_from(T375 C,T375 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
void r7keep_tail(T7* C,T2 a1);
void r7remove_first(T7* C,T2 a1);
T2 r7item_code(T7* C,T2 a1);
void r7remove_between(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T3 r7item(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7make_from_string(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
void r7out_in_tagged_out_memory(T7* C);
T6 r7same_type(T7* C,T0* a1);
void r7remove_tail(T7* C,T2 a1);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7string(T7* C);
void r7extend(T7* C,T3 a1);
T0* r7_px_43(T7* C,T0* a1);
T2 r7hash_code(T7* C);
void r7remove_last(T7* C,T2 a1);
T6 r7conforms_to(T7* C,T0* a1);
void r7keep_head(T7* C,T2 a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
T2 r7substring_index(T7* C,T0* a1,T2 a2);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
T0* r257out(T257* C);
void r257copy(T257* C,T0* a1);
T2 r257count(T257* C);
T0* r257item(T257* C,T2 a1);
T6 r257se_assigned_from(T0* a1);
void r257out_in_tagged_out_memory(T257* C);
void r257make(T257* C,T2 a1,T2 a2);
void r257fill_tagged_out_memory(T257* C);
T6 r257conforms_to(T257* C,T0* a1);
T0* r257twin(T257* C);
T0* r235out(T235* C);
void r235copy(T235* C,T0* a1);
T2 r235count(T235* C);
T2 r235item(T235* C,T2 a1);
T6 r235se_assigned_from(T0* a1);
void r235out_in_tagged_out_memory(T235* C);
void r235make(T235* C,T2 a1,T2 a2);
void r235fill_tagged_out_memory(T235* C);
T6 r235conforms_to(T235* C,T0* a1);
T0* r235twin(T235* C);
T0* r331out(T331* C);
void r331copy(T331* C,T0* a1);
T6 r331se_assigned_from(T0* a1);
void r331out_in_tagged_out_memory(T331* C);
void r331make(T331* C,T2 a1);
void r331fill_tagged_out_memory(T331* C);
T6 r331conforms_to(T331* C,T0* a1);
void r331resize(T331* C,T2 a1);
T0* r331twin(T331* C);
T0* r502out(T502* C);
void r502copy(T502* C,T0* a1);
T6 r502se_assigned_from(T0* a1);
void r502out_in_tagged_out_memory(T502* C);
void r502make(T502* C,T2 a1);
void r502fill_tagged_out_memory(T502* C);
T6 r502conforms_to(T502* C,T0* a1);
void r502resize(T502* C,T2 a1);
T0* r502twin(T502* C);
T0* r250out(T250* C);
void r250copy(T250* C,T0* a1);
T0* r250item(T250* C,T2 a1);
T6 r250se_assigned_from(T0* a1);
void r250out_in_tagged_out_memory(T250* C);
void r250make(T250* C,T2 a1,T2 a2);
void r250fill_tagged_out_memory(T250* C);
T6 r250conforms_to(T250* C,T0* a1);
T0* r250twin(T250* C);
T0* r545out(T545* C);
void r545copy(T545* C,T0* a1);
T6 r545se_assigned_from(T0* a1);
void r545out_in_tagged_out_memory(T545* C);
void r545make(T545* C,T2 a1);
void r545fill_tagged_out_memory(T545* C);
T6 r545conforms_to(T545* C,T0* a1);
void r545resize(T545* C,T2 a1);
T0* r545twin(T545* C);
T0* r731out(T731* C);
void r731copy(T731* C,T0* a1);
T0* r731item(T731* C,T2 a1);
T6 r731se_assigned_from(T0* a1);
void r731out_in_tagged_out_memory(T731* C);
void r731fill_tagged_out_memory(T731* C);
T6 r731conforms_to(T731* C,T0* a1);
T0* r731twin(T731* C);
T0* r393out(T393* C);
void r393copy(T393* C,T0* a1);
T6 r393se_assigned_from(T0* a1);
void r393out_in_tagged_out_memory(T393* C);
void r393make(T393* C,T2 a1);
void r393fill_tagged_out_memory(T393* C);
T6 r393conforms_to(T393* C,T0* a1);
void r393resize(T393* C,T2 a1);
T0* r393twin(T393* C);
T0* r689out(T689* C);
void r689copy(T689* C,T0* a1);
T6 r689se_assigned_from(T0* a1);
void r689out_in_tagged_out_memory(T689* C);
void r689make(T689* C,T2 a1);
void r689fill_tagged_out_memory(T689* C);
T6 r689conforms_to(T689* C,T0* a1);
void r689resize(T689* C,T2 a1);
T0* r689twin(T689* C);
T0* r264out(T264* C);
void r264copy(T264* C,T0* a1);
T6 r264se_assigned_from(T0* a1);
void r264out_in_tagged_out_memory(T264* C);
void r264make(T264* C,T2 a1);
void r264fill_tagged_out_memory(T264* C);
T6 r264conforms_to(T264* C,T0* a1);
void r264resize(T264* C,T2 a1);
T0* r264twin(T264* C);
T0* r681out(T681* C);
void r681copy(T681* C,T0* a1);
T6 r681se_assigned_from(T0* a1);
void r681out_in_tagged_out_memory(T681* C);
void r681make(T681* C,T2 a1);
void r681fill_tagged_out_memory(T681* C);
T6 r681conforms_to(T681* C,T0* a1);
void r681resize(T681* C,T2 a1);
T0* r681twin(T681* C);
T0* r253out(T253* C);
void r253copy(T253* C,T0* a1);
T6 r253item(T253* C,T2 a1);
T6 r253se_assigned_from(T0* a1);
void r253out_in_tagged_out_memory(T253* C);
void r253make(T253* C,T2 a1,T2 a2);
void r253fill_tagged_out_memory(T253* C);
T6 r253conforms_to(T253* C,T0* a1);
T0* r253twin(T253* C);
T0* r136out(T136* C);
void r136copy(T136* C,T0* a1);
T6 r136se_assigned_from(T0* a1);
void r136out_in_tagged_out_memory(T136* C);
void r136make(T136* C,T2 a1);
void r136fill_tagged_out_memory(T136* C);
T6 r136conforms_to(T136* C,T0* a1);
void r136resize(T136* C,T2 a1);
T0* r136twin(T136* C);
T0* r239out(T239* C);
void r239copy(T239* C,T0* a1);
T6 r239se_assigned_from(T0* a1);
void r239out_in_tagged_out_memory(T239* C);
void r239make(T239* C,T2 a1);
void r239fill_tagged_out_memory(T239* C);
T6 r239conforms_to(T239* C,T0* a1);
void r239resize(T239* C,T2 a1);
T0* r239twin(T239* C);
T0* r335out(T335* C);
void r335copy(T335* C,T0* a1);
T6 r335se_assigned_from(T0* a1);
void r335out_in_tagged_out_memory(T335* C);
void r335make(T335* C,T2 a1);
void r335fill_tagged_out_memory(T335* C);
T6 r335conforms_to(T335* C,T0* a1);
void r335resize(T335* C,T2 a1);
T0* r335twin(T335* C);
T0* r648out(T648* C);
void r648copy(T648* C,T0* a1);
T6 r648se_assigned_from(T0* a1);
void r648out_in_tagged_out_memory(T648* C);
void r648make(T648* C,T2 a1);
void r648fill_tagged_out_memory(T648* C);
T6 r648conforms_to(T648* C,T0* a1);
void r648resize(T648* C,T2 a1);
T0* r648twin(T648* C);
T0* r582out(T582* C);
void r582copy(T582* C,T0* a1);
T6 r582se_assigned_from(T0* a1);
void r582out_in_tagged_out_memory(T582* C);
void r582make(T582* C,T2 a1);
void r582fill_tagged_out_memory(T582* C);
T6 r582conforms_to(T582* C,T0* a1);
void r582resize(T582* C,T2 a1);
T0* r582twin(T582* C);
T0* r134out(T134* C);
void r134copy(T134* C,T0* a1);
T6 r134se_assigned_from(T0* a1);
void r134out_in_tagged_out_memory(T134* C);
void r134make(T134* C,T2 a1);
void r134fill_tagged_out_memory(T134* C);
T6 r134conforms_to(T134* C,T0* a1);
void r134resize(T134* C,T2 a1);
T0* r134twin(T134* C);
void r134with_capacity(T134* C,T2 a1);
void r134from_collection(T134* C,T0* a1);
T0* r245out(T245* C);
void r245copy(T245* C,T0* a1);
T6 r245se_assigned_from(T0* a1);
void r245out_in_tagged_out_memory(T245* C);
void r245make(T245* C,T2 a1);
void r245fill_tagged_out_memory(T245* C);
T6 r245conforms_to(T245* C,T0* a1);
void r245resize(T245* C,T2 a1);
T0* r245twin(T245* C);
T0* r694out(T694* C);
void r694copy(T694* C,T0* a1);
T6 r694se_assigned_from(T0* a1);
void r694out_in_tagged_out_memory(T694* C);
void r694make(T694* C,T2 a1);
void r694fill_tagged_out_memory(T694* C);
T6 r694conforms_to(T694* C,T0* a1);
void r694resize(T694* C,T2 a1);
T0* r694twin(T694* C);
T0* r65out(T65* C);
void r65copy(T65* C,T0* a1);
void r65force(T65* C,T0* a1,T2 a2);
T2 r65count(T65* C);
T0* r65item(T65* C,T2 a1);
T6 r65valid_index(T65* C,T2 a1);
T6 r65se_assigned_from(T0* a1);
void r65out_in_tagged_out_memory(T65* C);
void r65make(T65* C,T2 a1,T2 a2);
void r65fill_tagged_out_memory(T65* C);
T6 r65conforms_to(T65* C,T0* a1);
void r65add_last(T65* C,T0* a1);
void r65resize(T65* C,T2 a1,T2 a2);
T0* r65twin(T65* C);
T0* r373out(T373* C);
void r373copy(T373* C,T0* a1);
T2 r373count(T373* C);
T0* r373item(T373* C,T2 a1);
T6 r373se_assigned_from(T0* a1);
void r373out_in_tagged_out_memory(T373* C);
void r373make(T373* C,T2 a1);
void r373fill_tagged_out_memory(T373* C);
T6 r373conforms_to(T373* C,T0* a1);
void r373resize(T373* C,T2 a1);
T0* r373twin(T373* C);
T0* r764out(T764* C);
void r764copy(T764* C,T0* a1);
T6 r764se_assigned_from(T0* a1);
void r764out_in_tagged_out_memory(T764* C);
void r764make(T764* C,T2 a1);
void r764fill_tagged_out_memory(T764* C);
T6 r764conforms_to(T764* C,T0* a1);
void r764resize(T764* C,T2 a1);
T0* r764twin(T764* C);
T0* r370out(T370* C);
void r370copy(T370* C,T0* a1);
T0* r370item(T370* C,T2 a1);
T6 r370se_assigned_from(T0* a1);
void r370out_in_tagged_out_memory(T370* C);
void r370make(T370* C,T2 a1,T2 a2);
void r370fill_tagged_out_memory(T370* C);
T6 r370conforms_to(T370* C,T0* a1);
T0* r370twin(T370* C);
T0* r836out(T836* C);
void r836copy(T836* C,T0* a1);
T6 r836se_assigned_from(T0* a1);
void r836out_in_tagged_out_memory(T836* C);
void r836make(T836* C,T2 a1);
void r836fill_tagged_out_memory(T836* C);
T6 r836conforms_to(T836* C,T0* a1);
void r836resize(T836* C,T2 a1);
T0* r836twin(T836* C);
T0* r184out(T184* C);
void r184copy(T184* C,T0* a1);
void r184remove_traversing_cursor(T184* C,T0* a1);
void r184cursor_go_after(T184* C,T0* a1);
void r184move_all_cursors_after(T184* C);
void r184add_traversing_cursor(T184* C,T0* a1);
T6 r184se_assigned_from(T0* a1);
void r184out_in_tagged_out_memory(T184* C);
void r184make(T184* C);
T6 r184conforms_to(T184* C,T0* a1);
void r184cursor_forth(T184* C,T0* a1);
void r184cursor_start(T184* C,T0* a1);
T0* r184twin(T184* C);
void r184force_last(T184* C,T0* a1);
T0* r184new_cursor(T184* C);
T6 r184cursor_off(T0* a1);
T0* r559out(T559* C);
void r559copy(T559* C,T0* a1);
T6 r559se_assigned_from(T0* a1);
void r559out_in_tagged_out_memory(T559* C);
T6 r559off(T559* C);
T6 r559conforms_to(T559* C,T0* a1);
T0* r559twin(T559* C);
T0* r291out(T291* C);
void r291subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r291se_assigned_from(T0* a1);
void r291out_in_tagged_out_memory(T291* C);
T6 r291conforms_to(T291* C,T0* a1);
T0* r291twin(T291* C);
void r291sort_with_comparator(T0* a1,T0* a2);
T0* r472out(T472* C);
T2 r472new_capacity(T2 a1);
void r472copy(T472* C,T0* a1);
void r472make_clashes(T472* C,T2 a1);
T0* r472cursor_item(T472* C,T0* a1);
void r472search_position(T472* C,T0* a1);
void r472remove_traversing_cursor(T472* C,T0* a1);
void r472clone_slots(T472* C);
void r472clone_clashes(T472* C);
void r472move_all_cursors_after(T472* C);
void r472make_items(T472* C,T2 a1);
void r472add_traversing_cursor(T472* C,T0* a1);
T6 r472se_assigned_from(T0* a1);
T0* r472clone(T0* a1);
void r472out_in_tagged_out_memory(T472* C);
void r472make(T472* C,T2 a1);
void r472clone_items(T472* C);
T6 r472cursor_after(T0* a1);
T6 r472conforms_to(T472* C,T0* a1);
T2 r472hash_position(T472* C,T0* a1);
void r472cursor_forth(T472* C,T0* a1);
extern T0*oBC125fixed_integer_array_;
void r472items_resize(T472* C,T2 a1);
void r472resize(T472* C,T2 a1);
void r472cursor_start(T472* C,T0* a1);
void r472clashes_resize(T472* C,T2 a1);
void r472slots_resize(T472* C,T2 a1);
T0* r472twin(T472* C);
void r472force_last(T472* C,T0* a1);
T0* r472new_cursor(T472* C);
void r472make_slots(T472* C,T2 a1);
T2 r472new_modulus(T2 a1);
T6 r472cursor_off(T0* a1);
T0* r892out(T892* C);
T6 r892se_assigned_from(T0* a1);
void r892out_in_tagged_out_memory(T892* C);
T6 r892conforms_to(T892* C,T0* a1);
T0* r892twin(T892* C);
T0* r853out(T853* C);
void r853copy(T853* C,T0* a1);
T6 r853se_assigned_from(T0* a1);
void r853out_in_tagged_out_memory(T853* C);
void r853make(T853* C,T0* a1);
T6 r853off(T853* C);
T6 r853conforms_to(T853* C,T0* a1);
T0* r853twin(T853* C);
T0* r120out(T120* C);
T2 r120new_capacity(T2 a1);
void r120copy(T120* C,T0* a1);
T6 r120extendible(T120* C,T2 a1);
T0* r120last(T120* C);
T0* r120cursor_item(T120* C,T0* a1);
T6 r120is_equal(T120* C,T0* a1);
void r120remove_traversing_cursor(T120* C,T0* a1);
void r120move_all_cursors_after(T120* C);
void r120add_traversing_cursor(T120* C,T0* a1);
T6 r120se_assigned_from(T0* a1);
T0* r120clone(T0* a1);
void r120out_in_tagged_out_memory(T120* C);
T6 r120cursor_before(T0* a1);
T6 r120same_type(T120* C,T0* a1);
void r120make(T120* C,T2 a1);
T6 r120cursor_after(T0* a1);
T6 r120conforms_to(T120* C,T0* a1);
void r120cursor_forth(T120* C,T0* a1);
void r120resize(T120* C,T2 a1);
void r120cursor_start(T120* C,T0* a1);
T0* r120twin(T120* C);
void r120force_last(T120* C,T0* a1);
T0* r120new_cursor(T120* C);
T6 r120cursor_off(T0* a1);
T0* r249out(T249* C);
void r249copy(T249* C,T0* a1);
void r249set_target(T249* C,T0* a1,T2 a2);
T6 r249se_assigned_from(T0* a1);
T0* r249clone(T0* a1);
void r249out_in_tagged_out_memory(T249* C);
void r249make(T249* C,T2 a1,T2 a2);
T6 r249conforms_to(T249* C,T0* a1);
T0* r249twin(T249* C);
T0* r888out(T888* C);
T6 r888se_assigned_from(T0* a1);
void r888out_in_tagged_out_memory(T888* C);
T6 r888conforms_to(T888* C,T0* a1);
T0* r888twin(T888* C);
T0* r258out(T258* C);
void r258put_left(T258* C,T0* a1);
T6 r258se_assigned_from(T0* a1);
void r258out_in_tagged_out_memory(T258* C);
T6 r258conforms_to(T258* C,T0* a1);
T0* r258twin(T258* C);
void r258put_right(T258* C,T0* a1);
T0* r717out(T717* C);
T6 r717se_assigned_from(T0* a1);
void r717out_in_tagged_out_memory(T717* C);
void r717make(T717* C,T0* a1,T0* a2);
T6 r717conforms_to(T717* C,T0* a1);
T0* r717twin(T717* C);
T0* r500out(T500* C);
void r500copy(T500* C,T0* a1);
T6 r500se_assigned_from(T0* a1);
void r500out_in_tagged_out_memory(T500* C);
void r500make(T500* C,T0* a1);
T6 r500off(T500* C);
T6 r500conforms_to(T500* C,T0* a1);
T0* r500twin(T500* C);
T0* r895out(T895* C);
T6 r895se_assigned_from(T0* a1);
void r895out_in_tagged_out_memory(T895* C);
T6 r895conforms_to(T895* C,T0* a1);
T0* r895twin(T895* C);
void r895put_right(T895* C,T0* a1);
T0* r769out(T769* C);
void r769copy(T769* C,T0* a1);
void r769force(T769* C,T0* a1);
T6 r769se_assigned_from(T0* a1);
void r769out_in_tagged_out_memory(T769* C);
void r769remove(T769* C);
T6 r769conforms_to(T769* C,T0* a1);
T0* r769twin(T769* C);
T0* r416out(T416* C);
T6 r416se_assigned_from(T0* a1);
void r416out_in_tagged_out_memory(T416* C);
T0* r416make(T2 a1);
T6 r416conforms_to(T416* C,T0* a1);
T0* r416resize(T0* a1,T2 a2);
T0* r416twin(T416* C);
T0* r89out(T89* C);
void r89copy(T89* C,T0* a1);
void r89set(T89* C,T0* a1,T6 a2,T6 a3);
T0* r89item(T89* C);
T6 r89se_assigned_from(T0* a1);
void r89out_in_tagged_out_memory(T89* C);
void r89make(T89* C,T0* a1);
void r89forth(T89* C);
T6 r89conforms_to(T89* C,T0* a1);
void r89start(T89* C);
void r89go_after(T89* C);
void r89set_after(T89* C);
T0* r89twin(T89* C);
T0* r165out(T165* C);
void r165copy(T165* C,T0* a1);
T0* r165item(T165* C);
T6 r165se_assigned_from(T0* a1);
void r165out_in_tagged_out_memory(T165* C);
T6 r165after(T165* C);
T6 r165off(T165* C);
T6 r165conforms_to(T165* C,T0* a1);
T0* r165twin(T165* C);
T0* r415out(T415* C);
T6 r415labeled(T415* C,T2 a1);
T6 r415se_assigned_from(T0* a1);
void r415out_in_tagged_out_memory(T415* C);
void r415make(T415* C,T0* a1,T0* a2);
T6 r415conforms_to(T415* C,T0* a1);
T0* r415twin(T415* C);
void r415record(T415* C,T0* a1);
T0* r344out(T344* C);
T6 r344se_assigned_from(T0* a1);
void r344out_in_tagged_out_memory(T344* C);
T0* r344make(T2 a1);
T6 r344conforms_to(T344* C,T0* a1);
T0* r344resize(T0* a1,T2 a2);
T0* r344twin(T344* C);
T0* r132out(T132* C);
T6 r132se_assigned_from(T0* a1);
void r132out_in_tagged_out_memory(T132* C);
T6 r132conforms_to(T132* C,T0* a1);
T6 r132test(T0* a1,T0* a2);
T0* r132twin(T132* C);
T0* r828out(T828* C);
void r828copy(T828* C,T0* a1);
void r828set(T828* C,T0* a1,T6 a2,T6 a3);
T6 r828se_assigned_from(T0* a1);
void r828out_in_tagged_out_memory(T828* C);
void r828make(T828* C,T0* a1);
T6 r828conforms_to(T828* C,T0* a1);
void r828set_after(T828* C);
T0* r828twin(T828* C);
T0* r765out(T765* C);
T6 r765se_assigned_from(T0* a1);
void r765out_in_tagged_out_memory(T765* C);
T0* r765make(T2 a1);
T6 r765conforms_to(T765* C,T0* a1);
T0* r765resize(T0* a1,T2 a2);
T0* r765twin(T765* C);
T0* r371out(T371* C);
void r371clear_all(T0* a1);
T6 r371se_assigned_from(T0* a1);
void r371out_in_tagged_out_memory(T371* C);
T0* r371make(T2 a1);
T6 r371conforms_to(T371* C,T0* a1);
T0* r371resize(T0* a1,T2 a2);
T0* r371twin(T371* C);
T0* r728out(T728* C);
void r728copy(T728* C,T0* a1);
T6 r728se_assigned_from(T0* a1);
void r728out_in_tagged_out_memory(T728* C);
void r728make(T728* C,T0* a1);
T6 r728conforms_to(T728* C,T0* a1);
void r728set_after(T728* C);
T0* r728twin(T728* C);
T0* r433out(T433* C);
T6 r433se_assigned_from(T0* a1);
void r433out_in_tagged_out_memory(T433* C);
void r433make(T433* C,T2 a1,T0* a2);
T6 r433conforms_to(T433* C,T0* a1);
T0* r433twin(T433* C);
void r433record(T433* C,T0* a1);
T0* r152out(T152* C);
T6 r152se_assigned_from(T0* a1);
void r152out_in_tagged_out_memory(T152* C);
T0* r152to_fixed_array(T0* a1);
T0* r152make(T2 a1);
T0* r152make_from_array(T0* a1);
T6 r152conforms_to(T152* C,T0* a1);
T0* r152resize(T0* a1,T2 a2);
T0* r152twin(T152* C);
T0* r290out(T290* C);
T6 r290se_assigned_from(T0* a1);
void r290out_in_tagged_out_memory(T290* C);
T6 r290conforms_to(T290* C,T0* a1);
T6 r290less_than(T0* a1,T0* a2);
T0* r290twin(T290* C);
T0* r149out(T149* C);
void r149copy(T149* C,T0* a1);
T0* r149key(T149* C);
T0* r149item(T149* C);
T6 r149se_assigned_from(T0* a1);
void r149out_in_tagged_out_memory(T149* C);
T6 r149after(T149* C);
void r149make(T149* C,T0* a1);
void r149forth(T149* C);
T6 r149off(T149* C);
T6 r149conforms_to(T149* C,T0* a1);
void r149start(T149* C);
T0* r149twin(T149* C);
T0* r579out(T579* C);
T2 r579new_capacity(T2 a1);
void r579copy(T579* C,T0* a1);
void r579cursor_back(T579* C,T0* a1);
void r579make_clashes(T579* C,T2 a1);
T0* r579cursor_item(T579* C,T0* a1);
void r579search_position(T579* C,T0* a1);
void r579remove_traversing_cursor(T579* C,T0* a1);
void r579clone_slots(T579* C);
void r579keys_resize(T579* C,T2 a1);
void r579clone_clashes(T579* C);
T0* r579item(T579* C,T0* a1);
void r579cursor_go_after(T579* C,T0* a1);
void r579move_all_cursors_after(T579* C);
void r579make_items(T579* C,T2 a1);
void r579add_traversing_cursor(T579* C,T0* a1);
T6 r579se_assigned_from(T0* a1);
T0* r579clone(T0* a1);
T6 r579has_item(T579* C,T0* a1);
void r579remove_position(T579* C,T2 a1);
void r579out_in_tagged_out_memory(T579* C);
T6 r579cursor_before(T0* a1);
void r579remove(T579* C,T0* a1);
T0* r579cursor_key(T579* C,T0* a1);
void r579clone_items(T579* C);
T6 r579cursor_after(T0* a1);
T6 r579conforms_to(T579* C,T0* a1);
T6 r579has(T579* C,T0* a1);
void r579cursor_finish(T579* C,T0* a1);
void r579make_keys(T579* C,T2 a1);
T2 r579hash_position(T579* C,T0* a1);
void r579cursor_forth(T579* C,T0* a1);
void r579items_resize(T579* C,T2 a1);
void r579clone_keys(T579* C);
void r579make_with_equality_testers(T579* C,T2 a1,T0* a2,T0* a3);
void r579resize(T579* C,T2 a1);
void r579move_cursors_after(T579* C,T2 a1);
void r579move_cursors_forth(T579* C,T2 a1);
void r579cursor_start(T579* C,T0* a1);
void r579clashes_resize(T579* C,T2 a1);
void r579slots_resize(T579* C,T2 a1);
T0* r579twin(T579* C);
void r579force_last(T579* C,T0* a1,T0* a2);
T0* r579new_cursor(T579* C);
void r579make_slots(T579* C,T2 a1);
T2 r579new_modulus(T2 a1);
void r579move_all_cursors(T579* C,T2 a1,T2 a2);
T6 r579cursor_off(T0* a1);
T0* r645out(T645* C);
T2 r645new_capacity(T2 a1);
void r645copy(T645* C,T0* a1);
void r645cursor_back(T645* C,T0* a1);
void r645make_clashes(T645* C,T2 a1);
T0* r645cursor_item(T645* C,T0* a1);
void r645search_position(T645* C,T0* a1);
void r645remove_traversing_cursor(T645* C,T0* a1);
void r645clone_slots(T645* C);
void r645keys_resize(T645* C,T2 a1);
void r645clone_clashes(T645* C);
void r645move_all_cursors_after(T645* C);
void r645make_items(T645* C,T2 a1);
void r645add_traversing_cursor(T645* C,T0* a1);
void r645make_map_equal(T645* C,T2 a1);
T6 r645se_assigned_from(T0* a1);
T0* r645clone(T0* a1);
void r645out_in_tagged_out_memory(T645* C);
T6 r645cursor_before(T0* a1);
void r645clone_items(T645* C);
T6 r645conforms_to(T645* C,T0* a1);
T6 r645has(T645* C,T0* a1);
void r645cursor_finish(T645* C,T0* a1);
void r645make_keys(T645* C,T2 a1);
T2 r645hash_position(T645* C,T0* a1);
void r645items_resize(T645* C,T2 a1);
void r645clone_keys(T645* C);
void r645make_with_equality_testers(T645* C,T2 a1,T0* a2,T0* a3);
void r645resize(T645* C,T2 a1);
void r645clashes_resize(T645* C,T2 a1);
void r645slots_resize(T645* C,T2 a1);
T0* r645twin(T645* C);
void r645force_last(T645* C,T0* a1,T0* a2);
T0* r645new_cursor(T645* C);
void r645make_slots(T645* C,T2 a1);
T2 r645new_modulus(T2 a1);
T6 r645cursor_off(T0* a1);
T0* r437out(T437* C);
T6 r437se_assigned_from(T0* a1);
void r437out_in_tagged_out_memory(T437* C);
T6 r437conforms_to(T437* C,T0* a1);
T6 r437less_than(T2 a1,T2 a2);
T0* r437twin(T437* C);
T0* r458out(T458* C);
T6 r458se_assigned_from(T0* a1);
void r458out_in_tagged_out_memory(T458* C);
T0* r458make(T2 a1);
T6 r458conforms_to(T458* C,T0* a1);
T0* r458resize(T0* a1,T2 a2);
T0* r458twin(T458* C);
T0* r282out(T282* C);
void r282subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r282se_assigned_from(T0* a1);
void r282out_in_tagged_out_memory(T282* C);
T6 r282conforms_to(T282* C,T0* a1);
void r282sort_with_comparator(T0* a1,T0* a2);
T0* r282twin(T282* C);
T0* r237out(T237* C);
T2 r237new_capacity(T2 a1);
void r237copy(T237* C,T0* a1);
T6 r237extendible(T237* C,T2 a1);
void r237move_cursors_right(T237* C,T2 a1,T2 a2);
void r237put(T237* C,T0* a1,T2 a2);
void r237remove_traversing_cursor(T237* C,T0* a1);
void r237move_all_cursors_after(T237* C);
void r237add_traversing_cursor(T237* C,T0* a1);
T6 r237se_assigned_from(T0* a1);
T0* r237clone(T0* a1);
void r237out_in_tagged_out_memory(T237* C);
void r237force_first(T237* C,T0* a1);
T6 r237cursor_before(T0* a1);
void r237make(T237* C,T2 a1);
T6 r237cursor_after(T0* a1);
T6 r237conforms_to(T237* C,T0* a1);
void r237move_right(T237* C,T2 a1,T2 a2);
void r237resize(T237* C,T2 a1);
T0* r237twin(T237* C);
void r237force_last(T237* C,T0* a1);
T0* r237new_cursor(T237* C);
void r237put_last(T237* C,T0* a1);
T6 r237cursor_off(T0* a1);
T0* r600out(T600* C);
void r600copy(T600* C,T0* a1);
T0* r600item(T600* C);
T6 r600se_assigned_from(T0* a1);
void r600out_in_tagged_out_memory(T600* C);
T6 r600after(T600* C);
T6 r600off(T600* C);
T6 r600conforms_to(T600* C,T0* a1);
T0* r600twin(T600* C);
T0* r541out(T541* C);
T6 r541se_assigned_from(T0* a1);
void r541out_in_tagged_out_memory(T541* C);
void r541make(T541* C,T0* a1,T0* a2);
T6 r541conforms_to(T541* C,T0* a1);
T0* r541twin(T541* C);
T0* r310out(T310* C);
void r310copy(T310* C,T0* a1);
T6 r310se_assigned_from(T0* a1);
void r310out_in_tagged_out_memory(T310* C);
T6 r310off(T310* C);
T6 r310conforms_to(T310* C,T0* a1);
T0* r310twin(T310* C);
T0* r634out(T634* C);
void r634copy(T634* C,T0* a1);
T0* r634item(T634* C);
T6 r634se_assigned_from(T0* a1);
void r634out_in_tagged_out_memory(T634* C);
void r634make(T634* C,T0* a1);
T6 r634off(T634* C);
T6 r634conforms_to(T634* C,T0* a1);
T6 r634before(T634* C);
T0* r634twin(T634* C);
T0* r716out(T716* C);
void r716copy(T716* C,T0* a1);
void r716remove_traversing_cursor(T716* C,T0* a1);
void r716move_all_cursors_after(T716* C);
void r716add_traversing_cursor(T716* C,T0* a1);
T6 r716se_assigned_from(T0* a1);
void r716out_in_tagged_out_memory(T716* C);
void r716make(T716* C);
T6 r716conforms_to(T716* C,T0* a1);
T0* r716twin(T716* C);
T0* r716new_cursor(T716* C);
void r716put_last(T716* C,T0* a1);
T0* r243out(T243* C);
void r243copy(T243* C,T0* a1);
void r243remove_traversing_cursor(T243* C,T0* a1);
void r243move_all_cursors_after(T243* C);
void r243add_traversing_cursor(T243* C,T0* a1);
T6 r243se_assigned_from(T0* a1);
T0* r243clone(T0* a1);
void r243out_in_tagged_out_memory(T243* C);
T6 r243cursor_before(T0* a1);
void r243make(T243* C,T2 a1);
T6 r243cursor_after(T0* a1);
T6 r243conforms_to(T243* C,T0* a1);
void r243resize(T243* C,T2 a1);
T0* r243twin(T243* C);
T0* r243new_cursor(T243* C);
void r243put_last(T243* C,T0* a1);
T6 r243cursor_off(T0* a1);
T0* r482out(T482* C);
void r482copy(T482* C,T0* a1);
T0* r482item(T482* C);
T6 r482se_assigned_from(T0* a1);
void r482out_in_tagged_out_memory(T482* C);
T6 r482after(T482* C);
void r482make(T482* C,T0* a1);
T6 r482off(T482* C);
T6 r482conforms_to(T482* C,T0* a1);
T0* r482twin(T482* C);
T0* r485out(T485* C);
T2 r485new_capacity(T2 a1);
void r485copy(T485* C,T0* a1);
void r485make_equal(T485* C,T2 a1);
void r485make_clashes(T485* C,T2 a1);
T0* r485cursor_item(T485* C,T0* a1);
void r485search_position(T485* C,T0* a1);
void r485remove_traversing_cursor(T485* C,T0* a1);
void r485clone_slots(T485* C);
void r485clone_clashes(T485* C);
void r485move_all_cursors_after(T485* C);
void r485make_items(T485* C,T2 a1);
void r485add_traversing_cursor(T485* C,T0* a1);
T6 r485se_assigned_from(T0* a1);
T0* r485clone(T0* a1);
void r485remove_position(T485* C,T2 a1);
void r485out_in_tagged_out_memory(T485* C);
T6 r485after(T485* C);
void r485make(T485* C,T2 a1);
T0* r485item_for_iteration(T485* C);
void r485remove(T485* C,T0* a1);
void r485clone_items(T485* C);
T6 r485cursor_after(T0* a1);
T6 r485conforms_to(T485* C,T0* a1);
T2 r485hash_position(T485* C,T0* a1);
void r485cursor_forth(T485* C,T0* a1);
void r485items_resize(T485* C,T2 a1);
void r485resize(T485* C,T2 a1);
void r485move_cursors_after(T485* C,T2 a1);
void r485move_cursors_forth(T485* C,T2 a1);
void r485cursor_start(T485* C,T0* a1);
void r485clashes_resize(T485* C,T2 a1);
void r485slots_resize(T485* C,T2 a1);
T0* r485twin(T485* C);
void r485force_last(T485* C,T0* a1);
T0* r485new_cursor(T485* C);
void r485make_slots(T485* C,T2 a1);
void r485move_all_cursors(T485* C,T2 a1,T2 a2);
T2 r485new_modulus(T2 a1);
T6 r485cursor_off(T0* a1);
T0* r329out(T329* C);
T2 r329new_capacity(T2 a1);
void r329copy(T329* C,T0* a1);
T6 r329extendible(T329* C,T2 a1);
void r329remove_traversing_cursor(T329* C,T0* a1);
void r329move_all_cursors_after(T329* C);
void r329add_traversing_cursor(T329* C,T0* a1);
T6 r329se_assigned_from(T0* a1);
T0* r329clone(T0* a1);
void r329out_in_tagged_out_memory(T329* C);
T6 r329cursor_before(T0* a1);
void r329make(T329* C,T2 a1);
T6 r329cursor_after(T0* a1);
T6 r329conforms_to(T329* C,T0* a1);
void r329resize(T329* C,T2 a1);
T0* r329twin(T329* C);
void r329force_last(T329* C,T0* a1);
T0* r329new_cursor(T329* C);
T6 r329cursor_off(T0* a1);
T0* r599out(T599* C);
T2 r599new_capacity(T2 a1);
void r599copy(T599* C,T0* a1);
T6 r599extendible(T599* C,T2 a1);
T0* r599cursor_item(T599* C,T0* a1);
void r599remove_traversing_cursor(T599* C,T0* a1);
void r599move_all_cursors_after(T599* C);
void r599add_traversing_cursor(T599* C,T0* a1);
T6 r599se_assigned_from(T0* a1);
T0* r599clone(T0* a1);
void r599out_in_tagged_out_memory(T599* C);
T6 r599cursor_before(T0* a1);
void r599make(T599* C,T2 a1);
T6 r599cursor_after(T0* a1);
T6 r599conforms_to(T599* C,T0* a1);
void r599cursor_forth(T599* C,T0* a1);
void r599resize(T599* C,T2 a1);
void r599cursor_start(T599* C,T0* a1);
T0* r599twin(T599* C);
void r599force_last(T599* C,T0* a1);
T0* r599new_cursor(T599* C);
T6 r599cursor_off(T0* a1);
T0* r839out(T839* C);
T6 r839se_assigned_from(T0* a1);
void r839out_in_tagged_out_memory(T839* C);
T0* r839make(T2 a1);
T6 r839conforms_to(T839* C,T0* a1);
T0* r839resize(T0* a1,T2 a2);
T0* r839twin(T839* C);
T0* r608out(T608* C);
T2 r608new_capacity(T2 a1);
void r608copy(T608* C,T0* a1);
void r608make_clashes(T608* C,T2 a1);
T0* r608cursor_item(T608* C,T0* a1);
void r608search_position(T608* C,T0* a1);
void r608remove_traversing_cursor(T608* C,T0* a1);
void r608clone_slots(T608* C);
void r608keys_resize(T608* C,T2 a1);
void r608clone_clashes(T608* C);
void r608move_all_cursors_after(T608* C);
void r608make_items(T608* C,T2 a1);
void r608add_traversing_cursor(T608* C,T0* a1);
void r608make_map_equal(T608* C,T2 a1);
T6 r608se_assigned_from(T0* a1);
T0* r608clone(T0* a1);
void r608out_in_tagged_out_memory(T608* C);
void r608clone_items(T608* C);
T6 r608cursor_after(T0* a1);
T6 r608conforms_to(T608* C,T0* a1);
void r608make_keys(T608* C,T2 a1);
T2 r608hash_position(T608* C,T0* a1);
void r608cursor_forth(T608* C,T0* a1);
void r608items_resize(T608* C,T2 a1);
void r608clone_keys(T608* C);
void r608make_with_equality_testers(T608* C,T2 a1,T0* a2,T0* a3);
void r608resize(T608* C,T2 a1);
void r608cursor_start(T608* C,T0* a1);
void r608clashes_resize(T608* C,T2 a1);
void r608slots_resize(T608* C,T2 a1);
T0* r608twin(T608* C);
void r608force_last(T608* C,T0* a1,T0* a2);
T0* r608new_cursor(T608* C);
void r608make_slots(T608* C,T2 a1);
T2 r608new_modulus(T2 a1);
T6 r608cursor_off(T0* a1);
T0* r295out(T295* C);
T6 r295se_assigned_from(T0* a1);
void r295out_in_tagged_out_memory(T295* C);
T0* r295make(T2 a1);
T6 r295conforms_to(T295* C,T0* a1);
T0* r295resize(T0* a1,T2 a2);
T0* r295twin(T295* C);
T0* r403out(T403* C);
void r403copy(T403* C,T0* a1);
T0* r403item(T403* C);
T6 r403se_assigned_from(T0* a1);
void r403out_in_tagged_out_memory(T403* C);
T6 r403after(T403* C);
void r403make(T403* C,T0* a1);
T6 r403off(T403* C);
T6 r403conforms_to(T403* C,T0* a1);
T0* r403twin(T403* C);
T0* r902out(T902* C);
void r902copy(T902* C,T0* a1);
void r902force(T902* C,T0* a1);
T0* r902item(T902* C);
T6 r902se_assigned_from(T0* a1);
void r902out_in_tagged_out_memory(T902* C);
void r902remove(T902* C);
T6 r902conforms_to(T902* C,T0* a1);
T0* r902twin(T902* C);
T0* r466out(T466* C);
void r466copy(T466* C,T0* a1);
T6 r466se_assigned_from(T0* a1);
void r466out_in_tagged_out_memory(T466* C);
T6 r466off(T466* C);
T6 r466conforms_to(T466* C,T0* a1);
T0* r466twin(T466* C);
T0* r855out(T855* C);
void r855copy(T855* C,T0* a1);
T0* r855cursor_item(T0* a1);
void r855remove_traversing_cursor(T855* C,T0* a1);
void r855move_all_cursors_after(T855* C);
void r855add_traversing_cursor(T855* C,T0* a1);
T6 r855se_assigned_from(T0* a1);
void r855out_in_tagged_out_memory(T855* C);
void r855force_first(T855* C,T0* a1);
void r855make(T855* C);
T6 r855cursor_after(T0* a1);
T6 r855conforms_to(T855* C,T0* a1);
void r855cursor_forth(T855* C,T0* a1);
void r855cursor_start(T855* C,T0* a1);
T0* r855twin(T855* C);
void r855force_last(T855* C,T0* a1);
T0* r855new_cursor(T855* C);
T6 r855cursor_off(T0* a1);
T0* r692out(T692* C);
T6 r692se_assigned_from(T0* a1);
void r692out_in_tagged_out_memory(T692* C);
T0* r692make(T2 a1);
T6 r692conforms_to(T692* C,T0* a1);
T0* r692resize(T0* a1,T2 a2);
T0* r692twin(T692* C);
T0* r568out(T568* C);
void r568copy(T568* C,T0* a1);
T0* r568key(T568* C);
T0* r568item(T568* C);
T6 r568se_assigned_from(T0* a1);
void r568out_in_tagged_out_memory(T568* C);
T6 r568after(T568* C);
void r568make(T568* C,T0* a1);
T6 r568off(T568* C);
T6 r568conforms_to(T568* C,T0* a1);
T6 r568before(T568* C);
T0* r568twin(T568* C);
T0* r829out(T829* C);
T6 r829se_assigned_from(T0* a1);
void r829out_in_tagged_out_memory(T829* C);
T6 r829conforms_to(T829* C,T0* a1);
T0* r829twin(T829* C);
T0* r684out(T684* C);
T6 r684se_assigned_from(T0* a1);
void r684out_in_tagged_out_memory(T684* C);
T0* r684make(T2 a1);
T6 r684conforms_to(T684* C,T0* a1);
T0* r684resize(T0* a1,T2 a2);
T0* r684twin(T684* C);
T0* r789out(T789* C);
T6 r789se_assigned_from(T0* a1);
void r789out_in_tagged_out_memory(T789* C);
T6 r789conforms_to(T789* C,T0* a1);
T0* r789twin(T789* C);
T0* r323out(T323* C);
T6 r323se_assigned_from(T0* a1);
void r323out_in_tagged_out_memory(T323* C);
T6 r323conforms_to(T323* C,T0* a1);
T0* r323twin(T323* C);
T0* r503out(T503* C);
T6 r503se_assigned_from(T0* a1);
void r503out_in_tagged_out_memory(T503* C);
T0* r503make(T2 a1);
T6 r503conforms_to(T503* C,T0* a1);
T0* r503resize(T0* a1,T2 a2);
T0* r503twin(T503* C);
T0* r867out(T867* C);
void r867copy(T867* C,T0* a1);
void r867set(T867* C,T0* a1,T6 a2,T6 a3);
T6 r867se_assigned_from(T0* a1);
void r867out_in_tagged_out_memory(T867* C);
void r867make(T867* C,T0* a1);
T6 r867conforms_to(T867* C,T0* a1);
void r867set_after(T867* C);
T0* r867twin(T867* C);
T0* r885out(T885* C);
void r885copy(T885* C,T0* a1);
void r885set(T885* C,T0* a1,T6 a2,T6 a3);
T6 r885se_assigned_from(T0* a1);
void r885out_in_tagged_out_memory(T885* C);
void r885make(T885* C,T0* a1);
T6 r885conforms_to(T885* C,T0* a1);
void r885set_after(T885* C);
T0* r885twin(T885* C);
T0* r704out(T704* C);
T6 r704se_assigned_from(T0* a1);
void r704out_in_tagged_out_memory(T704* C);
T6 r704conforms_to(T704* C,T0* a1);
T0* r704twin(T704* C);
T0* r761out(T761* C);
void r761copy(T761* C,T0* a1);
T6 r761se_assigned_from(T0* a1);
void r761out_in_tagged_out_memory(T761* C);
void r761make(T761* C,T0* a1);
T6 r761off(T761* C);
T6 r761conforms_to(T761* C,T0* a1);
T0* r761twin(T761* C);
T0* r319out(T319* C);
void r319copy(T319* C,T0* a1);
T0* r319item(T319* C);
T6 r319se_assigned_from(T0* a1);
void r319out_in_tagged_out_memory(T319* C);
T6 r319after(T319* C);
T6 r319off(T319* C);
T6 r319conforms_to(T319* C,T0* a1);
T0* r319twin(T319* C);
T0* r197out(T197* C);
T6 r197se_assigned_from(T0* a1);
void r197out_in_tagged_out_memory(T197* C);
T6 r197conforms_to(T197* C,T0* a1);
T0* r197twin(T197* C);
T0* r355out(T355* C);
void r355copy(T355* C,T0* a1);
T6 r355se_assigned_from(T0* a1);
void r355out_in_tagged_out_memory(T355* C);
void r355make(T355* C,T0* a1);
T6 r355off(T355* C);
T6 r355conforms_to(T355* C,T0* a1);
T0* r355twin(T355* C);
T0* r702out(T702* C);
T6 r702se_assigned_from(T0* a1);
void r702out_in_tagged_out_memory(T702* C);
T6 r702conforms_to(T702* C,T0* a1);
T0* r702twin(T702* C);
T0* r79out(T79* C);
T2 r79new_capacity(T2 a1);
void r79copy(T79* C,T0* a1);
T6 r79extendible(T79* C,T2 a1);
void r79force(T79* C,T0* a1);
T0* r79item(T79* C);
T6 r79se_assigned_from(T0* a1);
T0* r79clone(T0* a1);
void r79out_in_tagged_out_memory(T79* C);
void r79make(T79* C,T2 a1);
void r79remove(T79* C);
T6 r79conforms_to(T79* C,T0* a1);
void r79resize(T79* C,T2 a1);
T0* r79twin(T79* C);
T0* r821out(T821* C);
void r821copy(T821* C,T0* a1);
T0* r821cursor_item(T0* a1);
void r821remove_traversing_cursor(T821* C,T0* a1);
void r821move_all_cursors_after(T821* C);
void r821add_traversing_cursor(T821* C,T0* a1);
T6 r821se_assigned_from(T0* a1);
void r821out_in_tagged_out_memory(T821* C);
void r821make(T821* C);
T6 r821cursor_after(T0* a1);
T6 r821conforms_to(T821* C,T0* a1);
void r821cursor_forth(T821* C,T0* a1);
void r821cursor_start(T821* C,T0* a1);
T0* r821twin(T821* C);
void r821force_last(T821* C,T0* a1);
T0* r821new_cursor(T821* C);
T6 r821cursor_off(T0* a1);
T0* r455out(T455* C);
void r455copy(T455* C,T0* a1);
T6 r455se_assigned_from(T0* a1);
void r455out_in_tagged_out_memory(T455* C);
T6 r455off(T455* C);
T6 r455conforms_to(T455* C,T0* a1);
T0* r455twin(T455* C);
T0* r631out(T631* C);
void r631copy(T631* C,T0* a1);
T0* r631item(T631* C);
T6 r631se_assigned_from(T0* a1);
void r631out_in_tagged_out_memory(T631* C);
T6 r631after(T631* C);
void r631make(T631* C,T0* a1);
T6 r631off(T631* C);
T6 r631conforms_to(T631* C,T0* a1);
T0* r631twin(T631* C);
T0* r889out(T889* C);
T6 r889se_assigned_from(T0* a1);
void r889out_in_tagged_out_memory(T889* C);
T6 r889conforms_to(T889* C,T0* a1);
T0* r889twin(T889* C);
void r889put_right(T889* C,T0* a1);
T0* r804out(T804* C);
T6 r804se_assigned_from(T0* a1);
void r804out_in_tagged_out_memory(T804* C);
T6 r804conforms_to(T804* C,T0* a1);
T0* r804twin(T804* C);
T0* r262out(T262* C);
T2 r262new_capacity(T2 a1);
void r262copy(T262* C,T0* a1);
T6 r262extendible(T262* C,T2 a1);
void r262append_last(T262* C,T0* a1);
void r262move_cursors_right(T262* C,T2 a1,T2 a2);
T0* r262last(T262* C);
void r262put(T262* C,T0* a1,T2 a2);
T0* r262cursor_item(T262* C,T0* a1);
T6 r262is_equal(T262* C,T0* a1);
void r262remove_traversing_cursor(T262* C,T0* a1);
void r262move_all_cursors_after(T262* C);
void r262add_traversing_cursor(T262* C,T0* a1);
T6 r262se_assigned_from(T0* a1);
T0* r262clone(T0* a1);
void r262out_in_tagged_out_memory(T262* C);
T6 r262cursor_before(T0* a1);
T6 r262same_type(T262* C,T0* a1);
void r262make(T262* C,T2 a1);
T6 r262cursor_after(T0* a1);
T6 r262conforms_to(T262* C,T0* a1);
T6 r262has(T262* C,T0* a1);
void r262move_right(T262* C,T2 a1,T2 a2);
void r262cursor_forth(T262* C,T0* a1);
void r262resize(T262* C,T2 a1);
void r262cursor_start(T262* C,T0* a1);
T0* r262twin(T262* C);
void r262force_last(T262* C,T0* a1);
T0* r262new_cursor(T262* C);
void r262extend_last(T262* C,T0* a1);
void r262put_last(T262* C,T0* a1);
T6 r262cursor_off(T0* a1);
T0* r698out(T698* C);
T6 r698se_assigned_from(T0* a1);
void r698out_in_tagged_out_memory(T698* C);
T0* r698make(T2 a1);
T6 r698conforms_to(T698* C,T0* a1);
T0* r698resize(T0* a1,T2 a2);
T0* r698twin(T698* C);
T0* r615out(T615* C);
void r615copy(T615* C,T0* a1);
T0* r615item(T615* C);
T6 r615se_assigned_from(T0* a1);
void r615out_in_tagged_out_memory(T615* C);
T6 r615after(T615* C);
void r615make(T615* C,T0* a1);
T6 r615off(T615* C);
T6 r615conforms_to(T615* C,T0* a1);
T0* r615twin(T615* C);
T0* r543out(T543* C);
T2 r543new_capacity(T2 a1);
void r543copy(T543* C,T0* a1);
T6 r543extendible(T543* C,T2 a1);
void r543remove_traversing_cursor(T543* C,T0* a1);
void r543move_all_cursors_after(T543* C);
void r543add_traversing_cursor(T543* C,T0* a1);
T6 r543se_assigned_from(T0* a1);
T0* r543clone(T0* a1);
void r543out_in_tagged_out_memory(T543* C);
T6 r543cursor_before(T0* a1);
void r543make(T543* C,T2 a1);
T6 r543cursor_after(T0* a1);
T6 r543conforms_to(T543* C,T0* a1);
void r543resize(T543* C,T2 a1);
T0* r543twin(T543* C);
void r543force_last(T543* C,T0* a1);
T0* r543new_cursor(T543* C);
T6 r543cursor_off(T0* a1);
T0* r114out(T114* C);
T6 r114se_assigned_from(T0* a1);
void r114out_in_tagged_out_memory(T114* C);
T6 r114conforms_to(T114* C,T0* a1);
T0* r114twin(T114* C);
T0* r492out(T492* C);
T6 r492se_assigned_from(T0* a1);
void r492out_in_tagged_out_memory(T492* C);
T6 r492conforms_to(T492* C,T0* a1);
T6 r492test(T0* a1,T0* a2);
T0* r492twin(T492* C);
T0* r270out(T270* C);
T6 r270se_assigned_from(T0* a1);
void r270out_in_tagged_out_memory(T270* C);
T6 r270conforms_to(T270* C,T0* a1);
T0* r270twin(T270* C);
T0* r324out(T324* C);
T6 r324se_assigned_from(T0* a1);
void r324out_in_tagged_out_memory(T324* C);
T0* r324make(T2 a1);
T6 r324conforms_to(T324* C,T0* a1);
T0* r324resize(T0* a1,T2 a2);
T0* r324twin(T324* C);
T0* r585out(T585* C);
T6 r585se_assigned_from(T0* a1);
void r585out_in_tagged_out_memory(T585* C);
T0* r585make(T2 a1);
T6 r585conforms_to(T585* C,T0* a1);
T0* r585resize(T0* a1,T2 a2);
T0* r585twin(T585* C);
T0* r129out(T129* C);
T2 r129new_capacity(T2 a1);
void r129copy(T129* C,T0* a1);
void r129force(T129* C,T0* a1,T0* a2);
T0* r129keys_item(T129* C,T2 a1);
T2 r129clashes_item(T129* C,T2 a1);
void r129make_clashes(T129* C,T2 a1);
T0* r129cursor_item(T129* C,T0* a1);
void r129search_position(T129* C,T0* a1);
void r129remove_traversing_cursor(T129* C,T0* a1);
void r129clone_slots(T129* C);
void r129keys_resize(T129* C,T2 a1);
T0* r129items_item(T129* C,T2 a1);
void r129clone_clashes(T129* C);
void r129move_all_cursors_after(T129* C);
void r129make_items(T129* C,T2 a1);
void r129add_traversing_cursor(T129* C,T0* a1);
T6 r129se_assigned_from(T0* a1);
T0* r129clone(T0* a1);
T2 r129slots_item(T129* C,T2 a1);
void r129remove_position(T129* C,T2 a1);
void r129out_in_tagged_out_memory(T129* C);
void r129make(T129* C,T2 a1);
void r129remove(T129* C,T0* a1);
T0* r129cursor_key(T129* C,T0* a1);
void r129clone_items(T129* C);
T6 r129cursor_after(T0* a1);
T6 r129conforms_to(T129* C,T0* a1);
void r129make_keys(T129* C,T2 a1);
T2 r129hash_position(T129* C,T0* a1);
void r129cursor_forth(T129* C,T0* a1);
void r129items_resize(T129* C,T2 a1);
void r129clone_keys(T129* C);
void r129move_cursors_after(T129* C,T2 a1);
void r129resize(T129* C,T2 a1);
T0* r129found_item(T129* C);
void r129make_with_equality_testers(T129* C,T2 a1,T0* a2,T0* a3);
void r129make_map(T129* C,T2 a1);
T6 r129found(T129* C);
void r129move_cursors_forth(T129* C,T2 a1);
void r129cursor_start(T129* C,T0* a1);
void r129search(T129* C,T0* a1);
void r129clashes_resize(T129* C,T2 a1);
void r129slots_resize(T129* C,T2 a1);
T0* r129twin(T129* C);
void r129force_last(T129* C,T0* a1,T0* a2);
T0* r129new_cursor(T129* C);
void r129make_slots(T129* C,T2 a1);
void r129move_all_cursors(T129* C,T2 a1,T2 a2);
T2 r129new_modulus(T2 a1);
T6 r129cursor_off(T0* a1);
T0* r845out(T845* C);
T6 r845se_assigned_from(T0* a1);
void r845out_in_tagged_out_memory(T845* C);
T6 r845conforms_to(T845* C,T0* a1);
T6 r845test(T0* a1,T0* a2);
T0* r845twin(T845* C);
T0* r624out(T624* C);
T2 r624new_capacity(T2 a1);
void r624copy(T624* C,T0* a1);
void r624make_clashes(T624* C,T2 a1);
T0* r624cursor_item(T624* C,T0* a1);
void r624search_position(T624* C,T0* a1);
void r624remove_traversing_cursor(T624* C,T0* a1);
void r624clone_slots(T624* C);
void r624keys_resize(T624* C,T2 a1);
void r624clone_clashes(T624* C);
void r624move_all_cursors_after(T624* C);
void r624make_items(T624* C,T2 a1);
void r624add_traversing_cursor(T624* C,T0* a1);
void r624make_map_equal(T624* C,T2 a1);
T6 r624se_assigned_from(T0* a1);
T0* r624clone(T0* a1);
void r624out_in_tagged_out_memory(T624* C);
void r624clone_items(T624* C);
T6 r624cursor_after(T0* a1);
T6 r624conforms_to(T624* C,T0* a1);
void r624make_keys(T624* C,T2 a1);
T2 r624hash_position(T624* C,T0* a1);
void r624cursor_forth(T624* C,T0* a1);
void r624items_resize(T624* C,T2 a1);
void r624clone_keys(T624* C);
void r624make_with_equality_testers(T624* C,T2 a1,T0* a2,T0* a3);
void r624resize(T624* C,T2 a1);
void r624cursor_start(T624* C,T0* a1);
void r624clashes_resize(T624* C,T2 a1);
void r624slots_resize(T624* C,T2 a1);
T0* r624twin(T624* C);
void r624force_last(T624* C,T0* a1,T0* a2);
T0* r624new_cursor(T624* C);
void r624make_slots(T624* C,T2 a1);
T2 r624new_modulus(T2 a1);
T6 r624cursor_off(T0* a1);
T0* r153out(T153* C);
T6 r153se_assigned_from(T0* a1);
void r153out_in_tagged_out_memory(T153* C);
T0* r153make(T2 a1);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153resize(T0* a1,T2 a2);
T0* r153twin(T153* C);
T0* r748out(T748* C);
T2 r748new_capacity(T2 a1);
void r748copy(T748* C,T0* a1);
void r748force(T748* C,T0* a1,T0* a2);
void r748wipe_out(T748* C);
void r748make_clashes(T748* C,T2 a1);
void r748search_position(T748* C,T0* a1);
void r748remove_traversing_cursor(T748* C,T0* a1);
void r748clone_slots(T748* C);
extern T2 oBC73default_capacity;
void r748keys_resize(T748* C,T2 a1);
void r748clone_clashes(T748* C);
T0* r748item(T748* C,T0* a1);
void r748move_all_cursors_after(T748* C);
void r748make_items(T748* C,T2 a1);
void r748add_traversing_cursor(T748* C,T0* a1);
T6 r748se_assigned_from(T0* a1);
T0* r748clone(T0* a1);
void r748out_in_tagged_out_memory(T748* C);
void r748slots_wipe_out(T748* C);
void r748make(T748* C,T2 a1);
void r748clashes_wipe_out(T748* C);
void r748clone_items(T748* C);
T6 r748conforms_to(T748* C,T0* a1);
T6 r748has(T748* C,T0* a1);
void r748make_keys(T748* C,T2 a1);
T2 r748hash_position(T748* C,T0* a1);
void r748items_wipe_out(T748* C);
void r748items_resize(T748* C,T2 a1);
void r748clone_keys(T748* C);
void r748resize(T748* C,T2 a1);
void r748make_with_equality_testers(T748* C,T2 a1,T0* a2,T0* a3);
void r748clashes_resize(T748* C,T2 a1);
void r748slots_resize(T748* C,T2 a1);
T0* r748twin(T748* C);
void r748keys_wipe_out(T748* C);
T0* r748new_cursor(T748* C);
void r748make_slots(T748* C,T2 a1);
T2 r748new_modulus(T2 a1);
T6 r748cursor_off(T0* a1);
T0* r341out(T341* C);
T6 r341se_assigned_from(T0* a1);
void r341out_in_tagged_out_memory(T341* C);
T6 r341conforms_to(T341* C,T0* a1);
T6 r341test(T2 a1,T2 a2);
T0* r341twin(T341* C);
T0* r706out(T706* C);
T6 r706se_assigned_from(T0* a1);
void r706out_in_tagged_out_memory(T706* C);
T6 r706conforms_to(T706* C,T0* a1);
T0* r706twin(T706* C);
T0* r338out(T338* C);
T2 r338new_capacity(T2 a1);
void r338copy(T338* C,T0* a1);
void r338force(T338* C,T0* a1,T2 a2);
void r338make_clashes(T338* C,T2 a1);
void r338search_position(T338* C,T2 a1);
void r338remove_traversing_cursor(T338* C,T0* a1);
void r338clone_slots(T338* C);
void r338keys_resize(T338* C,T2 a1);
void r338clone_clashes(T338* C);
T0* r338item(T338* C,T2 a1);
void r338move_all_cursors_after(T338* C);
void r338make_items(T338* C,T2 a1);
void r338add_traversing_cursor(T338* C,T0* a1);
T6 r338se_assigned_from(T0* a1);
T0* r338clone(T0* a1);
void r338out_in_tagged_out_memory(T338* C);
void r338make(T338* C,T2 a1);
void r338clone_items(T338* C);
T6 r338conforms_to(T338* C,T0* a1);
T6 r338has(T338* C,T2 a1);
void r338make_keys(T338* C,T2 a1);
T2 r338hash_position(T338* C,T2 a1);
void r338items_resize(T338* C,T2 a1);
void r338clone_keys(T338* C);
void r338make_with_equality_testers(T338* C,T2 a1,T0* a2,T0* a3);
void r338resize(T338* C,T2 a1);
void r338clashes_resize(T338* C,T2 a1);
void r338slots_resize(T338* C,T2 a1);
T0* r338twin(T338* C);
T0* r338new_cursor(T338* C);
void r338make_slots(T338* C,T2 a1);
T2 r338new_modulus(T2 a1);
T6 r338cursor_off(T0* a1);
T0* r438out(T438* C);
void r438subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r438se_assigned_from(T0* a1);
void r438out_in_tagged_out_memory(T438* C);
T6 r438conforms_to(T438* C,T0* a1);
void r438sort_with_comparator(T0* a1,T0* a2);
T0* r438twin(T438* C);
T0* r809out(T809* C);
void r809copy(T809* C,T0* a1);
void r809force(T809* C,T3 a1);
void r809wipe_out(T809* C);
T6 r809se_assigned_from(T0* a1);
void r809out_in_tagged_out_memory(T809* C);
void r809remove(T809* C);
T6 r809conforms_to(T809* C,T0* a1);
T0* r809twin(T809* C);
T0* r878out(T878* C);
T6 r878se_assigned_from(T0* a1);
void r878out_in_tagged_out_memory(T878* C);
T6 r878conforms_to(T878* C,T0* a1);
T0* r878twin(T878* C);
void r878put_right(T878* C,T0* a1);
T0* r296out(T296* C);
T6 r296se_assigned_from(T0* a1);
void r296out_in_tagged_out_memory(T296* C);
T0* r296make(T2 a1);
T6 r296conforms_to(T296* C,T0* a1);
T0* r296resize(T0* a1,T2 a2);
T0* r296twin(T296* C);
T0* r773out(T773* C);
void r773copy(T773* C,T0* a1);
void r773force(T773* C,T2 a1);
T2 r773item(T773* C);
T6 r773se_assigned_from(T0* a1);
void r773out_in_tagged_out_memory(T773* C);
void r773remove(T773* C);
T6 r773conforms_to(T773* C,T0* a1);
T0* r773twin(T773* C);
T0* r824out(T824* C);
T2 r824new_capacity(T2 a1);
void r824copy(T824* C,T0* a1);
void r824make_equal(T824* C,T2 a1);
void r824make_clashes(T824* C,T2 a1);
void r824search_position(T824* C,T0* a1);
void r824remove_traversing_cursor(T824* C,T0* a1);
void r824clone_slots(T824* C);
void r824clone_clashes(T824* C);
void r824move_all_cursors_after(T824* C);
void r824make_items(T824* C,T2 a1);
void r824add_traversing_cursor(T824* C,T0* a1);
T6 r824se_assigned_from(T0* a1);
T0* r824clone(T0* a1);
void r824out_in_tagged_out_memory(T824* C);
void r824make(T824* C,T2 a1);
void r824clone_items(T824* C);
T6 r824conforms_to(T824* C,T0* a1);
T6 r824has(T824* C,T0* a1);
void r824force_new(T824* C,T0* a1);
T2 r824hash_position(T824* C,T0* a1);
void r824items_resize(T824* C,T2 a1);
void r824resize(T824* C,T2 a1);
void r824clashes_resize(T824* C,T2 a1);
void r824slots_resize(T824* C,T2 a1);
T0* r824twin(T824* C);
T0* r824new_cursor(T824* C);
void r824make_slots(T824* C,T2 a1);
T2 r824new_modulus(T2 a1);
T6 r824cursor_off(T0* a1);
T0* r388out(T388* C);
T2 r388new_capacity(T2 a1);
void r388copy(T388* C,T0* a1);
void r388force(T388* C,T0* a1,T0* a2);
void r388make_clashes(T388* C,T2 a1);
T0* r388cursor_item(T388* C,T0* a1);
void r388search_position(T388* C,T0* a1);
void r388remove_traversing_cursor(T388* C,T0* a1);
void r388clone_slots(T388* C);
void r388keys_resize(T388* C,T2 a1);
void r388clone_clashes(T388* C);
T0* r388item(T388* C,T0* a1);
void r388move_all_cursors_after(T388* C);
void r388make_items(T388* C,T2 a1);
void r388add_traversing_cursor(T388* C,T0* a1);
T6 r388se_assigned_from(T0* a1);
T0* r388clone(T0* a1);
void r388out_in_tagged_out_memory(T388* C);
void r388make(T388* C,T2 a1);
void r388clone_items(T388* C);
T6 r388cursor_after(T0* a1);
T6 r388conforms_to(T388* C,T0* a1);
T6 r388has(T388* C,T0* a1);
void r388make_keys(T388* C,T2 a1);
T2 r388hash_position(T388* C,T0* a1);
void r388cursor_forth(T388* C,T0* a1);
void r388items_resize(T388* C,T2 a1);
void r388clone_keys(T388* C);
void r388make_with_equality_testers(T388* C,T2 a1,T0* a2,T0* a3);
void r388resize(T388* C,T2 a1);
void r388cursor_start(T388* C,T0* a1);
void r388clashes_resize(T388* C,T2 a1);
void r388slots_resize(T388* C,T2 a1);
T0* r388twin(T388* C);
T0* r388new_cursor(T388* C);
void r388make_slots(T388* C,T2 a1);
T2 r388new_modulus(T2 a1);
T6 r388cursor_off(T0* a1);
T0* r819out(T819* C);
void r819copy(T819* C,T0* a1);
T0* r819cursor_item(T0* a1);
T6 r819is_equal(T819* C,T0* a1);
void r819remove_traversing_cursor(T819* C,T0* a1);
T0* r819item(T819* C,T2 a1);
void r819move_all_cursors_after(T819* C);
void r819add_traversing_cursor(T819* C,T0* a1);
T6 r819se_assigned_from(T0* a1);
void r819out_in_tagged_out_memory(T819* C);
T6 r819same_type(T819* C,T0* a1);
void r819make(T819* C);
T6 r819cursor_after(T0* a1);
T6 r819conforms_to(T819* C,T0* a1);
void r819cursor_forth(T819* C,T0* a1);
void r819cursor_start(T819* C,T0* a1);
T0* r819twin(T819* C);
void r819force_last(T819* C,T0* a1);
T0* r819new_cursor(T819* C);
T6 r819cursor_off(T0* a1);
T0* r281out(T281* C);
T6 r281se_assigned_from(T0* a1);
void r281out_in_tagged_out_memory(T281* C);
T6 r281conforms_to(T281* C,T0* a1);
T6 r281less_than(T0* a1,T0* a2);
T0* r281twin(T281* C);
T0* r697out(T697* C);
T6 r697se_assigned_from(T0* a1);
void r697out_in_tagged_out_memory(T697* C);
T0* r697make(T2 a1);
T6 r697conforms_to(T697* C,T0* a1);
T0* r697resize(T0* a1,T2 a2);
T0* r697twin(T697* C);
T0* r429out(T429* C);
void r429copy(T429* C,T0* a1);
T6 r429se_assigned_from(T0* a1);
void r429out_in_tagged_out_memory(T429* C);
T6 r429off(T429* C);
T6 r429conforms_to(T429* C,T0* a1);
T0* r429twin(T429* C);
T0* r183out(T183* C);
void r183copy(T183* C,T0* a1);
void r183set(T183* C,T0* a1,T6 a2,T6 a3);
T6 r183se_assigned_from(T0* a1);
void r183out_in_tagged_out_memory(T183* C);
void r183make(T183* C,T0* a1);
T6 r183conforms_to(T183* C,T0* a1);
void r183set_after(T183* C);
T0* r183twin(T183* C);
T0* r548out(T548* C);
T6 r548se_assigned_from(T0* a1);
void r548out_in_tagged_out_memory(T548* C);
T0* r548make(T2 a1);
T6 r548conforms_to(T548* C,T0* a1);
T0* r548resize(T0* a1,T2 a2);
T0* r548twin(T548* C);
T0* r367out(T367* C);
void r367copy(T367* C,T0* a1);
T6 r367se_assigned_from(T0* a1);
void r367out_in_tagged_out_memory(T367* C);
T6 r367off(T367* C);
T6 r367conforms_to(T367* C,T0* a1);
T0* r367twin(T367* C);
T0* r831out(T831* C);
T6 r831se_assigned_from(T0* a1);
void r831out_in_tagged_out_memory(T831* C);
T6 r831conforms_to(T831* C,T0* a1);
T0* r831twin(T831* C);
T0* r687out(T687* C);
extern T0*oBC687target_attribute_name;
T0* r687attribute_value(T687* C,T0* a1);
T6 r687se_assigned_from(T0* a1);
extern T0*oBC687as_attribute_name;
void r687out_in_tagged_out_memory(T687* C);
void r687make(T687* C,T0* a1,T0* a2);
T6 r687conforms_to(T687* C,T0* a1);
T0* r687twin(T687* C);
void r687interpreting_element_make(T687* C,T0* a1,T0* a2);
T0* r507out(T507* C);
extern T0*oBC21unix_file_system;
extern T0*oBC17string_;
extern T0*oBC21file_system;
extern int fBC21file_system;
T0* r507file_system(void);
T6 r507se_assigned_from(T0* a1);
T0* r507clone(T0* a1);
void r507out_in_tagged_out_memory(T507* C);
extern T0*oBC22operating_system;
T6 r507conforms_to(T507* C,T0* a1);
void r507execute(T507* C);
T0* r507twin(T507* C);
extern T0*oBC21windows_file_system;
void r507execute_shell(T507* C,T0* a1);
T6 r507is_executable(T507* C);
T0* r251out(T251* C);
void r251build(T251* C);
T2 r251previous_symbol(T251* C,T2 a1);
void r251put(T251* C,T2 a1);
T6 r251se_assigned_from(T0* a1);
void r251out_in_tagged_out_memory(T251* C);
T0* r251to_array(T251* C,T2 a1,T2 a2);
void r251make(T251* C,T2 a1,T2 a2);
void r251equiv_add(T251* C,T0* a1);
T6 r251conforms_to(T251* C,T0* a1);
void r251equiv_initialize(T251* C);
T2 r251equivalence_class(T251* C,T2 a1);
void r251add(T251* C,T0* a1);
T6 r251is_representative(T251* C,T2 a1);
T0* r251twin(T251* C);
void r251initialize(T251* C);
void r251equiv_put(T251* C,T2 a1);
T0* r539out(T539* C);
extern T0*oBC539stylesheet_filename_attribute_name;
extern T0*oBC539format_attribute_name;
T0* r539attribute_value(T539* C,T0* a1);
T0* r539file_system(void);
extern T0*oBC539input_filename_attribute_name;
T6 r539se_assigned_from(T0* a1);
T0* r539elements_by_name(T539* C,T0* a1);
extern T0*oBC69unless_attribute_name;
void r539out_in_tagged_out_memory(T539* C);
void r539make(T539* C,T0* a1,T0* a2);
void r539task_make(T539* C,T0* a1,T0* a2);
T6 r539conforms_to(T539* C,T0* a1);
extern T0*oBC539output_filename_attribute_name;
extern T0*oBC69dir_attribute_name;
extern T0*oBC539indent_attribute_name;
void r539execute(T539* C);
extern T0*oBC539classpath_attribute_name;
T6 r539is_enabled(T539* C);
extern T0*oBC539processor_attribute_value_xalan_java;
extern T0*oBC539extdirs_attribute_name;
extern T0*oBC539processor_attribute_value_xalan_cpp;
T0* r539twin(T539* C);
extern T0*oBC539parameter_element_name;
extern T0*oBC69if_attribute_name;
void r539interpreting_element_make(T539* C,T0* a1,T0* a2);
extern T0*oBC539processor_attribute_name;
T0* r213out(T213* C);
void r213build(T213* C);
void r213build_accept_table(T213* C);
void r213initialize_dfa(T213* C,T0* a1,T2 a2,T2 a3);
T6 r213se_assigned_from(T0* a1);
void r213out_in_tagged_out_memory(T213* C);
void r213put_start_condition(T213* C,T0* a1);
void r213set_nfa_state_ids(T0* a1);
void r213make(T213* C,T0* a1);
void r213build_eof_rules(T213* C,T0* a1,T2 a2,T2 a3);
T6 r213conforms_to(T213* C,T0* a1);
T0* r213twin(T213* C);
void r213build_transitions(T213* C,T0* a1);
void r213initialize(T213* C,T0* a1);
void r213put_eob_state(T213* C);
void r213build_rules(T213* C,T0* a1);
void r213build_nxt_table(T213* C);
T0* r213new_state(T213* C,T0* a1);
T0* r565out(T565* C);
T6 r565se_assigned_from(T0* a1);
void r565out_in_tagged_out_memory(T565* C);
T6 r565conforms_to(T565* C,T0* a1);
void r565execute(T565* C);
T0* r565twin(T565* C);
T0* r208out(T208* C);
void r208wipe_out(T208* C);
void r208match_substring(T208* C,T0* a1,T2 a2,T2 a3);
T6 r208se_assigned_from(T0* a1);
void r208out_in_tagged_out_memory(T208* C);
T6 r208recognizes(T208* C,T0* a1);
T6 r208conforms_to(T208* C,T0* a1);
void r208compile(T208* C,T0* a1,T6 a2);
T0* r208twin(T208* C);
T2 r208longest_end_position(T208* C,T0* a1,T2 a2);
T0* r818out(T818* C);
T6 r818se_assigned_from(T0* a1);
void r818out_in_tagged_out_memory(T818* C);
T6 r818conforms_to(T818* C,T0* a1);
T0* r818twin(T818* C);
T0* r161pathname_from_file_system(T161* C,T0* a1,T0* a2);
T0* r161out(T161* C);
T6 r161is_absolute_pathname(T0* a1);
T0* r161current_working_directory(T161* C);
void r161cd(T161* C,T0* a1);
T6 r161file_exists(T0* a1);
T6 r161directory_exists(T0* a1);
void r161recursive_delete_directory(T0* a1);
T0* r161absolute_pathname(T161* C,T0* a1);
T6 r161se_assigned_from(T0* a1);
T6 r161is_directory_readable(T0* a1);
T0* r161clone(T0* a1);
T0* r161dirname(T0* a1);
void r161delete_file(T0* a1);
void r161out_in_tagged_out_memory(T161* C);
void r161set_current_working_directory(T161* C,T0* a1);
T0* r161cwd(T161* C);
T6 r161same_type(T161* C,T0* a1);
T6 r161is_file_readable(T0* a1);
void r161recursive_create_directory(T0* a1);
extern T0*oBC157tmp_file;
extern int fBC157tmp_file;
T0* r161tmp_file(void);
T6 r161conforms_to(T161* C,T0* a1);
void r161copy_file(T0* a1,T0* a2);
T0* r161string_to_pathname(T0* a1);
void r161rename_file(T0* a1,T0* a2);
T2 r161file_time_stamp(T0* a1);
extern T0*oBC161root_directory;
T6 r161is_root_directory(T0* a1);
T6 r161same_physical_file(T0* a1,T0* a2);
T0* r161pathname_to_string(T0* a1);
T0* r161twin(T161* C);
T0* r161basename(T0* a1);
T0* r161canonical_pathname(T0* a1);
T0* r161pathname(T0* a1,T0* a2);
extern T0*oBC157tmp_directory;
extern int fBC157tmp_directory;
T0* r161tmp_directory(void);
T0* r735out(T735* C);
void r735on_start_tag_finish(T735* C);
void r735_676Pon_start(T735* C);
void r735on_finish(T735* C);
void r735on_content(T735* C,T0* a1);
void r735_676Pon_start_tag(T735* C,T0* a1,T0* a2,T0* a3);
void r735make_null(T735* C);
extern T0*oBC88string_equality_tester;
T6 r735se_assigned_from(T0* a1);
void r735on_start(T735* C);
void r735on_processing_instruction(T735* C,T0* a1,T0* a2);
void r735_676Pon_end_tag(T735* C,T0* a1,T0* a2,T0* a3);
void r735out_in_tagged_out_memory(T735* C);
void r735on_start_tag(T735* C,T0* a1,T0* a2,T0* a3);
void r735on_comment(T735* C,T0* a1);
T0* r735new_string_stack(void);
void r735on_end_tag(T735* C,T0* a1,T0* a2,T0* a3);
T6 r735conforms_to(T735* C,T0* a1);
void r735on_attribute(T735* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r735on_error(T735* C,T0* a1);
T6 r735same_string(T0* a1,T0* a2);
T0* r735twin(T735* C);
T0* r734out(T734* C);
T6 r734se_assigned_from(T0* a1);
void r734out_in_tagged_out_memory(T734* C);
T6 r734conforms_to(T734* C,T0* a1);
T0* r734twin(T734* C);
T0* r261out(T261* C);
T6 r261is_equal(T261* C,T0* a1);
T6 r261has_transition(T261* C);
T6 r261se_assigned_from(T0* a1);
void r261out_in_tagged_out_memory(T261* C);
T6 r261conforms_to(T261* C,T0* a1);
T6 r261_px_60(T261* C,T0* a1);
T6 r261is_accepting_head(T261* C);
T0* r261twin(T261* C);
void r832_747Pmake_scanner(T832* C);
T0* r832_229Pnew_file_buffer(T0* a1);
T2 r832yy_at_beginning_of_line(T832* C);
extern T0*oBC747normalized_newline;
T2 r832start_condition(T832* C);
void r832set_input_buffer(T832* C,T0* a1);
T0* r832text_substring(T832* C,T2 a1,T2 a2);
extern T0*oBC747yy_ec_template;
extern int fBC747yy_ec_template;
T0* r832yy_ec_template(void);
void r832yy_execute_action(T832* C,T2 a1);
extern T0*oBC747yy_def_template;
extern int fBC747yy_def_template;
T0* r832yy_def_template(void);
T3 r832text_item(T832* C,T2 a1);
T6 r832end_of_file(T832* C);
T0* r832system_literal_text(T832* C);
void r832yy_load_input_buffer(T832* C);
void r832make_with_buffer(T832* C,T0* a1);
void r832_227Preset(T832* C);
T2 r832yy_null_trans_state(T832* C,T2 a1);
void r832pop_start_condition(T832* C);
extern T0*oBC747yy_accept_template;
extern int fBC747yy_accept_template;
T0* r832yy_accept_template(void);
void r832read_token(T832* C);
T2 r832yy_previous_state(T832* C);
void r832yy_refill_input_buffer(T832* C);
T0* r832yy_fixed_array(T0* a1);
T6 r832conforms_to(T832* C,T0* a1);
extern T0*oBC747yy_meta_template;
extern int fBC747yy_meta_template;
T0* r832yy_meta_template(void);
void r832set_input_file(T832* C,T0* a1);
extern T0*oBC747yy_base_template;
extern int fBC747yy_base_template;
T0* r832yy_base_template(void);
T0* r832twin(T832* C);
T2 r832text_count(T832* C);
T0* r832new_file_buffer(T832* C,T0* a1);
void r832make_scanner(T832* C);
void r832yy_initialize(T832* C);
void r832reset(T832* C);
void r832push_start_condition(T832* C,T2 a1);
T0* r832text(T832* C);
void r832out_in_tagged_out_memory(T832* C);
extern T0*oBC747yy_nxt_template;
extern int fBC747yy_nxt_template;
T0* r832yy_nxt_template(void);
void r832yy_set_line_column(T832* C);
void r832_227Pread_token(T832* C);
extern T0*oBC229empty_buffer;
extern int fBC229empty_buffer;
T0* r832empty_buffer(void);
extern T0*oBC747yy_chk_template;
extern int fBC747yy_chk_template;
T0* r832yy_chk_template(void);
void r832yy_set_content(T832* C,T0* a1);
void r832set_start_condition(T832* C,T2 a1);
T0* r832out(T832* C);
T6 r832se_assigned_from(T0* a1);
void r832yy_build_tables(T832* C);
void r832_228Pset_input_buffer(T832* C,T0* a1);
T0* r170out(T170* C);
extern T0*oBC170case_insensitive_attribute_name;
extern T0*oBC170no_style_warning_attribute_name;
T0* r170attribute_value(T170* C,T0* a1);
T0* r170file_system(void);
T6 r170se_assigned_from(T0* a1);
extern T0*oBC170creation_procedure_attribute_name;
void r170out_in_tagged_out_memory(T170* C);
extern T0*oBC15std;
void r170make(T170* C,T0* a1,T0* a2);
extern T0*oBC70true_attribute_value;
T6 r170boolean_value(T170* C,T0* a1);
void r170task_make(T170* C,T0* a1,T0* a2);
T6 r170conforms_to(T170* C,T0* a1);
extern T0*oBC170executable_attribute_name;
void r170execute(T170* C);
extern T0*oBC170ace_attribute_name;
T6 r170is_enabled(T170* C);
extern T0*oBC170root_class_attribute_name;
T0* r170attribute_value_or_default(T170* C,T0* a1,T0* a2);
T0* r170twin(T170* C);
extern T0*oBC70false_attribute_value;
void r170interpreting_element_make(T170* C,T0* a1,T0* a2);
extern T0*oBC170clean_attribute_name;
T0* r327out(T327* C);
void r327copy(T327* C,T0* a1);
void r327move_cursors_right(T327* C,T2 a1,T2 a2);
void r327put(T327* C,T0* a1,T2 a2);
void r327remove_traversing_cursor(T327* C,T0* a1);
void r327move_all_cursors_after(T327* C);
void r327make_with_initial(T327* C,T2 a1);
void r327add_traversing_cursor(T327* C,T0* a1);
T6 r327se_assigned_from(T0* a1);
T0* r327clone(T0* a1);
void r327out_in_tagged_out_memory(T327* C);
T0* r327names(T327* C);
void r327add_nfa_to_non_exclusive(T327* C,T0* a1);
T6 r327cursor_before(T0* a1);
void r327make(T327* C,T2 a1);
T6 r327cursor_after(T0* a1);
T6 r327conforms_to(T327* C,T0* a1);
void r327move_right(T327* C,T2 a1,T2 a2);
void r327add_nfa_to_all(T327* C,T0* a1);
T0* r327twin(T327* C);
T0* r327new_cursor(T327* C);
void r327put_last(T327* C,T0* a1);
T6 r327cursor_off(T0* a1);
T0* r675out(T675* C);
void r675_676Pon_content(T675* C,T0* a1);
void r675_676Pon_attribute(T675* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r675on_start_tag_finish(T675* C);
void r675_676Pon_start(T675* C);
void r675on_finish(T675* C);
void r675_676Pon_processing_instruction(T675* C,T0* a1,T0* a2);
void r675on_content(T675* C,T0* a1);
void r675_676Pon_start_tag(T675* C,T0* a1,T0* a2,T0* a3);
void r675make_null(T675* C);
void r675_676Pon_comment(T675* C,T0* a1);
T6 r675se_assigned_from(T0* a1);
void r675on_start(T675* C);
void r675on_processing_instruction(T675* C,T0* a1,T0* a2);
void r675_676Pon_end_tag(T675* C,T0* a1,T0* a2,T0* a3);
void r675out_in_tagged_out_memory(T675* C);
void r675on_start_tag(T675* C,T0* a1,T0* a2,T0* a3);
void r675on_comment(T675* C,T0* a1);
void r675on_end_tag(T675* C,T0* a1,T0* a2,T0* a3);
void r675_676Pon_error(T675* C,T0* a1);
void r675_676Pon_finish(T675* C);
T6 r675conforms_to(T675* C,T0* a1);
void r675on_attribute(T675* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r675_676Pon_start_tag_finish(T675* C);
void r675on_error(T675* C,T0* a1);
T0* r675twin(T675* C);
T0* r513out(T513* C);
T0* r513file_system(void);
T6 r513se_assigned_from(T0* a1);
T0* r513clone(T0* a1);
void r513out_in_tagged_out_memory(T513* C);
void r513_168Pmake(T513* C,T0* a1);
void r513make(T513* C,T0* a1);
T6 r513conforms_to(T513* C,T0* a1);
T6 r513is_validate_executable(T513* C);
T6 r513is_system_executable(T513* C);
void r513execute(T513* C);
T0* r513twin(T513* C);
T6 r513is_cluster_executable(T513* C);
void r513execute_shell(T513* C,T0* a1);
T6 r513is_executable(T513* C);
T0* r779out(T779* C);
extern T0*oBC13arguments;
extern int fBC13arguments;
T0* r779arguments(void);
T6 r779se_assigned_from(T0* a1);
void r779out_in_tagged_out_memory(T779* C);
void r779make(T779* C,T0* a1);
T0* r779message(T779* C,T0* a1);
T6 r779conforms_to(T779* C,T0* a1);
T0* r779twin(T779* C);
T0* r779default_message(T779* C);
T0* r747_229Pnew_file_buffer(T0* a1);
T2 r747yy_at_beginning_of_line(T747* C);
T2 r747start_condition(T747* C);
void r747set_input_buffer(T747* C,T0* a1);
T0* r747text_substring(T747* C,T2 a1,T2 a2);
T0* r747yy_ec_template(void);
void r747yy_execute_action(T747* C,T2 a1);
T0* r747yy_def_template(void);
T3 r747text_item(T747* C,T2 a1);
T6 r747end_of_file(T747* C);
T0* r747system_literal_text(T747* C);
void r747yy_load_input_buffer(T747* C);
void r747make_with_buffer(T747* C,T0* a1);
void r747_227Preset(T747* C);
T2 r747yy_null_trans_state(T747* C,T2 a1);
void r747pop_start_condition(T747* C);
T0* r747yy_accept_template(void);
void r747read_token(T747* C);
T2 r747yy_previous_state(T747* C);
void r747yy_refill_input_buffer(T747* C);
void r747push_start_condition_dtd_ignore(T747* C);
T0* r747yy_fixed_array(T0* a1);
T6 r747conforms_to(T747* C,T0* a1);
T0* r747yy_meta_template(void);
void r747set_input_file(T747* C,T0* a1);
T0* r747yy_base_template(void);
T0* r747twin(T747* C);
T2 r747text_count(T747* C);
T0* r747new_file_buffer(T747* C,T0* a1);
void r747make_scanner(T747* C);
void r747yy_initialize(T747* C);
void r747reset(T747* C);
void r747push_start_condition(T747* C,T2 a1);
T0* r747text(T747* C);
void r747out_in_tagged_out_memory(T747* C);
T0* r747yy_nxt_template(void);
void r747yy_set_line_column(T747* C);
T0* r747empty_buffer(void);
T0* r747yy_chk_template(void);
void r747yy_set_content(T747* C,T0* a1);
void r747set_start_condition(T747* C,T2 a1);
void r747yy_execute_eof_action(T747* C,T2 a1);
T0* r747out(T747* C);
T6 r747se_assigned_from(T0* a1);
void r747yy_build_tables(T747* C);
void r747_228Pset_input_buffer(T747* C,T0* a1);
T0* r516out(T516* C);
extern T0*oBC516tokens_classname_attribute_name;
T0* r516attribute_value(T516* C,T0* a1);
T0* r516file_system(void);
extern T0*oBC516input_filename_attribute_name;
T6 r516se_assigned_from(T0* a1);
extern T0*oBC516separate_actions_attribute_name;
void r516out_in_tagged_out_memory(T516* C);
extern T0*oBC516tokens_filename_attribute_name;
void r516make(T516* C,T0* a1,T0* a2);
T6 r516boolean_value(T516* C,T0* a1);
void r516task_make(T516* C,T0* a1,T0* a2);
T6 r516conforms_to(T516* C,T0* a1);
extern T0*oBC516output_filename_attribute_name;
void r516execute(T516* C);
T6 r516is_enabled(T516* C);
T0* r516twin(T516* C);
extern T0*oBC516verbose_filename_attribute_name;
void r516interpreting_element_make(T516* C,T0* a1,T0* a2);
T0* r619out(T619* C);
T6 r619se_assigned_from(T0* a1);
void r619out_in_tagged_out_memory(T619* C);
T6 r619conforms_to(T619* C,T0* a1);
T0* r619twin(T619* C);
T6 r619is_executable(T619* C);
T0* r182out(T182* C);
T6 r182has_value(T182* C);
T0* r182name(T182* C);
T0* r182attribute_value(T182* C,T0* a1);
extern T0*oBC182name_attribute_name;
T6 r182has_name(T182* C);
T6 r182se_assigned_from(T0* a1);
void r182out_in_tagged_out_memory(T182* C);
extern T0*oBC182value_attribute_name;
void r182make(T182* C,T0* a1,T0* a2);
T0* r182value(T182* C);
T6 r182conforms_to(T182* C,T0* a1);
T6 r182is_enabled(T182* C);
T0* r182twin(T182* C);
T0* r400out(T400* C);
T0* r400arguments(void);
T6 r400se_assigned_from(T0* a1);
void r400out_in_tagged_out_memory(T400* C);
void r400make(T400* C);
T0* r400message(T400* C,T0* a1);
T6 r400conforms_to(T400* C,T0* a1);
T0* r400twin(T400* C);
T0* r400default_message(T400* C);
T0* r566out(T566* C);
T0* r566attribute_value(T566* C,T0* a1);
T0* r566file_system(void);
T6 r566se_assigned_from(T0* a1);
void r566out_in_tagged_out_memory(T566* C);
void r566make(T566* C,T0* a1,T0* a2);
void r566task_make(T566* C,T0* a1,T0* a2);
T6 r566conforms_to(T566* C,T0* a1);
void r566execute(T566* C);
T6 r566is_enabled(T566* C);
T0* r566twin(T566* C);
void r566interpreting_element_make(T566* C,T0* a1,T0* a2);
extern T0*oBC566parent_attribute_name;
T0* r413out(T413* C);
T0* r413arguments(void);
T6 r413se_assigned_from(T0* a1);
void r413out_in_tagged_out_memory(T413* C);
void r413make(T413* C,T0* a1,T2 a2);
T0* r413message(T413* C,T0* a1);
T6 r413conforms_to(T413* C,T0* a1);
T0* r413twin(T413* C);
T0* r413default_message(T413* C);
T0* r715out(T715* C);
void r715put(T715* C,T0* a1,T0* a2);
T6 r715se_assigned_from(T0* a1);
void r715out_in_tagged_out_memory(T715* C);
void r715make(T715* C);
T6 r715conforms_to(T715* C,T0* a1);
T0* r715twin(T715* C);
T0* r673out(T673* C);
T0* r673callbacks_pipe(T0* a1);
T6 r673se_assigned_from(T0* a1);
T0* r673new_tree_builder(void);
void r673out_in_tagged_out_memory(T673* C);
void r673make(T673* C);
T0* r673new_end_tag_checker(void);
T6 r673conforms_to(T673* C,T0* a1);
T0* r673new_stop_on_error(void);
T0* r673twin(T673* C);
T0* r219out(T219* C);
void r219make_null(T219* C);
T6 r219se_assigned_from(T0* a1);
extern T0*oBC220null_output_stream;
extern int fBC220null_output_stream;
T0* r219null_output_stream(void);
void r219out_in_tagged_out_memory(T219* C);
T0* r219message(T0* a1);
T6 r219conforms_to(T219* C,T0* a1);
T0* r219twin(T219* C);
void r219report_info_message(T219* C,T0* a1);
void r219make_standard(T219* C);
void r219report_error_message(T219* C,T0* a1);
T0* r179out(T179* C);
extern T0*oBC179exclude_attribute_name;
extern T0*oBC179directory_attribute_name;
T0* r179attribute_value(T179* C,T0* a1);
T6 r179se_assigned_from(T0* a1);
T0* r179elements_by_name(T179* C,T0* a1);
void r179out_in_tagged_out_memory(T179* C);
extern T0*oBC179include_attribute_name;
void r179make(T179* C,T0* a1,T0* a2);
T6 r179boolean_value(T179* C,T0* a1);
extern T0*oBC179force_attribute_name;
void r179_69Pmake(T179* C,T0* a1,T0* a2);
extern T0*oBC179exclude_element_name;
T6 r179conforms_to(T179* C,T0* a1);
extern T0*oBC179map_element_name;
extern T0*oBC179include_element_name;
T0* r179twin(T179* C);
extern T0*oBC179concat_attribute_name;
T0* r380out(T380* C);
void r380fill(T380* C);
void r380compact_left(T380* C);
void r380set_position(T380* C,T2 a1,T2 a2,T2 a3);
T0* r380name(T380* C);
T6 r380se_assigned_from(T0* a1);
void r380make_from_string(T380* C,T0* a1);
void r380out_in_tagged_out_memory(T380* C);
T6 r380conforms_to(T380* C,T0* a1);
void r380make_from_buffer(T380* C,T0* a1);
void r380resize(T380* C);
void r380make_with_size(T380* C,T0* a1,T2 a2);
T0* r380twin(T380* C);
void r380set_file(T380* C,T0* a1);
void r380flush(T380* C);
T0* r397out(T397* C);
T0* r397arguments(void);
T6 r397se_assigned_from(T0* a1);
void r397out_in_tagged_out_memory(T397* C);
void r397make(T397* C,T0* a1,T2 a2);
T0* r397message(T397* C,T0* a1);
T6 r397conforms_to(T397* C,T0* a1);
T0* r397twin(T397* C);
T0* r397default_message(T397* C);
T0* r402out(T402* C);
T0* r402arguments(void);
T6 r402se_assigned_from(T0* a1);
void r402out_in_tagged_out_memory(T402* C);
void r402make(T402* C);
T0* r402message(T402* C,T0* a1);
T6 r402conforms_to(T402* C,T0* a1);
T0* r402twin(T402* C);
T0* r402default_message(T402* C);
T0* r528out(T528* C);
T6 r528se_assigned_from(T0* a1);
void r528out_in_tagged_out_memory(T528* C);
T6 r528conforms_to(T528* C,T0* a1);
void r528execute(T528* C);
T0* r528twin(T528* C);
T0* r633out(T633* C);
T6 r633se_assigned_from(T0* a1);
void r633out_in_tagged_out_memory(T633* C);
T6 r633conforms_to(T633* C,T0* a1);
T0* r633twin(T633* C);
T6 r633is_executable(T633* C);
T0* r678out(T678* C);
void r678make_old(T678* C,T0* a1,T0* a2);
T6 r678se_assigned_from(T0* a1);
T0* r678elements_by_name(T678* C,T0* a1);
void r678out_in_tagged_out_memory(T678* C);
void r678make(T678* C,T0* a1,T0* a2);
T6 r678conforms_to(T678* C,T0* a1);
extern T0*oBC12exceptions;
extern T0*oBC678parent_element_name;
void r678exit_application(T2 a1,T0* a2);
T0* r678twin(T678* C);
void r678interpreting_element_make(T678* C,T0* a1,T0* a2);
T0* r524out(T524* C);
T0* r524file_system(void);
T6 r524se_assigned_from(T0* a1);
T6 r524is_filename_executable(T524* C);
void r524out_in_tagged_out_memory(T524* C);
T6 r524is_target_executable(T524* C);
T6 r524conforms_to(T524* C,T0* a1);
void r524execute(T524* C);
T0* r524twin(T524* C);
T6 r524is_executable(T524* C);
T0* r679out(T679* C);
T0* r679attribute_value(T679* C,T0* a1);
void r679make_old(T679* C,T0* a1,T0* a2);
T6 r679se_assigned_from(T0* a1);
extern T0*oBC679inherit_attribute_name;
T0* r679elements_by_name(T679* C,T0* a1);
void r679out_in_tagged_out_memory(T679* C);
extern T0*oBC679redefine_element_name;
void r679make(T679* C,T0* a1,T0* a2);
extern T0*oBC679rename_element_name;
T6 r679conforms_to(T679* C,T0* a1);
extern T0*oBC679location_attribute_name;
extern T0*oBC679select_element_name;
void r679exit_application(T2 a1,T0* a2);
T0* r679twin(T679* C);
void r679interpreting_element_make(T679* C,T0* a1,T0* a2);
T0* r710out(T710* C);
void r710on_start_tag_finish(T710* C);
T0* r710next_open_composite(T0* a1);
void r710enable_position_table(T710* C,T0* a1);
void r710on_finish(T710* C);
void r710on_content(T710* C,T0* a1);
void r710make_null(T710* C);
T6 r710se_assigned_from(T0* a1);
void r710on_start(T710* C);
void r710on_processing_instruction(T710* C,T0* a1,T0* a2);
void r710out_in_tagged_out_memory(T710* C);
void r710on_start_tag(T710* C,T0* a1,T0* a2,T0* a3);
void r710handle_position(T710* C,T0* a1);
void r710on_comment(T710* C,T0* a1);
void r710on_end_tag(T710* C,T0* a1,T0* a2,T0* a3);
T6 r710conforms_to(T710* C,T0* a1);
void r710on_attribute(T710* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r710on_error(T710* C,T0* a1);
T0* r710twin(T710* C);
T0* r530out(T530* C);
T0* r530file_system(void);
T6 r530se_assigned_from(T0* a1);
void r530out_in_tagged_out_memory(T530* C);
T6 r530conforms_to(T530* C,T0* a1);
void r530execute(T530* C);
T0* r530twin(T530* C);
T6 r530is_executable(T530* C);
T0* r511out(T511* C);
T6 r511se_assigned_from(T0* a1);
void r511out_in_tagged_out_memory(T511* C);
T6 r511conforms_to(T511* C,T0* a1);
void r511execute(T511* C);
T0* r511twin(T511* C);
T6 r511is_executable(T511* C);
T0* r515out(T515* C);
T0* r515file_system(void);
T6 r515se_assigned_from(T0* a1);
T0* r515clone(T0* a1);
void r515out_in_tagged_out_memory(T515* C);
void r515_168Pmake(T515* C,T0* a1);
void r515make(T515* C,T0* a1);
T6 r515conforms_to(T515* C,T0* a1);
void r515execute(T515* C);
T0* r515twin(T515* C);
void r515execute_shell(T515* C,T0* a1);
T6 r515is_executable(T515* C);
T6 r776se_assigned_from(T0* a1);
void r776out_in_tagged_out_memory(T776* C);
T6 r776conforms_to(T776* C,T0* a1);
T0* r776twin(T776* C);
T0* r822out(T822* C);
void r822make_choice(T822* C);
void r822make_mixed(T822* C);
void r822set_content_mixed(T822* C);
T6 r822se_assigned_from(T0* a1);
T0* r822clone(T0* a1);
void r822out_in_tagged_out_memory(T822* C);
void r822make_empty(T822* C);
void r822set_default(T822* C);
void r822make_any(T822* C);
T6 r822conforms_to(T822* C,T0* a1);
void r822make_sequence(T822* C);
T6 r822is_content_mixed(T822* C);
void r822make_list(T822* C);
void r822make_name(T822* C,T0* a1);
T0* r822twin(T822* C);
void r822set_content_any(T822* C);
T0* r442out(T442* C);
T0* r442arguments(void);
T6 r442se_assigned_from(T0* a1);
void r442out_in_tagged_out_memory(T442* C);
void r442make(T442* C,T0* a1,T2 a2);
T0* r442message(T442* C,T0* a1);
T6 r442conforms_to(T442* C,T0* a1);
T0* r442twin(T442* C);
T0* r442default_message(T442* C);
T0* r603out(T603* C);
T6 r603se_assigned_from(T0* a1);
void r603out_in_tagged_out_memory(T603* C);
T6 r603conforms_to(T603* C,T0* a1);
T0* r603twin(T603* C);
T6 r603is_executable(T603* C);
T0* r526out(T526* C);
T0* r526file_system(void);
T6 r526se_assigned_from(T0* a1);
T0* r526clone(T0* a1);
void r526out_in_tagged_out_memory(T526* C);
void r526_168Pmake(T526* C,T0* a1);
void r526make(T526* C,T0* a1);
T6 r526conforms_to(T526* C,T0* a1);
void r526execute(T526* C);
T0* r526twin(T526* C);
void r526execute_shell(T526* C,T0* a1);
T6 r526is_executable(T526* C);
T0* r387out(T387* C);
T2 r387new_capacity(T2 a1);
void r387copy(T387* C,T0* a1);
T6 r387extendible(T387* C,T2 a1);
T2 r387last(T387* C);
void r387put(T387* C,T2 a1);
void r387remove_traversing_cursor(T387* C,T0* a1);
void r387move_all_cursors_after(T387* C);
void r387add_traversing_cursor(T387* C,T0* a1);
T6 r387se_assigned_from(T0* a1);
T0* r387clone(T0* a1);
void r387out_in_tagged_out_memory(T387* C);
void r387sort(T387* C);
T6 r387arrayed_has(T387* C,T2 a1);
T6 r387cursor_before(T0* a1);
void r387make(T387* C,T2 a1);
void r387convert(T387* C,T0* a1);
T6 r387cursor_after(T0* a1);
extern T0*oBC387sorter;
extern int fBC387sorter;
T0* r387sorter(void);
T6 r387conforms_to(T387* C,T0* a1);
T6 r387has(T387* C,T2 a1);
void r387resize(T387* C,T2 a1);
T0* r387twin(T387* C);
void r387force_last(T387* C,T2 a1);
T0* r387new_cursor(T387* C);
T6 r387cursor_off(T0* a1);
T0* r174out(T174* C);
T0* r174attribute_value(T174* C,T0* a1);
T0* r174file_system(void);
extern T0*oBC174fish_attribute_name;
T6 r174se_assigned_from(T0* a1);
void r174out_in_tagged_out_memory(T174* C);
void r174make(T174* C,T0* a1,T0* a2);
extern T0*oBC174finalize_attribute_name;
T6 r174boolean_value(T174* C,T0* a1);
void r174task_make(T174* C,T0* a1,T0* a2);
T6 r174conforms_to(T174* C,T0* a1);
void r174execute(T174* C);
extern T0*oBC174ace_attribute_name;
T6 r174is_enabled(T174* C);
T0* r174attribute_value_or_default(T174* C,T0* a1,T0* a2);
T0* r174twin(T174* C);
extern T0*oBC174system_attribute_name;
void r174interpreting_element_make(T174* C,T0* a1,T0* a2);
extern T0*oBC174clean_attribute_name;
T0* r181out(T181* C);
void r181remove_fileset_entry(T181* C,T0* a1);
T0* r181item_mapped_filename(T181* C);
void r181set_include_wc_string(T181* C,T0* a1);
T0* r181file_system(void);
T6 r181se_assigned_from(T0* a1);
void r181out_in_tagged_out_memory(T181* C);
void r181scan_internal(T181* C,T0* a1);
void r181make(T181* C,T0* a1);
void r181update_project_variables(T181* C);
void r181forth(T181* C);
T6 r181conforms_to(T181* C,T0* a1);
void r181set_exclude_wc_string(T181* C,T0* a1);
void r181start(T181* C);
void r181execute(T181* C);
T6 r181is_file_outofdate(T0* a1,T0* a2);
T0* r181twin(T181* C);
void r181add_fileset_entry_if_necessary(T181* C,T0* a1);
T0* r181item_filename(T181* C);
T6 r181is_executable(T181* C);
extern int fBC181set_convert_to_filesystem;
void r181set_convert_to_filesystem(T181* C,T6 a1);
T0* r529out(T529* C);
extern T0*oBC529directory_attribute_name;
T0* r529attribute_value(T529* C,T0* a1);
T0* r529file_system(void);
T6 r529se_assigned_from(T0* a1);
void r529out_in_tagged_out_memory(T529* C);
void r529make(T529* C,T0* a1,T0* a2);
void r529task_make(T529* C,T0* a1,T0* a2);
T6 r529conforms_to(T529* C,T0* a1);
void r529execute(T529* C);
T6 r529is_enabled(T529* C);
T0* r529twin(T529* C);
void r529interpreting_element_make(T529* C,T0* a1,T0* a2);
T0* r906out(T906* C);
T6 r906se_assigned_from(T0* a1);
void r906out_in_tagged_out_memory(T906* C);
void r906make(T906* C,T0* a1,T0* a2);
T6 r906conforms_to(T906* C,T0* a1);
T0* r906twin(T906* C);
T0* r326out(T326* C);
void r326copy(T326* C,T0* a1);
T6 r326se_assigned_from(T0* a1);
T0* r326clone(T0* a1);
void r326out_in_tagged_out_memory(T326* C);
T0* r326_ix_12443124(T326* C);
void r326make_symbol(T326* C,T2 a1,T6 a2);
T0* r326_px_38(T326* C,T0* a1);
T6 r326conforms_to(T326* C,T0* a1);
T0* r326_px_124(T326* C,T0* a1);
T0* r326_ix_12442124(T326* C);
T0* r326twin(T326* C);
void r326make_epsilon(T326* C,T6 a1);
T0* r326_ix_12463124(T326* C);
void r326make_symbol_class(T326* C,T0* a1,T6 a2);
T6 r325se_assigned_from(T0* a1);
void r325out_in_tagged_out_memory(T325* C);
T6 r325conforms_to(T325* C,T0* a1);
T0* r325twin(T325* C);
T0* r780out(T780* C);
T0* r780arguments(void);
T6 r780se_assigned_from(T0* a1);
void r780out_in_tagged_out_memory(T780* C);
void r780make(T780* C,T0* a1);
T0* r780message(T780* C,T0* a1);
T6 r780conforms_to(T780* C,T0* a1);
T0* r780twin(T780* C);
T0* r780default_message(T780* C);
T0* r533out(T533* C);
T0* r533attribute_value(T533* C,T0* a1);
extern T0*oBC533file_attribute_name;
extern T0*oBC533fileset_element_name;
T0* r533file_system(void);
T6 r533se_assigned_from(T0* a1);
extern T0*oBC533to_directory_attribute_name;
void r533out_in_tagged_out_memory(T533* C);
extern T0*oBC533to_file_attribute_name;
void r533make(T533* C,T0* a1,T0* a2);
T6 r533boolean_value(T533* C,T0* a1);
extern T0*oBC533force_attribute_name;
void r533task_make(T533* C,T0* a1,T0* a2);
T6 r533conforms_to(T533* C,T0* a1);
void r533execute(T533* C);
T6 r533is_enabled(T533* C);
T0* r533twin(T533* C);
void r533interpreting_element_make(T533* C,T0* a1,T0* a2);
T0* r160pathname_from_file_system(T160* C,T0* a1,T0* a2);
T0* r160out(T160* C);
T6 r160is_absolute_pathname(T0* a1);
T0* r160current_working_directory(T160* C);
void r160cd(T160* C,T0* a1);
T6 r160file_exists(T0* a1);
T6 r160directory_exists(T0* a1);
void r160recursive_delete_directory(T0* a1);
T0* r160absolute_pathname(T160* C,T0* a1);
T0* r160current_drive(T160* C);
T6 r160se_assigned_from(T0* a1);
T6 r160is_directory_readable(T0* a1);
T0* r160clone(T0* a1);
T0* r160dirname(T0* a1);
void r160delete_file(T0* a1);
void r160out_in_tagged_out_memory(T160* C);
void r160set_current_working_directory(T160* C,T0* a1);
T0* r160cwd(T160* C);
T6 r160same_type(T160* C,T0* a1);
T6 r160is_file_readable(T0* a1);
void r160recursive_create_directory(T0* a1);
T0* r160tmp_file(void);
T6 r160conforms_to(T160* C,T0* a1);
void r160copy_file(T0* a1,T0* a2);
T0* r160string_to_pathname(T0* a1);
void r160rename_file(T0* a1,T0* a2);
T2 r160file_time_stamp(T0* a1);
extern T0*oBC160root_directory;
T6 r160is_relative_pathname(T0* a1);
T6 r160is_root_directory(T0* a1);
T6 r160same_physical_file(T0* a1,T0* a2);
T0* r160pathname_to_string(T0* a1);
T0* r160twin(T160* C);
T0* r160canonical_pathname(T0* a1);
T0* r160pathname(T0* a1,T0* a2);
T0* r160tmp_directory(void);
T0* r798out(T798* C);
T6 r798is_closed(T798* C);
void r798old_close(T798* C);
T2 r798read_to_string(T798* C,T0* a1,T2 a2,T2 a3);
void r798open_read(T798* C);
T6 r798se_assigned_from(T0* a1);
void r798old_read_character(T798* C);
T6 r798old_end_of_file(T798* C);
void r798out_in_tagged_out_memory(T798* C);
void r798read_character(T798* C);
void r798close(T798* C);
void r798make(T798* C,T0* a1);
T6 r798conforms_to(T798* C,T0* a1);
void r798connect_to(T798* C,T0* a1);
void r798read_string(T798* C,T2 a1);
T0* r798twin(T798* C);
void r798old_open_read(T798* C);
T0* r221out(T221* C);
T6 r221se_assigned_from(T0* a1);
void r221out_in_tagged_out_memory(T221* C);
void r221make(T221* C);
T6 r221conforms_to(T221* C,T0* a1);
T0* r221twin(T221* C);
void r221create_equiv_classes(T221* C);
T0* r823out(T823* C);
T0* r823last(T823* C);
T6 r823is_equal(T823* C,T0* a1);
T0* r823item(T823* C,T2 a1);
T6 r823se_assigned_from(T0* a1);
T0* r823clone(T0* a1);
void r823out_in_tagged_out_memory(T823* C);
void r823make(T823* C);
T2 r823hash_code(T823* C);
T6 r823conforms_to(T823* C,T0* a1);
T6 r823same_string(T0* a1,T0* a2);
T0* r823twin(T823* C);
void r823force_last(T823* C,T0* a1);
T0* r823ns_prefix(T823* C);
T0* r823local_part(T823* C);
T6 r823is_namespace_name(T823* C);
T0* r823new_string_bilinked_list(void);
T0* r523out(T523* C);
T0* r523attribute_value(T523* C,T0* a1);
extern T0*oBC523start_target_attribute_name;
T0* r523file_system(void);
T6 r523se_assigned_from(T0* a1);
void r523out_in_tagged_out_memory(T523* C);
extern T0*oBC523filename_attribute_name;
void r523make(T523* C,T0* a1,T0* a2);
T6 r523boolean_value(T523* C,T0* a1);
void r523task_make(T523* C,T0* a1,T0* a2);
T6 r523conforms_to(T523* C,T0* a1);
void r523execute(T523* C);
T6 r523is_enabled(T523* C);
extern T0*oBC523reuse_variables_attribute_name;
T0* r523twin(T523* C);
void r523interpreting_element_make(T523* C,T0* a1,T0* a2);
T0* r517out(T517* C);
T0* r517file_system(void);
T6 r517se_assigned_from(T0* a1);
T0* r517clone(T0* a1);
void r517out_in_tagged_out_memory(T517* C);
void r517_168Pmake(T517* C,T0* a1);
void r517make(T517* C,T0* a1);
T6 r517conforms_to(T517* C,T0* a1);
void r517execute(T517* C);
T0* r517twin(T517* C);
void r517execute_shell(T517* C,T0* a1);
T6 r517is_executable(T517* C);
T0* r519out(T519* C);
T0* r519file_system(void);
T6 r519se_assigned_from(T0* a1);
T0* r519clone(T0* a1);
void r519out_in_tagged_out_memory(T519* C);
void r519create_directory(T519* C,T0* a1);
void r519_168Pmake(T519* C,T0* a1);
T6 r519is_file_executable(T519* C);
void r519make(T519* C,T0* a1);
T6 r519conforms_to(T519* C,T0* a1);
void r519execute(T519* C);
T6 r519is_file_outofdate(T0* a1,T0* a2);
T0* r519twin(T519* C);
void r519execute_shell(T519* C,T0* a1);
T6 r519is_executable(T519* C);
T6 r519is_fileset_executable(T519* C);
T0* r709out(T709* C);
T6 r709se_assigned_from(T0* a1);
void r709out_in_tagged_out_memory(T709* C);
void r709make(T709* C,T0* a1,T0* a2);
T6 r709conforms_to(T709* C,T0* a1);
T0* r709twin(T709* C);
T0* r468out(T468* C);
T6 r468se_assigned_from(T0* a1);
void r468out_in_tagged_out_memory(T468* C);
T6 r468conforms_to(T468* C,T0* a1);
void r468put_line(T0* a1);
T0* r468twin(T468* C);
T0* r178out(T178* C);
T0* r178attribute_value(T178* C,T0* a1);
extern T0*oBC178fileset_element_name;
T0* r178file_system(void);
T6 r178se_assigned_from(T0* a1);
void r178out_in_tagged_out_memory(T178* C);
void r178make(T178* C,T0* a1,T0* a2);
T6 r178boolean_value(T178* C,T0* a1);
void r178task_make(T178* C,T0* a1,T0* a2);
T6 r178conforms_to(T178* C,T0* a1);
extern T0*oBC178executable_attribute_name;
void r178execute(T178* C);
T6 r178is_enabled(T178* C);
T0* r178twin(T178* C);
extern T0*oBC178accept_errors_attribute_name;
void r178interpreting_element_make(T178* C,T0* a1,T0* a2);
T0* r778out(T778* C);
T6 r778se_assigned_from(T0* a1);
void r778out_in_tagged_out_memory(T778* C);
T6 r778conforms_to(T778* C,T0* a1);
void r778from_hexadecimal(T778* C,T0* a1);
extern T0*oBC52utf8;
T0* r778twin(T778* C);
T0* r778to_utf8(T778* C);
T6 r778is_valid(T778* C);
void r778from_decimal(T778* C,T0* a1);
extern T0*oBC46unicode;
T0* r401out(T401* C);
T0* r401arguments(void);
T6 r401se_assigned_from(T0* a1);
void r401out_in_tagged_out_memory(T401* C);
void r401make(T401* C);
T0* r401message(T401* C,T0* a1);
T6 r401conforms_to(T401* C,T0* a1);
T0* r401twin(T401* C);
T0* r401default_message(T401* C);
T0* r534out(T534* C);
T6 r534is_fileset_to_directory_executable(T534* C);
T0* r534file_system(void);
T6 r534se_assigned_from(T0* a1);
void r534out_in_tagged_out_memory(T534* C);
void r534create_directory(T534* C,T0* a1);
void r534create_directory_for_pathname(T534* C,T0* a1);
T6 r534conforms_to(T534* C,T0* a1);
void r534copy_file(T534* C,T0* a1,T0* a2);
void r534execute(T534* C);
T6 r534is_file_outofdate(T0* a1,T0* a2);
T0* r534twin(T534* C);
T6 r534is_file_to_directory_executable(T534* C);
T6 r534is_file_to_file_executable(T534* C);
T6 r534is_executable(T534* C);
T0* r562out(T562* C);
extern T0*oBC562source_attribute_name;
extern T0*oBC562target_attribute_name;
T0* r562attribute_value(T562* C,T0* a1);
extern T0*oBC562fileset_element_name;
T0* r562file_system(void);
T6 r562se_assigned_from(T0* a1);
void r562out_in_tagged_out_memory(T562* C);
extern T0*oBC562true_value_attribute_name;
void r562make(T562* C,T0* a1,T0* a2);
void r562task_make(T562* C,T0* a1,T0* a2);
T6 r562conforms_to(T562* C,T0* a1);
void r562execute(T562* C);
T6 r562is_enabled(T562* C);
extern T0*oBC562false_value_attribute_name;
T0* r562twin(T562* C);
void r562interpreting_element_make(T562* C,T0* a1,T0* a2);
extern T0*oBC562variable_attribute_name;
T0* r328out(T328* C);
T6 r328se_assigned_from(T0* a1);
void r328out_in_tagged_out_memory(T328* C);
void r328make(T328* C,T0* a1,T2 a2,T6 a3);
T6 r328conforms_to(T328* C,T0* a1);
T0* r328twin(T328* C);
T0* r655out(T655* C);
void r655disconnect(T655* C);
T6 r655se_assigned_from(T0* a1);
void r655out_in_tagged_out_memory(T655* C);
T6 r655conforms_to(T655* C,T0* a1);
void r655connect_to(T655* C,T0* a1);
T0* r655twin(T655* C);
T0* r793out(T793* C);
T6 r793is_closed(T793* C);
void r793old_close(T793* C);
T6 r793se_assigned_from(T0* a1);
void r793out_in_tagged_out_memory(T793* C);
void r793old_open_write(T793* C);
void r793close(T793* C);
void r793make(T793* C,T0* a1);
void r793old_put_string(T793* C,T0* a1);
T6 r793conforms_to(T793* C,T0* a1);
T0* r793twin(T793* C);
void r793open_write(T793* C);
T0* r686out(T686* C);
extern T0*oBC686target_attribute_name;
T0* r686attribute_value(T686* C,T0* a1);
T6 r686se_assigned_from(T0* a1);
void r686out_in_tagged_out_memory(T686* C);
void r686make(T686* C,T0* a1,T0* a2);
T6 r686conforms_to(T686* C,T0* a1);
T0* r686twin(T686* C);
void r686interpreting_element_make(T686* C,T0* a1,T0* a2);
T0* r521out(T521* C);
extern T0*oBC521define_element_name;
T0* r521attribute_value(T521* C,T0* a1);
T0* r521file_system(void);
T6 r521se_assigned_from(T0* a1);
extern T0*oBC521config_filename_attribute_name;
T0* r521elements_by_name(T521* C,T0* a1);
void r521out_in_tagged_out_memory(T521* C);
void r521make(T521* C,T0* a1,T0* a2);
void r521task_make(T521* C,T0* a1,T0* a2);
T6 r521conforms_to(T521* C,T0* a1);
extern T0*oBC521compile_attribute_name;
void r521execute(T521* C);
T6 r521is_enabled(T521* C);
T0* r521twin(T521* C);
void r521interpreting_element_make(T521* C,T0* a1,T0* a2);
T0* r236out(T236* C);
void r236make_default(T236* C,T2 a1);
T6 r236se_assigned_from(T0* a1);
void r236out_in_tagged_out_memory(T236* C);
extern T0*oBC236dummy_pattern;
extern int fBC236dummy_pattern;
T0* r236dummy_pattern(void);
T6 r236conforms_to(T236* C,T0* a1);
T6 r236_px_60(T236* C,T0* a1);
extern T0*oBC236dummy_action;
extern int fBC236dummy_action;
T0* r236dummy_action(void);
T0* r236twin(T236* C);
T0* r535out(T535* C);
T0* r535attribute_value(T535* C,T0* a1);
extern T0*oBC535file_attribute_name;
extern T0*oBC535fileset_element_name;
T0* r535file_system(void);
T6 r535se_assigned_from(T0* a1);
extern T0*oBC535to_directory_attribute_name;
void r535out_in_tagged_out_memory(T535* C);
extern T0*oBC535to_file_attribute_name;
void r535make(T535* C,T0* a1,T0* a2);
void r535task_make(T535* C,T0* a1,T0* a2);
T6 r535conforms_to(T535* C,T0* a1);
void r535execute(T535* C);
T6 r535is_enabled(T535* C);
T0* r535twin(T535* C);
void r535interpreting_element_make(T535* C,T0* a1,T0* a2);
T0* r699out(T699* C);
T6 r699is_closed(T699* C);
T6 r699old_end_of_input(T699* C);
void r699open_read(T699* C);
T0* r699file_system(void);
T6 r699se_assigned_from(T0* a1);
T0* r699clone(T0* a1);
void r699out_in_tagged_out_memory(T699* C);
void r699create_directory(T699* C);
T6 r699is_open_read(T699* C);
void r699close(T699* C);
void r699make(T699* C,T0* a1);
T6 r699exists(T699* C);
void r699recursive_create_directory(T699* C);
void r699read_entry(T699* C);
T6 r699conforms_to(T699* C,T0* a1);
void r699delete(T699* C);
T0* r699twin(T699* C);
void r699recursive_delete(T699* C);
T6 r699is_readable(T699* C);
T0* r685out(T685* C);
extern T0*oBC685target_attribute_name;
T0* r685attribute_value(T685* C,T0* a1);
T6 r685se_assigned_from(T0* a1);
void r685out_in_tagged_out_memory(T685* C);
void r685make(T685* C,T0* a1,T0* a2);
T6 r685conforms_to(T685* C,T0* a1);
T0* r685twin(T685* C);
void r685interpreting_element_make(T685* C,T0* a1,T0* a2);
T0* r537out(T537* C);
T0* r537attribute_value(T537* C,T0* a1);
T0* r537file_system(void);
extern T0*oBC537name_attribute_name;
T6 r537se_assigned_from(T0* a1);
void r537out_in_tagged_out_memory(T537* C);
extern T0*oBC537value_attribute_name;
void r537make(T537* C,T0* a1,T0* a2);
void r537task_make(T537* C,T0* a1,T0* a2);
T6 r537conforms_to(T537* C,T0* a1);
void r537execute(T537* C);
T6 r537is_enabled(T537* C);
T0* r537twin(T537* C);
void r537interpreting_element_make(T537* C,T0* a1,T0* a2);
T0* r175out(T175* C);
T6 r175is_cleanable(T175* C);
T0* r175file_system(void);
T6 r175se_assigned_from(T0* a1);
T0* r175clone(T0* a1);
void r175out_in_tagged_out_memory(T175* C);
void r175execute_clean(T175* C);
void r175execute_compile(T175* C);
T6 r175conforms_to(T175* C,T0* a1);
T6 r175is_compilable(T175* C);
void r175execute(T175* C);
T0* r175twin(T175* C);
void r175execute_shell(T175* C,T0* a1);
T6 r175is_executable(T175* C);
T0* r172out(T172* C);
T0* r172attribute_value(T172* C,T0* a1);
T0* r172file_system(void);
T6 r172se_assigned_from(T0* a1);
void r172out_in_tagged_out_memory(T172* C);
void r172make(T172* C,T0* a1,T0* a2);
extern T0*oBC172finalize_attribute_name;
T6 r172boolean_value(T172* C,T0* a1);
void r172task_make(T172* C,T0* a1,T0* a2);
T6 r172conforms_to(T172* C,T0* a1);
void r172execute(T172* C);
extern T0*oBC172ace_attribute_name;
T6 r172is_enabled(T172* C);
T0* r172attribute_value_or_default(T172* C,T0* a1,T0* a2);
T0* r172twin(T172* C);
extern T0*oBC172finish_freezing_attribute_name;
extern T0*oBC172system_attribute_name;
void r172interpreting_element_make(T172* C,T0* a1,T0* a2);
extern T0*oBC172clean_attribute_name;
T0* r381out(T381* C);
void r381set_position(T381* C,T2 a1,T2 a2,T2 a3);
T0* r381name(void);
T6 r381se_assigned_from(T0* a1);
void r381out_in_tagged_out_memory(T381* C);
void r381make(T381* C,T0* a1);
T6 r381conforms_to(T381* C,T0* a1);
void r381make_from_buffer(T381* C,T0* a1);
T0* r381twin(T381* C);
T0* r483out(T483* C);
T6 r483is_equal(T483* C,T0* a1);
T0* r483file_system(void);
T6 r483se_assigned_from(T0* a1);
void r483out_in_tagged_out_memory(T483* C);
void r483make(T483* C,T0* a1,T0* a2);
T2 r483hash_code(T483* C);
T6 r483conforms_to(T483* C,T0* a1);
T0* r483mapped_filename_converted(T483* C);
T0* r483filename_converted(T483* C);
T0* r483twin(T483* C);
T0* r396out(T396* C);
T0* r396arguments(void);
T6 r396se_assigned_from(T0* a1);
void r396out_in_tagged_out_memory(T396* C);
void r396make(T396* C,T0* a1,T2 a2,T0* a3);
T0* r396message(T396* C,T0* a1);
T6 r396conforms_to(T396* C,T0* a1);
T0* r396twin(T396* C);
T0* r396default_message(T396* C);
T0* r443out(T443* C);
T6 r443se_assigned_from(T0* a1);
void r443out_in_tagged_out_memory(T443* C);
T6 r443conforms_to(T443* C,T0* a1);
T0* r443twin(T443* C);
T0* r531out(T531* C);
extern T0*oBC531directory_attribute_name;
T0* r531attribute_value(T531* C,T0* a1);
extern T0*oBC531file_attribute_name;
extern T0*oBC531fileset_element_name;
T0* r531file_system(void);
T6 r531se_assigned_from(T0* a1);
void r531out_in_tagged_out_memory(T531* C);
void r531make(T531* C,T0* a1,T0* a2);
void r531task_make(T531* C,T0* a1,T0* a2);
T6 r531conforms_to(T531* C,T0* a1);
void r531execute(T531* C);
T6 r531is_enabled(T531* C);
T0* r531twin(T531* C);
void r531interpreting_element_make(T531* C,T0* a1,T0* a2);
T0* r820out(T820* C);
T6 r820se_assigned_from(T0* a1);
T0* r820clone(T0* a1);
void r820set_default_value(T820* C,T0* a1);
void r820out_in_tagged_out_memory(T820* C);
void r820make(T820* C);
void r820copy_default(T820* C,T0* a1);
T6 r820conforms_to(T820* C,T0* a1);
T0* r820twin(T820* C);
void r820set_value_fixed(T820* C,T0* a1);
T0* r522out(T522* C);
T0* r522file_system(void);
T6 r522se_assigned_from(T0* a1);
T0* r522clone(T0* a1);
void r522out_in_tagged_out_memory(T522* C);
void r522_168Pmake(T522* C,T0* a1);
void r522make(T522* C,T0* a1);
T6 r522conforms_to(T522* C,T0* a1);
void r522execute(T522* C);
T0* r522twin(T522* C);
void r522execute_shell(T522* C,T0* a1);
T6 r522is_executable(T522* C);
T0* r736out(T736* C);
T0* r736new_namespace_name(void);
void r736on_start_tag_finish(T736* C);
T6 r736syntax_error(T736* C);
extern T0*oBC736yycheck_template;
extern int fBC736yycheck_template;
T0* r736yycheck_template(void);
void r736_744Pon_error(T736* C,T0* a1);
void r736process_entity_scanner(T736* C,T0* a1);
T0* r736source(T736* C);
void r736on_doctype(T736* C,T0* a1,T0* a2,T6 a3);
void r736when_entity_declared(T736* C,T0* a1,T0* a2);
void r736on_finish(T736* C);
void r736process_entity(T736* C,T0* a1);
void r736read_token(T736* C);
void r736on_content(T736* C,T0* a1);
T0* r736new_entities_table(void);
void r736yy_build_parser_tables(T736* C);
void r736when_external_dtd(T736* C,T0* a1);
T6 r736se_assigned_from(T0* a1);
void r736process_attribute_entity(T736* C,T0* a1);
T0* r736clone(T0* a1);
void r736on_start(T736* C);
extern T0*oBC736yytable_template;
extern int fBC736yytable_template;
T0* r736yytable_template(void);
T0* r736new_unicode_string_from_utf8(T0* a1);
T0* r736new_dtd_attribute_content(void);
void r736on_processing_instruction(T736* C,T0* a1,T0* a2);
T0* r736external_entity_to_string(T736* C,T0* a1);
extern T0*oBC737shared_empty_string;
void r736make_parser(T736* C);
void r736out_in_tagged_out_memory(T736* C);
T0* r736yyfixed_array(T0* a1);
extern T0*oBC736yypgoto_template;
extern int fBC736yypgoto_template;
T0* r736yypgoto_template(void);
void r736on_attribute_declarations(T736* C,T0* a1,T0* a2);
T6 r736is_string_mode_unicode(T736* C);
void r736check_void(T736* C);
T0* r736position(T736* C);
void r736on_start_tag(T736* C,T0* a1,T0* a2,T0* a3);
void r736make(T736* C);
T0* r736entity_referenced_in_entity_value(T736* C,T0* a1);
void r736on_comment(T736* C,T0* a1);
void r736parse_from_stream(T736* C,T0* a1);
T2 r736byte_position(T736* C);
extern T0*oBC736yypact_template;
extern int fBC736yypact_template;
T0* r736yypact_template(void);
T6 r736is_correct(T736* C);
void r736on_end_tag(T736* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC736yydefact_template;
extern int fBC736yydefact_template;
T0* r736yydefact_template(void);
void r736set_element_repetition(T0* a1,T3 a2);
T0* r736yytype1(T0* a1);
void r736yy_clear_all(T736* C);
T6 r736conforms_to(T736* C,T0* a1);
T0* r736yytype2(T0* a1);
T0* r736yytype3(T0* a1);
T0* r736yytype4(T0* a1);
T0* r736yytype5(T0* a1);
T3 r736yytype6(T0* a1);
void r736on_entity_declaration(T736* C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5);
T0* r736yytype7(T0* a1);
T0* r736yytype8(T0* a1);
void r736on_element_declaration(T736* C,T0* a1,T0* a2);
T0* r736yytype9(T0* a1);
T0* r736new_name_set(void);
T0* r736defined_entity_referenced(T736* C,T0* a1);
void r736on_attribute(T736* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r736reset(T736* C);
T0* r736new_dtd_attribute_content_list(void);
T0* r736new_dtd_external_id(void);
extern T0*oBC736yyr1_template;
extern int fBC736yyr1_template;
T0* r736yyr1_template(void);
void r736on_notation_declaration(T736* C,T0* a1,T0* a2);
void r736on_error(T736* C,T0* a1);
void r736parse(T736* C);
T0* r736last_error_extended_description(T736* C);
T0* r736twin(T736* C);
void r736yy_do_action(T736* C,T2 a1);
T0* r736new_external_entity(T0* a1);
extern T0*oBC736yytranslate_template;
extern int fBC736yytranslate_template;
T0* r736yytranslate_template(void);
T0* r736element_name(T736* C,T0* a1);
void r736force_error(T736* C,T0* a1);
void r736on_attribute_declaration(T736* C,T0* a1,T0* a2,T0* a3);
T6 r736is_string_mode_ascii(T736* C);
T2 r736line(T736* C);
T0* r736new_string_bilinked_list(void);
T2 r736column(T736* C);
void r736when_pe_entity_declared(T736* C,T0* a1,T0* a2);
T0* r736onstring(T736* C,T0* a1);
void r736process_pe_entity(T736* C,T0* a1);
T2 r736yy_translate(T736* C,T2 a1);
extern T0*oBC736yyr2_template;
extern int fBC736yyr2_template;
T0* r736yyr2_template(void);
void r736make_scanner(T736* C);
extern T0*oBC736yydefgoto_template;
extern int fBC736yydefgoto_template;
T0* r736yydefgoto_template(void);
T0* r736new_literal_entity(T0* a1);
void r736clear_stacks(T736* C);
T0* r666out(T666* C);
void r666copy(T666* C,T0* a1);
void r666wipe_out(T666* C);
void r666remove_traversing_cursor(T666* C,T0* a1);
void r666cursor_go_after(T666* C,T0* a1);
void r666move_all_cursors_after(T666* C);
void r666add_traversing_cursor(T666* C,T0* a1);
T6 r666se_assigned_from(T0* a1);
void r666out_in_tagged_out_memory(T666* C);
T6 r666conforms_to(T666* C,T0* a1);
void r666make_list(T666* C);
void r666cursor_forth(T666* C,T0* a1);
void r666cursor_start(T666* C,T0* a1);
T0* r666twin(T666* C);
void r666force_last(T666* C,T0* a1);
T0* r666new_cursor(T666* C);
void r666make_composite(T666* C);
T6 r666cursor_off(T0* a1);
void r666set_root_element(T666* C,T0* a1);
T0* r399out(T399* C);
T0* r399arguments(void);
T6 r399se_assigned_from(T0* a1);
void r399out_in_tagged_out_memory(T399* C);
void r399make(T399* C,T0* a1,T2 a2,T0* a3);
T0* r399message(T399* C,T0* a1);
T6 r399conforms_to(T399* C,T0* a1);
T0* r399twin(T399* C);
T0* r399default_message(T399* C);
T0* r536out(T536* C);
void r536move_file(T536* C,T0* a1,T0* a2);
T6 r536is_fileset_to_directory_executable(T536* C);
T0* r536file_system(void);
T6 r536se_assigned_from(T0* a1);
void r536out_in_tagged_out_memory(T536* C);
void r536create_directory(T536* C,T0* a1);
void r536create_directory_for_pathname(T536* C,T0* a1);
T6 r536conforms_to(T536* C,T0* a1);
void r536execute(T536* C);
T0* r536twin(T536* C);
T6 r536is_file_to_directory_executable(T536* C);
T6 r536is_file_to_file_executable(T536* C);
T6 r536is_executable(T536* C);
T0* r651out(T651* C);
T0* r651attribute_value(T651* C,T0* a1);
extern T0*oBC651inherit_element_name;
extern T0*oBC651name_attribute_name;
T6 r651se_assigned_from(T0* a1);
extern T0*oBC651inherit_attribute_name;
T0* r651elements_by_name(T651* C,T0* a1);
void r651out_in_tagged_out_memory(T651* C);
extern T0*oBC70description_element_name;
T6 r651has_inherit_element(T651* C);
extern T0*oBC651default_attribute_name;
void r651make(T651* C,T0* a1,T0* a2,T0* a3,T0* a4);
void r651load_parent_projects(T651* C);
T6 r651conforms_to(T651* C,T0* a1);
extern T0*oBC651target_element_name;
void r651exit_application(T2 a1,T0* a2);
T0* r651twin(T651* C);
T0* r508out(T508* C);
T0* r508attribute_value(T508* C,T0* a1);
T0* r508file_system(void);
extern T0*oBC508name_attribute_name;
T6 r508se_assigned_from(T0* a1);
void r508out_in_tagged_out_memory(T508* C);
extern T0*oBC508value_attribute_name;
void r508make(T508* C,T0* a1,T0* a2);
void r508task_make(T508* C,T0* a1,T0* a2);
T6 r508conforms_to(T508* C,T0* a1);
void r508execute(T508* C);
T6 r508is_enabled(T508* C);
T0* r508twin(T508* C);
void r508interpreting_element_make(T508* C,T0* a1,T0* a2);
T0* r233out(T233* C);
T6 r233is_equal(T233* C,T0* a1);
extern T0*oBC233rule_sorter;
extern int fBC233rule_sorter;
T0* r233rule_sorter(void);
T6 r233se_assigned_from(T0* a1);
extern T0*oBC233bubble_sorter;
extern int fBC233bubble_sorter;
T0* r233bubble_sorter(void);
void r233out_in_tagged_out_memory(T233* C);
T6 r233same_type(T233* C,T0* a1);
void r233make(T233* C,T0* a1,T2 a2,T2 a3);
void r233partition(T233* C,T0* a1);
T6 r233conforms_to(T233* C,T0* a1);
T6 r233is_accepting(T233* C);
T0* r233twin(T233* C);
T0* r233new_state(T233* C,T2 a1);
T0* r506out(T506* C);
T0* r506attribute_value(T506* C,T0* a1);
T0* r506file_system(void);
T6 r506se_assigned_from(T0* a1);
void r506out_in_tagged_out_memory(T506* C);
void r506make(T506* C,T0* a1,T0* a2);
void r506task_make(T506* C,T0* a1,T0* a2);
T6 r506conforms_to(T506* C,T0* a1);
extern T0*oBC506executable_attribute_name;
void r506execute(T506* C);
T6 r506is_enabled(T506* C);
T0* r506twin(T506* C);
extern T0*oBC506source_filename_attribute_name;
void r506interpreting_element_make(T506* C,T0* a1,T0* a2);
T0* r25out(T25* C);
void r25calculate_depend_order(T25* C,T0* a1);
void r25build(T25* C);
void r25trace(T25* C,T0* a1);
void r25build_target(T25* C,T0* a1);
T6 r25se_assigned_from(T0* a1);
void r25out_in_tagged_out_memory(T25* C);
void r25log(T0* a1);
void r25make(T25* C,T0* a1,T0* a2);
T6 r25conforms_to(T25* C,T0* a1);
T0* r25target_name(T25* C,T0* a1);
void r25trace_debug(T25* C,T0* a1);
void r25execute_target(T25* C,T0* a1,T6 a2,T6 a3);
void r25merge_in_parent_projects(T25* C);
void r25exit_application(T2 a1,T0* a2);
T0* r25twin(T25* C);
T0* r901out(T901* C);
T2 r901new_capacity(T2 a1);
void r901copy(T901* C,T0* a1);
void r901force(T901* C,T0* a1,T0* a2);
void r901make_clashes(T901* C,T2 a1);
T0* r901cursor_item(T901* C,T0* a1);
void r901search_position(T901* C,T0* a1);
void r901remove_traversing_cursor(T901* C,T0* a1);
void r901clone_slots(T901* C);
void r901keys_resize(T901* C,T2 a1);
void r901clone_clashes(T901* C);
void r901move_all_cursors_after(T901* C);
void r901make_items(T901* C,T2 a1);
void r901make_hash_table(T901* C,T2 a1);
void r901add_traversing_cursor(T901* C,T0* a1);
T6 r901se_assigned_from(T0* a1);
T0* r901clone(T0* a1);
void r901remove_position(T901* C,T2 a1);
void r901out_in_tagged_out_memory(T901* C);
void r901make(T901* C);
void r901remove(T901* C,T0* a1);
T0* r901cursor_key(T901* C,T0* a1);
void r901clone_items(T901* C);
T6 r901cursor_after(T0* a1);
T6 r901conforms_to(T901* C,T0* a1);
void r901make_keys(T901* C,T2 a1);
T2 r901hash_position(T901* C,T0* a1);
void r901cursor_forth(T901* C,T0* a1);
void r901items_resize(T901* C,T2 a1);
void r901clone_keys(T901* C);
T0* r901found_item(T901* C);
void r901move_cursors_after(T901* C,T2 a1);
void r901resize(T901* C,T2 a1);
void r901make_with_equality_testers(T901* C,T2 a1,T0* a2,T0* a3);
T6 r901found(T901* C);
void r901move_cursors_forth(T901* C,T2 a1);
void r901search(T901* C,T0* a1);
void r901cursor_start(T901* C,T0* a1);
void r901clashes_resize(T901* C,T2 a1);
void r901slots_resize(T901* C,T2 a1);
T0* r901twin(T901* C);
void r901force_last(T901* C,T0* a1,T0* a2);
T0* r901new_cursor(T901* C);
void r901make_slots(T901* C,T2 a1);
void r901move_all_cursors(T901* C,T2 a1,T2 a2);
T2 r901new_modulus(T2 a1);
T6 r901cursor_off(T0* a1);
T0* r49out(T49* C);
void r49copy(T49* C,T0* a1);
T0* r49substring(T49* C,T2 a1,T2 a2);
void r49reset_byte_index_cache(T49* C);
void r49wipe_out(T49* C);
void r49keep_tail(T49* C,T2 a1);
void r49remove_first(T49* C,T2 a1);
T6 r49same_unicode_string(T49* C,T0* a1);
T2 r49item_code(T49* C,T2 a1);
T3 r49character_item_at_byte_index(T49* C,T2 a1);
void r49put(T49* C,T3 a1,T2 a2);
void r49remove_between(T49* C,T2 a1,T2 a2);
T6 r49is_equal(T49* C,T0* a1);
T2 r49index_of_code(T49* C,T2 a1,T2 a2);
T3 r49item(T49* C,T2 a1);
extern T0*oBC50integer_;
void r49resize_byte_storage(T49* C,T2 a1);
void r49append(T49* C,T0* a1);
T6 r49se_assigned_from(T0* a1);
T2 r49byte_index(T49* C,T2 a1);
T0* r49clone(T0* a1);
T2 r49index_of(T49* C,T3 a1,T2 a2);
void r49out_in_tagged_out_memory(T49* C);
void r49move_bytes_right(T49* C,T2 a1,T2 a2);
T6 r49is_ascii(T49* C);
void r49set_count(T49* C,T2 a1);
T2 r49next_byte_index(T49* C,T2 a1);
T6 r49same_type(T49* C,T0* a1);
void r49remove_tail(T49* C,T2 a1);
void r49make(T49* C,T2 a1);
void r49old_make_filled(T49* C,T3 a1,T2 a2);
void r49fill_tagged_out_memory(T49* C);
void r49append_string(T49* C,T0* a1);
void r49append_substring(T49* C,T0* a1,T2 a2,T2 a3);
T2 r49item_code_at_byte_index(T49* C,T2 a1);
extern T0*oBC48platform;
T0* r49string(T49* C);
void r49extend(T49* C,T3 a1);
T0* r49_px_43(T49* C,T0* a1);
T2 r49hash_code(T49* C);
void r49remove_last(T49* C,T2 a1);
T0* r49prefixed_string(T49* C,T0* a1);
T6 r49conforms_to(T49* C,T0* a1);
void r49keep_head(T49* C,T2 a1);
T2 r49to_integer(T49* C);
T0* r49new_empty_string(T2 a1);
void r49append_character(T49* C,T3 a1);
void r49make_from_substring(T49* C,T0* a1,T2 a2,T2 a3);
void r49put_code_at_byte_index(T49* C,T2 a1,T2 a2,T2 a3);
void r49fill_with(T49* C,T3 a1);
void r49put_character_at_byte_index(T49* C,T3 a1,T2 a2,T2 a3);
void r49resize(T49* C,T2 a1);
void r49put_substring_at_byte_index(T49* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
T2 r49substring_index(T49* C,T0* a1,T2 a2);
void r49from_external_copy(T49* C,T8 a1);
T3 r49byte_item(T49* C,T2 a1);
void r49move_bytes_left(T49* C,T2 a1,T2 a2);
void r49old_make(T49* C,T2 a1);
T8 r49to_external(T49* C);
void r49old_make_from_string(T49* C,T0* a1);
T0* r49twin(T49* C);
T0* r49to_utf8(T49* C);
T2 r49unicode_substring_index(T49* C,T0* a1,T2 a2);
void r49swap(T49* C,T2 a1,T2 a2);
T0* r252out(T252* C);
void r252build(T252* C);
void r252put(T252* C,T2 a1);
T2 r252upper(T252* C);
T2 r252lower(T252* C);
T6 r252se_assigned_from(T0* a1);
void r252out_in_tagged_out_memory(T252* C);
T0* r252to_array(T252* C,T2 a1,T2 a2);
void r252make(T252* C,T2 a1,T2 a2);
T6 r252conforms_to(T252* C,T0* a1);
T2 r252equivalence_class(T252* C,T2 a1);
void r252add(T252* C,T0* a1);
T6 r252is_representative(T252* C,T2 a1);
T0* r252twin(T252* C);
void r252initialize(T252* C);
T0* r532out(T532* C);
T6 r532is_directory_executable(T532* C);
T0* r532file_system(void);
T6 r532se_assigned_from(T0* a1);
void r532out_in_tagged_out_memory(T532* C);
T6 r532is_file_executable(T532* C);
T6 r532conforms_to(T532* C,T0* a1);
void r532execute(T532* C);
T0* r532twin(T532* C);
T6 r532is_executable(T532* C);
T0* r518out(T518* C);
extern T0*oBC518define_element_name;
T0* r518attribute_value(T518* C,T0* a1);
extern T0*oBC518fileset_element_name;
T0* r518file_system(void);
extern T0*oBC518input_filename_attribute_name;
T6 r518se_assigned_from(T0* a1);
extern T0*oBC518to_directory_attribute_name;
T0* r518elements_by_name(T518* C,T0* a1);
void r518out_in_tagged_out_memory(T518* C);
void r518make(T518* C,T0* a1,T0* a2);
T6 r518boolean_value(T518* C,T0* a1);
extern T0*oBC518force_attribute_name;
void r518task_make(T518* C,T0* a1,T0* a2);
T6 r518conforms_to(T518* C,T0* a1);
extern T0*oBC518output_filename_attribute_name;
extern T0*oBC518lines_attribute_name;
void r518execute(T518* C);
T6 r518is_enabled(T518* C);
T0* r518twin(T518* C);
void r518interpreting_element_make(T518* C,T0* a1,T0* a2);
T0* r563out(T563* C);
T0* r563file_system(void);
T6 r563se_assigned_from(T0* a1);
void r563out_in_tagged_out_memory(T563* C);
T6 r563is_file_executable(T563* C);
T6 r563conforms_to(T563* C,T0* a1);
void r563execute(T563* C);
T6 r563is_file_outofdate(T0* a1,T0* a2);
T0* r563twin(T563* C);
T6 r563is_executable(T563* C);
T6 r563is_fileset_executable(T563* C);
T0* r905out(T905* C);
T6 r905se_assigned_from(T0* a1);
void r905out_in_tagged_out_memory(T905* C);
void r905make(T905* C,T0* a1,T0* a2);
T6 r905conforms_to(T905* C,T0* a1);
T0* r905twin(T905* C);
T0* r509out(T509* C);
T6 r509se_assigned_from(T0* a1);
void r509out_in_tagged_out_memory(T509* C);
T6 r509conforms_to(T509* C,T0* a1);
void r509execute(T509* C);
T0* r509twin(T509* C);
T6 r509is_executable(T509* C);
T0* r117out(T117* C);
T0* r117current_working_directory(T117* C);
T6 r117se_assigned_from(T0* a1);
T0* r117clone(T0* a1);
extern T6 oBC37is_windows;
extern int fBC37is_windows;
T6 r117is_windows(T117* C);
void r117out_in_tagged_out_memory(T117* C);
void r117make(T117* C);
void r117old_put_string(T0* a1);
T6 r117conforms_to(T117* C,T0* a1);
extern T6 oBC37is_unix;
extern int fBC37is_unix;
T6 r117is_unix(T117* C);
void r117put_line(T0* a1);
T0* r117twin(T117* C);
void r117put_string(T0* a1);
T0* r171out(T171* C);
T6 r171is_cleanable(T171* C);
T0* r171file_system(void);
T6 r171se_assigned_from(T0* a1);
T0* r171clone(T0* a1);
void r171out_in_tagged_out_memory(T171* C);
T0* r171new_ace_cmdline(T171* C);
T6 r171is_traditional_configuration(T171* C);
T6 r171conforms_to(T171* C,T0* a1);
void r171execute(T171* C);
T0* r171twin(T171* C);
T0* r171new_clean_cmdline(T171* C);
T0* r171new_traditional_cmdline(T171* C);
void r171execute_shell(T171* C,T0* a1);
T6 r171is_executable(T171* C);
T6 r171is_ace_configuration(T171* C);
T0* r746_229Pnew_file_buffer(T0* a1);
T2 r746yy_at_beginning_of_line(T746* C);
T0* r746normalized_newline(T746* C);
T6 r746is_literal(T746* C);
T2 r746start_condition(T746* C);
void r746set_input_buffer(T746* C,T0* a1);
T0* r746text_substring(T746* C,T2 a1,T2 a2);
T0* r746yy_ec_template(void);
void r746yy_execute_action(T746* C,T2 a1);
T0* r746yy_def_template(void);
void r746_227P_747Preset(T746* C);
T3 r746text_item(T746* C,T2 a1);
T6 r746end_of_file(T746* C);
T0* r746system_literal_text(T746* C);
T0* r746new_string_buffer(T0* a1);
void r746yy_load_input_buffer(T746* C);
void r746apply_input_buffer(T746* C);
void r746make_with_buffer(T746* C,T0* a1);
T2 r746yy_null_trans_state(T746* C,T2 a1);
void r746pop_start_condition(T746* C);
T0* r746yy_accept_template(void);
void r746read_token(T746* C);
T2 r746yy_previous_state(T746* C);
void r746yy_refill_input_buffer(T746* C);
void r746push_start_condition_dtd_ignore(T746* C);
T0* r746yy_fixed_array(T0* a1);
T6 r746conforms_to(T746* C,T0* a1);
T0* r746yy_meta_template(void);
void r746set_input_file(T746* C,T0* a1);
T0* r746yy_base_template(void);
T0* r746twin(T746* C);
T2 r746text_count(T746* C);
T0* r746new_file_buffer(T746* C,T0* a1);
void r746make_scanner(T746* C);
void r746yy_initialize(T746* C);
void r746reset(T746* C);
void r746push_start_condition(T746* C,T2 a1);
T0* r746text(T746* C);
void r746out_in_tagged_out_memory(T746* C);
T0* r746yy_nxt_template(void);
void r746yy_set_line_column(T746* C);
void r746make_literal(T746* C,T0* a1);
void r746_227Pread_token(T746* C);
T0* r746empty_buffer(void);
T0* r746yy_chk_template(void);
void r746yy_set_content(T746* C,T0* a1);
void r746set_start_condition(T746* C,T2 a1);
void r746_747Preset(T746* C);
void r746yy_execute_eof_action(T746* C,T2 a1);
T0* r746out(T746* C);
T6 r746se_assigned_from(T0* a1);
void r746yy_build_tables(T746* C);
void r746make_external(T746* C,T0* a1);
void r746_228Pset_input_buffer(T746* C,T0* a1);
T0* r398out(T398* C);
T0* r398arguments(void);
T6 r398se_assigned_from(T0* a1);
void r398out_in_tagged_out_memory(T398* C);
void r398make(T398* C,T0* a1,T2 a2);
T0* r398message(T398* C,T0* a1);
T6 r398conforms_to(T398* C,T0* a1);
T0* r398twin(T398* C);
T0* r398default_message(T398* C);
T0* r34out(T34* C);
T0* r34current_working_directory(T34* C);
T6 r34se_assigned_from(T0* a1);
T0* r34clone(T0* a1);
T6 r34is_windows(T34* C);
void r34out_in_tagged_out_memory(T34* C);
void r34make(T34* C);
void r34old_put_string(T0* a1);
T6 r34conforms_to(T34* C,T0* a1);
T6 r34is_unix(T34* C);
void r34put_line(T0* a1);
T0* r34twin(T34* C);
void r34put_string(T0* a1);
T0* r802out(T802* C);
T6 r802se_assigned_from(T0* a1);
void r802out_in_tagged_out_memory(T802* C);
void r802make(T802* C,T0* a1,T2 a2,T2 a3,T2 a4);
T6 r802conforms_to(T802* C,T0* a1);
T0* r802twin(T802* C);
T0* r100out(T100* C);
T6 r100se_assigned_from(T0* a1);
void r100out_in_tagged_out_memory(T100* C);
void r100make(T100* C,T0* a1,T0* a2,T0* a3,T0* a4);
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
T0* r177out(T177* C);
T6 r177is_cleanable(T177* C);
T0* r177file_system(void);
T6 r177se_assigned_from(T0* a1);
T0* r177clone(T0* a1);
void r177out_in_tagged_out_memory(T177* C);
void r177execute_clean(T177* C);
T6 r177conforms_to(T177* C,T0* a1);
void r177execute_tuner(T177* C);
T6 r177is_compilable(T177* C);
void r177execute(T177* C);
T6 r177is_tunable(T177* C);
T0* r177twin(T177* C);
void r177execute_shell(T177* C,T0* a1);
T6 r177is_executable(T177* C);
void r67execute_task(T67* C,T0* a1);
T0* r67out(T67* C);
extern T0*oBC68se_task_name;
T0* r67full_name(T67* C);
T0* r67dependencies(T67* C);
extern T0*oBC68exec_task_name;
extern T0*oBC68hact_task_name;
extern T0*oBC67depend_attribute_name;
extern T0*oBC68precursor_task_name;
T6 r67is_equal(T67* C,T0* a1);
T6 r67conflicts_with(T67* C,T0* a1);
T0* r67dependent_targets(T67* C);
extern T0*oBC68mkdir_task_name;
extern T0*oBC68geyacc_task_name;
extern T0*oBC68lcc_task_name;
T0* r67file_system(void);
extern T0*oBC67name_attribute_name;
T6 r67has_dependencies(T67* C);
T6 r67se_assigned_from(T0* a1);
extern T0*oBC68gexmlsplit_task_name;
T0* r67clone(T0* a1);
extern T0*oBC68delete_task_name;
extern T0*oBC68copy_task_name;
extern T0*oBC68exit_task_name;
void r67out_in_tagged_out_memory(T67* C);
void r67make(T67* C,T0* a1,T0* a2);
extern T0*oBC68outofdate_task_name;
void r67_69Pmake(T67* C,T0* a1,T0* a2);
extern T0*oBC68getest_task_name;
T6 r67conforms_to(T67* C,T0* a1);
extern T0*oBC68set_task_name;
T0* r67string_tokens(T0* a1,T3 a2);
extern T0*oBC68ise_task_name;
extern T0*oBC68ve_task_name;
void r67show_dependent_targets(T0* a1);
void r67execute(T67* C);
T0* r67seed(T67* C);
T6 r67is_enabled(T67* C);
extern T0*oBC68gepp_task_name;
void r67exit_application(T2 a1,T0* a2);
T0* r67final_target(T67* C);
extern T0*oBC68xslt_task_name;
extern T0*oBC68geant_task_name;
T0* r67twin(T67* C);
extern T0*oBC68move_task_name;
extern T0*oBC68setenv_task_name;
extern T0*oBC68gexace_task_name;
extern T0*oBC68unset_task_name;
extern T0*oBC68gelex_task_name;
void r67show_precursors(T67* C);
extern T0*oBC68echo_task_name;
T0* r156out(T156* C);
void r156copy(T156* C,T0* a1);
T0* r156substring(T156* C,T2 a1,T2 a2);
void r156reset_byte_index_cache(T156* C);
T2 r156shifted_byte_index(T156* C,T2 a1,T2 a2);
void r156wipe_out(T156* C);
void r156keep_tail(T156* C,T2 a1);
void r156remove_first(T156* C,T2 a1);
T6 r156same_unicode_string(T156* C,T0* a1);
T2 r156item_code(T156* C,T2 a1);
T3 r156character_item_at_byte_index(T156* C,T2 a1);
void r156put(T156* C,T3 a1,T2 a2);
void r156remove_between(T156* C,T2 a1,T2 a2);
T6 r156is_equal(T156* C,T0* a1);
T2 r156index_of_code(T156* C,T2 a1,T2 a2);
T3 r156item(T156* C,T2 a1);
void r156resize_byte_storage(T156* C,T2 a1);
void r156append(T156* C,T0* a1);
T6 r156se_assigned_from(T0* a1);
T2 r156byte_index(T156* C,T2 a1);
T0* r156clone(T0* a1);
T2 r156index_of(T156* C,T3 a1,T2 a2);
void r156out_in_tagged_out_memory(T156* C);
T6 r156is_ascii(T156* C);
void r156move_bytes_right(T156* C,T2 a1,T2 a2);
void r156set_count(T156* C,T2 a1);
T2 r156next_byte_index(T156* C,T2 a1);
T6 r156same_type(T156* C,T0* a1);
void r156remove_tail(T156* C,T2 a1);
void r156make(T156* C,T2 a1);
void r156old_make_filled(T156* C,T3 a1,T2 a2);
void r156fill_tagged_out_memory(T156* C);
void r156append_substring(T156* C,T0* a1,T2 a2,T2 a3);
T2 r156item_code_at_byte_index(T156* C,T2 a1);
T0* r156string(T156* C);
T0* r156_px_43(T156* C,T0* a1);
void r156extend(T156* C,T3 a1);
T2 r156hash_code(T156* C);
T0* r156prefixed_string(T156* C,T0* a1);
void r156remove_last(T156* C,T2 a1);
T6 r156conforms_to(T156* C,T0* a1);
void r156keep_head(T156* C,T2 a1);
T2 r156to_integer(T156* C);
T0* r156new_empty_string(T2 a1);
void r156append_character(T156* C,T3 a1);
void r156put_code_at_byte_index(T156* C,T2 a1,T2 a2,T2 a3);
void r156make_from_substring(T156* C,T0* a1,T2 a2,T2 a3);
void r156fill_with(T156* C,T3 a1);
void r156put_character_at_byte_index(T156* C,T3 a1,T2 a2,T2 a3);
void r156resize(T156* C,T2 a1);
void r156put_substring_at_byte_index(T156* C,T0* a1,T2 a2,T2 a3,T2 a4,T2 a5);
T2 r156substring_index(T156* C,T0* a1,T2 a2);
void r156append_utf8(T156* C,T0* a1);
void r156from_external_copy(T156* C,T8 a1);
void r156move_bytes_left(T156* C,T2 a1,T2 a2);
void r156old_make(T156* C,T2 a1);
T8 r156to_external(T156* C);
void r156old_make_from_string(T156* C,T0* a1);
T0* r156twin(T156* C);
T0* r156to_utf8(T156* C);
T2 r156unicode_substring_index(T156* C,T0* a1,T2 a2);
void r156make_from_utf8(T156* C,T0* a1);
void r156swap(T156* C,T2 a1,T2 a2);
T0* r891_229Pnew_file_buffer(T0* a1);
T2 r891yy_at_beginning_of_line(T891* C);
T0* r891normalized_newline(T891* C);
void r891_227P_747P_746Preset(T891* C);
T2 r891start_condition(T891* C);
void r891set_input_buffer(T891* C,T0* a1);
T0* r891text_substring(T891* C,T2 a1,T2 a2);
T0* r891yy_ec_template(void);
void r891yy_execute_action(T891* C,T2 a1);
void r891_746Pread_token(T891* C);
T0* r891yy_def_template(void);
T3 r891text_item(T891* C,T2 a1);
T6 r891end_of_file(T891* C);
T0* r891system_literal_text(T891* C);
T0* r891new_string_buffer(T0* a1);
void r891yy_load_input_buffer(T891* C);
void r891apply_input_buffer(T891* C);
void r891make_with_buffer(T891* C,T0* a1);
T2 r891yy_null_trans_state(T891* C,T2 a1);
void r891pop_start_condition(T891* C);
T0* r891yy_accept_template(void);
void r891read_token(T891* C);
T2 r891yy_previous_state(T891* C);
void r891yy_refill_input_buffer(T891* C);
T0* r891yy_fixed_array(T0* a1);
T6 r891conforms_to(T891* C,T0* a1);
T0* r891yy_meta_template(void);
void r891set_input_file(T891* C,T0* a1);
T0* r891yy_base_template(void);
T0* r891twin(T891* C);
T2 r891text_count(T891* C);
T0* r891new_file_buffer(T891* C,T0* a1);
void r891make_scanner(T891* C);
void r891yy_initialize(T891* C);
void r891reset(T891* C);
void r891push_start_condition(T891* C,T2 a1);
T0* r891text(T891* C);
void r891out_in_tagged_out_memory(T891* C);
void r891make_def(T891* C,T0* a1);
void r891reset_sent(T891* C);
void r891_227P_746Pread_token(T891* C);
T0* r891yy_nxt_template(void);
void r891yy_set_line_column(T891* C);
void r891make_literal(T891* C,T0* a1);
void r891_747P_746Preset(T891* C);
void r891_746Preset(T891* C);
T0* r891empty_buffer(void);
T0* r891yy_chk_template(void);
void r891yy_set_content(T891* C,T0* a1);
void r891set_start_condition(T891* C,T2 a1);
T0* r891out(T891* C);
T6 r891se_assigned_from(T0* a1);
void r891yy_build_tables(T891* C);
void r891make_external(T891* C,T0* a1);
void r891_228Pset_input_buffer(T891* C,T0* a1);
T0* r591out(T591* C);
void r591merge_in_renamed_targets(T591* C,T0* a1);
void r591merge_in_unchanged_targets(T591* C,T0* a1);
T6 r591se_assigned_from(T0* a1);
void r591out_in_tagged_out_memory(T591* C);
void r591apply_selects(T591* C);
void r591make(T591* C,T0* a1);
T6 r591conforms_to(T591* C,T0* a1);
void r591validate_parent_selects(T591* C);
void r591merge_in_parent_project(T591* C,T0* a1);
void r591check_targets_for_conflicts(T591* C);
void r591merge_in_redefined_targets(T591* C,T0* a1);
void r591exit_application(T2 a1,T0* a2);
T0* r591twin(T591* C);
void r591sort_out_selected_targets(T591* C);
T0* r176out(T176* C);
T0* r176attribute_value(T176* C,T0* a1);
T0* r176file_system(void);
T6 r176se_assigned_from(T0* a1);
extern T0*oBC176level_attribute_name;
void r176out_in_tagged_out_memory(T176* C);
extern T0*oBC176tune_attribute_name;
void r176make(T176* C,T0* a1,T0* a2);
T6 r176boolean_value(T176* C,T0* a1);
void r176task_make(T176* C,T0* a1,T0* a2);
T6 r176conforms_to(T176* C,T0* a1);
extern T0*oBC176esd_attribute_name;
void r176execute(T176* C);
T6 r176is_enabled(T176* C);
T0* r176attribute_value_or_default(T176* C,T0* a1,T0* a2);
T0* r176twin(T176* C);
void r176interpreting_element_make(T176* C,T0* a1,T0* a2);
extern T0*oBC176clean_attribute_name;
extern T0*oBC176recursive_attribute_name;
T0* r806out(T806* C);
void r806make_from_stream(T806* C,T0* a1);
T0* r806name(T806* C);
T2 r806read_to_string(T806* C,T0* a1,T2 a2,T2 a3);
T6 r806se_assigned_from(T0* a1);
T0* r806clone(T0* a1);
void r806out_in_tagged_out_memory(T806* C);
void r806read_character(T806* C);
T6 r806is_open_read(T806* C);
void r806utf16_detect_read_character(T806* C);
void r806make(T806* C,T0* a1);
T6 r806conforms_to(T806* C,T0* a1);
T6 r806end_of_input(T806* C);
void r806append_character(T806* C,T2 a1);
void r806utf16_read_character(T806* C);
T3 r806last_character(T806* C);
extern T0*oBC806utf8_buffer;
extern int fBC806utf8_buffer;
T0* r806utf8_buffer(void);
T0* r806twin(T806* C);
T0* r527out(T527* C);
T0* r527attribute_value(T527* C,T0* a1);
T0* r527file_system(void);
T6 r527se_assigned_from(T0* a1);
void r527out_in_tagged_out_memory(T527* C);
void r527make(T527* C,T0* a1,T0* a2);
void r527task_make(T527* C,T0* a1,T0* a2);
T6 r527conforms_to(T527* C,T0* a1);
void r527execute(T527* C);
T6 r527is_enabled(T527* C);
T0* r527twin(T527* C);
void r527interpreting_element_make(T527* C,T0* a1,T0* a2);
extern T0*oBC527message_attribute_name;
T0* r90out(T90* C);
void r90copy(T90* C,T0* a1);
void r90remove_traversing_cursor(T90* C,T0* a1);
void r90make_root(T90* C,T0* a1,T0* a2);
void r90cursor_go_after(T90* C,T0* a1);
void r90move_all_cursors_after(T90* C);
T6 r90has_attribute_by_name(T90* C,T0* a1);
void r90add_traversing_cursor(T90* C,T0* a1);
T6 r90se_assigned_from(T0* a1);
T0* r90clone(T0* a1);
void r90out_in_tagged_out_memory(T90* C);
T0* r90attribute_by_name(T90* C,T0* a1);
void r90make_child(T90* C,T0* a1,T0* a2,T0* a3);
T6 r90conforms_to(T90* C,T0* a1);
void r90make_list(T90* C);
void r90cursor_forth(T90* C,T0* a1);
void r90cursor_start(T90* C,T0* a1);
T6 r90same_string(T0* a1,T0* a2);
T0* r90twin(T90* C);
void r90force_last(T90* C,T0* a1);
T0* r90new_cursor(T90* C);
void r90make_composite(T90* C);
T6 r90has_element_by_name(T90* C,T0* a1);
T0* r90element_by_name(T90* C,T0* a1);
T0* r90text(T90* C);
T6 r90cursor_off(T0* a1);
T0* r564out(T564* C);
T0* r564attribute_value(T564* C,T0* a1);
T0* r564file_system(void);
T6 r564se_assigned_from(T0* a1);
void r564out_in_tagged_out_memory(T564* C);
void r564make(T564* C,T0* a1,T0* a2);
extern T0*oBC564code_attribute_name;
void r564task_make(T564* C,T0* a1,T0* a2);
T6 r564conforms_to(T564* C,T0* a1);
void r564execute(T564* C);
T6 r564is_enabled(T564* C);
T0* r564twin(T564* C);
void r564interpreting_element_make(T564* C,T0* a1,T0* a2);
T0* r525out(T525* C);
T0* r525attribute_value(T525* C,T0* a1);
T0* r525file_system(void);
extern T0*oBC525input_filename_attribute_name;
T6 r525se_assigned_from(T0* a1);
void r525out_in_tagged_out_memory(T525* C);
void r525make(T525* C,T0* a1,T0* a2);
void r525task_make(T525* C,T0* a1,T0* a2);
T6 r525conforms_to(T525* C,T0* a1);
void r525execute(T525* C);
T6 r525is_enabled(T525* C);
T0* r525twin(T525* C);
void r525interpreting_element_make(T525* C,T0* a1,T0* a2);
T0* r567out(T567* C);
T6 r567se_assigned_from(T0* a1);
void r567out_in_tagged_out_memory(T567* C);
T6 r567conforms_to(T567* C,T0* a1);
T0* r567twin(T567* C);
T6 r567is_executable(T567* C);
T0* r589out(T589* C);
void r589apply_renames(T589* C);
void r589apply_redefines(T589* C);
T6 r589se_assigned_from(T0* a1);
void r589out_in_tagged_out_memory(T589* C);
void r589apply_selects(T589* C);
void r589make(T589* C,T0* a1);
void r589prepare_project(T589* C);
T6 r589conforms_to(T589* C,T0* a1);
void r589apply_undeclared_redefines(T589* C);
void r589exit_application(T2 a1,T0* a2);
T0* r589twin(T589* C);
void r589apply_unchangeds(T589* C);
T0* r514out(T514* C);
extern T0*oBC514case_insensitive_attribute_name;
T0* r514attribute_value(T514* C,T0* a1);
T0* r514file_system(void);
extern T0*oBC514input_filename_attribute_name;
extern T0*oBC514no_warn_attribute_name;
T6 r514se_assigned_from(T0* a1);
extern T0*oBC514separate_actions_attribute_name;
void r514out_in_tagged_out_memory(T514* C);
extern T0*oBC514full_attribute_name;
void r514make(T514* C,T0* a1,T0* a2);
extern T0*oBC514backup_attribute_name;
T6 r514boolean_value(T514* C,T0* a1);
extern T0*oBC514meta_ecs_attribute_name;
extern T0*oBC514no_default_attribute_name;
void r514task_make(T514* C,T0* a1,T0* a2);
T6 r514conforms_to(T514* C,T0* a1);
extern T0*oBC514output_filename_attribute_name;
extern T0*oBC514size_attribute_name;
void r514execute(T514* C);
T6 r514is_enabled(T514* C);
extern T0*oBC514ecs_attribute_name;
T0* r514twin(T514* C);
void r514interpreting_element_make(T514* C,T0* a1,T0* a2);
T0* r652out(T652* C);
T6 r652se_assigned_from(T0* a1);
void r652out_in_tagged_out_memory(T652* C);
void r652make(T652* C,T0* a1,T0* a2,T0* a3);
T6 r652conforms_to(T652* C,T0* a1);
void r652parse_file(T652* C,T0* a1);
T0* r652twin(T652* C);
T0* r542out(T542* C);
T0* r542file_system(void);
T6 r542se_assigned_from(T0* a1);
T0* r542clone(T0* a1);
void r542out_in_tagged_out_memory(T542* C);
void r542_168Pmake(T542* C,T0* a1);
void r542make(T542* C,T0* a1);
void r542execute_xalan_java(T542* C);
T6 r542conforms_to(T542* C,T0* a1);
void r542execute(T542* C);
T0* r542twin(T542* C);
void r542execute_xalan_cpp(T542* C);
void r542execute_shell(T542* C,T0* a1);
T6 r542is_executable(T542* C);
T0* r186out(T186* C);
extern T0*oBC186type_attribute_value_flat;
T6 r186se_assigned_from(T0* a1);
T0* r186clone(T0* a1);
T0* r186glob_prefix(T0* a1);
void r186out_in_tagged_out_memory(T186* C);
void r186make(T186* C,T0* a1);
T6 r186conforms_to(T186* C,T0* a1);
extern T0*oBC186type_attribute_value_merge;
T0* r186mapped_filename(T186* C,T0* a1);
T0* r186twin(T186* C);
extern T0*oBC186type_attribute_value_identity;
T0* r186glob_postfix(T0* a1);
extern T0*oBC186type_attribute_value_glob;
T6 r186is_executable(T186* C);
T0* r792out(T792* C);
void r792copy(T792* C,T0* a1);
void r792append_name(T792* C,T0* a1);
T6 r792se_assigned_from(T0* a1);
T0* r792clone(T0* a1);
void r792out_in_tagged_out_memory(T792* C);
T6 r792is_parent(T792* C,T2 a1);
void r792make(T792* C);
void r792set_canonical(T792* C);
T6 r792conforms_to(T792* C,T0* a1);
T0* r792twin(T792* C);
T6 r792is_current(T792* C,T2 a1);
T0* r24out(T24* C);
T0* r24file_system(void);
T6 r24se_assigned_from(T0* a1);
void r24load(T24* C,T0* a1,T0* a2);
void r24out_in_tagged_out_memory(T24* C);
void r24make(T24* C,T0* a1);
T6 r24conforms_to(T24* C,T0* a1);
void r24exit_application(T2 a1,T0* a2);
T0* r24twin(T24* C);
T0* r180out(T180* C);
T6 r180se_assigned_from(T0* a1);
void r180out_in_tagged_out_memory(T180* C);
T6 r180is_commandline_executable(T180* C);
T6 r180conforms_to(T180* C,T0* a1);
void r180set_fileset(T180* C,T0* a1);
void r180execute(T180* C);
T0* r180twin(T180* C);
void r180execute_shell(T180* C,T0* a1);
T6 r180is_executable(T180* C);
T6 r180is_fileset_executable(T180* C);
void r222yy_do_action(T222* C,T2 a1);
void r222process_escaped_character(T222* C);
void r222report_bad_character_error(T222* C,T0* a1);
extern T0*oBC222yytable_template;
extern int fBC222yytable_template;
T0* r222yytable_template(void);
void r222make_parser_skeleton(T222* C);
T0* r222append_character_set_to_character_class(T222* C,T2 a1,T2 a2,T0* a3);
T2 r222yy_at_beginning_of_line(T222* C);
void r222report_unrecognized_rule_error(T222* C);
void r222fatal_error(T0* a1);
T2 r222yytype1(T0* a1);
T0* r222yytype2(T0* a1);
T0* r222yytype3(T0* a1);
T0* r222yytype4(T0* a1);
T2 r222start_condition(T222* C);
T0* r222new_nfa_from_character(T222* C,T2 a1);
void r222parse(T222* C);
void r222check_options(T222* C);
void r222report_missing_quote_error(T222* C);
void r222set_input_buffer(T222* C,T0* a1);
T2 r222yy_translate(T222* C,T2 a1);
extern T0*oBC223yy_ec_template;
extern int fBC223yy_ec_template;
T0* r222yy_ec_template(void);
void r222yy_execute_action(T222* C,T2 a1);
extern T0*oBC222yytranslate_template;
extern int fBC222yytranslate_template;
T0* r222yytranslate_template(void);
void r222clear_stacks(T222* C);
extern T0*oBC223yy_def_template;
extern int fBC223yy_def_template;
T0* r222yy_def_template(void);
void r222report_full_and_meta_equiv_classes_error(T222* C);
T3 r222text_item(T222* C,T2 a1);
T0* r222new_string_buffer(T0* a1);
void r222yy_load_input_buffer(T222* C);
extern T0*oBC222yyr1_template;
extern int fBC222yyr1_template;
T0* r222yyr1_template(void);
void r222make_with_buffer(T222* C,T0* a1);
void r222process_rule(T222* C,T0* a1);
void r222process_character(T222* C,T2 a1);
T2 r222yy_null_trans_state(T222* C,T2 a1);
void r222report_negative_range_in_character_class_error(T222* C);
void r222report_full_and_variable_trailing_context_error(T222* C);
extern T0*oBC223yy_accept_template;
extern int fBC223yy_accept_template;
T0* r222yy_accept_template(void);
void r222read_token(T222* C);
T0* r222question_character_class(T222* C);
extern T0*oBC222yyr2_template;
extern int fBC222yyr2_template;
T0* r222yyr2_template(void);
T2 r222yy_previous_state(T222* C);
extern T0*oBC222yypgoto_template;
extern int fBC222yypgoto_template;
T0* r222yypgoto_template(void);
void r222yy_refill_input_buffer(T222* C);
T0* r222yy_fixed_array(T0* a1);
T6 r222conforms_to(T222* C,T0* a1);
extern T0*oBC223yy_meta_template;
extern int fBC223yy_meta_template;
T0* r222yy_meta_template(void);
void r222report_character_out_of_range_error(T222* C,T0* a1);
T0* r222new_epsilon_nfa(T222* C);
extern T0*oBC223yy_base_template;
extern int fBC223yy_base_template;
T0* r222yy_base_template(void);
void r222report_full_and_reject_error(T222* C);
T0* r222twin(T222* C);
T0* r222append_character_to_character_class(T222* C,T2 a1,T0* a2);
T2 r222text_count(T222* C);
void r222parse_string(T222* C,T0* a1);
void r222yy_initialize(T222* C);
T0* r222text(T222* C);
void r222out_in_tagged_out_memory(T222* C);
T0* r222new_symbol_nfa(T222* C,T2 a1);
extern T0*oBC223yy_nxt_template;
extern int fBC223yy_nxt_template;
T0* r222yy_nxt_template(void);
void r222yy_set_line_column(T222* C);
void r222yy_build_parser_tables(T222* C);
void r222build_equiv_classes(T222* C);
T0* r222new_symbol_class_nfa(T222* C,T0* a1);
T0* r222empty_buffer(void);
void r222report_error(T222* C,T0* a1);
T0* r222append_character_to_string(T222* C,T2 a1,T0* a2);
extern T0*oBC222yydefact_template;
extern int fBC222yydefact_template;
T0* r222yydefact_template(void);
extern T0*oBC223yy_chk_template;
extern int fBC223yy_chk_template;
T0* r222yy_chk_template(void);
T0* r222new_nfa_from_character_class(T222* C,T0* a1);
extern T0*oBC222yycheck_template;
extern int fBC222yycheck_template;
T0* r222yycheck_template(void);
T0* r222new_character_class(T222* C);
T0* r222filename(T222* C);
T0* r222yyfixed_array(T0* a1);
extern T0*oBC222yydefgoto_template;
extern int fBC222yydefgoto_template;
T0* r222yydefgoto_template(void);
void r222yy_clear_all(T222* C);
void r222yy_set_content(T222* C,T0* a1);
extern T0*oBC222yypact_template;
extern int fBC222yypact_template;
T0* r222yypact_template(void);
void r222set_start_condition(T222* C,T2 a1);
T0* r222out(T222* C);
T6 r222se_assigned_from(T0* a1);
void r222yy_build_tables(T222* C);
void r222make_lex_scanner_from_description(T222* C,T0* a1,T0* a2);
void r222less(T222* C,T2 a1);
void r222report_bad_character_class_error(T222* C);
void r222make_from_description(T222* C,T0* a1,T0* a2);
T0* r173out(T173* C);
T6 r173is_cleanable(T173* C);
T0* r173file_system(void);
T6 r173se_assigned_from(T0* a1);
T0* r173clone(T0* a1);
void r173out_in_tagged_out_memory(T173* C);
void r173execute_clean(T173* C);
void r173execute_compile(T173* C);
T6 r173conforms_to(T173* C,T0* a1);
T6 r173is_compilable(T173* C);
void r173execute(T173* C);
T0* r173twin(T173* C);
void r173execute_shell(T173* C,T0* a1);
T6 r173is_executable(T173* C);
T0* r376out(T376* C);
T0* r376arguments(void);
T6 r376se_assigned_from(T0* a1);
void r376out_in_tagged_out_memory(T376* C);
void r376make(T376* C,T0* a1,T2 a2);
T0* r376message(T376* C,T0* a1);
T6 r376conforms_to(T376* C,T0* a1);
T0* r376twin(T376* C);
T0* r376default_message(T376* C);
T0* r23out(T23* C);
T6 r23se_assigned_from(T0* a1);
void r23out_in_tagged_out_memory(T23* C);
T6 r23conforms_to(T23* C,T0* a1);
T0* r23twin(T23* C);
T0* r20out(T20* C);
T0* r20expanded_variable_value(T20* C,T0* a1);
void r20remove_variable(T20* C,T0* a1);
T0* r20variable_value(T20* C,T0* a1);
T0* r20file_system(void);
extern T0*oBC14commandline_variables;
extern int fBC14commandline_variables;
T0* r20commandline_variables(void);
T6 r20se_assigned_from(T0* a1);
T0* r20clone(T0* a1);
extern T0*oBC16execution_environment;
void r20out_in_tagged_out_memory(T20* C);
void r20make(T20* C);
T6 r20boolean_condition_value(T20* C,T0* a1);
T6 r20conforms_to(T20* C,T0* a1);
T0* r20string_tokens(T0* a1,T3 a2);
T0* r20interpreted_string(T20* C,T0* a1);
void r20set_variable_value(T20* C,T0* a1,T0* a2);
void r20exit_application(T2 a1,T0* a2);
T0* r20twin(T20* C);
T6 r20has_variable(T20* C,T0* a1);
T0* r378out(T378* C);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r378command_arguments(void);
T6 r378se_assigned_from(T0* a1);
void r378out_in_tagged_out_memory(T378* C);
T6 r378conforms_to(T378* C,T0* a1);
T0* r378twin(T378* C);
T0* r378argument(T2 a1);
T0* r781out(T781* C);
T6 r781se_assigned_from(T0* a1);
void r781out_in_tagged_out_memory(T781* C);
T2 r781execute_command(T0* a1);
void r781make(T781* C,T0* a1);
T6 r781conforms_to(T781* C,T0* a1);
void r781execute(T781* C);
T0* r781twin(T781* C);
T0* r512out(T512* C);
extern T0*oBC512validate_attribute_name;
extern T0*oBC512define_element_name;
T0* r512attribute_value(T512* C,T0* a1);
T0* r512file_system(void);
T6 r512se_assigned_from(T0* a1);
extern T0*oBC512xace_filename_attribute_name;
T0* r512elements_by_name(T512* C,T0* a1);
void r512out_in_tagged_out_memory(T512* C);
void r512make(T512* C,T0* a1,T0* a2);
T6 r512boolean_value(T512* C,T0* a1);
void r512task_make(T512* C,T0* a1,T0* a2);
T6 r512conforms_to(T512* C,T0* a1);
extern T0*oBC512output_filename_attribute_name;
extern T0*oBC512verbose_attribute_name;
void r512execute(T512* C);
T6 r512is_enabled(T512* C);
T0* r512twin(T512* C);
extern T0*oBC512system_attribute_name;
void r512interpreting_element_make(T512* C,T0* a1,T0* a2);
extern T0*oBC512cluster_attribute_name;
T0* r510out(T510* C);
T0* r510attribute_value(T510* C,T0* a1);
T0* r510file_system(void);
extern T0*oBC510name_attribute_name;
T6 r510se_assigned_from(T0* a1);
void r510out_in_tagged_out_memory(T510* C);
void r510make(T510* C,T0* a1,T0* a2);
void r510task_make(T510* C,T0* a1,T0* a2);
T6 r510conforms_to(T510* C,T0* a1);
void r510execute(T510* C);
T6 r510is_enabled(T510* C);
T0* r510twin(T510* C);
void r510interpreting_element_make(T510* C,T0* a1,T0* a2);
T0* r538out(T538* C);
T6 r538se_assigned_from(T0* a1);
void r538out_in_tagged_out_memory(T538* C);
T6 r538conforms_to(T538* C,T0* a1);
void r538execute(T538* C);
T0* r538twin(T538* C);
T6 r538is_executable(T538* C);
T0* r653out(T653* C);
T6 r653is_closed(T653* C);
void r653old_close(T653* C);
T2 r653count(T653* C);
void r653old_delete(T0* a1);
T2 r653time_stamp(T653* C);
T6 r653file_exists(T0* a1);
extern T786 oBC657epoch_time;
extern int fBC657epoch_time;
T786 r653epoch_time(void);
T2 r653read_to_string(T653* C,T0* a1,T2 a2,T2 a3);
T786 r653last_change_of(T0* a1);
void r653rename_to(T0* a1,T0* a2);
void r653open_read(T653* C);
T0* r653file_system(void);
T6 r653se_assigned_from(T0* a1);
void r653old_read_character(T653* C);
T6 r653old_end_of_file(T653* C);
void r653out_in_tagged_out_memory(T653* C);
void r653read_character(T653* C);
void r653close(T653* C);
void r653make(T653* C,T0* a1);
T6 r653exists(T653* C);
T2 r653size_of(T0* a1);
T6 r653conforms_to(T653* C,T0* a1);
void r653copy_file(T653* C,T0* a1);
void r653connect_to(T653* C,T0* a1);
extern T658 oBC1file_tools;
extern T2 oBC657epoch_time_offset;
extern int fBC657epoch_time_offset;
T2 r653epoch_time_offset(void);
T6 r653same_physical_file(T653* C,T0* a1);
void r653delete(T653* C);
T0* r653twin(T653* C);
void r653change_name(T653* C,T0* a1);
extern T0*oBC657tmp_file1;
extern int fBC657tmp_file1;
T0* r653tmp_file1(void);
void r653old_open_read(T653* C);
T6 r653is_readable(T653* C);
extern T0*oBC654tmp_directory;
extern int fBC654tmp_directory;
T0* r653tmp_directory(void);
T0* r185out(T185* C);
extern T0*oBC185from_attribute_name;
extern T0*oBC185type_attribute_name;
T0* r185attribute_value(T185* C,T0* a1);
T6 r185se_assigned_from(T0* a1);
void r185out_in_tagged_out_memory(T185* C);
void r185make(T185* C,T0* a1,T0* a2);
void r185_69Pmake(T185* C,T0* a1,T0* a2);
T6 r185conforms_to(T185* C,T0* a1);
extern T0*oBC185to_attribute_name;
extern T0*oBC185map_element_name;
T0* r185twin(T185* C);
T0* r384out(T384* C);
T0* r384substring(T384* C,T2 a1,T2 a2);
void r384fill_from_string(T384* C,T0* a1,T2 a2);
T2 r384fill_from_stream(T384* C,T0* a1,T2 a2,T2 a3);
T6 r384se_assigned_from(T0* a1);
void r384out_in_tagged_out_memory(T384* C);
void r384move_left(T384* C,T2 a1,T2 a2,T2 a3);
void r384make(T384* C,T2 a1);
T6 r384conforms_to(T384* C,T0* a1);
void r384resize(T384* C,T2 a1);
T0* r384twin(T384* C);
extern T0*oBC658tfr1;
T6 r658is_readable(T0* a1);
T0* r787out(T787* C);
T6 r787se_assigned_from(T0* a1);
T6 r787conforms_to(T787* C,T0* a1);
T0* r787twin(T787* C);
T0* r912out(T912* C);
T6 r912se_assigned_from(T0* a1);
void r912out_in_tagged_out_memory(T912* C);
T6 r912conforms_to(T912* C,T0* a1);
T0* r912twin(T912* C);
T0* r11out(T11* C);
void r11read_command_line(T11* C);
T0* r11arguments(void);
T0* r11commandline_variables(void);
T6 r11se_assigned_from(T0* a1);
T0* r11clone(T0* a1);
void r11out_in_tagged_out_memory(T11* C);
void r11report_usage_message(T11* C);
extern T0*oBC11usage_message;
extern int fBC11usage_message;
T0* r11usage_message(void);
void r11make(T11* C);
extern T0*oBC11default_build_filename;
T6 r11conforms_to(T11* C,T0* a1);
void r11report_version_number(T11* C);
void r11exit_application(T2 a1,T0* a2);
T0* r11twin(T11* C);
void r11report_usage_error(T11* C);
T0* r33out(T33* C);
extern T0*oBC33error;
extern int fBC33error;
T0* r33error(void);
T6 r33se_assigned_from(T0* a1);
void r33out_in_tagged_out_memory(T33* C);
extern T0*oBC33output;
extern int fBC33output;
T0* r33output(void);
T6 r33conforms_to(T33* C,T0* a1);
T0* r33twin(T33* C);
extern T2 oBC58maximum_character_code;
extern int fBC58maximum_character_code;
T2 r58maximum_character_code(T58* C);
T0* r58out(T58* C);
T6 r58se_assigned_from(T0* a1);
void r58out_in_tagged_out_memory(T58* C);
T6 r58conforms_to(T58* C,T0* a1);
T0* r58twin(T58* C);
T0* r31out(T31* C);
T6 r31se_assigned_from(T0* a1);
void r31out_in_tagged_out_memory(T31* C);
T6 r31conforms_to(T31* C,T0* a1);
T0* r31twin(T31* C);
T0* r27out(T27* C);
T6 r27se_assigned_from(T0* a1);
T6 r27conforms_to(T27* C,T0* a1);
T0* r27twin(T27* C);
T0* r813out(T813* C);
T6 r813is_ascii_string(T0* a1);
T6 r813se_assigned_from(T0* a1);
void r813out_in_tagged_out_memory(T813* C);
T6 r813conforms_to(T813* C,T0* a1);
T6 r813valid_code(T2 a1);
T0* r813twin(T813* C);
T0* r44out(T44* C);
T6 r44se_assigned_from(T0* a1);
void r44out_in_tagged_out_memory(T44* C);
T6 r44conforms_to(T44* C,T0* a1);
T0* r44twin(T44* C);
T0* r57out(T57* C);
T2 r57encoded_next_value(T3 a1);
T2 r57character_byte_count(T3 a1);
T6 r57se_assigned_from(T0* a1);
void r57out_in_tagged_out_memory(T57* C);
T2 r57encoded_first_value(T3 a1);
T6 r57conforms_to(T57* C,T0* a1);
T2 r57code_byte_count(T2 a1);
T2 r57encoded_byte_count(T3 a1);
void r57append_code_to_utf8(T0* a1,T2 a2);
T0* r57twin(T57* C);
T2 r57substring_byte_count(T0* a1,T2 a2,T2 a3);
T0* r909out(T909* C);
T6 r909se_assigned_from(T0* a1);
void r909out_in_tagged_out_memory(T909* C);
T6 r909conforms_to(T909* C,T0* a1);
T0* r909twin(T909* C);
T0* r60out(T60* C);
T6 r60se_assigned_from(T0* a1);
void r60out_in_tagged_out_memory(T60* C);
T6 r60conforms_to(T60* C,T0* a1);
T3 r60to_character(T2 a1);
T0* r60twin(T60* C);
T0* r911out(T911* C);
T6 r911se_assigned_from(T0* a1);
void r911out_in_tagged_out_memory(T911* C);
T6 r911conforms_to(T911* C,T0* a1);
T0* r911twin(T911* C);
T0* r26out(T26* C);
T6 r26se_assigned_from(T0* a1);
T6 r26conforms_to(T26* C,T0* a1);
T0* r26twin(T26* C);
T0* r115out(T115* C);
T6 r115se_assigned_from(T0* a1);
void r115out_in_tagged_out_memory(T115* C);
T6 r115conforms_to(T115* C,T0* a1);
T6 r115test(T0* a1,T0* a2);
T0* r115twin(T115* C);
T0* r122get_environment_variable(T0* a1);
T0* r910out(T910* C);
T6 r910se_assigned_from(T0* a1);
void r910out_in_tagged_out_memory(T910* C);
T6 r910conforms_to(T910* C,T0* a1);
T0* r910twin(T910* C);
void r159connect_to_current_working_directory(T159* C);
void r159disconnect(T159* C);
T6 r159remove_directory(T0* a1);
extern T0*oBC159last_entry;
void r159change_current_working_directory(T159* C,T0* a1);
void r159read_entry(T159* C);
void r159connect_to(T159* C,T0* a1);
T6 r159create_new_directory(T0* a1);
T0* r45out(T45* C);
void r45wipe_out(T0* a1);
void r45keep_tail(T0* a1,T2 a2);
T0* r45as_string(T0* a1);
T6 r45se_assigned_from(T0* a1);
T0* r45clone(T0* a1);
T0* r45appended_string(T0* a1,T0* a2);
void r45out_in_tagged_out_memory(T45* C);
void r45remove_tail(T0* a1,T2 a2);
T6 r45is_integer(T0* a1);
T0* r45make(T2 a1);
T0* r45string(T0* a1);
T2 r45hexadecimal_to_integer(T0* a1);
T6 r45conforms_to(T45* C,T0* a1);
void r45keep_head(T0* a1,T2 a2);
T0* r45appended_substring(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r45new_empty_string(T0* a1,T2 a2);
T0* r45concat(T0* a1,T0* a2);
T2 r45substring_index(T0* a1,T0* a2,T2 a3);
T6 r45same_string(T0* a1,T0* a2);
T0* r45twin(T45* C);
T6 r45elks_same_string(T0* a1,T0* a2);
void r45remove_head(T0* a1,T2 a2);
void r45append_substring_to_string(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r121out(T121* C);
T0* r121variable_value(T0* a1);
T6 r121se_assigned_from(T0* a1);
void r121out_in_tagged_out_memory(T121* C);
extern T122 oBC121environment_impl;
T6 r121conforms_to(T121* C,T0* a1);
T0* r121twin(T121* C);
T0* r713out(T713* C);
T6 r713se_assigned_from(T0* a1);
void r713out_in_tagged_out_memory(T713* C);
T6 r713conforms_to(T713* C,T0* a1);
T0* r713twin(T713* C);
T2 r786day(T786* C);
T2 r786elapsed_seconds(T786* C,T786 a1);
T6 r786set(T786* C,T2 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T2 r786hour(T786* C);
T2 r786year(T786* C);
T2 r786month(T786* C);
extern T0*oBC786time_mode_memo;
T2 r786minute(T786* C);
T6 r786is_local_time(void);
T2 r786second(T786* C);
T0* r41out(T41* C);
T6 r41se_assigned_from(T0* a1);
T6 r41conforms_to(T41* C,T0* a1);
T0* r41twin(T41* C);
T0* r37out(T37* C);
T0* r37current_working_directory(T37* C);
T6 r37se_assigned_from(T0* a1);
T0* r37clone(T0* a1);
T6 r37is_windows(T37* C);
void r37out_in_tagged_out_memory(T37* C);
T6 r37conforms_to(T37* C,T0* a1);
T6 r37is_unix(T37* C);
T0* r37twin(T37* C);
extern T11*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 913
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms740_224621212;
extern T7*ms740_1232318322;
extern T7*ms63_2124547;
extern T7*ms7_241908472;
extern T7*ms740_313350252;
extern T7*ms468_10;
extern T7*ms740_92561396;
extern T7*ms740_414094759;
extern T7*ms740_1785408556;
extern T7*ms740_620986269;
extern T7*ms735_969380041;
extern T7*ms400_1686894687;
extern T7*ms740_225532234;
extern T7*ms402_1531431095;
extern T7*ms740_880035048;
extern T7*ms740_1105337616;
extern T7*ms6_79251;
extern T7*ms740_729820516;
extern T7*ms740_1639807481;
extern T7*ms7_280756769;
extern T7*ms442_823229232;
extern T7*ms740_1389019675;
extern T7*ms740_1680506019;
extern T7*ms747_32;
extern T7*ms160_46;
extern T7*ms376_1449702436;
extern T7*ms63_251;
extern T7*ms161_46;
extern T7*ms740_1806545392;
extern T7*ms413_280487577;
extern T7*ms397_1203377682;
extern T7*ms735_1806352573;
extern T7*ms740_1806352573;
extern T7*ms401_1520688928;
extern T7*ms45_0;
extern T7*ms49_0;
extern T7*ms157_80516;
extern T7*ms57_0;
extern T7*ms7_1983847;
extern T7*ms63_4763922;
extern T7*ms740_513387338;
extern T7*ms740_438332871;
extern T7*ms398_1086870388;
extern T7*ms740_1864547461;
extern T7*ms740_2065551545;
extern T7*ms399_215272365;
extern T7*ms6_18036;
extern T7*ms18_1553;
extern T7*ms396_645257649;
extern T7*ms740_987451011;
extern T7*ms740_993001251;
extern T7*ms161_0;
extern T7*ms207_0;
extern T7*ms740_930325994;
extern T7*ms740_1787513656;
extern T7*ms747_192;
extern T7*ms381_6934577;
extern T7*ms792_276;
extern T7*ms792_46;
extern T7*ms740_1383485945;
extern T7*ms160_276;
extern T7*ms740_551891802;
extern T7*ms740_1040340337;
extern T7*ms740_429369815;
extern T7*ms214_1338085634;
extern T7*ms161_276;
extern T7*ms63_5426;
extern T7*ms779_1158552108;
extern T7*ms63_14150;
extern T7*ms740_1718816811;
extern T7*ms160_8976;
extern T7*ms780_1515383187;
extern T7*ms657_250860571;
extern T7*ms657_80516;
extern T7*ms740_758578972;
extern T7*ms117_10;
extern T7*ms34_10;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void*se_ma235(int argc,...);
void*se_ma65(int argc,...);
void*se_ma731(int argc,...);
void X252put(T0*C,T2 a1);
T0* X252to_array(T0*C,T2 a1,T2 a2);
void X252add(T0*C,T0* a1);
void X89set(T0*C,T0* a1,T6 a2,T6 a3);
T0* X89item(T0*C);
void X89set_next_cursor(T0*C,T0* a1);
void X89forth(T0*C);
void X89start(T0*C);
void X89go_after(T0*C);
void X743on_doctype(T0*C,T0* a1,T0* a2,T6 a3);
void X743on_entity_declaration(T0*C,T0* a1,T6 a2,T0* a3,T0* a4,T0* a5);
void X743on_element_declaration(T0*C,T0* a1,T0* a2);
void X743on_notation_declaration(T0*C,T0* a1,T0* a2);
void X743on_attribute_declaration(T0*C,T0* a1,T0* a2,T0* a3);
T6 X132test(T0*C,T0* a1,T0* a2);
void X676out_in_tagged_out_memory(T0*C);
void X114put_right(T0*C,T0* a1);
T6 X49same_unicode_string(T0*C,T0* a1);
T0* X49as_string(T0*C);
T2 X49byte_index(T0*C,T2 a1);
T2 X49next_byte_index(T0*C,T2 a1);
void X49append_string(T0*C,T0* a1);
void X49append_substring(T0*C,T0* a1,T2 a2,T2 a3);
T2 X49item_code_at_byte_index(T0*C,T2 a1);
T0* X49string(T0*C);
T0* X49_px_43(T0*C,T0* a1);
T0* X49prefixed_string(T0*C,T0* a1);
T0* X49new_empty_string(T0*C,T2 a1);
T2 X49substring_index(T0*C,T0* a1,T2 a2);
T3 X49byte_item(T0*C,T2 a1);
T0* X7out(T0*C);
T0* X7substring(T0*C,T2 a1,T2 a2);
void X7wipe_out(T0*C);
void X7keep_tail(T0*C,T2 a1);
T2 X7item_code(T0*C,T2 a1);
void X7put(T0*C,T3 a1,T2 a2);
T6 X7is_equal(T0*C,T0* a1);
T3 X7item(T0*C,T2 a1);
void X7append(T0*C,T0* a1);
T2 X7index_of(T0*C,T3 a1,T2 a2);
void X7out_in_tagged_out_memory(T0*C);
void X7set_count(T0*C,T2 a1);
T2 X7capacity(T0*C);
T6 X7same_type(T0*C,T0* a1);
void X7remove_tail(T0*C,T2 a1);
void X7append_string(T0*C,T0* a1);
T0* X7string(T0*C);
T0* X7_px_43(T0*C,T0* a1);
void X7extend(T0*C,T3 a1);
T2 X7hash_code(T0*C);
void X7keep_head(T0*C,T2 a1);
T2 X7to_integer(T0*C);
void X7append_character(T0*C,T3 a1);
void X7resize(T0*C,T2 a1);
T2 X7substring_index(T0*C,T0* a1,T2 a2);
void X7from_external_copy(T0*C,T8 a1);
T8 X7to_external(T0*C);
T0* X7twin(T0*C);
void X7swap(T0*C,T2 a1,T2 a2);
void X323put_right(T0*C,T0* a1);
void X888put_right(T0*C,T0* a1);
T2 X167exit_code(T0*C);
void X167execute(T0*C);
T6 X167is_executable(T0*C);
T0* X162last(T0*C);
T0* X162cursor_item(T0*C,T0* a1);
T6 X162is_equal(T0*C,T0* a1);
T0* X162item(T0*C,T2 a1);
T6 X162cursor_after(T0*C,T0* a1);
void X162cursor_forth(T0*C,T0* a1);
void X162cursor_start(T0*C,T0* a1);
void X162force_last(T0*C,T0* a1);
T0* X162new_cursor(T0*C);
T0* X10out(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X746out_in_tagged_out_memory(T0*C);
void X746apply_input_buffer(T0*C);
void X655disconnect(T0*C);
T6 X655is_connected(T0*C);
void X655connect_to(T0*C,T0* a1);
T6 X1se_assigned_from(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X371clear_all(T0*C,T0* a1);
T0* X371make(T0*C,T2 a1);
T0* X371resize(T0*C,T0* a1,T2 a2);
void X38put_line(T0*C,T0* a1);
T0* X382name(T0*C);
T2 X382read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X382read_character(T0*C);
T6 X382is_open_read(T0*C);
T6 X382end_of_input(T0*C);
T3 X382last_character(T0*C);
void X92force_last(T0*C,T0* a1);
void X381fill(T0*C);
T0* X381name(T0*C);
void X677on_start_tag_finish(T0*C);
void X677on_finish(T0*C);
void X677on_content(T0*C,T0* a1);
void X677on_start(T0*C);
void X677on_processing_instruction(T0*C,T0* a1,T0* a2);
void X677on_start_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X677on_comment(T0*C,T0* a1);
void X677on_end_tag(T0*C,T0* a1,T0* a2,T0* a3);
void X677on_attribute(T0*C,T0* a1,T0* a2,T0* a3,T0* a4);
void X677on_error(T0*C,T0* a1);
T2 X459count(T0*C);
T2 X459item(T0*C,T2 a1);
T2 X459lower(T0*C);
T6 X268labeled(T0*C,T2 a1);
void X268record(T0*C,T0* a1);
void X129force(T0*C,T0* a1,T0* a2);
void X129remove(T0*C,T0* a1);
void X129search(T0*C,T0* a1);
void X129force_last(T0*C,T0* a1,T0* a2);
T0* X129new_cursor(T0*C);
T0* X163item(T0*C);
T6 X163after(T0*C);
void X163forth(T0*C);
void X163start(T0*C);
void X373put(T0*C,T0* a1,T2 a2);
T0* X373item(T0*C,T2 a1);
T375 X373storage(T0*C);
void X373set_all_with(T0*C,T0* a1);
void X373resize(T0*C,T2 a1);
void X110remove_traversing_cursor(T0*C,T0* a1);
void X110cursor_go_after(T0*C,T0* a1);
void X110add_traversing_cursor(T0*C,T0* a1);
void X110cursor_forth(T0*C,T0* a1);
void X110cursor_start(T0*C,T0* a1);
T2 X168exit_code(T0*C);
void X168execute(T0*C);
T6 X168is_executable(T0*C);
T0* X158string_to_pathname(T0*C,T0* a1);
T0* X377default_message(T0*C);
void X747read_token(T0*C);
void X747set_input_buffer(T0*C,T0* a1);
void X747set_input_file(T0*C,T0* a1);
void X747reset(T0*C);
T0* X747new_file_buffer(T0*C,T0* a1);
T6 X37is_windows(T0*C);
T6 X37is_unix(T0*C);
T0* X157pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X157relative_current_directory(T0*C);
T0* X157absolute_pathname(T0*C,T0* a1);
T0* X157dirname(T0*C,T0* a1);
T0* X157exe_extension(T0*C);
T0* X157relative_parent_directory(T0*C);
T0* X157pathname(T0*C,T0* a1,T0* a2);
T0* X157canonical_pathname(T0*C,T0* a1);
T0* T3toT41(T3 source);
T0* T2toT27(T2 source);
T2 T27toT2(T0* source);

#ifdef __cplusplus
}
#endif
