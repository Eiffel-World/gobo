#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #9 (Sunday October 21th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S63 T63;
typedef struct S384 T384;
typedef struct S246 T246;
typedef int T284;
typedef struct S360 T360;
typedef struct S202 T202;
typedef struct S225 T225;
typedef struct S301 T301;
typedef struct S279 T279;
typedef struct S157 T157;
typedef struct S67 T67;
typedef struct S16 T16;
typedef struct S207 T207;
typedef struct S332 T332;
typedef int T307;
typedef struct S329 T329;
typedef struct S198 T198;
typedef struct S87 T87;
typedef struct S133 T133;
typedef struct S47 T47;
typedef struct S322 T322;
typedef struct S48 T48;
typedef struct S125 T125;
typedef struct S370 T370;
typedef struct S122 T122;
typedef struct S330 T330;
typedef struct S334 T334;
typedef struct S45 T45;
typedef struct S155 T155;
typedef struct S229 T229;
typedef struct S388 T388;
typedef struct S415 T415;
typedef struct S52 T52;
typedef struct S410 T410;
typedef struct S232 T232;
typedef struct S74 T74;
typedef struct S161 T161;
typedef struct S414 T414;
typedef struct S134 T134;
typedef struct S215 T215;
typedef struct S81 T81;
typedef struct S416 T416;
typedef struct S342 T342;
typedef struct S371 T371;
typedef struct S219 T219;
typedef struct S140 T140;
typedef struct S357 T357;
typedef struct S211 T211;
typedef struct S365 T365;
typedef struct S165 T165;
typedef struct S44 T44;
typedef struct S359 T359;
typedef struct S394 T394;
typedef struct S249 T249;
typedef struct S105 T105;
typedef struct S281 T281;
typedef struct S7 T7;
typedef struct S352 T352;
typedef struct S66 T66;
typedef struct S209 T209;
typedef struct S276 T276;
typedef struct S221 T221;
typedef struct S292 T292;
typedef struct S398 T398;
typedef struct S43 T43;
typedef struct S397 T397;
typedef struct S306 T306;
typedef struct S192 T192;
typedef struct S223 T223;
typedef struct S58 T58;
typedef struct S159 T159;
typedef struct S256 T256;
typedef struct S142 T142;
typedef struct S367 T367;
typedef struct S79 T79;
typedef struct S230 T230;
typedef struct S217 T217;
typedef struct S84 T84;
typedef struct S139 T139;
typedef struct S369 T369;
typedef struct S135 T135;
typedef struct S83 T83;
typedef struct S25 T25;
typedef struct S169 T169;
typedef struct S251 T251;
typedef struct S167 T167;
typedef struct S177 T177;
typedef struct S28 T28;
typedef struct S103 T103;
typedef struct S69 T69;
typedef struct S254 T254;
typedef struct S200 T200;
typedef struct S98 T98;
typedef struct S91 T91;
typedef struct S363 T363;
typedef struct S392 T392;
typedef struct S327 T327;
typedef struct S343 T343;
typedef struct S304 T304;
typedef struct S344 T344;
typedef struct S141 T141;
typedef struct S126 T126;
typedef struct S339 T339;
typedef struct S130 T130;
typedef struct S321 T321;
typedef struct S90 T90;
typedef struct S163 T163;
typedef struct S85 T85;
typedef struct S213 T213;
typedef struct S51 T51;
typedef struct S308 T308;
typedef struct S196 T196;
typedef struct S259 T259;
typedef struct S102 T102;
typedef struct S328 T328;
typedef struct S417 T417;
typedef struct S138 T138;
typedef struct S366 T366;
typedef int T305;
typedef struct S195 T195;
typedef struct S49 T49;
typedef struct S89 T89;
typedef struct S340 T340;
typedef struct S300 T300;
typedef struct S346 T346;
typedef struct S173 T173;
typedef struct S235 T235;
typedef struct S171 T171;

/*C Header Pass 2 :*/
typedef T0**T179;
typedef T0**T107;
typedef T0**T253;
typedef T0**T80;
typedef T3*T9;
typedef T0**T132;
typedef T2*T88;
typedef T0**T234;
typedef T0**T325;

/*C Header Pass 3 :*/
extern T307 M307;
struct S359{T5 _time_memory;};
int se_cmpT359(T359 o1,T359 o2);
struct S139{T8 _directory_stream;T8 _current_entry;};
int se_cmpT139(T139 o1,T139 o2);
struct S69{T2 _i_code;};
int se_cmpT69(T69 o1,T69 o2);
extern T305 M305;

/*C Header Pass 4 :*/
struct S384{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T384 M384;
struct S246{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T246 M246;
extern T284 M284;
struct S360{Tid id;T5 _item;};
extern T360 M360;
struct S202{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T202 M202;
struct S225{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;};
extern T225 M225;
struct S301{Tid id;T0* _event_parser_factory;};
extern T301 M301;
struct S279{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T6 _end_of_file;T0* _character_buffer;};
extern T279 M279;
struct S157{Tid id;T2 _exit_code;T0* _project;T0* _element;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T157 M157;
struct S67{Tid id;T0* _name;T0* _value;};
extern T67 M67;
struct S16{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;};
extern T16 M16;
struct S207{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T207 M207;
struct S332{Tid id;T0* _parameters;};
extern T332 M332;
struct S329{Tid id;};
extern T329 M329;
struct S198{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T198 M198;
struct S87{Tid id;T88 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T87 M87;
struct S133{Tid id;};
extern T133 M133;
struct S47{Tid id;};
extern T47 M47;
struct S322{Tid id;};
extern T322 M322;
struct S48{Tid id;};
extern T48 M48;
struct S125{Tid id;};
extern T125 M125;
struct S370{Tid id;T0* _first;T0* _second;};
extern T370 M370;
struct S122{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T122 M122;
struct S330{Tid id;T6 _push_back_flag;T139 _basic_directory;T2 _memory;T0* _name;T6 _end_of_file;};
extern T330 M330;
struct S334{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T334 M334;
struct S45{Tid id;T2 _item;};
extern T45 M45;
struct S155{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T155 M155;
struct S229{Tid id;T0* _first;T0* _second;};
extern T229 M229;
struct S388{Tid id;T0* _item;T0* _right;};
extern T388 M388;
struct S415{Tid id;};
extern T415 M415;
struct S52{Tid id;T8 _item;};
extern T52 M52;
struct S410{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T410 M410;
struct S232{Tid id;T234 _storage;T2 _capacity;T2 _upper;};
extern T232 M232;
struct S74{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T74 M74;
struct S161{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _fish;T0* _clean;};
extern T161 M161;
struct S414{Tid id;};
extern T414 M414;
struct S134{Tid id;};
extern T134 M134;
struct S215{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _directory;};
extern T215 M215;
struct S81{Tid id;};
extern T81 M81;
struct S416{Tid id;};
extern T416 M416;
struct S342{Tid id;T0* _parameters;};
extern T342 M342;
struct S371{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T371 M371;
struct S219{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _file;T0* _to_file;T0* _to_directory;};
extern T219 M219;
struct S140{Tid id;T139 _basic_directory;};
extern T140 M140;
struct S357{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T357 M357;
struct S211{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _filename;T6 _reuse_variables;T0* _start_target_name;};
extern T211 M211;
struct S365{Tid id;T0* _item;};
extern T365 M365;
struct S165{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _command_line;};
extern T165 M165;
struct S44{Tid id;T6 _item;};
extern T44 M44;
extern T359 M359;
struct S394{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T394 M394;
struct S249{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _source_filenames;T0* _target_filename;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;};
extern T249 M249;
struct S105{Tid id;T107 _storage;T2 _capacity;T2 _upper;};
extern T105 M105;
struct S281{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T281 M281;
struct S352{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T352 M352;
struct S66{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T66 M66;
struct S209{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _config_filename;T0* _compile;T0* _defines;};
extern T209 M209;
struct S276{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T276 M276;
struct S221{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _file;T0* _to_file;T0* _to_directory;};
extern T221 M221;
struct S63{Tid id;T0* _children;T0* _attributes;T0* _name;T0* _content;};
extern T63 M63;
struct S292{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _entry_buffer;T139 _basic_directory;};
extern T292 M292;
struct S398{Tid id;};
extern T398 M398;
struct S397{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T397 M397;
struct S306{Tid id;};
extern T306 M306;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S192{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T192 M192;
struct S223{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _name;T0* _value;};
extern T223 M223;
struct S58{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T58 M58;
struct S159{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _finish_freezing;T0* _clean;};
extern T159 M159;
struct S256{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T256 M256;
struct S142{Tid id;};
extern T142 M142;
struct S367{Tid id;};
extern T367 M367;
struct S79{Tid id;T80 _storage;T2 _capacity;T2 _upper;};
extern T79 M79;
struct S230{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T230 M230;
struct S217{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _directory;T0* _file;};
extern T217 M217;
struct S84{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T84 M84;
extern T139 M139;
struct S369{Tid id;T0* _first;T0* _second;};
extern T369 M369;
struct S135{Tid id;};
extern T135 M135;
struct S83{Tid id;T2 _type;};
extern T83 M83;
struct S169{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _name;T0* _value;};
extern T169 M169;
struct S251{Tid id;T253 _storage;T2 _capacity;T2 _upper;};
extern T251 M251;
struct S167{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _executable;T0* _source_filename;};
extern T167 M167;
struct S177{Tid id;T179 _storage;T2 _capacity;T2 _upper;};
extern T177 M177;
struct S28{Tid id;T0* _build_filename;T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T0* _parent_project;T0* _child_project;T0* _current_target;T0* _root_element;};
extern T28 M28;
struct S25{Tid id;T0* _i_representation;};
extern T25 M25;
struct S103{Tid id;T88 _storage;T2 _capacity;T2 _upper;};
extern T103 M103;
extern T69 M69;
struct S254{Tid id;};
extern T254 M254;
struct S200{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;};
extern T200 M200;
struct S98{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T98 M98;
struct S91{Tid id;};
extern T91 M91;
struct S363{Tid id;T2 _last_code;T2 _next_pos;};
extern T363 M363;
struct S392{Tid id;T0* _uri;};
extern T392 M392;
struct S327{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T327 M327;
struct S343{Tid id;T139 _basic_directory;T0* _name;};
extern T343 M343;
struct S304{Tid id;};
extern T304 M304;
struct S344{Tid id;T139 _basic_directory;T0* _name;};
extern T344 M344;
struct S141{Tid id;T139 _basic_directory;};
extern T141 M141;
struct S43{Tid id;T0* _description;T0* _name;T0* _project;T6 _is_executed;T0* _target_element;};
extern T43 M43;
struct S126{Tid id;};
extern T126 M126;
struct S339{Tid id;T107 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T339 M339;
struct S130{Tid id;T132 _storage;T2 _capacity;T2 _upper;};
extern T130 M130;
struct S321{Tid id;T325 _storage;T2 _capacity;T2 _upper;};
extern T321 M321;
struct S90{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T90 M90;
struct S163{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _esd_filename;T0* _clean;T6 _recursive_clean;};
extern T163 M163;
struct S85{Tid id;T2 _count;T0* _storage;};
extern T85 M85;
struct S213{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _message;};
extern T213 M213;
struct S51{Tid id;T3 _item;};
extern T51 M51;
struct S308{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T308 M308;
struct S196{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T196 M196;
struct S259{Tid id;T0* _implementation;T0* _root_element;};
extern T259 M259;
struct S102{Tid id;};
extern T102 M102;
struct S328{Tid id;};
extern T328 M328;
struct S417{Tid id;};
extern T417 M417;
struct S138{Tid id;T139 _basic_directory;};
extern T138 M138;
struct S366{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T366 M366;
struct S195{Tid id;};
extern T195 M195;
struct S49{Tid id;};
extern T49 M49;
struct S89{Tid id;T0* _variables;};
extern T89 M89;
struct S340{Tid id;T0* _program_name;};
extern T340 M340;
struct S300{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T300 M300;
struct S346{Tid id;T0* _command;T2 _exit_code;};
extern T346 M346;
struct S173{Tid id;T2 _exit_code;T0* _project;T0* _element;T6 _verbose;T0* _system_command;T0* _cluster_command;T6 _validate_command;T0* _xace_filename;T0* _output_filename;T0* _defines;};
extern T173 M173;
struct S235{Tid id;};
extern T235 M235;
struct S171{Tid id;T2 _exit_code;T0* _project;T0* _element;T0* _name;};
extern T171 M171;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_fstat.h) is automatically 
  included when some external "SmallEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_mtime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_sprintf_* feature is used.
*/

void basic_sprintf_double(char*b, int f, double d);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_time.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_TIME
  is used (ie. in live code).
*/
#include <time.h>

#ifdef WIN32
#include <windows.h>
#endif

#define basic_time_clock (clock())
#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, 
			     EIF_INTEGER mon,
			     EIF_INTEGER mday,
			     EIF_INTEGER hour,
			     EIF_INTEGER min,
			     EIF_INTEGER sec);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically 
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
extern T9 oBC5sprintf_buffer;
extern int fBC5sprintf_buffer;
T9 r5sprintf_buffer(void);
void r5append_in_format(T5 C,T0* a1,T2 a2);
void r179clear_all(T179 C,T2 a1);
T179 r179realloc(T179 C,T2 a1,T2 a2);
void r179set_all_with(T179 C,T0* a1,T2 a2);
void r179clear(T179 C,T2 a1,T2 a2);
void r179copy_from(T179 C,T179 a1,T2 a2);
void r107clear_all(T107 C,T2 a1);
T107 r107realloc(T107 C,T2 a1,T2 a2);
void r107move(T107 C,T2 a1,T2 a2,T2 a3);
void r107set_all_with(T107 C,T0* a1,T2 a2);
void r107clear(T107 C,T2 a1,T2 a2);
void r107copy_from(T107 C,T107 a1,T2 a2);
void r253clear_all(T253 C,T2 a1);
T253 r253realloc(T253 C,T2 a1,T2 a2);
void r253set_all_with(T253 C,T0* a1,T2 a2);
void r253clear(T253 C,T2 a1,T2 a2);
void r253copy_from(T253 C,T253 a1,T2 a2);
void r80clear_all(T80 C,T2 a1);
T80 r80realloc(T80 C,T2 a1,T2 a2);
void r80set_all_with(T80 C,T0* a1,T2 a2);
void r80clear(T80 C,T2 a1,T2 a2);
void r80copy_from(T80 C,T80 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r132clear_all(T132 C,T2 a1);
T132 r132realloc(T132 C,T2 a1,T2 a2);
void r132set_all_with(T132 C,T0* a1,T2 a2);
void r132clear(T132 C,T2 a1,T2 a2);
void r132copy_from(T132 C,T132 a1,T2 a2);
void r88clear_all(T88 C,T2 a1);
T88 r88realloc(T88 C,T2 a1,T2 a2);
void r88move(T88 C,T2 a1,T2 a2,T2 a3);
void r88set_all_with(T88 C,T2 a1,T2 a2);
void r88clear(T88 C,T2 a1,T2 a2);
void r88copy_from(T88 C,T88 a1,T2 a2);
void r234clear_all(T234 C,T2 a1);
T234 r234realloc(T234 C,T2 a1,T2 a2);
void r234set_all_with(T234 C,T0* a1,T2 a2);
void r234clear(T234 C,T2 a1,T2 a2);
void r234copy_from(T234 C,T234 a1,T2 a2);
void r325clear_all(T325 C,T2 a1);
T325 r325realloc(T325 C,T2 a1,T2 a2);
void r325set_all_with(T325 C,T0* a1,T2 a2);
void r325clear(T325 C,T2 a1,T2 a2);
void r325copy_from(T325 C,T325 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r87copy(T87* C,T0* a1);
T2 r87count(T87* C);
T2 r87item(T87* C,T2 a1);
T6 r87se_assigned_from(T0* a1);
void r87print_on(T87* C,T0* a1);
void r87out_in_tagged_out_memory(T87* C);
void r87make(T87* C,T2 a1,T2 a2);
void r87fill_tagged_out_memory(T87* C);
T6 r87conforms_to(T87* C,T0* a1);
void r87resize(T87* C,T2 a1,T2 a2);
T0* r87twin(T87* C);
void r232copy(T232* C,T0* a1);
T6 r232se_assigned_from(T0* a1);
void r232print_on(T232* C,T0* a1);
void r232out_in_tagged_out_memory(T232* C);
void r232make(T232* C,T2 a1);
void r232fill_tagged_out_memory(T232* C);
T6 r232conforms_to(T232* C,T0* a1);
void r232resize(T232* C,T2 a1);
T0* r232twin(T232* C);
void r105copy(T105* C,T0* a1);
T6 r105se_assigned_from(T0* a1);
void r105print_on(T105* C,T0* a1);
void r105out_in_tagged_out_memory(T105* C);
void r105make(T105* C,T2 a1);
void r105fill_tagged_out_memory(T105* C);
T6 r105conforms_to(T105* C,T0* a1);
void r105resize(T105* C,T2 a1);
T0* r105twin(T105* C);
void r79copy(T79* C,T0* a1);
T6 r79se_assigned_from(T0* a1);
void r79print_on(T79* C,T0* a1);
void r79out_in_tagged_out_memory(T79* C);
void r79make(T79* C,T2 a1);
void r79fill_tagged_out_memory(T79* C);
T6 r79conforms_to(T79* C,T0* a1);
void r79resize(T79* C,T2 a1);
T0* r79twin(T79* C);
void r251copy(T251* C,T0* a1);
T6 r251se_assigned_from(T0* a1);
void r251print_on(T251* C,T0* a1);
void r251out_in_tagged_out_memory(T251* C);
void r251make(T251* C,T2 a1);
void r251fill_tagged_out_memory(T251* C);
T6 r251conforms_to(T251* C,T0* a1);
void r251resize(T251* C,T2 a1);
T0* r251twin(T251* C);
void r177copy(T177* C,T0* a1);
T6 r177se_assigned_from(T0* a1);
void r177print_on(T177* C,T0* a1);
void r177out_in_tagged_out_memory(T177* C);
void r177make(T177* C,T2 a1);
void r177fill_tagged_out_memory(T177* C);
T6 r177conforms_to(T177* C,T0* a1);
void r177resize(T177* C,T2 a1);
T0* r177twin(T177* C);
void r103copy(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_on(T103* C,T0* a1);
void r103out_in_tagged_out_memory(T103* C);
void r103make(T103* C,T2 a1);
void r103fill_tagged_out_memory(T103* C);
T6 r103conforms_to(T103* C,T0* a1);
void r103resize(T103* C,T2 a1);
T0* r103twin(T103* C);
void r103with_capacity(T103* C,T2 a1);
void r103from_collection(T103* C,T0* a1);
void r339copy(T339* C,T0* a1);
void r339force(T339* C,T0* a1,T2 a2);
T2 r339count(T339* C);
T0* r339item(T339* C,T2 a1);
T6 r339valid_index(T339* C,T2 a1);
T6 r339se_assigned_from(T0* a1);
void r339print_on(T339* C,T0* a1);
void r339out_in_tagged_out_memory(T339* C);
void r339make(T339* C,T2 a1,T2 a2);
void r339fill_tagged_out_memory(T339* C);
T6 r339conforms_to(T339* C,T0* a1);
void r339add_last(T339* C,T0* a1);
void r339resize(T339* C,T2 a1,T2 a2);
T0* r339twin(T339* C);
void r130copy(T130* C,T0* a1);
T6 r130se_assigned_from(T0* a1);
void r130print_on(T130* C,T0* a1);
void r130out_in_tagged_out_memory(T130* C);
void r130make(T130* C,T2 a1);
void r130fill_tagged_out_memory(T130* C);
T6 r130conforms_to(T130* C,T0* a1);
void r130resize(T130* C,T2 a1);
T0* r130twin(T130* C);
void r321copy(T321* C,T0* a1);
T2 r321count(T321* C);
T0* r321item(T321* C,T2 a1);
T6 r321se_assigned_from(T0* a1);
void r321print_on(T321* C,T0* a1);
void r321out_in_tagged_out_memory(T321* C);
void r321make(T321* C,T2 a1);
void r321fill_tagged_out_memory(T321* C);
T6 r321conforms_to(T321* C,T0* a1);
void r321resize(T321* C,T2 a1);
T0* r321twin(T321* C);
void r384copy(T384* C,T0* a1);
void r384set(T384* C,T0* a1,T6 a2,T6 a3);
T6 r384se_assigned_from(T0* a1);
void r384print_on(T384* C,T0* a1);
void r384out_in_tagged_out_memory(T384* C);
void r384make(T384* C,T0* a1);
T6 r384conforms_to(T384* C,T0* a1);
void r384set_after(T384* C);
T0* r384twin(T384* C);
void r246copy(T246* C,T0* a1);
T6 r246se_assigned_from(T0* a1);
void r246print_on(T246* C,T0* a1);
void r246out_in_tagged_out_memory(T246* C);
T6 r246off(T246* C);
T6 r246conforms_to(T246* C,T0* a1);
T0* r246twin(T246* C);
T2 r202new_capacity(T2 a1);
void r202copy(T202* C,T0* a1);
T6 r202extendible(T202* C,T2 a1);
void r202remove_traversing_cursor(T202* C,T0* a1);
void r202move_all_cursors_after(T202* C);
void r202add_traversing_cursor(T202* C,T0* a1);
T6 r202se_assigned_from(T0* a1);
void r202print_on(T202* C,T0* a1);
T0* r202clone(T0* a1);
void r202out_in_tagged_out_memory(T202* C);
T6 r202cursor_before(T0* a1);
void r202make(T202* C,T2 a1);
T6 r202cursor_after(T0* a1);
T6 r202conforms_to(T202* C,T0* a1);
void r202resize(T202* C,T2 a1);
T0* r202twin(T202* C);
void r202force_last(T202* C,T0* a1);
T0* r202new_cursor(T202* C);
T6 r202cursor_off(T0* a1);
void r207copy(T207* C,T0* a1);
T6 r207se_assigned_from(T0* a1);
void r207print_on(T207* C,T0* a1);
void r207out_in_tagged_out_memory(T207* C);
T6 r207off(T207* C);
T6 r207conforms_to(T207* C,T0* a1);
T0* r207twin(T207* C);
void r322clear_all(T0* a1);
T6 r322se_assigned_from(T0* a1);
void r322print_on(T322* C,T0* a1);
void r322out_in_tagged_out_memory(T322* C);
T0* r322make(T2 a1);
T6 r322conforms_to(T322* C,T0* a1);
T0* r322resize(T0* a1,T2 a2);
T0* r322twin(T322* C);
T6 r125se_assigned_from(T0* a1);
void r125print_on(T125* C,T0* a1);
void r125out_in_tagged_out_memory(T125* C);
T0* r125to_fixed_array(T0* a1);
T0* r125make(T2 a1);
T0* r125make_from_array(T0* a1);
T6 r125conforms_to(T125* C,T0* a1);
T0* r125resize(T0* a1,T2 a2);
T0* r125twin(T125* C);
T6 r370se_assigned_from(T0* a1);
void r370print_on(T370* C,T0* a1);
void r370out_in_tagged_out_memory(T370* C);
void r370make(T370* C,T0* a1,T0* a2);
T6 r370conforms_to(T370* C,T0* a1);
T0* r370twin(T370* C);
void r122copy(T122* C,T0* a1);
T0* r122key(T122* C);
T0* r122item(T122* C);
T6 r122se_assigned_from(T0* a1);
void r122print_on(T122* C,T0* a1);
void r122out_in_tagged_out_memory(T122* C);
T6 r122after(T122* C);
void r122make(T122* C,T0* a1);
T6 r122off(T122* C);
T6 r122conforms_to(T122* C,T0* a1);
T0* r122twin(T122* C);
void r155copy(T155* C,T0* a1);
T6 r155se_assigned_from(T0* a1);
void r155print_on(T155* C,T0* a1);
void r155out_in_tagged_out_memory(T155* C);
T6 r155off(T155* C);
T6 r155conforms_to(T155* C,T0* a1);
T0* r155twin(T155* C);
T6 r229se_assigned_from(T0* a1);
void r229print_on(T229* C,T0* a1);
void r229out_in_tagged_out_memory(T229* C);
void r229make(T229* C,T0* a1,T0* a2);
T6 r229conforms_to(T229* C,T0* a1);
T0* r229twin(T229* C);
T6 r388se_assigned_from(T0* a1);
void r388print_on(T388* C,T0* a1);
void r388out_in_tagged_out_memory(T388* C);
T6 r388conforms_to(T388* C,T0* a1);
T0* r388twin(T388* C);
void r410copy(T410* C,T0* a1);
T6 r410se_assigned_from(T0* a1);
void r410print_on(T410* C,T0* a1);
void r410out_in_tagged_out_memory(T410* C);
T6 r410off(T410* C);
T6 r410conforms_to(T410* C,T0* a1);
T0* r410twin(T410* C);
T2 r74new_capacity(T2 a1);
void r74copy(T74* C,T0* a1);
T6 r74extendible(T74* C,T2 a1);
void r74remove_traversing_cursor(T74* C,T0* a1);
T0* r74item(T74* C,T2 a1);
void r74move_all_cursors_after(T74* C);
void r74add_traversing_cursor(T74* C,T0* a1);
T6 r74se_assigned_from(T0* a1);
void r74print_on(T74* C,T0* a1);
T0* r74clone(T0* a1);
void r74out_in_tagged_out_memory(T74* C);
T6 r74cursor_before(T0* a1);
void r74make(T74* C,T2 a1);
T6 r74cursor_after(T0* a1);
T6 r74conforms_to(T74* C,T0* a1);
void r74resize(T74* C,T2 a1);
T0* r74twin(T74* C);
void r74force_last(T74* C,T0* a1);
T0* r74new_cursor(T74* C);
T6 r74cursor_off(T0* a1);
void r371copy(T371* C,T0* a1);
T0* r371cursor_item(T0* a1);
void r371remove_traversing_cursor(T371* C,T0* a1);
void r371move_all_cursors_after(T371* C);
void r371add_traversing_cursor(T371* C,T0* a1);
T6 r371se_assigned_from(T0* a1);
void r371print_on(T371* C,T0* a1);
void r371out_in_tagged_out_memory(T371* C);
void r371make(T371* C);
T6 r371cursor_after(T0* a1);
T6 r371conforms_to(T371* C,T0* a1);
void r371cursor_forth(T371* C,T0* a1);
void r371cursor_start(T371* C,T0* a1);
T0* r371twin(T371* C);
T0* r371new_cursor(T371* C);
void r371put_last(T371* C,T0* a1);
T6 r371cursor_off(T0* a1);
T6 r365se_assigned_from(T0* a1);
void r365print_on(T365* C,T0* a1);
void r365out_in_tagged_out_memory(T365* C);
T6 r365conforms_to(T365* C,T0* a1);
T0* r365twin(T365* C);
T2 r394new_capacity(T2 a1);
void r394copy(T394* C,T0* a1);
T6 r394extendible(T394* C,T2 a1);
void r394force(T394* C,T0* a1);
T0* r394item(T394* C);
T6 r394se_assigned_from(T0* a1);
void r394print_on(T394* C,T0* a1);
T0* r394clone(T0* a1);
void r394out_in_tagged_out_memory(T394* C);
void r394make(T394* C,T2 a1);
void r394remove(T394* C);
T6 r394conforms_to(T394* C,T0* a1);
void r394resize(T394* C,T2 a1);
T0* r394twin(T394* C);
T2 r66new_capacity(T2 a1);
void r66copy(T66* C,T0* a1);
T6 r66extendible(T66* C,T2 a1);
void r66remove_traversing_cursor(T66* C,T0* a1);
void r66move_all_cursors_after(T66* C);
void r66add_traversing_cursor(T66* C,T0* a1);
T6 r66se_assigned_from(T0* a1);
void r66print_on(T66* C,T0* a1);
T0* r66clone(T0* a1);
void r66out_in_tagged_out_memory(T66* C);
T6 r66cursor_before(T0* a1);
void r66make(T66* C,T2 a1);
T6 r66cursor_after(T0* a1);
T6 r66conforms_to(T66* C,T0* a1);
void r66resize(T66* C,T2 a1);
T0* r66twin(T66* C);
void r66force_last(T66* C,T0* a1);
T0* r66new_cursor(T66* C);
void r66put_last(T66* C,T0* a1);
T6 r66cursor_off(T0* a1);
void r276copy(T276* C,T0* a1);
T6 r276se_assigned_from(T0* a1);
void r276print_on(T276* C,T0* a1);
void r276out_in_tagged_out_memory(T276* C);
T6 r276off(T276* C);
T6 r276conforms_to(T276* C,T0* a1);
T0* r276twin(T276* C);
T6 r398se_assigned_from(T0* a1);
void r398print_on(T398* C,T0* a1);
void r398out_in_tagged_out_memory(T398* C);
T0* r398make(T2 a1);
T6 r398conforms_to(T398* C,T0* a1);
T0* r398resize(T0* a1,T2 a2);
T0* r398twin(T398* C);
void r192copy(T192* C,T0* a1);
T6 r192se_assigned_from(T0* a1);
void r192print_on(T192* C,T0* a1);
void r192out_in_tagged_out_memory(T192* C);
T6 r192off(T192* C);
T6 r192conforms_to(T192* C,T0* a1);
T0* r192twin(T192* C);
T2 r58new_capacity(T2 a1);
void r58copy(T58* C,T0* a1);
T6 r58extendible(T58* C,T2 a1);
void r58force(T58* C,T0* a1);
T0* r58item(T58* C);
T6 r58se_assigned_from(T0* a1);
void r58print_on(T58* C,T0* a1);
T0* r58clone(T0* a1);
void r58out_in_tagged_out_memory(T58* C);
void r58make(T58* C,T2 a1);
void r58remove(T58* C);
T6 r58conforms_to(T58* C,T0* a1);
void r58resize(T58* C,T2 a1);
T0* r58twin(T58* C);
T2 r256new_capacity(T2 a1);
void r256copy(T256* C,T0* a1);
T6 r256extendible(T256* C,T2 a1);
void r256remove_traversing_cursor(T256* C,T0* a1);
void r256move_all_cursors_after(T256* C);
void r256add_traversing_cursor(T256* C,T0* a1);
T6 r256se_assigned_from(T0* a1);
void r256print_on(T256* C,T0* a1);
T0* r256clone(T0* a1);
void r256out_in_tagged_out_memory(T256* C);
T6 r256cursor_before(T0* a1);
void r256make(T256* C,T2 a1);
T6 r256cursor_after(T0* a1);
T6 r256conforms_to(T256* C,T0* a1);
void r256resize(T256* C,T2 a1);
T0* r256twin(T256* C);
void r256force_last(T256* C,T0* a1);
T0* r256new_cursor(T256* C);
T6 r256cursor_off(T0* a1);
T6 r142se_assigned_from(T0* a1);
void r142print_on(T142* C,T0* a1);
void r142out_in_tagged_out_memory(T142* C);
T0* r142make(T2 a1);
T6 r142conforms_to(T142* C,T0* a1);
T0* r142resize(T0* a1,T2 a2);
T0* r142twin(T142* C);
T2 r230new_capacity(T2 a1);
void r230copy(T230* C,T0* a1);
T6 r230extendible(T230* C,T2 a1);
void r230remove_traversing_cursor(T230* C,T0* a1);
void r230move_all_cursors_after(T230* C);
void r230add_traversing_cursor(T230* C,T0* a1);
T6 r230se_assigned_from(T0* a1);
void r230print_on(T230* C,T0* a1);
T0* r230clone(T0* a1);
void r230out_in_tagged_out_memory(T230* C);
T6 r230cursor_before(T0* a1);
void r230make(T230* C,T2 a1);
T6 r230cursor_after(T0* a1);
T6 r230conforms_to(T230* C,T0* a1);
void r230resize(T230* C,T2 a1);
T0* r230twin(T230* C);
void r230force_last(T230* C,T0* a1);
T0* r230new_cursor(T230* C);
T6 r230cursor_off(T0* a1);
T6 r369se_assigned_from(T0* a1);
void r369print_on(T369* C,T0* a1);
void r369out_in_tagged_out_memory(T369* C);
void r369make(T369* C,T0* a1,T0* a2);
T6 r369conforms_to(T369* C,T0* a1);
T0* r369twin(T369* C);
T6 r254se_assigned_from(T0* a1);
void r254print_on(T254* C,T0* a1);
void r254out_in_tagged_out_memory(T254* C);
T0* r254make(T2 a1);
T6 r254conforms_to(T254* C,T0* a1);
T0* r254resize(T0* a1,T2 a2);
T0* r254twin(T254* C);
T2 r98new_capacity(T2 a1);
void r98copy(T98* C,T0* a1);
void r98force(T98* C,T0* a1,T0* a2);
void r98make_clashes(T98* C,T2 a1);
T0* r98cursor_item(T98* C,T0* a1);
void r98search_position(T98* C,T0* a1);
void r98remove_traversing_cursor(T98* C,T0* a1);
void r98clone_slots(T98* C);
extern T0*oBC94FIXED_INTEGER_ARRAY_;
void r98keys_resize(T98* C,T2 a1);
void r98clone_clashes(T98* C);
void r98move_all_cursors_after(T98* C);
void r98make_items(T98* C,T2 a1);
void r98add_traversing_cursor(T98* C,T0* a1);
T6 r98se_assigned_from(T0* a1);
void r98print_on(T98* C,T0* a1);
T0* r98clone(T0* a1);
void r98remove_position(T98* C,T2 a1);
void r98out_in_tagged_out_memory(T98* C);
void r98make(T98* C,T2 a1);
void r98remove(T98* C,T0* a1);
T0* r98cursor_key(T98* C,T0* a1);
void r98clone_items(T98* C);
T6 r98cursor_after(T0* a1);
T6 r98conforms_to(T98* C,T0* a1);
void r98make_keys(T98* C,T2 a1);
T2 r98hash_position(T98* C,T0* a1);
void r98cursor_forth(T98* C,T0* a1);
void r98items_resize(T98* C,T2 a1);
void r98clone_keys(T98* C);
void r98move_cursors_after(T98* C,T2 a1);
void r98resize(T98* C,T2 a1);
T0* r98found_item(T98* C);
void r98make_with_equality_testers(T98* C,T2 a1,T0* a2,T0* a3);
T6 r98found(T98* C);
void r98move_cursors_forth(T98* C,T2 a1);
void r98cursor_start(T98* C,T0* a1);
void r98search(T98* C,T0* a1);
void r98clashes_resize(T98* C,T2 a1);
void r98slots_resize(T98* C,T2 a1);
T0* r98twin(T98* C);
T0* r98new_cursor(T98* C);
void r98make_slots(T98* C,T2 a1);
void r98move_all_cursors(T98* C,T2 a1,T2 a2);
T2 r98new_modulus(T2 a1);
T6 r98cursor_off(T0* a1);
T6 r126se_assigned_from(T0* a1);
void r126print_on(T126* C,T0* a1);
void r126out_in_tagged_out_memory(T126* C);
T0* r126make(T2 a1);
T6 r126conforms_to(T126* C,T0* a1);
T0* r126resize(T0* a1,T2 a2);
T0* r126twin(T126* C);
T2 r90new_capacity(T2 a1);
void r90copy(T90* C,T0* a1);
T6 r90extendible(T90* C,T2 a1);
void r90remove_traversing_cursor(T90* C,T0* a1);
void r90move_all_cursors_after(T90* C);
void r90add_traversing_cursor(T90* C,T0* a1);
T6 r90se_assigned_from(T0* a1);
void r90print_on(T90* C,T0* a1);
T0* r90clone(T0* a1);
void r90out_in_tagged_out_memory(T90* C);
T6 r90cursor_before(T0* a1);
void r90make(T90* C,T2 a1);
T6 r90cursor_after(T0* a1);
T6 r90conforms_to(T90* C,T0* a1);
void r90resize(T90* C,T2 a1);
T0* r90twin(T90* C);
void r90force_last(T90* C,T0* a1);
T0* r90new_cursor(T90* C);
T6 r90cursor_off(T0* a1);
T6 r102se_assigned_from(T0* a1);
void r102print_on(T102* C,T0* a1);
void r102out_in_tagged_out_memory(T102* C);
T6 r102conforms_to(T102* C,T0* a1);
T6 r102test(T0* a1,T0* a2);
T0* r102twin(T102* C);
T6 r195se_assigned_from(T0* a1);
void r195print_on(T195* C,T0* a1);
void r195out_in_tagged_out_memory(T195* C);
T0* r195make(T2 a1);
T6 r195conforms_to(T195* C,T0* a1);
T0* r195resize(T0* a1,T2 a2);
T0* r195twin(T195* C);
T6 r235se_assigned_from(T0* a1);
void r235print_on(T235* C,T0* a1);
void r235out_in_tagged_out_memory(T235* C);
T0* r235make(T2 a1);
T6 r235conforms_to(T235* C,T0* a1);
T0* r235resize(T0* a1,T2 a2);
T0* r235twin(T235* C);
extern T0*oBC59Dir_attribute_name;
extern int fBC59Dir_attribute_name;
T0* r225Dir_attribute_name(void);
extern T0*oBC29unix_file_system;
void r225_59Pmake_from_element(T225* C,T0* a1,T0* a2);
extern T0*oBC225Output_filename_attribute_name;
extern int fBC225Output_filename_attribute_name;
T0* r225Output_filename_attribute_name(void);
void r225make_from_element(T225* C,T0* a1,T0* a2);
void r225trace(T225* C,T0* a1);
extern T0*oBC29file_system;
extern int fBC29file_system;
T0* r225file_system(void);
extern T0*oBC225Stylesheet_filename_attribute_name;
extern int fBC225Stylesheet_filename_attribute_name;
T0* r225Stylesheet_filename_attribute_name(void);
T6 r225se_assigned_from(T0* a1);
void r225print_on(T225* C,T0* a1);
T0* r225clone(T0* a1);
void r225out_in_tagged_out_memory(T225* C);
extern T0*oBC61std;
void r225make(T225* C,T0* a1);
extern T0*oBC225Parameter_element_name;
extern int fBC225Parameter_element_name;
T0* r225Parameter_element_name(void);
extern T0*oBC30operating_system;
T0* r225uc_attribute_value(T225* C,T0* a1,T0* a2);
extern T0*oBC225Value_attribute_name;
extern int fBC225Value_attribute_name;
T0* r225Value_attribute_name(void);
T6 r225conforms_to(T225* C,T0* a1);
void r225execute(T225* C);
T6 r225has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC19Name_attribute_name;
extern int fBC19Name_attribute_name;
T0* r225Name_attribute_name(void);
void r225_60Pmake(T225* C,T0* a1);
T0* r225twin(T225* C);
extern T0*oBC29windows_file_system;
void r225execute_shell(T225* C,T0* a1);
T6 r225is_executable(T225* C);
extern T0*oBC225Input_filename_attribute_name;
extern int fBC225Input_filename_attribute_name;
T0* r225Input_filename_attribute_name(void);
T6 r301se_assigned_from(T0* a1);
void r301print_on(T301* C,T0* a1);
void r301out_in_tagged_out_memory(T301* C);
T6 r301conforms_to(T301* C,T0* a1);
T0* r301twin(T301* C);
T0* r140pathname_from_file_system(T140* C,T0* a1,T0* a2);
T6 r140is_absolute_pathname(T0* a1);
T0* r140current_working_directory(T140* C);
void r140cd(T140* C,T0* a1);
T6 r140file_exists(T0* a1);
T6 r140directory_exists(T0* a1);
void r140recursive_delete_directory(T0* a1);
T0* r140absolute_pathname(T140* C,T0* a1);
T0* r140current_drive(T140* C);
T6 r140se_assigned_from(T0* a1);
void r140print_on(T140* C,T0* a1);
T0* r140clone(T0* a1);
T0* r140dirname(T0* a1);
void r140delete_file(T0* a1);
void r140out_in_tagged_out_memory(T140* C);
void r140set_current_working_directory(T140* C,T0* a1);
T0* r140cwd(T140* C);
T6 r140same_type(T140* C,T0* a1);
T6 r140is_file_readable(T0* a1);
void r140recursive_create_directory(T0* a1);
extern T0*oBC136tmp_file;
extern int fBC136tmp_file;
T0* r140tmp_file(void);
T6 r140conforms_to(T140* C,T0* a1);
void r140copy_file(T0* a1,T0* a2);
T0* r140string_to_pathname(T0* a1);
void r140rename_file(T0* a1,T0* a2);
T2 r140file_time_stamp(T0* a1);
extern T0*oBC140root_directory;
T6 r140is_relative_pathname(T0* a1);
T6 r140is_root_directory(T0* a1);
T6 r140same_physical_file(T0* a1,T0* a2);
T0* r140pathname_to_string(T0* a1);
T0* r140twin(T140* C);
extern T0*oBC22STRING_;
T0* r140canonical_pathname(T0* a1);
T0* r140pathname(T0* a1,T0* a2);
extern T0*oBC136tmp_directory;
extern int fBC136tmp_directory;
T0* r140tmp_directory(void);
extern T0*oBC157Clean_attribute_name;
extern int fBC157Clean_attribute_name;
T0* r157Clean_attribute_name(void);
T0* r157Dir_attribute_name(void);
void r157_59Pmake_from_element(T157* C,T0* a1,T0* a2);
void r157make_from_element(T157* C,T0* a1,T0* a2);
void r157trace(T157* C,T0* a1);
T6 r157is_cleanable(T157* C);
T0* r157attribute_value(T157* C,T0* a1,T0* a2);
extern T0*oBC157Ace_attribute_name;
extern int fBC157Ace_attribute_name;
T0* r157Ace_attribute_name(void);
extern T0*oBC157Root_class_attribute_name;
extern int fBC157Root_class_attribute_name;
T0* r157Root_class_attribute_name(void);
T0* r157file_system(void);
T6 r157se_assigned_from(T0* a1);
void r157print_on(T157* C,T0* a1);
T0* r157clone(T0* a1);
void r157out_in_tagged_out_memory(T157* C);
T0* r157new_ace_cmdline(T157* C);
T6 r157uc_boolean_value(T157* C,T0* a1,T0* a2);
extern T0*oBC19True_attribute_value;
extern int fBC19True_attribute_value;
T0* r157True_attribute_value(void);
T0* r157uc_attribute_value(T157* C,T0* a1,T0* a2);
extern T0*oBC157Case_insensitive_attribute_name;
extern int fBC157Case_insensitive_attribute_name;
T0* r157Case_insensitive_attribute_name(void);
T6 r157is_traditional_configuration(T157* C);
T6 r157conforms_to(T157* C,T0* a1);
void r157print(T0* a1);
extern T0*oBC157Executable_attribute_name;
extern int fBC157Executable_attribute_name;
T0* r157Executable_attribute_name(void);
extern T0*oBC157No_style_warning_attribute_name;
extern int fBC157No_style_warning_attribute_name;
T0* r157No_style_warning_attribute_name(void);
void r157execute(T157* C);
T6 r157has_uc_attribute(T0* a1,T0* a2);
T0* r157uc_attribute_value_or_default(T157* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC1std_output;
extern T0*oBC19False_attribute_value;
extern int fBC19False_attribute_value;
T0* r157False_attribute_value(void);
T0* r157attribute_value_or_default(T157* C,T0* a1,T0* a2,T0* a3);
T0* r157twin(T157* C);
T0* r157new_clean_cmdline(T157* C);
extern T0*oBC157Creation_procedure_attribute_name;
extern int fBC157Creation_procedure_attribute_name;
T0* r157Creation_procedure_attribute_name(void);
T0* r157new_traditional_cmdline(T157* C);
void r157execute_shell(T157* C,T0* a1);
T6 r157is_executable(T157* C);
T6 r157is_ace_configuration(T157* C);
T6 r67se_assigned_from(T0* a1);
void r67print_on(T67* C,T0* a1);
void r67out_in_tagged_out_memory(T67* C);
void r67make(T67* C,T0* a1,T0* a2);
T6 r67conforms_to(T67* C,T0* a1);
T0* r67twin(T67* C);
T6 r332se_assigned_from(T0* a1);
void r332print_on(T332* C,T0* a1);
void r332out_in_tagged_out_memory(T332* C);
extern T0*oBC18Arguments;
extern int fBC18Arguments;
T0* r332Arguments(void);
void r332make(T332* C,T0* a1);
T0* r332message(T332* C,T0* a1);
T6 r332conforms_to(T332* C,T0* a1);
T0* r332twin(T332* C);
T0* r332default_message(T332* C);
T0* r198Dir_attribute_name(void);
void r198_59Pmake_from_element(T198* C,T0* a1,T0* a2);
extern T0*oBC198Output_filename_attribute_name;
extern int fBC198Output_filename_attribute_name;
T0* r198Output_filename_attribute_name(void);
void r198make_from_element(T198* C,T0* a1,T0* a2);
void r198trace(T198* C,T0* a1);
T0* r198file_system(void);
T6 r198se_assigned_from(T0* a1);
void r198print_on(T198* C,T0* a1);
T0* r198clone(T0* a1);
void r198out_in_tagged_out_memory(T198* C);
T6 r198uc_boolean_value(T198* C,T0* a1,T0* a2);
void r198make(T198* C,T0* a1);
T0* r198True_attribute_value(void);
extern T0*oBC198Verbose_filename_attribute_name;
extern int fBC198Verbose_filename_attribute_name;
T0* r198Verbose_filename_attribute_name(void);
T0* r198uc_attribute_value(T198* C,T0* a1,T0* a2);
T6 r198conforms_to(T198* C,T0* a1);
void r198print(T0* a1);
void r198execute(T198* C);
T6 r198has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC198Tokens_classname_attribute_name;
extern int fBC198Tokens_classname_attribute_name;
T0* r198Tokens_classname_attribute_name(void);
T0* r198False_attribute_value(void);
void r198_60Pmake(T198* C,T0* a1);
extern T0*oBC198Separate_actions_attribute_name;
extern int fBC198Separate_actions_attribute_name;
T0* r198Separate_actions_attribute_name(void);
T0* r198twin(T198* C);
void r198execute_shell(T198* C,T0* a1);
T6 r198is_executable(T198* C);
extern T0*oBC198Input_filename_attribute_name;
extern int fBC198Input_filename_attribute_name;
T0* r198Input_filename_attribute_name(void);
T0* r330current_working_directory(T330* C);
T6 r330se_assigned_from(T0* a1);
void r330print_on(T330* C,T0* a1);
void r330old_read_character(T330* C);
T0* r330clone(T0* a1);
extern T6 oBC138is_windows;
extern int fBC138is_windows;
T6 r330is_windows(T330* C);
T6 r330old_end_of_file(T330* C);
void r330out_in_tagged_out_memory(T330* C);
void r330make(T330* C);
T6 r330conforms_to(T330* C,T0* a1);
extern T6 oBC138is_unix;
extern int fBC138is_unix;
T6 r330is_unix(T330* C);
T0* r330twin(T330* C);
T6 r334se_assigned_from(T0* a1);
void r334print_on(T334* C,T0* a1);
void r334out_in_tagged_out_memory(T334* C);
void r334report_message(T334* C,T0* a1);
T0* r334message(T0* a1);
T6 r334conforms_to(T334* C,T0* a1);
T0* r334twin(T334* C);
void r334make_standard(T334* C);
void r334report_error(T334* C,T0* a1);
extern T0*oBC161Clean_attribute_name;
extern int fBC161Clean_attribute_name;
T0* r161Clean_attribute_name(void);
T0* r161Dir_attribute_name(void);
void r161_59Pmake_from_element(T161* C,T0* a1,T0* a2);
extern T0*oBC161System_attribute_name;
extern int fBC161System_attribute_name;
T0* r161System_attribute_name(void);
void r161make_from_element(T161* C,T0* a1,T0* a2);
void r161trace(T161* C,T0* a1);
T6 r161is_cleanable(T161* C);
extern T0*oBC161Ace_attribute_name;
extern int fBC161Ace_attribute_name;
T0* r161Ace_attribute_name(void);
T0* r161file_system(void);
T6 r161se_assigned_from(T0* a1);
void r161print_on(T161* C,T0* a1);
T0* r161clone(T0* a1);
void r161out_in_tagged_out_memory(T161* C);
T6 r161uc_boolean_value(T161* C,T0* a1,T0* a2);
void r161execute_clean(T161* C);
void r161execute_compile(T161* C);
T0* r161True_attribute_value(void);
extern T0*oBC161Finalize_attribute_name;
extern int fBC161Finalize_attribute_name;
T0* r161Finalize_attribute_name(void);
T0* r161uc_attribute_value(T161* C,T0* a1,T0* a2);
T6 r161conforms_to(T161* C,T0* a1);
void r161print(T0* a1);
T6 r161is_compilable(T161* C);
void r161execute(T161* C);
T6 r161has_uc_attribute(T0* a1,T0* a2);
T0* r161uc_attribute_value_or_default(T161* C,T0* a1,T0* a2,T0* a3);
T0* r161False_attribute_value(void);
T0* r161attribute_value_or_default(T161* C,T0* a1,T0* a2,T0* a3);
T0* r161twin(T161* C);
extern T0*oBC161Fish_attribute_name;
extern int fBC161Fish_attribute_name;
T0* r161Fish_attribute_name(void);
void r161execute_shell(T161* C,T0* a1);
T6 r161is_executable(T161* C);
T0* r215Dir_attribute_name(void);
void r215_59Pmake_from_element(T215* C,T0* a1,T0* a2);
void r215make_from_element(T215* C,T0* a1,T0* a2);
void r215trace(T215* C,T0* a1);
T0* r215attribute_value(T215* C,T0* a1,T0* a2);
T0* r215file_system(void);
T6 r215se_assigned_from(T0* a1);
void r215print_on(T215* C,T0* a1);
void r215out_in_tagged_out_memory(T215* C);
void r215log(T0* a1);
T6 r215conforms_to(T215* C,T0* a1);
void r215execute(T215* C);
T0* r215twin(T215* C);
extern T0*oBC215Directory_attribute_name;
extern int fBC215Directory_attribute_name;
T0* r215Directory_attribute_name(void);
T6 r215is_executable(T215* C);
T6 r342se_assigned_from(T0* a1);
void r342print_on(T342* C,T0* a1);
void r342out_in_tagged_out_memory(T342* C);
T0* r342Arguments(void);
void r342make(T342* C,T0* a1);
T0* r342message(T342* C,T0* a1);
T6 r342conforms_to(T342* C,T0* a1);
T0* r342twin(T342* C);
T0* r342default_message(T342* C);
T0* r219Dir_attribute_name(void);
void r219_59Pmake_from_element(T219* C,T0* a1,T0* a2);
void r219make_from_element(T219* C,T0* a1,T0* a2);
void r219trace(T219* C,T0* a1);
T0* r219attribute_value(T219* C,T0* a1,T0* a2);
T0* r219file_system(void);
T6 r219se_assigned_from(T0* a1);
void r219print_on(T219* C,T0* a1);
void r219out_in_tagged_out_memory(T219* C);
T6 r219is_to_file_executable(T219* C);
void r219log(T0* a1);
extern T0*oBC219To_directory_attribute_name;
extern int fBC219To_directory_attribute_name;
T0* r219To_directory_attribute_name(void);
extern T0*oBC219To_file_attribute_name;
extern int fBC219To_file_attribute_name;
T0* r219To_file_attribute_name(void);
T6 r219conforms_to(T219* C,T0* a1);
void r219execute(T219* C);
T6 r219is_to_directory_executable(T219* C);
T0* r219twin(T219* C);
extern T0*oBC219File_attribute_name;
extern int fBC219File_attribute_name;
T0* r219File_attribute_name(void);
T6 r219is_executable(T219* C);
T6 r357is_closed(T357* C);
void r357old_close(T357* C);
void r357open_read(T357* C);
T6 r357se_assigned_from(T0* a1);
void r357print_on(T357* C,T0* a1);
void r357old_read_character(T357* C);
T6 r357old_end_of_file(T357* C);
void r357out_in_tagged_out_memory(T357* C);
void r357read_character(T357* C);
void r357close(T357* C);
void r357make(T357* C,T0* a1);
T6 r357conforms_to(T357* C,T0* a1);
void r357connect_to(T357* C,T0* a1);
void r357read_string(T357* C,T2 a1);
T0* r357twin(T357* C);
void r357old_open_read(T357* C);
T0* r211Dir_attribute_name(void);
void r211_59Pmake_from_element(T211* C,T0* a1,T0* a2);
void r211make_from_element(T211* C,T0* a1,T0* a2);
extern T0*oBC211Start_target_attribute_name;
extern int fBC211Start_target_attribute_name;
T0* r211Start_target_attribute_name(void);
extern T0*oBC211Reuse_variables_attribute_name;
extern int fBC211Reuse_variables_attribute_name;
T0* r211Reuse_variables_attribute_name(void);
T0* r211attribute_value(T211* C,T0* a1,T0* a2);
T0* r211file_system(void);
T6 r211se_assigned_from(T0* a1);
T6 r211is_filename_executable(T211* C);
void r211print_on(T211* C,T0* a1);
void r211out_in_tagged_out_memory(T211* C);
void r211log(T0* a1);
T6 r211uc_boolean_value(T211* C,T0* a1,T0* a2);
T6 r211is_target_executable(T211* C);
T0* r211True_attribute_value(void);
T0* r211uc_attribute_value(T211* C,T0* a1,T0* a2);
T6 r211conforms_to(T211* C,T0* a1);
void r211print(T0* a1);
extern T0*oBC211Filename_attribute_name;
extern int fBC211Filename_attribute_name;
T0* r211Filename_attribute_name(void);
void r211execute(T211* C);
T6 r211has_uc_attribute(T0* a1,T0* a2);
T0* r211False_attribute_value(void);
T0* r211twin(T211* C);
T6 r211is_executable(T211* C);
T0* r165Dir_attribute_name(void);
void r165_59Pmake_from_element(T165* C,T0* a1,T0* a2);
void r165make_from_element(T165* C,T0* a1,T0* a2);
void r165trace(T165* C,T0* a1);
T0* r165attribute_value(T165* C,T0* a1,T0* a2);
T6 r165se_assigned_from(T0* a1);
void r165print_on(T165* C,T0* a1);
void r165out_in_tagged_out_memory(T165* C);
T6 r165conforms_to(T165* C,T0* a1);
extern T0*oBC165Executable_attribute_name;
extern int fBC165Executable_attribute_name;
T0* r165Executable_attribute_name(void);
void r165execute(T165* C);
T0* r165twin(T165* C);
void r165execute_shell(T165* C,T0* a1);
T6 r165is_executable(T165* C);
T0* r249Dir_attribute_name(void);
void r249_59Pmake_from_element(T249* C,T0* a1,T0* a2);
extern T0*oBC249Variable_attribute_name;
extern int fBC249Variable_attribute_name;
T0* r249Variable_attribute_name(void);
void r249make_from_element(T249* C,T0* a1,T0* a2);
T0* r249file_system(void);
T6 r249se_assigned_from(T0* a1);
void r249print_on(T249* C,T0* a1);
T0* r249clone(T0* a1);
void r249out_in_tagged_out_memory(T249* C);
void r249log(T0* a1);
extern T0*oBC249True_value_attribute_name;
extern int fBC249True_value_attribute_name;
T0* r249True_value_attribute_name(void);
void r249make(T249* C,T0* a1);
extern T0*oBC249False_value_attribute_name;
extern int fBC249False_value_attribute_name;
T0* r249False_value_attribute_name(void);
T0* r249uc_attribute_value(T249* C,T0* a1,T0* a2);
T6 r249conforms_to(T249* C,T0* a1);
T0* r249string_tokens(T0* a1,T3 a2);
void r249execute(T249* C);
T6 r249has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC249Source_attribute_name;
extern int fBC249Source_attribute_name;
T0* r249Source_attribute_name(void);
void r249_60Pmake(T249* C,T0* a1);
T0* r249twin(T249* C);
T6 r249is_executable(T249* C);
extern T0*oBC249Target_attribute_name;
extern int fBC249Target_attribute_name;
T0* r249Target_attribute_name(void);
void r281disconnect(T281* C);
T6 r281se_assigned_from(T0* a1);
void r281print_on(T281* C,T0* a1);
void r281out_in_tagged_out_memory(T281* C);
void r281read_character(T281* C);
T6 r281conforms_to(T281* C,T0* a1);
T6 r281end_of_input(T281* C);
void r281connect_to(T281* C,T0* a1);
T3 r281last_character(T281* C);
T0* r281twin(T281* C);
T6 r352is_closed(T352* C);
void r352old_close(T352* C);
T6 r352se_assigned_from(T0* a1);
void r352print_on(T352* C,T0* a1);
void r352out_in_tagged_out_memory(T352* C);
void r352old_open_write(T352* C);
void r352close(T352* C);
void r352make(T352* C,T0* a1);
void r352old_put_string(T352* C,T0* a1);
T6 r352conforms_to(T352* C,T0* a1);
T0* r352twin(T352* C);
void r352open_write(T352* C);
T0* r209Dir_attribute_name(void);
void r209_59Pmake_from_element(T209* C,T0* a1,T0* a2);
void r209make_from_element(T209* C,T0* a1,T0* a2);
void r209trace(T209* C,T0* a1);
extern T0*oBC19Unless_attribute_name;
extern int fBC19Unless_attribute_name;
T0* r209Unless_attribute_name(void);
extern T0*oBC19If_attribute_name;
extern int fBC19If_attribute_name;
T0* r209If_attribute_name(void);
T0* r209file_system(void);
T6 r209se_assigned_from(T0* a1);
void r209print_on(T209* C,T0* a1);
T0* r209clone(T0* a1);
extern T0*oBC209Define_element_name;
extern int fBC209Define_element_name;
T0* r209Define_element_name(void);
extern T0*oBC209Config_filename_attribute_name;
extern int fBC209Config_filename_attribute_name;
T0* r209Config_filename_attribute_name(void);
extern T0*oBC209Compile_attribute_name;
extern int fBC209Compile_attribute_name;
T0* r209Compile_attribute_name(void);
void r209out_in_tagged_out_memory(T209* C);
void r209make(T209* C,T0* a1);
T0* r209uc_attribute_value(T209* C,T0* a1,T0* a2);
extern T0*oBC209Value_attribute_name;
extern int fBC209Value_attribute_name;
T0* r209Value_attribute_name(void);
T6 r209conforms_to(T209* C,T0* a1);
T6 r209is_element_enabled(T0* a1,T0* a2);
void r209execute(T209* C);
T6 r209has_uc_attribute(T0* a1,T0* a2);
T0* r209Name_attribute_name(void);
void r209_60Pmake(T209* C,T0* a1);
T0* r209twin(T209* C);
void r209execute_shell(T209* C,T0* a1);
T6 r209is_executable(T209* C);
T0* r221Dir_attribute_name(void);
void r221_59Pmake_from_element(T221* C,T0* a1,T0* a2);
void r221make_from_element(T221* C,T0* a1,T0* a2);
void r221trace(T221* C,T0* a1);
T0* r221attribute_value(T221* C,T0* a1,T0* a2);
T0* r221file_system(void);
T6 r221se_assigned_from(T0* a1);
void r221print_on(T221* C,T0* a1);
void r221out_in_tagged_out_memory(T221* C);
T6 r221is_to_file_executable(T221* C);
void r221log(T0* a1);
extern T0*oBC221To_directory_attribute_name;
extern int fBC221To_directory_attribute_name;
T0* r221To_directory_attribute_name(void);
extern T0*oBC221To_file_attribute_name;
extern int fBC221To_file_attribute_name;
T0* r221To_file_attribute_name(void);
T6 r221conforms_to(T221* C,T0* a1);
void r221execute(T221* C);
T6 r221is_to_directory_executable(T221* C);
T0* r221twin(T221* C);
extern T0*oBC221File_attribute_name;
extern int fBC221File_attribute_name;
T0* r221File_attribute_name(void);
T6 r221is_executable(T221* C);
T0* r63attribute_value_by_name(T63* C,T0* a1);
void r63add_attributes(T63* C,T0* a1);
T6 r63se_assigned_from(T0* a1);
void r63print_on(T63* C,T0* a1);
void r63add_attribute(T63* C,T0* a1);
void r63out_in_tagged_out_memory(T63* C);
void r63make(T63* C,T0* a1);
T0* r63children_by_name(T63* C,T0* a1);
T6 r63conforms_to(T63* C,T0* a1);
void r63make_attribute_handler(T63* C);
extern T0*oBC19Empty_string;
extern int fBC19Empty_string;
T0* r63Empty_string(void);
T0* r63twin(T63* C);
void r63make_composite(T63* C);
T6 r63has_attribute(T63* C,T0* a1);
T0* r141pathname_from_file_system(T141* C,T0* a1,T0* a2);
T6 r141is_absolute_pathname(T0* a1);
T0* r141current_working_directory(T141* C);
void r141cd(T141* C,T0* a1);
T6 r141file_exists(T0* a1);
T6 r141directory_exists(T0* a1);
void r141recursive_delete_directory(T0* a1);
T0* r141absolute_pathname(T141* C,T0* a1);
T6 r141se_assigned_from(T0* a1);
void r141print_on(T141* C,T0* a1);
T0* r141clone(T0* a1);
T0* r141dirname(T0* a1);
void r141delete_file(T0* a1);
void r141out_in_tagged_out_memory(T141* C);
void r141set_current_working_directory(T141* C,T0* a1);
T0* r141cwd(T141* C);
T6 r141same_type(T141* C,T0* a1);
T6 r141is_file_readable(T0* a1);
void r141recursive_create_directory(T0* a1);
T0* r141tmp_file(void);
T6 r141conforms_to(T141* C,T0* a1);
void r141copy_file(T0* a1,T0* a2);
T0* r141string_to_pathname(T0* a1);
void r141rename_file(T0* a1,T0* a2);
T2 r141file_time_stamp(T0* a1);
extern T0*oBC141root_directory;
T6 r141is_root_directory(T0* a1);
T6 r141same_physical_file(T0* a1,T0* a2);
T0* r141pathname_to_string(T0* a1);
T0* r141twin(T141* C);
T0* r141basename(T0* a1);
T0* r141canonical_pathname(T0* a1);
T0* r141pathname(T0* a1,T0* a2);
T0* r141tmp_directory(void);
T2 r397new_capacity(T2 a1);
void r397copy(T397* C,T0* a1);
T6 r397extendible(T397* C,T2 a1);
void r397remove_traversing_cursor(T397* C,T0* a1);
void r397move_all_cursors_after(T397* C);
void r397add_traversing_cursor(T397* C,T0* a1);
T6 r397se_assigned_from(T0* a1);
void r397print_on(T397* C,T0* a1);
T0* r397clone(T0* a1);
void r397out_in_tagged_out_memory(T397* C);
T6 r397cursor_before(T0* a1);
void r397ds_arrayed_list_make(T397* C,T2 a1);
T6 r397cursor_after(T0* a1);
T6 r397conforms_to(T397* C,T0* a1);
void r397resize(T397* C,T2 a1);
void r397make_from_bilinear(T397* C,T0* a1);
T0* r397twin(T397* C);
void r397force_last(T397* C,T0* a1);
T0* r397new_cursor(T397* C);
void r397put_last(T397* C,T0* a1);
T6 r397cursor_off(T0* a1);
T0* r223Dir_attribute_name(void);
void r223_59Pmake_from_element(T223* C,T0* a1,T0* a2);
void r223make_from_element(T223* C,T0* a1,T0* a2);
void r223trace(T223* C,T0* a1);
T6 r223se_assigned_from(T0* a1);
void r223print_on(T223* C,T0* a1);
void r223out_in_tagged_out_memory(T223* C);
extern T0*oBC21Execution_environment;
T0* r223uc_attribute_value(T223* C,T0* a1,T0* a2);
extern T0*oBC223Value_attribute_name;
extern int fBC223Value_attribute_name;
T0* r223Value_attribute_name(void);
T6 r223conforms_to(T223* C,T0* a1);
void r223execute(T223* C);
T0* r223Name_attribute_name(void);
T6 r223has_uc_attribute(T0* a1,T0* a2);
T0* r223twin(T223* C);
T6 r223is_executable(T223* C);
extern T0*oBC159Clean_attribute_name;
extern int fBC159Clean_attribute_name;
T0* r159Clean_attribute_name(void);
T0* r159Dir_attribute_name(void);
void r159_59Pmake_from_element(T159* C,T0* a1,T0* a2);
extern T0*oBC159System_attribute_name;
extern int fBC159System_attribute_name;
T0* r159System_attribute_name(void);
extern T0*oBC159Finish_freezing_attribute_name;
extern int fBC159Finish_freezing_attribute_name;
T0* r159Finish_freezing_attribute_name(void);
void r159make_from_element(T159* C,T0* a1,T0* a2);
void r159trace(T159* C,T0* a1);
T6 r159is_cleanable(T159* C);
extern T0*oBC159Ace_attribute_name;
extern int fBC159Ace_attribute_name;
T0* r159Ace_attribute_name(void);
T0* r159file_system(void);
T6 r159se_assigned_from(T0* a1);
void r159print_on(T159* C,T0* a1);
T0* r159clone(T0* a1);
void r159out_in_tagged_out_memory(T159* C);
T6 r159uc_boolean_value(T159* C,T0* a1,T0* a2);
void r159execute_clean(T159* C);
void r159execute_compile(T159* C);
T0* r159True_attribute_value(void);
extern T0*oBC159Finalize_attribute_name;
extern int fBC159Finalize_attribute_name;
T0* r159Finalize_attribute_name(void);
T0* r159uc_attribute_value(T159* C,T0* a1,T0* a2);
T6 r159conforms_to(T159* C,T0* a1);
void r159print(T0* a1);
T6 r159is_compilable(T159* C);
void r159execute(T159* C);
T6 r159has_uc_attribute(T0* a1,T0* a2);
T0* r159uc_attribute_value_or_default(T159* C,T0* a1,T0* a2,T0* a3);
T0* r159False_attribute_value(void);
T0* r159attribute_value_or_default(T159* C,T0* a1,T0* a2,T0* a3);
T0* r159twin(T159* C);
void r159execute_shell(T159* C,T0* a1);
T6 r159is_executable(T159* C);
T0* r217Dir_attribute_name(void);
void r217_59Pmake_from_element(T217* C,T0* a1,T0* a2);
void r217make_from_element(T217* C,T0* a1,T0* a2);
T6 r217is_directory_executable(T217* C);
void r217trace(T217* C,T0* a1);
T0* r217attribute_value(T217* C,T0* a1,T0* a2);
T0* r217file_system(void);
T6 r217se_assigned_from(T0* a1);
void r217print_on(T217* C,T0* a1);
void r217out_in_tagged_out_memory(T217* C);
void r217log(T0* a1);
T6 r217is_file_executable(T217* C);
T6 r217conforms_to(T217* C,T0* a1);
void r217execute(T217* C);
T0* r217twin(T217* C);
extern T0*oBC217File_attribute_name;
extern int fBC217File_attribute_name;
T0* r217File_attribute_name(void);
extern T0*oBC217Directory_attribute_name;
extern int fBC217Directory_attribute_name;
T0* r217Directory_attribute_name(void);
T6 r217is_executable(T217* C);
extern T0*oBC84utils;
T2 r84item_code(T84* C,T2 a1);
T6 r84se_assigned_from(T0* a1);
void r84print_on(T84* C,T0* a1);
void r84out_in_tagged_out_memory(T84* C);
void r84make(T84* C);
void r84insert(T84* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r84add_to_storage_count(T84* C,T2 a1);
void r84remove(T84* C,T2 a1,T2 a2);
void r84find_slice_position(T84* C,T2 a1,T2 a2);
void r84insert_code(T84* C,T2 a1,T2 a2);
T6 r84conforms_to(T84* C,T0* a1);
extern T6 oBC84optimize_access;
void r84storage_move(T84* C,T2 a1,T2 a2,T2 a3);
T0* r84twin(T84* C);
T2 r84storage_slice_count(T84* C);
void r84find_position(T84* C,T2 a1);
T0* r83create_representation(T83* C);
T6 r83se_assigned_from(T0* a1);
void r83print_on(T83* C,T0* a1);
void r83out_in_tagged_out_memory(T83* C);
T6 r83conforms_to(T83* C,T0* a1);
T0* r83twin(T83* C);
T0* r169Dir_attribute_name(void);
void r169_59Pmake_from_element(T169* C,T0* a1,T0* a2);
void r169make_from_element(T169* C,T0* a1,T0* a2);
void r169trace(T169* C,T0* a1);
T6 r169se_assigned_from(T0* a1);
void r169print_on(T169* C,T0* a1);
void r169out_in_tagged_out_memory(T169* C);
T0* r169uc_attribute_value(T169* C,T0* a1,T0* a2);
extern T0*oBC169Value_attribute_name;
extern int fBC169Value_attribute_name;
T0* r169Value_attribute_name(void);
T6 r169conforms_to(T169* C,T0* a1);
void r169execute(T169* C);
T0* r169Name_attribute_name(void);
T6 r169has_uc_attribute(T0* a1,T0* a2);
T0* r169twin(T169* C);
T6 r169is_executable(T169* C);
T0* r167Dir_attribute_name(void);
void r167_59Pmake_from_element(T167* C,T0* a1,T0* a2);
void r167make_from_element(T167* C,T0* a1,T0* a2);
void r167trace(T167* C,T0* a1);
T0* r167file_system(void);
T6 r167se_assigned_from(T0* a1);
void r167print_on(T167* C,T0* a1);
T0* r167clone(T0* a1);
void r167out_in_tagged_out_memory(T167* C);
T0* r167uc_attribute_value(T167* C,T0* a1,T0* a2);
T6 r167conforms_to(T167* C,T0* a1);
extern T0*oBC167Executable_attribute_name;
extern int fBC167Executable_attribute_name;
T0* r167Executable_attribute_name(void);
void r167execute(T167* C);
T6 r167has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC167Source_filename_attribute_name;
extern int fBC167Source_filename_attribute_name;
T0* r167Source_filename_attribute_name(void);
T0* r167twin(T167* C);
void r167execute_shell(T167* C,T0* a1);
T6 r167is_executable(T167* C);
void r28calculate_depend_order(T0* a1);
void r28build(T28* C);
extern T0*oBC28Parser_factory;
extern int fBC28Parser_factory;
T0* r28Parser_factory(void);
void r28build_target(T28* C,T0* a1);
T0* r28file_system(void);
T6 r28se_assigned_from(T0* a1);
void r28print_on(T28* C,T0* a1);
extern T0*oBC19Target_element_name;
extern int fBC19Target_element_name;
T0* r28Target_element_name(void);
T0* r28clone(T0* a1);
void r28load(T28* C,T0* a1);
void r28out_in_tagged_out_memory(T28* C);
extern T0*oBC17Exceptions;
extern T0*oBC19Description_element_name;
extern int fBC19Description_element_name;
T0* r28Description_element_name(void);
extern T0*oBC19Default_attribute_name;
extern int fBC19Default_attribute_name;
T0* r28Default_attribute_name(void);
T0* r28target_with_name(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
void r28print(T0* a1);
void r28make_with_filename(T28* C,T0* a1,T0* a2,T0* a3);
void r28execute_target(T28* C,T0* a1,T6 a2);
T0* r28Name_attribute_name(void);
void r28reset(T28* C);
void r28exit_application(T2 a1,T0* a2);
T0* r28twin(T28* C);
extern T0*oBC19Default_build_filename;
extern int fBC19Default_build_filename;
T0* r28Default_build_filename(void);
extern T0*oBC28Inherit_attribute_name;
extern int fBC28Inherit_attribute_name;
T0* r28Inherit_attribute_name(void);
T0* r25out(T25* C);
void r25copy(T25* C,T0* a1);
T0* r25substring(T25* C,T2 a1,T2 a2);
T2 r25count(T25* C);
T2 r25item_code(T25* C,T2 a1);
T6 r25is_whitespace(T2 a1);
void r25remove_between(T25* C,T2 a1,T2 a2);
T6 r25is_equal(T25* C,T0* a1);
T69 r25item(T25* C,T2 a1);
void r25append_uc_string(T25* C,T0* a1);
T6 r25se_assigned_from(T0* a1);
void r25print_on(T25* C,T0* a1);
void r25make_from_string(T25* C,T0* a1);
T2 r25index_of(T25* C,T69 a1,T2 a2);
void r25out_in_tagged_out_memory(T25* C);
void r25make(T25* C,T2 a1);
void r25append_string(T25* C,T0* a1);
void r25head(T25* C,T2 a1);
T6 r25conforms_to(T25* C,T0* a1);
void r25append_ucc_code(T25* C,T2 a1);
void r25right_adjust(T25* C);
T6 r25empty(T25* C);
T0* r25twin(T25* C);
T2 r25three_way_comparison(T25* C,T0* a1);
void r25left_adjust(T25* C);
extern T0*oBC25i_settings;
void r25tail(T25* C,T2 a1);
T0* r200Dir_attribute_name(void);
void r200_59Pmake_from_element(T200* C,T0* a1,T0* a2);
extern T0*oBC200Output_filename_attribute_name;
extern int fBC200Output_filename_attribute_name;
T0* r200Output_filename_attribute_name(void);
void r200make_from_element(T200* C,T0* a1,T0* a2);
void r200trace(T200* C,T0* a1);
T0* r200Unless_attribute_name(void);
T0* r200If_attribute_name(void);
T0* r200file_system(void);
T6 r200se_assigned_from(T0* a1);
void r200print_on(T200* C,T0* a1);
T0* r200clone(T0* a1);
extern T0*oBC200Define_element_name;
extern int fBC200Define_element_name;
T0* r200Define_element_name(void);
extern T0*oBC200Lines_attribute_name;
extern int fBC200Lines_attribute_name;
T0* r200Lines_attribute_name(void);
void r200out_in_tagged_out_memory(T200* C);
T6 r200uc_boolean_value(T200* C,T0* a1,T0* a2);
void r200make(T200* C,T0* a1);
T0* r200True_attribute_value(void);
T0* r200uc_attribute_value(T200* C,T0* a1,T0* a2);
T6 r200conforms_to(T200* C,T0* a1);
void r200print(T0* a1);
T6 r200is_element_enabled(T0* a1,T0* a2);
void r200execute(T200* C);
T6 r200has_uc_attribute(T0* a1,T0* a2);
T0* r200Name_attribute_name(void);
T0* r200False_attribute_value(void);
void r200_60Pmake(T200* C,T0* a1);
T0* r200twin(T200* C);
void r200execute_shell(T200* C,T0* a1);
T6 r200is_executable(T200* C);
extern T0*oBC200Input_filename_attribute_name;
extern int fBC200Input_filename_attribute_name;
T0* r200Input_filename_attribute_name(void);
T6 r392se_assigned_from(T0* a1);
void r392print_on(T392* C,T0* a1);
void r392out_in_tagged_out_memory(T392* C);
T6 r392conforms_to(T392* C,T0* a1);
T0* r392twin(T392* C);
void r327fill(T327* C);
void r327compact_left(T327* C);
T2 r327count(T327* C);
void r327set_position(T327* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC326lower;
extern int fBC326lower;
T2 r327lower(void);
T6 r327se_assigned_from(T0* a1);
void r327print_on(T327* C,T0* a1);
void r327out_in_tagged_out_memory(T327* C);
extern T0*oBC263STRING_BUFFER_;
T6 r327conforms_to(T327* C,T0* a1);
void r327resize(T327* C);
void r327make_with_size(T327* C,T0* a1,T2 a2);
T0* r327twin(T327* C);
void r327set_file(T327* C,T0* a1);
extern T0*oBC264INPUT_STREAM_;
void r327flush(T327* C);
T0* r343current_working_directory(T343* C);
T6 r343se_assigned_from(T0* a1);
void r343print_on(T343* C,T0* a1);
T0* r343clone(T0* a1);
T6 r343is_windows(T343* C);
void r343out_in_tagged_out_memory(T343* C);
void r343make(T343* C);
void r343old_put_string(T0* a1);
T6 r343conforms_to(T343* C,T0* a1);
T6 r343is_unix(T343* C);
void r343put_line(T0* a1);
T0* r343twin(T343* C);
T0* r344current_working_directory(T344* C);
T6 r344se_assigned_from(T0* a1);
void r344print_on(T344* C,T0* a1);
T0* r344clone(T0* a1);
T6 r344is_windows(T344* C);
void r344out_in_tagged_out_memory(T344* C);
void r344make(T344* C);
void r344old_put_string(T0* a1);
T6 r344conforms_to(T344* C,T0* a1);
T6 r344is_unix(T344* C);
void r344put_line(T0* a1);
T0* r344twin(T344* C);
extern T0*oBC19Echo_task_name;
extern int fBC19Echo_task_name;
T0* r43Echo_task_name(void);
extern T0*oBC43Dir_attribute_name;
extern int fBC43Dir_attribute_name;
T0* r43Dir_attribute_name(void);
extern T0*oBC19Outofdate_task_name;
extern int fBC19Outofdate_task_name;
T0* r43Outofdate_task_name(void);
extern T0*oBC19Delete_task_name;
extern int fBC19Delete_task_name;
T0* r43Delete_task_name(void);
T0* r43dependencies(T43* C);
extern T0*oBC19Set_task_name;
extern int fBC19Set_task_name;
T0* r43Set_task_name(void);
extern T0*oBC19Ise_task_name;
extern int fBC19Ise_task_name;
T0* r43Ise_task_name(void);
extern T0*oBC19Exec_task_name;
extern int fBC19Exec_task_name;
T0* r43Exec_task_name(void);
T0* r43Unless_attribute_name(void);
T0* r43dependent_targets(T43* C);
T0* r43If_attribute_name(void);
extern T0*oBC19Mkdir_task_name;
extern int fBC19Mkdir_task_name;
T0* r43Mkdir_task_name(void);
T0* r43file_system(void);
extern T0*oBC19Setenv_task_name;
extern int fBC19Setenv_task_name;
T0* r43Setenv_task_name(void);
T6 r43has_dependencies(T43* C);
T6 r43se_assigned_from(T0* a1);
void r43print_on(T43* C,T0* a1);
T0* r43clone(T0* a1);
extern T0*oBC43Depend_attribute_name;
extern int fBC43Depend_attribute_name;
T0* r43Depend_attribute_name(void);
extern T0*oBC19Geant_task_name;
extern int fBC19Geant_task_name;
T0* r43Geant_task_name(void);
void r43out_in_tagged_out_memory(T43* C);
T0* r43Description_element_name(void);
extern T0*oBC19Hact_task_name;
extern int fBC19Hact_task_name;
T0* r43Hact_task_name(void);
void r43make(T43* C,T0* a1,T0* a2);
extern T0*oBC19Gexace_task_name;
extern int fBC19Gexace_task_name;
T0* r43Gexace_task_name(void);
extern T0*oBC19Gelex_task_name;
extern int fBC19Gelex_task_name;
T0* r43Gelex_task_name(void);
extern T0*oBC19Unset_task_name;
extern int fBC19Unset_task_name;
T0* r43Unset_task_name(void);
extern T0*oBC19Se_task_name;
extern int fBC19Se_task_name;
T0* r43Se_task_name(void);
T6 r43conforms_to(T43* C,T0* a1);
void r43print(T0* a1);
T0* r43string_tokens(T0* a1,T3 a2);
extern T0*oBC19Getest_task_name;
extern int fBC19Getest_task_name;
T0* r43Getest_task_name(void);
T6 r43is_element_enabled(T0* a1,T0* a2);
extern T0*oBC19Copy_task_name;
extern int fBC19Copy_task_name;
T0* r43Copy_task_name(void);
void r43execute(T43* C);
T0* r43Name_attribute_name(void);
extern T0*oBC19Lcc_task_name;
extern int fBC19Lcc_task_name;
T0* r43Lcc_task_name(void);
void r43exit_application(T2 a1,T0* a2);
extern T0*oBC19Xslt_task_name;
extern int fBC19Xslt_task_name;
T0* r43Xslt_task_name(void);
extern T0*oBC19Gepp_task_name;
extern int fBC19Gepp_task_name;
T0* r43Gepp_task_name(void);
T0* r43twin(T43* C);
extern T0*oBC19Move_task_name;
extern int fBC19Move_task_name;
T0* r43Move_task_name(void);
extern T0*oBC19Geyacc_task_name;
extern int fBC19Geyacc_task_name;
T0* r43Geyacc_task_name(void);
extern T0*oBC19Ve_task_name;
extern int fBC19Ve_task_name;
T0* r43Ve_task_name(void);
extern T0*oBC163Clean_attribute_name;
extern int fBC163Clean_attribute_name;
T0* r163Clean_attribute_name(void);
T0* r163Dir_attribute_name(void);
void r163_59Pmake_from_element(T163* C,T0* a1,T0* a2);
void r163make_from_element(T163* C,T0* a1,T0* a2);
void r163trace(T163* C,T0* a1);
T6 r163is_cleanable(T163* C);
T0* r163file_system(void);
T6 r163se_assigned_from(T0* a1);
void r163print_on(T163* C,T0* a1);
T0* r163clone(T0* a1);
extern T0*oBC163Esd_attribute_name;
extern int fBC163Esd_attribute_name;
T0* r163Esd_attribute_name(void);
void r163out_in_tagged_out_memory(T163* C);
T6 r163uc_boolean_value(T163* C,T0* a1,T0* a2);
void r163execute_clean(T163* C);
T0* r163True_attribute_value(void);
T0* r163uc_attribute_value(T163* C,T0* a1,T0* a2);
T6 r163conforms_to(T163* C,T0* a1);
void r163print(T0* a1);
T6 r163is_compilable(T163* C);
void r163execute(T163* C);
T6 r163has_uc_attribute(T0* a1,T0* a2);
T0* r163uc_attribute_value_or_default(T163* C,T0* a1,T0* a2,T0* a3);
T0* r163False_attribute_value(void);
extern T0*oBC163Recursive_attribute_name;
extern int fBC163Recursive_attribute_name;
T0* r163Recursive_attribute_name(void);
T0* r163attribute_value_or_default(T163* C,T0* a1,T0* a2,T0* a3);
T0* r163twin(T163* C);
void r163execute_shell(T163* C,T0* a1);
T6 r163is_executable(T163* C);
T6 r85se_assigned_from(T0* a1);
void r85print_on(T85* C,T0* a1);
void r85out_in_tagged_out_memory(T85* C);
void r85make(T85* C);
void r85insert(T85* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r85remove(T85* C,T2 a1,T2 a2);
void r85insert_code(T85* C,T2 a1,T2 a2);
void r85move(T85* C,T2 a1,T2 a2,T2 a3);
T6 r85conforms_to(T85* C,T0* a1);
void r85storage_ensure_capacity(T85* C,T2 a1);
T0* r85twin(T85* C);
T0* r213Dir_attribute_name(void);
void r213_59Pmake_from_element(T213* C,T0* a1,T0* a2);
void r213make_from_element(T213* C,T0* a1,T0* a2);
void r213trace(T213* C,T0* a1);
T0* r213attribute_value(T213* C,T0* a1,T0* a2);
T6 r213se_assigned_from(T0* a1);
void r213print_on(T213* C,T0* a1);
void r213out_in_tagged_out_memory(T213* C);
void r213log(T0* a1);
T6 r213conforms_to(T213* C,T0* a1);
extern T0*oBC213Message_attribute_name;
extern int fBC213Message_attribute_name;
T0* r213Message_attribute_name(void);
void r213execute(T213* C);
T0* r213twin(T213* C);
void r308yy_do_action(T308* C,T2 a1);
extern T0*oBC309yytable_template;
extern int fBC309yytable_template;
T0* r308yytable_template(void);
T0* r308empty_ucstring(void);
void r308make_parser_skeleton(T308* C);
T2 r308yy_at_beginning_of_line(T308* C);
void r308fatal_error(T0* a1);
T0* r308yytype1(T0* a1);
T0* r308yytype2(T0* a1);
T0* r308yytype3(T0* a1);
T0* r308yytype4(T0* a1);
void r308handle_found_text(T308* C);
void r308parse(T308* C);
void r308set_input_buffer(T308* C,T0* a1);
T2 r308yy_translate(T308* C,T2 a1);
extern T0*oBC310yy_ec_template;
extern int fBC310yy_ec_template;
T0* r308yy_ec_template(void);
void r308yy_execute_action(T308* C,T2 a1);
extern T0*oBC309yytranslate_template;
extern int fBC309yytranslate_template;
T0* r308yytranslate_template(void);
void r308clear_stacks(T308* C);
extern T0*oBC310yy_def_template;
extern int fBC310yy_def_template;
T0* r308yy_def_template(void);
T3 r308text_item(T308* C,T2 a1);
void r308yy_load_input_buffer(T308* C);
extern T69 oBC309uc_collon;
extern int fBC309uc_collon;
T69 r308uc_collon(void);
extern T0*oBC309yyr1_template;
extern int fBC309yyr1_template;
T0* r308yyr1_template(void);
void r308make_with_buffer(T308* C,T0* a1);
T2 r308yy_null_trans_state(T308* C,T2 a1);
extern T0*oBC310yy_accept_template;
extern int fBC310yy_accept_template;
T0* r308yy_accept_template(void);
void r308read_token(T308* C);
extern T0*oBC309yyr2_template;
extern int fBC309yyr2_template;
T0* r308yyr2_template(void);
T2 r308yy_previous_state(T308* C);
extern T0*oBC309yypgoto_template;
extern int fBC309yypgoto_template;
T0* r308yypgoto_template(void);
void r308yy_refill_input_buffer(T308* C);
T0* r308yy_fixed_array(T0* a1);
T6 r308conforms_to(T308* C,T0* a1);
extern T0*oBC310yy_meta_template;
extern int fBC310yy_meta_template;
T0* r308yy_meta_template(void);
extern T0*oBC310yy_base_template;
extern int fBC310yy_base_template;
T0* r308yy_base_template(void);
T0* r308twin(T308* C);
T0* r308clone(T0* a1);
T0* r308new_file_buffer(T0* a1);
void r308yy_initialize(T308* C);
void r308reset(T308* C);
void r308parse_from_file_name(T308* C,T0* a1);
T0* r308text(T308* C);
void r308out_in_tagged_out_memory(T308* C);
extern T0*oBC310yy_nxt_template;
extern int fBC310yy_nxt_template;
T0* r308yy_nxt_template(void);
void r308parse_from_stream(T308* C,T0* a1);
void r308yy_set_line_column(T308* C);
void r308yy_build_parser_tables(T308* C);
T0* r308split_name_and_prefix(T0* a1);
void r308report_error(T308* C,T0* a1);
extern T0*oBC309yydefact_template;
extern int fBC309yydefact_template;
T0* r308yydefact_template(void);
extern T0*oBC310yy_chk_template;
extern int fBC310yy_chk_template;
T0* r308yy_chk_template(void);
extern T0*oBC309yycheck_template;
extern int fBC309yycheck_template;
T0* r308yycheck_template(void);
void r308make(T308* C);
T0* r308yyfixed_array(T0* a1);
void r308yy_clear_all(T308* C);
extern T0*oBC309yydefgoto_template;
extern int fBC309yydefgoto_template;
T0* r308yydefgoto_template(void);
void r308yy_set_content(T308* C,T0* a1);
extern T0*oBC309yypact_template;
extern int fBC309yypact_template;
T0* r308yypact_template(void);
void r308set_start_condition(T308* C,T2 a1);
T6 r308se_assigned_from(T0* a1);
void r308yy_build_tables(T308* C);
void r308print_on(T308* C,T0* a1);
extern T0*oBC196Meta_ecs_attribute_name;
extern int fBC196Meta_ecs_attribute_name;
T0* r196Meta_ecs_attribute_name(void);
T0* r196Dir_attribute_name(void);
void r196_59Pmake_from_element(T196* C,T0* a1,T0* a2);
extern T0*oBC196Output_filename_attribute_name;
extern int fBC196Output_filename_attribute_name;
T0* r196Output_filename_attribute_name(void);
extern T0*oBC196Size_attribute_name;
extern int fBC196Size_attribute_name;
T0* r196Size_attribute_name(void);
void r196make_from_element(T196* C,T0* a1,T0* a2);
extern T0*oBC196Ecs_attribute_name;
extern int fBC196Ecs_attribute_name;
T0* r196Ecs_attribute_name(void);
void r196trace(T196* C,T0* a1);
T0* r196file_system(void);
T6 r196se_assigned_from(T0* a1);
void r196print_on(T196* C,T0* a1);
T0* r196clone(T0* a1);
void r196out_in_tagged_out_memory(T196* C);
T6 r196uc_boolean_value(T196* C,T0* a1,T0* a2);
void r196make(T196* C,T0* a1);
T0* r196True_attribute_value(void);
T0* r196uc_attribute_value(T196* C,T0* a1,T0* a2);
extern T0*oBC196Case_insensitive_attribute_name;
extern int fBC196Case_insensitive_attribute_name;
T0* r196Case_insensitive_attribute_name(void);
extern T0*oBC196No_default_attribute_name;
extern int fBC196No_default_attribute_name;
T0* r196No_default_attribute_name(void);
T6 r196conforms_to(T196* C,T0* a1);
void r196print(T0* a1);
extern T0*oBC196Backup_attribute_name;
extern int fBC196Backup_attribute_name;
T0* r196Backup_attribute_name(void);
extern T0*oBC196No_warn_attribute_name;
extern int fBC196No_warn_attribute_name;
T0* r196No_warn_attribute_name(void);
void r196execute(T196* C);
T6 r196has_uc_attribute(T0* a1,T0* a2);
T0* r196False_attribute_value(void);
void r196_60Pmake(T196* C,T0* a1);
extern T0*oBC196Separate_actions_attribute_name;
extern int fBC196Separate_actions_attribute_name;
T0* r196Separate_actions_attribute_name(void);
T0* r196twin(T196* C);
void r196execute_shell(T196* C,T0* a1);
T6 r196is_executable(T196* C);
extern T0*oBC196Input_filename_attribute_name;
extern int fBC196Input_filename_attribute_name;
T0* r196Input_filename_attribute_name(void);
extern T0*oBC196Full_attribute_name;
extern int fBC196Full_attribute_name;
T0* r196Full_attribute_name(void);
extern T0*oBC259stack;
extern int fBC259stack;
T0* r259stack(void);
void r259on_content(T0* a1);
T6 r259se_assigned_from(T0* a1);
void r259print_on(T259* C,T0* a1);
T0* r259clone(T0* a1);
void r259out_in_tagged_out_memory(T259* C);
void r259on_start_tag(T259* C,T0* a1,T0* a2,T0* a3);
void r259make_from_implementation(T259* C,T0* a1);
T6 r259conforms_to(T259* C,T0* a1);
T0* r259twin(T259* C);
void r366copy(T366* C,T0* a1);
void r366append_name(T366* C,T0* a1);
T6 r366se_assigned_from(T0* a1);
void r366print_on(T366* C,T0* a1);
T0* r366clone(T0* a1);
void r366out_in_tagged_out_memory(T366* C);
T6 r366is_parent(T366* C,T2 a1);
void r366make(T366* C);
void r366set_canonical(T366* C);
T6 r366conforms_to(T366* C,T0* a1);
T0* r366twin(T366* C);
T6 r366is_current(T366* C,T2 a1);
T6 r49se_assigned_from(T0* a1);
void r49print_on(T49* C,T0* a1);
void r49out_in_tagged_out_memory(T49* C);
T6 r49conforms_to(T49* C,T0* a1);
T0* r49twin(T49* C);
void r49put_character(T3 a1);
void r49put_string(T0* a1);
T0* r89expanded_variable_value(T89* C,T0* a1);
T0* r89variable_value(T89* C,T0* a1);
T0* r89file_system(void);
T6 r89se_assigned_from(T0* a1);
void r89print_on(T89* C,T0* a1);
T0* r89clone(T0* a1);
void r89out_in_tagged_out_memory(T89* C);
void r89make(T89* C);
extern T0*oBC20Commandline_variables;
extern int fBC20Commandline_variables;
T0* r89Commandline_variables(void);
T6 r89boolean_condition_value(T89* C,T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
void r89print(T0* a1);
T0* r89string_tokens(T0* a1,T3 a2);
T0* r89interpreted_string(T89* C,T0* a1);
void r89exit_application(T2 a1,T0* a2);
T0* r89twin(T89* C);
T6 r89has_variable(T89* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r340command_arguments(void);
T6 r340se_assigned_from(T0* a1);
void r340print_on(T340* C,T0* a1);
void r340out_in_tagged_out_memory(T340* C);
T6 r340conforms_to(T340* C,T0* a1);
T0* r340twin(T340* C);
T0* r340argument(T2 a1);
T6 r300se_assigned_from(T0* a1);
void r300print_on(T300* C,T0* a1);
void r300out_in_tagged_out_memory(T300* C);
void r300make(T300* C);
T6 r300conforms_to(T300* C,T0* a1);
T0* r300new_eiffel_event_parser_imp(T300* C);
T0* r300twin(T300* C);
T6 r346se_assigned_from(T0* a1);
void r346print_on(T346* C,T0* a1);
void r346out_in_tagged_out_memory(T346* C);
T2 r346execute_command(T0* a1);
T6 r346conforms_to(T346* C,T0* a1);
void r346execute(T346* C);
T0* r346twin(T346* C);
extern T0*oBC173Cluster_attribute_name;
extern int fBC173Cluster_attribute_name;
T0* r173Cluster_attribute_name(void);
T0* r173Dir_attribute_name(void);
void r173_59Pmake_from_element(T173* C,T0* a1,T0* a2);
extern T0*oBC173Validate_attribute_name;
extern int fBC173Validate_attribute_name;
T0* r173Validate_attribute_name(void);
extern T0*oBC173System_attribute_name;
extern int fBC173System_attribute_name;
T0* r173System_attribute_name(void);
extern T0*oBC173Output_filename_attribute_name;
extern int fBC173Output_filename_attribute_name;
T0* r173Output_filename_attribute_name(void);
void r173make_from_element(T173* C,T0* a1,T0* a2);
void r173trace(T173* C,T0* a1);
extern T0*oBC173Xace_filename_attribute_name;
extern int fBC173Xace_filename_attribute_name;
T0* r173Xace_filename_attribute_name(void);
T0* r173Unless_attribute_name(void);
extern T0*oBC173Verbose_attribute_name;
extern int fBC173Verbose_attribute_name;
T0* r173Verbose_attribute_name(void);
T0* r173If_attribute_name(void);
T0* r173file_system(void);
T6 r173se_assigned_from(T0* a1);
void r173print_on(T173* C,T0* a1);
T0* r173clone(T0* a1);
extern T0*oBC173Define_element_name;
extern int fBC173Define_element_name;
T0* r173Define_element_name(void);
void r173out_in_tagged_out_memory(T173* C);
T6 r173uc_boolean_value(T173* C,T0* a1,T0* a2);
void r173make(T173* C,T0* a1);
T0* r173True_attribute_value(void);
T0* r173uc_attribute_value(T173* C,T0* a1,T0* a2);
extern T0*oBC173Value_attribute_name;
extern int fBC173Value_attribute_name;
T0* r173Value_attribute_name(void);
T6 r173conforms_to(T173* C,T0* a1);
T6 r173is_validate_executable(T173* C);
void r173print(T0* a1);
T6 r173is_element_enabled(T0* a1,T0* a2);
T6 r173is_system_executable(T173* C);
void r173execute(T173* C);
T6 r173has_uc_attribute(T0* a1,T0* a2);
T0* r173Name_attribute_name(void);
T0* r173False_attribute_value(void);
void r173_60Pmake(T173* C,T0* a1);
T0* r173twin(T173* C);
T6 r173is_cluster_executable(T173* C);
void r173execute_shell(T173* C,T0* a1);
T6 r173is_executable(T173* C);
T0* r171Dir_attribute_name(void);
void r171_59Pmake_from_element(T171* C,T0* a1,T0* a2);
void r171make_from_element(T171* C,T0* a1,T0* a2);
void r171trace(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
void r171print_on(T171* C,T0* a1);
void r171out_in_tagged_out_memory(T171* C);
T0* r171uc_attribute_value(T171* C,T0* a1,T0* a2);
T6 r171conforms_to(T171* C,T0* a1);
void r171execute(T171* C);
T6 r171has_uc_attribute(T0* a1,T0* a2);
T0* r171Name_attribute_name(void);
T0* r171twin(T171* C);
T6 r171is_executable(T171* C);
T6 r279is_closed(T279* C);
void r279old_close(T279* C);
T2 r279count(T279* C);
void r279old_delete(T0* a1);
T2 r279time_stamp(T279* C);
T6 r279file_exists(T0* a1);
extern T359 oBC283epoch_time;
extern int fBC283epoch_time;
T359 r279epoch_time(void);
T359 r279last_change_of(T0* a1);
void r279rename_to(T0* a1,T0* a2);
void r279open_read(T279* C);
T0* r279file_system(void);
T6 r279se_assigned_from(T0* a1);
void r279print_on(T279* C,T0* a1);
void r279old_read_character(T279* C);
T6 r279old_end_of_file(T279* C);
void r279out_in_tagged_out_memory(T279* C);
void r279close(T279* C);
void r279make(T279* C,T0* a1);
T6 r279exists(T279* C);
T2 r279size_of(T0* a1);
T6 r279conforms_to(T279* C,T0* a1);
void r279copy_file(T279* C,T0* a1);
void r279connect_to(T279* C,T0* a1);
extern T284 oBC1file_tools;
T6 r279same_physical_file(T279* C,T0* a1);
void r279delete(T279* C);
T0* r279twin(T279* C);
void r279change_name(T279* C,T0* a1);
extern T0*oBC283tmp_file1;
extern int fBC283tmp_file1;
T0* r279tmp_file1(void);
T6 r279is_readable(T279* C);
extern T0*oBC280tmp_directory;
extern int fBC280tmp_directory;
T0* r279tmp_directory(void);
T6 r292is_closed(T292* C);
T6 r292old_end_of_input(T292* C);
void r292open_read(T292* C);
T0* r292file_system(void);
T6 r292se_assigned_from(T0* a1);
void r292print_on(T292* C,T0* a1);
T0* r292clone(T0* a1);
void r292create_directory(T292* C);
void r292out_in_tagged_out_memory(T292* C);
T6 r292is_open_read(T292* C);
void r292close(T292* C);
T6 r292exists(T292* C);
void r292recursive_create_directory(T292* C);
void r292read_entry(T292* C);
T6 r292conforms_to(T292* C,T0* a1);
void r292delete(T292* C);
T0* r292twin(T292* C);
void r292recursive_delete(T292* C);
T6 r292is_readable(T292* C);
extern T0*oBC284tfr1;
T6 r284is_readable(T0* a1);
T6 r360se_assigned_from(T0* a1);
void r360print_on(T360* C,T0* a1);
T6 r360conforms_to(T360* C,T0* a1);
T0* r360twin(T360* C);
void r16read_command_line(T16* C);
T6 r16se_assigned_from(T0* a1);
void r16print_on(T16* C,T0* a1);
T0* r16clone(T0* a1);
void r16out_in_tagged_out_memory(T16* C);
void r16report_usage_message(T16* C);
T0* r16Arguments(void);
T0* r16Commandline_variables(void);
void r16make(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16print(T0* a1);
void r16report_version_number(T16* C);
void r16exit_application(T2 a1,T0* a2);
T0* r16twin(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
void r16report_usage_error(T16* C);
extern T0*oBC329error;
extern int fBC329error;
T0* r329error(void);
T6 r329se_assigned_from(T0* a1);
void r329print_on(T329* C,T0* a1);
void r329out_in_tagged_out_memory(T329* C);
extern T0*oBC329input;
extern int fBC329input;
T0* r329input(void);
extern T0*oBC329output;
extern int fBC329output;
T0* r329output(void);
T6 r329conforms_to(T329* C,T0* a1);
T0* r329twin(T329* C);
T6 r133se_assigned_from(T0* a1);
void r133print_on(T133* C,T0* a1);
void r133out_in_tagged_out_memory(T133* C);
T6 r133conforms_to(T133* C,T0* a1);
T0* r133twin(T133* C);
void r47raise(T47* C,T0* a1);
T6 r47se_assigned_from(T0* a1);
void r47print_on(T47* C,T0* a1);
void r47out_in_tagged_out_memory(T47* C);
T6 r47conforms_to(T47* C,T0* a1);
T0* r47twin(T47* C);
extern T0*oBC48developer_exception_name_memory;
void r48raise(T48* C,T0* a1);
T6 r48se_assigned_from(T0* a1);
void r48print_on(T48* C,T0* a1);
void r48out_in_tagged_out_memory(T48* C);
T6 r48conforms_to(T48* C,T0* a1);
T0* r48twin(T48* C);
T6 r45se_assigned_from(T0* a1);
void r45print_on(T45* C,T0* a1);
T6 r45conforms_to(T45* C,T0* a1);
T0* r45twin(T45* C);
T6 r415se_assigned_from(T0* a1);
void r415print_on(T415* C,T0* a1);
void r415out_in_tagged_out_memory(T415* C);
T6 r415conforms_to(T415* C,T0* a1);
T0* r415twin(T415* C);
T6 r52se_assigned_from(T0* a1);
void r52print_on(T52* C,T0* a1);
void r52out_in_tagged_out_memory(T52* C);
T6 r52conforms_to(T52* C,T0* a1);
T0* r52twin(T52* C);
T6 r414se_assigned_from(T0* a1);
void r414print_on(T414* C,T0* a1);
void r414out_in_tagged_out_memory(T414* C);
T6 r414conforms_to(T414* C,T0* a1);
T0* r414twin(T414* C);
T6 r134se_assigned_from(T0* a1);
void r134print_on(T134* C,T0* a1);
void r134out_in_tagged_out_memory(T134* C);
T0* r134to_hexadecimal(T2 a1,T6 a2);
T6 r134conforms_to(T134* C,T0* a1);
T3 r134to_character(T2 a1);
T0* r134twin(T134* C);
void r134append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC81factory;
extern int fBC81factory;
T0* r81factory(void);
T6 r81se_assigned_from(T0* a1);
void r81print_on(T81* C,T0* a1);
void r81out_in_tagged_out_memory(T81* C);
T6 r81conforms_to(T81* C,T0* a1);
T0* r81twin(T81* C);
T6 r416se_assigned_from(T0* a1);
void r416print_on(T416* C,T0* a1);
void r416out_in_tagged_out_memory(T416* C);
T6 r416conforms_to(T416* C,T0* a1);
T0* r416twin(T416* C);
T6 r44se_assigned_from(T0* a1);
void r44print_on(T44* C,T0* a1);
T6 r44conforms_to(T44* C,T0* a1);
T0* r44twin(T44* C);
T2 r359elapsed_seconds(T359* C,T359 a1);
T6 r359set(T359* C,T2 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T6 r306se_assigned_from(T0* a1);
void r306print_on(T306* C,T0* a1);
void r306out_in_tagged_out_memory(T306* C);
T6 r306conforms_to(T306* C,T0* a1);
T0* r306twin(T306* C);
T0* r367name(T0* a1);
T0* r367make_file_open_read(T0* a1);
T6 r367se_assigned_from(T0* a1);
void r367print_on(T367* C,T0* a1);
void r367out_in_tagged_out_memory(T367* C);
void r367close(T0* a1);
T6 r367conforms_to(T367* C,T0* a1);
T6 r367end_of_input(T0* a1);
T2 r367read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r367twin(T367* C);
void r139connect_to_current_working_directory(T139* C);
void r139disconnect(T139* C);
T6 r139remove_directory(T0* a1);
extern T0*oBC139last_entry;
void r139change_current_working_directory(T139* C,T0* a1);
void r139read_entry(T139* C);
void r139connect_to(T139* C,T0* a1);
T6 r139create_new_directory(T0* a1);
T6 r135se_assigned_from(T0* a1);
void r135print_on(T135* C,T0* a1);
void r135out_in_tagged_out_memory(T135* C);
T6 r135is_integer(T0* a1);
T0* r135make(T2 a1);
T6 r135conforms_to(T135* C,T0* a1);
T0* r135twin(T135* C);
T0* r69out(T69* C);
extern T0*oBC72Platform;
T3 r69as_character(T69* C);
T6 r69_px_60(T69* C,T69 a1);
T6 r69_px_62(T69* C,T69 a1);
T0* r69as_hexadecimal(T69* C);
T3 r69code_to_character(T2 a1);
extern T0*oBC71INTEGER_;
T0* r91variable_value(T0* a1);
T6 r91se_assigned_from(T0* a1);
void r91print_on(T91* C,T0* a1);
void r91out_in_tagged_out_memory(T91* C);
T0* r91get_environment_variable(T0* a1);
T6 r91conforms_to(T91* C,T0* a1);
T0* r91twin(T91* C);
T2 r363nr_of_following_octets(T3 a1);
T6 r363se_assigned_from(T0* a1);
void r363print_on(T363* C,T0* a1);
void r363read_code(T363* C,T0* a1,T2 a2);
void r363out_in_tagged_out_memory(T363* C);
void r363put_code(T2 a1,T0* a2,T2 a3);
void r363read_following_octet(T363* C,T0* a1);
T6 r363conforms_to(T363* C,T0* a1);
T3 r363code_to_character(T2 a1);
T2 r363octet_size(T2 a1);
T0* r363twin(T363* C);
extern T0*oBC363specific;
T6 r363is_leading_octet(T3 a1);
T2 r363read_leading_octet(T363* C,T0* a1,T2 a2);
T6 r304se_assigned_from(T0* a1);
void r304print_on(T304* C,T0* a1);
void r304out_in_tagged_out_memory(T304* C);
T6 r304conforms_to(T304* C,T0* a1);
T0* r304twin(T304* C);
T6 r51se_assigned_from(T0* a1);
void r51print_on(T51* C,T0* a1);
T6 r51conforms_to(T51* C,T0* a1);
T0* r51twin(T51* C);
T0* r328substring(T0* a1,T2 a2,T2 a3);
T6 r328se_assigned_from(T0* a1);
void r328print_on(T328* C,T0* a1);
void r328out_in_tagged_out_memory(T328* C);
void r328move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r328make(T2 a1);
T6 r328conforms_to(T328* C,T0* a1);
T0* r328resize(T0* a1,T2 a2);
T2 r328copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r328twin(T328* C);
T6 r417se_assigned_from(T0* a1);
void r417print_on(T417* C,T0* a1);
void r417out_in_tagged_out_memory(T417* C);
T6 r417conforms_to(T417* C,T0* a1);
T0* r417twin(T417* C);
T0* r138current_working_directory(T138* C);
T6 r138se_assigned_from(T0* a1);
void r138print_on(T138* C,T0* a1);
T0* r138clone(T0* a1);
T6 r138is_windows(T138* C);
void r138out_in_tagged_out_memory(T138* C);
T6 r138conforms_to(T138* C,T0* a1);
T6 r138is_unix(T138* C);
T0* r138twin(T138* C);
T0* r305new_event_parser_imp(void);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 418
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms158_392507;
extern T7*ms16_23340076;
extern T7*ms28_1962337529;
extern T7*ms199_32aa;
extern T7*ms197_0aa;
extern T7*ms174_34aaa;
extern T7*ms7_241908472;
extern T7*ms196_10531885;
extern T7*ms160_10aaaaa;
extern T7*ms89_18036a;
extern T7*ms160_271606681;
extern T7*ms310_1173251759;
extern T7*ms163_78495;
extern T7*ms158_10a;
extern T7*ms283_2034932;
extern T7*ms89_2077395a;
extern T7*ms43_10;
extern T7*ms158_32a;
extern T7*ms210_420615272;
extern T7*ms226_16885647;
extern T7*ms219_1606898500;
extern T7*ms164_3373326a;
extern T7*ms196_2142980;
extern T7*ms222_498244349;
extern T7*ms167_1544179189;
extern T7*ms225_438001;
extern T7*ms174_2139228939;
extern T7*ms89_1410228aaa;
extern T7*ms172_84369147;
extern T7*ms197_401657;
extern T7*ms173_2246326;
extern T7*ms59_1756715249;
extern T7*ms162_16823272a;
extern T7*ms215_49442341;
extern T7*ms196_16323;
extern T7*ms173_18021;
extern T7*ms16_323;
extern T7*ms16_329;
extern T7*ms16_288;
extern T7*ms16_343;
extern T7*ms162_347001;
extern T7*ms89_1410228;
extern T7*ms318_1338477769;
extern T7*ms196_17711;
extern T7*ms140_46;
extern T7*ms140_92;
extern T7*ms344_447584;
extern T7*ms218_420355647;
extern T7*ms19_247356966;
extern T7*ms162_15065a;
extern T7*ms19_3301;
extern T7*ms28_1510;
extern T7*ms164_10a;
extern T7*ms19_3294;
extern T7*ms222_2065776307;
extern T7*ms141_46;
extern T7*ms141_47;
extern T7*ms217_49442341;
extern T7*ms19_3496;
extern T7*ms164_497;
extern T7*ms162_293876;
extern T7*ms164_210841101;
extern T7*ms28_10aa;
extern T7*ms159_452889;
extern T7*ms249_446821;
extern T7*ms158_1749788964;
extern T7*ms159_0aa;
extern T7*ms199_32a;
extern T7*ms196_1801319434;
extern T7*ms164_210841101a;
extern T7*ms162_143262;
extern T7*ms343_10;
extern T7*ms6_79251;
extern T7*ms157_2020550321;
extern T7*ms160_1086847256;
extern T7*ms220_16818147;
extern T7*ms89_1410228aa;
extern T7*ms157_388005040;
extern T7*ms209_395678;
extern T7*ms160_1139505;
extern T7*ms19_403021;
extern T7*ms221_2234766;
extern T7*ms344_10;
extern T7*ms28_1299730420;
extern T7*ms19_403144;
extern T7*ms19_402716;
extern T7*ms19_80091;
extern T7*ms249_282198636;
extern T7*ms19_80325;
extern T7*ms220_205;
extern T7*ms158_1979141;
extern T7*ms201_10;
extern T7*ms201_32;
extern T7*ms174_429121856;
extern T7*ms77_251;
extern T7*ms201_0a;
extern T7*ms161_3021;
extern T7*ms224_421552197;
extern T7*ms158_1775;
extern T7*ms161_452889;
extern T7*ms211_16016;
extern T7*ms161_16054;
extern T7*ms220_205a;
extern T7*ms163_3200;
extern T7*ms7_280756769;
extern T7*ms158_9895737;
extern T7*ms43_1367980604;
extern T7*ms160_90108711;
extern T7*ms222_205a;
extern T7*ms59_3139;
extern T7*ms164_3373326aa;
extern T7*ms249_440571;
extern T7*ms209_391651;
extern T7*ms159_1890742889;
extern T7*ms19_79251;
extern T7*ms199_2015752;
extern T7*ms43_205;
extern T7*ms43_10a;
extern T7*ms164_2230607;
extern T7*ms218_420355647a;
extern T7*ms210_10;
extern T7*ms160_10;
extern T7*ms19_84639;
extern T7*ms170_3372272;
extern T7*ms201_32a;
extern T7*ms216_205;
extern T7*ms158_5712;
extern T7*ms19_90371;
extern T7*ms162_90108711;
extern T7*ms161_0a;
extern T7*ms19_0;
extern T7*ms173_452889;
extern T7*ms162_2102912007;
extern T7*ms196_438001;
extern T7*ms212_10;
extern T7*ms162_10;
extern T7*ms164_1206004176;
extern T7*ms210_576822614;
extern T7*ms157_0a;
extern T7*ms169_89261;
extern T7*ms16_1771134706;
extern T7*ms249_79251;
extern T7*ms174_34aa;
extern T7*ms158_16686;
extern T7*ms158_10;
extern T7*ms89_1410228a;
extern T7*ms158_32;
extern T7*ms220_7487;
extern T7*ms164_674647a;
extern T7*ms59_1341038798;
extern T7*ms196_267582581;
extern T7*ms163_0a;
extern T7*ms162_1955941869;
extern T7*ms222_7487;
extern T7*ms43_1145887148;
extern T7*ms214_10;
extern T7*ms164_10;
extern T7*ms77_5426;
extern T7*ms159_0a;
extern T7*ms160_838447038;
extern T7*ms196_3135;
extern T7*ms19_627;
extern T7*ms366_276;
extern T7*ms211_440571;
extern T7*ms19_676;
extern T7*ms19_691;
extern T7*ms220_10;
extern T7*ms170_10;
extern T7*ms159_10030586;
extern T7*ms330_89510;
extern T7*ms170_61;
extern T7*ms250_1378798665;
extern T7*ms7_1983847;
extern T7*ms162_10aaaa;
extern T7*ms222_205;
extern T7*ms59_915611165;
extern T7*ms164_2110593349;
extern T7*ms77_2124547;
extern T7*ms174_429291314;
extern T7*ms216_10;
extern T7*ms166_10;
extern T7*ms162_453255442;
extern T7*ms89_259694110;
extern T7*ms16_184927;
extern T7*ms196_382622;
extern T7*ms201_16824172;
extern T7*ms366_46;
extern T7*ms222_10;
extern T7*ms172_10;
extern T7*ms158_658766397;
extern T7*ms136_80516;
extern T7*ms173_438001;
extern T7*ms157_78495;
extern T7*ms218_10;
extern T7*ms168_10;
extern T7*ms168_32;
extern T7*ms173_391651;
extern T7*ms249_11171466;
extern T7*ms198_2246326;
extern T7*ms197_84117997;
extern T7*ms213_2108041;
extern T7*ms210_2013612;
extern T7*ms28_1404162515a;
extern T7*ms224_10;
extern T7*ms174_10;
extern T7*ms174_32;
extern T7*ms174_34;
extern T7*ms224_61;
extern T7*ms174_61;
extern T7*ms217_16016;
extern T7*ms249_1238683011;
extern T7*ms160_347001;
extern T7*ms211_199275083;
extern T7*ms28_1404162515;
extern T7*ms28_1569122284;
extern T7*ms196_388005040;
extern T7*ms212_836387112;
extern T7*ms218_205;
extern T7*ms164_2230607a;
extern T7*ms218_10a;
extern T7*ms162_60094111;
extern T7*ms226_10;
extern T7*ms226_32;
extern T7*ms70_577;
extern T7*ms226_0a;
extern T7*ms222_205aa;
extern T7*ms160_293876;
extern T7*ms6_18036;
extern T7*ms160_47904999;
extern T7*ms160_1086847256aa;
extern T7*ms159_78495;
extern T7*ms19_440193;
extern T7*ms201_16072;
extern T7*ms16_1316598903;
extern T7*ms89_18020;
extern T7*ms89_18036;
extern T7*ms216_84225847;
extern T7*ms19_440571;
extern T7*ms162_8902a;
extern T7*ms219_16016;
extern T7*ms20_691485293;
extern T7*ms200_438001;
extern T7*ms23_1479;
extern T7*ms160_143262;
extern T7*ms16_80091;
extern T7*ms140_0;
extern T7*ms200_391651;
extern T7*ms141_0;
extern T7*ms222_16849647;
extern T7*ms19_392331;
extern T7*ms43_768830101;
extern T7*ms28_834968801;
extern T7*ms162_16823272;
extern T7*ms165_254031466;
extern T7*ms164_9366019;
extern T7*ms201_0;
extern T7*ms158_674272;
extern T7*ms19_16036;
extern T7*ms28_803892311;
extern T7*ms19_16072;
extern T7*ms214_16815647;
extern T7*ms19_54738731;
extern T7*ms19_15731;
extern T7*ms19_16229;
extern T7*ms19_15831;
extern T7*ms250_462337930;
extern T7*ms363_1684857857;
extern T7*ms161_0;
extern T7*ms332_1158552108;
extern T7*ms174_32a;
extern T7*ms157_0;
extern T7*ms174_34a;
extern T7*ms19_17091;
extern T7*ms222_2145909738;
extern T7*ms163_0;
extern T7*ms159_0;
extern T7*ms19_16821;
extern T7*ms162_91038212;
extern T7*ms164_797202614;
extern T7*ms28_2065491;
extern T7*ms164_1428018568;
extern T7*ms19_18036;
extern T7*ms89_1307186427;
extern T7*ms209_89261;
extern T7*ms201_1093;
extern T7*ms157_254031466;
extern T7*ms89_3226a;
extern T7*ms222_591632351;
extern T7*ms19_451090;
extern T7*ms226_0;
extern T7*ms309_38a;
extern T7*ms19_18531;
extern T7*ms309_60a;
extern T7*ms200_82876;
extern T7*ms309_62a;
extern T7*ms164_1391903168;
extern T7*ms318_1338477769a;
extern T7*ms162_60094111a;
extern T7*ms219_2234766;
extern T7*ms198_1801319434;
extern T7*ms43_3139;
extern T7*ms157_276875365;
extern T7*ms140_276;
extern T7*ms19_1957581;
extern T7*ms77_14150;
extern T7*ms200_83995;
extern T7*ms210_202;
extern T7*ms160_420927632;
extern T7*ms160_10a;
extern T7*ms210_202a;
extern T7*ms209_1979141;
extern T7*ms197_0;
extern T7*ms160_1819;
extern T7*ms199_420625972;
extern T7*ms249_18036;
extern T7*ms28_924849867;
extern T7*ms174_115260364;
extern T7*ms199_0;
extern T7*ms196_82876;
extern T7*ms160_10aa;
extern T7*ms157_3021;
extern T7*ms201_3427745;
extern T7*ms162_10aa;
extern T7*ms197_10;
extern T7*ms342_1515383187;
extern T7*ms225_281466146;
extern T7*ms197_32;
extern T7*ms220_498244349;
extern T7*ms89_1307186427a;
extern T7*ms159_3021;
extern T7*ms173_1975394;
extern T7*ms218_1127570490;
extern T7*ms197_0a;
extern T7*ms164_10aa;
extern T7*ms1_14150;
extern T7*ms160_1560205919;
extern T7*ms164_1546380197;
extern T7*ms221_1606898500;
extern T7*ms162_15065;
extern T7*ms218_205a;
extern T7*ms225_82876;
extern T7*ms174_428919114;
extern T7*ms225_53496769;
extern T7*ms140_8976;
extern T7*ms160_272198;
extern T7*ms28_180;
extern T7*ms89_259694110a;
extern T7*ms28_10a;
extern T7*ms199_10;
extern T7*ms162_16054;
extern T7*ms199_32;
extern T7*ms164_3373326;
extern T7*ms168_3367222;
extern T7*ms141_276;
extern T7*ms199_0a;
extern T7*ms343_447851;
extern T7*ms168_3294;
extern T7*ms198_82876;
extern T7*ms19_1228681540;
extern T7*ms226_27872;
extern T7*ms174_85840076;
extern T7*ms313_195717202;
extern T7*ms223_89261;
extern T7*ms173_89261;
extern T7*ms166_16828097;
extern T7*ms220_1191017681;
extern T7*ms160_10aaaa;
extern T7*ms173_11153106;
extern T7*ms161_10030586;
extern T7*ms198_448440;
extern T7*ms160_272198aa;
extern T7*ms163_54423316;
extern T7*ms89_2077395;
extern T7*ms160_3367397;
extern T7*ms160_10aaa;
extern T7*ms160_272198a;
extern T7*ms161_0aa;
extern T7*ms283_80516;
extern T7*ms160_3367397a;
extern T7*ms168_5586;
extern T7*ms367_0;
extern T7*ms160_8949;
extern T7*ms162_8711;
extern T7*ms89_205a;
extern T7*ms220_1206173931;
extern T7*ms162_8902;
extern T7*ms197_1642;
extern T7*ms210_115260364;
extern T7*ms197_1647;
extern T7*ms197_1652;
extern T7*ms197_1702;
extern T7*ms197_1662;
extern T7*ms197_1712;
extern T7*ms197_1667;
extern T7*ms218_643481948;
extern T7*ms197_1682;
extern T7*ms197_1732;
extern T7*ms197_1752;
extern T7*ms363_336971577;
extern T7*ms197_1757;
extern T7*ms89_3170;
extern T7*ms77_4763922;
extern T7*ms164_674647;
extern T7*ms89_3226;
extern T7*ms226_141612;
extern T7*ms225_89261;
extern T7*ms309_38;
extern T7*ms309_60;
extern T7*ms309_62;
extern T7*ms226_3506042;
extern T7*ms167_254031466;
extern T7*ms199_1712;
extern T7*ms174_2015137;
extern T7*ms199_1737;
extern T7*ms199_1747;
extern T7*ms199_1757;
extern T7*ms162_10a;
extern T7*ms162_10aaa;
extern T7*ms226_140577;
extern T7*ms89_2272235;
extern T7*ms157_109478249;
extern T7*ms28_10;
extern T7*ms367_1338085634;
extern T7*ms283_2034932a;
extern T7*ms161_78495;
extern T7*ms43_392800;
extern T7*ms28_39;
extern T7*ms28_46;
extern T7*ms160_1086847256a;
extern T7*ms16_23342040;
extern T7*ms174_420622897;
extern T7*ms89_125;
extern T7*ms89_205;
extern T7*ms89_303;
extern T7*ms198_438001;
extern T7*ms226_55455187;
extern T7*ms216_1463233606;
extern T7*ms158_674272a;
extern T7*ms16_14036;
extern T7*ms221_16016;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void*se_ma87(int argc,...);
void X50put_string(T0*C,T0* a1);
void X59execute(T0*C);
T6 X59is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X49put_string(T0*C,T0* a1);
void X281disconnect(T0*C);
T6 X281is_connected(T0*C);
void X281connect_to(T0*C,T0* a1);
T0* X281path(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
void X1print_on(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X322clear_all(T0*C,T0* a1);
T0* X322make(T0*C,T2 a1);
T0* X322resize(T0*C,T0* a1,T2 a2);
void X336put_line(T0*C,T0* a1);
void X48raise(T0*C,T0* a1);
T2 X320count(T0*C);
T2 X320item(T0*C,T2 a1);
T2 X320lower(T0*C);
void X321put(T0*C,T0* a1,T2 a2);
T0* X321item(T0*C,T2 a1);
void X321set_all_with(T0*C,T0* a1);
void X321resize(T0*C,T2 a1);
T2 X68item_code(T0*C,T2 a1);
void X68insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X68remove(T0*C,T2 a1,T2 a2);
void X68insert_code(T0*C,T2 a1,T2 a2);
void X282read_character(T0*C);
T6 X282end_of_input(T0*C);
T3 X282last_character(T0*C);
T0* X137string_to_pathname(T0*C,T0* a1);
T0* X333default_message(T0*C);
T6 X138is_windows(T0*C);
T6 X138is_unix(T0*C);
T0* X136pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X136relative_current_directory(T0*C);
T0* X136absolute_pathname(T0*C,T0* a1);
T0* X136dirname(T0*C,T0* a1);
T0* X136exe_extension(T0*C);
T0* X136relative_parent_directory(T0*C);
T0* X136pathname(T0*C,T0* a1,T0* a2);
T0* X136canonical_pathname(T0*C,T0* a1);
T0* T307toT306(int source);
T0* T305toT304(int source);
T0* T2toT45(T2 source);
T2 T45toT2(T0* source);

#ifdef __cplusplus
}
#endif
