#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #1 (August 17th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;

typedef struct S0 T0;

struct S0{
  Tid id;
};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S76 T76;
typedef struct S346 T346;
typedef struct S222 T222;
typedef struct S164 T164;
typedef struct S267 T267;
typedef struct S319 T319;
typedef struct S101 T101;
typedef struct S88 T88;
typedef struct S17 T17;
typedef struct S186 T186;
typedef struct S306 T306;
typedef int T273;
typedef struct S295 T295;
typedef struct S160 T160;
typedef struct S86 T86;
typedef struct S61 T61;
typedef struct S45 T45;
typedef struct S291 T291;
typedef struct S46 T46;
typedef struct S138 T138;
typedef struct S334 T334;
typedef struct S135 T135;
typedef struct S296 T296;
typedef struct S308 T308;
typedef struct S47 T47;
typedef struct S239 T239;
typedef struct S206 T206;
typedef struct S350 T350;
typedef struct S54 T54;
typedef struct S370 T370;
typedef struct S209 T209;
typedef struct S89 T89;
typedef struct S144 T144;
typedef struct S62 T62;
typedef struct S202 T202;
typedef struct S194 T194;
typedef struct S80 T80;
typedef struct S373 T373;
typedef struct S312 T312;
typedef struct S335 T335;
typedef struct S198 T198;
typedef struct S97 T97;
typedef struct S324 T324;
typedef struct S190 T190;
typedef struct S330 T330;
typedef struct S148 T148;
typedef struct S44 T44;
typedef struct S356 T356;
typedef struct S113 T113;
typedef struct S7 T7;
typedef struct S321 T321;
typedef struct S79 T79;
typedef struct S188 T188;
typedef struct S259 T259;
typedef struct S326 T326;
typedef struct S361 T361;
typedef struct S43 T43;
typedef struct S360 T360;
typedef struct S272 T272;
typedef struct S181 T181;
typedef struct S200 T200;
typedef struct S305 T305;
typedef struct S73 T73;
typedef struct S142 T142;
typedef struct S64 T64;
typedef struct S230 T230;
typedef struct S331 T331;
typedef struct S91 T91;
typedef struct S207 T207;
typedef struct S196 T196;
typedef struct S83 T83;
typedef struct S100 T100;
typedef struct S333 T333;
typedef struct S63 T63;
typedef struct S82 T82;
typedef struct S26 T26;
typedef struct S152 T152;
typedef struct S68 T68;
typedef struct S150 T150;
typedef struct S166 T166;
typedef struct S29 T29;
typedef struct S119 T119;
typedef struct S56 T56;
typedef struct S242 T242;
typedef struct S162 T162;
typedef struct S111 T111;
typedef struct S104 T104;
typedef struct S328 T328;
typedef struct S354 T354;
typedef struct S302 T302;
typedef struct S313 T313;
typedef struct S270 T270;
typedef struct S317 T317;
typedef struct S98 T98;
typedef struct S139 T139;
typedef struct S309 T309;
typedef struct S227 T227;
typedef struct S290 T290;
typedef struct S225 T225;
typedef struct S146 T146;
typedef struct S84 T84;
typedef struct S192 T192;
typedef struct S51 T51;
typedef struct S274 T274;
typedef struct S158 T158;
typedef struct S244 T244;
typedef struct S118 T118;
typedef struct S304 T304;
typedef struct S374 T374;
typedef int T271;
typedef struct S99 T99;
typedef struct S183 T183;
typedef struct S49 T49;
typedef struct S103 T103;
typedef struct S310 T310;
typedef struct S266 T266;
typedef struct S156 T156;
typedef struct S212 T212;
typedef struct S154 T154;

/*C Header Pass 2 :*/
typedef T0**T168;
typedef T0**T115;
typedef T0**T69;
typedef T0**T93;
typedef T3*T9;
typedef T0**T229;
typedef T2*T87;
typedef T0**T211;
typedef T0**T294;

/*C Header Pass 3 :*/
extern T273 M273;
struct S100{T8 _directory_stream;T8 _current_entry;};
int se_cmpT100(T100 o1,T100 o2);
struct S56{T2 _i_code;};
int se_cmpT56(T56 o1,T56 o2);
extern T271 M271;

/*C Header Pass 4 :*/
struct S346{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T346 M346;
struct S222{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T222 M222;
struct S164{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T164 M164;
struct S267{Tid id;T0* _event_parser_factory;};
extern T267 M267;
struct S319{Tid id;T0* _command;};
extern T319 M319;
struct S101{Tid id;T0* _project;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T101 M101;
struct S88{Tid id;T0* _name;T0* _value;};
extern T88 M88;
struct S17{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;};
extern T17 M17;
struct S186{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T186 M186;
struct S306{Tid id;T0* _parameters;};
extern T306 M306;
struct S295{Tid id;};
extern T295 M295;
struct S160{Tid id;T0* _project;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T160 M160;
struct S86{Tid id;T87 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T86 M86;
struct S61{Tid id;};
extern T61 M61;
struct S45{Tid id;};
extern T45 M45;
struct S291{Tid id;};
extern T291 M291;
struct S46{Tid id;};
extern T46 M46;
struct S138{Tid id;};
extern T138 M138;
struct S334{Tid id;T0* _first;T0* _second;};
extern T334 M334;
struct S135{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T135 M135;
struct S296{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;};
extern T296 M296;
struct S308{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T308 M308;
struct S47{Tid id;T2 _item;};
extern T47 M47;
struct S239{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T239 M239;
struct S206{Tid id;T0* _first;T0* _second;};
extern T206 M206;
struct S350{Tid id;T0* _item;T0* _right;};
extern T350 M350;
struct S54{Tid id;T8 _item;};
extern T54 M54;
struct S370{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T370 M370;
struct S209{Tid id;T211 _storage;T2 _capacity;T2 _upper;};
extern T209 M209;
struct S89{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T89 M89;
struct S144{Tid id;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _fish;T0* _clean;};
extern T144 M144;
struct S62{Tid id;};
extern T62 M62;
struct S202{Tid id;T0* _project;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;};
extern T202 M202;
struct S194{Tid id;T0* _project;T0* _directory;};
extern T194 M194;
struct S80{Tid id;};
extern T80 M80;
struct S373{Tid id;};
extern T373 M373;
struct S312{Tid id;T0* _parameters;};
extern T312 M312;
struct S335{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T335 M335;
struct S198{Tid id;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;};
extern T198 M198;
struct S97{Tid id;T100 _basic_directory;};
extern T97 M97;
struct S324{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;T0* _name;T0* _last_string;};
extern T324 M324;
struct S190{Tid id;T0* _project;T0* _filename;T6 _reuse_variables;T0* _start_target_name;};
extern T190 M190;
struct S330{Tid id;T0* _item;};
extern T330 M330;
struct S148{Tid id;T0* _project;T0* _command_line;};
extern T148 M148;
struct S44{Tid id;T6 _item;};
extern T44 M44;
struct S356{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T356 M356;
struct S113{Tid id;T115 _storage;T2 _capacity;T2 _upper;};
extern T113 M113;
struct S321{Tid id;T0* _path;T8 _output_stream;T0* _name;};
extern T321 M321;
struct S79{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T79 M79;
struct S188{Tid id;T0* _project;T0* _config_filename;};
extern T188 M188;
struct S259{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T259 M259;
struct S76{Tid id;T0* _children;T0* _attributes;T0* _name;T0* _content;};
extern T76 M76;
struct S326{Tid id;T0* _name;T100 _basic_directory;};
extern T326 M326;
struct S361{Tid id;};
extern T361 M361;
struct S360{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T360 M360;
struct S272{Tid id;};
extern T272 M272;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S181{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T181 M181;
struct S200{Tid id;T0* _project;T0* _name;T0* _value;};
extern T200 M200;
struct S305{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T305 M305;
struct S73{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T73 M73;
struct S142{Tid id;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _finish_freezing;T0* _clean;};
extern T142 M142;
struct S64{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T64 M64;
struct S230{Tid id;};
extern T230 M230;
struct S331{Tid id;};
extern T331 M331;
struct S91{Tid id;T93 _storage;T2 _capacity;T2 _upper;};
extern T91 M91;
struct S207{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T207 M207;
struct S196{Tid id;T0* _project;T0* _directory;T0* _file;};
extern T196 M196;
struct S83{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T83 M83;
extern T100 M100;
struct S333{Tid id;T0* _first;T0* _second;};
extern T333 M333;
struct S63{Tid id;};
extern T63 M63;
struct S82{Tid id;T2 _type;};
extern T82 M82;
struct S152{Tid id;T0* _project;T0* _name;T0* _value;};
extern T152 M152;
struct S68{Tid id;T69 _storage;T2 _capacity;T2 _upper;};
extern T68 M68;
struct S150{Tid id;T0* _project;T0* _executable;T0* _source_filename;};
extern T150 M150;
struct S166{Tid id;T168 _storage;T2 _capacity;T2 _upper;};
extern T166 M166;
struct S29{Tid id;T0* _build_filename;T0* _start_target_name;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T0* _current_target;T0* _root_element;};
extern T29 M29;
struct S26{Tid id;T0* _i_representation;};
extern T26 M26;
struct S119{Tid id;T87 _storage;T2 _capacity;T2 _upper;};
extern T119 M119;
extern T56 M56;
struct S242{Tid id;};
extern T242 M242;
struct S162{Tid id;T0* _project;T0* _input_filename;T0* _output_filename;T0* _defines;};
extern T162 M162;
struct S111{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T111 M111;
struct S104{Tid id;};
extern T104 M104;
struct S328{Tid id;T2 _last_code;T2 _next_pos;};
extern T328 M328;
struct S354{Tid id;T0* _uri;};
extern T354 M354;
struct S302{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T302 M302;
struct S313{Tid id;T0* _name;};
extern T313 M313;
struct S270{Tid id;};
extern T270 M270;
struct S317{Tid id;T0* _name;};
extern T317 M317;
struct S98{Tid id;T100 _basic_directory;};
extern T98 M98;
struct S43{Tid id;T0* _description;T0* _name;T0* _project;T6 _is_executed;T0* _target_element;};
extern T43 M43;
struct S139{Tid id;};
extern T139 M139;
struct S309{Tid id;T115 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T309 M309;
struct S227{Tid id;T229 _storage;T2 _capacity;T2 _upper;};
extern T227 M227;
struct S290{Tid id;T294 _storage;T2 _capacity;T2 _upper;};
extern T290 M290;
struct S225{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T225 M225;
struct S146{Tid id;T0* _project;T0* _esd_filename;T0* _clean;T6 _recursive_clean;};
extern T146 M146;
struct S84{Tid id;T2 _count;T0* _storage;};
extern T84 M84;
struct S192{Tid id;T0* _project;T0* _message;};
extern T192 M192;
struct S51{Tid id;T3 _item;};
extern T51 M51;
struct S274{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T274 M274;
struct S158{Tid id;T0* _project;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T158 M158;
struct S244{Tid id;T0* _implementation;T0* _root_element;};
extern T244 M244;
struct S118{Tid id;};
extern T118 M118;
struct S304{Tid id;};
extern T304 M304;
struct S374{Tid id;};
extern T374 M374;
struct S99{Tid id;T100 _basic_directory;};
extern T99 M99;
struct S183{Tid id;};
extern T183 M183;
struct S49{Tid id;};
extern T49 M49;
struct S103{Tid id;T0* _variables;};
extern T103 M103;
struct S310{Tid id;T0* _program_name;};
extern T310 M310;
struct S266{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T266 M266;
struct S156{Tid id;T0* _project;T0* _options;T0* _command;T0* _command_options;T0* _xace_filename;T6 _compile;};
extern T156 M156;
struct S212{Tid id;};
extern T212 M212;
struct S154{Tid id;T0* _project;T0* _name;};
extern T154 M154;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
EIF_POINTER basic_directory_current_working_directory(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T0* r6out(T6 C);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
void r168clear_all(T168 C,T2 a1);
T168 r168realloc(T168 C,T2 a1,T2 a2);
void r168set_all_with(T168 C,T0* a1,T2 a2);
void r168clear(T168 C,T2 a1,T2 a2);
void r168copy_from(T168 C,T168 a1,T2 a2);
void r115clear_all(T115 C,T2 a1);
T115 r115realloc(T115 C,T2 a1,T2 a2);
void r115set_all_with(T115 C,T0* a1,T2 a2);
void r115clear(T115 C,T2 a1,T2 a2);
void r115copy_from(T115 C,T115 a1,T2 a2);
void r69clear_all(T69 C,T2 a1);
T69 r69realloc(T69 C,T2 a1,T2 a2);
void r69set_all_with(T69 C,T0* a1,T2 a2);
void r69clear(T69 C,T2 a1,T2 a2);
void r69copy_from(T69 C,T69 a1,T2 a2);
void r93clear_all(T93 C,T2 a1);
T93 r93realloc(T93 C,T2 a1,T2 a2);
void r93set_all_with(T93 C,T0* a1,T2 a2);
void r93clear(T93 C,T2 a1,T2 a2);
void r93copy_from(T93 C,T93 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r229clear_all(T229 C,T2 a1);
T229 r229realloc(T229 C,T2 a1,T2 a2);
void r229set_all_with(T229 C,T0* a1,T2 a2);
void r229clear(T229 C,T2 a1,T2 a2);
void r229copy_from(T229 C,T229 a1,T2 a2);
void r87clear_all(T87 C,T2 a1);
T87 r87realloc(T87 C,T2 a1,T2 a2);
void r87move(T87 C,T2 a1,T2 a2,T2 a3);
void r87set_all_with(T87 C,T2 a1,T2 a2);
void r87clear(T87 C,T2 a1,T2 a2);
void r87copy_from(T87 C,T87 a1,T2 a2);
void r211clear_all(T211 C,T2 a1);
T211 r211realloc(T211 C,T2 a1,T2 a2);
void r211set_all_with(T211 C,T0* a1,T2 a2);
void r211clear(T211 C,T2 a1,T2 a2);
void r211copy_from(T211 C,T211 a1,T2 a2);
void r294clear_all(T294 C,T2 a1);
T294 r294realloc(T294 C,T2 a1,T2 a2);
void r294set_all_with(T294 C,T0* a1,T2 a2);
void r294clear(T294 C,T2 a1,T2 a2);
void r294copy_from(T294 C,T294 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
void r7remove_first(T7* C,T2 a1);
void r7remove_between(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7tail(T7* C,T2 a1);
void r7swap(T7* C,T2 a1,T2 a2);
void r86copy(T86* C,T0* a1);
T2 r86count(T86* C);
T2 r86item(T86* C,T2 a1);
void r86print_on(T86* C,T0* a1);
void r86out_in_tagged_out_memory(T86* C);
void r86make(T86* C,T2 a1,T2 a2);
void r86fill_tagged_out_memory(T86* C);
void r86resize(T86* C,T2 a1,T2 a2);
T0* r86twin(T86* C);
void r209copy(T209* C,T0* a1);
void r209print_on(T209* C,T0* a1);
void r209out_in_tagged_out_memory(T209* C);
void r209make(T209* C,T2 a1);
void r209fill_tagged_out_memory(T209* C);
void r209resize(T209* C,T2 a1);
T0* r209twin(T209* C);
void r113copy(T113* C,T0* a1);
void r113print_on(T113* C,T0* a1);
void r113out_in_tagged_out_memory(T113* C);
void r113make(T113* C,T2 a1);
void r113fill_tagged_out_memory(T113* C);
void r113resize(T113* C,T2 a1);
T0* r113twin(T113* C);
void r91copy(T91* C,T0* a1);
void r91print_on(T91* C,T0* a1);
void r91out_in_tagged_out_memory(T91* C);
void r91make(T91* C,T2 a1);
void r91fill_tagged_out_memory(T91* C);
void r91resize(T91* C,T2 a1);
T0* r91twin(T91* C);
void r68copy(T68* C,T0* a1);
void r68print_on(T68* C,T0* a1);
void r68out_in_tagged_out_memory(T68* C);
void r68make(T68* C,T2 a1);
void r68fill_tagged_out_memory(T68* C);
void r68resize(T68* C,T2 a1);
T0* r68twin(T68* C);
void r166copy(T166* C,T0* a1);
void r166print_on(T166* C,T0* a1);
void r166out_in_tagged_out_memory(T166* C);
void r166make(T166* C,T2 a1);
void r166fill_tagged_out_memory(T166* C);
void r166resize(T166* C,T2 a1);
T0* r166twin(T166* C);
void r119copy(T119* C,T0* a1);
void r119print_on(T119* C,T0* a1);
void r119out_in_tagged_out_memory(T119* C);
void r119make(T119* C,T2 a1);
void r119fill_tagged_out_memory(T119* C);
void r119resize(T119* C,T2 a1);
T0* r119twin(T119* C);
void r119with_capacity(T119* C,T2 a1);
void r119from_collection(T119* C,T0* a1);
void r309copy(T309* C,T0* a1);
T0* r309item(T309* C,T2 a1);
T6 r309valid_index(T309* C,T2 a1);
void r309print_on(T309* C,T0* a1);
void r309out_in_tagged_out_memory(T309* C);
void r309make(T309* C,T2 a1,T2 a2);
void r309fill_tagged_out_memory(T309* C);
T0* r309twin(T309* C);
void r227copy(T227* C,T0* a1);
void r227print_on(T227* C,T0* a1);
void r227out_in_tagged_out_memory(T227* C);
void r227make(T227* C,T2 a1);
void r227fill_tagged_out_memory(T227* C);
void r227resize(T227* C,T2 a1);
T0* r227twin(T227* C);
void r290copy(T290* C,T0* a1);
T2 r290count(T290* C);
T0* r290item(T290* C,T2 a1);
void r290print_on(T290* C,T0* a1);
void r290out_in_tagged_out_memory(T290* C);
void r290make(T290* C,T2 a1);
void r290fill_tagged_out_memory(T290* C);
void r290resize(T290* C,T2 a1);
T0* r290twin(T290* C);
void r346copy(T346* C,T0* a1);
void r346set(T346* C,T0* a1,T6 a2,T6 a3);
void r346print_on(T346* C,T0* a1);
void r346out_in_tagged_out_memory(T346* C);
void r346make(T346* C,T0* a1);
void r346set_after(T346* C);
T0* r346twin(T346* C);
void r222copy(T222* C,T0* a1);
void r222print_on(T222* C,T0* a1);
void r222out_in_tagged_out_memory(T222* C);
T6 r222off(T222* C);
T0* r222twin(T222* C);
T2 r164new_capacity(T2 a1);
void r164copy(T164* C,T0* a1);
T6 r164extendible(T164* C,T2 a1);
void r164remove_traversing_cursor(T164* C,T0* a1);
void r164move_all_cursors_after(T164* C);
void r164add_traversing_cursor(T164* C,T0* a1);
void r164print_on(T164* C,T0* a1);
T0* r164clone(T0* a1);
void r164out_in_tagged_out_memory(T164* C);
T6 r164cursor_before(T0* a1);
void r164make(T164* C,T2 a1);
T6 r164cursor_after(T0* a1);
void r164resize(T164* C,T2 a1);
T0* r164twin(T164* C);
void r164force_last(T164* C,T0* a1);
T0* r164new_cursor(T164* C);
T6 r164cursor_off(T0* a1);
void r186copy(T186* C,T0* a1);
void r186print_on(T186* C,T0* a1);
void r186out_in_tagged_out_memory(T186* C);
T6 r186off(T186* C);
T0* r186twin(T186* C);
void r291clear_all(T0* a1);
void r291print_on(T291* C,T0* a1);
void r291out_in_tagged_out_memory(T291* C);
T0* r291make(T2 a1);
T0* r291resize(T0* a1,T2 a2);
T0* r291twin(T291* C);
void r138print_on(T138* C,T0* a1);
void r138out_in_tagged_out_memory(T138* C);
T0* r138to_fixed_array(T0* a1);
T0* r138make(T2 a1);
T0* r138make_from_array(T0* a1);
T0* r138resize(T0* a1,T2 a2);
T0* r138twin(T138* C);
void r334print_on(T334* C,T0* a1);
void r334out_in_tagged_out_memory(T334* C);
void r334make(T334* C,T0* a1,T0* a2);
T0* r334twin(T334* C);
void r135copy(T135* C,T0* a1);
void r135print_on(T135* C,T0* a1);
void r135out_in_tagged_out_memory(T135* C);
void r135make(T135* C,T0* a1);
T6 r135off(T135* C);
T0* r135twin(T135* C);
void r239copy(T239* C,T0* a1);
void r239print_on(T239* C,T0* a1);
void r239out_in_tagged_out_memory(T239* C);
T6 r239off(T239* C);
T0* r239twin(T239* C);
void r206print_on(T206* C,T0* a1);
void r206out_in_tagged_out_memory(T206* C);
void r206make(T206* C,T0* a1,T0* a2);
T0* r206twin(T206* C);
void r350print_on(T350* C,T0* a1);
void r350out_in_tagged_out_memory(T350* C);
T0* r350twin(T350* C);
void r370copy(T370* C,T0* a1);
void r370print_on(T370* C,T0* a1);
void r370out_in_tagged_out_memory(T370* C);
T6 r370off(T370* C);
T0* r370twin(T370* C);
T2 r89new_capacity(T2 a1);
void r89copy(T89* C,T0* a1);
T6 r89extendible(T89* C,T2 a1);
void r89remove_traversing_cursor(T89* C,T0* a1);
T0* r89item(T89* C,T2 a1);
void r89move_all_cursors_after(T89* C);
void r89add_traversing_cursor(T89* C,T0* a1);
void r89print_on(T89* C,T0* a1);
T0* r89clone(T0* a1);
void r89out_in_tagged_out_memory(T89* C);
T6 r89cursor_before(T0* a1);
void r89make(T89* C,T2 a1);
T6 r89cursor_after(T0* a1);
void r89resize(T89* C,T2 a1);
T0* r89twin(T89* C);
void r89force_last(T89* C,T0* a1);
T0* r89new_cursor(T89* C);
T6 r89cursor_off(T0* a1);
void r335copy(T335* C,T0* a1);
T0* r335cursor_item(T0* a1);
void r335remove_traversing_cursor(T335* C,T0* a1);
void r335move_all_cursors_after(T335* C);
void r335add_traversing_cursor(T335* C,T0* a1);
void r335print_on(T335* C,T0* a1);
void r335out_in_tagged_out_memory(T335* C);
void r335make(T335* C);
T6 r335cursor_after(T0* a1);
void r335cursor_forth(T335* C,T0* a1);
void r335cursor_start(T335* C,T0* a1);
T0* r335twin(T335* C);
T0* r335new_cursor(T335* C);
void r335put_last(T335* C,T0* a1);
T6 r335cursor_off(T0* a1);
void r330print_on(T330* C,T0* a1);
void r330out_in_tagged_out_memory(T330* C);
T0* r330twin(T330* C);
T2 r356new_capacity(T2 a1);
void r356copy(T356* C,T0* a1);
T6 r356extendible(T356* C,T2 a1);
void r356force(T356* C,T0* a1);
T0* r356item(T356* C);
void r356print_on(T356* C,T0* a1);
T0* r356clone(T0* a1);
void r356out_in_tagged_out_memory(T356* C);
void r356make(T356* C,T2 a1);
void r356remove(T356* C);
void r356resize(T356* C,T2 a1);
T0* r356twin(T356* C);
T2 r79new_capacity(T2 a1);
void r79copy(T79* C,T0* a1);
T6 r79extendible(T79* C,T2 a1);
void r79remove_traversing_cursor(T79* C,T0* a1);
void r79move_all_cursors_after(T79* C);
void r79add_traversing_cursor(T79* C,T0* a1);
void r79print_on(T79* C,T0* a1);
T0* r79clone(T0* a1);
void r79out_in_tagged_out_memory(T79* C);
T6 r79cursor_before(T0* a1);
void r79make(T79* C,T2 a1);
T6 r79cursor_after(T0* a1);
void r79resize(T79* C,T2 a1);
T0* r79twin(T79* C);
void r79force_last(T79* C,T0* a1);
T0* r79new_cursor(T79* C);
void r79put_last(T79* C,T0* a1);
T6 r79cursor_off(T0* a1);
void r259copy(T259* C,T0* a1);
void r259print_on(T259* C,T0* a1);
void r259out_in_tagged_out_memory(T259* C);
T6 r259off(T259* C);
T0* r259twin(T259* C);
void r361print_on(T361* C,T0* a1);
void r361out_in_tagged_out_memory(T361* C);
T0* r361make(T2 a1);
T0* r361resize(T0* a1,T2 a2);
T0* r361twin(T361* C);
void r181copy(T181* C,T0* a1);
void r181print_on(T181* C,T0* a1);
void r181out_in_tagged_out_memory(T181* C);
T6 r181off(T181* C);
T0* r181twin(T181* C);
T2 r73new_capacity(T2 a1);
void r73copy(T73* C,T0* a1);
T6 r73extendible(T73* C,T2 a1);
void r73force(T73* C,T0* a1);
T0* r73item(T73* C);
void r73print_on(T73* C,T0* a1);
T0* r73clone(T0* a1);
void r73out_in_tagged_out_memory(T73* C);
void r73make(T73* C,T2 a1);
void r73remove(T73* C);
void r73resize(T73* C,T2 a1);
T0* r73twin(T73* C);
T2 r64new_capacity(T2 a1);
void r64copy(T64* C,T0* a1);
T6 r64extendible(T64* C,T2 a1);
void r64remove_traversing_cursor(T64* C,T0* a1);
void r64move_all_cursors_after(T64* C);
void r64add_traversing_cursor(T64* C,T0* a1);
void r64print_on(T64* C,T0* a1);
T0* r64clone(T0* a1);
void r64out_in_tagged_out_memory(T64* C);
T6 r64cursor_before(T0* a1);
void r64make(T64* C,T2 a1);
T6 r64cursor_after(T0* a1);
void r64resize(T64* C,T2 a1);
T0* r64twin(T64* C);
void r64force_last(T64* C,T0* a1);
T0* r64new_cursor(T64* C);
T6 r64cursor_off(T0* a1);
void r230print_on(T230* C,T0* a1);
void r230out_in_tagged_out_memory(T230* C);
T0* r230make(T2 a1);
T0* r230resize(T0* a1,T2 a2);
T0* r230twin(T230* C);
T2 r207new_capacity(T2 a1);
void r207copy(T207* C,T0* a1);
T6 r207extendible(T207* C,T2 a1);
void r207remove_traversing_cursor(T207* C,T0* a1);
void r207move_all_cursors_after(T207* C);
void r207add_traversing_cursor(T207* C,T0* a1);
void r207print_on(T207* C,T0* a1);
T0* r207clone(T0* a1);
void r207out_in_tagged_out_memory(T207* C);
T6 r207cursor_before(T0* a1);
void r207make(T207* C,T2 a1);
T6 r207cursor_after(T0* a1);
void r207resize(T207* C,T2 a1);
T0* r207twin(T207* C);
void r207force_last(T207* C,T0* a1);
T0* r207new_cursor(T207* C);
T6 r207cursor_off(T0* a1);
void r333print_on(T333* C,T0* a1);
void r333out_in_tagged_out_memory(T333* C);
void r333make(T333* C,T0* a1,T0* a2);
T0* r333twin(T333* C);
void r242print_on(T242* C,T0* a1);
void r242out_in_tagged_out_memory(T242* C);
T0* r242make(T2 a1);
T0* r242resize(T0* a1,T2 a2);
T0* r242twin(T242* C);
T2 r111new_capacity(T2 a1);
void r111copy(T111* C,T0* a1);
void r111force(T111* C,T0* a1,T0* a2);
void r111make_clashes(T111* C,T2 a1);
void r111search_position(T111* C,T0* a1);
void r111remove_traversing_cursor(T111* C,T0* a1);
void r111clone_slots(T111* C);
extern T0*oBC107FIXED_INTEGER_ARRAY_;
void r111keys_resize(T111* C,T2 a1);
void r111clone_clashes(T111* C);
void r111move_all_cursors_after(T111* C);
void r111make_items(T111* C,T2 a1);
void r111add_traversing_cursor(T111* C,T0* a1);
void r111print_on(T111* C,T0* a1);
T0* r111clone(T0* a1);
void r111remove_position(T111* C,T2 a1);
void r111out_in_tagged_out_memory(T111* C);
void r111make(T111* C,T2 a1);
void r111remove(T111* C,T0* a1);
void r111clone_items(T111* C);
void r111make_keys(T111* C,T2 a1);
T2 r111hash_position(T111* C,T0* a1);
void r111items_resize(T111* C,T2 a1);
void r111clone_keys(T111* C);
void r111move_cursors_after(T111* C,T2 a1);
void r111resize(T111* C,T2 a1);
void r111make_with_equality_testers(T111* C,T2 a1,T0* a2,T0* a3);
T0* r111found_item(T111* C);
T6 r111found(T111* C);
void r111move_cursors_forth(T111* C,T2 a1);
void r111search(T111* C,T0* a1);
void r111clashes_resize(T111* C,T2 a1);
void r111slots_resize(T111* C,T2 a1);
T0* r111twin(T111* C);
T0* r111new_cursor(T111* C);
void r111make_slots(T111* C,T2 a1);
void r111move_all_cursors(T111* C,T2 a1,T2 a2);
T2 r111new_modulus(T2 a1);
T6 r111cursor_off(T0* a1);
void r139print_on(T139* C,T0* a1);
void r139out_in_tagged_out_memory(T139* C);
T0* r139make(T2 a1);
T0* r139resize(T0* a1,T2 a2);
T0* r139twin(T139* C);
T2 r225new_capacity(T2 a1);
void r225copy(T225* C,T0* a1);
T6 r225extendible(T225* C,T2 a1);
void r225remove_traversing_cursor(T225* C,T0* a1);
void r225move_all_cursors_after(T225* C);
void r225add_traversing_cursor(T225* C,T0* a1);
void r225print_on(T225* C,T0* a1);
T0* r225clone(T0* a1);
void r225out_in_tagged_out_memory(T225* C);
T6 r225cursor_before(T0* a1);
void r225make(T225* C,T2 a1);
T6 r225cursor_after(T0* a1);
void r225resize(T225* C,T2 a1);
T0* r225twin(T225* C);
void r225force_last(T225* C,T0* a1);
T0* r225new_cursor(T225* C);
T6 r225cursor_off(T0* a1);
void r118print_on(T118* C,T0* a1);
void r118out_in_tagged_out_memory(T118* C);
T6 r118test(T0* a1,T0* a2);
T0* r118twin(T118* C);
void r183print_on(T183* C,T0* a1);
void r183out_in_tagged_out_memory(T183* C);
T0* r183make(T2 a1);
T0* r183resize(T0* a1,T2 a2);
T0* r183twin(T183* C);
void r212print_on(T212* C,T0* a1);
void r212out_in_tagged_out_memory(T212* C);
T0* r212make(T2 a1);
T0* r212resize(T0* a1,T2 a2);
T0* r212twin(T212* C);
void r267print_on(T267* C,T0* a1);
void r267out_in_tagged_out_memory(T267* C);
T0* r267twin(T267* C);
void r319print_on(T319* C,T0* a1);
void r319out_in_tagged_out_memory(T319* C);
void r319system(T0* a1);
void r319execute(T319* C);
T0* r319twin(T319* C);
extern T0*oBC101Clean_attribute_name;
extern int fBC101Clean_attribute_name;
T0* r101Clean_attribute_name(void);
extern T0*oBC30unix_file_system;
void r101make_from_element(T101* C,T0* a1,T0* a2);
T6 r101is_cleanable(T101* C);
T0* r101attribute_value(T101* C,T0* a1,T0* a2);
extern T0*oBC101Ace_attribute_name;
extern int fBC101Ace_attribute_name;
T0* r101Ace_attribute_name(void);
extern T0*oBC101Root_class_attribute_name;
extern int fBC101Root_class_attribute_name;
T0* r101Root_class_attribute_name(void);
extern T0*oBC30file_system;
extern int fBC30file_system;
T0* r101file_system(void);
void r101print_on(T101* C,T0* a1);
T0* r101clone(T0* a1);
void r101out_in_tagged_out_memory(T101* C);
T0* r101new_ace_cmdline(T101* C);
T6 r101uc_boolean_value(T101* C,T0* a1,T0* a2);
extern T0*oBC20True_attribute_value;
extern int fBC20True_attribute_value;
T0* r101True_attribute_value(void);
T0* r101uc_attribute_value(T101* C,T0* a1,T0* a2);
extern T0*oBC101Case_insensitive_attribute_name;
extern int fBC101Case_insensitive_attribute_name;
T0* r101Case_insensitive_attribute_name(void);
T6 r101is_traditional_configuration(T101* C);
void r101print(T0* a1);
void r101_74Pmake_from_element(T101* C,T0* a1,T0* a2);
extern T0*oBC101Executable_attribute_name;
extern int fBC101Executable_attribute_name;
T0* r101Executable_attribute_name(void);
extern T0*oBC101No_style_warning_attribute_name;
extern int fBC101No_style_warning_attribute_name;
T0* r101No_style_warning_attribute_name(void);
extern T0*oBC30macos_file_system;
void r101execute(T101* C);
T6 r101has_uc_attribute(T0* a1,T0* a2);
T0* r101uc_attribute_value_or_default(T101* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC1std_output;
extern T0*oBC20False_attribute_value;
extern int fBC20False_attribute_value;
T0* r101False_attribute_value(void);
T0* r101attribute_value_or_default(T101* C,T0* a1,T0* a2,T0* a3);
T0* r101twin(T101* C);
T0* r101new_clean_cmdline(T101* C);
extern T0*oBC101Creation_procedure_attribute_name;
extern int fBC101Creation_procedure_attribute_name;
T0* r101Creation_procedure_attribute_name(void);
T0* r101new_traditional_cmdline(T101* C);
extern T0*oBC30windows_file_system;
void r101execute_shell(T0* a1);
T6 r101is_executable(T101* C);
T6 r101is_ace_configuration(T101* C);
void r88print_on(T88* C,T0* a1);
void r88out_in_tagged_out_memory(T88* C);
void r88make(T88* C,T0* a1,T0* a2);
T0* r88twin(T88* C);
void r306print_on(T306* C,T0* a1);
void r306out_in_tagged_out_memory(T306* C);
extern T0*oBC19Arguments;
extern int fBC19Arguments;
T0* r306Arguments(void);
void r306make(T306* C,T0* a1);
T0* r306message(T306* C,T0* a1);
T0* r306twin(T306* C);
T0* r306default_message(T306* C);
extern T0*oBC23STRING_;
extern T0*oBC160Output_filename_attribute_name;
extern int fBC160Output_filename_attribute_name;
T0* r160Output_filename_attribute_name(void);
void r160make_from_element(T160* C,T0* a1,T0* a2);
void r160print_on(T160* C,T0* a1);
T0* r160clone(T0* a1);
void r160out_in_tagged_out_memory(T160* C);
T6 r160uc_boolean_value(T160* C,T0* a1,T0* a2);
void r160make(T160* C,T0* a1);
T0* r160True_attribute_value(void);
extern T0*oBC160Verbose_filename_attribute_name;
extern int fBC160Verbose_filename_attribute_name;
T0* r160Verbose_filename_attribute_name(void);
T0* r160uc_attribute_value(T160* C,T0* a1,T0* a2);
void r160print(T0* a1);
void r160_74Pmake_from_element(T160* C,T0* a1,T0* a2);
void r160execute(T160* C);
T6 r160has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC160Tokens_classname_attribute_name;
extern int fBC160Tokens_classname_attribute_name;
T0* r160Tokens_classname_attribute_name(void);
void r160_75Pmake(T160* C,T0* a1);
T0* r160False_attribute_value(void);
extern T0*oBC160Separate_actions_attribute_name;
extern int fBC160Separate_actions_attribute_name;
T0* r160Separate_actions_attribute_name(void);
T0* r160twin(T160* C);
void r160execute_shell(T0* a1);
T6 r160is_executable(T160* C);
extern T0*oBC160Input_filename_attribute_name;
extern int fBC160Input_filename_attribute_name;
T0* r160Input_filename_attribute_name(void);
void r296print_on(T296* C,T0* a1);
void r296out_in_tagged_out_memory(T296* C);
void r296read_character(T296* C);
void r296make(T296* C);
T6 r296end_of_file(T296* C);
T0* r296twin(T296* C);
void r308print_on(T308* C,T0* a1);
void r308out_in_tagged_out_memory(T308* C);
void r308report_message(T308* C,T0* a1);
extern T0*oBC283std;
T0* r308message(T0* a1);
T0* r308twin(T308* C);
void r308make_standard(T308* C);
void r308report_error(T308* C,T0* a1);
extern T0*oBC144Clean_attribute_name;
extern int fBC144Clean_attribute_name;
T0* r144Clean_attribute_name(void);
extern T0*oBC144System_attribute_name;
extern int fBC144System_attribute_name;
T0* r144System_attribute_name(void);
void r144make_from_element(T144* C,T0* a1,T0* a2);
T6 r144is_cleanable(T144* C);
extern T0*oBC144Ace_attribute_name;
extern int fBC144Ace_attribute_name;
T0* r144Ace_attribute_name(void);
T0* r144file_system(void);
void r144print_on(T144* C,T0* a1);
T0* r144clone(T0* a1);
void r144out_in_tagged_out_memory(T144* C);
T6 r144uc_boolean_value(T144* C,T0* a1,T0* a2);
void r144execute_clean(T144* C);
void r144execute_compile(T144* C);
T0* r144True_attribute_value(void);
extern T0*oBC144Finalize_attribute_name;
extern int fBC144Finalize_attribute_name;
T0* r144Finalize_attribute_name(void);
T0* r144uc_attribute_value(T144* C,T0* a1,T0* a2);
void r144print(T0* a1);
void r144_74Pmake_from_element(T144* C,T0* a1,T0* a2);
T6 r144is_compilable(T144* C);
void r144execute(T144* C);
T6 r144has_uc_attribute(T0* a1,T0* a2);
T0* r144uc_attribute_value_or_default(T144* C,T0* a1,T0* a2,T0* a3);
T0* r144False_attribute_value(void);
T0* r144attribute_value_or_default(T144* C,T0* a1,T0* a2,T0* a3);
T0* r144twin(T144* C);
extern T0*oBC144Fish_attribute_name;
extern int fBC144Fish_attribute_name;
T0* r144Fish_attribute_name(void);
void r144execute_shell(T0* a1);
T6 r144is_executable(T144* C);
extern T0*oBC202Output_filename_attribute_name;
extern int fBC202Output_filename_attribute_name;
T0* r202Output_filename_attribute_name(void);
void r202make_from_element(T202* C,T0* a1,T0* a2);
extern T0*oBC202Stylesheet_filename_attribute_name;
extern int fBC202Stylesheet_filename_attribute_name;
T0* r202Stylesheet_filename_attribute_name(void);
void r202print_on(T202* C,T0* a1);
T0* r202clone(T0* a1);
void r202out_in_tagged_out_memory(T202* C);
void r202make(T202* C,T0* a1);
extern T0*oBC202Parameter_element_name;
extern int fBC202Parameter_element_name;
T0* r202Parameter_element_name(void);
T0* r202uc_attribute_value(T202* C,T0* a1,T0* a2);
extern T0*oBC202Value_attribute_name;
extern int fBC202Value_attribute_name;
T0* r202Value_attribute_name(void);
void r202print(T0* a1);
void r202_74Pmake_from_element(T202* C,T0* a1,T0* a2);
void r202execute(T202* C);
T6 r202has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC20Name_attribute_name;
extern int fBC20Name_attribute_name;
T0* r202Name_attribute_name(void);
void r202_75Pmake(T202* C,T0* a1);
T0* r202twin(T202* C);
void r202execute_shell(T0* a1);
T6 r202is_executable(T202* C);
extern T0*oBC202Input_filename_attribute_name;
extern int fBC202Input_filename_attribute_name;
T0* r202Input_filename_attribute_name(void);
void r194make_from_element(T194* C,T0* a1,T0* a2);
T0* r194attribute_value(T194* C,T0* a1,T0* a2);
T0* r194file_system(void);
void r194print_on(T194* C,T0* a1);
void r194out_in_tagged_out_memory(T194* C);
void r194print(T0* a1);
void r194_74Pmake_from_element(T194* C,T0* a1,T0* a2);
void r194execute(T194* C);
T0* r194twin(T194* C);
extern T0*oBC194Directory_attribute_name;
extern int fBC194Directory_attribute_name;
T0* r194Directory_attribute_name(void);
T6 r194is_executable(T194* C);
void r312print_on(T312* C,T0* a1);
void r312out_in_tagged_out_memory(T312* C);
T0* r312Arguments(void);
void r312make(T312* C,T0* a1);
T0* r312message(T312* C,T0* a1);
T0* r312twin(T312* C);
T0* r312default_message(T312* C);
void r198make_from_element(T198* C,T0* a1,T0* a2);
T0* r198attribute_value(T198* C,T0* a1,T0* a2);
T0* r198file_system(void);
void r198print_on(T198* C,T0* a1);
T0* r198clone(T0* a1);
void r198out_in_tagged_out_memory(T198* C);
T6 r198is_to_file_executable(T198* C);
extern T0*oBC198To_directory_attribute_name;
extern int fBC198To_directory_attribute_name;
T0* r198To_directory_attribute_name(void);
extern T0*oBC198To_file_attribute_name;
extern int fBC198To_file_attribute_name;
T0* r198To_file_attribute_name(void);
void r198print(T0* a1);
void r198_74Pmake_from_element(T198* C,T0* a1,T0* a2);
void r198execute(T198* C);
T6 r198is_to_directory_executable(T198* C);
T0* r198twin(T198* C);
extern T0*oBC198File_attribute_name;
extern int fBC198File_attribute_name;
T0* r198File_attribute_name(void);
T6 r198is_executable(T198* C);
void r97delete_directory(T97* C,T0* a1);
T0* r97current_working_directory(T97* C);
void r97cd(T97* C,T0* a1);
T0* r97pwd(T97* C);
extern T0*oBC95std_fr1;
T6 r97is_directory_readable(T97* C,T0* a1);
void r97print_on(T97* C,T0* a1);
T0* r97clone(T0* a1);
void r97delete_file(T97* C,T0* a1);
void r97create_directory(T97* C,T0* a1);
void r97out_in_tagged_out_memory(T97* C);
void r97set_current_working_directory(T97* C,T0* a1);
T6 r97is_file_readable(T0* a1);
void r97copy_file(T0* a1,T0* a2);
void r97delete(T97* C,T0* a1);
T0* r97twin(T97* C);
T6 r97is_readable(T0* a1);
void r98delete_directory(T98* C,T0* a1);
T0* r98current_working_directory(T98* C);
void r98cd(T98* C,T0* a1);
T0* r98pwd(T98* C);
T6 r98is_directory_readable(T98* C,T0* a1);
void r98print_on(T98* C,T0* a1);
T0* r98clone(T0* a1);
void r98delete_file(T98* C,T0* a1);
void r98create_directory(T98* C,T0* a1);
void r98out_in_tagged_out_memory(T98* C);
void r98set_current_working_directory(T98* C,T0* a1);
T6 r98is_file_readable(T0* a1);
void r98copy_file(T0* a1,T0* a2);
void r98delete(T98* C,T0* a1);
T0* r98twin(T98* C);
T6 r98is_readable(T0* a1);
void r190make_from_element(T190* C,T0* a1,T0* a2);
extern T0*oBC190Start_target_attribute_name;
extern int fBC190Start_target_attribute_name;
T0* r190Start_target_attribute_name(void);
extern T0*oBC190Reuse_variables_attribute_name;
extern int fBC190Reuse_variables_attribute_name;
T0* r190Reuse_variables_attribute_name(void);
T0* r190attribute_value(T190* C,T0* a1,T0* a2);
T6 r190is_filename_executable(T190* C);
void r190print_on(T190* C,T0* a1);
void r190out_in_tagged_out_memory(T190* C);
extern T0*oBC18Exceptions;
T6 r190uc_boolean_value(T190* C,T0* a1,T0* a2);
T6 r190is_target_executable(T190* C);
T0* r190True_attribute_value(void);
T0* r190uc_attribute_value(T190* C,T0* a1,T0* a2);
void r190print(T0* a1);
void r190_74Pmake_from_element(T190* C,T0* a1,T0* a2);
extern T0*oBC190Filename_attribute_name;
extern int fBC190Filename_attribute_name;
T0* r190Filename_attribute_name(void);
void r190execute(T190* C);
T6 r190has_uc_attribute(T0* a1,T0* a2);
T0* r190False_attribute_value(void);
T0* r190twin(T190* C);
T6 r190is_executable(T190* C);
void r148make_from_element(T148* C,T0* a1,T0* a2);
T0* r148attribute_value(T148* C,T0* a1,T0* a2);
void r148print_on(T148* C,T0* a1);
void r148out_in_tagged_out_memory(T148* C);
void r148print(T0* a1);
void r148_74Pmake_from_element(T148* C,T0* a1,T0* a2);
extern T0*oBC148Executable_attribute_name;
extern int fBC148Executable_attribute_name;
T0* r148Executable_attribute_name(void);
void r148execute(T148* C);
T0* r148twin(T148* C);
void r148execute_shell(T0* a1);
T6 r148is_executable(T148* C);
void r99delete_directory(T99* C,T0* a1);
T0* r99current_working_directory(T99* C);
void r99cd(T99* C,T0* a1);
T0* r99pwd(T99* C);
T6 r99is_directory_readable(T99* C,T0* a1);
void r99print_on(T99* C,T0* a1);
T0* r99clone(T0* a1);
void r99delete_file(T99* C,T0* a1);
void r99create_directory(T99* C,T0* a1);
void r99out_in_tagged_out_memory(T99* C);
void r99set_current_working_directory(T99* C,T0* a1);
T6 r99is_file_readable(T0* a1);
void r99copy_file(T0* a1,T0* a2);
void r99delete(T99* C,T0* a1);
T0* r99twin(T99* C);
T6 r99is_readable(T0* a1);
void r188make_from_element(T188* C,T0* a1,T0* a2);
void r188print_on(T188* C,T0* a1);
T0* r188clone(T0* a1);
extern T0*oBC188Config_filename_attribute_name;
extern int fBC188Config_filename_attribute_name;
T0* r188Config_filename_attribute_name(void);
void r188out_in_tagged_out_memory(T188* C);
T0* r188uc_attribute_value(T188* C,T0* a1,T0* a2);
void r188print(T0* a1);
void r188_74Pmake_from_element(T188* C,T0* a1,T0* a2);
void r188execute(T188* C);
T6 r188has_uc_attribute(T0* a1,T0* a2);
T0* r188twin(T188* C);
void r188execute_shell(T0* a1);
T6 r188is_executable(T188* C);
T0* r76attribute_value_by_name(T76* C,T0* a1);
void r76add_attributes(T76* C,T0* a1);
void r76print_on(T76* C,T0* a1);
void r76add_attribute(T76* C,T0* a1);
void r76out_in_tagged_out_memory(T76* C);
void r76make(T76* C,T0* a1);
T0* r76children_by_name(T76* C,T0* a1);
void r76make_attribute_handler(T76* C);
extern T0*oBC20Empty_string;
extern int fBC20Empty_string;
T0* r76Empty_string(void);
T0* r76twin(T76* C);
void r76make_composite(T76* C);
T6 r76has_attribute(T76* C,T0* a1);
T6 r326is_closed(T326* C);
void r326open_read(T326* C);
T0* r326file_system(void);
void r326print_on(T326* C,T0* a1);
T0* r326clone(T0* a1);
void r326out_in_tagged_out_memory(T326* C);
T0* r326last_entry(T326* C);
T6 r326is_open_read(T326* C);
void r326close(T326* C);
T6 r326end_of_input(T326* C);
void r326delete(T326* C);
T0* r326twin(T326* C);
void r326recursive_delete(T326* C);
T2 r360new_capacity(T2 a1);
void r360copy(T360* C,T0* a1);
T6 r360extendible(T360* C,T2 a1);
void r360remove_traversing_cursor(T360* C,T0* a1);
void r360move_all_cursors_after(T360* C);
void r360add_traversing_cursor(T360* C,T0* a1);
void r360print_on(T360* C,T0* a1);
T0* r360clone(T0* a1);
void r360out_in_tagged_out_memory(T360* C);
T6 r360cursor_before(T0* a1);
void r360ds_arrayed_list_make(T360* C,T2 a1);
T6 r360cursor_after(T0* a1);
void r360resize(T360* C,T2 a1);
void r360make_from_bilinear(T360* C,T0* a1);
T0* r360twin(T360* C);
void r360force_last(T360* C,T0* a1);
T0* r360new_cursor(T360* C);
void r360put_last(T360* C,T0* a1);
T6 r360cursor_off(T0* a1);
void r200make_from_element(T200* C,T0* a1,T0* a2);
void r200print_on(T200* C,T0* a1);
void r200out_in_tagged_out_memory(T200* C);
extern T0*oBC22Execution_environment;
T0* r200uc_attribute_value(T200* C,T0* a1,T0* a2);
extern T0*oBC200Value_attribute_name;
extern int fBC200Value_attribute_name;
T0* r200Value_attribute_name(void);
void r200print(T0* a1);
void r200_74Pmake_from_element(T200* C,T0* a1,T0* a2);
void r200execute(T200* C);
T0* r200Name_attribute_name(void);
T6 r200has_uc_attribute(T0* a1,T0* a2);
T0* r200twin(T200* C);
T6 r200is_executable(T200* C);
void r305disconnect(T305* C);
void r305print_on(T305* C,T0* a1);
void r305out_in_tagged_out_memory(T305* C);
void r305read_character(T305* C);
T6 r305end_of_input(T305* C);
void r305connect_to(T305* C,T0* a1);
T3 r305last_character(T305* C);
T0* r305twin(T305* C);
extern T0*oBC142Clean_attribute_name;
extern int fBC142Clean_attribute_name;
T0* r142Clean_attribute_name(void);
extern T0*oBC142System_attribute_name;
extern int fBC142System_attribute_name;
T0* r142System_attribute_name(void);
extern T0*oBC142Finish_freezing_attribute_name;
extern int fBC142Finish_freezing_attribute_name;
T0* r142Finish_freezing_attribute_name(void);
void r142make_from_element(T142* C,T0* a1,T0* a2);
T6 r142is_cleanable(T142* C);
extern T0*oBC142Ace_attribute_name;
extern int fBC142Ace_attribute_name;
T0* r142Ace_attribute_name(void);
T0* r142file_system(void);
void r142print_on(T142* C,T0* a1);
T0* r142clone(T0* a1);
void r142out_in_tagged_out_memory(T142* C);
T6 r142uc_boolean_value(T142* C,T0* a1,T0* a2);
void r142execute_clean(T142* C);
void r142execute_compile(T142* C);
T0* r142True_attribute_value(void);
extern T0*oBC142Finalize_attribute_name;
extern int fBC142Finalize_attribute_name;
T0* r142Finalize_attribute_name(void);
T0* r142uc_attribute_value(T142* C,T0* a1,T0* a2);
void r142print(T0* a1);
void r142_74Pmake_from_element(T142* C,T0* a1,T0* a2);
T6 r142is_compilable(T142* C);
void r142execute(T142* C);
T6 r142has_uc_attribute(T0* a1,T0* a2);
T0* r142uc_attribute_value_or_default(T142* C,T0* a1,T0* a2,T0* a3);
T0* r142False_attribute_value(void);
T0* r142attribute_value_or_default(T142* C,T0* a1,T0* a2,T0* a3);
T0* r142twin(T142* C);
void r142execute_shell(T0* a1);
T6 r142is_executable(T142* C);
void r196make_from_element(T196* C,T0* a1,T0* a2);
T6 r196is_directory_executable(T196* C);
T0* r196attribute_value(T196* C,T0* a1,T0* a2);
T0* r196file_system(void);
void r196print_on(T196* C,T0* a1);
void r196out_in_tagged_out_memory(T196* C);
T6 r196is_file_executable(T196* C);
void r196print(T0* a1);
void r196_74Pmake_from_element(T196* C,T0* a1,T0* a2);
void r196execute(T196* C);
T0* r196twin(T196* C);
extern T0*oBC196File_attribute_name;
extern int fBC196File_attribute_name;
T0* r196File_attribute_name(void);
extern T0*oBC196Directory_attribute_name;
extern int fBC196Directory_attribute_name;
T0* r196Directory_attribute_name(void);
T6 r196is_executable(T196* C);
extern T0*oBC83utils;
T2 r83item_code(T83* C,T2 a1);
void r83print_on(T83* C,T0* a1);
void r83out_in_tagged_out_memory(T83* C);
void r83make(T83* C);
void r83insert(T83* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r83add_to_storage_count(T83* C,T2 a1);
void r83remove(T83* C,T2 a1,T2 a2);
void r83find_slice_position(T83* C,T2 a1,T2 a2);
void r83insert_code(T83* C,T2 a1,T2 a2);
extern T6 oBC83optimize_access;
void r83storage_move(T83* C,T2 a1,T2 a2,T2 a3);
T0* r83twin(T83* C);
T2 r83storage_slice_count(T83* C);
void r83find_position(T83* C,T2 a1);
T0* r82create_representation(T82* C);
void r82print_on(T82* C,T0* a1);
void r82out_in_tagged_out_memory(T82* C);
T0* r82twin(T82* C);
void r152make_from_element(T152* C,T0* a1,T0* a2);
void r152print_on(T152* C,T0* a1);
void r152out_in_tagged_out_memory(T152* C);
T0* r152uc_attribute_value(T152* C,T0* a1,T0* a2);
extern T0*oBC152Value_attribute_name;
extern int fBC152Value_attribute_name;
T0* r152Value_attribute_name(void);
void r152_74Pmake_from_element(T152* C,T0* a1,T0* a2);
T0* r152Name_attribute_name(void);
T6 r152has_uc_attribute(T0* a1,T0* a2);
T0* r152twin(T152* C);
T6 r152is_executable(T152* C);
void r150make_from_element(T150* C,T0* a1,T0* a2);
void r150print_on(T150* C,T0* a1);
T0* r150clone(T0* a1);
void r150out_in_tagged_out_memory(T150* C);
T0* r150uc_attribute_value(T150* C,T0* a1,T0* a2);
void r150print(T0* a1);
void r150_74Pmake_from_element(T150* C,T0* a1,T0* a2);
extern T0*oBC150Executable_attribute_name;
extern int fBC150Executable_attribute_name;
T0* r150Executable_attribute_name(void);
void r150execute(T150* C);
T6 r150has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC150Source_filename_attribute_name;
extern int fBC150Source_filename_attribute_name;
T0* r150Source_filename_attribute_name(void);
T0* r150twin(T150* C);
void r150execute_shell(T0* a1);
T6 r150is_executable(T150* C);
void r29calculate_depend_order(T29* C,T0* a1);
void r29build(T29* C);
extern T0*oBC29Parser_factory;
extern int fBC29Parser_factory;
T0* r29Parser_factory(void);
void r29build_target(T29* C,T0* a1);
T0* r29file_system(void);
void r29print_on(T29* C,T0* a1);
extern T0*oBC20Target_element_name;
extern int fBC20Target_element_name;
T0* r29Target_element_name(void);
void r29load(T29* C,T0* a1);
void r29out_in_tagged_out_memory(T29* C);
extern T0*oBC20Description_element_name;
extern int fBC20Description_element_name;
T0* r29Description_element_name(void);
extern T0*oBC20Default_attribute_name;
extern int fBC20Default_attribute_name;
T0* r29Default_attribute_name(void);
T0* r29target_with_name(T29* C,T0* a1);
void r29print(T0* a1);
void r29make_with_filename(T29* C,T0* a1,T0* a2);
void r29execute_target(T29* C,T0* a1,T6 a2);
void r29reset(T29* C);
T0* r29twin(T29* C);
extern T0*oBC20Default_build_filename;
extern int fBC20Default_build_filename;
T0* r29Default_build_filename(void);
T0* r26out(T26* C);
void r26copy(T26* C,T0* a1);
T0* r26substring(T26* C,T2 a1,T2 a2);
T2 r26count(T26* C);
T2 r26item_code(T26* C,T2 a1);
T6 r26is_whitespace(T2 a1);
void r26remove_between(T26* C,T2 a1,T2 a2);
T6 r26is_equal(T26* C,T0* a1);
T56 r26item(T26* C,T2 a1);
void r26print_on(T26* C,T0* a1);
void r26make_from_string(T26* C,T0* a1);
T2 r26index_of(T26* C,T56 a1,T2 a2);
void r26out_in_tagged_out_memory(T26* C);
void r26make(T26* C,T2 a1);
void r26append_string(T26* C,T0* a1);
void r26head(T26* C,T2 a1);
void r26append_ucc_code(T26* C,T2 a1);
void r26right_adjust(T26* C);
T6 r26empty(T26* C);
T0* r26twin(T26* C);
T2 r26three_way_comparison(T26* C,T0* a1);
void r26left_adjust(T26* C);
extern T0*oBC26i_settings;
void r26tail(T26* C,T2 a1);
extern T0*oBC162Output_filename_attribute_name;
extern int fBC162Output_filename_attribute_name;
T0* r162Output_filename_attribute_name(void);
void r162make_from_element(T162* C,T0* a1,T0* a2);
void r162print_on(T162* C,T0* a1);
T0* r162clone(T0* a1);
extern T0*oBC162Define_element_name;
extern int fBC162Define_element_name;
T0* r162Define_element_name(void);
void r162out_in_tagged_out_memory(T162* C);
void r162make(T162* C,T0* a1);
T0* r162uc_attribute_value(T162* C,T0* a1,T0* a2);
void r162print(T0* a1);
void r162_74Pmake_from_element(T162* C,T0* a1,T0* a2);
void r162execute(T162* C);
T6 r162has_uc_attribute(T0* a1,T0* a2);
T0* r162Name_attribute_name(void);
void r162_75Pmake(T162* C,T0* a1);
T0* r162twin(T162* C);
void r162execute_shell(T0* a1);
T6 r162is_executable(T162* C);
extern T0*oBC162Input_filename_attribute_name;
extern int fBC162Input_filename_attribute_name;
T0* r162Input_filename_attribute_name(void);
void r354print_on(T354* C,T0* a1);
void r354out_in_tagged_out_memory(T354* C);
T0* r354twin(T354* C);
void r302fill(T302* C);
void r302compact_left(T302* C);
T2 r302count(T302* C);
void r302set_position(T302* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC303lower;
extern int fBC303lower;
T2 r302lower(void);
void r302print_on(T302* C,T0* a1);
void r302out_in_tagged_out_memory(T302* C);
extern T0*oBC248STRING_BUFFER_;
void r302resize(T302* C);
void r302make_with_size(T302* C,T0* a1,T2 a2);
T0* r302twin(T302* C);
void r302set_file(T302* C,T0* a1);
extern T0*oBC249INPUT_STREAM_;
void r302flush(T302* C);
void r313print_on(T313* C,T0* a1);
void r313out_in_tagged_out_memory(T313* C);
void r313make(T313* C);
T0* r313twin(T313* C);
void r313put_string(T313* C,T0* a1);
void r317print_on(T317* C,T0* a1);
void r317out_in_tagged_out_memory(T317* C);
void r317make(T317* C);
T0* r317twin(T317* C);
void r317put_string(T317* C,T0* a1);
extern T0*oBC20Echo_task_name;
extern int fBC20Echo_task_name;
T0* r43Echo_task_name(void);
extern T0*oBC43Dir_attribute_name;
extern int fBC43Dir_attribute_name;
T0* r43Dir_attribute_name(void);
extern T0*oBC20Delete_task_name;
extern int fBC20Delete_task_name;
T0* r43Delete_task_name(void);
T0* r43dependencies(T43* C);
extern T0*oBC20Set_task_name;
extern int fBC20Set_task_name;
T0* r43Set_task_name(void);
extern T0*oBC20Ise_task_name;
extern int fBC20Ise_task_name;
T0* r43Ise_task_name(void);
extern T0*oBC20Exec_task_name;
extern int fBC20Exec_task_name;
T0* r43Exec_task_name(void);
extern T0*oBC43Unless_attribute_name;
extern int fBC43Unless_attribute_name;
T0* r43Unless_attribute_name(void);
T0* r43dependent_targets(T43* C);
extern T0*oBC43If_attribute_name;
extern int fBC43If_attribute_name;
T0* r43If_attribute_name(void);
extern T0*oBC20Mkdir_task_name;
extern int fBC20Mkdir_task_name;
T0* r43Mkdir_task_name(void);
T0* r43file_system(void);
extern T0*oBC20Setenv_task_name;
extern int fBC20Setenv_task_name;
T0* r43Setenv_task_name(void);
T6 r43has_dependencies(T43* C);
void r43print_on(T43* C,T0* a1);
extern T0*oBC43Depend_attribute_name;
extern int fBC43Depend_attribute_name;
T0* r43Depend_attribute_name(void);
T0* r43clone(T0* a1);
extern T0*oBC20Geant_task_name;
extern int fBC20Geant_task_name;
T0* r43Geant_task_name(void);
void r43out_in_tagged_out_memory(T43* C);
T0* r43Description_element_name(void);
extern T0*oBC20Hact_task_name;
extern int fBC20Hact_task_name;
T0* r43Hact_task_name(void);
extern T0*oBC20Gedoc_task_name;
extern int fBC20Gedoc_task_name;
T0* r43Gedoc_task_name(void);
void r43make(T43* C,T0* a1,T0* a2);
extern T0*oBC20Gexace_task_name;
extern int fBC20Gexace_task_name;
T0* r43Gexace_task_name(void);
T6 r43boolean_condition_value(T43* C,T0* a1);
extern T0*oBC20Gelex_task_name;
extern int fBC20Gelex_task_name;
T0* r43Gelex_task_name(void);
extern T0*oBC20Unset_task_name;
extern int fBC20Unset_task_name;
T0* r43Unset_task_name(void);
extern T0*oBC20Se_task_name;
extern int fBC20Se_task_name;
T0* r43Se_task_name(void);
void r43print(T0* a1);
T0* r43string_tokens(T0* a1,T3 a2);
extern T0*oBC20Getest_task_name;
extern int fBC20Getest_task_name;
T0* r43Getest_task_name(void);
void r43show_dependent_targets(T0* a1);
extern T0*oBC20Copy_task_name;
extern int fBC20Copy_task_name;
T0* r43Copy_task_name(void);
void r43execute(T43* C);
T0* r43Name_attribute_name(void);
extern T0*oBC20Lcc_task_name;
extern int fBC20Lcc_task_name;
T0* r43Lcc_task_name(void);
extern T0*oBC20Gepp_task_name;
extern int fBC20Gepp_task_name;
T0* r43Gepp_task_name(void);
T0* r43twin(T43* C);
extern T0*oBC20Geyacc_task_name;
extern int fBC20Geyacc_task_name;
T0* r43Geyacc_task_name(void);
extern T0*oBC20Ve_task_name;
extern int fBC20Ve_task_name;
T0* r43Ve_task_name(void);
extern T0*oBC146Clean_attribute_name;
extern int fBC146Clean_attribute_name;
T0* r146Clean_attribute_name(void);
void r146make_from_element(T146* C,T0* a1,T0* a2);
T6 r146is_cleanable(T146* C);
T0* r146file_system(void);
void r146print_on(T146* C,T0* a1);
T0* r146clone(T0* a1);
extern T0*oBC146Esd_attribute_name;
extern int fBC146Esd_attribute_name;
T0* r146Esd_attribute_name(void);
void r146out_in_tagged_out_memory(T146* C);
T6 r146uc_boolean_value(T146* C,T0* a1,T0* a2);
void r146execute_clean(T146* C);
T0* r146True_attribute_value(void);
T0* r146uc_attribute_value(T146* C,T0* a1,T0* a2);
void r146print(T0* a1);
void r146_74Pmake_from_element(T146* C,T0* a1,T0* a2);
T6 r146is_compilable(T146* C);
void r146execute(T146* C);
T6 r146has_uc_attribute(T0* a1,T0* a2);
T0* r146uc_attribute_value_or_default(T146* C,T0* a1,T0* a2,T0* a3);
T0* r146False_attribute_value(void);
extern T0*oBC146Recursive_attribute_name;
extern int fBC146Recursive_attribute_name;
T0* r146Recursive_attribute_name(void);
T0* r146attribute_value_or_default(T146* C,T0* a1,T0* a2,T0* a3);
T0* r146twin(T146* C);
void r146execute_shell(T0* a1);
T6 r146is_executable(T146* C);
void r84print_on(T84* C,T0* a1);
void r84out_in_tagged_out_memory(T84* C);
void r84make(T84* C);
void r84insert(T84* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r84remove(T84* C,T2 a1,T2 a2);
void r84insert_code(T84* C,T2 a1,T2 a2);
void r84move(T84* C,T2 a1,T2 a2,T2 a3);
void r84storage_ensure_capacity(T84* C,T2 a1);
T0* r84twin(T84* C);
void r192make_from_element(T192* C,T0* a1,T0* a2);
T0* r192attribute_value(T192* C,T0* a1,T0* a2);
void r192print_on(T192* C,T0* a1);
void r192out_in_tagged_out_memory(T192* C);
void r192print(T0* a1);
extern T0*oBC192Message_attribute_name;
extern int fBC192Message_attribute_name;
T0* r192Message_attribute_name(void);
void r192_74Pmake_from_element(T192* C,T0* a1,T0* a2);
T0* r192twin(T192* C);
void r274yy_do_action(T274* C,T2 a1);
extern T0*oBC275yytable_template;
extern int fBC275yytable_template;
T0* r274yytable_template(void);
T0* r274empty_ucstring(void);
void r274make_parser_skeleton(T274* C);
T2 r274yy_at_beginning_of_line(T274* C);
void r274fatal_error(T0* a1);
T0* r274yytype1(T0* a1);
T0* r274yytype2(T0* a1);
T0* r274yytype3(T0* a1);
T0* r274yytype4(T0* a1);
void r274handle_found_text(T274* C);
void r274parse(T274* C);
void r274set_input_buffer(T274* C,T0* a1);
T2 r274yy_translate(T274* C,T2 a1);
extern T0*oBC276yy_ec_template;
extern int fBC276yy_ec_template;
T0* r274yy_ec_template(void);
void r274yy_execute_action(T274* C,T2 a1);
extern T0*oBC275yytranslate_template;
extern int fBC275yytranslate_template;
T0* r274yytranslate_template(void);
void r274clear_stacks(T274* C);
extern T0*oBC276yy_def_template;
extern int fBC276yy_def_template;
T0* r274yy_def_template(void);
T3 r274text_item(T274* C,T2 a1);
void r274yy_load_input_buffer(T274* C);
extern T56 oBC275uc_collon;
extern int fBC275uc_collon;
T56 r274uc_collon(void);
extern T0*oBC275yyr1_template;
extern int fBC275yyr1_template;
T0* r274yyr1_template(void);
void r274make_with_buffer(T274* C,T0* a1);
T2 r274yy_null_trans_state(T274* C,T2 a1);
extern T0*oBC276yy_accept_template;
extern int fBC276yy_accept_template;
T0* r274yy_accept_template(void);
void r274read_token(T274* C);
extern T0*oBC275yyr2_template;
extern int fBC275yyr2_template;
T0* r274yyr2_template(void);
T2 r274yy_previous_state(T274* C);
extern T0*oBC275yypgoto_template;
extern int fBC275yypgoto_template;
T0* r274yypgoto_template(void);
void r274yy_refill_input_buffer(T274* C);
T0* r274yy_fixed_array(T0* a1);
extern T0*oBC276yy_meta_template;
extern int fBC276yy_meta_template;
T0* r274yy_meta_template(void);
extern T0*oBC276yy_base_template;
extern int fBC276yy_base_template;
T0* r274yy_base_template(void);
T0* r274twin(T274* C);
T0* r274clone(T0* a1);
T0* r274new_file_buffer(T0* a1);
void r274yy_initialize(T274* C);
void r274parse_from_file_name(T274* C,T0* a1);
T0* r274text(T274* C);
void r274out_in_tagged_out_memory(T274* C);
extern T0*oBC276yy_nxt_template;
extern int fBC276yy_nxt_template;
T0* r274yy_nxt_template(void);
void r274parse_from_stream(T274* C,T0* a1);
void r274yy_set_line_column(T274* C);
void r274yy_build_parser_tables(T274* C);
T0* r274split_name_and_prefix(T0* a1);
void r274report_error(T274* C,T0* a1);
extern T0*oBC275yydefact_template;
extern int fBC275yydefact_template;
T0* r274yydefact_template(void);
extern T0*oBC276yy_chk_template;
extern int fBC276yy_chk_template;
T0* r274yy_chk_template(void);
extern T0*oBC275yycheck_template;
extern int fBC275yycheck_template;
T0* r274yycheck_template(void);
void r274make(T274* C);
T0* r274yyfixed_array(T0* a1);
void r274yy_clear_all(T274* C);
extern T0*oBC275yydefgoto_template;
extern int fBC275yydefgoto_template;
T0* r274yydefgoto_template(void);
void r274yy_set_content(T274* C,T0* a1);
extern T0*oBC275yypact_template;
extern int fBC275yypact_template;
T0* r274yypact_template(void);
void r274set_start_condition(T274* C,T2 a1);
void r274yy_build_tables(T274* C);
void r274print_on(T274* C,T0* a1);
extern T0*oBC158Meta_ecs_attribute_name;
extern int fBC158Meta_ecs_attribute_name;
T0* r158Meta_ecs_attribute_name(void);
extern T0*oBC158Output_filename_attribute_name;
extern int fBC158Output_filename_attribute_name;
T0* r158Output_filename_attribute_name(void);
extern T0*oBC158Size_attribute_name;
extern int fBC158Size_attribute_name;
T0* r158Size_attribute_name(void);
void r158make_from_element(T158* C,T0* a1,T0* a2);
extern T0*oBC158Ecs_attribute_name;
extern int fBC158Ecs_attribute_name;
T0* r158Ecs_attribute_name(void);
void r158print_on(T158* C,T0* a1);
T0* r158clone(T0* a1);
void r158out_in_tagged_out_memory(T158* C);
T6 r158uc_boolean_value(T158* C,T0* a1,T0* a2);
void r158make(T158* C,T0* a1);
T0* r158True_attribute_value(void);
T0* r158uc_attribute_value(T158* C,T0* a1,T0* a2);
extern T0*oBC158Case_insensitive_attribute_name;
extern int fBC158Case_insensitive_attribute_name;
T0* r158Case_insensitive_attribute_name(void);
extern T0*oBC158No_default_attribute_name;
extern int fBC158No_default_attribute_name;
T0* r158No_default_attribute_name(void);
void r158print(T0* a1);
extern T0*oBC158Backup_attribute_name;
extern int fBC158Backup_attribute_name;
T0* r158Backup_attribute_name(void);
void r158_74Pmake_from_element(T158* C,T0* a1,T0* a2);
extern T0*oBC158No_warn_attribute_name;
extern int fBC158No_warn_attribute_name;
T0* r158No_warn_attribute_name(void);
void r158execute(T158* C);
T6 r158has_uc_attribute(T0* a1,T0* a2);
void r158_75Pmake(T158* C,T0* a1);
T0* r158False_attribute_value(void);
extern T0*oBC158Separate_actions_attribute_name;
extern int fBC158Separate_actions_attribute_name;
T0* r158Separate_actions_attribute_name(void);
T0* r158twin(T158* C);
void r158execute_shell(T0* a1);
T6 r158is_executable(T158* C);
extern T0*oBC158Input_filename_attribute_name;
extern int fBC158Input_filename_attribute_name;
T0* r158Input_filename_attribute_name(void);
extern T0*oBC158Full_attribute_name;
extern int fBC158Full_attribute_name;
T0* r158Full_attribute_name(void);
extern T0*oBC244stack;
extern int fBC244stack;
T0* r244stack(void);
void r244on_content(T0* a1);
void r244print_on(T244* C,T0* a1);
T0* r244clone(T0* a1);
void r244out_in_tagged_out_memory(T244* C);
void r244on_start_tag(T244* C,T0* a1,T0* a2,T0* a3);
void r244make_from_implementation(T244* C,T0* a1);
T0* r244twin(T244* C);
void r49print_on(T49* C,T0* a1);
void r49out_in_tagged_out_memory(T49* C);
T0* r49twin(T49* C);
void r49put_character(T49* C,T3 a1);
void r49put_string(T49* C,T0* a1);
T0* r103expanded_variable_value(T103* C,T0* a1);
T0* r103variable_value(T103* C,T0* a1);
void r103print_on(T103* C,T0* a1);
T0* r103clone(T0* a1);
void r103out_in_tagged_out_memory(T103* C);
void r103make(T103* C);
extern T0*oBC21Commandline_variables;
extern int fBC21Commandline_variables;
T0* r103Commandline_variables(void);
T0* r103interpreted_string(T103* C,T0* a1);
T0* r103twin(T103* C);
T6 r103has_variable(T103* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r310command_arguments(void);
void r310print_on(T310* C,T0* a1);
void r310out_in_tagged_out_memory(T310* C);
T0* r310twin(T310* C);
T0* r310argument(T2 a1);
void r266print_on(T266* C,T0* a1);
void r266out_in_tagged_out_memory(T266* C);
void r266make(T266* C);
T0* r266new_eiffel_event_parser_imp(T266* C);
T0* r266twin(T266* C);
void r156make_from_element(T156* C,T0* a1,T0* a2);
extern T0*oBC156Xace_filename_attribute_name;
extern int fBC156Xace_filename_attribute_name;
T0* r156Xace_filename_attribute_name(void);
extern T0*oBC156Command_attribute_name;
extern int fBC156Command_attribute_name;
T0* r156Command_attribute_name(void);
void r156print_on(T156* C,T0* a1);
T0* r156clone(T0* a1);
extern T0*oBC156Compile_attribute_name;
extern int fBC156Compile_attribute_name;
T0* r156Compile_attribute_name(void);
extern T0*oBC156Options_attribute_name;
extern int fBC156Options_attribute_name;
T0* r156Options_attribute_name(void);
void r156out_in_tagged_out_memory(T156* C);
T6 r156uc_boolean_value(T156* C,T0* a1,T0* a2);
void r156make(T156* C,T0* a1);
T0* r156True_attribute_value(void);
T0* r156uc_attribute_value(T156* C,T0* a1,T0* a2);
void r156print(T0* a1);
void r156_74Pmake_from_element(T156* C,T0* a1,T0* a2);
void r156execute(T156* C);
T6 r156has_uc_attribute(T0* a1,T0* a2);
T0* r156uc_attribute_value_or_default(T156* C,T0* a1,T0* a2,T0* a3);
void r156_75Pmake(T156* C,T0* a1);
extern T0*oBC156Command_options_attribute_name;
extern int fBC156Command_options_attribute_name;
T0* r156Command_options_attribute_name(void);
T0* r156False_attribute_value(void);
T0* r156attribute_value_or_default(T156* C,T0* a1,T0* a2,T0* a3);
T0* r156twin(T156* C);
T6 r156uc_boolean_value_or_default(T156* C,T0* a1,T0* a2,T6 a3);
void r156execute_shell(T0* a1);
T6 r156is_executable(T156* C);
void r154make_from_element(T154* C,T0* a1,T0* a2);
void r154print_on(T154* C,T0* a1);
void r154out_in_tagged_out_memory(T154* C);
T0* r154uc_attribute_value(T154* C,T0* a1,T0* a2);
void r154_74Pmake_from_element(T154* C,T0* a1,T0* a2);
T6 r154has_uc_attribute(T0* a1,T0* a2);
T0* r154Name_attribute_name(void);
T0* r154twin(T154* C);
T6 r154is_executable(T154* C);
T6 r324is_closed(T324* C);
void r324open_read(T324* C);
void r324print_on(T324* C,T0* a1);
void r324do_close(T324* C);
void r324out_in_tagged_out_memory(T324* C);
void r324read_character(T324* C);
void r324close(T324* C);
void r324make(T324* C,T0* a1);
T8 r324bfr_open(T8 a1);
void r324connect_to(T324* C,T0* a1);
void r324read_string(T324* C,T2 a1);
T6 r324end_of_file(T324* C);
T0* r324twin(T324* C);
T6 r321is_closed(T321* C);
void r321print_on(T321* C,T0* a1);
void r321do_close(T321* C);
void r321out_in_tagged_out_memory(T321* C);
void r321close(T321* C);
void r321make(T321* C,T0* a1);
T8 r321bfw_open(T8 a1);
T0* r321twin(T321* C);
void r321open_write(T321* C);
void r321put_string(T321* C,T0* a1);
void r17read_command_line(T17* C);
void r17print_on(T17* C,T0* a1);
T0* r17clone(T0* a1);
void r17out_in_tagged_out_memory(T17* C);
void r17report_usage_message(T17* C);
T0* r17Arguments(void);
T0* r17Commandline_variables(void);
void r17make(T17* C);
void r17print(T0* a1);
void r17report_version_number(T17* C);
T0* r17twin(T17* C);
extern T0*oBC17Usage_message;
extern int fBC17Usage_message;
T0* r17Usage_message(void);
void r17report_usage_error(T17* C);
extern T0*oBC295error;
extern int fBC295error;
T0* r295error(void);
void r295print_on(T295* C,T0* a1);
void r295out_in_tagged_out_memory(T295* C);
extern T0*oBC295input;
extern int fBC295input;
T0* r295input(void);
extern T0*oBC295output;
extern int fBC295output;
T0* r295output(void);
T0* r295twin(T295* C);
void r61print_on(T61* C,T0* a1);
void r61out_in_tagged_out_memory(T61* C);
T0* r61twin(T61* C);
void r45raise(T45* C,T0* a1);
void r45print_on(T45* C,T0* a1);
void r45out_in_tagged_out_memory(T45* C);
T0* r45twin(T45* C);
extern T0*oBC46developer_exception_name_memory;
void r46raise(T46* C,T0* a1);
void r46print_on(T46* C,T0* a1);
void r46out_in_tagged_out_memory(T46* C);
T0* r46twin(T46* C);
void r47print_on(T47* C,T0* a1);
T0* r47twin(T47* C);
void r54print_on(T54* C,T0* a1);
void r54out_in_tagged_out_memory(T54* C);
T0* r54twin(T54* C);
void r62print_on(T62* C,T0* a1);
void r62out_in_tagged_out_memory(T62* C);
T0* r62to_hexadecimal(T2 a1,T6 a2);
T3 r62to_character(T2 a1);
T0* r62twin(T62* C);
void r62append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC80factory;
extern int fBC80factory;
T0* r80factory(void);
void r80print_on(T80* C,T0* a1);
void r80out_in_tagged_out_memory(T80* C);
T0* r80twin(T80* C);
void r373print_on(T373* C,T0* a1);
void r373out_in_tagged_out_memory(T373* C);
T0* r373twin(T373* C);
void r44print_on(T44* C,T0* a1);
T0* r44twin(T44* C);
void r272print_on(T272* C,T0* a1);
void r272out_in_tagged_out_memory(T272* C);
T0* r272twin(T272* C);
T0* r331name(T0* a1);
T0* r331make_file_open_read(T0* a1);
void r331print_on(T331* C,T0* a1);
void r331out_in_tagged_out_memory(T331* C);
void r331close(T0* a1);
T6 r331end_of_input(T0* a1);
T2 r331read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r331twin(T331* C);
void r100connect_to_current_working_directory(T100* C);
void r100disconnect(T100* C);
T6 r100remove_directory(T100* C,T0* a1);
extern T0*oBC100last_entry;
void r100change_current_working_directory(T100* C,T0* a1);
void r100read_entry(T100* C);
void r100connect_to(T100* C,T0* a1);
T6 r100create_new_directory(T100* C,T0* a1);
void r63print_on(T63* C,T0* a1);
void r63out_in_tagged_out_memory(T63* C);
T6 r63is_integer(T0* a1);
T0* r63make(T2 a1);
T0* r63twin(T63* C);
T0* r56out(T56* C);
extern T0*oBC59Platform;
T3 r56as_character(T56* C);
T6 r56_px_60(T56* C,T56 a1);
T6 r56_px_62(T56* C,T56 a1);
T0* r56as_hexadecimal(T56* C);
T3 r56code_to_character(T2 a1);
extern T0*oBC58INTEGER_;
T0* r104variable_value(T104* C,T0* a1);
void r104print_on(T104* C,T0* a1);
void r104out_in_tagged_out_memory(T104* C);
T0* r104get_environment_variable(T104* C,T0* a1);
T0* r104twin(T104* C);
T2 r328nr_of_following_octets(T3 a1);
void r328print_on(T328* C,T0* a1);
void r328read_code(T328* C,T0* a1,T2 a2);
void r328out_in_tagged_out_memory(T328* C);
void r328put_code(T2 a1,T0* a2,T2 a3);
void r328read_following_octet(T328* C,T0* a1);
T3 r328code_to_character(T2 a1);
T2 r328octet_size(T2 a1);
T0* r328twin(T328* C);
extern T0*oBC328specific;
T6 r328is_leading_octet(T3 a1);
T2 r328read_leading_octet(T328* C,T0* a1,T2 a2);
void r270print_on(T270* C,T0* a1);
void r270out_in_tagged_out_memory(T270* C);
T0* r270twin(T270* C);
void r51print_on(T51* C,T0* a1);
T0* r51twin(T51* C);
T0* r304substring(T0* a1,T2 a2,T2 a3);
void r304print_on(T304* C,T0* a1);
void r304out_in_tagged_out_memory(T304* C);
void r304move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r304make(T2 a1);
T0* r304resize(T0* a1,T2 a2);
T2 r304copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r304twin(T304* C);
void r374print_on(T374* C,T0* a1);
void r374out_in_tagged_out_memory(T374* C);
T0* r374twin(T374* C);
T0* r271new_event_parser_imp(void);
extern T17*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 375
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms103_125;
extern T7*ms158_438001;
extern T7*ms103_303;
extern T7*ms195_84225847;
extern T7*ms43_451090;
extern T7*ms7_241908472;
extern T7*ms101_3021;
extern T7*ms145_15065;
extern T7*ms20_676;
extern T7*ms143_10a;
extern T7*ms20_691;
extern T7*ms158_82876;
extern T7*ms67_14150;
extern T7*ms328_1684857857;
extern T7*ms143_32a;
extern T7*ms145_16054;
extern T7*ms199_7487;
extern T7*ms145_15065a;
extern T7*ms43_10;
extern T7*ms163_32a;
extern T7*ms74_689092889;
extern T7*ms193_16815647;
extern T7*ms145_2102912007;
extern T7*ms147_945839905;
extern T7*ms326_46;
extern T7*ms326_47;
extern T7*ms143_179802;
extern T7*ms20_80091;
extern T7*ms20_80154;
extern T7*ms20_80325;
extern T7*ms143_10aaa;
extern T7*ms43_112110024;
extern T7*ms142_10030586;
extern T7*ms196_16016;
extern T7*ms158_382622;
extern T7*ms142_78495;
extern T7*ms148_254031466;
extern T7*ms145_1955941869;
extern T7*ms160_438001;
extern T7*ms43_837540926;
extern T7*ms20_3301;
extern T7*ms24_1479;
extern T7*ms145_143262;
extern T7*ms20_3294;
extern T7*ms101_388005040;
extern T7*ms20_3496;
extern T7*ms145_179802a;
extern T7*ms143_208286353;
extern T7*ms43_205aaaa;
extern T7*ms43_1307186427;
extern T7*ms143_179802a;
extern T7*ms149_16828097;
extern T7*ms160_2246326;
extern T7*ms144_10030586;
extern T7*ms147_2110593349;
extern T7*ms146_54423316;
extern T7*ms150_254031466;
extern T7*ms17_80091;
extern T7*ms312_1515383187;
extern T7*ms43_1784507747a;
extern T7*ms20_79251;
extern T7*ms145_10aaa;
extern T7*ms144_0aa;
extern T7*ms198_16016;
extern T7*ms191_319419904a;
extern T7*ms29_132132847;
extern T7*ms17_184927;
extern T7*ms145_60094111a;
extern T7*ms144_78495;
extern T7*ms191_319419904;
extern T7*ms143_3367397a;
extern T7*ms20_84639;
extern T7*ms199_10a;
extern T7*ms163_16824172;
extern T7*ms147_9366019;
extern T7*ms142_0a;
extern T7*ms159_0aa;
extern T7*ms158_2142980;
extern T7*ms144_452889;
extern T7*ms20_90371;
extern T7*ms143_1819;
extern T7*ms143_10;
extern T7*ms43_10aaaa;
extern T7*ms143_32;
extern T7*ms147_1169151010a;
extern T7*ms143_208339478;
extern T7*ms145_1033196635a;
extern T7*ms328_336971577;
extern T7*ms143_420927632;
extern T7*ms202_438001;
extern T7*ms143_10aa;
extern T7*ms6_79251;
extern T7*ms17_323;
extern T7*ms17_329;
extern T7*ms17_288;
extern T7*ms17_343;
extern T7*ms145_10aaaaaaa;
extern T7*ms197_420355647;
extern T7*ms145_10aa;
extern T7*ms142_1890742889;
extern T7*ms144_0a;
extern T7*ms145_10a;
extern T7*ms145_10;
extern T7*ms145_32;
extern T7*ms147_10aa;
extern T7*ms145_32a;
extern T7*ms29_1962337529;
extern T7*ms163_1093;
extern T7*ms161_1712;
extern T7*ms161_1737;
extern T7*ms146_78495;
extern T7*ms161_1747;
extern T7*ms201_10;
extern T7*ms151_10;
extern T7*ms161_1757;
extern T7*ms151_32;
extern T7*ms201_61;
extern T7*ms57_577;
extern T7*ms156_1979141;
extern T7*ms146_0a;
extern T7*ms156_1978575;
extern T7*ms160_1801319434;
extern T7*ms147_10;
extern T7*ms147_46;
extern T7*ms199_16818147;
extern T7*ms29_834968801;
extern T7*ms158_3135;
extern T7*ms7_280756769;
extern T7*ms29_803892311;
extern T7*ms43_1367980604;
extern T7*ms203_10;
extern T7*ms203_32;
extern T7*ms203_0a;
extern T7*ms29_1404162515a;
extern T7*ms149_10;
extern T7*ms161_32aa;
extern T7*ms199_7487a;
extern T7*ms29_837540926aaa;
extern T7*ms43_205;
extern T7*ms43_10a;
extern T7*ms203_593871037;
extern T7*ms43_256;
extern T7*ms199_16818147a;
extern T7*ms143_8949;
extern T7*ms145_8711;
extern T7*ms43_627;
extern T7*ms20_0;
extern T7*ms313_447851;
extern T7*ms145_8902;
extern T7*ms145_10aaaa;
extern T7*ms202_281466146;
extern T7*ms161_10;
extern T7*ms161_32;
extern T7*ms43_1198723604;
extern T7*ms161_0a;
extern T7*ms163_16072;
extern T7*ms147_3373326;
extern T7*ms158_16323;
extern T7*ms147_1428018568;
extern T7*ms157_10;
extern T7*ms188_247314766;
extern T7*ms189_420615272;
extern T7*ms157_32;
extern T7*ms102_674272;
extern T7*ms296_89510;
extern T7*ms102_658766397;
extern T7*ms145_1028251;
extern T7*ms156_203658589;
extern T7*ms163_10;
extern T7*ms143_10aaaaaa;
extern T7*ms163_32;
extern T7*ms29_924849867;
extern T7*ms101_2020550321;
extern T7*ms326_276;
extern T7*ms147_1391903168;
extern T7*ms43_1784507747;
extern T7*ms163_0a;
extern T7*ms143_3367397;
extern T7*ms160_82876;
extern T7*ms158_17711;
extern T7*ms143_272198a;
extern T7*ms43_1145887148;
extern T7*ms159_10;
extern T7*ms159_32;
extern T7*ms157_420622897;
extern T7*ms20_403021;
extern T7*ms159_0a;
extern T7*ms192_2108041;
extern T7*ms20_403144;
extern T7*ms102_1749788964;
extern T7*ms20_402716;
extern T7*ms17_23342040;
extern T7*ms147_10a;
extern T7*ms147_276;
extern T7*ms7_1983847;
extern T7*ms43_837540926a;
extern T7*ms147_497;
extern T7*ms191_1569122284;
extern T7*ms67_4763922;
extern T7*ms145_10aaaaaa;
extern T7*ms29_10aaa;
extern T7*ms143_1933260220;
extern T7*ms17_23340076;
extern T7*ms29_1299730420;
extern T7*ms157_2015137;
extern T7*ms74_2048314391;
extern T7*ms29_837540926a;
extern T7*ms20_16036;
extern T7*ms158_10531885;
extern T7*ms20_16072;
extern T7*ms143_1560205919;
extern T7*ms147_1546380197;
extern T7*ms20_15731;
extern T7*ms43_1307186427a;
extern T7*ms162_82876;
extern T7*ms20_16229;
extern T7*ms143_271606681;
extern T7*ms20_15831;
extern T7*ms144_16054;
extern T7*ms94_0;
extern T7*ms203_3506042;
extern T7*ms29_837540926;
extern T7*ms20_16821;
extern T7*ms194_49442341;
extern T7*ms143_143262;
extern T7*ms17_14036;
extern T7*ms98_0;
extern T7*ms102_1775;
extern T7*ms20_18036;
extern T7*ms101_0;
extern T7*ms43_378995502;
extern T7*ms158_1801319434;
extern T7*ms157_2499240;
extern T7*ms145_10aaaaa;
extern T7*ms43_205aa;
extern T7*ms20_247356966;
extern T7*ms317_447584;
extern T7*ms145_16823272a;
extern T7*ms143_10aaaaa;
extern T7*ms6_18036;
extern T7*ms156_884663453;
extern T7*ms196_49442341;
extern T7*ms97_8976;
extern T7*ms142_452889;
extern T7*ms101_254031466;
extern T7*ms143_90108711;
extern T7*ms102_5712;
extern T7*ms99_8976;
extern T7*ms145_1033196635;
extern T7*ms276_1173251759;
extern T7*ms190_199275083;
extern T7*ms190_440571;
extern T7*ms101_276875365;
extern T7*ms142_0;
extern T7*ms43_10aaa;
extern T7*ms198_2234766;
extern T7*ms43_768830101;
extern T7*ms17_1771134706;
extern T7*ms147_210841101;
extern T7*ms144_0;
extern T7*ms146_0;
extern T7*ms143_661692583;
extern T7*ms102_16686;
extern T7*ms203_0;
extern T7*ms145_90108711;
extern T7*ms29_1510;
extern T7*ms161_0;
extern T7*ms156_0;
extern T7*ms191_10;
extern T7*ms147_29512420;
extern T7*ms157_0;
extern T7*ms102_674272a;
extern T7*ms163_0;
extern T7*ms145_179802;
extern T7*ms159_0;
extern T7*ms29_10aa;
extern T7*ms143_1086847256a;
extern T7*ms198_1606898500;
extern T7*ms142_3021;
extern T7*ms74_915611166;
extern T7*ms43_205a;
extern T7*ms162_438001;
extern T7*ms203_84113722;
extern T7*ms193_10;
extern T7*ms144_3021;
extern T7*ms162_391651;
extern T7*ms43_10aa;
extern T7*ms159_401657;
extern T7*ms43_3139;
extern T7*ms43_256a;
extern T7*ms189_10;
extern T7*ms143_272198;
extern T7*ms146_3200;
extern T7*ms102_392507;
extern T7*ms158_267582581;
extern T7*ms157_1070a;
extern T7*ms157_1070;
extern T7*ms151_3294;
extern T7*ms195_10;
extern T7*ms101_78495;
extern T7*ms20_1957581;
extern T7*ms67_251;
extern T7*ms101_0a;
extern T7*ms143_10aaaa;
extern T7*ms143_1139505;
extern T7*ms102_10;
extern T7*ms102_32;
extern T7*ms159_1642;
extern T7*ms29_1404162515;
extern T7*ms159_1647;
extern T7*ms159_1652;
extern T7*ms159_1702;
extern T7*ms43_118887899;
extern T7*ms29_1569122284;
extern T7*ms159_1662;
extern T7*ms159_1712;
extern T7*ms159_1667;
extern T7*ms29_837540926aa;
extern T7*ms159_1682;
extern T7*ms159_1732;
extern T7*ms159_1752;
extern T7*ms20_440193;
extern T7*ms159_1757;
extern T7*ms197_10;
extern T7*ms17_837540926a;
extern T7*ms202_82876;
extern T7*ms151_5586;
extern T7*ms20_440571;
extern T7*ms1_14150;
extern T7*ms147_1169151010;
extern T7*ms331_0;
extern T7*ms43_205aaa;
extern T7*ms145_8902a;
extern T7*ms285_1338477769;
extern T7*ms20_392331;
extern T7*ms199_10;
extern T7*ms200_89261;
extern T7*ms199_47;
extern T7*ms17_1316598903;
extern T7*ms147_674647;
extern T7*ms203_28832;
extern T7*ms161_420625972;
extern T7*ms201_421552197;
extern T7*ms147_2230607a;
extern T7*ms190_16016;
extern T7*ms145_60094111;
extern T7*ms161_32a;
extern T7*ms101_109478249;
extern T7*ms143_661958208;
extern T7*ms143_1933260220a;
extern T7*ms158_388005040;
extern T7*ms143_47904999;
extern T7*ms147_2230607;
extern T7*ms20_1228681540;
extern T7*ms145_2102912007a;
extern T7*ms331_1338085634;
extern T7*ms67_5426;
extern T7*ms147_210841101a;
extern T7*ms102_10a;
extern T7*ms156_2173440;
extern T7*ms151_3367222;
extern T7*ms189_2013612;
extern T7*ms143_1086847256;
extern T7*ms202_89261;
extern T7*ms152_89261;
extern T7*ms102_32a;
extern T7*ms145_1081376;
extern T7*ms145_453255442;
extern T7*ms29_180;
extern T7*ms29_10a;
extern T7*ms145_16823272;
extern T7*ms202_53496769;
extern T7*ms157_420622897a;
extern T7*ms102_1979141;
extern T7*ms285_1338477769a;
extern T7*ms203_146572;
extern T7*ms43_837540926aa;
extern T7*ms157_10a;
extern T7*ms147_674647a;
extern T7*ms197_420355647a;
extern T7*ms43_392800;
extern T7*ms161_2015752;
extern T7*ms203_145537;
extern T7*ms142_0aa;
extern T7*ms145_91038212;
extern T7*ms17_837540926;
extern T7*ms29_10;
extern T7*ms102_9895737;
extern T7*ms159_84117997;
extern T7*ms197_10a;
extern T7*ms306_1158552108;
extern T7*ms29_39;
extern T7*ms279_195717202;
extern T7*ms160_448440;
extern T7*ms67_2124547;
extern T7*ms150_1544179189;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void*se_ma86(int argc,...);
void X50put_character(T0*C,T3 a1);
void X50put_string(T0*C,T0* a1);
void X74execute(T0*C);
T6 X74is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X1print_on(T0*C,T0* a1);
void X291clear_all(T0*C,T0* a1);
T0* X291make(T0*C,T2 a1);
T0* X291resize(T0*C,T0* a1,T2 a2);
void X46raise(T0*C,T0* a1);
T2 X288count(T0*C);
T2 X288item(T0*C,T2 a1);
T2 X288lower(T0*C);
void X290put(T0*C,T0* a1,T2 a2);
T0* X290item(T0*C,T2 a1);
void X290set_all_with(T0*C,T0* a1);
void X290resize(T0*C,T2 a1);
T2 X55item_code(T0*C,T2 a1);
void X55insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X55remove(T0*C,T2 a1,T2 a2);
void X55insert_code(T0*C,T2 a1,T2 a2);
void X298read_character(T0*C);
T6 X298end_of_input(T0*C);
T3 X298last_character(T0*C);
void X305disconnect(T0*C);
T6 X305is_connected(T0*C);
void X305connect_to(T0*C,T0* a1);
T0* X307default_message(T0*C);
T0* X94exe_file_extension(T0*C);
void X94delete_file(T0*C,T0* a1);
T6 X94is_file_readable(T0*C,T0* a1);
T0* T273toT272(int source);
T0* T271toT270(int source);
T0* T2toT47(T2 source);
T2 T47toT2(T0* source);

#ifdef __cplusplus
}
#endif
