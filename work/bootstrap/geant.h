#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.75 (July 16th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation : -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id :
 */
typedef int Tid;

typedef struct S0 T0;

struct S0{
  Tid id;
};

/* 
   The default channel used to print runtime error messages :
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2 :
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3 :
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4 :
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5 :
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6 :
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8 :
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side :
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL :
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc', `calloc' and `realloc' :
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);
void* se_realloc(void *ptr, size_t size);

/*C Header Pass 1 :*/
typedef struct S76 T76;
typedef struct S311 T311;
typedef struct S143 T143;
typedef struct S228 T228;
typedef struct S289 T289;
typedef struct S89 T89;
typedef struct S17 T17;
typedef struct S176 T176;
typedef struct S276 T276;
typedef int T234;
typedef struct S257 T257;
typedef struct S139 T139;
typedef struct S87 T87;
typedef struct S107 T107;
typedef struct S45 T45;
typedef struct S253 T253;
typedef struct S46 T46;
typedef struct S248 T248;
typedef struct S300 T300;
typedef struct S275 T275;
typedef struct S258 T258;
typedef struct S278 T278;
typedef struct S47 T47;
typedef struct S204 T204;
typedef struct S315 T315;
typedef struct S54 T54;
typedef struct S334 T334;
typedef struct S95 T95;
typedef struct S108 T108;
typedef struct S185 T185;
typedef struct S81 T81;
typedef struct S337 T337;
typedef struct S282 T282;
typedef struct S301 T301;
typedef struct S103 T103;
typedef struct S181 T181;
typedef struct S110 T110;
typedef struct S293 T293;
typedef struct S129 T129;
typedef struct S44 T44;
typedef struct S321 T321;
typedef struct S122 T122;
typedef struct S7 T7;
typedef struct S79 T79;
typedef struct S179 T179;
typedef struct S220 T220;
typedef struct S325 T325;
typedef struct S41 T41;
typedef struct S324 T324;
typedef struct S233 T233;
typedef struct S164 T164;
typedef struct S295 T295;
typedef struct S58 T58;
typedef struct S64 T64;
typedef struct S194 T194;
typedef struct S294 T294;
typedef struct S97 T97;
typedef struct S187 T187;
typedef struct S84 T84;
typedef struct S106 T106;
typedef struct S299 T299;
typedef struct S109 T109;
typedef struct S83 T83;
typedef struct S26 T26;
typedef struct S62 T62;
typedef struct S131 T131;
typedef struct S147 T147;
typedef struct S29 T29;
typedef struct S127 T127;
typedef struct S72 T72;
typedef struct S90 T90;
typedef struct S141 T141;
typedef struct S120 T120;
typedef struct S113 T113;
typedef struct S291 T291;
typedef struct S319 T319;
typedef struct S264 T264;
typedef struct S283 T283;
typedef struct S231 T231;
typedef struct S287 T287;
typedef struct S104 T104;
typedef struct S145 T145;
typedef struct S279 T279;
typedef struct S191 T191;
typedef struct S252 T252;
typedef struct S189 T189;
typedef struct S85 T85;
typedef struct S183 T183;
typedef struct S51 T51;
typedef struct S235 T235;
typedef struct S137 T137;
typedef struct S207 T207;
typedef struct S126 T126;
typedef struct S266 T266;
typedef struct S338 T338;
typedef int T232;
typedef struct S105 T105;
typedef struct S133 T133;
typedef struct S166 T166;
typedef struct S49 T49;
typedef struct S112 T112;
typedef struct S280 T280;
typedef struct S227 T227;
typedef struct S135 T135;

/*C Header Pass 2 :*/
typedef T0**T149;
typedef T0**T124;
typedef T0**T63;
typedef T0**T99;
typedef T3*T9;
typedef T0**T193;
typedef T2*T88;
typedef T0**T256;

/*C Header Pass 3 :*/
extern T234 M234;
struct S106{T8 _directory_stream;T8 _current_entry;};
int se_cmpT106(T106 o1,T106 o2);
struct S90{T2 _i_code;};
int se_cmpT90(T90 o1,T90 o2);
extern T232 M232;

/*C Header Pass 4 :*/
struct S311{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T311 M311;
struct S143{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T143 M143;
struct S228{Tid id;T0* _event_parser_factory;};
extern T228 M228;
struct S289{Tid id;T0* _command;};
extern T289 M289;
struct S89{Tid id;T0* _name;T0* _value;};
extern T89 M89;
struct S17{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;T0* _variables;};
extern T17 M17;
struct S176{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T176 M176;
struct S276{Tid id;T0* _parameters;};
extern T276 M276;
struct S257{Tid id;};
extern T257 M257;
struct S139{Tid id;T0* _target;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T139 M139;
struct S87{Tid id;T88 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T87 M87;
struct S107{Tid id;};
extern T107 M107;
struct S45{Tid id;};
extern T45 M45;
struct S253{Tid id;};
extern T253 M253;
struct S46{Tid id;};
extern T46 M46;
struct S248{Tid id;};
extern T248 M248;
struct S300{Tid id;T0* _first;T0* _second;};
extern T300 M300;
struct S275{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T275 M275;
struct S258{Tid id;T6 _push_back_flag;T2 _memory;T0* _name;};
extern T258 M258;
struct S278{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T278 M278;
struct S47{Tid id;T2 _item;};
extern T47 M47;
struct S204{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T204 M204;
struct S315{Tid id;T0* _item;T0* _right;};
extern T315 M315;
struct S54{Tid id;T8 _item;};
extern T54 M54;
struct S334{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T334 M334;
struct S95{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T95 M95;
struct S108{Tid id;};
extern T108 M108;
struct S185{Tid id;T0* _directory;T0* _target;};
extern T185 M185;
struct S81{Tid id;};
extern T81 M81;
struct S337{Tid id;};
extern T337 M337;
struct S282{Tid id;T0* _parameters;};
extern T282 M282;
struct S301{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T301 M301;
struct S103{Tid id;T106 _basic_directory;};
extern T103 M103;
struct S181{Tid id;T6 _fork;T0* _start_target_name;T0* _project_variables;T0* _target;T0* _filename;T6 _reuse_variables;};
extern T181 M181;
struct S110{Tid id;T0* _target;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;};
extern T110 M110;
struct S293{Tid id;T0* _item;};
extern T293 M293;
struct S129{Tid id;T0* _target;T0* _command_line;};
extern T129 M129;
struct S44{Tid id;T6 _item;};
extern T44 M44;
struct S321{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T321 M321;
struct S122{Tid id;T124 _storage;T2 _capacity;T2 _upper;};
extern T122 M122;
struct S79{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T79 M79;
struct S179{Tid id;T0* _target;T0* _config_filename;};
extern T179 M179;
struct S220{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T220 M220;
struct S76{Tid id;T0* _children;T0* _attributes;T0* _name;T0* _content;};
extern T76 M76;
struct S325{Tid id;};
extern T325 M325;
struct S324{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T324 M324;
struct S233{Tid id;};
extern T233 M233;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S164{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T164 M164;
struct S295{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T295 M295;
struct S58{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T58 M58;
struct S64{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T64 M64;
struct S194{Tid id;};
extern T194 M194;
struct S294{Tid id;};
extern T294 M294;
struct S97{Tid id;T99 _storage;T2 _capacity;T2 _upper;};
extern T97 M97;
struct S187{Tid id;T0* _directory;T0* _file;T0* _target;};
extern T187 M187;
struct S84{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T84 M84;
extern T106 M106;
struct S299{Tid id;T0* _first;T0* _second;};
extern T299 M299;
struct S109{Tid id;};
extern T109 M109;
struct S83{Tid id;T2 _type;};
extern T83 M83;
struct S62{Tid id;T63 _storage;T2 _capacity;T2 _upper;};
extern T62 M62;
struct S131{Tid id;T0* _target;T0* _executable;T0* _source_filename;};
extern T131 M131;
struct S147{Tid id;T149 _storage;T2 _capacity;T2 _upper;};
extern T147 M147;
struct S29{Tid id;T0* _build_filename;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T0* _build_targets;T0* _root_element;T0* _executed_targets;};
extern T29 M29;
struct S26{Tid id;T0* _i_representation;};
extern T26 M26;
struct S127{Tid id;T88 _storage;T2 _capacity;T2 _upper;};
extern T127 M127;
struct S72{Tid id;};
extern T72 M72;
extern T90 M90;
struct S141{Tid id;T0* _target;T0* _input_filename;T0* _output_filename;T0* _defines;};
extern T141 M141;
struct S120{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T120 M120;
struct S113{Tid id;};
extern T113 M113;
struct S291{Tid id;T2 _last_code;T2 _next_pos;};
extern T291 M291;
struct S319{Tid id;T0* _uri;};
extern T319 M319;
struct S264{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T264 M264;
struct S283{Tid id;T0* _name;};
extern T283 M283;
struct S231{Tid id;};
extern T231 M231;
struct S287{Tid id;T0* _name;};
extern T287 M287;
struct S104{Tid id;T106 _basic_directory;};
extern T104 M104;
struct S41{Tid id;T0* _description;T0* _name;T0* _project;T0* _target_element;};
extern T41 M41;
struct S145{Tid id;};
extern T145 M145;
struct S279{Tid id;T124 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T279 M279;
struct S191{Tid id;T193 _storage;T2 _capacity;T2 _upper;};
extern T191 M191;
struct S252{Tid id;T256 _storage;T2 _capacity;T2 _upper;};
extern T252 M252;
struct S189{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T189 M189;
struct S85{Tid id;T2 _count;T0* _storage;};
extern T85 M85;
struct S183{Tid id;T0* _target;T0* _message;};
extern T183 M183;
struct S51{Tid id;T3 _item;};
extern T51 M51;
struct S235{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T235 M235;
struct S137{Tid id;T0* _size;T6 _case_insensitive;T0* _target;T6 _backup;T6 _ecs;T6 _full;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T137 M137;
struct S207{Tid id;T0* _implementation;T0* _root_element;};
extern T207 M207;
struct S126{Tid id;};
extern T126 M126;
struct S266{Tid id;};
extern T266 M266;
struct S338{Tid id;};
extern T338 M338;
struct S105{Tid id;T106 _basic_directory;};
extern T105 M105;
struct S133{Tid id;T0* _target;T0* _name;T0* _value;T0* _project_variables;};
extern T133 M133;
struct S166{Tid id;};
extern T166 M166;
struct S49{Tid id;};
extern T49 M49;
struct S112{Tid id;T0* _variables;};
extern T112 M112;
struct S280{Tid id;T0* _program_name;};
extern T280 M280;
struct S227{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T227 M227;
struct S135{Tid id;T0* _target;T0* _options;T0* _command;T0* _command_options;T0* _xace_filename;T6 _compile;};
extern T135 M135;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
EIF_POINTER basic_directory_current_working_directory(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T0* r6out(T6 C);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
void r149clear_all(T149 C,T2 a1);
T149 r149realloc(T149 C,T2 a1,T2 a2);
void r149set_all_with(T149 C,T0* a1,T2 a2);
void r149clear(T149 C,T2 a1,T2 a2);
void r149copy_from(T149 C,T149 a1,T2 a2);
void r124clear_all(T124 C,T2 a1);
T124 r124realloc(T124 C,T2 a1,T2 a2);
void r124set_all_with(T124 C,T0* a1,T2 a2);
void r124clear(T124 C,T2 a1,T2 a2);
void r124copy_from(T124 C,T124 a1,T2 a2);
void r63clear_all(T63 C,T2 a1);
T63 r63realloc(T63 C,T2 a1,T2 a2);
void r63set_all_with(T63 C,T0* a1,T2 a2);
void r63clear(T63 C,T2 a1,T2 a2);
void r63copy_from(T63 C,T63 a1,T2 a2);
void r99clear_all(T99 C,T2 a1);
T99 r99realloc(T99 C,T2 a1,T2 a2);
void r99set_all_with(T99 C,T0* a1,T2 a2);
void r99clear(T99 C,T2 a1,T2 a2);
void r99copy_from(T99 C,T99 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r193clear_all(T193 C,T2 a1);
T193 r193realloc(T193 C,T2 a1,T2 a2);
void r193set_all_with(T193 C,T0* a1,T2 a2);
void r193clear(T193 C,T2 a1,T2 a2);
void r193copy_from(T193 C,T193 a1,T2 a2);
void r88clear_all(T88 C,T2 a1);
T88 r88realloc(T88 C,T2 a1,T2 a2);
void r88move(T88 C,T2 a1,T2 a2,T2 a3);
void r88set_all_with(T88 C,T2 a1,T2 a2);
void r88clear(T88 C,T2 a1,T2 a2);
void r88copy_from(T88 C,T88 a1,T2 a2);
void r256clear_all(T256 C,T2 a1);
T256 r256realloc(T256 C,T2 a1,T2 a2);
void r256set_all_with(T256 C,T0* a1,T2 a2);
void r256clear(T256 C,T2 a1,T2 a2);
void r256copy_from(T256 C,T256 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r87copy(T87* C,T0* a1);
T2 r87count(T87* C);
T2 r87item(T87* C,T2 a1);
void r87print_on(T87* C,T0* a1);
void r87out_in_tagged_out_memory(T87* C);
void r87make(T87* C,T2 a1,T2 a2);
void r87fill_tagged_out_memory(T87* C);
void r87resize(T87* C,T2 a1,T2 a2);
T0* r87twin(T87* C);
void r122copy(T122* C,T0* a1);
void r122print_on(T122* C,T0* a1);
void r122out_in_tagged_out_memory(T122* C);
void r122make(T122* C,T2 a1);
void r122fill_tagged_out_memory(T122* C);
void r122resize(T122* C,T2 a1);
T0* r122twin(T122* C);
void r97copy(T97* C,T0* a1);
void r97print_on(T97* C,T0* a1);
void r97out_in_tagged_out_memory(T97* C);
void r97make(T97* C,T2 a1);
void r97fill_tagged_out_memory(T97* C);
void r97resize(T97* C,T2 a1);
T0* r97twin(T97* C);
void r62copy(T62* C,T0* a1);
void r62print_on(T62* C,T0* a1);
void r62out_in_tagged_out_memory(T62* C);
void r62make(T62* C,T2 a1);
void r62fill_tagged_out_memory(T62* C);
void r62resize(T62* C,T2 a1);
T0* r62twin(T62* C);
void r147copy(T147* C,T0* a1);
void r147print_on(T147* C,T0* a1);
void r147out_in_tagged_out_memory(T147* C);
void r147make(T147* C,T2 a1);
void r147fill_tagged_out_memory(T147* C);
void r147resize(T147* C,T2 a1);
T0* r147twin(T147* C);
void r127copy(T127* C,T0* a1);
void r127print_on(T127* C,T0* a1);
void r127out_in_tagged_out_memory(T127* C);
void r127make(T127* C,T2 a1);
void r127fill_tagged_out_memory(T127* C);
void r127resize(T127* C,T2 a1);
T0* r127twin(T127* C);
void r127with_capacity(T127* C,T2 a1);
void r127from_collection(T127* C,T0* a1);
void r279copy(T279* C,T0* a1);
T0* r279item(T279* C,T2 a1);
T6 r279valid_index(T279* C,T2 a1);
void r279print_on(T279* C,T0* a1);
void r279out_in_tagged_out_memory(T279* C);
void r279make(T279* C,T2 a1,T2 a2);
void r279fill_tagged_out_memory(T279* C);
T0* r279twin(T279* C);
void r191copy(T191* C,T0* a1);
void r191print_on(T191* C,T0* a1);
void r191out_in_tagged_out_memory(T191* C);
void r191make(T191* C,T2 a1);
void r191fill_tagged_out_memory(T191* C);
void r191resize(T191* C,T2 a1);
T0* r191twin(T191* C);
void r252copy(T252* C,T0* a1);
T2 r252count(T252* C);
T0* r252item(T252* C,T2 a1);
void r252print_on(T252* C,T0* a1);
void r252out_in_tagged_out_memory(T252* C);
void r252make(T252* C,T2 a1);
void r252fill_tagged_out_memory(T252* C);
void r252resize(T252* C,T2 a1);
T0* r252twin(T252* C);
void r311copy(T311* C,T0* a1);
void r311set(T311* C,T0* a1,T6 a2,T6 a3);
void r311print_on(T311* C,T0* a1);
void r311out_in_tagged_out_memory(T311* C);
void r311make(T311* C,T0* a1);
void r311set_after(T311* C);
T0* r311twin(T311* C);
T2 r143new_capacity(T2 a1);
void r143copy(T143* C,T0* a1);
T6 r143extendible(T143* C,T2 a1);
void r143remove_traversing_cursor(T143* C,T0* a1);
void r143move_all_cursors_after(T143* C);
void r143add_traversing_cursor(T143* C,T0* a1);
void r143print_on(T143* C,T0* a1);
T0* r143clone(T0* a1);
void r143out_in_tagged_out_memory(T143* C);
T6 r143cursor_before(T0* a1);
void r143make(T143* C,T2 a1);
T6 r143cursor_after(T0* a1);
void r143resize(T143* C,T2 a1);
T0* r143twin(T143* C);
void r143force_last(T143* C,T0* a1);
T0* r143new_cursor(T143* C);
T6 r143cursor_off(T0* a1);
void r176copy(T176* C,T0* a1);
void r176print_on(T176* C,T0* a1);
void r176out_in_tagged_out_memory(T176* C);
T6 r176off(T176* C);
T0* r176twin(T176* C);
void r253clear_all(T0* a1);
void r253print_on(T253* C,T0* a1);
void r253out_in_tagged_out_memory(T253* C);
T0* r253make(T2 a1);
T0* r253resize(T0* a1,T2 a2);
T0* r253twin(T253* C);
void r248print_on(T248* C,T0* a1);
void r248out_in_tagged_out_memory(T248* C);
T0* r248to_fixed_array(T0* a1);
T0* r248make(T2 a1);
T0* r248make_from_array(T0* a1);
T0* r248resize(T0* a1,T2 a2);
T0* r248twin(T248* C);
void r300print_on(T300* C,T0* a1);
void r300out_in_tagged_out_memory(T300* C);
void r300make(T300* C,T0* a1,T0* a2);
T0* r300twin(T300* C);
void r275copy(T275* C,T0* a1);
void r275print_on(T275* C,T0* a1);
void r275out_in_tagged_out_memory(T275* C);
void r275make(T275* C,T0* a1);
T6 r275off(T275* C);
T0* r275twin(T275* C);
void r204copy(T204* C,T0* a1);
void r204print_on(T204* C,T0* a1);
void r204out_in_tagged_out_memory(T204* C);
T6 r204off(T204* C);
T0* r204twin(T204* C);
void r315print_on(T315* C,T0* a1);
void r315out_in_tagged_out_memory(T315* C);
T0* r315twin(T315* C);
void r334copy(T334* C,T0* a1);
void r334print_on(T334* C,T0* a1);
void r334out_in_tagged_out_memory(T334* C);
T6 r334off(T334* C);
T0* r334twin(T334* C);
T2 r95new_capacity(T2 a1);
void r95copy(T95* C,T0* a1);
T6 r95extendible(T95* C,T2 a1);
void r95remove_traversing_cursor(T95* C,T0* a1);
T0* r95item(T95* C,T2 a1);
void r95move_all_cursors_after(T95* C);
void r95add_traversing_cursor(T95* C,T0* a1);
void r95print_on(T95* C,T0* a1);
T0* r95clone(T0* a1);
void r95out_in_tagged_out_memory(T95* C);
T6 r95cursor_before(T0* a1);
void r95make(T95* C,T2 a1);
T6 r95cursor_after(T0* a1);
void r95resize(T95* C,T2 a1);
T0* r95twin(T95* C);
void r95force_last(T95* C,T0* a1);
T0* r95new_cursor(T95* C);
T6 r95cursor_off(T0* a1);
void r301copy(T301* C,T0* a1);
T0* r301cursor_item(T0* a1);
void r301remove_traversing_cursor(T301* C,T0* a1);
void r301move_all_cursors_after(T301* C);
void r301add_traversing_cursor(T301* C,T0* a1);
void r301print_on(T301* C,T0* a1);
void r301out_in_tagged_out_memory(T301* C);
void r301make(T301* C);
T6 r301cursor_after(T0* a1);
void r301cursor_forth(T301* C,T0* a1);
void r301cursor_start(T301* C,T0* a1);
T0* r301twin(T301* C);
T0* r301new_cursor(T301* C);
void r301put_last(T301* C,T0* a1);
T6 r301cursor_off(T0* a1);
void r293print_on(T293* C,T0* a1);
void r293out_in_tagged_out_memory(T293* C);
T0* r293twin(T293* C);
T2 r321new_capacity(T2 a1);
void r321copy(T321* C,T0* a1);
T6 r321extendible(T321* C,T2 a1);
void r321force(T321* C,T0* a1);
T0* r321item(T321* C);
void r321print_on(T321* C,T0* a1);
T0* r321clone(T0* a1);
void r321out_in_tagged_out_memory(T321* C);
void r321make(T321* C,T2 a1);
void r321remove(T321* C);
void r321resize(T321* C,T2 a1);
T0* r321twin(T321* C);
T2 r79new_capacity(T2 a1);
void r79copy(T79* C,T0* a1);
T6 r79extendible(T79* C,T2 a1);
void r79remove_traversing_cursor(T79* C,T0* a1);
void r79move_all_cursors_after(T79* C);
void r79add_traversing_cursor(T79* C,T0* a1);
void r79print_on(T79* C,T0* a1);
T0* r79clone(T0* a1);
void r79out_in_tagged_out_memory(T79* C);
T6 r79cursor_before(T0* a1);
void r79make(T79* C,T2 a1);
T6 r79cursor_after(T0* a1);
void r79resize(T79* C,T2 a1);
T0* r79twin(T79* C);
void r79force_last(T79* C,T0* a1);
T0* r79new_cursor(T79* C);
void r79put_last(T79* C,T0* a1);
T6 r79cursor_off(T0* a1);
void r220copy(T220* C,T0* a1);
void r220print_on(T220* C,T0* a1);
void r220out_in_tagged_out_memory(T220* C);
T6 r220off(T220* C);
T0* r220twin(T220* C);
void r325print_on(T325* C,T0* a1);
void r325out_in_tagged_out_memory(T325* C);
T0* r325make(T2 a1);
T0* r325resize(T0* a1,T2 a2);
T0* r325twin(T325* C);
void r164copy(T164* C,T0* a1);
void r164print_on(T164* C,T0* a1);
void r164out_in_tagged_out_memory(T164* C);
T6 r164off(T164* C);
T0* r164twin(T164* C);
T2 r58new_capacity(T2 a1);
void r58copy(T58* C,T0* a1);
T6 r58extendible(T58* C,T2 a1);
void r58force(T58* C,T0* a1);
T0* r58item(T58* C);
void r58print_on(T58* C,T0* a1);
T0* r58clone(T0* a1);
void r58out_in_tagged_out_memory(T58* C);
void r58make(T58* C,T2 a1);
void r58remove(T58* C);
void r58resize(T58* C,T2 a1);
T0* r58twin(T58* C);
T2 r64new_capacity(T2 a1);
void r64copy(T64* C,T0* a1);
T6 r64extendible(T64* C,T2 a1);
void r64remove_traversing_cursor(T64* C,T0* a1);
void r64move_all_cursors_after(T64* C);
void r64add_traversing_cursor(T64* C,T0* a1);
void r64print_on(T64* C,T0* a1);
T0* r64clone(T0* a1);
void r64out_in_tagged_out_memory(T64* C);
T6 r64cursor_before(T0* a1);
void r64make(T64* C,T2 a1);
T6 r64cursor_after(T0* a1);
T6 r64has(T64* C,T0* a1);
void r64resize(T64* C,T2 a1);
T0* r64twin(T64* C);
void r64force_last(T64* C,T0* a1);
T0* r64new_cursor(T64* C);
T6 r64cursor_off(T0* a1);
void r194print_on(T194* C,T0* a1);
void r194out_in_tagged_out_memory(T194* C);
T0* r194make(T2 a1);
T0* r194resize(T0* a1,T2 a2);
T0* r194twin(T194* C);
void r299print_on(T299* C,T0* a1);
void r299out_in_tagged_out_memory(T299* C);
void r299make(T299* C,T0* a1,T0* a2);
T0* r299twin(T299* C);
void r72print_on(T72* C,T0* a1);
void r72out_in_tagged_out_memory(T72* C);
T0* r72make(T2 a1);
T0* r72resize(T0* a1,T2 a2);
T0* r72twin(T72* C);
T2 r120new_capacity(T2 a1);
void r120copy(T120* C,T0* a1);
void r120force(T120* C,T0* a1,T0* a2);
void r120make_clashes(T120* C,T2 a1);
void r120search_position(T120* C,T0* a1);
void r120remove_traversing_cursor(T120* C,T0* a1);
void r120clone_slots(T120* C);
extern T0*oBC116FIXED_INTEGER_ARRAY_;
void r120keys_resize(T120* C,T2 a1);
void r120clone_clashes(T120* C);
void r120move_all_cursors_after(T120* C);
void r120make_items(T120* C,T2 a1);
void r120add_traversing_cursor(T120* C,T0* a1);
void r120print_on(T120* C,T0* a1);
T0* r120clone(T0* a1);
void r120out_in_tagged_out_memory(T120* C);
void r120make(T120* C,T2 a1);
void r120clone_items(T120* C);
T6 r120has(T120* C,T0* a1);
void r120make_keys(T120* C,T2 a1);
T2 r120hash_position(T120* C,T0* a1);
void r120items_resize(T120* C,T2 a1);
void r120clone_keys(T120* C);
void r120resize(T120* C,T2 a1);
void r120make_with_equality_testers(T120* C,T2 a1,T0* a2,T0* a3);
T0* r120found_item(T120* C);
T6 r120found(T120* C);
void r120search(T120* C,T0* a1);
void r120clashes_resize(T120* C,T2 a1);
void r120slots_resize(T120* C,T2 a1);
T0* r120twin(T120* C);
T0* r120new_cursor(T120* C);
void r120make_slots(T120* C,T2 a1);
T2 r120new_modulus(T2 a1);
T6 r120cursor_off(T0* a1);
void r145print_on(T145* C,T0* a1);
void r145out_in_tagged_out_memory(T145* C);
T0* r145make(T2 a1);
T0* r145resize(T0* a1,T2 a2);
T0* r145twin(T145* C);
T2 r189new_capacity(T2 a1);
void r189copy(T189* C,T0* a1);
T6 r189extendible(T189* C,T2 a1);
void r189remove_traversing_cursor(T189* C,T0* a1);
void r189move_all_cursors_after(T189* C);
void r189add_traversing_cursor(T189* C,T0* a1);
void r189print_on(T189* C,T0* a1);
T0* r189clone(T0* a1);
void r189out_in_tagged_out_memory(T189* C);
T6 r189cursor_before(T0* a1);
void r189make(T189* C,T2 a1);
T6 r189cursor_after(T0* a1);
void r189resize(T189* C,T2 a1);
T0* r189twin(T189* C);
void r189force_last(T189* C,T0* a1);
T0* r189new_cursor(T189* C);
T6 r189cursor_off(T0* a1);
void r126print_on(T126* C,T0* a1);
void r126out_in_tagged_out_memory(T126* C);
T6 r126test(T0* a1,T0* a2);
T0* r126twin(T126* C);
void r166print_on(T166* C,T0* a1);
void r166out_in_tagged_out_memory(T166* C);
T0* r166make(T2 a1);
T0* r166resize(T0* a1,T2 a2);
T0* r166twin(T166* C);
void r228print_on(T228* C,T0* a1);
void r228out_in_tagged_out_memory(T228* C);
T0* r228twin(T228* C);
void r289print_on(T289* C,T0* a1);
void r289out_in_tagged_out_memory(T289* C);
void r289system(T0* a1);
void r289execute(T289* C);
T0* r289twin(T289* C);
void r89print_on(T89* C,T0* a1);
void r89out_in_tagged_out_memory(T89* C);
void r89make(T89* C,T0* a1,T0* a2);
T0* r89twin(T89* C);
void r276print_on(T276* C,T0* a1);
void r276out_in_tagged_out_memory(T276* C);
extern T0*oBC19Arguments;
extern int fBC19Arguments;
T0* r276Arguments(void);
void r276make(T276* C,T0* a1);
T0* r276message(T276* C,T0* a1);
T0* r276twin(T276* C);
T0* r276default_message(T276* C);
extern T0*oBC23STRING_;
extern T0*oBC139Output_filename_attribute_name;
extern int fBC139Output_filename_attribute_name;
T0* r139Output_filename_attribute_name(void);
void r139make_from_element(T139* C,T0* a1,T0* a2);
void r139print_on(T139* C,T0* a1);
T0* r139clone(T0* a1);
void r139out_in_tagged_out_memory(T139* C);
T6 r139uc_boolean_value(T139* C,T0* a1,T0* a2);
void r139make(T139* C);
extern T0*oBC20True_attribute_value;
extern int fBC20True_attribute_value;
T0* r139True_attribute_value(void);
extern T0*oBC139Verbose_filename_attribute_name;
extern int fBC139Verbose_filename_attribute_name;
T0* r139Verbose_filename_attribute_name(void);
T0* r139uc_attribute_value(T139* C,T0* a1,T0* a2);
void r139print(T0* a1);
void r139_74Pmake_from_element(T139* C,T0* a1,T0* a2);
void r139execute(T139* C);
T6 r139has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC1std_output;
extern T0*oBC139Tokens_classname_attribute_name;
extern int fBC139Tokens_classname_attribute_name;
T0* r139Tokens_classname_attribute_name(void);
extern T0*oBC20False_attribute_value;
extern int fBC20False_attribute_value;
T0* r139False_attribute_value(void);
T0* r139variables(T139* C);
extern T0*oBC139Separate_actions_attribute_name;
extern int fBC139Separate_actions_attribute_name;
T0* r139Separate_actions_attribute_name(void);
T0* r139twin(T139* C);
void r139execute_shell(T0* a1);
T6 r139is_executable(T139* C);
extern T0*oBC139Input_filename_attribute_name;
extern int fBC139Input_filename_attribute_name;
T0* r139Input_filename_attribute_name(void);
void r258print_on(T258* C,T0* a1);
void r258out_in_tagged_out_memory(T258* C);
void r258read_character(T258* C);
void r258make(T258* C);
T6 r258end_of_file(T258* C);
T0* r258twin(T258* C);
void r278print_on(T278* C,T0* a1);
void r278out_in_tagged_out_memory(T278* C);
void r278report_message(T278* C,T0* a1);
extern T0*oBC244std;
T0* r278message(T0* a1);
T0* r278twin(T278* C);
void r278make_standard(T278* C);
void r278report_error(T278* C,T0* a1);
extern T0*oBC42unix_file_system;
void r185make_from_element(T185* C,T0* a1,T0* a2);
T0* r185attribute_value(T185* C,T0* a1,T0* a2);
extern T0*oBC42file_system;
extern int fBC42file_system;
T0* r185file_system(void);
void r185print_on(T185* C,T0* a1);
void r185out_in_tagged_out_memory(T185* C);
void r185print(T0* a1);
void r185_74Pmake_from_element(T185* C,T0* a1,T0* a2);
extern T0*oBC42macos_file_system;
void r185execute(T185* C);
T0* r185variables(T185* C);
T0* r185twin(T185* C);
extern T0*oBC42windows_file_system;
extern T0*oBC185Directory_attribute_name;
extern int fBC185Directory_attribute_name;
T0* r185Directory_attribute_name(void);
T6 r185is_executable(T185* C);
void r282print_on(T282* C,T0* a1);
void r282out_in_tagged_out_memory(T282* C);
T0* r282Arguments(void);
void r282make(T282* C,T0* a1);
T0* r282message(T282* C,T0* a1);
T0* r282twin(T282* C);
T0* r282default_message(T282* C);
void r103delete_directory(T103* C,T0* a1);
T0* r103current_working_directory(T103* C);
void r103print_on(T103* C,T0* a1);
T0* r103clone(T0* a1);
void r103delete_file(T103* C,T0* a1);
void r103create_directory(T103* C,T0* a1);
void r103out_in_tagged_out_memory(T103* C);
void r103set_current_working_directory(T103* C,T0* a1);
void r103delete(T103* C,T0* a1);
T0* r103twin(T103* C);
void r181make_from_element(T181* C,T0* a1,T0* a2);
extern T0*oBC181Start_target_attribute_name;
extern int fBC181Start_target_attribute_name;
T0* r181Start_target_attribute_name(void);
extern T0*oBC181Reuse_variables_attribute_name;
extern int fBC181Reuse_variables_attribute_name;
T0* r181Reuse_variables_attribute_name(void);
T0* r181attribute_value(T181* C,T0* a1,T0* a2);
void r181print_on(T181* C,T0* a1);
T0* r181clone(T0* a1);
void r181out_in_tagged_out_memory(T181* C);
extern T0*oBC18Exceptions;
T6 r181uc_boolean_value(T181* C,T0* a1,T0* a2);
T0* r181True_attribute_value(void);
T0* r181uc_attribute_value(T181* C,T0* a1,T0* a2);
void r181print(T0* a1);
void r181_74Pmake_from_element(T181* C,T0* a1,T0* a2);
extern T0*oBC181Filename_attribute_name;
extern int fBC181Filename_attribute_name;
T0* r181Filename_attribute_name(void);
void r181execute(T181* C);
T6 r181has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC181Fork_attribute_name;
extern int fBC181Fork_attribute_name;
T0* r181Fork_attribute_name(void);
T0* r181False_attribute_value(void);
T0* r181variables(T181* C);
T0* r181twin(T181* C);
void r181execute_shell(T0* a1);
T6 r181is_executable(T181* C);
void r110make_from_element(T110* C,T0* a1,T0* a2);
extern T0*oBC110Ace_file_attribute_name;
extern int fBC110Ace_file_attribute_name;
T0* r110Ace_file_attribute_name(void);
T0* r110attribute_value(T110* C,T0* a1,T0* a2);
extern T0*oBC110Root_class_attribute_name;
extern int fBC110Root_class_attribute_name;
T0* r110Root_class_attribute_name(void);
void r110print_on(T110* C,T0* a1);
T0* r110clone(T0* a1);
void r110out_in_tagged_out_memory(T110* C);
T0* r110new_ace_cmdline(T110* C);
T6 r110uc_boolean_value(T110* C,T0* a1,T0* a2);
T0* r110True_attribute_value(void);
T0* r110uc_attribute_value(T110* C,T0* a1,T0* a2);
extern T0*oBC110Case_insensitive_attribute_name;
extern int fBC110Case_insensitive_attribute_name;
T0* r110Case_insensitive_attribute_name(void);
T6 r110is_traditional_configuration(T110* C);
void r110print(T0* a1);
void r110_74Pmake_from_element(T110* C,T0* a1,T0* a2);
extern T0*oBC110Executable_attribute_name;
extern int fBC110Executable_attribute_name;
T0* r110Executable_attribute_name(void);
extern T0*oBC110No_style_warning_attribute_name;
extern int fBC110No_style_warning_attribute_name;
T0* r110No_style_warning_attribute_name(void);
void r110execute(T110* C);
T6 r110has_uc_attribute(T0* a1,T0* a2);
T0* r110uc_attribute_value_or_default(T110* C,T0* a1,T0* a2,T0* a3);
T0* r110False_attribute_value(void);
T0* r110attribute_value_or_default(T110* C,T0* a1,T0* a2,T0* a3);
T0* r110variables(T110* C);
T0* r110twin(T110* C);
extern T0*oBC110Creation_procedure_attribute_name;
extern int fBC110Creation_procedure_attribute_name;
T0* r110Creation_procedure_attribute_name(void);
T0* r110new_traditional_cmdline(T110* C);
void r110execute_shell(T0* a1);
T6 r110is_executable(T110* C);
T6 r110is_ace_configuration(T110* C);
void r129make_from_element(T129* C,T0* a1,T0* a2);
T0* r129attribute_value(T129* C,T0* a1,T0* a2);
void r129print_on(T129* C,T0* a1);
void r129out_in_tagged_out_memory(T129* C);
void r129print(T0* a1);
void r129_74Pmake_from_element(T129* C,T0* a1,T0* a2);
extern T0*oBC129Executable_attribute_name;
extern int fBC129Executable_attribute_name;
T0* r129Executable_attribute_name(void);
void r129execute(T129* C);
T0* r129variables(T129* C);
T0* r129twin(T129* C);
void r129execute_shell(T0* a1);
T6 r129is_executable(T129* C);
void r179make_from_element(T179* C,T0* a1,T0* a2);
void r179print_on(T179* C,T0* a1);
T0* r179clone(T0* a1);
extern T0*oBC179Config_filename_attribute_name;
extern int fBC179Config_filename_attribute_name;
T0* r179Config_filename_attribute_name(void);
void r179out_in_tagged_out_memory(T179* C);
T0* r179uc_attribute_value(T179* C,T0* a1,T0* a2);
void r179print(T0* a1);
void r179_74Pmake_from_element(T179* C,T0* a1,T0* a2);
void r179execute(T179* C);
T6 r179has_uc_attribute(T0* a1,T0* a2);
T0* r179variables(T179* C);
T0* r179twin(T179* C);
void r179execute_shell(T0* a1);
T6 r179is_executable(T179* C);
T0* r76attribute_value_by_name(T76* C,T0* a1);
void r76add_attributes(T76* C,T0* a1);
void r76print_on(T76* C,T0* a1);
void r76add_attribute(T76* C,T0* a1);
void r76out_in_tagged_out_memory(T76* C);
void r76make(T76* C,T0* a1);
T0* r76children_by_name(T76* C,T0* a1);
void r76make_attribute_handler(T76* C);
extern T0*oBC20Empty_string;
extern int fBC20Empty_string;
T0* r76Empty_string(void);
T0* r76twin(T76* C);
void r76make_composite(T76* C);
T6 r76has_attribute(T76* C,T0* a1);
T2 r324new_capacity(T2 a1);
void r324copy(T324* C,T0* a1);
T6 r324extendible(T324* C,T2 a1);
void r324remove_traversing_cursor(T324* C,T0* a1);
void r324move_all_cursors_after(T324* C);
void r324add_traversing_cursor(T324* C,T0* a1);
void r324print_on(T324* C,T0* a1);
T0* r324clone(T0* a1);
void r324out_in_tagged_out_memory(T324* C);
T6 r324cursor_before(T0* a1);
void r324ds_arrayed_list_make(T324* C,T2 a1);
T6 r324cursor_after(T0* a1);
void r324resize(T324* C,T2 a1);
void r324make_from_bilinear(T324* C,T0* a1);
T0* r324twin(T324* C);
void r324force_last(T324* C,T0* a1);
T0* r324new_cursor(T324* C);
void r324put_last(T324* C,T0* a1);
T6 r324cursor_off(T0* a1);
void r295disconnect(T295* C);
void r295print_on(T295* C,T0* a1);
void r295out_in_tagged_out_memory(T295* C);
void r295read_character(T295* C);
T6 r295end_of_input(T295* C);
void r295connect_to(T295* C,T0* a1);
T0* r295twin(T295* C);
void r187make_from_element(T187* C,T0* a1,T0* a2);
T0* r187attribute_value(T187* C,T0* a1,T0* a2);
T0* r187file_system(void);
void r187print_on(T187* C,T0* a1);
void r187out_in_tagged_out_memory(T187* C);
void r187print(T0* a1);
void r187_74Pmake_from_element(T187* C,T0* a1,T0* a2);
void r187execute(T187* C);
T0* r187variables(T187* C);
T0* r187twin(T187* C);
extern T0*oBC187File_attribute_name;
extern int fBC187File_attribute_name;
T0* r187File_attribute_name(void);
extern T0*oBC187Directory_attribute_name;
extern int fBC187Directory_attribute_name;
T0* r187Directory_attribute_name(void);
T6 r187is_executable(T187* C);
extern T0*oBC84utils;
T2 r84item_code(T84* C,T2 a1);
void r84print_on(T84* C,T0* a1);
void r84out_in_tagged_out_memory(T84* C);
void r84make(T84* C);
void r84insert(T84* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r84add_to_storage_count(T84* C,T2 a1);
void r84remove(T84* C,T2 a1,T2 a2);
void r84find_slice_position(T84* C,T2 a1,T2 a2);
void r84insert_code(T84* C,T2 a1,T2 a2);
extern T6 oBC84optimize_access;
void r84storage_move(T84* C,T2 a1,T2 a2,T2 a3);
T0* r84twin(T84* C);
T2 r84storage_slice_count(T84* C);
void r84find_position(T84* C,T2 a1);
T0* r83create_representation(T83* C);
void r83print_on(T83* C,T0* a1);
void r83out_in_tagged_out_memory(T83* C);
T0* r83twin(T83* C);
void r131make_from_element(T131* C,T0* a1,T0* a2);
void r131print_on(T131* C,T0* a1);
T0* r131clone(T0* a1);
void r131out_in_tagged_out_memory(T131* C);
T0* r131uc_attribute_value(T131* C,T0* a1,T0* a2);
void r131print(T0* a1);
void r131_74Pmake_from_element(T131* C,T0* a1,T0* a2);
extern T0*oBC131Executable_attribute_name;
extern int fBC131Executable_attribute_name;
T0* r131Executable_attribute_name(void);
void r131execute(T131* C);
T6 r131has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC131Source_filename_attribute_name;
extern int fBC131Source_filename_attribute_name;
T0* r131Source_filename_attribute_name(void);
T0* r131variables(T131* C);
T0* r131twin(T131* C);
void r131execute_shell(T0* a1);
T6 r131is_executable(T131* C);
void r29build(T29* C);
extern T0*oBC29Parser_factory;
extern int fBC29Parser_factory;
T0* r29Parser_factory(void);
void r29print_on(T29* C,T0* a1);
extern T0*oBC20Target_element_name;
extern int fBC20Target_element_name;
T0* r29Target_element_name(void);
void r29load(T29* C,T0* a1);
void r29out_in_tagged_out_memory(T29* C);
extern T0*oBC20Description_element_name;
extern int fBC20Description_element_name;
T0* r29Description_element_name(void);
extern T0*oBC20Default_attribute_name;
extern int fBC20Default_attribute_name;
T0* r29Default_attribute_name(void);
T0* r29target_with_name(T29* C,T0* a1);
void r29print(T0* a1);
void r29make_with_filename(T29* C,T0* a1,T0* a2);
void r29reset(T29* C);
T0* r29twin(T29* C);
extern T0*oBC20Default_build_filename;
extern int fBC20Default_build_filename;
T0* r29Default_build_filename(void);
void r29calculate_build_order(T29* C);
T0* r26out(T26* C);
void r26copy(T26* C,T0* a1);
T0* r26substring(T26* C,T2 a1,T2 a2);
T2 r26count(T26* C);
T2 r26item_code(T26* C,T2 a1);
T6 r26is_whitespace(T2 a1);
void r26remove_between(T26* C,T2 a1,T2 a2);
T6 r26is_equal(T26* C,T0* a1);
T90 r26item(T26* C,T2 a1);
void r26print_on(T26* C,T0* a1);
void r26make_from_string(T26* C,T0* a1);
T2 r26index_of(T26* C,T90 a1,T2 a2);
void r26out_in_tagged_out_memory(T26* C);
void r26make(T26* C,T2 a1);
void r26append_string(T26* C,T0* a1);
void r26head(T26* C,T2 a1);
void r26append_ucc_code(T26* C,T2 a1);
void r26right_adjust(T26* C);
T6 r26empty(T26* C);
T0* r26twin(T26* C);
T2 r26three_way_comparison(T26* C,T0* a1);
void r26left_adjust(T26* C);
extern T0*oBC26i_settings;
void r26tail(T26* C,T2 a1);
extern T0*oBC141Output_filename_attribute_name;
extern int fBC141Output_filename_attribute_name;
T0* r141Output_filename_attribute_name(void);
void r141make_from_element(T141* C,T0* a1,T0* a2);
void r141print_on(T141* C,T0* a1);
T0* r141clone(T0* a1);
extern T0*oBC141Define_element_name;
extern int fBC141Define_element_name;
T0* r141Define_element_name(void);
void r141out_in_tagged_out_memory(T141* C);
void r141make(T141* C);
T0* r141uc_attribute_value(T141* C,T0* a1,T0* a2);
void r141print(T0* a1);
void r141_74Pmake_from_element(T141* C,T0* a1,T0* a2);
void r141execute(T141* C);
T6 r141has_uc_attribute(T0* a1,T0* a2);
extern T0*oBC20Name_attribute_name;
extern int fBC20Name_attribute_name;
T0* r141Name_attribute_name(void);
T0* r141variables(T141* C);
T0* r141twin(T141* C);
void r141execute_shell(T0* a1);
T6 r141is_executable(T141* C);
extern T0*oBC141Input_filename_attribute_name;
extern int fBC141Input_filename_attribute_name;
T0* r141Input_filename_attribute_name(void);
void r319print_on(T319* C,T0* a1);
void r319out_in_tagged_out_memory(T319* C);
T0* r319twin(T319* C);
void r264fill(T264* C);
void r264compact_left(T264* C);
T2 r264count(T264* C);
void r264set_position(T264* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC265lower;
extern int fBC265lower;
T2 r264lower(void);
void r264print_on(T264* C,T0* a1);
void r264out_in_tagged_out_memory(T264* C);
extern T0*oBC212STRING_BUFFER_;
void r264resize(T264* C);
void r264make_with_size(T264* C,T0* a1,T2 a2);
T0* r264twin(T264* C);
void r264set_file(T264* C,T0* a1);
extern T0*oBC213INPUT_STREAM_;
void r264flush(T264* C);
void r283print_on(T283* C,T0* a1);
void r283out_in_tagged_out_memory(T283* C);
void r283make(T283* C);
T0* r283twin(T283* C);
void r283put_string(T283* C,T0* a1);
void r287print_on(T287* C,T0* a1);
void r287out_in_tagged_out_memory(T287* C);
void r287make(T287* C);
T0* r287twin(T287* C);
void r287put_string(T287* C,T0* a1);
void r104delete_directory(T104* C,T0* a1);
T0* r104current_working_directory(T104* C);
void r104print_on(T104* C,T0* a1);
T0* r104clone(T0* a1);
void r104delete_file(T104* C,T0* a1);
void r104create_directory(T104* C,T0* a1);
void r104out_in_tagged_out_memory(T104* C);
void r104set_current_working_directory(T104* C,T0* a1);
void r104delete(T104* C,T0* a1);
T0* r104twin(T104* C);
extern T0*oBC41Depends_attribute_name;
extern int fBC41Depends_attribute_name;
T0* r41Depends_attribute_name(void);
extern T0*oBC20Echo_task_name;
extern int fBC20Echo_task_name;
T0* r41Echo_task_name(void);
extern T0*oBC41Dir_attribute_name;
extern int fBC41Dir_attribute_name;
T0* r41Dir_attribute_name(void);
extern T0*oBC20Var_task_name;
extern int fBC20Var_task_name;
T0* r41Var_task_name(void);
extern T0*oBC20Delete_task_name;
extern int fBC20Delete_task_name;
T0* r41Delete_task_name(void);
T0* r41dependencies(T41* C);
extern T0*oBC20Exec_task_name;
extern int fBC20Exec_task_name;
T0* r41Exec_task_name(void);
T6 r41is_equal(T41* C,T0* a1);
extern T0*oBC41Unless_attribute_name;
extern int fBC41Unless_attribute_name;
T0* r41Unless_attribute_name(void);
T0* r41dependent_targets(T41* C);
extern T0*oBC41If_attribute_name;
extern int fBC41If_attribute_name;
T0* r41If_attribute_name(void);
extern T0*oBC20Mkdir_task_name;
extern int fBC20Mkdir_task_name;
T0* r41Mkdir_task_name(void);
T0* r41file_system(void);
T6 r41has_dependencies(T41* C);
void r41print_on(T41* C,T0* a1);
T0* r41clone(T0* a1);
extern T0*oBC20Geant_task_name;
extern int fBC20Geant_task_name;
T0* r41Geant_task_name(void);
extern T0*oBC20Compile_se_task_name;
extern int fBC20Compile_se_task_name;
T0* r41Compile_se_task_name(void);
void r41out_in_tagged_out_memory(T41* C);
T0* r41Description_element_name(void);
void r41make(T41* C,T0* a1,T0* a2);
extern T0*oBC20Gexace_task_name;
extern int fBC20Gexace_task_name;
T0* r41Gexace_task_name(void);
extern T0*oBC20Gelex_task_name;
extern int fBC20Gelex_task_name;
T0* r41Gelex_task_name(void);
void r41print(T0* a1);
T0* r41string_tokens(T0* a1);
extern T0*oBC20Getest_task_name;
extern int fBC20Getest_task_name;
T0* r41Getest_task_name(void);
void r41show_dependent_targets(T0* a1);
void r41execute(T41* C);
T0* r41Name_attribute_name(void);
extern T0*oBC20Lcc_task_name;
extern int fBC20Lcc_task_name;
T0* r41Lcc_task_name(void);
extern T0*oBC20Gepp_task_name;
extern int fBC20Gepp_task_name;
T0* r41Gepp_task_name(void);
T0* r41twin(T41* C);
extern T0*oBC20Geyacc_task_name;
extern int fBC20Geyacc_task_name;
T0* r41Geyacc_task_name(void);
void r85print_on(T85* C,T0* a1);
void r85out_in_tagged_out_memory(T85* C);
void r85make(T85* C);
void r85insert(T85* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r85remove(T85* C,T2 a1,T2 a2);
void r85insert_code(T85* C,T2 a1,T2 a2);
void r85move(T85* C,T2 a1,T2 a2,T2 a3);
void r85storage_ensure_capacity(T85* C,T2 a1);
T0* r85twin(T85* C);
void r183make_from_element(T183* C,T0* a1,T0* a2);
T0* r183attribute_value(T183* C,T0* a1,T0* a2);
void r183print_on(T183* C,T0* a1);
void r183out_in_tagged_out_memory(T183* C);
void r183print(T0* a1);
extern T0*oBC183Message_attribute_name;
extern int fBC183Message_attribute_name;
T0* r183Message_attribute_name(void);
void r183_74Pmake_from_element(T183* C,T0* a1,T0* a2);
T0* r183variables(T183* C);
T0* r183twin(T183* C);
void r235yy_do_action(T235* C,T2 a1);
extern T0*oBC236yytable_template;
extern int fBC236yytable_template;
T0* r235yytable_template(void);
T0* r235empty_ucstring(void);
void r235make_parser_skeleton(T235* C);
T2 r235yy_at_beginning_of_line(T235* C);
void r235fatal_error(T0* a1);
T0* r235yytype1(T0* a1);
T0* r235yytype2(T0* a1);
T0* r235yytype3(T0* a1);
T0* r235yytype4(T0* a1);
void r235handle_found_text(T235* C);
void r235parse(T235* C);
void r235set_input_buffer(T235* C,T0* a1);
T2 r235yy_translate(T235* C,T2 a1);
extern T0*oBC237yy_ec_template;
extern int fBC237yy_ec_template;
T0* r235yy_ec_template(void);
void r235yy_execute_action(T235* C,T2 a1);
extern T0*oBC236yytranslate_template;
extern int fBC236yytranslate_template;
T0* r235yytranslate_template(void);
void r235clear_stacks(T235* C);
extern T0*oBC237yy_def_template;
extern int fBC237yy_def_template;
T0* r235yy_def_template(void);
void r235yy_load_input_buffer(T235* C);
extern T90 oBC236uc_collon;
extern int fBC236uc_collon;
T90 r235uc_collon(void);
extern T0*oBC236yyr1_template;
extern int fBC236yyr1_template;
T0* r235yyr1_template(void);
void r235make_with_buffer(T235* C,T0* a1);
T2 r235yy_null_trans_state(T235* C,T2 a1);
extern T0*oBC237yy_accept_template;
extern int fBC237yy_accept_template;
T0* r235yy_accept_template(void);
void r235read_token(T235* C);
extern T0*oBC236yyr2_template;
extern int fBC236yyr2_template;
T0* r235yyr2_template(void);
T2 r235yy_previous_state(T235* C);
extern T0*oBC236yypgoto_template;
extern int fBC236yypgoto_template;
T0* r235yypgoto_template(void);
void r235yy_refill_input_buffer(T235* C);
T0* r235yy_fixed_array(T0* a1);
extern T0*oBC237yy_meta_template;
extern int fBC237yy_meta_template;
T0* r235yy_meta_template(void);
extern T0*oBC237yy_base_template;
extern int fBC237yy_base_template;
T0* r235yy_base_template(void);
T0* r235twin(T235* C);
T0* r235clone(T0* a1);
T0* r235new_file_buffer(T0* a1);
void r235yy_initialize(T235* C);
void r235parse_from_file_name(T235* C,T0* a1);
T0* r235text(T235* C);
void r235out_in_tagged_out_memory(T235* C);
extern T0*oBC237yy_nxt_template;
extern int fBC237yy_nxt_template;
T0* r235yy_nxt_template(void);
void r235parse_from_stream(T235* C,T0* a1);
void r235yy_set_line_column(T235* C);
void r235yy_build_parser_tables(T235* C);
T0* r235split_name_and_prefix(T0* a1);
void r235report_error(T235* C,T0* a1);
extern T0*oBC236yydefact_template;
extern int fBC236yydefact_template;
T0* r235yydefact_template(void);
extern T0*oBC237yy_chk_template;
extern int fBC237yy_chk_template;
T0* r235yy_chk_template(void);
extern T0*oBC236yycheck_template;
extern int fBC236yycheck_template;
T0* r235yycheck_template(void);
void r235make(T235* C);
T0* r235yyfixed_array(T0* a1);
void r235yy_clear_all(T235* C);
extern T0*oBC236yydefgoto_template;
extern int fBC236yydefgoto_template;
T0* r235yydefgoto_template(void);
void r235yy_set_content(T235* C,T0* a1);
extern T0*oBC236yypact_template;
extern int fBC236yypact_template;
T0* r235yypact_template(void);
void r235set_start_condition(T235* C,T2 a1);
void r235yy_build_tables(T235* C);
void r235print_on(T235* C,T0* a1);
extern T0*oBC137Meta_ecs_attribute_name;
extern int fBC137Meta_ecs_attribute_name;
T0* r137Meta_ecs_attribute_name(void);
extern T0*oBC137Output_filename_attribute_name;
extern int fBC137Output_filename_attribute_name;
T0* r137Output_filename_attribute_name(void);
extern T0*oBC137Size_attribute_name;
extern int fBC137Size_attribute_name;
T0* r137Size_attribute_name(void);
void r137make_from_element(T137* C,T0* a1,T0* a2);
extern T0*oBC137Ecs_attribute_name;
extern int fBC137Ecs_attribute_name;
T0* r137Ecs_attribute_name(void);
void r137print_on(T137* C,T0* a1);
T0* r137clone(T0* a1);
void r137out_in_tagged_out_memory(T137* C);
T6 r137uc_boolean_value(T137* C,T0* a1,T0* a2);
void r137make(T137* C);
T0* r137True_attribute_value(void);
T0* r137uc_attribute_value(T137* C,T0* a1,T0* a2);
extern T0*oBC137Case_insensitive_attribute_name;
extern int fBC137Case_insensitive_attribute_name;
T0* r137Case_insensitive_attribute_name(void);
extern T0*oBC137No_default_attribute_name;
extern int fBC137No_default_attribute_name;
T0* r137No_default_attribute_name(void);
void r137print(T0* a1);
extern T0*oBC137Backup_attribute_name;
extern int fBC137Backup_attribute_name;
T0* r137Backup_attribute_name(void);
void r137_74Pmake_from_element(T137* C,T0* a1,T0* a2);
extern T0*oBC137No_warn_attribute_name;
extern int fBC137No_warn_attribute_name;
T0* r137No_warn_attribute_name(void);
void r137execute(T137* C);
T6 r137has_uc_attribute(T0* a1,T0* a2);
T0* r137False_attribute_value(void);
T0* r137variables(T137* C);
extern T0*oBC137Separate_actions_attribute_name;
extern int fBC137Separate_actions_attribute_name;
T0* r137Separate_actions_attribute_name(void);
T0* r137twin(T137* C);
void r137execute_shell(T0* a1);
T6 r137is_executable(T137* C);
extern T0*oBC137Input_filename_attribute_name;
extern int fBC137Input_filename_attribute_name;
T0* r137Input_filename_attribute_name(void);
extern T0*oBC137Full_attribute_name;
extern int fBC137Full_attribute_name;
T0* r137Full_attribute_name(void);
extern T0*oBC207stack;
extern int fBC207stack;
T0* r207stack(void);
void r207on_content(T0* a1);
void r207print_on(T207* C,T0* a1);
T0* r207clone(T0* a1);
void r207out_in_tagged_out_memory(T207* C);
void r207on_start_tag(T207* C,T0* a1,T0* a2,T0* a3);
T0* r207twin(T207* C);
void r207make_from_imp(T207* C,T0* a1);
void r105delete_directory(T105* C,T0* a1);
T0* r105current_working_directory(T105* C);
void r105print_on(T105* C,T0* a1);
T0* r105clone(T0* a1);
void r105delete_file(T105* C,T0* a1);
void r105create_directory(T105* C,T0* a1);
void r105out_in_tagged_out_memory(T105* C);
void r105set_current_working_directory(T105* C,T0* a1);
void r105delete(T105* C,T0* a1);
T0* r105twin(T105* C);
void r133make_from_element(T133* C,T0* a1,T0* a2);
void r133print_on(T133* C,T0* a1);
void r133out_in_tagged_out_memory(T133* C);
T0* r133uc_attribute_value(T133* C,T0* a1,T0* a2);
extern T0*oBC133Value_attribute_name;
extern int fBC133Value_attribute_name;
T0* r133Value_attribute_name(void);
void r133_74Pmake_from_element(T133* C,T0* a1,T0* a2);
T0* r133Name_attribute_name(void);
T6 r133has_uc_attribute(T0* a1,T0* a2);
T0* r133variables(T133* C);
T0* r133twin(T133* C);
T6 r133is_executable(T133* C);
void r49print_on(T49* C,T0* a1);
void r49out_in_tagged_out_memory(T49* C);
T0* r49twin(T49* C);
void r49put_character(T49* C,T3 a1);
void r49put_string(T49* C,T0* a1);
T0* r112expanded_variable_value(T112* C,T0* a1);
T0* r112environment_variable_value(T0* a1);
T0* r112variable_value(T112* C,T0* a1);
void r112print_on(T112* C,T0* a1);
T0* r112clone(T0* a1);
void r112out_in_tagged_out_memory(T112* C);
void r112make(T112* C);
extern T0*oBC22Execution_environment;
T0* r112interpreted_string(T112* C,T0* a1);
void r112set_variable_value(T112* C,T0* a1,T0* a2);
T0* r112twin(T112* C);
T6 r112has_variable(T112* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r280command_arguments(void);
void r280print_on(T280* C,T0* a1);
void r280out_in_tagged_out_memory(T280* C);
T0* r280twin(T280* C);
T0* r280argument(T2 a1);
void r227print_on(T227* C,T0* a1);
void r227out_in_tagged_out_memory(T227* C);
void r227make(T227* C);
T0* r227new_eiffel_event_parser_imp(T227* C);
T0* r227twin(T227* C);
void r135make_from_element(T135* C,T0* a1,T0* a2);
extern T0*oBC135Xace_filename_attribute_name;
extern int fBC135Xace_filename_attribute_name;
T0* r135Xace_filename_attribute_name(void);
extern T0*oBC135Command_attribute_name;
extern int fBC135Command_attribute_name;
T0* r135Command_attribute_name(void);
void r135print_on(T135* C,T0* a1);
T0* r135clone(T0* a1);
extern T0*oBC135Compile_attribute_name;
extern int fBC135Compile_attribute_name;
T0* r135Compile_attribute_name(void);
extern T0*oBC135Options_attribute_name;
extern int fBC135Options_attribute_name;
T0* r135Options_attribute_name(void);
void r135out_in_tagged_out_memory(T135* C);
T6 r135uc_boolean_value(T135* C,T0* a1,T0* a2);
void r135make(T135* C);
T0* r135True_attribute_value(void);
T0* r135uc_attribute_value(T135* C,T0* a1,T0* a2);
void r135print(T0* a1);
void r135_74Pmake_from_element(T135* C,T0* a1,T0* a2);
void r135execute(T135* C);
T6 r135has_uc_attribute(T0* a1,T0* a2);
T0* r135uc_attribute_value_or_default(T135* C,T0* a1,T0* a2,T0* a3);
extern T0*oBC135Command_options_attribute_name;
extern int fBC135Command_options_attribute_name;
T0* r135Command_options_attribute_name(void);
T0* r135False_attribute_value(void);
T0* r135attribute_value_or_default(T135* C,T0* a1,T0* a2,T0* a3);
T0* r135variables(T135* C);
T0* r135twin(T135* C);
T6 r135uc_boolean_value_or_default(T135* C,T0* a1,T0* a2,T6 a3);
void r135execute_shell(T0* a1);
T6 r135is_executable(T135* C);
void r17read_command_line(T17* C);
void r17print_on(T17* C,T0* a1);
T0* r17clone(T0* a1);
void r17out_in_tagged_out_memory(T17* C);
void r17report_usage_message(T17* C);
T0* r17Arguments(void);
void r17make(T17* C);
void r17print(T0* a1);
void r17report_version_number(T17* C);
T0* r17twin(T17* C);
extern T0*oBC17Usage_message;
extern int fBC17Usage_message;
T0* r17Usage_message(void);
void r17report_usage_error(T17* C);
extern T0*oBC257error;
extern int fBC257error;
T0* r257error(void);
void r257print_on(T257* C,T0* a1);
void r257out_in_tagged_out_memory(T257* C);
extern T0*oBC257input;
extern int fBC257input;
T0* r257input(void);
extern T0*oBC257output;
extern int fBC257output;
T0* r257output(void);
T0* r257twin(T257* C);
void r107print_on(T107* C,T0* a1);
void r107out_in_tagged_out_memory(T107* C);
T0* r107twin(T107* C);
void r45raise(T45* C,T0* a1);
void r45print_on(T45* C,T0* a1);
void r45out_in_tagged_out_memory(T45* C);
T0* r45twin(T45* C);
extern T0*oBC46developer_exception_name_memory;
void r46raise(T46* C,T0* a1);
void r46print_on(T46* C,T0* a1);
void r46out_in_tagged_out_memory(T46* C);
T0* r46twin(T46* C);
void r47print_on(T47* C,T0* a1);
T0* r47twin(T47* C);
void r54print_on(T54* C,T0* a1);
void r54out_in_tagged_out_memory(T54* C);
T0* r54twin(T54* C);
void r108print_on(T108* C,T0* a1);
void r108out_in_tagged_out_memory(T108* C);
T0* r108to_hexadecimal(T2 a1,T6 a2);
T3 r108to_character(T2 a1);
T0* r108twin(T108* C);
void r108append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC81factory;
extern int fBC81factory;
T0* r81factory(void);
void r81print_on(T81* C,T0* a1);
void r81out_in_tagged_out_memory(T81* C);
T0* r81twin(T81* C);
void r337print_on(T337* C,T0* a1);
void r337out_in_tagged_out_memory(T337* C);
T0* r337twin(T337* C);
void r44print_on(T44* C,T0* a1);
T0* r44twin(T44* C);
void r233print_on(T233* C,T0* a1);
void r233out_in_tagged_out_memory(T233* C);
T0* r233twin(T233* C);
T0* r294make_file_open_read(T0* a1);
void r294print_on(T294* C,T0* a1);
void r294out_in_tagged_out_memory(T294* C);
void r294close(T0* a1);
T6 r294end_of_input(T0* a1);
T2 r294read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r294twin(T294* C);
void r106connect_to_current_working_directory(T106* C);
void r106disconnect(T106* C);
T6 r106remove_directory(T106* C,T0* a1);
extern T0*oBC106last_entry;
void r106change_current_working_directory(T106* C,T0* a1);
T6 r106create_new_directory(T106* C,T0* a1);
void r109print_on(T109* C,T0* a1);
void r109out_in_tagged_out_memory(T109* C);
T6 r109is_integer(T0* a1);
T0* r109make(T2 a1);
T0* r109twin(T109* C);
T0* r90out(T90* C);
extern T0*oBC93Platform;
T3 r90as_character(T90* C);
T6 r90_px_60(T90* C,T90 a1);
T6 r90_px_62(T90* C,T90 a1);
T0* r90as_hexadecimal(T90* C);
T3 r90code_to_character(T2 a1);
extern T0*oBC92INTEGER_;
T0* r113variable_value(T113* C,T0* a1);
void r113print_on(T113* C,T0* a1);
void r113out_in_tagged_out_memory(T113* C);
T0* r113get_environment_variable(T113* C,T0* a1);
T0* r113twin(T113* C);
T2 r291nr_of_following_octets(T3 a1);
void r291print_on(T291* C,T0* a1);
void r291read_code(T291* C,T0* a1,T2 a2);
void r291out_in_tagged_out_memory(T291* C);
void r291put_code(T2 a1,T0* a2,T2 a3);
void r291read_following_octet(T291* C,T0* a1);
T3 r291code_to_character(T2 a1);
T2 r291octet_size(T2 a1);
T0* r291twin(T291* C);
extern T0*oBC291specific;
T6 r291is_leading_octet(T3 a1);
T2 r291read_leading_octet(T291* C,T0* a1,T2 a2);
void r231print_on(T231* C,T0* a1);
void r231out_in_tagged_out_memory(T231* C);
T0* r231twin(T231* C);
void r51print_on(T51* C,T0* a1);
T0* r51twin(T51* C);
T0* r266substring(T0* a1,T2 a2,T2 a3);
void r266print_on(T266* C,T0* a1);
void r266out_in_tagged_out_memory(T266* C);
void r266move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r266make(T2 a1);
T0* r266resize(T0* a1,T2 a2);
T2 r266copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r266twin(T266* C);
void r338print_on(T338* C,T0* a1);
void r338out_in_tagged_out_memory(T338* C);
T0* r338twin(T338* C);
T0* r232new_event_parser_imp(void);
extern T17*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 339
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms41_10;
extern T7*ms181_199275083;
extern T7*ms7_241908472;
extern T7*ms61_2124547;
extern T7*ms130_10;
extern T7*ms133_89261;
extern T7*ms136_2015137;
extern T7*ms136_2015115;
extern T7*ms74_689092889;
extern T7*ms138_0aa;
extern T7*ms132_10;
extern T7*ms132_32;
extern T7*ms182_84112147;
extern T7*ms20_80091;
extern T7*ms20_80325;
extern T7*ms136_2499240;
extern T7*ms24_1479;
extern T7*ms20_3294;
extern T7*ms41_205;
extern T7*ms20_3549;
extern T7*ms41_10a;
extern T7*ms41_256;
extern T7*ms182_400487;
extern T7*ms140_10;
extern T7*ms140_32;
extern T7*ms140_0a;
extern T7*ms41_627;
extern T7*ms291_336971577;
extern T7*ms61_251;
extern T7*ms136_1070;
extern T7*ms138_84117997;
extern T7*ms136_10;
extern T7*ms139_2053971565;
extern T7*ms136_32;
extern T7*ms17_80091;
extern T7*ms20_79251;
extern T7*ms131_1544179189;
extern T7*ms132_3294;
extern T7*ms41_1964115;
extern T7*ms29_132132847;
extern T7*ms17_184927;
extern T7*ms142_10;
extern T7*ms142_32;
extern T7*ms20_84639;
extern T7*ms142_0a;
extern T7*ms110_254031466;
extern T7*ms138_1642;
extern T7*ms138_1647;
extern T7*ms138_1652;
extern T7*ms138_1702;
extern T7*ms138_1662;
extern T7*ms138_1712;
extern T7*ms138_1667;
extern T7*ms138_1682;
extern T7*ms138_1732;
extern T7*ms138_1752;
extern T7*ms138_1757;
extern T7*ms138_10;
extern T7*ms138_32;
extern T7*ms138_0a;
extern T7*ms137_1801319434;
extern T7*ms6_79251;
extern T7*ms110_276875365;
extern T7*ms17_323;
extern T7*ms17_329;
extern T7*ms17_288;
extern T7*ms17_343;
extern T7*ms132_5586;
extern T7*ms137_2188516;
extern T7*ms41_378995502;
extern T7*ms139_233543607;
extern T7*ms129_254031466;
extern T7*ms135_203658589;
extern T7*ms7_280756769;
extern T7*ms136_420622897;
extern T7*ms29_803892311;
extern T7*ms29_1404162515a;
extern T7*ms111_32a;
extern T7*ms112_16011;
extern T7*ms131_254031466;
extern T7*ms41_768830101;
extern T7*ms283_447851;
extern T7*ms20_0;
extern T7*ms142_16824172;
extern T7*ms110_2020550321;
extern T7*ms17_437033991;
extern T7*ms141_273766641;
extern T7*ms185_49442341;
extern T7*ms111_1749788964;
extern T7*ms112_125;
extern T7*ms29_924849867;
extern T7*ms112_303;
extern T7*ms240_195717202;
extern T7*ms276_1158552108;
extern T7*ms181_440571;
extern T7*ms20_403021;
extern T7*ms141_391651;
extern T7*ms142_16072;
extern T7*ms138_401657;
extern T7*ms20_403144;
extern T7*ms20_402716;
extern T7*ms17_23342040;
extern T7*ms137_16323;
extern T7*ms135_884663453;
extern T7*ms110_109478249;
extern T7*ms7_1983847;
extern T7*ms183_2108041;
extern T7*ms132_3367222;
extern T7*ms180_2013612;
extern T7*ms187_49442341;
extern T7*ms135_2173440;
extern T7*ms29_10aaa;
extern T7*ms182_437033991;
extern T7*ms137_17711;
extern T7*ms17_23340076;
extern T7*ms41_205aa;
extern T7*ms29_1299730420;
extern T7*ms41_118887899;
extern T7*ms74_2048314391;
extern T7*ms20_16072;
extern T7*ms139_395979239;
extern T7*ms20_15731;
extern T7*ms20_16229;
extern T7*ms61_4763922;
extern T7*ms20_16821;
extern T7*ms20_18036;
extern T7*ms140_2015752;
extern T7*ms111_783684216;
extern T7*ms100_0;
extern T7*ms180_10;
extern T7*ms287_447584;
extern T7*ms180_420615272;
extern T7*ms41_10aaa;
extern T7*ms20_247356966;
extern T7*ms110_0;
extern T7*ms112_0;
extern T7*ms6_18036;
extern T7*ms282_1515383187;
extern T7*ms41_1784507747a;
extern T7*ms182_10;
extern T7*ms182_32;
extern T7*ms136_420622897a;
extern T7*ms112_16011a;
extern T7*ms137_267582581;
extern T7*ms41_451090;
extern T7*ms140_0;
extern T7*ms135_0;
extern T7*ms136_0;
extern T7*ms184_10;
extern T7*ms142_0;
extern T7*ms188_420355647;
extern T7*ms138_0;
extern T7*ms17_1771134706;
extern T7*ms111_5712;
extern T7*ms29_1510;
extern T7*ms142_1093;
extern T7*ms137_10531885;
extern T7*ms258_89510;
extern T7*ms186_10;
extern T7*ms140_1712;
extern T7*ms140_1737;
extern T7*ms140_1747;
extern T7*ms140_1757;
extern T7*ms29_10aa;
extern T7*ms41_205a;
extern T7*ms91_577;
extern T7*ms181_16016;
extern T7*ms181_16202;
extern T7*ms74_915611166;
extern T7*ms137_3135;
extern T7*ms41_10aa;
extern T7*ms41_3139;
extern T7*ms188_10;
extern T7*ms41_256a;
extern T7*ms140_420625972;
extern T7*ms110_388005040;
extern T7*ms137_1294433551;
extern T7*ms139_1801319434;
extern T7*ms130_16828097;
extern T7*ms140_32aa;
extern T7*ms140_32a;
extern T7*ms137_388005040;
extern T7*ms246_1338477769;
extern T7*ms137_2142980;
extern T7*ms20_1957581;
extern T7*ms112_16011aa;
extern T7*ms291_1684857857;
extern T7*ms246_1338477769a;
extern T7*ms29_1404162515;
extern T7*ms29_1569122284;
extern T7*ms179_247314766;
extern T7*ms41_112110024;
extern T7*ms61_14150;
extern T7*ms41_10aaaa;
extern T7*ms136_1070a;
extern T7*ms20_440571;
extern T7*ms1_14150;
extern T7*ms110_9516016;
extern T7*ms137_382622;
extern T7*ms111_16686;
extern T7*ms41_1367980604;
extern T7*ms141_51813516;
extern T7*ms20_392331;
extern T7*ms136_10a;
extern T7*ms135_1979141;
extern T7*ms135_1978575;
extern T7*ms61_5426;
extern T7*ms17_1316598903;
extern T7*ms182_1647;
extern T7*ms111_10;
extern T7*ms111_32;
extern T7*ms20_1228681540;
extern T7*ms112_0a;
extern T7*ms41_1198723604;
extern T7*ms186_84225847;
extern T7*ms139_1584732821;
extern T7*ms29_525058193;
extern T7*ms111_1979141;
extern T7*ms41_1784507747;
extern T7*ms29_180;
extern T7*ms29_10a;
extern T7*ms20_247395676;
extern T7*ms187_16016;
extern T7*ms41_1145887148;
extern T7*ms142_32a;
extern T7*ms184_16815647;
extern T7*ms111_9895737;
extern T7*ms237_1173251759;
extern T7*ms29_10;
extern T7*ms29_41;
extern T7*ms111_658766397;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void*se_ma87(int argc,...);
void X50put_character(T0*C,T3 a1);
void X50put_string(T0*C,T0* a1);
void X74execute(T0*C);
T6 X74is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X1print_on(T0*C,T0* a1);
void X253clear_all(T0*C,T0* a1);
T0* X253make(T0*C,T2 a1);
T0* X253resize(T0*C,T0* a1,T2 a2);
void X46raise(T0*C,T0* a1);
T2 X250count(T0*C);
T2 X250item(T0*C,T2 a1);
T2 X250lower(T0*C);
void X252put(T0*C,T0* a1,T2 a2);
T0* X252item(T0*C,T2 a1);
void X252set_all_with(T0*C,T0* a1);
void X252resize(T0*C,T2 a1);
T2 X80item_code(T0*C,T2 a1);
void X80insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X80remove(T0*C,T2 a1,T2 a2);
void X80insert_code(T0*C,T2 a1,T2 a2);
void X260read_character(T0*C);
T6 X260end_of_input(T0*C);
T3 X260last_character(T0*C);
T0* X277default_message(T0*C);
void X100delete_file(T0*C,T0* a1);
T0* T234toT233(int source);
T0* T232toT231(int source);
T0* T2toT47(T2 source);
T2 T47toT2(T0* source);

#ifdef __cplusplus
}
#endif
