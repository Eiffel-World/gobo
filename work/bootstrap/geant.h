#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #9 (Sunday October 21th 2001)
Copyright (C), 1994-2001 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O2 -nologo -D"WIN32" -w
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of 
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/* 
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/* 
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/* 
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/* 
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/* 
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/* 
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S387 T387;
typedef struct S248 T248;
typedef struct S173 T173;
typedef int T287;
typedef struct S397 T397;
typedef struct S363 T363;
typedef struct S204 T204;
typedef struct S227 T227;
typedef struct S304 T304;
typedef struct S282 T282;
typedef struct S61 T61;
typedef struct S162 T162;
typedef struct S65 T65;
typedef struct S16 T16;
typedef struct S180 T180;
typedef struct S209 T209;
typedef struct S335 T335;
typedef int T310;
typedef struct S332 T332;
typedef struct S200 T200;
typedef struct S85 T85;
typedef struct S179 T179;
typedef struct S131 T131;
typedef struct S48 T48;
typedef struct S325 T325;
typedef struct S49 T49;
typedef struct S123 T123;
typedef struct S373 T373;
typedef struct S120 T120;
typedef struct S333 T333;
typedef struct S337 T337;
typedef struct S46 T46;
typedef struct S153 T153;
typedef struct S216 T216;
typedef struct S230 T230;
typedef struct S391 T391;
typedef struct S214 T214;
typedef struct S218 T218;
typedef struct S177 T177;
typedef struct S199 T199;
typedef struct S418 T418;
typedef struct S53 T53;
typedef struct S413 T413;
typedef struct S234 T234;
typedef struct S72 T72;
typedef struct S166 T166;
typedef struct S417 T417;
typedef struct S132 T132;
typedef struct S217 T217;
typedef struct S79 T79;
typedef struct S419 T419;
typedef struct S345 T345;
typedef struct S374 T374;
typedef struct S221 T221;
typedef struct S138 T138;
typedef struct S360 T360;
typedef struct S213 T213;
typedef struct S201 T201;
typedef struct S203 T203;
typedef struct S368 T368;
typedef struct S170 T170;
typedef struct S45 T45;
typedef struct S362 T362;
typedef struct S222 T222;
typedef struct S251 T251;
typedef struct S103 T103;
typedef struct S284 T284;
typedef struct S7 T7;
typedef struct S355 T355;
typedef struct S211 T211;
typedef struct S279 T279;
typedef struct S223 T223;
typedef struct S295 T295;
typedef struct S401 T401;
typedef struct S42 T42;
typedef struct S400 T400;
typedef struct S194 T194;
typedef struct S197 T197;
typedef struct S309 T309;
typedef struct S225 T225;
typedef struct S59 T59;
typedef struct S156 T156;
typedef struct S167 T167;
typedef struct S164 T164;
typedef struct S258 T258;
typedef struct S140 T140;
typedef struct S370 T370;
typedef struct S77 T77;
typedef struct S232 T232;
typedef struct S219 T219;
typedef struct S82 T82;
typedef struct S212 T212;
typedef struct S137 T137;
typedef struct S372 T372;
typedef struct S133 T133;
typedef struct S224 T224;
typedef struct S268 T268;
typedef struct S81 T81;
typedef struct S24 T24;
typedef struct S174 T174;
typedef struct S253 T253;
typedef struct S172 T172;
typedef struct S27 T27;
typedef struct S101 T101;
typedef struct S220 T220;
typedef struct S67 T67;
typedef struct S256 T256;
typedef struct S202 T202;
typedef struct S96 T96;
typedef struct S89 T89;
typedef struct S252 T252;
typedef struct S366 T366;
typedef struct S175 T175;
typedef struct S395 T395;
typedef struct S330 T330;
typedef struct S346 T346;
typedef struct S163 T163;
typedef struct S307 T307;
typedef struct S347 T347;
typedef struct S169 T169;
typedef struct S139 T139;
typedef struct S124 T124;
typedef struct S342 T342;
typedef struct S128 T128;
typedef struct S324 T324;
typedef struct S88 T88;
typedef struct S168 T168;
typedef struct S83 T83;
typedef struct S215 T215;
typedef struct S52 T52;
typedef struct S311 T311;
typedef struct S198 T198;
typedef struct S261 T261;
typedef struct S231 T231;
typedef struct S100 T100;
typedef struct S331 T331;
typedef struct S420 T420;
typedef struct S136 T136;
typedef struct S369 T369;
typedef int T308;
typedef struct S171 T171;
typedef struct S50 T50;
typedef struct S165 T165;
typedef struct S87 T87;
typedef struct S343 T343;
typedef struct S64 T64;
typedef struct S303 T303;
typedef struct S349 T349;
typedef struct S178 T178;
typedef struct S237 T237;
typedef struct S176 T176;
typedef struct S226 T226;

/*C Header Pass 2 :*/
typedef T0**T105;
typedef T0**T158;
typedef T0**T255;
typedef T0**T78;
typedef T3*T9;
typedef T0**T130;
typedef T2*T86;
typedef T0**T236;
typedef T0**T328;

/*C Header Pass 3 :*/
extern T310 M310;
struct S362{T5 _time_memory;};
int se_cmpT362(T362 o1,T362 o2);
struct S137{T8 _directory_stream;T8 _current_entry;};
int se_cmpT137(T137 o1,T137 o2);
struct S67{T2 _i_code;};
int se_cmpT67(T67 o1,T67 o2);
extern T308 M308;

/*C Header Pass 4 :*/
struct S387{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T387 M387;
struct S248{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T248 M248;
struct S173{Tid id;T2 _exit_code;T0* _project;T0* _executable;T0* _source_filename;};
extern T173 M173;
extern T287 M287;
struct S397{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T397 M397;
struct S363{Tid id;T5 _item;};
extern T363 M363;
struct S204{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T204 M204;
struct S227{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T227 M227;
struct S304{Tid id;T0* _event_parser_factory;};
extern T304 M304;
struct S282{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T6 _end_of_file;T0* _character_buffer;};
extern T282 M282;
struct S61{Tid id;T0* _attributes;T0* _children;T0* _name;T0* _content;};
extern T61 M61;
struct S162{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T162 M162;
struct S65{Tid id;T0* _name;T0* _value;};
extern T65 M65;
struct S16{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;};
extern T16 M16;
struct S180{Tid id;T2 _exit_code;T0* _project;T6 _verbose;T0* _system_command;T0* _cluster_command;T6 _validate_command;T0* _xace_filename;T0* _output_filename;T0* _defines;};
extern T180 M180;
struct S209{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T209 M209;
struct S335{Tid id;T0* _parameters;};
extern T335 M335;
struct S332{Tid id;};
extern T332 M332;
struct S200{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T200 M200;
struct S85{Tid id;T86 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T85 M85;
struct S179{Tid id;T0* _project;T0* _xml_element;};
extern T179 M179;
struct S131{Tid id;};
extern T131 M131;
struct S48{Tid id;};
extern T48 M48;
struct S325{Tid id;};
extern T325 M325;
struct S49{Tid id;};
extern T49 M49;
struct S123{Tid id;};
extern T123 M123;
struct S373{Tid id;T0* _first;T0* _second;};
extern T373 M373;
struct S120{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T120 M120;
struct S333{Tid id;T6 _push_back_flag;T137 _basic_directory;T2 _memory;T0* _name;T6 _end_of_file;};
extern T333 M333;
struct S337{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T337 M337;
struct S46{Tid id;T2 _item;};
extern T46 M46;
struct S153{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T153 M153;
struct S216{Tid id;T2 _exit_code;T0* _project;T0* _message;};
extern T216 M216;
struct S230{Tid id;T0* _first;T0* _second;};
extern T230 M230;
struct S391{Tid id;T0* _item;T0* _right;};
extern T391 M391;
struct S214{Tid id;T2 _exit_code;T0* _project;T0* _filename;T6 _reuse_variables;T0* _start_target_name;};
extern T214 M214;
struct S218{Tid id;T2 _exit_code;T0* _project;T0* _directory;};
extern T218 M218;
struct S177{Tid id;T2 _exit_code;T0* _project;T0* _name;};
extern T177 M177;
struct S199{Tid id;T2 _exit_code;T0* _project;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T199 M199;
struct S418{Tid id;};
extern T418 M418;
struct S53{Tid id;T8 _item;};
extern T53 M53;
struct S413{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T413 M413;
struct S234{Tid id;T236 _storage;T2 _capacity;T2 _upper;};
extern T234 M234;
struct S72{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T72 M72;
struct S166{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T166 M166;
struct S417{Tid id;};
extern T417 M417;
struct S132{Tid id;};
extern T132 M132;
struct S217{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T217 M217;
struct S79{Tid id;};
extern T79 M79;
struct S419{Tid id;};
extern T419 M419;
struct S345{Tid id;T0* _parameters;};
extern T345 M345;
struct S374{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T374 M374;
struct S221{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T221 M221;
struct S138{Tid id;T137 _basic_directory;};
extern T138 M138;
struct S360{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T360 M360;
struct S213{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T213 M213;
struct S201{Tid id;T2 _exit_code;T0* _project;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T201 M201;
struct S203{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;};
extern T203 M203;
struct S368{Tid id;T0* _item;};
extern T368 M368;
struct S170{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T170 M170;
struct S45{Tid id;T6 _item;};
extern T45 M45;
extern T362 M362;
struct S222{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;};
extern T222 M222;
struct S251{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T251 M251;
struct S103{Tid id;T105 _storage;T2 _capacity;T2 _upper;};
extern T103 M103;
struct S284{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T284 M284;
struct S355{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T355 M355;
struct S211{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T211 M211;
struct S279{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T279 M279;
struct S223{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T223 M223;
struct S295{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _entry_buffer;T137 _basic_directory;};
extern T295 M295;
struct S401{Tid id;};
extern T401 M401;
struct S400{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T400 M400;
struct S194{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T194 M194;
struct S197{Tid id;};
extern T197 M197;
struct S309{Tid id;};
extern T309 M309;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S225{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T225 M225;
struct S59{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T59 M59;
struct S156{Tid id;T158 _storage;T2 _capacity;T2 _upper;};
extern T156 M156;
struct S167{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _fish;T0* _clean;};
extern T167 M167;
struct S164{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T164 M164;
struct S258{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T258 M258;
struct S140{Tid id;};
extern T140 M140;
struct S370{Tid id;};
extern T370 M370;
struct S77{Tid id;T78 _storage;T2 _capacity;T2 _upper;};
extern T77 M77;
struct S232{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T232 M232;
struct S219{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T219 M219;
struct S82{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T82 M82;
struct S212{Tid id;T2 _exit_code;T0* _project;T0* _config_filename;T0* _compile;T0* _defines;};
extern T212 M212;
extern T137 M137;
struct S372{Tid id;T0* _first;T0* _second;};
extern T372 M372;
struct S133{Tid id;};
extern T133 M133;
struct S224{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;};
extern T224 M224;
struct S268{Tid id;T0* _project;T0* _xml_element;};
extern T268 M268;
struct S81{Tid id;T2 _type;};
extern T81 M81;
struct S174{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T174 M174;
struct S253{Tid id;T255 _storage;T2 _capacity;T2 _upper;};
extern T253 M253;
struct S172{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T172 M172;
struct S27{Tid id;T0* _build_filename;T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T0* _parent_project;T0* _child_project;T0* _current_target;T0* _project_element;};
extern T27 M27;
struct S24{Tid id;T0* _i_representation;};
extern T24 M24;
struct S101{Tid id;T86 _storage;T2 _capacity;T2 _upper;};
extern T101 M101;
struct S220{Tid id;T2 _exit_code;T0* _project;T0* _directory;T0* _file;};
extern T220 M220;
extern T67 M67;
struct S256{Tid id;};
extern T256 M256;
struct S202{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T202 M202;
struct S96{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T96 M96;
struct S89{Tid id;};
extern T89 M89;
struct S252{Tid id;T2 _exit_code;T0* _project;T0* _source_filenames;T0* _target_filename;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;};
extern T252 M252;
struct S366{Tid id;T2 _last_code;T2 _next_pos;};
extern T366 M366;
struct S175{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T175 M175;
struct S395{Tid id;T0* _uri;};
extern T395 M395;
struct S330{Tid id;T0* _content;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T2 _upper;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T330 M330;
struct S346{Tid id;T137 _basic_directory;T0* _name;};
extern T346 M346;
struct S163{Tid id;T2 _exit_code;T0* _project;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T163 M163;
struct S307{Tid id;};
extern T307 M307;
struct S347{Tid id;T137 _basic_directory;T0* _name;};
extern T347 M347;
struct S169{Tid id;T2 _exit_code;T0* _project;T0* _esd_filename;T0* _clean;T6 _recursive_clean;T0* _tuned_system;T0* _tuning_level;};
extern T169 M169;
struct S139{Tid id;T137 _basic_directory;};
extern T139 M139;
struct S42{Tid id;T0* _project;T0* _xml_element;T0* _name;T6 _is_executed;};
extern T42 M42;
struct S124{Tid id;};
extern T124 M124;
struct S342{Tid id;T105 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T342 M342;
struct S128{Tid id;T130 _storage;T2 _capacity;T2 _upper;};
extern T128 M128;
struct S324{Tid id;T328 _storage;T2 _capacity;T2 _upper;};
extern T324 M324;
struct S88{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T88 M88;
struct S168{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T168 M168;
struct S83{Tid id;T2 _count;T0* _storage;};
extern T83 M83;
struct S215{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T215 M215;
struct S52{Tid id;T3 _item;};
extern T52 M52;
struct S311{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_position;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T311 M311;
struct S198{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T198 M198;
struct S261{Tid id;T0* _implementation;T0* _root_element;};
extern T261 M261;
struct S231{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;};
extern T231 M231;
struct S100{Tid id;};
extern T100 M100;
struct S331{Tid id;};
extern T331 M331;
struct S420{Tid id;};
extern T420 M420;
struct S136{Tid id;T137 _basic_directory;};
extern T136 M136;
struct S369{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T369 M369;
struct S171{Tid id;T2 _exit_code;T0* _project;T0* _command_line;};
extern T171 M171;
struct S50{Tid id;};
extern T50 M50;
struct S165{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _finish_freezing;T0* _clean;};
extern T165 M165;
struct S87{Tid id;T0* _variables;};
extern T87 M87;
struct S343{Tid id;T0* _program_name;};
extern T343 M343;
struct S64{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T64 M64;
struct S303{Tid id;int _ef_event_fact;int _ep_event_fact;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T303 M303;
struct S349{Tid id;T0* _command;T2 _exit_code;};
extern T349 M349;
struct S178{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T178 M178;
struct S237{Tid id;};
extern T237 M237;
struct S176{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T176 M176;
struct S226{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T226 M226;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included 
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/* 
   This will be the structure of rescue contexts.  A rescue context 
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_fstat.h) is automatically 
  included when some external "SmallEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_mtime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically 
  included when some external "SmallEiffel" basic_sprintf_* feature is used.
*/

void basic_sprintf_double(char*b, int f, double d);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically 
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

EIF_POINTER basic_getenv(EIF_POINTER name);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_time.h) is automatically 
  included when some external "SmallEiffel" feature of class BASIC_TIME
  is used (ie. in live code).
*/
#include <time.h>

#ifdef WIN32
#include <windows.h>
#endif

#define basic_time_clock (clock())
#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, 
			     EIF_INTEGER mon,
			     EIF_INTEGER mday,
			     EIF_INTEGER hour,
			     EIF_INTEGER min,
			     EIF_INTEGER sec);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT 
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of 
-- another product.
--          Copyright (C) 1994-98 LORIA - UHP - CRIN - INRIA - FRANCE
--            Dominique COLNET and Suzanne COLLIN - colnet@loria.fr 
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically 
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
void r2append_in(T2 C,T0* a1);
extern T9 oBC5sprintf_buffer;
extern int fBC5sprintf_buffer;
T9 r5sprintf_buffer(void);
void r5append_in_format(T5 C,T0* a1,T2 a2);
void r105clear_all(T105 C,T2 a1);
T105 r105realloc(T105 C,T2 a1,T2 a2);
void r105move(T105 C,T2 a1,T2 a2,T2 a3);
void r105set_all_with(T105 C,T0* a1,T2 a2);
void r105clear(T105 C,T2 a1,T2 a2);
void r105copy_from(T105 C,T105 a1,T2 a2);
void r158clear_all(T158 C,T2 a1);
T158 r158realloc(T158 C,T2 a1,T2 a2);
void r158set_all_with(T158 C,T0* a1,T2 a2);
void r158clear(T158 C,T2 a1,T2 a2);
void r158copy_from(T158 C,T158 a1,T2 a2);
void r255clear_all(T255 C,T2 a1);
T255 r255realloc(T255 C,T2 a1,T2 a2);
void r255set_all_with(T255 C,T0* a1,T2 a2);
void r255clear(T255 C,T2 a1,T2 a2);
void r255copy_from(T255 C,T255 a1,T2 a2);
void r78clear_all(T78 C,T2 a1);
T78 r78realloc(T78 C,T2 a1,T2 a2);
void r78set_all_with(T78 C,T0* a1,T2 a2);
void r78clear(T78 C,T2 a1,T2 a2);
void r78copy_from(T78 C,T78 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r130clear_all(T130 C,T2 a1);
T130 r130realloc(T130 C,T2 a1,T2 a2);
void r130set_all_with(T130 C,T0* a1,T2 a2);
void r130clear(T130 C,T2 a1,T2 a2);
void r130copy_from(T130 C,T130 a1,T2 a2);
void r86clear_all(T86 C,T2 a1);
T86 r86realloc(T86 C,T2 a1,T2 a2);
void r86move(T86 C,T2 a1,T2 a2,T2 a3);
void r86set_all_with(T86 C,T2 a1,T2 a2);
void r86clear(T86 C,T2 a1,T2 a2);
void r86copy_from(T86 C,T86 a1,T2 a2);
void r236clear_all(T236 C,T2 a1);
T236 r236realloc(T236 C,T2 a1,T2 a2);
void r236set_all_with(T236 C,T0* a1,T2 a2);
void r236clear(T236 C,T2 a1,T2 a2);
void r236copy_from(T236 C,T236 a1,T2 a2);
void r328clear_all(T328 C,T2 a1);
T328 r328realloc(T328 C,T2 a1,T2 a2);
void r328set_all_with(T328 C,T0* a1,T2 a2);
void r328clear(T328 C,T2 a1,T2 a2);
void r328copy_from(T328 C,T328 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
T6 r7conforms_to(T7* C,T0* a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r85copy(T85* C,T0* a1);
T2 r85count(T85* C);
T2 r85item(T85* C,T2 a1);
T6 r85se_assigned_from(T0* a1);
void r85print_on(T85* C,T0* a1);
void r85out_in_tagged_out_memory(T85* C);
void r85make(T85* C,T2 a1,T2 a2);
void r85fill_tagged_out_memory(T85* C);
T6 r85conforms_to(T85* C,T0* a1);
void r85resize(T85* C,T2 a1,T2 a2);
T0* r85twin(T85* C);
void r234copy(T234* C,T0* a1);
T6 r234se_assigned_from(T0* a1);
void r234print_on(T234* C,T0* a1);
void r234out_in_tagged_out_memory(T234* C);
void r234make(T234* C,T2 a1);
void r234fill_tagged_out_memory(T234* C);
T6 r234conforms_to(T234* C,T0* a1);
void r234resize(T234* C,T2 a1);
T0* r234twin(T234* C);
void r103copy(T103* C,T0* a1);
T6 r103se_assigned_from(T0* a1);
void r103print_on(T103* C,T0* a1);
void r103out_in_tagged_out_memory(T103* C);
void r103make(T103* C,T2 a1);
void r103fill_tagged_out_memory(T103* C);
T6 r103conforms_to(T103* C,T0* a1);
void r103resize(T103* C,T2 a1);
T0* r103twin(T103* C);
void r156copy(T156* C,T0* a1);
T6 r156se_assigned_from(T0* a1);
void r156print_on(T156* C,T0* a1);
void r156out_in_tagged_out_memory(T156* C);
void r156make(T156* C,T2 a1);
void r156fill_tagged_out_memory(T156* C);
T6 r156conforms_to(T156* C,T0* a1);
void r156resize(T156* C,T2 a1);
T0* r156twin(T156* C);
void r77copy(T77* C,T0* a1);
T6 r77se_assigned_from(T0* a1);
void r77print_on(T77* C,T0* a1);
void r77out_in_tagged_out_memory(T77* C);
void r77make(T77* C,T2 a1);
void r77fill_tagged_out_memory(T77* C);
T6 r77conforms_to(T77* C,T0* a1);
void r77resize(T77* C,T2 a1);
T0* r77twin(T77* C);
void r253copy(T253* C,T0* a1);
T6 r253se_assigned_from(T0* a1);
void r253print_on(T253* C,T0* a1);
void r253out_in_tagged_out_memory(T253* C);
void r253make(T253* C,T2 a1);
void r253fill_tagged_out_memory(T253* C);
T6 r253conforms_to(T253* C,T0* a1);
void r253resize(T253* C,T2 a1);
T0* r253twin(T253* C);
void r101copy(T101* C,T0* a1);
T6 r101se_assigned_from(T0* a1);
void r101print_on(T101* C,T0* a1);
void r101out_in_tagged_out_memory(T101* C);
void r101make(T101* C,T2 a1);
void r101fill_tagged_out_memory(T101* C);
T6 r101conforms_to(T101* C,T0* a1);
void r101resize(T101* C,T2 a1);
T0* r101twin(T101* C);
void r101with_capacity(T101* C,T2 a1);
void r101from_collection(T101* C,T0* a1);
void r342copy(T342* C,T0* a1);
void r342force(T342* C,T0* a1,T2 a2);
T2 r342count(T342* C);
T0* r342item(T342* C,T2 a1);
T6 r342valid_index(T342* C,T2 a1);
T6 r342se_assigned_from(T0* a1);
void r342print_on(T342* C,T0* a1);
void r342out_in_tagged_out_memory(T342* C);
void r342make(T342* C,T2 a1,T2 a2);
void r342fill_tagged_out_memory(T342* C);
T6 r342conforms_to(T342* C,T0* a1);
void r342add_last(T342* C,T0* a1);
void r342resize(T342* C,T2 a1,T2 a2);
T0* r342twin(T342* C);
void r128copy(T128* C,T0* a1);
T6 r128se_assigned_from(T0* a1);
void r128print_on(T128* C,T0* a1);
void r128out_in_tagged_out_memory(T128* C);
void r128make(T128* C,T2 a1);
void r128fill_tagged_out_memory(T128* C);
T6 r128conforms_to(T128* C,T0* a1);
void r128resize(T128* C,T2 a1);
T0* r128twin(T128* C);
void r324copy(T324* C,T0* a1);
T2 r324count(T324* C);
T0* r324item(T324* C,T2 a1);
T6 r324se_assigned_from(T0* a1);
void r324print_on(T324* C,T0* a1);
void r324out_in_tagged_out_memory(T324* C);
void r324make(T324* C,T2 a1);
void r324fill_tagged_out_memory(T324* C);
T6 r324conforms_to(T324* C,T0* a1);
void r324resize(T324* C,T2 a1);
T0* r324twin(T324* C);
void r387copy(T387* C,T0* a1);
void r387set(T387* C,T0* a1,T6 a2,T6 a3);
T6 r387se_assigned_from(T0* a1);
void r387print_on(T387* C,T0* a1);
void r387out_in_tagged_out_memory(T387* C);
void r387make(T387* C,T0* a1);
T6 r387conforms_to(T387* C,T0* a1);
void r387set_after(T387* C);
T0* r387twin(T387* C);
void r248copy(T248* C,T0* a1);
T6 r248se_assigned_from(T0* a1);
void r248print_on(T248* C,T0* a1);
void r248out_in_tagged_out_memory(T248* C);
T6 r248off(T248* C);
T6 r248conforms_to(T248* C,T0* a1);
T0* r248twin(T248* C);
T2 r397new_capacity(T2 a1);
void r397copy(T397* C,T0* a1);
T6 r397extendible(T397* C,T2 a1);
void r397force(T397* C,T0* a1);
T0* r397item(T397* C);
T6 r397se_assigned_from(T0* a1);
void r397print_on(T397* C,T0* a1);
T0* r397clone(T0* a1);
void r397out_in_tagged_out_memory(T397* C);
void r397make(T397* C,T2 a1);
void r397remove(T397* C);
T6 r397conforms_to(T397* C,T0* a1);
void r397resize(T397* C,T2 a1);
T0* r397twin(T397* C);
T2 r204new_capacity(T2 a1);
void r204copy(T204* C,T0* a1);
T6 r204extendible(T204* C,T2 a1);
void r204remove_traversing_cursor(T204* C,T0* a1);
void r204move_all_cursors_after(T204* C);
void r204add_traversing_cursor(T204* C,T0* a1);
T6 r204se_assigned_from(T0* a1);
void r204print_on(T204* C,T0* a1);
T0* r204clone(T0* a1);
void r204out_in_tagged_out_memory(T204* C);
T6 r204cursor_before(T0* a1);
void r204make(T204* C,T2 a1);
T6 r204cursor_after(T0* a1);
T6 r204conforms_to(T204* C,T0* a1);
void r204resize(T204* C,T2 a1);
T0* r204twin(T204* C);
void r204force_last(T204* C,T0* a1);
T0* r204new_cursor(T204* C);
T6 r204cursor_off(T0* a1);
void r209copy(T209* C,T0* a1);
T6 r209se_assigned_from(T0* a1);
void r209print_on(T209* C,T0* a1);
void r209out_in_tagged_out_memory(T209* C);
T6 r209off(T209* C);
T6 r209conforms_to(T209* C,T0* a1);
T0* r209twin(T209* C);
void r325clear_all(T0* a1);
T6 r325se_assigned_from(T0* a1);
void r325print_on(T325* C,T0* a1);
void r325out_in_tagged_out_memory(T325* C);
T0* r325make(T2 a1);
T6 r325conforms_to(T325* C,T0* a1);
T0* r325resize(T0* a1,T2 a2);
T0* r325twin(T325* C);
T6 r123se_assigned_from(T0* a1);
void r123print_on(T123* C,T0* a1);
void r123out_in_tagged_out_memory(T123* C);
T0* r123to_fixed_array(T0* a1);
T0* r123make(T2 a1);
T0* r123make_from_array(T0* a1);
T6 r123conforms_to(T123* C,T0* a1);
T0* r123resize(T0* a1,T2 a2);
T0* r123twin(T123* C);
T6 r373se_assigned_from(T0* a1);
void r373print_on(T373* C,T0* a1);
void r373out_in_tagged_out_memory(T373* C);
void r373make(T373* C,T0* a1,T0* a2);
T6 r373conforms_to(T373* C,T0* a1);
T0* r373twin(T373* C);
void r120copy(T120* C,T0* a1);
T0* r120key(T120* C);
T0* r120item(T120* C);
T6 r120se_assigned_from(T0* a1);
void r120print_on(T120* C,T0* a1);
void r120out_in_tagged_out_memory(T120* C);
T6 r120after(T120* C);
void r120make(T120* C,T0* a1);
T6 r120off(T120* C);
T6 r120conforms_to(T120* C,T0* a1);
T0* r120twin(T120* C);
void r153copy(T153* C,T0* a1);
T6 r153se_assigned_from(T0* a1);
void r153print_on(T153* C,T0* a1);
void r153out_in_tagged_out_memory(T153* C);
T6 r153off(T153* C);
T6 r153conforms_to(T153* C,T0* a1);
T0* r153twin(T153* C);
T6 r230se_assigned_from(T0* a1);
void r230print_on(T230* C,T0* a1);
void r230out_in_tagged_out_memory(T230* C);
void r230make(T230* C,T0* a1,T0* a2);
T6 r230conforms_to(T230* C,T0* a1);
T0* r230twin(T230* C);
T6 r391se_assigned_from(T0* a1);
void r391print_on(T391* C,T0* a1);
void r391out_in_tagged_out_memory(T391* C);
T6 r391conforms_to(T391* C,T0* a1);
T0* r391twin(T391* C);
void r413copy(T413* C,T0* a1);
T6 r413se_assigned_from(T0* a1);
void r413print_on(T413* C,T0* a1);
void r413out_in_tagged_out_memory(T413* C);
T6 r413off(T413* C);
T6 r413conforms_to(T413* C,T0* a1);
T0* r413twin(T413* C);
T2 r72new_capacity(T2 a1);
void r72copy(T72* C,T0* a1);
T6 r72extendible(T72* C,T2 a1);
void r72remove_traversing_cursor(T72* C,T0* a1);
T0* r72item(T72* C,T2 a1);
void r72move_all_cursors_after(T72* C);
void r72add_traversing_cursor(T72* C,T0* a1);
T6 r72se_assigned_from(T0* a1);
void r72print_on(T72* C,T0* a1);
T0* r72clone(T0* a1);
void r72out_in_tagged_out_memory(T72* C);
T6 r72cursor_before(T0* a1);
void r72make(T72* C,T2 a1);
T6 r72cursor_after(T0* a1);
T6 r72conforms_to(T72* C,T0* a1);
void r72resize(T72* C,T2 a1);
T0* r72twin(T72* C);
void r72force_last(T72* C,T0* a1);
T0* r72new_cursor(T72* C);
T6 r72cursor_off(T0* a1);
void r374copy(T374* C,T0* a1);
T0* r374cursor_item(T0* a1);
void r374remove_traversing_cursor(T374* C,T0* a1);
void r374move_all_cursors_after(T374* C);
void r374add_traversing_cursor(T374* C,T0* a1);
T6 r374se_assigned_from(T0* a1);
void r374print_on(T374* C,T0* a1);
void r374out_in_tagged_out_memory(T374* C);
void r374make(T374* C);
T6 r374cursor_after(T0* a1);
T6 r374conforms_to(T374* C,T0* a1);
void r374cursor_forth(T374* C,T0* a1);
void r374cursor_start(T374* C,T0* a1);
T0* r374twin(T374* C);
T0* r374new_cursor(T374* C);
void r374put_last(T374* C,T0* a1);
T6 r374cursor_off(T0* a1);
T6 r368se_assigned_from(T0* a1);
void r368print_on(T368* C,T0* a1);
void r368out_in_tagged_out_memory(T368* C);
T6 r368conforms_to(T368* C,T0* a1);
T0* r368twin(T368* C);
void r279copy(T279* C,T0* a1);
T6 r279se_assigned_from(T0* a1);
void r279print_on(T279* C,T0* a1);
void r279out_in_tagged_out_memory(T279* C);
T6 r279off(T279* C);
T6 r279conforms_to(T279* C,T0* a1);
T0* r279twin(T279* C);
T6 r401se_assigned_from(T0* a1);
void r401print_on(T401* C,T0* a1);
void r401out_in_tagged_out_memory(T401* C);
T0* r401make(T2 a1);
T6 r401conforms_to(T401* C,T0* a1);
T0* r401resize(T0* a1,T2 a2);
T0* r401twin(T401* C);
void r194copy(T194* C,T0* a1);
T6 r194se_assigned_from(T0* a1);
void r194print_on(T194* C,T0* a1);
void r194out_in_tagged_out_memory(T194* C);
T6 r194off(T194* C);
T6 r194conforms_to(T194* C,T0* a1);
T0* r194twin(T194* C);
T6 r197se_assigned_from(T0* a1);
void r197print_on(T197* C,T0* a1);
void r197out_in_tagged_out_memory(T197* C);
T0* r197make(T2 a1);
T6 r197conforms_to(T197* C,T0* a1);
T0* r197resize(T0* a1,T2 a2);
T0* r197twin(T197* C);
T2 r59new_capacity(T2 a1);
void r59copy(T59* C,T0* a1);
T6 r59extendible(T59* C,T2 a1);
void r59force(T59* C,T0* a1);
T0* r59item(T59* C);
T6 r59se_assigned_from(T0* a1);
void r59print_on(T59* C,T0* a1);
T0* r59clone(T0* a1);
void r59out_in_tagged_out_memory(T59* C);
void r59make(T59* C,T2 a1);
void r59remove(T59* C);
T6 r59conforms_to(T59* C,T0* a1);
void r59resize(T59* C,T2 a1);
T0* r59twin(T59* C);
T2 r258new_capacity(T2 a1);
void r258copy(T258* C,T0* a1);
T6 r258extendible(T258* C,T2 a1);
void r258remove_traversing_cursor(T258* C,T0* a1);
void r258move_all_cursors_after(T258* C);
void r258add_traversing_cursor(T258* C,T0* a1);
T6 r258se_assigned_from(T0* a1);
void r258print_on(T258* C,T0* a1);
T0* r258clone(T0* a1);
void r258out_in_tagged_out_memory(T258* C);
T6 r258cursor_before(T0* a1);
void r258make(T258* C,T2 a1);
T6 r258cursor_after(T0* a1);
T6 r258conforms_to(T258* C,T0* a1);
void r258resize(T258* C,T2 a1);
T0* r258twin(T258* C);
void r258force_last(T258* C,T0* a1);
T0* r258new_cursor(T258* C);
T6 r258cursor_off(T0* a1);
T6 r140se_assigned_from(T0* a1);
void r140print_on(T140* C,T0* a1);
void r140out_in_tagged_out_memory(T140* C);
T0* r140make(T2 a1);
T6 r140conforms_to(T140* C,T0* a1);
T0* r140resize(T0* a1,T2 a2);
T0* r140twin(T140* C);
T2 r232new_capacity(T2 a1);
void r232copy(T232* C,T0* a1);
T6 r232extendible(T232* C,T2 a1);
void r232remove_traversing_cursor(T232* C,T0* a1);
void r232move_all_cursors_after(T232* C);
void r232add_traversing_cursor(T232* C,T0* a1);
T6 r232se_assigned_from(T0* a1);
void r232print_on(T232* C,T0* a1);
T0* r232clone(T0* a1);
void r232out_in_tagged_out_memory(T232* C);
T6 r232cursor_before(T0* a1);
void r232make(T232* C,T2 a1);
T6 r232cursor_after(T0* a1);
T6 r232conforms_to(T232* C,T0* a1);
void r232resize(T232* C,T2 a1);
T0* r232twin(T232* C);
void r232force_last(T232* C,T0* a1);
T0* r232new_cursor(T232* C);
T6 r232cursor_off(T0* a1);
T6 r372se_assigned_from(T0* a1);
void r372print_on(T372* C,T0* a1);
void r372out_in_tagged_out_memory(T372* C);
void r372make(T372* C,T0* a1,T0* a2);
T6 r372conforms_to(T372* C,T0* a1);
T0* r372twin(T372* C);
T6 r256se_assigned_from(T0* a1);
void r256print_on(T256* C,T0* a1);
void r256out_in_tagged_out_memory(T256* C);
T0* r256make(T2 a1);
T6 r256conforms_to(T256* C,T0* a1);
T0* r256resize(T0* a1,T2 a2);
T0* r256twin(T256* C);
T2 r96new_capacity(T2 a1);
void r96copy(T96* C,T0* a1);
void r96make_equal(T96* C,T2 a1);
void r96force(T96* C,T0* a1,T0* a2);
void r96make_clashes(T96* C,T2 a1);
T0* r96cursor_item(T96* C,T0* a1);
void r96search_position(T96* C,T0* a1);
void r96remove_traversing_cursor(T96* C,T0* a1);
void r96clone_slots(T96* C);
extern T0*oBC92FIXED_INTEGER_ARRAY_;
void r96keys_resize(T96* C,T2 a1);
void r96clone_clashes(T96* C);
void r96move_all_cursors_after(T96* C);
void r96make_items(T96* C,T2 a1);
void r96add_traversing_cursor(T96* C,T0* a1);
T6 r96se_assigned_from(T0* a1);
void r96print_on(T96* C,T0* a1);
T0* r96clone(T0* a1);
void r96remove_position(T96* C,T2 a1);
void r96out_in_tagged_out_memory(T96* C);
void r96make(T96* C,T2 a1);
void r96remove(T96* C,T0* a1);
T0* r96cursor_key(T96* C,T0* a1);
void r96clone_items(T96* C);
T6 r96cursor_after(T0* a1);
T6 r96conforms_to(T96* C,T0* a1);
void r96make_keys(T96* C,T2 a1);
T2 r96hash_position(T96* C,T0* a1);
void r96cursor_forth(T96* C,T0* a1);
void r96items_resize(T96* C,T2 a1);
void r96clone_keys(T96* C);
void r96move_cursors_after(T96* C,T2 a1);
void r96resize(T96* C,T2 a1);
T0* r96found_item(T96* C);
void r96make_with_equality_testers(T96* C,T2 a1,T0* a2,T0* a3);
T6 r96found(T96* C);
void r96move_cursors_forth(T96* C,T2 a1);
void r96cursor_start(T96* C,T0* a1);
void r96search(T96* C,T0* a1);
void r96clashes_resize(T96* C,T2 a1);
void r96slots_resize(T96* C,T2 a1);
T0* r96twin(T96* C);
T0* r96new_cursor(T96* C);
void r96make_slots(T96* C,T2 a1);
void r96move_all_cursors(T96* C,T2 a1,T2 a2);
T2 r96new_modulus(T2 a1);
T6 r96cursor_off(T0* a1);
T6 r124se_assigned_from(T0* a1);
void r124print_on(T124* C,T0* a1);
void r124out_in_tagged_out_memory(T124* C);
T0* r124make(T2 a1);
T6 r124conforms_to(T124* C,T0* a1);
T0* r124resize(T0* a1,T2 a2);
T0* r124twin(T124* C);
T2 r88new_capacity(T2 a1);
void r88copy(T88* C,T0* a1);
T6 r88extendible(T88* C,T2 a1);
void r88remove_traversing_cursor(T88* C,T0* a1);
void r88move_all_cursors_after(T88* C);
void r88add_traversing_cursor(T88* C,T0* a1);
T6 r88se_assigned_from(T0* a1);
void r88print_on(T88* C,T0* a1);
T0* r88clone(T0* a1);
void r88out_in_tagged_out_memory(T88* C);
T6 r88cursor_before(T0* a1);
void r88make(T88* C,T2 a1);
T6 r88cursor_after(T0* a1);
T6 r88conforms_to(T88* C,T0* a1);
void r88resize(T88* C,T2 a1);
T0* r88twin(T88* C);
void r88force_last(T88* C,T0* a1);
T0* r88new_cursor(T88* C);
T6 r88cursor_off(T0* a1);
T6 r100se_assigned_from(T0* a1);
void r100print_on(T100* C,T0* a1);
void r100out_in_tagged_out_memory(T100* C);
T6 r100conforms_to(T100* C,T0* a1);
T6 r100test(T0* a1,T0* a2);
T0* r100twin(T100* C);
T2 r64new_capacity(T2 a1);
void r64copy(T64* C,T0* a1);
T6 r64extendible(T64* C,T2 a1);
void r64remove_traversing_cursor(T64* C,T0* a1);
void r64move_all_cursors_after(T64* C);
void r64add_traversing_cursor(T64* C,T0* a1);
T6 r64se_assigned_from(T0* a1);
void r64print_on(T64* C,T0* a1);
T0* r64clone(T0* a1);
void r64out_in_tagged_out_memory(T64* C);
T6 r64cursor_before(T0* a1);
void r64make(T64* C,T2 a1);
T6 r64cursor_after(T0* a1);
T6 r64conforms_to(T64* C,T0* a1);
void r64resize(T64* C,T2 a1);
T0* r64twin(T64* C);
void r64force_last(T64* C,T0* a1);
T0* r64new_cursor(T64* C);
void r64put_last(T64* C,T0* a1);
T6 r64cursor_off(T0* a1);
T6 r237se_assigned_from(T0* a1);
void r237print_on(T237* C,T0* a1);
void r237out_in_tagged_out_memory(T237* C);
T0* r237make(T2 a1);
T6 r237conforms_to(T237* C,T0* a1);
T0* r237resize(T0* a1,T2 a2);
T0* r237twin(T237* C);
extern T0*oBC28unix_file_system;
void r173trace(T173* C,T0* a1);
extern T0*oBC28file_system;
extern int fBC28file_system;
T0* r173file_system(void);
T6 r173se_assigned_from(T0* a1);
void r173print_on(T173* C,T0* a1);
T0* r173clone(T0* a1);
void r173out_in_tagged_out_memory(T173* C);
extern T0*oBC160std;
extern T0*oBC29operating_system;
T6 r173conforms_to(T173* C,T0* a1);
void r173execute(T173* C);
T0* r173twin(T173* C);
extern T0*oBC28windows_file_system;
void r173execute_shell(T173* C,T0* a1);
T6 r173is_executable(T173* C);
extern T0*oBC227Output_filename_attribute_name;
extern int fBC227Output_filename_attribute_name;
T0* r227Output_filename_attribute_name(void);
extern T0*oBC44Unless_attribute_name;
extern int fBC44Unless_attribute_name;
T0* r227Unless_attribute_name(void);
void r227element_make(T227* C,T0* a1,T0* a2);
extern T0*oBC44If_attribute_name;
extern int fBC44If_attribute_name;
T0* r227If_attribute_name(void);
extern T0*oBC227Stylesheet_filename_attribute_name;
extern int fBC227Stylesheet_filename_attribute_name;
T0* r227Stylesheet_filename_attribute_name(void);
T6 r227se_assigned_from(T0* a1);
void r227print_on(T227* C,T0* a1);
void r227out_in_tagged_out_memory(T227* C);
void r227make(T227* C,T0* a1,T0* a2);
extern T0*oBC227Parameter_element_name;
extern int fBC227Parameter_element_name;
T0* r227Parameter_element_name(void);
T0* r227uc_attribute_value(T227* C,T0* a1);
void r227task_make(T227* C,T0* a1,T0* a2);
T6 r227conforms_to(T227* C,T0* a1);
T6 r227is_enabled(T227* C);
T0* r227twin(T227* C);
extern T0*oBC227Input_filename_attribute_name;
extern int fBC227Input_filename_attribute_name;
T0* r227Input_filename_attribute_name(void);
T6 r304se_assigned_from(T0* a1);
void r304print_on(T304* C,T0* a1);
void r304out_in_tagged_out_memory(T304* C);
T6 r304conforms_to(T304* C,T0* a1);
T0* r304twin(T304* C);
T0* r138pathname_from_file_system(T138* C,T0* a1,T0* a2);
T6 r138is_absolute_pathname(T0* a1);
T0* r138current_working_directory(T138* C);
void r138cd(T138* C,T0* a1);
T6 r138file_exists(T0* a1);
T6 r138directory_exists(T0* a1);
void r138recursive_delete_directory(T0* a1);
T0* r138absolute_pathname(T138* C,T0* a1);
T0* r138current_drive(T138* C);
T6 r138se_assigned_from(T0* a1);
void r138print_on(T138* C,T0* a1);
T0* r138clone(T0* a1);
T0* r138dirname(T0* a1);
void r138delete_file(T0* a1);
void r138out_in_tagged_out_memory(T138* C);
void r138set_current_working_directory(T138* C,T0* a1);
T0* r138cwd(T138* C);
T6 r138same_type(T138* C,T0* a1);
T6 r138is_file_readable(T0* a1);
void r138recursive_create_directory(T0* a1);
extern T0*oBC134tmp_file;
extern int fBC134tmp_file;
T0* r138tmp_file(void);
T6 r138conforms_to(T138* C,T0* a1);
void r138copy_file(T0* a1,T0* a2);
T0* r138string_to_pathname(T0* a1);
void r138rename_file(T0* a1,T0* a2);
T2 r138file_time_stamp(T0* a1);
extern T0*oBC138root_directory;
T6 r138is_relative_pathname(T0* a1);
T6 r138is_root_directory(T0* a1);
T6 r138same_physical_file(T0* a1,T0* a2);
T0* r138pathname_to_string(T0* a1);
T0* r138twin(T138* C);
extern T0*oBC21STRING_;
T0* r138canonical_pathname(T0* a1);
T0* r138pathname(T0* a1,T0* a2);
extern T0*oBC134tmp_directory;
extern int fBC134tmp_directory;
T0* r138tmp_directory(void);
T0* r61attribute_value_by_name(T61* C,T0* a1);
void r61add_attributes(T61* C,T0* a1);
T6 r61se_assigned_from(T0* a1);
void r61print_on(T61* C,T0* a1);
void r61add_attribute(T61* C,T0* a1);
void r61out_in_tagged_out_memory(T61* C);
void r61make(T61* C,T0* a1);
T0* r61children_by_name(T61* C,T0* a1);
T6 r61conforms_to(T61* C,T0* a1);
void r61make_attribute_handler(T61* C);
extern T0*oBC61Empty_string;
extern int fBC61Empty_string;
T0* r61Empty_string(void);
T0* r61twin(T61* C);
void r61make_composite(T61* C);
T6 r61has_attribute(T61* C,T0* a1);
extern T0*oBC162Clean_attribute_name;
extern int fBC162Clean_attribute_name;
T0* r162Clean_attribute_name(void);
T0* r162Unless_attribute_name(void);
void r162element_make(T162* C,T0* a1,T0* a2);
T0* r162attribute_value(T162* C,T0* a1);
T0* r162If_attribute_name(void);
extern T0*oBC162Ace_attribute_name;
extern int fBC162Ace_attribute_name;
T0* r162Ace_attribute_name(void);
extern T0*oBC162Root_class_attribute_name;
extern int fBC162Root_class_attribute_name;
T0* r162Root_class_attribute_name(void);
T6 r162se_assigned_from(T0* a1);
void r162print_on(T162* C,T0* a1);
void r162out_in_tagged_out_memory(T162* C);
T6 r162uc_boolean_value(T162* C,T0* a1);
void r162make(T162* C,T0* a1,T0* a2);
extern T0*oBC44True_attribute_value;
extern int fBC44True_attribute_value;
T0* r162True_attribute_value(void);
T0* r162uc_attribute_value(T162* C,T0* a1);
void r162task_make(T162* C,T0* a1,T0* a2);
extern T0*oBC162Case_insensitive_attribute_name;
extern int fBC162Case_insensitive_attribute_name;
T0* r162Case_insensitive_attribute_name(void);
T6 r162conforms_to(T162* C,T0* a1);
void r162print(T0* a1);
extern T0*oBC162Executable_attribute_name;
extern int fBC162Executable_attribute_name;
T0* r162Executable_attribute_name(void);
extern T0*oBC162No_style_warning_attribute_name;
extern int fBC162No_style_warning_attribute_name;
T0* r162No_style_warning_attribute_name(void);
T0* r162uc_attribute_value_or_default(T162* C,T0* a1,T0* a2);
extern T0*oBC1std_output;
T6 r162is_enabled(T162* C);
extern T0*oBC44False_attribute_value;
extern int fBC44False_attribute_value;
T0* r162False_attribute_value(void);
T0* r162attribute_value_or_default(T162* C,T0* a1,T0* a2);
T0* r162twin(T162* C);
extern T0*oBC162Creation_procedure_attribute_name;
extern int fBC162Creation_procedure_attribute_name;
T0* r162Creation_procedure_attribute_name(void);
T6 r65se_assigned_from(T0* a1);
void r65print_on(T65* C,T0* a1);
void r65out_in_tagged_out_memory(T65* C);
void r65make(T65* C,T0* a1,T0* a2);
T6 r65conforms_to(T65* C,T0* a1);
T0* r65twin(T65* C);
void r180trace(T180* C,T0* a1);
T0* r180file_system(void);
T6 r180se_assigned_from(T0* a1);
void r180print_on(T180* C,T0* a1);
T0* r180clone(T0* a1);
void r180out_in_tagged_out_memory(T180* C);
void r180make(T180* C,T0* a1);
T6 r180conforms_to(T180* C,T0* a1);
T6 r180is_validate_executable(T180* C);
void r180_159Pmake(T180* C,T0* a1);
T6 r180is_system_executable(T180* C);
void r180execute(T180* C);
T0* r180twin(T180* C);
T6 r180is_cluster_executable(T180* C);
void r180execute_shell(T180* C,T0* a1);
T6 r180is_executable(T180* C);
T6 r335se_assigned_from(T0* a1);
void r335print_on(T335* C,T0* a1);
void r335out_in_tagged_out_memory(T335* C);
extern T0*oBC18Arguments;
extern int fBC18Arguments;
T0* r335Arguments(void);
void r335make(T335* C,T0* a1);
T0* r335message(T335* C,T0* a1);
T6 r335conforms_to(T335* C,T0* a1);
T0* r335twin(T335* C);
T0* r335default_message(T335* C);
extern T0*oBC200Output_filename_attribute_name;
extern int fBC200Output_filename_attribute_name;
T0* r200Output_filename_attribute_name(void);
T0* r200Unless_attribute_name(void);
void r200element_make(T200* C,T0* a1,T0* a2);
T0* r200If_attribute_name(void);
T6 r200se_assigned_from(T0* a1);
void r200print_on(T200* C,T0* a1);
void r200out_in_tagged_out_memory(T200* C);
T6 r200uc_boolean_value(T200* C,T0* a1);
void r200make(T200* C,T0* a1,T0* a2);
T0* r200True_attribute_value(void);
extern T0*oBC200Verbose_filename_attribute_name;
extern int fBC200Verbose_filename_attribute_name;
T0* r200Verbose_filename_attribute_name(void);
T0* r200uc_attribute_value(T200* C,T0* a1);
void r200task_make(T200* C,T0* a1,T0* a2);
T6 r200conforms_to(T200* C,T0* a1);
void r200print(T0* a1);
extern T0*oBC200Tokens_classname_attribute_name;
extern int fBC200Tokens_classname_attribute_name;
T0* r200Tokens_classname_attribute_name(void);
T6 r200is_enabled(T200* C);
T0* r200False_attribute_value(void);
extern T0*oBC200Separate_actions_attribute_name;
extern int fBC200Separate_actions_attribute_name;
T0* r200Separate_actions_attribute_name(void);
T0* r200twin(T200* C);
extern T0*oBC200Input_filename_attribute_name;
extern int fBC200Input_filename_attribute_name;
T0* r200Input_filename_attribute_name(void);
T6 r179has_value(T179* C);
T0* r179name(T179* C);
T0* r179Unless_attribute_name(void);
T0* r179If_attribute_name(void);
T6 r179has_name(T179* C);
T6 r179se_assigned_from(T0* a1);
void r179print_on(T179* C,T0* a1);
void r179out_in_tagged_out_memory(T179* C);
void r179make(T179* C,T0* a1,T0* a2);
T0* r179value(T179* C);
T0* r179uc_attribute_value(T179* C,T0* a1);
extern T0*oBC179Value_attribute_name;
extern int fBC179Value_attribute_name;
T0* r179Value_attribute_name(void);
T6 r179conforms_to(T179* C,T0* a1);
extern T0*oBC179Name_attribute_name;
extern int fBC179Name_attribute_name;
T0* r179Name_attribute_name(void);
T6 r179is_enabled(T179* C);
T0* r179twin(T179* C);
T0* r333current_working_directory(T333* C);
T6 r333se_assigned_from(T0* a1);
void r333print_on(T333* C,T0* a1);
void r333old_read_character(T333* C);
T0* r333clone(T0* a1);
extern T6 oBC136is_windows;
extern int fBC136is_windows;
T6 r333is_windows(T333* C);
T6 r333old_end_of_file(T333* C);
void r333out_in_tagged_out_memory(T333* C);
void r333make(T333* C);
T6 r333conforms_to(T333* C,T0* a1);
extern T6 oBC136is_unix;
extern int fBC136is_unix;
T6 r333is_unix(T333* C);
T0* r333twin(T333* C);
T6 r337se_assigned_from(T0* a1);
void r337print_on(T337* C,T0* a1);
void r337out_in_tagged_out_memory(T337* C);
void r337report_message(T337* C,T0* a1);
T0* r337message(T0* a1);
T6 r337conforms_to(T337* C,T0* a1);
T0* r337twin(T337* C);
void r337make_standard(T337* C);
void r337report_error(T337* C,T0* a1);
void r216trace(T216* C,T0* a1);
T6 r216se_assigned_from(T0* a1);
void r216print_on(T216* C,T0* a1);
void r216out_in_tagged_out_memory(T216* C);
void r216log(T0* a1);
T6 r216conforms_to(T216* C,T0* a1);
void r216execute(T216* C);
T0* r216twin(T216* C);
T0* r214file_system(void);
T6 r214se_assigned_from(T0* a1);
T6 r214is_filename_executable(T214* C);
void r214print_on(T214* C,T0* a1);
void r214out_in_tagged_out_memory(T214* C);
void r214log(T0* a1);
T6 r214is_target_executable(T214* C);
T6 r214conforms_to(T214* C,T0* a1);
void r214execute(T214* C);
T0* r214twin(T214* C);
T6 r214is_executable(T214* C);
void r218trace(T218* C,T0* a1);
T0* r218file_system(void);
T6 r218se_assigned_from(T0* a1);
void r218print_on(T218* C,T0* a1);
void r218out_in_tagged_out_memory(T218* C);
void r218log(T0* a1);
T6 r218conforms_to(T218* C,T0* a1);
void r218execute(T218* C);
T0* r218twin(T218* C);
T6 r218is_executable(T218* C);
void r177trace(T177* C,T0* a1);
T6 r177se_assigned_from(T0* a1);
void r177print_on(T177* C,T0* a1);
void r177out_in_tagged_out_memory(T177* C);
T6 r177conforms_to(T177* C,T0* a1);
void r177execute(T177* C);
T0* r177twin(T177* C);
T6 r177is_executable(T177* C);
void r199trace(T199* C,T0* a1);
T0* r199file_system(void);
T6 r199se_assigned_from(T0* a1);
void r199print_on(T199* C,T0* a1);
T0* r199clone(T0* a1);
void r199out_in_tagged_out_memory(T199* C);
void r199make(T199* C,T0* a1);
T6 r199conforms_to(T199* C,T0* a1);
void r199_159Pmake(T199* C,T0* a1);
void r199execute(T199* C);
T0* r199twin(T199* C);
void r199execute_shell(T199* C,T0* a1);
T6 r199is_executable(T199* C);
extern T0*oBC166Clean_attribute_name;
extern int fBC166Clean_attribute_name;
T0* r166Clean_attribute_name(void);
extern T0*oBC166System_attribute_name;
extern int fBC166System_attribute_name;
T0* r166System_attribute_name(void);
T0* r166Unless_attribute_name(void);
void r166element_make(T166* C,T0* a1,T0* a2);
T0* r166If_attribute_name(void);
extern T0*oBC166Ace_attribute_name;
extern int fBC166Ace_attribute_name;
T0* r166Ace_attribute_name(void);
T6 r166se_assigned_from(T0* a1);
void r166print_on(T166* C,T0* a1);
void r166out_in_tagged_out_memory(T166* C);
T6 r166uc_boolean_value(T166* C,T0* a1);
void r166make(T166* C,T0* a1,T0* a2);
T0* r166True_attribute_value(void);
extern T0*oBC166Finalize_attribute_name;
extern int fBC166Finalize_attribute_name;
T0* r166Finalize_attribute_name(void);
T0* r166uc_attribute_value(T166* C,T0* a1);
void r166task_make(T166* C,T0* a1,T0* a2);
T6 r166conforms_to(T166* C,T0* a1);
void r166print(T0* a1);
T0* r166uc_attribute_value_or_default(T166* C,T0* a1,T0* a2);
T6 r166is_enabled(T166* C);
T0* r166False_attribute_value(void);
T0* r166attribute_value_or_default(T166* C,T0* a1,T0* a2);
T0* r166twin(T166* C);
extern T0*oBC166Fish_attribute_name;
extern int fBC166Fish_attribute_name;
T0* r166Fish_attribute_name(void);
T0* r217Unless_attribute_name(void);
void r217element_make(T217* C,T0* a1,T0* a2);
T0* r217attribute_value(T217* C,T0* a1);
T0* r217If_attribute_name(void);
T6 r217se_assigned_from(T0* a1);
void r217print_on(T217* C,T0* a1);
void r217out_in_tagged_out_memory(T217* C);
void r217make(T217* C,T0* a1,T0* a2);
void r217task_make(T217* C,T0* a1,T0* a2);
T6 r217conforms_to(T217* C,T0* a1);
T6 r217is_enabled(T217* C);
T0* r217twin(T217* C);
extern T0*oBC217Directory_attribute_name;
extern int fBC217Directory_attribute_name;
T0* r217Directory_attribute_name(void);
T6 r345se_assigned_from(T0* a1);
void r345print_on(T345* C,T0* a1);
void r345out_in_tagged_out_memory(T345* C);
T0* r345Arguments(void);
void r345make(T345* C,T0* a1);
T0* r345message(T345* C,T0* a1);
T6 r345conforms_to(T345* C,T0* a1);
T0* r345twin(T345* C);
T0* r345default_message(T345* C);
T0* r221Unless_attribute_name(void);
void r221element_make(T221* C,T0* a1,T0* a2);
T0* r221attribute_value(T221* C,T0* a1);
T0* r221If_attribute_name(void);
T6 r221se_assigned_from(T0* a1);
void r221print_on(T221* C,T0* a1);
void r221out_in_tagged_out_memory(T221* C);
void r221make(T221* C,T0* a1,T0* a2);
extern T0*oBC221To_directory_attribute_name;
extern int fBC221To_directory_attribute_name;
T0* r221To_directory_attribute_name(void);
void r221task_make(T221* C,T0* a1,T0* a2);
extern T0*oBC221To_file_attribute_name;
extern int fBC221To_file_attribute_name;
T0* r221To_file_attribute_name(void);
T6 r221conforms_to(T221* C,T0* a1);
T6 r221is_enabled(T221* C);
T0* r221twin(T221* C);
extern T0*oBC221File_attribute_name;
extern int fBC221File_attribute_name;
T0* r221File_attribute_name(void);
T6 r360is_closed(T360* C);
void r360old_close(T360* C);
void r360open_read(T360* C);
T6 r360se_assigned_from(T0* a1);
void r360print_on(T360* C,T0* a1);
void r360old_read_character(T360* C);
T6 r360old_end_of_file(T360* C);
void r360out_in_tagged_out_memory(T360* C);
void r360read_character(T360* C);
void r360close(T360* C);
void r360make(T360* C,T0* a1);
T6 r360conforms_to(T360* C,T0* a1);
void r360connect_to(T360* C,T0* a1);
void r360read_string(T360* C,T2 a1);
T0* r360twin(T360* C);
void r360old_open_read(T360* C);
extern T0*oBC213Start_target_attribute_name;
extern int fBC213Start_target_attribute_name;
T0* r213Start_target_attribute_name(void);
T0* r213Unless_attribute_name(void);
extern T0*oBC213Reuse_variables_attribute_name;
extern int fBC213Reuse_variables_attribute_name;
T0* r213Reuse_variables_attribute_name(void);
void r213element_make(T213* C,T0* a1,T0* a2);
T0* r213attribute_value(T213* C,T0* a1);
T0* r213If_attribute_name(void);
T6 r213se_assigned_from(T0* a1);
void r213print_on(T213* C,T0* a1);
void r213out_in_tagged_out_memory(T213* C);
T6 r213uc_boolean_value(T213* C,T0* a1);
void r213make(T213* C,T0* a1,T0* a2);
T0* r213True_attribute_value(void);
T0* r213uc_attribute_value(T213* C,T0* a1);
void r213task_make(T213* C,T0* a1,T0* a2);
T6 r213conforms_to(T213* C,T0* a1);
void r213print(T0* a1);
extern T0*oBC213Filename_attribute_name;
extern int fBC213Filename_attribute_name;
T0* r213Filename_attribute_name(void);
T6 r213is_enabled(T213* C);
T0* r213False_attribute_value(void);
T0* r213twin(T213* C);
void r201trace(T201* C,T0* a1);
T0* r201file_system(void);
T6 r201se_assigned_from(T0* a1);
void r201print_on(T201* C,T0* a1);
T0* r201clone(T0* a1);
void r201out_in_tagged_out_memory(T201* C);
void r201make(T201* C,T0* a1);
T6 r201conforms_to(T201* C,T0* a1);
void r201_159Pmake(T201* C,T0* a1);
void r201execute(T201* C);
T0* r201twin(T201* C);
void r201execute_shell(T201* C,T0* a1);
T6 r201is_executable(T201* C);
void r203trace(T203* C,T0* a1);
T0* r203file_system(void);
T6 r203se_assigned_from(T0* a1);
void r203print_on(T203* C,T0* a1);
T0* r203clone(T0* a1);
void r203out_in_tagged_out_memory(T203* C);
void r203make(T203* C,T0* a1);
T6 r203conforms_to(T203* C,T0* a1);
void r203_159Pmake(T203* C,T0* a1);
void r203execute(T203* C);
T0* r203twin(T203* C);
void r203execute_shell(T203* C,T0* a1);
T6 r203is_executable(T203* C);
T0* r170Unless_attribute_name(void);
void r170element_make(T170* C,T0* a1,T0* a2);
T0* r170attribute_value(T170* C,T0* a1);
T0* r170If_attribute_name(void);
T6 r170se_assigned_from(T0* a1);
void r170print_on(T170* C,T0* a1);
void r170out_in_tagged_out_memory(T170* C);
void r170make(T170* C,T0* a1,T0* a2);
void r170task_make(T170* C,T0* a1,T0* a2);
T6 r170conforms_to(T170* C,T0* a1);
extern T0*oBC170Executable_attribute_name;
extern int fBC170Executable_attribute_name;
T0* r170Executable_attribute_name(void);
T6 r170is_enabled(T170* C);
T0* r170twin(T170* C);
void r222trace(T222* C,T0* a1);
T0* r222file_system(void);
T6 r222se_assigned_from(T0* a1);
void r222print_on(T222* C,T0* a1);
void r222out_in_tagged_out_memory(T222* C);
T6 r222is_to_file_executable(T222* C);
void r222log(T0* a1);
T6 r222conforms_to(T222* C,T0* a1);
void r222execute(T222* C);
T6 r222is_to_directory_executable(T222* C);
T0* r222twin(T222* C);
T6 r222is_executable(T222* C);
extern T0*oBC251Variable_attribute_name;
extern int fBC251Variable_attribute_name;
T0* r251Variable_attribute_name(void);
T0* r251Unless_attribute_name(void);
void r251element_make(T251* C,T0* a1,T0* a2);
T0* r251If_attribute_name(void);
T6 r251se_assigned_from(T0* a1);
void r251print_on(T251* C,T0* a1);
T0* r251clone(T0* a1);
void r251out_in_tagged_out_memory(T251* C);
extern T0*oBC251True_value_attribute_name;
extern int fBC251True_value_attribute_name;
T0* r251True_value_attribute_name(void);
void r251make(T251* C,T0* a1,T0* a2);
extern T0*oBC251False_value_attribute_name;
extern int fBC251False_value_attribute_name;
T0* r251False_value_attribute_name(void);
T0* r251uc_attribute_value(T251* C,T0* a1);
void r251task_make(T251* C,T0* a1,T0* a2);
T6 r251conforms_to(T251* C,T0* a1);
T0* r251string_tokens(T0* a1,T3 a2);
T6 r251is_enabled(T251* C);
extern T0*oBC251Source_attribute_name;
extern int fBC251Source_attribute_name;
T0* r251Source_attribute_name(void);
T0* r251twin(T251* C);
extern T0*oBC251Target_attribute_name;
extern int fBC251Target_attribute_name;
T0* r251Target_attribute_name(void);
void r284disconnect(T284* C);
T6 r284se_assigned_from(T0* a1);
void r284print_on(T284* C,T0* a1);
void r284out_in_tagged_out_memory(T284* C);
void r284read_character(T284* C);
T6 r284conforms_to(T284* C,T0* a1);
T6 r284end_of_input(T284* C);
void r284connect_to(T284* C,T0* a1);
T3 r284last_character(T284* C);
T0* r284twin(T284* C);
T6 r355is_closed(T355* C);
void r355old_close(T355* C);
T6 r355se_assigned_from(T0* a1);
void r355print_on(T355* C,T0* a1);
void r355out_in_tagged_out_memory(T355* C);
void r355old_open_write(T355* C);
void r355close(T355* C);
void r355make(T355* C,T0* a1);
void r355old_put_string(T355* C,T0* a1);
T6 r355conforms_to(T355* C,T0* a1);
T0* r355twin(T355* C);
void r355open_write(T355* C);
T0* r211Unless_attribute_name(void);
void r211element_make(T211* C,T0* a1,T0* a2);
T0* r211If_attribute_name(void);
T6 r211se_assigned_from(T0* a1);
void r211print_on(T211* C,T0* a1);
extern T0*oBC211Define_element_name;
extern int fBC211Define_element_name;
T0* r211Define_element_name(void);
extern T0*oBC211Config_filename_attribute_name;
extern int fBC211Config_filename_attribute_name;
T0* r211Config_filename_attribute_name(void);
extern T0*oBC211Compile_attribute_name;
extern int fBC211Compile_attribute_name;
T0* r211Compile_attribute_name(void);
void r211out_in_tagged_out_memory(T211* C);
void r211make(T211* C,T0* a1,T0* a2);
T0* r211uc_attribute_value(T211* C,T0* a1);
void r211task_make(T211* C,T0* a1,T0* a2);
T6 r211conforms_to(T211* C,T0* a1);
T6 r211is_enabled(T211* C);
T0* r211twin(T211* C);
T0* r223Unless_attribute_name(void);
void r223element_make(T223* C,T0* a1,T0* a2);
T0* r223attribute_value(T223* C,T0* a1);
T0* r223If_attribute_name(void);
T6 r223se_assigned_from(T0* a1);
void r223print_on(T223* C,T0* a1);
void r223out_in_tagged_out_memory(T223* C);
void r223make(T223* C,T0* a1,T0* a2);
extern T0*oBC223To_directory_attribute_name;
extern int fBC223To_directory_attribute_name;
T0* r223To_directory_attribute_name(void);
void r223task_make(T223* C,T0* a1,T0* a2);
extern T0*oBC223To_file_attribute_name;
extern int fBC223To_file_attribute_name;
T0* r223To_file_attribute_name(void);
T6 r223conforms_to(T223* C,T0* a1);
T6 r223is_enabled(T223* C);
T0* r223twin(T223* C);
extern T0*oBC223File_attribute_name;
extern int fBC223File_attribute_name;
T0* r223File_attribute_name(void);
T0* r139pathname_from_file_system(T139* C,T0* a1,T0* a2);
T6 r139is_absolute_pathname(T0* a1);
T0* r139current_working_directory(T139* C);
void r139cd(T139* C,T0* a1);
T6 r139file_exists(T0* a1);
T6 r139directory_exists(T0* a1);
void r139recursive_delete_directory(T0* a1);
T0* r139absolute_pathname(T139* C,T0* a1);
T6 r139se_assigned_from(T0* a1);
void r139print_on(T139* C,T0* a1);
T0* r139clone(T0* a1);
T0* r139dirname(T0* a1);
void r139delete_file(T0* a1);
void r139out_in_tagged_out_memory(T139* C);
void r139set_current_working_directory(T139* C,T0* a1);
T0* r139cwd(T139* C);
T6 r139same_type(T139* C,T0* a1);
T6 r139is_file_readable(T0* a1);
void r139recursive_create_directory(T0* a1);
T0* r139tmp_file(void);
T6 r139conforms_to(T139* C,T0* a1);
void r139copy_file(T0* a1,T0* a2);
T0* r139string_to_pathname(T0* a1);
void r139rename_file(T0* a1,T0* a2);
T2 r139file_time_stamp(T0* a1);
extern T0*oBC139root_directory;
T6 r139is_root_directory(T0* a1);
T6 r139same_physical_file(T0* a1,T0* a2);
T0* r139pathname_to_string(T0* a1);
T0* r139twin(T139* C);
T0* r139basename(T0* a1);
T0* r139canonical_pathname(T0* a1);
T0* r139pathname(T0* a1,T0* a2);
T0* r139tmp_directory(void);
T2 r400new_capacity(T2 a1);
void r400copy(T400* C,T0* a1);
T6 r400extendible(T400* C,T2 a1);
void r400remove_traversing_cursor(T400* C,T0* a1);
void r400move_all_cursors_after(T400* C);
void r400add_traversing_cursor(T400* C,T0* a1);
T6 r400se_assigned_from(T0* a1);
void r400print_on(T400* C,T0* a1);
T0* r400clone(T0* a1);
void r400out_in_tagged_out_memory(T400* C);
T6 r400cursor_before(T0* a1);
void r400ds_arrayed_list_make(T400* C,T2 a1);
T6 r400cursor_after(T0* a1);
T6 r400conforms_to(T400* C,T0* a1);
void r400resize(T400* C,T2 a1);
void r400make_from_bilinear(T400* C,T0* a1);
T0* r400twin(T400* C);
void r400force_last(T400* C,T0* a1);
T0* r400new_cursor(T400* C);
void r400put_last(T400* C,T0* a1);
T6 r400cursor_off(T0* a1);
T0* r225Unless_attribute_name(void);
void r225element_make(T225* C,T0* a1,T0* a2);
T0* r225If_attribute_name(void);
T6 r225se_assigned_from(T0* a1);
void r225print_on(T225* C,T0* a1);
void r225out_in_tagged_out_memory(T225* C);
void r225make(T225* C,T0* a1,T0* a2);
T0* r225uc_attribute_value(T225* C,T0* a1);
void r225task_make(T225* C,T0* a1,T0* a2);
extern T0*oBC225Value_attribute_name;
extern int fBC225Value_attribute_name;
T0* r225Value_attribute_name(void);
T6 r225conforms_to(T225* C,T0* a1);
extern T0*oBC225Name_attribute_name;
extern int fBC225Name_attribute_name;
T0* r225Name_attribute_name(void);
T6 r225is_enabled(T225* C);
T0* r225twin(T225* C);
void r167trace(T167* C,T0* a1);
T6 r167is_cleanable(T167* C);
T0* r167file_system(void);
T6 r167se_assigned_from(T0* a1);
void r167print_on(T167* C,T0* a1);
T0* r167clone(T0* a1);
void r167out_in_tagged_out_memory(T167* C);
void r167execute_clean(T167* C);
void r167execute_compile(T167* C);
T6 r167conforms_to(T167* C,T0* a1);
T6 r167is_compilable(T167* C);
void r167execute(T167* C);
T0* r167twin(T167* C);
void r167execute_shell(T167* C,T0* a1);
T6 r167is_executable(T167* C);
extern T0*oBC164Clean_attribute_name;
extern int fBC164Clean_attribute_name;
T0* r164Clean_attribute_name(void);
extern T0*oBC164System_attribute_name;
extern int fBC164System_attribute_name;
T0* r164System_attribute_name(void);
extern T0*oBC164Finish_freezing_attribute_name;
extern int fBC164Finish_freezing_attribute_name;
T0* r164Finish_freezing_attribute_name(void);
T0* r164Unless_attribute_name(void);
void r164element_make(T164* C,T0* a1,T0* a2);
T0* r164If_attribute_name(void);
extern T0*oBC164Ace_attribute_name;
extern int fBC164Ace_attribute_name;
T0* r164Ace_attribute_name(void);
T6 r164se_assigned_from(T0* a1);
void r164print_on(T164* C,T0* a1);
void r164out_in_tagged_out_memory(T164* C);
T6 r164uc_boolean_value(T164* C,T0* a1);
void r164make(T164* C,T0* a1,T0* a2);
T0* r164True_attribute_value(void);
extern T0*oBC164Finalize_attribute_name;
extern int fBC164Finalize_attribute_name;
T0* r164Finalize_attribute_name(void);
T0* r164uc_attribute_value(T164* C,T0* a1);
void r164task_make(T164* C,T0* a1,T0* a2);
T6 r164conforms_to(T164* C,T0* a1);
void r164print(T0* a1);
T0* r164uc_attribute_value_or_default(T164* C,T0* a1,T0* a2);
T6 r164is_enabled(T164* C);
T0* r164False_attribute_value(void);
T0* r164attribute_value_or_default(T164* C,T0* a1,T0* a2);
T0* r164twin(T164* C);
T0* r219Unless_attribute_name(void);
void r219element_make(T219* C,T0* a1,T0* a2);
T0* r219attribute_value(T219* C,T0* a1);
T0* r219If_attribute_name(void);
T6 r219se_assigned_from(T0* a1);
void r219print_on(T219* C,T0* a1);
void r219out_in_tagged_out_memory(T219* C);
void r219make(T219* C,T0* a1,T0* a2);
void r219task_make(T219* C,T0* a1,T0* a2);
T6 r219conforms_to(T219* C,T0* a1);
T6 r219is_enabled(T219* C);
T0* r219twin(T219* C);
extern T0*oBC219File_attribute_name;
extern int fBC219File_attribute_name;
T0* r219File_attribute_name(void);
extern T0*oBC219Directory_attribute_name;
extern int fBC219Directory_attribute_name;
T0* r219Directory_attribute_name(void);
extern T0*oBC82utils;
T2 r82item_code(T82* C,T2 a1);
T6 r82se_assigned_from(T0* a1);
void r82print_on(T82* C,T0* a1);
void r82out_in_tagged_out_memory(T82* C);
void r82make(T82* C);
void r82insert(T82* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r82add_to_storage_count(T82* C,T2 a1);
void r82remove(T82* C,T2 a1,T2 a2);
void r82find_slice_position(T82* C,T2 a1,T2 a2);
void r82insert_code(T82* C,T2 a1,T2 a2);
T6 r82conforms_to(T82* C,T0* a1);
extern T6 oBC82optimize_access;
void r82storage_move(T82* C,T2 a1,T2 a2,T2 a3);
T0* r82twin(T82* C);
T2 r82storage_slice_count(T82* C);
void r82find_position(T82* C,T2 a1);
void r212trace(T212* C,T0* a1);
T0* r212file_system(void);
T6 r212se_assigned_from(T0* a1);
void r212print_on(T212* C,T0* a1);
T0* r212clone(T0* a1);
void r212out_in_tagged_out_memory(T212* C);
void r212make(T212* C,T0* a1);
T6 r212conforms_to(T212* C,T0* a1);
void r212_159Pmake(T212* C,T0* a1);
void r212execute(T212* C);
T0* r212twin(T212* C);
void r212execute_shell(T212* C,T0* a1);
T6 r212is_executable(T212* C);
void r224trace(T224* C,T0* a1);
T0* r224file_system(void);
T6 r224se_assigned_from(T0* a1);
void r224print_on(T224* C,T0* a1);
void r224out_in_tagged_out_memory(T224* C);
T6 r224is_to_file_executable(T224* C);
void r224log(T0* a1);
T6 r224conforms_to(T224* C,T0* a1);
void r224execute(T224* C);
T6 r224is_to_directory_executable(T224* C);
T0* r224twin(T224* C);
T6 r224is_executable(T224* C);
T0* r268default_target_name(T268* C);
T0* r268name(T268* C);
T6 r268has_name(T268* C);
T6 r268se_assigned_from(T0* a1);
void r268print_on(T268* C,T0* a1);
extern T0*oBC268Target_element_name;
extern int fBC268Target_element_name;
T0* r268Target_element_name(void);
void r268out_in_tagged_out_memory(T268* C);
extern T0*oBC44Description_element_name;
extern int fBC44Description_element_name;
T0* r268Description_element_name(void);
void r268make(T268* C,T0* a1,T0* a2);
extern T0*oBC268Default_attribute_name;
extern int fBC268Default_attribute_name;
T0* r268Default_attribute_name(void);
T0* r268xml_target_elements(T268* C);
T0* r268uc_attribute_value(T268* C,T0* a1);
T6 r268conforms_to(T268* C,T0* a1);
T0* r268description(T268* C);
T6 r268has_description(T268* C);
extern T0*oBC268Name_attribute_name;
extern int fBC268Name_attribute_name;
T0* r268Name_attribute_name(void);
T6 r268has_default_target_name(T268* C);
T6 r268has_parent(T268* C);
T0* r268twin(T268* C);
extern T0*oBC268Inherit_attribute_name;
extern int fBC268Inherit_attribute_name;
T0* r268Inherit_attribute_name(void);
T0* r268parent(T268* C);
T0* r81create_representation(T81* C);
T6 r81se_assigned_from(T0* a1);
void r81print_on(T81* C,T0* a1);
void r81out_in_tagged_out_memory(T81* C);
T6 r81conforms_to(T81* C,T0* a1);
T0* r81twin(T81* C);
T0* r174Unless_attribute_name(void);
void r174element_make(T174* C,T0* a1,T0* a2);
T0* r174If_attribute_name(void);
T6 r174se_assigned_from(T0* a1);
void r174print_on(T174* C,T0* a1);
void r174out_in_tagged_out_memory(T174* C);
void r174make(T174* C,T0* a1,T0* a2);
T0* r174uc_attribute_value(T174* C,T0* a1);
void r174task_make(T174* C,T0* a1,T0* a2);
extern T0*oBC174Value_attribute_name;
extern int fBC174Value_attribute_name;
T0* r174Value_attribute_name(void);
T6 r174conforms_to(T174* C,T0* a1);
extern T0*oBC174Name_attribute_name;
extern int fBC174Name_attribute_name;
T0* r174Name_attribute_name(void);
T6 r174is_enabled(T174* C);
T0* r174twin(T174* C);
T0* r172Unless_attribute_name(void);
void r172element_make(T172* C,T0* a1,T0* a2);
T0* r172If_attribute_name(void);
T6 r172se_assigned_from(T0* a1);
void r172print_on(T172* C,T0* a1);
void r172out_in_tagged_out_memory(T172* C);
void r172make(T172* C,T0* a1,T0* a2);
T0* r172uc_attribute_value(T172* C,T0* a1);
void r172task_make(T172* C,T0* a1,T0* a2);
T6 r172conforms_to(T172* C,T0* a1);
extern T0*oBC172Executable_attribute_name;
extern int fBC172Executable_attribute_name;
T0* r172Executable_attribute_name(void);
T6 r172is_enabled(T172* C);
extern T0*oBC172Source_filename_attribute_name;
extern int fBC172Source_filename_attribute_name;
T0* r172Source_filename_attribute_name(void);
T0* r172twin(T172* C);
void r27calculate_depend_order(T0* a1);
void r27build(T27* C);
extern T0*oBC27Parser_factory;
extern int fBC27Parser_factory;
T0* r27Parser_factory(void);
void r27build_target(T27* C,T0* a1);
T0* r27file_system(void);
T6 r27se_assigned_from(T0* a1);
void r27print_on(T27* C,T0* a1);
T0* r27clone(T0* a1);
void r27load(T27* C,T0* a1);
void r27out_in_tagged_out_memory(T27* C);
extern T0*oBC17Exceptions;
T0* r27target_with_name(T27* C,T0* a1);
T6 r27conforms_to(T27* C,T0* a1);
void r27print(T0* a1);
void r27make_with_filename(T27* C,T0* a1,T0* a2,T0* a3);
void r27execute_target(T27* C,T0* a1,T6 a2);
void r27reset(T27* C);
void r27exit_application(T2 a1,T0* a2);
T0* r27twin(T27* C);
extern T0*oBC27Default_build_filename;
extern int fBC27Default_build_filename;
T0* r27Default_build_filename(void);
T0* r24out(T24* C);
void r24copy(T24* C,T0* a1);
T0* r24substring(T24* C,T2 a1,T2 a2);
T2 r24count(T24* C);
T2 r24item_code(T24* C,T2 a1);
T6 r24is_whitespace(T2 a1);
void r24remove_between(T24* C,T2 a1,T2 a2);
T6 r24is_equal(T24* C,T0* a1);
T67 r24item(T24* C,T2 a1);
void r24append_uc_string(T24* C,T0* a1);
T6 r24se_assigned_from(T0* a1);
void r24print_on(T24* C,T0* a1);
void r24make_from_string(T24* C,T0* a1);
T2 r24index_of(T24* C,T67 a1,T2 a2);
void r24out_in_tagged_out_memory(T24* C);
void r24make(T24* C,T2 a1);
void r24append_string(T24* C,T0* a1);
void r24head(T24* C,T2 a1);
T6 r24conforms_to(T24* C,T0* a1);
void r24append_ucc_code(T24* C,T2 a1);
void r24right_adjust(T24* C);
T6 r24empty(T24* C);
T0* r24twin(T24* C);
T2 r24three_way_comparison(T24* C,T0* a1);
void r24left_adjust(T24* C);
extern T0*oBC24i_settings;
void r24tail(T24* C,T2 a1);
T6 r220is_directory_executable(T220* C);
void r220trace(T220* C,T0* a1);
T0* r220file_system(void);
T6 r220se_assigned_from(T0* a1);
void r220print_on(T220* C,T0* a1);
void r220out_in_tagged_out_memory(T220* C);
void r220log(T0* a1);
T6 r220is_file_executable(T220* C);
T6 r220conforms_to(T220* C,T0* a1);
void r220execute(T220* C);
T0* r220twin(T220* C);
T6 r220is_executable(T220* C);
extern T0*oBC202Output_filename_attribute_name;
extern int fBC202Output_filename_attribute_name;
T0* r202Output_filename_attribute_name(void);
T0* r202Unless_attribute_name(void);
void r202element_make(T202* C,T0* a1,T0* a2);
T0* r202If_attribute_name(void);
T6 r202se_assigned_from(T0* a1);
void r202print_on(T202* C,T0* a1);
extern T0*oBC202Define_element_name;
extern int fBC202Define_element_name;
T0* r202Define_element_name(void);
extern T0*oBC202Lines_attribute_name;
extern int fBC202Lines_attribute_name;
T0* r202Lines_attribute_name(void);
void r202out_in_tagged_out_memory(T202* C);
T6 r202uc_boolean_value(T202* C,T0* a1);
void r202make(T202* C,T0* a1,T0* a2);
T0* r202True_attribute_value(void);
T0* r202uc_attribute_value(T202* C,T0* a1);
void r202task_make(T202* C,T0* a1,T0* a2);
T6 r202conforms_to(T202* C,T0* a1);
void r202print(T0* a1);
T6 r202is_enabled(T202* C);
T0* r202False_attribute_value(void);
T0* r202twin(T202* C);
extern T0*oBC202Input_filename_attribute_name;
extern int fBC202Input_filename_attribute_name;
T0* r202Input_filename_attribute_name(void);
T0* r252file_system(void);
T6 r252se_assigned_from(T0* a1);
void r252print_on(T252* C,T0* a1);
void r252out_in_tagged_out_memory(T252* C);
void r252log(T0* a1);
void r252make(T252* C,T0* a1);
T6 r252conforms_to(T252* C,T0* a1);
void r252_159Pmake(T252* C,T0* a1);
void r252execute(T252* C);
T0* r252twin(T252* C);
T6 r252is_executable(T252* C);
void r175trace(T175* C,T0* a1);
T6 r175se_assigned_from(T0* a1);
void r175print_on(T175* C,T0* a1);
void r175out_in_tagged_out_memory(T175* C);
T6 r175conforms_to(T175* C,T0* a1);
void r175execute(T175* C);
T0* r175twin(T175* C);
T6 r175is_executable(T175* C);
T6 r395se_assigned_from(T0* a1);
void r395print_on(T395* C,T0* a1);
void r395out_in_tagged_out_memory(T395* C);
T6 r395conforms_to(T395* C,T0* a1);
T0* r395twin(T395* C);
void r330fill(T330* C);
void r330compact_left(T330* C);
T2 r330count(T330* C);
void r330set_position(T330* C,T2 a1,T2 a2,T2 a3);
extern T2 oBC329lower;
extern int fBC329lower;
T2 r330lower(void);
T6 r330se_assigned_from(T0* a1);
void r330print_on(T330* C,T0* a1);
void r330out_in_tagged_out_memory(T330* C);
extern T0*oBC265STRING_BUFFER_;
T6 r330conforms_to(T330* C,T0* a1);
void r330resize(T330* C);
void r330make_with_size(T330* C,T0* a1,T2 a2);
T0* r330twin(T330* C);
void r330set_file(T330* C,T0* a1);
extern T0*oBC266INPUT_STREAM_;
void r330flush(T330* C);
T0* r346current_working_directory(T346* C);
T6 r346se_assigned_from(T0* a1);
void r346print_on(T346* C,T0* a1);
T0* r346clone(T0* a1);
T6 r346is_windows(T346* C);
void r346out_in_tagged_out_memory(T346* C);
void r346make(T346* C);
void r346old_put_string(T0* a1);
T6 r346conforms_to(T346* C,T0* a1);
T6 r346is_unix(T346* C);
void r346put_line(T0* a1);
T0* r346twin(T346* C);
void r163trace(T163* C,T0* a1);
T6 r163is_cleanable(T163* C);
T0* r163file_system(void);
T6 r163se_assigned_from(T0* a1);
void r163print_on(T163* C,T0* a1);
T0* r163clone(T0* a1);
void r163out_in_tagged_out_memory(T163* C);
T0* r163new_ace_cmdline(T163* C);
T6 r163is_traditional_configuration(T163* C);
T6 r163conforms_to(T163* C,T0* a1);
void r163execute(T163* C);
T0* r163twin(T163* C);
T0* r163new_clean_cmdline(T163* C);
T0* r163new_traditional_cmdline(T163* C);
void r163execute_shell(T163* C,T0* a1);
T6 r163is_executable(T163* C);
T6 r163is_ace_configuration(T163* C);
T0* r347current_working_directory(T347* C);
T6 r347se_assigned_from(T0* a1);
void r347print_on(T347* C,T0* a1);
T0* r347clone(T0* a1);
T6 r347is_windows(T347* C);
void r347out_in_tagged_out_memory(T347* C);
void r347make(T347* C);
void r347old_put_string(T0* a1);
T6 r347conforms_to(T347* C,T0* a1);
T6 r347is_unix(T347* C);
void r347put_line(T0* a1);
T0* r347twin(T347* C);
void r169trace(T169* C,T0* a1);
T6 r169is_cleanable(T169* C);
T0* r169file_system(void);
T6 r169se_assigned_from(T0* a1);
void r169print_on(T169* C,T0* a1);
T0* r169clone(T0* a1);
void r169out_in_tagged_out_memory(T169* C);
void r169execute_clean(T169* C);
T6 r169conforms_to(T169* C,T0* a1);
void r169execute_tuner(T169* C);
T6 r169is_compilable(T169* C);
void r169execute(T169* C);
T6 r169is_tunable(T169* C);
T0* r169twin(T169* C);
void r169execute_shell(T169* C,T0* a1);
T6 r169is_executable(T169* C);
extern T0*oBC43Echo_task_name;
extern int fBC43Echo_task_name;
T0* r42Echo_task_name(void);
extern T0*oBC44Dir_attribute_name;
extern int fBC44Dir_attribute_name;
T0* r42Dir_attribute_name(void);
extern T0*oBC43Outofdate_task_name;
extern int fBC43Outofdate_task_name;
T0* r42Outofdate_task_name(void);
extern T0*oBC43Delete_task_name;
extern int fBC43Delete_task_name;
T0* r42Delete_task_name(void);
T0* r42dependencies(T42* C);
extern T0*oBC43Set_task_name;
extern int fBC43Set_task_name;
T0* r42Set_task_name(void);
extern T0*oBC43Ise_task_name;
extern int fBC43Ise_task_name;
T0* r42Ise_task_name(void);
extern T0*oBC43Exec_task_name;
extern int fBC43Exec_task_name;
T0* r42Exec_task_name(void);
T0* r42Unless_attribute_name(void);
T0* r42dependent_targets(T42* C);
T0* r42If_attribute_name(void);
extern T0*oBC43Mkdir_task_name;
extern int fBC43Mkdir_task_name;
T0* r42Mkdir_task_name(void);
T0* r42file_system(void);
extern T0*oBC43Setenv_task_name;
extern int fBC43Setenv_task_name;
T0* r42Setenv_task_name(void);
T6 r42has_dependencies(T42* C);
T6 r42se_assigned_from(T0* a1);
void r42print_on(T42* C,T0* a1);
T0* r42clone(T0* a1);
extern T0*oBC42Depend_attribute_name;
extern int fBC42Depend_attribute_name;
T0* r42Depend_attribute_name(void);
extern T0*oBC43Geant_task_name;
extern int fBC43Geant_task_name;
T0* r42Geant_task_name(void);
void r42out_in_tagged_out_memory(T42* C);
T0* r42Description_element_name(void);
extern T0*oBC43Hact_task_name;
extern int fBC43Hact_task_name;
T0* r42Hact_task_name(void);
void r42make(T42* C,T0* a1,T0* a2);
extern T0*oBC43Gexace_task_name;
extern int fBC43Gexace_task_name;
T0* r42Gexace_task_name(void);
extern T0*oBC43Gelex_task_name;
extern int fBC43Gelex_task_name;
T0* r42Gelex_task_name(void);
extern T0*oBC43Unset_task_name;
extern int fBC43Unset_task_name;
T0* r42Unset_task_name(void);
extern T0*oBC43Se_task_name;
extern int fBC43Se_task_name;
T0* r42Se_task_name(void);
T6 r42conforms_to(T42* C,T0* a1);
void r42print(T0* a1);
T0* r42string_tokens(T0* a1,T3 a2);
extern T0*oBC43Getest_task_name;
extern int fBC43Getest_task_name;
T0* r42Getest_task_name(void);
T6 r42has_description(T42* C);
void r42_44Pmake(T42* C,T0* a1,T0* a2);
extern T0*oBC43Copy_task_name;
extern int fBC43Copy_task_name;
T0* r42Copy_task_name(void);
void r42execute(T42* C);
extern T0*oBC42Name_attribute_name;
extern int fBC42Name_attribute_name;
T0* r42Name_attribute_name(void);
T6 r42is_enabled(T42* C);
extern T0*oBC43Lcc_task_name;
extern int fBC43Lcc_task_name;
T0* r42Lcc_task_name(void);
void r42exit_application(T2 a1,T0* a2);
extern T0*oBC43Xslt_task_name;
extern int fBC43Xslt_task_name;
T0* r42Xslt_task_name(void);
extern T0*oBC43Gepp_task_name;
extern int fBC43Gepp_task_name;
T0* r42Gepp_task_name(void);
T0* r42twin(T42* C);
extern T0*oBC43Move_task_name;
extern int fBC43Move_task_name;
T0* r42Move_task_name(void);
extern T0*oBC43Geyacc_task_name;
extern int fBC43Geyacc_task_name;
T0* r42Geyacc_task_name(void);
extern T0*oBC43Ve_task_name;
extern int fBC43Ve_task_name;
T0* r42Ve_task_name(void);
extern T0*oBC168Clean_attribute_name;
extern int fBC168Clean_attribute_name;
T0* r168Clean_attribute_name(void);
T0* r168Unless_attribute_name(void);
void r168element_make(T168* C,T0* a1,T0* a2);
T0* r168If_attribute_name(void);
extern T0*oBC168Level_attribute_name;
extern int fBC168Level_attribute_name;
T0* r168Level_attribute_name(void);
T6 r168se_assigned_from(T0* a1);
void r168print_on(T168* C,T0* a1);
extern T0*oBC168Esd_attribute_name;
extern int fBC168Esd_attribute_name;
T0* r168Esd_attribute_name(void);
void r168out_in_tagged_out_memory(T168* C);
T6 r168uc_boolean_value(T168* C,T0* a1);
void r168make(T168* C,T0* a1,T0* a2);
T0* r168True_attribute_value(void);
T0* r168uc_attribute_value(T168* C,T0* a1);
void r168task_make(T168* C,T0* a1,T0* a2);
T6 r168conforms_to(T168* C,T0* a1);
void r168print(T0* a1);
T0* r168uc_attribute_value_or_default(T168* C,T0* a1,T0* a2);
T6 r168is_enabled(T168* C);
T0* r168False_attribute_value(void);
extern T0*oBC168Recursive_attribute_name;
extern int fBC168Recursive_attribute_name;
T0* r168Recursive_attribute_name(void);
T0* r168attribute_value_or_default(T168* C,T0* a1,T0* a2);
T0* r168twin(T168* C);
extern T0*oBC168Tune_attribute_name;
extern int fBC168Tune_attribute_name;
T0* r168Tune_attribute_name(void);
T6 r83se_assigned_from(T0* a1);
void r83print_on(T83* C,T0* a1);
void r83out_in_tagged_out_memory(T83* C);
void r83make(T83* C);
void r83insert(T83* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r83remove(T83* C,T2 a1,T2 a2);
void r83insert_code(T83* C,T2 a1,T2 a2);
void r83move(T83* C,T2 a1,T2 a2,T2 a3);
T6 r83conforms_to(T83* C,T0* a1);
void r83storage_ensure_capacity(T83* C,T2 a1);
T0* r83twin(T83* C);
T0* r215Unless_attribute_name(void);
void r215element_make(T215* C,T0* a1,T0* a2);
T0* r215attribute_value(T215* C,T0* a1);
T0* r215If_attribute_name(void);
T6 r215se_assigned_from(T0* a1);
void r215print_on(T215* C,T0* a1);
void r215out_in_tagged_out_memory(T215* C);
void r215make(T215* C,T0* a1,T0* a2);
void r215task_make(T215* C,T0* a1,T0* a2);
T6 r215conforms_to(T215* C,T0* a1);
extern T0*oBC215Message_attribute_name;
extern int fBC215Message_attribute_name;
T0* r215Message_attribute_name(void);
T6 r215is_enabled(T215* C);
T0* r215twin(T215* C);
void r311yy_do_action(T311* C,T2 a1);
extern T0*oBC312yytable_template;
extern int fBC312yytable_template;
T0* r311yytable_template(void);
T0* r311empty_ucstring(void);
void r311make_parser_skeleton(T311* C);
T2 r311yy_at_beginning_of_line(T311* C);
void r311fatal_error(T0* a1);
T0* r311yytype1(T0* a1);
T0* r311yytype2(T0* a1);
T0* r311yytype3(T0* a1);
T0* r311yytype4(T0* a1);
void r311handle_found_text(T311* C);
void r311parse(T311* C);
void r311set_input_buffer(T311* C,T0* a1);
T2 r311yy_translate(T311* C,T2 a1);
extern T0*oBC313yy_ec_template;
extern int fBC313yy_ec_template;
T0* r311yy_ec_template(void);
void r311yy_execute_action(T311* C,T2 a1);
extern T0*oBC312yytranslate_template;
extern int fBC312yytranslate_template;
T0* r311yytranslate_template(void);
void r311clear_stacks(T311* C);
extern T0*oBC313yy_def_template;
extern int fBC313yy_def_template;
T0* r311yy_def_template(void);
T3 r311text_item(T311* C,T2 a1);
void r311yy_load_input_buffer(T311* C);
extern T67 oBC312uc_collon;
extern int fBC312uc_collon;
T67 r311uc_collon(void);
extern T0*oBC312yyr1_template;
extern int fBC312yyr1_template;
T0* r311yyr1_template(void);
void r311make_with_buffer(T311* C,T0* a1);
T2 r311yy_null_trans_state(T311* C,T2 a1);
extern T0*oBC313yy_accept_template;
extern int fBC313yy_accept_template;
T0* r311yy_accept_template(void);
void r311read_token(T311* C);
extern T0*oBC312yyr2_template;
extern int fBC312yyr2_template;
T0* r311yyr2_template(void);
T2 r311yy_previous_state(T311* C);
extern T0*oBC312yypgoto_template;
extern int fBC312yypgoto_template;
T0* r311yypgoto_template(void);
void r311yy_refill_input_buffer(T311* C);
T0* r311yy_fixed_array(T0* a1);
T6 r311conforms_to(T311* C,T0* a1);
extern T0*oBC313yy_meta_template;
extern int fBC313yy_meta_template;
T0* r311yy_meta_template(void);
extern T0*oBC313yy_base_template;
extern int fBC313yy_base_template;
T0* r311yy_base_template(void);
T0* r311twin(T311* C);
T0* r311clone(T0* a1);
T0* r311new_file_buffer(T0* a1);
void r311yy_initialize(T311* C);
void r311reset(T311* C);
void r311parse_from_file_name(T311* C,T0* a1);
T0* r311text(T311* C);
void r311out_in_tagged_out_memory(T311* C);
extern T0*oBC313yy_nxt_template;
extern int fBC313yy_nxt_template;
T0* r311yy_nxt_template(void);
void r311parse_from_stream(T311* C,T0* a1);
void r311yy_set_line_column(T311* C);
void r311yy_build_parser_tables(T311* C);
T0* r311split_name_and_prefix(T0* a1);
void r311report_error(T311* C,T0* a1);
extern T0*oBC312yydefact_template;
extern int fBC312yydefact_template;
T0* r311yydefact_template(void);
extern T0*oBC313yy_chk_template;
extern int fBC313yy_chk_template;
T0* r311yy_chk_template(void);
extern T0*oBC312yycheck_template;
extern int fBC312yycheck_template;
T0* r311yycheck_template(void);
void r311make(T311* C);
T0* r311yyfixed_array(T0* a1);
void r311yy_clear_all(T311* C);
extern T0*oBC312yydefgoto_template;
extern int fBC312yydefgoto_template;
T0* r311yydefgoto_template(void);
void r311yy_set_content(T311* C,T0* a1);
extern T0*oBC312yypact_template;
extern int fBC312yypact_template;
T0* r311yypact_template(void);
void r311set_start_condition(T311* C,T2 a1);
T6 r311se_assigned_from(T0* a1);
void r311yy_build_tables(T311* C);
void r311print_on(T311* C,T0* a1);
extern T0*oBC198Meta_ecs_attribute_name;
extern int fBC198Meta_ecs_attribute_name;
T0* r198Meta_ecs_attribute_name(void);
extern T0*oBC198Output_filename_attribute_name;
extern int fBC198Output_filename_attribute_name;
T0* r198Output_filename_attribute_name(void);
extern T0*oBC198Size_attribute_name;
extern int fBC198Size_attribute_name;
T0* r198Size_attribute_name(void);
extern T0*oBC198Ecs_attribute_name;
extern int fBC198Ecs_attribute_name;
T0* r198Ecs_attribute_name(void);
T0* r198Unless_attribute_name(void);
void r198element_make(T198* C,T0* a1,T0* a2);
T0* r198If_attribute_name(void);
T6 r198se_assigned_from(T0* a1);
void r198print_on(T198* C,T0* a1);
void r198out_in_tagged_out_memory(T198* C);
T6 r198uc_boolean_value(T198* C,T0* a1);
void r198make(T198* C,T0* a1,T0* a2);
T0* r198True_attribute_value(void);
T0* r198uc_attribute_value(T198* C,T0* a1);
void r198task_make(T198* C,T0* a1,T0* a2);
extern T0*oBC198Case_insensitive_attribute_name;
extern int fBC198Case_insensitive_attribute_name;
T0* r198Case_insensitive_attribute_name(void);
extern T0*oBC198No_default_attribute_name;
extern int fBC198No_default_attribute_name;
T0* r198No_default_attribute_name(void);
T6 r198conforms_to(T198* C,T0* a1);
void r198print(T0* a1);
extern T0*oBC198Backup_attribute_name;
extern int fBC198Backup_attribute_name;
T0* r198Backup_attribute_name(void);
extern T0*oBC198No_warn_attribute_name;
extern int fBC198No_warn_attribute_name;
T0* r198No_warn_attribute_name(void);
T6 r198is_enabled(T198* C);
T0* r198False_attribute_value(void);
extern T0*oBC198Separate_actions_attribute_name;
extern int fBC198Separate_actions_attribute_name;
T0* r198Separate_actions_attribute_name(void);
T0* r198twin(T198* C);
extern T0*oBC198Input_filename_attribute_name;
extern int fBC198Input_filename_attribute_name;
T0* r198Input_filename_attribute_name(void);
extern T0*oBC198Full_attribute_name;
extern int fBC198Full_attribute_name;
T0* r198Full_attribute_name(void);
extern T0*oBC261stack;
extern int fBC261stack;
T0* r261stack(void);
void r261on_content(T0* a1);
T6 r261se_assigned_from(T0* a1);
void r261print_on(T261* C,T0* a1);
T0* r261clone(T0* a1);
void r261out_in_tagged_out_memory(T261* C);
void r261on_start_tag(T261* C,T0* a1,T0* a2,T0* a3);
void r261make_from_implementation(T261* C,T0* a1);
T6 r261conforms_to(T261* C,T0* a1);
T0* r261twin(T261* C);
void r231trace(T231* C,T0* a1);
T0* r231file_system(void);
T6 r231se_assigned_from(T0* a1);
void r231print_on(T231* C,T0* a1);
T0* r231clone(T0* a1);
void r231out_in_tagged_out_memory(T231* C);
void r231make(T231* C,T0* a1);
T6 r231conforms_to(T231* C,T0* a1);
void r231_159Pmake(T231* C,T0* a1);
void r231execute(T231* C);
T0* r231twin(T231* C);
void r231execute_shell(T231* C,T0* a1);
T6 r231is_executable(T231* C);
void r369copy(T369* C,T0* a1);
void r369append_name(T369* C,T0* a1);
T6 r369se_assigned_from(T0* a1);
void r369print_on(T369* C,T0* a1);
T0* r369clone(T0* a1);
void r369out_in_tagged_out_memory(T369* C);
T6 r369is_parent(T369* C,T2 a1);
void r369make(T369* C);
void r369set_canonical(T369* C);
T6 r369conforms_to(T369* C,T0* a1);
T0* r369twin(T369* C);
T6 r369is_current(T369* C,T2 a1);
void r171trace(T171* C,T0* a1);
T6 r171se_assigned_from(T0* a1);
void r171print_on(T171* C,T0* a1);
void r171out_in_tagged_out_memory(T171* C);
T6 r171conforms_to(T171* C,T0* a1);
void r171execute(T171* C);
T0* r171twin(T171* C);
void r171execute_shell(T171* C,T0* a1);
T6 r171is_executable(T171* C);
T6 r50se_assigned_from(T0* a1);
void r50print_on(T50* C,T0* a1);
void r50out_in_tagged_out_memory(T50* C);
T6 r50conforms_to(T50* C,T0* a1);
T0* r50twin(T50* C);
void r50put_character(T3 a1);
void r50put_string(T0* a1);
void r165trace(T165* C,T0* a1);
T6 r165is_cleanable(T165* C);
T0* r165file_system(void);
T6 r165se_assigned_from(T0* a1);
void r165print_on(T165* C,T0* a1);
T0* r165clone(T0* a1);
void r165out_in_tagged_out_memory(T165* C);
void r165execute_clean(T165* C);
void r165execute_compile(T165* C);
T6 r165conforms_to(T165* C,T0* a1);
T6 r165is_compilable(T165* C);
void r165execute(T165* C);
T0* r165twin(T165* C);
void r165execute_shell(T165* C,T0* a1);
T6 r165is_executable(T165* C);
T0* r87expanded_variable_value(T87* C,T0* a1);
T0* r87variable_value(T87* C,T0* a1);
T0* r87file_system(void);
T6 r87se_assigned_from(T0* a1);
void r87print_on(T87* C,T0* a1);
T0* r87clone(T0* a1);
void r87out_in_tagged_out_memory(T87* C);
void r87make(T87* C);
extern T0*oBC19Commandline_variables;
extern int fBC19Commandline_variables;
T0* r87Commandline_variables(void);
extern T0*oBC20Execution_environment;
T6 r87boolean_condition_value(T87* C,T0* a1);
T6 r87conforms_to(T87* C,T0* a1);
void r87print(T0* a1);
T0* r87string_tokens(T0* a1,T3 a2);
T0* r87interpreted_string(T87* C,T0* a1);
void r87exit_application(T2 a1,T0* a2);
T0* r87twin(T87* C);
T6 r87has_variable(T87* C,T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r343command_arguments(void);
T6 r343se_assigned_from(T0* a1);
void r343print_on(T343* C,T0* a1);
void r343out_in_tagged_out_memory(T343* C);
T6 r343conforms_to(T343* C,T0* a1);
T0* r343twin(T343* C);
T0* r343argument(T2 a1);
T6 r303se_assigned_from(T0* a1);
void r303print_on(T303* C,T0* a1);
void r303out_in_tagged_out_memory(T303* C);
void r303make(T303* C);
T6 r303conforms_to(T303* C,T0* a1);
T0* r303new_eiffel_event_parser_imp(T303* C);
T0* r303twin(T303* C);
T6 r349se_assigned_from(T0* a1);
void r349print_on(T349* C,T0* a1);
void r349out_in_tagged_out_memory(T349* C);
T2 r349execute_command(T0* a1);
T6 r349conforms_to(T349* C,T0* a1);
void r349execute(T349* C);
T0* r349twin(T349* C);
extern T0*oBC178Cluster_attribute_name;
extern int fBC178Cluster_attribute_name;
T0* r178Cluster_attribute_name(void);
extern T0*oBC178Validate_attribute_name;
extern int fBC178Validate_attribute_name;
T0* r178Validate_attribute_name(void);
extern T0*oBC178System_attribute_name;
extern int fBC178System_attribute_name;
T0* r178System_attribute_name(void);
extern T0*oBC178Output_filename_attribute_name;
extern int fBC178Output_filename_attribute_name;
T0* r178Output_filename_attribute_name(void);
extern T0*oBC178Xace_filename_attribute_name;
extern int fBC178Xace_filename_attribute_name;
T0* r178Xace_filename_attribute_name(void);
T0* r178Unless_attribute_name(void);
void r178element_make(T178* C,T0* a1,T0* a2);
extern T0*oBC178Verbose_attribute_name;
extern int fBC178Verbose_attribute_name;
T0* r178Verbose_attribute_name(void);
T0* r178If_attribute_name(void);
T6 r178se_assigned_from(T0* a1);
void r178print_on(T178* C,T0* a1);
extern T0*oBC178Define_element_name;
extern int fBC178Define_element_name;
T0* r178Define_element_name(void);
void r178out_in_tagged_out_memory(T178* C);
T6 r178uc_boolean_value(T178* C,T0* a1);
void r178make(T178* C,T0* a1,T0* a2);
T0* r178True_attribute_value(void);
T0* r178uc_attribute_value(T178* C,T0* a1);
void r178task_make(T178* C,T0* a1,T0* a2);
T6 r178conforms_to(T178* C,T0* a1);
void r178print(T0* a1);
T6 r178is_enabled(T178* C);
T0* r178False_attribute_value(void);
T0* r178twin(T178* C);
T0* r176Unless_attribute_name(void);
void r176element_make(T176* C,T0* a1,T0* a2);
T0* r176If_attribute_name(void);
T6 r176se_assigned_from(T0* a1);
void r176print_on(T176* C,T0* a1);
void r176out_in_tagged_out_memory(T176* C);
void r176make(T176* C,T0* a1,T0* a2);
T0* r176uc_attribute_value(T176* C,T0* a1);
void r176task_make(T176* C,T0* a1,T0* a2);
T6 r176conforms_to(T176* C,T0* a1);
extern T0*oBC176Name_attribute_name;
extern int fBC176Name_attribute_name;
T0* r176Name_attribute_name(void);
T6 r176is_enabled(T176* C);
T0* r176twin(T176* C);
void r226trace(T226* C,T0* a1);
T6 r226se_assigned_from(T0* a1);
void r226print_on(T226* C,T0* a1);
void r226out_in_tagged_out_memory(T226* C);
T6 r226conforms_to(T226* C,T0* a1);
void r226execute(T226* C);
T0* r226twin(T226* C);
T6 r226is_executable(T226* C);
T6 r282is_closed(T282* C);
void r282old_close(T282* C);
T2 r282count(T282* C);
void r282old_delete(T0* a1);
T2 r282time_stamp(T282* C);
T6 r282file_exists(T0* a1);
extern T362 oBC286epoch_time;
extern int fBC286epoch_time;
T362 r282epoch_time(void);
T362 r282last_change_of(T0* a1);
void r282rename_to(T0* a1,T0* a2);
void r282open_read(T282* C);
T0* r282file_system(void);
T6 r282se_assigned_from(T0* a1);
void r282print_on(T282* C,T0* a1);
void r282old_read_character(T282* C);
T6 r282old_end_of_file(T282* C);
void r282out_in_tagged_out_memory(T282* C);
void r282close(T282* C);
void r282make(T282* C,T0* a1);
T6 r282exists(T282* C);
T2 r282size_of(T0* a1);
T6 r282conforms_to(T282* C,T0* a1);
void r282copy_file(T282* C,T0* a1);
void r282connect_to(T282* C,T0* a1);
extern T287 oBC1file_tools;
T6 r282same_physical_file(T282* C,T0* a1);
void r282delete(T282* C);
T0* r282twin(T282* C);
void r282change_name(T282* C,T0* a1);
extern T0*oBC286tmp_file1;
extern int fBC286tmp_file1;
T0* r282tmp_file1(void);
T6 r282is_readable(T282* C);
extern T0*oBC283tmp_directory;
extern int fBC283tmp_directory;
T0* r282tmp_directory(void);
T6 r295is_closed(T295* C);
T6 r295old_end_of_input(T295* C);
void r295open_read(T295* C);
T0* r295file_system(void);
T6 r295se_assigned_from(T0* a1);
void r295print_on(T295* C,T0* a1);
T0* r295clone(T0* a1);
void r295out_in_tagged_out_memory(T295* C);
void r295create_directory(T295* C);
T6 r295is_open_read(T295* C);
void r295close(T295* C);
T6 r295exists(T295* C);
void r295recursive_create_directory(T295* C);
void r295read_entry(T295* C);
T6 r295conforms_to(T295* C,T0* a1);
void r295delete(T295* C);
T0* r295twin(T295* C);
void r295recursive_delete(T295* C);
T6 r295is_readable(T295* C);
extern T0*oBC287tfr1;
T6 r287is_readable(T0* a1);
T6 r363se_assigned_from(T0* a1);
void r363print_on(T363* C,T0* a1);
T6 r363conforms_to(T363* C,T0* a1);
T0* r363twin(T363* C);
void r16read_command_line(T16* C);
T6 r16se_assigned_from(T0* a1);
void r16print_on(T16* C,T0* a1);
T0* r16clone(T0* a1);
void r16out_in_tagged_out_memory(T16* C);
void r16report_usage_message(T16* C);
T0* r16Arguments(void);
T0* r16Commandline_variables(void);
void r16make(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16print(T0* a1);
void r16report_version_number(T16* C);
void r16exit_application(T2 a1,T0* a2);
T0* r16twin(T16* C);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
void r16report_usage_error(T16* C);
extern T0*oBC332error;
extern int fBC332error;
T0* r332error(void);
T6 r332se_assigned_from(T0* a1);
void r332print_on(T332* C,T0* a1);
void r332out_in_tagged_out_memory(T332* C);
extern T0*oBC332input;
extern int fBC332input;
T0* r332input(void);
extern T0*oBC332output;
extern int fBC332output;
T0* r332output(void);
T6 r332conforms_to(T332* C,T0* a1);
T0* r332twin(T332* C);
T6 r131se_assigned_from(T0* a1);
void r131print_on(T131* C,T0* a1);
void r131out_in_tagged_out_memory(T131* C);
T6 r131conforms_to(T131* C,T0* a1);
T0* r131twin(T131* C);
void r48raise(T48* C,T0* a1);
T6 r48se_assigned_from(T0* a1);
void r48print_on(T48* C,T0* a1);
void r48out_in_tagged_out_memory(T48* C);
T6 r48conforms_to(T48* C,T0* a1);
T0* r48twin(T48* C);
extern T0*oBC49developer_exception_name_memory;
void r49raise(T49* C,T0* a1);
T6 r49se_assigned_from(T0* a1);
void r49print_on(T49* C,T0* a1);
void r49out_in_tagged_out_memory(T49* C);
T6 r49conforms_to(T49* C,T0* a1);
T0* r49twin(T49* C);
T6 r46se_assigned_from(T0* a1);
void r46print_on(T46* C,T0* a1);
T6 r46conforms_to(T46* C,T0* a1);
T0* r46twin(T46* C);
T6 r418se_assigned_from(T0* a1);
void r418print_on(T418* C,T0* a1);
void r418out_in_tagged_out_memory(T418* C);
T6 r418conforms_to(T418* C,T0* a1);
T0* r418twin(T418* C);
T6 r53se_assigned_from(T0* a1);
void r53print_on(T53* C,T0* a1);
void r53out_in_tagged_out_memory(T53* C);
T6 r53conforms_to(T53* C,T0* a1);
T0* r53twin(T53* C);
T6 r417se_assigned_from(T0* a1);
void r417print_on(T417* C,T0* a1);
void r417out_in_tagged_out_memory(T417* C);
T6 r417conforms_to(T417* C,T0* a1);
T0* r417twin(T417* C);
T6 r132se_assigned_from(T0* a1);
void r132print_on(T132* C,T0* a1);
void r132out_in_tagged_out_memory(T132* C);
T0* r132to_hexadecimal(T2 a1,T6 a2);
T6 r132conforms_to(T132* C,T0* a1);
T3 r132to_character(T2 a1);
T0* r132twin(T132* C);
void r132append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC79factory;
extern int fBC79factory;
T0* r79factory(void);
T6 r79se_assigned_from(T0* a1);
void r79print_on(T79* C,T0* a1);
void r79out_in_tagged_out_memory(T79* C);
T6 r79conforms_to(T79* C,T0* a1);
T0* r79twin(T79* C);
T6 r419se_assigned_from(T0* a1);
void r419print_on(T419* C,T0* a1);
void r419out_in_tagged_out_memory(T419* C);
T6 r419conforms_to(T419* C,T0* a1);
T0* r419twin(T419* C);
T6 r45se_assigned_from(T0* a1);
void r45print_on(T45* C,T0* a1);
T6 r45conforms_to(T45* C,T0* a1);
T0* r45twin(T45* C);
T2 r362elapsed_seconds(T362* C,T362 a1);
T6 r362set(T362* C,T2 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T6 r309se_assigned_from(T0* a1);
void r309print_on(T309* C,T0* a1);
void r309out_in_tagged_out_memory(T309* C);
T6 r309conforms_to(T309* C,T0* a1);
T0* r309twin(T309* C);
T0* r370name(T0* a1);
T0* r370make_file_open_read(T0* a1);
T6 r370se_assigned_from(T0* a1);
void r370print_on(T370* C,T0* a1);
void r370out_in_tagged_out_memory(T370* C);
void r370close(T0* a1);
T6 r370conforms_to(T370* C,T0* a1);
T6 r370end_of_input(T0* a1);
T2 r370read_stream(T0* a1,T0* a2,T2 a3,T2 a4);
T0* r370twin(T370* C);
void r137connect_to_current_working_directory(T137* C);
void r137disconnect(T137* C);
T6 r137remove_directory(T0* a1);
extern T0*oBC137last_entry;
void r137change_current_working_directory(T137* C,T0* a1);
void r137read_entry(T137* C);
void r137connect_to(T137* C,T0* a1);
T6 r137create_new_directory(T0* a1);
T6 r133se_assigned_from(T0* a1);
void r133print_on(T133* C,T0* a1);
void r133out_in_tagged_out_memory(T133* C);
T6 r133is_integer(T0* a1);
T0* r133make(T2 a1);
T6 r133conforms_to(T133* C,T0* a1);
T0* r133twin(T133* C);
T0* r67out(T67* C);
extern T0*oBC70Platform;
T3 r67as_character(T67* C);
T6 r67_px_60(T67* C,T67 a1);
T6 r67_px_62(T67* C,T67 a1);
T0* r67as_hexadecimal(T67* C);
T3 r67code_to_character(T2 a1);
extern T0*oBC69INTEGER_;
T0* r89variable_value(T0* a1);
T6 r89se_assigned_from(T0* a1);
void r89print_on(T89* C,T0* a1);
void r89out_in_tagged_out_memory(T89* C);
T0* r89get_environment_variable(T0* a1);
T6 r89conforms_to(T89* C,T0* a1);
T0* r89twin(T89* C);
T2 r366nr_of_following_octets(T3 a1);
T6 r366se_assigned_from(T0* a1);
void r366print_on(T366* C,T0* a1);
void r366read_code(T366* C,T0* a1,T2 a2);
void r366out_in_tagged_out_memory(T366* C);
void r366put_code(T2 a1,T0* a2,T2 a3);
void r366read_following_octet(T366* C,T0* a1);
T6 r366conforms_to(T366* C,T0* a1);
T3 r366code_to_character(T2 a1);
T2 r366octet_size(T2 a1);
T0* r366twin(T366* C);
extern T0*oBC366specific;
T6 r366is_leading_octet(T3 a1);
T2 r366read_leading_octet(T366* C,T0* a1,T2 a2);
T6 r307se_assigned_from(T0* a1);
void r307print_on(T307* C,T0* a1);
void r307out_in_tagged_out_memory(T307* C);
T6 r307conforms_to(T307* C,T0* a1);
T0* r307twin(T307* C);
T6 r52se_assigned_from(T0* a1);
void r52print_on(T52* C,T0* a1);
T6 r52conforms_to(T52* C,T0* a1);
T0* r52twin(T52* C);
T0* r331substring(T0* a1,T2 a2,T2 a3);
T6 r331se_assigned_from(T0* a1);
void r331print_on(T331* C,T0* a1);
void r331out_in_tagged_out_memory(T331* C);
void r331move_left(T0* a1,T2 a2,T2 a3,T2 a4);
T0* r331make(T2 a1);
T6 r331conforms_to(T331* C,T0* a1);
T0* r331resize(T0* a1,T2 a2);
T2 r331copy_from_stream(T0* a1,T2 a2,T0* a3,T2 a4);
T0* r331twin(T331* C);
T6 r420se_assigned_from(T0* a1);
void r420print_on(T420* C,T0* a1);
void r420out_in_tagged_out_memory(T420* C);
T6 r420conforms_to(T420* C,T0* a1);
T0* r420twin(T420* C);
T0* r136current_working_directory(T136* C);
T6 r136se_assigned_from(T0* a1);
void r136print_on(T136* C,T0* a1);
T0* r136clone(T0* a1);
T6 r136is_windows(T136* C);
void r136out_in_tagged_out_memory(T136* C);
T6 r136conforms_to(T136* C,T0* a1);
T6 r136is_unix(T136* C);
T0* r136twin(T136* C);
T0* r308new_event_parser_imp(void);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 421
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms27_1299730420;
extern T7*ms224_591632351;
extern T7*ms169_210841101a;
extern T7*ms27_803892311;
extern T7*ms42_16821;
extern T7*ms163_392507;
extern T7*ms268_440571;
extern T7*ms178_391651;
extern T7*ms16_23340076;
extern T7*ms165_1086847256;
extern T7*ms168_0aaa;
extern T7*ms167_90108711;
extern T7*ms7_241908472;
extern T7*ms165_347001;
extern T7*ms138_276;
extern T7*ms213_440571;
extern T7*ms42_10;
extern T7*ms347_447584;
extern T7*ms163_10a;
extern T7*ms42_1367980604;
extern T7*ms163_32a;
extern T7*ms75_251;
extern T7*ms220_420355647a;
extern T7*ms333_89510;
extern T7*ms165_293876;
extern T7*ms223_16016;
extern T7*ms231_16885647;
extern T7*ms198_2142980;
extern T7*ms198_382622;
extern T7*ms198_10531885;
extern T7*ms227_281466146;
extern T7*ms222_498244349;
extern T7*ms44_18036;
extern T7*ms172_1544179189;
extern T7*ms179_89261;
extern T7*ms27_247356966;
extern T7*ms43_80091;
extern T7*ms22_1479;
extern T7*ms180_429291314;
extern T7*ms27_924849867;
extern T7*ms165_143262;
extern T7*ms43_80325;
extern T7*ms169_9366019;
extern T7*ms168_18076;
extern T7*ms87_2077395a;
extern T7*ms169_210841101aa;
extern T7*ms16_323;
extern T7*ms16_329;
extern T7*ms16_288;
extern T7*ms16_343;
extern T7*ms251_18036;
extern T7*ms139_276;
extern T7*ms87_1410228;
extern T7*ms169_674647aaa;
extern T7*ms217_49442341;
extern T7*ms167_2102912007;
extern T7*ms87_1307186427;
extern T7*ms169_1206004176;
extern T7*ms87_259694110;
extern T7*ms42_1145887148;
extern T7*ms164_452889;
extern T7*ms225_16821;
extern T7*ms198_16323;
extern T7*ms163_1749788964;
extern T7*ms164_0aa;
extern T7*ms224_2145909738;
extern T7*ms138_46;
extern T7*ms220_420355647;
extern T7*ms169_2230607a;
extern T7*ms167_1955941869;
extern T7*ms19_691485293;
extern T7*ms138_92;
extern T7*ms43_84639;
extern T7*ms202_438001;
extern T7*ms167_60094111;
extern T7*ms6_79251;
extern T7*ms43_90371;
extern T7*ms162_2020550321;
extern T7*ms199_0aa;
extern T7*ms198_17711;
extern T7*ms212_115260364;
extern T7*ms202_391651;
extern T7*ms223_2234766;
extern T7*ms139_46;
extern T7*ms219_49442341;
extern T7*ms139_47;
extern T7*ms162_388005040;
extern T7*ms44_3139;
extern T7*ms165_47904999;
extern T7*ms42_205;
extern T7*ms169_1769599907;
extern T7*ms42_10a;
extern T7*ms221_2234766;
extern T7*ms169_2110593349;
extern T7*ms220_205;
extern T7*ms220_10a;
extern T7*ms165_10a;
extern T7*ms163_1979141;
extern T7*ms251_1238683011;
extern T7*ms42_392800;
extern T7*ms201_10;
extern T7*ms201_32;
extern T7*ms44_1228681540;
extern T7*ms178_1975394;
extern T7*ms169_83091;
extern T7*ms211_1979141;
extern T7*ms201_0a;
extern T7*ms165_271606681;
extern T7*ms268_2065491;
extern T7*ms346_10;
extern T7*ms163_1775;
extern T7*ms222_16818147;
extern T7*ms251_446821;
extern T7*ms167_16823272;
extern T7*ms220_205a;
extern T7*ms165_1819;
extern T7*ms7_280756769;
extern T7*ms163_9895737;
extern T7*ms27_1404162515;
extern T7*ms347_10;
extern T7*ms321_1338477769a;
extern T7*ms203_10;
extern T7*ms268_1957581;
extern T7*ms169_3373326;
extern T7*ms251_282198636;
extern T7*ms203_32;
extern T7*ms165_10aa;
extern T7*ms222_205a;
extern T7*ms203_0a;
extern T7*ms167_8902a;
extern T7*ms87_259694110a;
extern T7*ms165_272198;
extern T7*ms223_1606898500;
extern T7*ms167_10aa;
extern T7*ms224_205a;
extern T7*ms164_1890742889;
extern T7*ms167_91038212;
extern T7*ms169_188710579;
extern T7*ms211_395678;
extern T7*ms169_10aa;
extern T7*ms165_3367397;
extern T7*ms179_16821;
extern T7*ms167_16823272a;
extern T7*ms165_272198a;
extern T7*ms138_8976;
extern T7*ms201_32a;
extern T7*ms165_10aaaa;
extern T7*ms163_5712;
extern T7*ms43_676;
extern T7*ms43_691;
extern T7*ms212_420615272;
extern T7*ms213_16016;
extern T7*ms222_1191017681;
extern T7*ms87_1307186427a;
extern T7*ms180_85840076;
extern T7*ms212_10;
extern T7*ms224_498244349;
extern T7*ms27_1404162515a;
extern T7*ms162_0a;
extern T7*ms366_1684857857;
extern T7*ms166_0aa;
extern T7*ms335_1158552108;
extern T7*ms174_89261;
extern T7*ms16_1771134706;
extern T7*ms163_16686;
extern T7*ms163_10;
extern T7*ms163_32;
extern T7*ms180_115260364;
extern T7*ms75_5426;
extern T7*ms134_80516;
extern T7*ms169_210841101;
extern T7*ms251_440571;
extern T7*ms211_391651;
extern T7*ms222_7487;
extern T7*ms214_10;
extern T7*ms169_674647;
extern T7*ms222_1206173931;
extern T7*ms164_0a;
extern T7*ms180_2015137;
extern T7*ms224_7487;
extern T7*ms61_0;
extern T7*ms165_8949;
extern T7*ms220_10;
extern T7*ms165_10;
extern T7*ms167_8711;
extern T7*ms164_10030586;
extern T7*ms7_1983847;
extern T7*ms198_3135;
extern T7*ms44_627;
extern T7*ms222_205;
extern T7*ms167_8902;
extern T7*ms167_10a;
extern T7*ms87_1410228a;
extern T7*ms216_10;
extern T7*ms171_10;
extern T7*ms180_428919114;
extern T7*ms166_0a;
extern T7*ms75_2124547;
extern T7*ms370_1338085634;
extern T7*ms16_184927;
extern T7*ms169_1428018568;
extern T7*ms222_10;
extern T7*ms167_10;
extern T7*ms200_1801319434;
extern T7*ms163_658766397;
extern T7*ms165_1086847256aa;
extern T7*ms200_448440;
extern T7*ms201_2015752;
extern T7*ms165_10aaaaa;
extern T7*ms162_78495;
extern T7*ms218_1463233606;
extern T7*ms215_2108041;
extern T7*ms178_11153106;
extern T7*ms312_38a;
extern T7*ms218_10;
extern T7*ms173_10;
extern T7*ms173_32;
extern T7*ms166_10030586;
extern T7*ms169_1391903168;
extern T7*ms286_80516;
extern T7*ms212_2013612;
extern T7*ms165_272198aa;
extern T7*ms168_54423316;
extern T7*ms312_60a;
extern T7*ms43_16036;
extern T7*ms312_62a;
extern T7*ms168_0a;
extern T7*ms167_15065;
extern T7*ms43_16072;
extern T7*ms345_1515383187;
extern T7*ms87_18020;
extern T7*ms87_18036;
extern T7*ms43_15731;
extern T7*ms43_16229;
extern T7*ms220_1127570490;
extern T7*ms43_15831;
extern T7*ms224_10;
extern T7*ms169_10;
extern T7*ms167_16054;
extern T7*ms43_17091;
extern T7*ms203_16824172;
extern T7*ms165_3367397a;
extern T7*ms286_2034932;
extern T7*ms369_46;
extern T7*ms43_403021;
extern T7*ms169_10aaaa;
extern T7*ms180_10;
extern T7*ms175_10;
extern T7*ms180_32;
extern T7*ms180_34;
extern T7*ms286_2034932a;
extern T7*ms180_61;
extern T7*ms175_61;
extern T7*ms43_403144;
extern T7*ms203_32a;
extern T7*ms43_402716;
extern T7*ms169_3373326aa;
extern T7*ms218_205;
extern T7*ms180_34aaa;
extern T7*ms231_10;
extern T7*ms226_10;
extern T7*ms231_32;
extern T7*ms226_61;
extern T7*ms178_2246326;
extern T7*ms43_18531;
extern T7*ms165_10aaa;
extern T7*ms226_421552197;
extern T7*ms231_0a;
extern T7*ms199_84117997;
extern T7*ms6_18036;
extern T7*ms87_1410228aaa;
extern T7*ms164_78495;
extern T7*ms177_10;
extern T7*ms165_1560205919;
extern T7*ms169_1546380197;
extern T7*ms168_0aa;
extern T7*ms16_1316598903;
extern T7*ms201_420625972;
extern T7*ms27_744323132;
extern T7*ms268_16821;
extern T7*ms219_16016;
extern T7*ms200_438001;
extern T7*ms180_420622897;
extern T7*ms87_3226a;
extern T7*ms16_80091;
extern T7*ms87_18036a;
extern T7*ms167_347001;
extern T7*ms169_16541;
extern T7*ms138_0;
extern T7*ms139_0;
extern T7*ms170_254031466;
extern T7*ms174_16821;
extern T7*ms27_1510;
extern T7*ms167_15065a;
extern T7*ms201_0;
extern T7*ms163_674272;
extern T7*ms321_1338477769;
extern T7*ms167_10aaa;
extern T7*ms203_0;
extern T7*ms224_205aa;
extern T7*ms224_205;
extern T7*ms75_14150;
extern T7*ms218_84225847;
extern T7*ms169_10a;
extern T7*ms166_78495;
extern T7*ms167_293876;
extern T7*ms162_0;
extern T7*ms203_16072;
extern T7*ms165_838447038;
extern T7*ms169_497;
extern T7*ms313_1173251759;
extern T7*ms200_2246326;
extern T7*ms224_2065776307;
extern T7*ms164_0;
extern T7*ms212_576822614;
extern T7*ms44_1756715249;
extern T7*ms224_16849647;
extern T7*ms166_0;
extern T7*ms227_438001;
extern T7*ms168_0;
extern T7*ms199_401657;
extern T7*ms162_254031466;
extern T7*ms165_1139505;
extern T7*ms198_267582581;
extern T7*ms231_0;
extern T7*ms167_453255442;
extern T7*ms167_143262;
extern T7*ms203_1093;
extern T7*ms216_16815647;
extern T7*ms200_82876;
extern T7*ms201_1712;
extern T7*ms44_451090;
extern T7*ms201_1737;
extern T7*ms198_1801319434;
extern T7*ms201_1747;
extern T7*ms201_1757;
extern T7*ms176_16821;
extern T7*ms27_205;
extern T7*ms43_3301;
extern T7*ms27_180;
extern T7*ms162_276875365;
extern T7*ms27_10a;
extern T7*ms43_3294;
extern T7*ms169_3373326a;
extern T7*ms44_79251;
extern T7*ms169_10aaa;
extern T7*ms346_447851;
extern T7*ms43_3496;
extern T7*ms168_78495;
extern T7*ms369_276;
extern T7*ms177_84369147;
extern T7*ms168_83688;
extern T7*ms199_0;
extern T7*ms212_202a;
extern T7*ms27_1962337529;
extern T7*ms203_3427745;
extern T7*ms87_125;
extern T7*ms180_32a;
extern T7*ms87_205;
extern T7*ms180_34a;
extern T7*ms251_79251;
extern T7*ms87_303;
extern T7*ms162_3021;
extern T7*ms166_452889;
extern T7*ms201_32aa;
extern T7*ms164_3021;
extern T7*ms202_82876;
extern T7*ms316_195717202;
extern T7*ms1_14150;
extern T7*ms221_1606898500;
extern T7*ms169_2230607;
extern T7*ms166_3021;
extern T7*ms178_18021;
extern T7*ms175_3372272;
extern T7*ms202_83995;
extern T7*ms199_10;
extern T7*ms199_32;
extern T7*ms168_3200;
extern T7*ms213_199275083;
extern T7*ms173_3367222;
extern T7*ms199_0a;
extern T7*ms198_388005040;
extern T7*ms173_3294;
extern T7*ms198_82876;
extern T7*ms214_836387112;
extern T7*ms231_27872;
extern T7*ms169_674647aa;
extern T7*ms180_2139228939;
extern T7*ms171_16828097;
extern T7*ms178_452889;
extern T7*ms87_2077395;
extern T7*ms366_336971577;
extern T7*ms68_577;
extern T7*ms169_674647a;
extern T7*ms227_53496769;
extern T7*ms370_0;
extern T7*ms43_54738731;
extern T7*ms173_5586;
extern T7*ms312_38;
extern T7*ms312_60;
extern T7*ms312_62;
extern T7*ms87_205a;
extern T7*ms227_82876;
extern T7*ms43_440193;
extern T7*ms180_34aa;
extern T7*ms180_429121856;
extern T7*ms87_3170;
extern T7*ms87_3226;
extern T7*ms251_11171466;
extern T7*ms165_1086847256a;
extern T7*ms169_797202614;
extern T7*ms87_1410228aa;
extern T7*ms231_141612;
extern T7*ms225_89261;
extern T7*ms231_3506042;
extern T7*ms172_254031466;
extern T7*ms27_10;
extern T7*ms199_1642;
extern T7*ms199_1647;
extern T7*ms199_1652;
extern T7*ms199_1702;
extern T7*ms27_39;
extern T7*ms27_46;
extern T7*ms199_1662;
extern T7*ms199_1712;
extern T7*ms199_1667;
extern T7*ms75_4763922;
extern T7*ms199_1682;
extern T7*ms199_1732;
extern T7*ms43_392331;
extern T7*ms199_1752;
extern T7*ms212_202;
extern T7*ms199_1757;
extern T7*ms167_10aaaa;
extern T7*ms231_140577;
extern T7*ms165_90108711;
extern T7*ms162_109478249;
extern T7*ms252_462337930;
extern T7*ms167_60094111a;
extern T7*ms252_1378798665;
extern T7*ms16_23342040;
extern T7*ms87_2272235;
extern T7*ms44_915611165;
extern T7*ms198_438001;
extern T7*ms231_55455187;
extern T7*ms220_643481948;
extern T7*ms165_420927632;
extern T7*ms42_768830101;
extern T7*ms163_674272a;
extern T7*ms16_14036;
extern T7*ms221_16016;
extern T7*ms27_834968801;
extern T7*ms44_1341038798;
extern T7*ms178_438001;
extern T7*ms166_16054;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void se_msi2(void);
void se_msi3(void);
void se_msi4(void);
void se_msi5(void);
void se_msi6(void);
void se_msi7(void);
void se_msi8(void);
void se_msi9(void);
void se_msi10(void);
void*se_ma85(int argc,...);
void X51put_string(T0*C,T0* a1);
T2 X60exit_code(T0*C);
void X60execute(T0*C);
T6 X60is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X50put_string(T0*C,T0* a1);
void X284disconnect(T0*C);
T6 X284is_connected(T0*C);
void X284connect_to(T0*C,T0* a1);
T0* X284path(T0*C);
T6 X1se_assigned_from(T0*C,T0* a1);
void X1print_on(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X325clear_all(T0*C,T0* a1);
T0* X325make(T0*C,T2 a1);
T0* X325resize(T0*C,T0* a1,T2 a2);
void X339put_line(T0*C,T0* a1);
void X49raise(T0*C,T0* a1);
T2 X323count(T0*C);
T2 X323item(T0*C,T2 a1);
T2 X323lower(T0*C);
void X324put(T0*C,T0* a1,T2 a2);
T0* X324item(T0*C,T2 a1);
void X324set_all_with(T0*C,T0* a1);
void X324resize(T0*C,T2 a1);
T2 X159exit_code(T0*C);
void X159execute(T0*C);
T6 X159is_executable(T0*C);
T2 X66item_code(T0*C,T2 a1);
void X66insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X66remove(T0*C,T2 a1,T2 a2);
void X66insert_code(T0*C,T2 a1,T2 a2);
void X285read_character(T0*C);
T6 X285end_of_input(T0*C);
T3 X285last_character(T0*C);
T0* X135string_to_pathname(T0*C,T0* a1);
T0* X336default_message(T0*C);
T6 X136is_windows(T0*C);
T6 X136is_unix(T0*C);
T0* X134pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X134relative_current_directory(T0*C);
T0* X134absolute_pathname(T0*C,T0* a1);
T0* X134dirname(T0*C,T0* a1);
T0* X134exe_extension(T0*C);
T0* X134relative_parent_directory(T0*C);
T0* X134pathname(T0*C,T0* a1,T0* a2);
T0* X134canonical_pathname(T0*C,T0* a1);
T0* T310toT309(int source);
T0* T308toT307(int source);
T0* T2toT46(T2 source);
T2 T46toT2(T0* source);

#ifdef __cplusplus
}
#endif
