#ifdef __cplusplus
extern "C" {
#endif
/*
ANSI C code generated by SmallEiffel The GNU Eiffel Compiler
Release -0.74 Beta #20 (Thursday March 7th 2002)
Copyright (C), 1994-2002 - LORIA - UHP - INRIA - FRANCE
Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
http://SmallEiffel.loria.fr
C Compiler options used: -O
*/

/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/base.h) contains all basic Eiffel
  type definitions.
  This file is automatically included in the header for all modes of
  compilation: -boost, -no_check, -require_check, -ensure_check, ...
  This file is also included in the header of any cecil file (when the
  -cecil option is used).
  This file is also included in the header file of C++ wrappers (when
  using the external "C++" clause).
*/
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <signal.h>
#include <stddef.h>
#include <stdarg.h>
#include <limits.h>
#include <float.h>
#include <setjmp.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#ifdef WIN32
#include <windows.h>
#else
#ifndef O_RDONLY
#include <sys/file.h>
#endif
#ifndef O_RDONLY
#define O_RDONLY 0000
#endif
#endif

/* Because ANSI C EXIT_* are not always defined: */
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif
#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

/*
   On Linux glibc systems, we need to use sig.* versions of jmp_buf,
   setjmp and longjmp to preserve the signal handling context.
   Currently, the way I figured to detect this is if _SIGSET_H_types has
   been defined in /usr/include/setjmp.h.
*/
#ifdef _SIGSET_H_types
#define JMP_BUF    sigjmp_buf
#define SETJMP(x)  sigsetjmp( (x), 1)
#define LONGJMP    siglongjmp
#else
#define JMP_BUF    jmp_buf
#define SETJMP(x)  setjmp( (x) )
#define LONGJMP    longjmp
#endif

/*
   Type to store reference objects Id:
 */
typedef int Tid;
typedef struct S0 T0;
struct S0{Tid id;};

/*
   The default channel used to print runtime error messages:
*/
#define SE_ERR stderr

/*
   Eiffel type INTEGER is #2:
*/
typedef int T2;
#define EIF_INTEGER T2
#define M2 (0)
#define EIF_INTEGER_BITS (CHAR_BIT*sizeof(int))
#define EIF_MINIMUM_INTEGER (INT_MIN)
#define EIF_MAXIMUM_INTEGER (INT_MAX)

/*
  Eiffel type CHARACTER is #3:
*/
typedef unsigned char T3;
#define EIF_CHARACTER T3
#define M3 (0)
#define EIF_CHARACTER_BITS (CHAR_BIT)
#define EIF_MINIMUM_CHARACTER_CODE (0)
#define EIF_MAXIMUM_CHARACTER_CODE (255)
#define T3code(x) ((T2)(x))
#define T3to_integer(x) ((T2)((char)(x)))
#define T3to_bit(x) (x)

/*
  Eiffel type REAL is #4:
*/
typedef float T4;
#define EIF_REAL T4
#define M4 (0.0)
#define EIF_REAL_BITS (CHAR_BIT*sizeof(float))
#define EIF_MINIMUM_REAL (-(FLT_MAX))
#define EIF_MAXIMUM_REAL (FLT_MAX)
#define T2toT4(x) ((T4)(x))

/*
  Eiffel type DOUBLE is #5:
*/
typedef double T5;
#define EIF_DOUBLE T5
#define M5 (0.0)
#define EIF_DOUBLE_BITS (CHAR_BIT*sizeof(double))
#define EIF_MINIMUM_DOUBLE (-(DBL_MAX))
#define EIF_MAXIMUM_DOUBLE (DBL_MAX)
#define T2toT5(x) ((T5)(x))
#define T4toT5(x) ((T5)(x))

/*
  Eiffel type BOOLEAN is #6:
*/
typedef char T6;
#define EIF_BOOLEAN T6
#define M6 (0)
#define EIF_BOOLEAN_BITS (CHAR_BIT)

/*
   Eiffel type POINTER is #8:
*/
typedef void* T8;
#define EIF_POINTER T8
#define M8 (NULL)
#define EIF_POINTER_BITS (CHAR_BIT*sizeof(void*))

/*
  To use type STRING on the C side:
*/
#define EIF_STRING T7*

/*
  Some Other EIF_* defined in ETL:
*/
#define eif_access(x) ((char*)(x))
#define EIF_REFERENCE T0*
#define EIF_OBJ T0*
#define EIF_OBJECT EIF_OBJ

/*
   Wrappers for `malloc' and `calloc':
*/
void* se_malloc(size_t size);
void* se_calloc(size_t nmemb, size_t size);

/*C Header Pass 1 :*/
typedef struct S662 T662;
typedef struct S555 T555;
typedef struct S320 T320;
typedef struct S269 T269;
typedef struct S491 T491;
typedef int T596;
typedef struct S226 T226;
typedef struct S671 T671;
typedef struct S627 T627;
typedef struct S351 T351;
typedef struct S235 T235;
typedef struct S536 T536;
typedef struct S224 T224;
typedef struct S190 T190;
typedef struct S607 T607;
typedef struct S185 T185;
typedef struct S591 T591;
typedef struct S695 T695;
typedef struct S238 T238;
typedef struct S459 T459;
typedef struct S484 T484;
typedef struct S63 T63;
typedef struct S169 T169;
typedef struct S67 T67;
typedef struct S306 T306;
typedef struct S370 T370;
typedef struct S16 T16;
typedef struct S234 T234;
typedef struct S399 T399;
typedef struct S498 T498;
typedef struct S455 T455;
typedef struct S618 T618;
typedef struct S89 T89;
typedef struct S398 T398;
typedef struct S323 T323;
typedef struct S515 T515;
typedef struct S87 T87;
typedef struct S497 T497;
typedef struct S383 T383;
typedef struct S95 T95;
typedef struct S56 T56;
typedef struct S307 T307;
typedef struct S396 T396;
typedef struct S352 T352;
typedef struct S57 T57;
typedef struct S310 T310;
typedef struct S416 T416;
typedef struct S135 T135;
typedef struct S485 T485;
typedef struct S648 T648;
typedef struct S305 T305;
typedef struct S132 T132;
typedef struct S616 T616;
typedef struct S196 T196;
typedef struct S34 T34;
typedef struct S181 T181;
typedef struct S365 T365;
typedef struct S161 T161;
typedef struct S380 T380;
typedef struct S385 T385;
typedef struct S525 T525;
typedef struct S441 T441;
typedef struct S260 T260;
typedef struct S213 T213;
typedef struct S537 T537;
typedef struct S665 T665;
typedef struct S289 T289;
typedef struct S523 T523;
typedef struct S527 T527;
typedef struct S495 T495;
typedef struct S514 T514;
typedef struct S225 T225;
typedef struct S38 T38;
typedef struct S687 T687;
typedef struct S425 T425;
typedef struct S218 T218;
typedef struct S464 T464;
typedef struct S541 T541;
typedef struct S74 T74;
typedef struct S173 T173;
typedef struct S691 T691;
typedef struct S180 T180;
typedef struct S96 T96;
typedef struct S308 T308;
typedef struct S526 T526;
typedef struct S81 T81;
typedef struct S693 T693;
typedef struct S304 T304;
typedef struct S619 T619;
typedef struct S649 T649;
typedef struct S530 T530;
typedef struct S146 T146;
typedef struct S638 T638;
typedef struct S273 T273;
typedef struct S198 T198;
typedef struct S376 T376;
typedef struct S386 T386;
typedef struct S522 T522;
typedef struct S516 T516;
typedef struct S518 T518;
typedef struct S449 T449;
typedef struct S241 T241;
typedef struct S457 T457;
typedef struct S643 T643;
typedef struct S177 T177;
typedef struct S36 T36;
typedef struct S228 T228;
typedef struct S629 T629;
typedef struct S384 T384;
typedef struct S531 T531;
typedef struct S558 T558;
typedef int T101;
typedef struct S115 T115;
typedef struct S215 T215;
typedef struct S593 T593;
typedef struct S7 T7;
typedef struct S633 T633;
typedef struct S520 T520;
typedef struct S314 T314;
typedef struct S212 T212;
typedef struct S588 T588;
typedef struct S486 T486;
typedef struct S532 T532;
typedef struct S602 T602;
typedef struct S675 T675;
typedef struct S692 T692;
typedef struct S53 T53;
typedef struct S674 T674;
typedef struct S509 T509;
typedef struct S298 T298;
typedef struct S512 T512;
typedef struct S268 T268;
typedef struct S334 T334;
typedef struct S611 T611;
typedef struct S534 T534;
typedef struct S61 T61;
typedef struct S164 T164;
typedef struct S174 T174;
typedef struct S171 T171;
typedef struct S362 T362;
typedef struct S565 T565;
typedef struct S438 T438;
typedef struct S148 T148;
typedef struct S239 T239;
typedef struct S379 T379;
typedef struct S426 T426;
typedef struct S79 T79;
typedef struct S472 T472;
typedef struct S539 T539;
typedef struct S528 T528;
typedef struct S84 T84;
typedef struct S521 T521;
typedef struct S259 T259;
typedef struct S145 T145;
typedef struct S382 T382;
typedef struct S647 T647;
typedef struct S97 T97;
typedef struct S533 T533;
typedef struct S578 T578;
typedef struct S83 T83;
typedef struct S25 T25;
typedef struct S492 T492;
typedef struct S560 T560;
typedef struct S247 T247;
typedef struct S210 T210;
typedef struct S490 T490;
typedef struct S28 T28;
typedef struct S303 T303;
typedef struct S113 T113;
typedef struct S227 T227;
typedef struct S529 T529;
typedef struct S69 T69;
typedef struct S563 T563;
typedef struct S517 T517;
typedef struct S108 T108;
typedef struct S100 T100;
typedef struct S559 T559;
typedef struct S642 T642;
typedef struct S493 T493;
typedef struct S220 T220;
typedef struct S669 T669;
typedef struct S361 T361;
typedef struct S90 T90;
typedef struct S170 T170;
typedef struct S610 T610;
typedef struct S381 T381;
typedef struct S368 T368;
typedef struct S176 T176;
typedef struct S147 T147;
typedef struct S136 T136;
typedef struct S626 T626;
typedef struct S350 T350;
typedef struct S140 T140;
typedef struct S354 T354;
typedef struct S99 T99;
typedef struct S317 T317;
typedef struct S175 T175;
typedef struct S85 T85;
typedef struct S349 T349;
typedef struct S524 T524;
typedef struct S37 T37;
typedef struct S421 T421;
typedef struct S612 T612;
typedef struct S513 T513;
typedef struct S573 T573;
typedef struct S538 T538;
typedef struct S112 T112;
typedef struct S274 T274;
typedef struct S694 T694;
typedef struct S91 T91;
typedef struct S182 T182;
typedef struct S632 T632;
typedef struct S371 T371;
typedef struct S179 T179;
typedef struct S32 T32;
typedef struct S199 T199;
typedef struct S172 T172;
typedef struct S178 T178;
typedef struct S357 T357;
typedef struct S98 T98;
typedef struct S359 T359;
typedef struct S66 T66;
typedef struct S606 T606;
typedef struct S620 T620;
typedef struct S412 T412;
typedef struct S420 T420;
typedef struct S496 T496;
typedef struct S544 T544;
typedef struct S346 T346;
typedef struct S494 T494;
typedef struct S535 T535;

/*C Header Pass 2 :*/
typedef T0**T237;
typedef T0**T489;
typedef T0**T378;
typedef T0**T316;
typedef T6*T230;
typedef T0**T312;
typedef T0**T117;
typedef T0**T166;
typedef T0**T243;
typedef T0**T562;
typedef T0**T80;
typedef T0**T217;
typedef T3*T9;
typedef T0**T142;
typedef T2*T88;
typedef T0**T543;
typedef T0**T222;
typedef T0**T356;

/*C Header Pass 3 :*/
struct S145{T8 _directory_stream;T8 _current_entry;};
int se_cmpT145(T145 o1,T145 o2);
struct S69{T2 _i_code;};
int se_cmpT69(T69 o1,T69 o2);
struct S626{T5 _time_memory;};
int se_cmpT626(T626 o1,T626 o2);

/*C Header Pass 4 :*/
struct S662{Tid id;T0* _container;T6 _after;T6 _before;T0* _current_cell;T0* _next_cursor;};
extern T662 M662;
struct S555{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T555 M555;
struct S320{Tid id;};
extern T320 M320;
struct S269{Tid id;T0* _comparator;};
extern T269 M269;
struct S491{Tid id;T2 _exit_code;T0* _project;T0* _executable;T0* _source_filename;};
extern T491 M491;
extern T596 M596;
struct S226{Tid id;T2 _count;T0* _storage;T0* _symbols;};
extern T226 M226;
struct S671{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T671 M671;
struct S627{Tid id;T5 _item;};
extern T627 M627;
struct S351{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T351 M351;
struct S536{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T536 M536;
struct S224{Tid id;T2 _count;T0* _storage;};
extern T224 M224;
struct S190{Tid id;T2 _yyNb_rules;T2 _yyNull_equiv_class;T6 _pre_action_used;T6 _post_action_used;T6 _post_eof_action_used;T6 _yyBacking_up;T0* _states;T0* _yy_accept;T0* _yy_ec;T2 _yyEnd_of_buffer;T0* _eiffel_header;T6 _bol_needed;T0* _yy_nxt;T2 _yyNb_rows;T2 _start_states_count;T2 _maximum_symbol;T0* _yy_start_conditions;T2 _backing_up_count;T0* _partitions;T0* _yy_rules;T0* _yy_eof_rules;T2 _minimum_symbol;T6 _yyLine_used;T6 _yyPosition_used;T0* _eiffel_code;T6 _pre_eof_action_used;T2 _characters_count;T2 _array_size;T6 _actions_separated;T6 _inspect_used;};
extern T190 M190;
struct S607{Tid id;T0* _event_parser_factory;};
extern T607 M607;
struct S185{Tid id;T0* _yy_nxt;T0* _yy_accept;T2 _yyNb_rows;};
extern T185 M185;
struct S591{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T591 M591;
struct S235{Tid id;T2 _item;T0* _right;T0* _left;};
extern T235 M235;
struct S695{Tid id;};
extern T695 M695;
struct S238{Tid id;T0* _transition;T0* _epsilon_transition;T0* _accepted_rule;T2 _id;T6 _in_trail_context;};
extern T238 M238;
struct S484{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T484 M484;
struct S63{Tid id;T0* _attributes;T0* _children;T0* _name;T0* _content;};
extern T63 M63;
struct S169{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T169 M169;
struct S67{Tid id;T0* _name;T0* _value;};
extern T67 M67;
struct S306{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T306 M306;
struct S16{Tid id;T0* _error_handler;T0* _build_filename;T0* _start_target_name;T6 _verbose;T6 _debug_mode;T6 _no_exec;};
extern T16 M16;
struct S234{Tid id;T237 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T234 M234;
struct S399{Tid id;};
extern T399 M399;
struct S498{Tid id;T2 _exit_code;T0* _project;T6 _verbose;T0* _system_command;T0* _cluster_command;T6 _validate_command;T0* _xace_filename;T0* _output_filename;T0* _defines;};
extern T498 M498;
struct S455{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T455 M455;
struct S618{Tid id;T0* _parameters;};
extern T618 M618;
struct S89{Tid id;};
extern T89 M89;
struct S398{Tid id;T0* _target;T0* _label;};
extern T398 M398;
struct S323{Tid id;};
extern T323 M323;
struct S515{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T515 M515;
struct S87{Tid id;T88 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T87 M87;
struct S497{Tid id;T0* _project;T0* _xml_element;};
extern T497 M497;
struct S383{Tid id;T0* _parameters;};
extern T383 M383;
struct S95{Tid id;};
extern T95 M95;
struct S56{Tid id;};
extern T56 M56;
struct S396{Tid id;T0* _parameters;};
extern T396 M396;
struct S352{Tid id;};
extern T352 M352;
struct S57{Tid id;};
extern T57 M57;
struct S310{Tid id;T312 _storage;T2 _capacity;T2 _upper;};
extern T310 M310;
struct S416{Tid id;T0* _target;T2 _label;};
extern T416 M416;
struct S135{Tid id;};
extern T135 M135;
struct S485{Tid id;T489 _storage;T2 _capacity;T2 _upper;};
extern T485 M485;
struct S648{Tid id;T0* _first;T0* _second;};
extern T648 M648;
struct S132{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T132 M132;
struct S616{Tid id;T6 _push_back_flag;T145 _basic_directory;T2 _memory;T0* _name;T3 _last_character;T6 _end_of_file;T0* _character_buffer;};
extern T616 M616;
struct S196{Tid id;T0* _error_file;T0* _warning_file;T0* _message_file;};
extern T196 M196;
struct S34{Tid id;T2 _item;};
extern T34 M34;
struct S181{Tid id;T0* _project;T0* _xml_element;T0* _map;};
extern T181 M181;
struct S365{Tid id;T2 _count;T9 _area;T0* _area_string;};
extern T365 M365;
struct S161{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T161 M161;
struct S380{Tid id;T0* _parameters;};
extern T380 M380;
struct S385{Tid id;T0* _parameters;};
extern T385 M385;
struct S525{Tid id;T2 _exit_code;T0* _project;T0* _message;};
extern T525 M525;
struct S441{Tid id;};
extern T441 M441;
struct S260{Tid id;T0* _comparator;};
extern T260 M260;
struct S213{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T213 M213;
struct S537{Tid id;T0* _first;T0* _second;};
extern T537 M537;
struct S665{Tid id;T0* _item;T0* _right;};
extern T665 M665;
struct S289{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T289 M289;
struct S523{Tid id;T2 _exit_code;T0* _project;T0* _filename;T6 _reuse_variables;T0* _start_target_name;};
extern T523 M523;
struct S527{Tid id;T2 _exit_code;T0* _project;T0* _directory;};
extern T527 M527;
struct S495{Tid id;T2 _exit_code;T0* _project;T0* _name;};
extern T495 M495;
struct S514{Tid id;T2 _exit_code;T0* _project;T0* _size;T6 _backup;T6 _ecs;T6 _full;T6 _case_insensitive;T6 _meta_ecs;T6 _no_default;T6 _no_warn;T6 _separate_actions;T0* _output_filename;T0* _input_filename;};
extern T514 M514;
struct S225{Tid id;T222 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T225 M225;
struct S38{Tid id;T8 _item;};
extern T38 M38;
struct S687{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T687 M687;
struct S425{Tid id;T0* _parameters;};
extern T425 M425;
struct S218{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T218 M218;
struct S464{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;};
extern T464 M464;
struct S370{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;T6 _negated;T6 _sort_needed;};
extern T370 M370;
struct S541{Tid id;T543 _storage;T2 _capacity;T2 _upper;};
extern T541 M541;
struct S74{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T74 M74;
struct S173{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T173 M173;
struct S691{Tid id;};
extern T691 M691;
struct S180{Tid id;T0* _project;T0* _directory_name;T0* _include_wc_string;T0* _exclude_wc_string;T6 _convert_to_filesystem;T0* _map;T6 _force;T6 _concat;T0* _filename_variable_name;T0* _mapped_filename_variable_name;T0* _include_wildcard;T0* _exclude_wildcard;T0* _filenames;};
extern T180 M180;
struct S96{Tid id;};
extern T96 M96;
struct S308{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T308 M308;
struct S526{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T526 M526;
struct S81{Tid id;};
extern T81 M81;
struct S693{Tid id;};
extern T693 M693;
struct S305{Tid id;T0* _states;T6 _in_trail_context;};
extern T305 M305;
struct S304{Tid id;T0* _text;};
extern T304 M304;
struct S619{Tid id;T0* _parameters;};
extern T619 M619;
struct S649{Tid id;T2 _count;T0* _first_cell;T0* _last_cell;T0* _internal_cursor;};
extern T649 M649;
struct S530{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T530 M530;
struct S146{Tid id;T145 _basic_directory;};
extern T146 M146;
struct S638{Tid id;T6 _push_back_flag;T0* _name;T0* _path;T8 _input_stream;T2 _memory;T3 _last_character;T0* _last_string;T6 _end_of_file;T0* _character_buffer;};
extern T638 M638;
struct S273{Tid id;};
extern T273 M273;
struct S198{Tid id;T2 _array_size;T6 _case_insensitive;T2 _characters_count;T6 _equiv_classes_used;T6 _meta_equiv_classes_used;T6 _full_table;T6 _actions_separated;T6 _inspect_used;T6 _reject_used;T6 _line_used;T6 _position_used;T6 _pre_action_used;T6 _post_action_used;T6 _pre_eof_action_used;T6 _post_eof_action_used;T0* _start_conditions;T0* _rules;T0* _eof_rules;T0* _equiv_classes;T6 _bol_needed;T6 _variable_trail_context;T0* _eiffel_code;T0* _eiffel_header;};
extern T198 M198;
struct S376{Tid id;T378 _storage;T2 _capacity;T2 _upper;};
extern T376 M376;
struct S386{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T386 M386;
struct S522{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T522 M522;
struct S516{Tid id;T2 _exit_code;T0* _project;T0* _verbose_filename;T6 _separate_actions;T0* _tokens_classname;T0* _output_filename;T0* _input_filename;};
extern T516 M516;
struct S518{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T6 _empty_lines;T0* _defines;T0* _to_directory;T0* _fileset;T6 _force;};
extern T518 M518;
struct S449{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T449 M449;
struct S241{Tid id;T243 _storage;T2 _capacity;T2 _upper;};
extern T241 M241;
struct S457{Tid id;T0* _name;};
extern T457 M457;
struct S643{Tid id;T0* _item;};
extern T643 M643;
struct S177{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T177 M177;
struct S36{Tid id;T6 _item;};
extern T36 M36;
struct S228{Tid id;T230 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T228 M228;
struct S629{Tid id;T2 _item;};
extern T629 M629;
struct S384{Tid id;T0* _parameters;};
extern T384 M384;
struct S531{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;T6 _force;};
extern T531 M531;
struct S558{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T558 M558;
extern T101 M101;
struct S115{Tid id;T117 _storage;T2 _capacity;T2 _upper;};
extern T115 M115;
struct S215{Tid id;T217 _storage;T2 _capacity;T2 _upper;};
extern T215 M215;
struct S307{Tid id;T2 _id;T0* _name;T0* _patterns;T0* _bol_patterns;T6 _is_exclusive;};
extern T307 M307;
struct S593{Tid id;T6 _push_back_flag;T0* _path;T8 _input_stream;T2 _memory;};
extern T593 M593;
struct S633{Tid id;T0* _name;T0* _path;T8 _output_stream;};
extern T633 M633;
struct S520{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T520 M520;
struct S314{Tid id;T316 _storage;T2 _capacity;T2 _upper;};
extern T314 M314;
struct S212{Tid id;T2 _id;T0* _action;T0* _pattern;T2 _line_nb;T2 _trail_count;T2 _head_count;T2 _line_count;T2 _column_count;T6 _is_useful;T6 _has_trail_context;};
extern T212 M212;
struct S588{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T588 M588;
struct S486{Tid id;};
extern T486 M486;
struct S532{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T532 M532;
struct S602{Tid id;T0* _name;T0* _last_entry;T6 _end_of_input;T0* _entry_buffer;T145 _basic_directory;};
extern T602 M602;
struct S675{Tid id;};
extern T675 M675;
struct S692{Tid id;};
extern T692 M692;
struct S674{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T674 M674;
struct S509{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T509 M509;
struct S298{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T298 M298;
struct S512{Tid id;};
extern T512 M512;
struct S268{Tid id;};
extern T268 M268;
struct S334{Tid id;T2 _position;T0* _container;T0* _next_cursor;};
extern T334 M334;
struct S611{Tid id;};
extern T611 M611;
struct S7{Tid id;T9 _storage;T2 _count;T2 _capacity;};
extern T7 M7;
struct S534{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T534 M534;
struct S61{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;};
extern T61 M61;
struct S164{Tid id;T166 _storage;T2 _capacity;T2 _upper;};
extern T164 M164;
struct S174{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _fish;T0* _clean;};
extern T174 M174;
struct S171{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T171 M171;
struct S362{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;};
extern T362 M362;
struct S565{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T565 M565;
struct S459{Tid id;T0* _filename;T0* _mapped_filename;};
extern T459 M459;
struct S438{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T438 M438;
struct S148{Tid id;};
extern T148 M148;
struct S239{Tid id;T0* _equality_tester;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T239 M239;
struct S379{Tid id;T0* _parameters;};
extern T379 M379;
struct S426{Tid id;};
extern T426 M426;
struct S79{Tid id;T80 _storage;T2 _capacity;T2 _upper;};
extern T79 M79;
struct S472{Tid id;};
extern T472 M472;
struct S539{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T539 M539;
struct S528{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T528 M528;
struct S84{Tid id;T2 _count;T0* _storage;T2 _storage_count;T2 _last_index;T2 _last_storage_slice_start;T2 _storage_slice_start;T2 _storage_slice_end;};
extern T84 M84;
struct S521{Tid id;T2 _exit_code;T0* _project;T0* _config_filename;T0* _compile;T0* _defines;};
extern T521 M521;
struct S259{Tid id;};
extern T259 M259;
extern T145 M145;
struct S382{Tid id;T0* _parameters;};
extern T382 M382;
struct S647{Tid id;T0* _first;T0* _second;};
extern T647 M647;
struct S97{Tid id;};
extern T97 M97;
struct S533{Tid id;T2 _exit_code;T0* _project;T0* _file;T0* _to_file;T0* _to_directory;T0* _fileset;};
extern T533 M533;
struct S578{Tid id;T0* _project;T0* _xml_element;};
extern T578 M578;
struct S83{Tid id;T2 _type;};
extern T83 M83;
struct S492{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T492 M492;
struct S560{Tid id;T562 _storage;T2 _capacity;T2 _upper;};
extern T560 M560;
struct S247{Tid id;T0* _target;};
extern T247 M247;
struct S210{Tid id;T2 _id;T0* _states;T0* _accepted_rules;T0* _accepted_head_rules;T0* _transitions;T2 _code;};
extern T210 M210;
struct S490{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T490 M490;
struct S28{Tid id;T0* _build_filename;T0* _name;T0* _start_target_name;T0* _description;T0* _variables;T0* _targets;T6 _build_successful;T6 _verbose;T6 _debug_mode;T6 _no_exec;T0* _parent_project;T0* _child_project;T0* _current_target;T0* _project_element;};
extern T28 M28;
struct S303{Tid id;};
extern T303 M303;
struct S25{Tid id;T0* _i_representation;};
extern T25 M25;
struct S113{Tid id;T88 _storage;T2 _capacity;T2 _upper;};
extern T113 M113;
struct S227{Tid id;T2 _count;T0* _storage;};
extern T227 M227;
struct S529{Tid id;T2 _exit_code;T0* _project;T0* _directory;T0* _file;T0* _fileset;};
extern T529 M529;
extern T69 M69;
struct S563{Tid id;};
extern T563 M563;
struct S517{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T517 M517;
struct S108{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T108 M108;
struct S100{Tid id;};
extern T100 M100;
struct S559{Tid id;T2 _exit_code;T0* _project;T0* _source_filename;T0* _target_filename;T6 _is_out_of_date;T0* _variable_name;T0* _true_value;T0* _false_value;T0* _fileset;};
extern T559 M559;
struct S642{Tid id;T2 _last_code;T2 _next_pos;};
extern T642 M642;
struct S493{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T493 M493;
struct S220{Tid id;T222 _storage;T2 _capacity;T2 _upper;};
extern T220 M220;
struct S669{Tid id;T0* _uri;};
extern T669 M669;
struct S361{Tid id;T0* _content;T2 _count;T2 _capacity;T2 _position;T2 _column;T2 _line;T2 _index;T6 _beginning_of_line;T6 _filled;T6 _interactive;T0* _file;T6 _end_of_file;};
extern T361 M361;
struct S90{Tid id;T145 _basic_directory;T0* _name;};
extern T90 M90;
struct S170{Tid id;T2 _exit_code;T0* _project;T6 _case_insensitive;T6 _no_style_warning;T0* _executable;T0* _root_class;T0* _creation_procedure;T0* _ace_filename;T0* _clean;};
extern T170 M170;
struct S610{Tid id;};
extern T610 M610;
struct S381{Tid id;T0* _parameters;};
extern T381 M381;
struct S368{Tid id;T145 _basic_directory;T0* _name;};
extern T368 M368;
struct S176{Tid id;T2 _exit_code;T0* _project;T0* _esd_filename;T0* _clean;T6 _recursive_clean;T0* _tuned_system;T0* _tuning_level;};
extern T176 M176;
struct S147{Tid id;T145 _basic_directory;};
extern T147 M147;
struct S53{Tid id;T0* _project;T0* _xml_element;T0* _name;T6 _is_executed;};
extern T53 M53;
struct S136{Tid id;};
extern T136 M136;
extern T626 M626;
struct S350{Tid id;T117 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T350 M350;
struct S140{Tid id;T142 _storage;T2 _capacity;T2 _upper;};
extern T140 M140;
struct S354{Tid id;T356 _storage;T2 _capacity;T2 _upper;};
extern T354 M354;
struct S99{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T99 M99;
struct S317{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T317 M317;
struct S175{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T175 M175;
struct S85{Tid id;T2 _count;T0* _storage;};
extern T85 M85;
struct S349{Tid id;T217 _storage;T2 _capacity;T2 _upper;T2 _lower;};
extern T349 M349;
struct S524{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T524 M524;
struct S37{Tid id;T3 _item;};
extern T37 M37;
struct S421{Tid id;T0* _comparator;};
extern T421 M421;
struct S612{Tid id;T2 _error_count;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T0* _FIXED_ARRAY_;T2 _column;T2 _position_nat_parser;T2 _yy_start_state;T0* _yy_content;T2 _yy_column;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _interface;T2 _last_token;T0* _input_buffer;T2 _line;T2 _yy_end;T2 _yy_start;T2 _yy_position;T2 _yy_more_len;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T2 _yy_state_count;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T0* _last_value;T0* _yytranslate;T2 _yy_parsing_status;T2 _yy_line;T6 _yy_more_flag;T0* _yy_state_stack;T2 _yy_full_match;T2 _yy_lp;T0* _tmp_uc_pair;T0* _source;T2 _last_error;T0* _last_error_description;};
extern T612 M612;
struct S513{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T513 M513;
struct S573{Tid id;T0* _implementation;T0* _root_element;};
extern T573 M573;
struct S538{Tid id;T2 _exit_code;T0* _project;T0* _input_filename;T0* _output_filename;T0* _stylesheet_filename;T0* _parameters;T2 _processor;T0* _format;T0* _indent;T0* _extdirs;T0* _classpath;};
extern T538 M538;
struct S112{Tid id;};
extern T112 M112;
struct S274{Tid id;};
extern T274 M274;
struct S694{Tid id;};
extern T694 M694;
struct S91{Tid id;T145 _basic_directory;};
extern T91 M91;
struct S182{Tid id;T0* _project;T0* _type;T0* _source_pattern;T0* _target_pattern;T0* _map;};
extern T182 M182;
struct S632{Tid id;T6 _is_relative;T0* _drive;T0* _hostname;T2 _count;T0* _components;};
extern T632 M632;
struct S371{Tid id;T0* _equality_tester;T0* _key_equality_tester;T2 _count;T2 _capacity;T2 _last_position;T2 _modulus;T2 _free_slot;T2 _position;T2 _slots_position;T2 _clashes_previous_position;T2 _found_position;T0* _internal_cursor;T0* _items;T0* _keys;T0* _clashes;T0* _slots;T0* _FIXED_ITEM_ARRAY_;T0* _FIXED_KEY_ARRAY_;};
extern T371 M371;
struct S179{Tid id;T2 _exit_code;T0* _project;T0* _command_line;T0* _fileset;};
extern T179 M179;
struct S32{Tid id;};
extern T32 M32;
struct S199{Tid id;T2 _error_count;T0* _yytranslate;T0* _yyr1;T0* _yyr2;T0* _yydefact;T0* _yydefgoto;T0* _yypact;T0* _yypgoto;T0* _yytable;T0* _yycheck;T0* _yyvs;T0* _yyss;T2 _yyvsp;T2 _yyssp;T0* _yyval;T6 _yy_lookahead_needed;T2 _yyerrstatus;T2 _yy_parsing_status;T0* _FIXED_ARRAY_;T2 _last_token;T0* _input_buffer;T2 _line;T2 _column;T2 _position;T2 _yy_start_state;T0* _yy_content;T2 _yy_end;T2 _yy_start;T2 _yy_column;T2 _yy_line;T2 _yy_position;T6 _yy_more_flag;T2 _yy_more_len;T2 _yy_last_accepting_state;T2 _yy_last_accepting_cpos;T0* _yy_nxt;T0* _yy_chk;T0* _yy_base;T0* _yy_def;T0* _yy_ec;T0* _yy_meta;T0* _yy_accept;T0* _yy_acclist;T6 _yy_rejected;T0* _yy_state_stack;T2 _yy_state_count;T2 _yy_full_match;T2 _yy_lp;T2 _yy_looking_for_trail_begin;T2 _yy_full_lp;T2 _yy_full_state;T6 _successful;T0* _description;T0* _error_handler;T2 _line_nb;T2 _rule_line_nb;T0* _last_value;T0* _character_classes;T0* _name_definitions;T0* _last_string;T0* _pending_rules;T0* _start_condition_stack;T0* _action_factory;T0* _rule;T6 _in_trail_context;T6 _has_trail_context;T2 _head_line;T2 _head_column;T2 _head_count;T2 _trail_count;};
extern T199 M199;
struct S172{Tid id;T2 _exit_code;T0* _project;T0* _ace_filename;T0* _system_name;T6 _finalize;T6 _finish_freezing;T0* _clean;};
extern T172 M172;
struct S178{Tid id;T0* _project;T0* _xml_element;T0* _fileset;};
extern T178 M178;
struct S357{Tid id;T0* _parameters;};
extern T357 M357;
struct S98{Tid id;T0* _variables;};
extern T98 M98;
struct S359{Tid id;T0* _program_name;};
extern T359 M359;
struct S66{Tid id;T2 _count;T2 _capacity;T0* _storage;T0* _FIXED_ARRAY_;T0* _internal_cursor;};
extern T66 M66;
struct S606{Tid id;T0* _te_ep_tree_fact;T0* _te_ef_tree_fact;};
extern T606 M606;
struct S620{Tid id;T0* _command;T2 _exit_code;};
extern T620 M620;
struct S412{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T412 M412;
struct S420{Tid id;};
extern T420 M420;
struct S496{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T496 M496;
struct S544{Tid id;};
extern T544 M544;
struct S346{Tid id;T0* _container;T2 _position;T0* _next_cursor;};
extern T346 M346;
struct S494{Tid id;T0* _project;T0* _xml_element;T0* _command;};
extern T494 M494;
struct S535{Tid id;T2 _exit_code;T0* _project;T0* _name;T0* _value;};
extern T535 M535;
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/

/*
  This file (SmallEiffel/sys/runtime/boost.h) is automatically included when
  `run_control.boost' is true (ie. only for mode -boost).
*/
#define SE_BOOST 1
void se_print_run_time_stack (void);
void se_signal_handler(int sig);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/exception.h) is automatically included
  when exception handling is used somewhere in the live code.
*/

#define SE_EXCEPTIONS 1

/*
  Constants from Eiffel class EXCEPTIONS :
*/
#define Check_instruction 	  1
#define Class_invariant 	  2
#define Developer_exception 	  3
#define Incorrect_inspect_value   4
#define Loop_invariant 		  5
#define Loop_variant 		  6
#define No_more_memory  	  7
#define Postcondition 		  8
#define Precondition  		  9
#define Routine_failure  	  10
#define	Os_signal		  11
#define Void_attached_to_expanded 12
#define Void_call_target 	  13
#define System_level_type_error	  14

/*
   This will be the structure of rescue contexts.  A rescue context
   will be declared for every routine that has a rescue clause.

   The `next' pointer is the address of the next rescue context if there
   is one higher up the call chain, or NULL if there is no other
   context.
*/
struct rescue_context {
  JMP_BUF jb;
#ifdef SE_NO_CHECK
  /* To keep track of dump stack to unwind it safely
     before the LONGJMP :
  */
  struct _se_dump_stack * top_of_ds ;
#endif
  struct rescue_context *next;
};

extern struct rescue_context *rescue_context_top;
extern int internal_exception_number;
extern int original_internal_exception_number;
extern int signal_exception_number;
extern char *additional_error_message;

void setup_signal_handler(void);
void signal_exception_handler(int);
void internal_exception_handler(int);
void print_exception(void);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_fstat.h) is automatically
  included when some external "SmallEiffel" basic_fstat_* feature is used.
*/
EIF_INTEGER basic_fstat_st_size(EIF_POINTER path);
EIF_DOUBLE basic_fstat_st_mtime(EIF_POINTER path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_directory.h) is automatically
  included when some external "SmallEiffel" feature of class BASIC_DIRECTORY
  is live.
*/
#ifndef WIN32
#include <dirent.h>
#endif
#ifndef WIN32
#include <unistd.h>
#endif

EIF_POINTER basic_directory_open(EIF_POINTER path);
EIF_POINTER basic_directory_read_entry(EIF_POINTER dirstream);
EIF_POINTER basic_directory_get_entry_name(EIF_POINTER entry);
EIF_BOOLEAN basic_directory_close(EIF_POINTER dirstream);
#define basic_directory_current_working_directory (basic_directory_cwd())
EIF_POINTER basic_directory_cwd(void);
EIF_BOOLEAN basic_directory_chdir(EIF_POINTER destination);
EIF_BOOLEAN basic_directory_mkdir(EIF_POINTER directory_path);
EIF_BOOLEAN basic_directory_rmdir(EIF_POINTER directory_path);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_io.h) is automatically
  included when some external "SmallEiffel" basic_io_* feature is used.
*/

#define basic_io_stdin (stdin)
#define basic_io_stdout (stdout)
#define basic_io_stderr (stderr)
#define basic_io_eof (EOF)
#define basic_io_text_file_read_open(p) (fopen(((char*)(p)),"r"))
#define basic_io_text_file_write_open(p) (fopen(((char*)(p)),"w"))
#define basic_io_text_file_write_append(p) (fopen(((char*)(p)),"a"))
#define basic_io_text_file_read_write_open(p) (fopen(((char*)(p)),"r+"))
#define basic_io_text_file_read_write_append(p) (fopen(((char*)(p)),"a+"))
#define basic_io_binary_file_read_open(p) (fopen(((char*)(p)),"rb"))
#define basic_io_binary_file_write_open(p) (fopen(((char*)(p)),"wb"))
#define basic_io_binary_file_write_append(p) (fopen(((char*)(p)),"ab"))
#define basic_io_fclose(p) (fclose((FILE*)(p)))
#define basic_io_flush(p) (fflush((FILE*)(p)))
#define basic_io_getc(f) (getc(((FILE*)(f))))
#define basic_io_putc(b, f) (putc((b),((FILE*)(f))))
#define basic_io_feof(f) (feof(((FILE*)(f))))
#define basic_io_rename(o, n) (rename(((char*)(o)),((char*)(n))))
#define basic_io_remove(f) (remove(((char*)(f))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_sprintf.h) is automatically
  included when the external "SmallEiffel" basic_sprintf feature is used.
*/

void basic_sprintf_double(EIF_CHARACTER* b, int f, double d);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_getenv.h) is automatically
  included when the GENERAL.basic_getenv feature is used (ie. in live code).
*/

#define basic_getenv(v) (getenv((char*)v))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_time.h) is automatically
  included when some external "SmallEiffel" basic_time_* feature is
  used (i.e. in live code).
*/
#include <time.h>

#ifdef WIN32
#include <windows.h>
#endif

#define basic_time_time (_basic_time_time())
EIF_DOUBLE _basic_time_time(void);
EIF_DOUBLE basic_time_difftime(EIF_DOUBLE t1, EIF_DOUBLE t2);
EIF_INTEGER basic_time_getyear(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getmonth(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_gethour(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getminute(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getsecond(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getyday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_INTEGER basic_time_getwday(EIF_DOUBLE t, EIF_INTEGER m);
EIF_BOOLEAN basic_time_is_summer_time_used(EIF_DOUBLE t);
EIF_DOUBLE basic_time_mktime(EIF_INTEGER year, EIF_INTEGER mon,
			     EIF_INTEGER mday, EIF_INTEGER hour,
			     EIF_INTEGER min,  EIF_INTEGER sec);
void basic_time_add_second(EIF_DOUBLE *t, int s);
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_system.h) is automatically
  included when some external "SmallEiffel" basic_system_* feature is used.
*/

#define basic_system_execute_command(p) (system(((char*)(p))))
/*
-- This file is  free  software, which  comes  along  with  SmallEiffel. This
-- software  is  distributed  in the hope that it will be useful, but WITHOUT
-- ANY  WARRANTY;  without  even  the  implied warranty of MERCHANTABILITY or
-- FITNESS  FOR A PARTICULAR PURPOSE. You can modify it as you want, provided
-- this header is kept unaltered, and a notification of the changes is added.
-- You  are  allowed  to  redistribute  it and sell it, alone or as a part of
-- another product.
--       Copyright (C) 1994-2002 LORIA - INRIA - U.H.P. Nancy 1 - FRANCE
--          Dominique COLNET and Suzanne COLLIN - SmallEiffel@loria.fr
--                       http://SmallEiffel.loria.fr
--
*/
/*
  This file (SmallEiffel/sys/runtime/basic_putenv.h) is automatically
  included when the basic_putenv feature is used (ie. in live code).
*/

void basic_putenv(EIF_POINTER variable, EIF_POINTER value);
T6 r8is_null(T8 C);
extern T0*oBC8string_buffer;
void r8append_in(T8 C,T0* a1);
T0* r6out(T6 C);
T6 r6_ix_not(T6 C);
T0* r6to_string(T6 C);
T6 r6_px_or(T6 C,T6 a1);
T6 r6_px_and(T6 C,T6 a1);
T6 r6_px_xor(T6 C,T6 a1);
extern T0*oBC1tagged_out_memory;
T6 r3_px_6061(T3 C,T3 a1);
T6 r3is_digit(T3 C);
T6 r3is_separator(T3 C);
T6 r3_px_6261(T3 C,T3 a1);
T2 r3value(T3 C);
T2 r3decimal_value(T3 C);
T0* r2out(T2 C);
T6 r2is_equal(T2 C,T2 a1);
T2 r2max(T2 C,T2 a1);
T2 r2min(T2 C,T2 a1);
T3 r2digit(T2 C);
T2 r2hash_code(T2 C);
void r2append_in(T2 C,T0* a1);
extern T9 oBC5sprintf_buffer;
extern int fBC5sprintf_buffer;
T9 r5sprintf_buffer(void);
void r5append_in_format(T5 C,T0* a1,T2 a2);
void r237set_all_with(T237 C,T0* a1,T2 a2);
void r237copy_from(T237 C,T237 a1,T2 a2);
void r489clear_all(T489 C,T2 a1);
T489 r489realloc(T489 C,T2 a1,T2 a2);
void r489set_all_with(T489 C,T0* a1,T2 a2);
void r489clear(T489 C,T2 a1,T2 a2);
void r489copy_from(T489 C,T489 a1,T2 a2);
void r378clear_all(T378 C,T2 a1);
T378 r378realloc(T378 C,T2 a1,T2 a2);
void r378set_all_with(T378 C,T0* a1,T2 a2);
void r378clear(T378 C,T2 a1,T2 a2);
void r378copy_from(T378 C,T378 a1,T2 a2);
void r316clear_all(T316 C,T2 a1);
T316 r316realloc(T316 C,T2 a1,T2 a2);
void r316set_all_with(T316 C,T0* a1,T2 a2);
void r316clear(T316 C,T2 a1,T2 a2);
void r316copy_from(T316 C,T316 a1,T2 a2);
void r230set_all_with(T230 C,T6 a1,T2 a2);
void r230copy_from(T230 C,T230 a1,T2 a2);
void r312clear_all(T312 C,T2 a1);
T312 r312realloc(T312 C,T2 a1,T2 a2);
void r312set_all_with(T312 C,T0* a1,T2 a2);
void r312clear(T312 C,T2 a1,T2 a2);
void r312copy_from(T312 C,T312 a1,T2 a2);
void r117clear_all(T117 C,T2 a1);
T117 r117realloc(T117 C,T2 a1,T2 a2);
void r117move(T117 C,T2 a1,T2 a2,T2 a3);
void r117set_all_with(T117 C,T0* a1,T2 a2);
void r117clear(T117 C,T2 a1,T2 a2);
void r117copy_from(T117 C,T117 a1,T2 a2);
void r166clear_all(T166 C,T2 a1);
T166 r166realloc(T166 C,T2 a1,T2 a2);
void r166set_all_with(T166 C,T0* a1,T2 a2);
void r166clear(T166 C,T2 a1,T2 a2);
void r166copy_from(T166 C,T166 a1,T2 a2);
void r243clear_all(T243 C,T2 a1);
T243 r243realloc(T243 C,T2 a1,T2 a2);
void r243set_all_with(T243 C,T0* a1,T2 a2);
void r243clear(T243 C,T2 a1,T2 a2);
void r243copy_from(T243 C,T243 a1,T2 a2);
void r562clear_all(T562 C,T2 a1);
T562 r562realloc(T562 C,T2 a1,T2 a2);
void r562set_all_with(T562 C,T0* a1,T2 a2);
void r562clear(T562 C,T2 a1,T2 a2);
void r562copy_from(T562 C,T562 a1,T2 a2);
void r80clear_all(T80 C,T2 a1);
T80 r80realloc(T80 C,T2 a1,T2 a2);
void r80set_all_with(T80 C,T0* a1,T2 a2);
void r80clear(T80 C,T2 a1,T2 a2);
void r80copy_from(T80 C,T80 a1,T2 a2);
void r217clear_all(T217 C,T2 a1);
T217 r217realloc(T217 C,T2 a1,T2 a2);
void r217set_all_with(T217 C,T0* a1,T2 a2);
void r217clear(T217 C,T2 a1,T2 a2);
void r217copy_from(T217 C,T217 a1,T2 a2);
void r9copy_slice(T9 C,T2 a1,T9 a2,T2 a3,T2 a4);
T9 r9realloc(T9 C,T2 a1,T2 a2);
void r9set_all_with(T9 C,T3 a1,T2 a2);
T6 r9fast_memcmp(T9 C,T9 a1,T2 a2);
void r9copy_at(T9 C,T2 a1,T9 a2,T2 a3);
void r9clear(T9 C,T2 a1,T2 a2);
void r9copy_from(T9 C,T9 a1,T2 a2);
void r142clear_all(T142 C,T2 a1);
T142 r142realloc(T142 C,T2 a1,T2 a2);
void r142set_all_with(T142 C,T0* a1,T2 a2);
void r142clear(T142 C,T2 a1,T2 a2);
void r142copy_from(T142 C,T142 a1,T2 a2);
void r88clear_all(T88 C,T2 a1);
T88 r88realloc(T88 C,T2 a1,T2 a2);
void r88move(T88 C,T2 a1,T2 a2,T2 a3);
void r88set_all_with(T88 C,T2 a1,T2 a2);
void r88clear(T88 C,T2 a1,T2 a2);
void r88copy_from(T88 C,T88 a1,T2 a2);
void r543clear_all(T543 C,T2 a1);
T543 r543realloc(T543 C,T2 a1,T2 a2);
void r543set_all_with(T543 C,T0* a1,T2 a2);
void r543clear(T543 C,T2 a1,T2 a2);
void r543copy_from(T543 C,T543 a1,T2 a2);
void r222clear_all(T222 C,T2 a1);
T222 r222realloc(T222 C,T2 a1,T2 a2);
void r222set_all_with(T222 C,T0* a1,T2 a2);
void r222clear(T222 C,T2 a1,T2 a2);
void r222copy_from(T222 C,T222 a1,T2 a2);
void r356clear_all(T356 C,T2 a1);
T356 r356realloc(T356 C,T2 a1,T2 a2);
void r356set_all_with(T356 C,T0* a1,T2 a2);
void r356clear(T356 C,T2 a1,T2 a2);
void r356copy_from(T356 C,T356 a1,T2 a2);
T0* r7out(T7* C);
void r7copy(T7* C,T0* a1);
T0* r7substring(T7* C,T2 a1,T2 a2);
void r7keep_tail(T7* C,T2 a1);
void r7remove_first(T7* C,T2 a1);
void r7remove_between(T7* C,T2 a1,T2 a2);
T6 r7is_equal(T7* C,T0* a1);
T6 r7valid_index(T7* C,T2 a1);
void r7append(T7* C,T0* a1);
T6 r7se_assigned_from(T0* a1);
void r7print_on(T7* C,T0* a1);
T2 r7index_of(T7* C,T3 a1,T2 a2);
void r7remove_tail(T7* C,T2 a1);
T6 r7is_integer(T7* C);
void r7make(T7* C,T2 a1);
void r7fill_tagged_out_memory(T7* C);
void r7append_string(T7* C,T0* a1);
void r7make_filled(T7* C,T3 a1,T2 a2);
T0* r7_px_43(T7* C,T0* a1);
void r7extend(T7* C,T3 a1);
T2 r7hash_code(T7* C);
void r7remove_last(T7* C,T2 a1);
T6 r7conforms_to(T7* C,T0* a1);
void r7keep_head(T7* C,T2 a1);
T2 r7to_integer(T7* C);
void r7append_character(T7* C,T3 a1);
void r7resize(T7* C,T2 a1);
T2 r7substring_index(T7* C,T0* a1,T2 a2);
void r7from_external_copy(T7* C,T8 a1);
T8 r7to_external(T7* C);
T0* r7twin(T7* C);
void r7swap(T7* C,T2 a1,T2 a2);
void r234copy(T234* C,T0* a1);
T2 r234count(T234* C);
T0* r234item(T234* C,T2 a1);
T6 r234se_assigned_from(T0* a1);
void r234print_on(T234* C,T0* a1);
void r234out_in_tagged_out_memory(T234* C);
void r234make(T234* C,T2 a1,T2 a2);
void r234fill_tagged_out_memory(T234* C);
T6 r234conforms_to(T234* C,T0* a1);
T0* r234twin(T234* C);
void r87copy(T87* C,T0* a1);
T2 r87count(T87* C);
T2 r87item(T87* C,T2 a1);
T6 r87se_assigned_from(T0* a1);
void r87print_on(T87* C,T0* a1);
void r87out_in_tagged_out_memory(T87* C);
void r87make(T87* C,T2 a1,T2 a2);
void r87fill_tagged_out_memory(T87* C);
T6 r87conforms_to(T87* C,T0* a1);
void r87resize(T87* C,T2 a1,T2 a2);
T0* r87twin(T87* C);
void r310copy(T310* C,T0* a1);
T6 r310se_assigned_from(T0* a1);
void r310print_on(T310* C,T0* a1);
void r310out_in_tagged_out_memory(T310* C);
void r310make(T310* C,T2 a1);
void r310fill_tagged_out_memory(T310* C);
T6 r310conforms_to(T310* C,T0* a1);
void r310resize(T310* C,T2 a1);
T0* r310twin(T310* C);
void r485copy(T485* C,T0* a1);
T6 r485se_assigned_from(T0* a1);
void r485print_on(T485* C,T0* a1);
void r485out_in_tagged_out_memory(T485* C);
void r485make(T485* C,T2 a1);
void r485fill_tagged_out_memory(T485* C);
T6 r485conforms_to(T485* C,T0* a1);
void r485resize(T485* C,T2 a1);
T0* r485twin(T485* C);
void r225copy(T225* C,T0* a1);
T0* r225item(T225* C,T2 a1);
T6 r225se_assigned_from(T0* a1);
void r225print_on(T225* C,T0* a1);
void r225out_in_tagged_out_memory(T225* C);
void r225make(T225* C,T2 a1,T2 a2);
void r225fill_tagged_out_memory(T225* C);
T6 r225conforms_to(T225* C,T0* a1);
T0* r225twin(T225* C);
void r541copy(T541* C,T0* a1);
T2 r541count(T541* C);
T0* r541item(T541* C,T2 a1);
T6 r541se_assigned_from(T0* a1);
void r541print_on(T541* C,T0* a1);
void r541out_in_tagged_out_memory(T541* C);
void r541make(T541* C,T2 a1);
void r541fill_tagged_out_memory(T541* C);
T6 r541conforms_to(T541* C,T0* a1);
void r541resize(T541* C,T2 a1);
T0* r541twin(T541* C);
void r376copy(T376* C,T0* a1);
T6 r376se_assigned_from(T0* a1);
void r376print_on(T376* C,T0* a1);
void r376out_in_tagged_out_memory(T376* C);
void r376make(T376* C,T2 a1);
void r376fill_tagged_out_memory(T376* C);
T6 r376conforms_to(T376* C,T0* a1);
void r376resize(T376* C,T2 a1);
T0* r376twin(T376* C);
void r241copy(T241* C,T0* a1);
T6 r241se_assigned_from(T0* a1);
void r241print_on(T241* C,T0* a1);
void r241out_in_tagged_out_memory(T241* C);
void r241make(T241* C,T2 a1);
void r241fill_tagged_out_memory(T241* C);
T6 r241conforms_to(T241* C,T0* a1);
void r241resize(T241* C,T2 a1);
T0* r241twin(T241* C);
void r228copy(T228* C,T0* a1);
T6 r228item(T228* C,T2 a1);
T6 r228se_assigned_from(T0* a1);
void r228print_on(T228* C,T0* a1);
void r228out_in_tagged_out_memory(T228* C);
void r228make(T228* C,T2 a1,T2 a2);
void r228fill_tagged_out_memory(T228* C);
T6 r228conforms_to(T228* C,T0* a1);
T0* r228twin(T228* C);
void r115copy(T115* C,T0* a1);
T6 r115se_assigned_from(T0* a1);
void r115print_on(T115* C,T0* a1);
void r115out_in_tagged_out_memory(T115* C);
void r115make(T115* C,T2 a1);
void r115fill_tagged_out_memory(T115* C);
T6 r115conforms_to(T115* C,T0* a1);
void r115resize(T115* C,T2 a1);
T0* r115twin(T115* C);
void r215copy(T215* C,T0* a1);
T6 r215se_assigned_from(T0* a1);
void r215print_on(T215* C,T0* a1);
void r215out_in_tagged_out_memory(T215* C);
void r215make(T215* C,T2 a1);
void r215fill_tagged_out_memory(T215* C);
T6 r215conforms_to(T215* C,T0* a1);
void r215resize(T215* C,T2 a1);
T0* r215twin(T215* C);
void r314copy(T314* C,T0* a1);
T6 r314se_assigned_from(T0* a1);
void r314print_on(T314* C,T0* a1);
void r314out_in_tagged_out_memory(T314* C);
void r314make(T314* C,T2 a1);
void r314fill_tagged_out_memory(T314* C);
T6 r314conforms_to(T314* C,T0* a1);
void r314resize(T314* C,T2 a1);
T0* r314twin(T314* C);
void r164copy(T164* C,T0* a1);
T6 r164se_assigned_from(T0* a1);
void r164print_on(T164* C,T0* a1);
void r164out_in_tagged_out_memory(T164* C);
void r164make(T164* C,T2 a1);
void r164fill_tagged_out_memory(T164* C);
T6 r164conforms_to(T164* C,T0* a1);
void r164resize(T164* C,T2 a1);
T0* r164twin(T164* C);
void r79copy(T79* C,T0* a1);
T6 r79se_assigned_from(T0* a1);
void r79print_on(T79* C,T0* a1);
void r79out_in_tagged_out_memory(T79* C);
void r79make(T79* C,T2 a1);
void r79fill_tagged_out_memory(T79* C);
T6 r79conforms_to(T79* C,T0* a1);
void r79resize(T79* C,T2 a1);
T0* r79twin(T79* C);
void r560copy(T560* C,T0* a1);
T6 r560se_assigned_from(T0* a1);
void r560print_on(T560* C,T0* a1);
void r560out_in_tagged_out_memory(T560* C);
void r560make(T560* C,T2 a1);
void r560fill_tagged_out_memory(T560* C);
T6 r560conforms_to(T560* C,T0* a1);
void r560resize(T560* C,T2 a1);
T0* r560twin(T560* C);
void r113copy(T113* C,T0* a1);
T6 r113se_assigned_from(T0* a1);
void r113print_on(T113* C,T0* a1);
void r113out_in_tagged_out_memory(T113* C);
void r113make(T113* C,T2 a1);
void r113fill_tagged_out_memory(T113* C);
T6 r113conforms_to(T113* C,T0* a1);
void r113resize(T113* C,T2 a1);
T0* r113twin(T113* C);
void r113with_capacity(T113* C,T2 a1);
void r113from_collection(T113* C,T0* a1);
void r220copy(T220* C,T0* a1);
T6 r220se_assigned_from(T0* a1);
void r220print_on(T220* C,T0* a1);
void r220out_in_tagged_out_memory(T220* C);
void r220make(T220* C,T2 a1);
void r220fill_tagged_out_memory(T220* C);
T6 r220conforms_to(T220* C,T0* a1);
void r220resize(T220* C,T2 a1);
T0* r220twin(T220* C);
void r350copy(T350* C,T0* a1);
void r350force(T350* C,T0* a1,T2 a2);
T2 r350count(T350* C);
T0* r350item(T350* C,T2 a1);
T6 r350valid_index(T350* C,T2 a1);
T6 r350se_assigned_from(T0* a1);
void r350print_on(T350* C,T0* a1);
void r350out_in_tagged_out_memory(T350* C);
void r350make(T350* C,T2 a1,T2 a2);
void r350fill_tagged_out_memory(T350* C);
T6 r350conforms_to(T350* C,T0* a1);
void r350add_last(T350* C,T0* a1);
void r350resize(T350* C,T2 a1,T2 a2);
T0* r350twin(T350* C);
void r140copy(T140* C,T0* a1);
T6 r140se_assigned_from(T0* a1);
void r140print_on(T140* C,T0* a1);
void r140out_in_tagged_out_memory(T140* C);
void r140make(T140* C,T2 a1);
void r140fill_tagged_out_memory(T140* C);
T6 r140conforms_to(T140* C,T0* a1);
void r140resize(T140* C,T2 a1);
T0* r140twin(T140* C);
void r354copy(T354* C,T0* a1);
T2 r354count(T354* C);
T0* r354item(T354* C,T2 a1);
T6 r354se_assigned_from(T0* a1);
void r354print_on(T354* C,T0* a1);
void r354out_in_tagged_out_memory(T354* C);
void r354make(T354* C,T2 a1);
void r354fill_tagged_out_memory(T354* C);
T6 r354conforms_to(T354* C,T0* a1);
void r354resize(T354* C,T2 a1);
T0* r354twin(T354* C);
void r349copy(T349* C,T0* a1);
T0* r349item(T349* C,T2 a1);
T6 r349se_assigned_from(T0* a1);
void r349print_on(T349* C,T0* a1);
void r349out_in_tagged_out_memory(T349* C);
void r349make(T349* C,T2 a1,T2 a2);
void r349fill_tagged_out_memory(T349* C);
T6 r349conforms_to(T349* C,T0* a1);
T0* r349twin(T349* C);
void r662copy(T662* C,T0* a1);
void r662set(T662* C,T0* a1,T6 a2,T6 a3);
T6 r662se_assigned_from(T0* a1);
void r662print_on(T662* C,T0* a1);
void r662out_in_tagged_out_memory(T662* C);
void r662make(T662* C,T0* a1);
T6 r662conforms_to(T662* C,T0* a1);
void r662set_after(T662* C);
T0* r662twin(T662* C);
void r555copy(T555* C,T0* a1);
T6 r555se_assigned_from(T0* a1);
void r555print_on(T555* C,T0* a1);
void r555out_in_tagged_out_memory(T555* C);
T6 r555off(T555* C);
T6 r555conforms_to(T555* C,T0* a1);
T0* r555twin(T555* C);
T6 r320se_assigned_from(T0* a1);
void r320print_on(T320* C,T0* a1);
void r320out_in_tagged_out_memory(T320* C);
T6 r320conforms_to(T320* C,T0* a1);
T6 r320test(T2 a1,T2 a2);
T0* r320twin(T320* C);
void r269subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r269se_assigned_from(T0* a1);
void r269print_on(T269* C,T0* a1);
void r269out_in_tagged_out_memory(T269* C);
T6 r269conforms_to(T269* C,T0* a1);
T0* r269twin(T269* C);
void r269sort_with_comparator(T0* a1,T0* a2);
T2 r671new_capacity(T2 a1);
void r671copy(T671* C,T0* a1);
T6 r671extendible(T671* C,T2 a1);
void r671force(T671* C,T0* a1);
T0* r671item(T671* C);
T6 r671se_assigned_from(T0* a1);
void r671print_on(T671* C,T0* a1);
T0* r671clone(T0* a1);
void r671out_in_tagged_out_memory(T671* C);
void r671make(T671* C,T2 a1);
void r671remove(T671* C);
T6 r671conforms_to(T671* C,T0* a1);
void r671resize(T671* C,T2 a1);
T0* r671twin(T671* C);
T2 r351new_capacity(T2 a1);
void r351copy(T351* C,T0* a1);
T6 r351extendible(T351* C,T2 a1);
void r351remove_traversing_cursor(T351* C,T0* a1);
void r351move_all_cursors_after(T351* C);
void r351add_traversing_cursor(T351* C,T0* a1);
T6 r351se_assigned_from(T0* a1);
void r351print_on(T351* C,T0* a1);
T0* r351clone(T0* a1);
void r351out_in_tagged_out_memory(T351* C);
T6 r351cursor_before(T0* a1);
void r351make(T351* C,T2 a1);
T6 r351cursor_after(T0* a1);
T6 r351conforms_to(T351* C,T0* a1);
void r351resize(T351* C,T2 a1);
T0* r351twin(T351* C);
void r351force_last(T351* C,T0* a1);
T0* r351new_cursor(T351* C);
T6 r351cursor_off(T0* a1);
void r224copy(T224* C,T0* a1);
void r224set_target(T224* C,T0* a1,T2 a2);
T6 r224se_assigned_from(T0* a1);
void r224print_on(T224* C,T0* a1);
T0* r224clone(T0* a1);
void r224out_in_tagged_out_memory(T224* C);
void r224make(T224* C,T2 a1,T2 a2);
T6 r224conforms_to(T224* C,T0* a1);
T0* r224twin(T224* C);
void r235put_left(T235* C,T0* a1);
T6 r235se_assigned_from(T0* a1);
void r235print_on(T235* C,T0* a1);
void r235out_in_tagged_out_memory(T235* C);
T6 r235conforms_to(T235* C,T0* a1);
T0* r235twin(T235* C);
void r235put_right(T235* C,T0* a1);
void r484copy(T484* C,T0* a1);
T6 r484se_assigned_from(T0* a1);
void r484print_on(T484* C,T0* a1);
void r484out_in_tagged_out_memory(T484* C);
void r484make(T484* C,T0* a1);
T6 r484off(T484* C);
T6 r484conforms_to(T484* C,T0* a1);
T0* r484twin(T484* C);
T6 r399se_assigned_from(T0* a1);
void r399print_on(T399* C,T0* a1);
void r399out_in_tagged_out_memory(T399* C);
T0* r399make(T2 a1);
T6 r399conforms_to(T399* C,T0* a1);
T0* r399resize(T0* a1,T2 a2);
T0* r399twin(T399* C);
void r455copy(T455* C,T0* a1);
T6 r455se_assigned_from(T0* a1);
void r455print_on(T455* C,T0* a1);
void r455out_in_tagged_out_memory(T455* C);
T6 r455off(T455* C);
T6 r455conforms_to(T455* C,T0* a1);
T0* r455twin(T455* C);
T6 r398labeled(T398* C,T2 a1);
T6 r398se_assigned_from(T0* a1);
void r398print_on(T398* C,T0* a1);
void r398out_in_tagged_out_memory(T398* C);
void r398make(T398* C,T0* a1,T0* a2);
T6 r398conforms_to(T398* C,T0* a1);
T0* r398twin(T398* C);
void r398record(T398* C,T0* a1);
T6 r323se_assigned_from(T0* a1);
void r323print_on(T323* C,T0* a1);
void r323out_in_tagged_out_memory(T323* C);
T0* r323make(T2 a1);
T6 r323conforms_to(T323* C,T0* a1);
T0* r323resize(T0* a1,T2 a2);
T0* r323twin(T323* C);
void r352clear_all(T0* a1);
T6 r352se_assigned_from(T0* a1);
void r352print_on(T352* C,T0* a1);
void r352out_in_tagged_out_memory(T352* C);
T0* r352make(T2 a1);
T6 r352conforms_to(T352* C,T0* a1);
T0* r352resize(T0* a1,T2 a2);
T0* r352twin(T352* C);
T6 r416se_assigned_from(T0* a1);
void r416print_on(T416* C,T0* a1);
void r416out_in_tagged_out_memory(T416* C);
void r416make(T416* C,T2 a1,T0* a2);
T6 r416conforms_to(T416* C,T0* a1);
T0* r416twin(T416* C);
void r416record(T416* C,T0* a1);
T6 r135se_assigned_from(T0* a1);
void r135print_on(T135* C,T0* a1);
void r135out_in_tagged_out_memory(T135* C);
T0* r135to_fixed_array(T0* a1);
T0* r135make(T2 a1);
T0* r135make_from_array(T0* a1);
T6 r135conforms_to(T135* C,T0* a1);
T0* r135resize(T0* a1,T2 a2);
T0* r135twin(T135* C);
T6 r648se_assigned_from(T0* a1);
void r648print_on(T648* C,T0* a1);
void r648out_in_tagged_out_memory(T648* C);
void r648make(T648* C,T0* a1,T0* a2);
T6 r648conforms_to(T648* C,T0* a1);
T0* r648twin(T648* C);
void r132copy(T132* C,T0* a1);
T0* r132key(T132* C);
T0* r132item(T132* C);
T6 r132se_assigned_from(T0* a1);
void r132print_on(T132* C,T0* a1);
void r132out_in_tagged_out_memory(T132* C);
T6 r132after(T132* C);
void r132make(T132* C,T0* a1);
T6 r132off(T132* C);
T6 r132conforms_to(T132* C,T0* a1);
T0* r132twin(T132* C);
void r161copy(T161* C,T0* a1);
T6 r161se_assigned_from(T0* a1);
void r161print_on(T161* C,T0* a1);
void r161out_in_tagged_out_memory(T161* C);
T6 r161off(T161* C);
T6 r161conforms_to(T161* C,T0* a1);
T0* r161twin(T161* C);
T6 r441se_assigned_from(T0* a1);
void r441print_on(T441* C,T0* a1);
void r441out_in_tagged_out_memory(T441* C);
T0* r441make(T2 a1);
T6 r441conforms_to(T441* C,T0* a1);
T0* r441resize(T0* a1,T2 a2);
T0* r441twin(T441* C);
void r260subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r260se_assigned_from(T0* a1);
void r260print_on(T260* C,T0* a1);
void r260out_in_tagged_out_memory(T260* C);
T6 r260conforms_to(T260* C,T0* a1);
void r260sort_with_comparator(T0* a1,T0* a2);
T0* r260twin(T260* C);
T2 r213new_capacity(T2 a1);
void r213copy(T213* C,T0* a1);
T6 r213extendible(T213* C,T2 a1);
void r213move_cursors_right(T213* C,T2 a1,T2 a2);
void r213put(T213* C,T0* a1,T2 a2);
void r213remove_traversing_cursor(T213* C,T0* a1);
void r213move_all_cursors_after(T213* C);
void r213add_traversing_cursor(T213* C,T0* a1);
T6 r213se_assigned_from(T0* a1);
void r213print_on(T213* C,T0* a1);
T0* r213clone(T0* a1);
void r213out_in_tagged_out_memory(T213* C);
void r213force_first(T213* C,T0* a1);
T6 r213cursor_before(T0* a1);
void r213make(T213* C,T2 a1);
T6 r213cursor_after(T0* a1);
T6 r213conforms_to(T213* C,T0* a1);
void r213move_right(T213* C,T2 a1,T2 a2);
void r213resize(T213* C,T2 a1);
T0* r213twin(T213* C);
void r213force_last(T213* C,T0* a1);
T0* r213new_cursor(T213* C);
void r213put_last(T213* C,T0* a1);
T6 r213cursor_off(T0* a1);
T6 r537se_assigned_from(T0* a1);
void r537print_on(T537* C,T0* a1);
void r537out_in_tagged_out_memory(T537* C);
void r537make(T537* C,T0* a1,T0* a2);
T6 r537conforms_to(T537* C,T0* a1);
T0* r537twin(T537* C);
T6 r665se_assigned_from(T0* a1);
void r665print_on(T665* C,T0* a1);
void r665out_in_tagged_out_memory(T665* C);
T6 r665conforms_to(T665* C,T0* a1);
T0* r665twin(T665* C);
void r289copy(T289* C,T0* a1);
T6 r289se_assigned_from(T0* a1);
void r289print_on(T289* C,T0* a1);
void r289out_in_tagged_out_memory(T289* C);
T6 r289off(T289* C);
T6 r289conforms_to(T289* C,T0* a1);
T0* r289twin(T289* C);
void r687copy(T687* C,T0* a1);
T6 r687se_assigned_from(T0* a1);
void r687print_on(T687* C,T0* a1);
void r687out_in_tagged_out_memory(T687* C);
T6 r687off(T687* C);
T6 r687conforms_to(T687* C,T0* a1);
T0* r687twin(T687* C);
void r218copy(T218* C,T0* a1);
void r218remove_traversing_cursor(T218* C,T0* a1);
void r218move_all_cursors_after(T218* C);
void r218add_traversing_cursor(T218* C,T0* a1);
T6 r218se_assigned_from(T0* a1);
void r218print_on(T218* C,T0* a1);
T0* r218clone(T0* a1);
void r218out_in_tagged_out_memory(T218* C);
T6 r218cursor_before(T0* a1);
void r218make(T218* C,T2 a1);
T6 r218cursor_after(T0* a1);
T6 r218conforms_to(T218* C,T0* a1);
void r218resize(T218* C,T2 a1);
T0* r218twin(T218* C);
T0* r218new_cursor(T218* C);
void r218put_last(T218* C,T0* a1);
T6 r218cursor_off(T0* a1);
T2 r464new_capacity(T2 a1);
void r464copy(T464* C,T0* a1);
void r464make_equal(T464* C,T2 a1);
void r464make_clashes(T464* C,T2 a1);
T0* r464cursor_item(T464* C,T0* a1);
void r464search_position(T464* C,T0* a1);
void r464remove_traversing_cursor(T464* C,T0* a1);
void r464clone_slots(T464* C);
extern T0*oBC104FIXED_INTEGER_ARRAY_;
void r464clone_clashes(T464* C);
void r464move_all_cursors_after(T464* C);
void r464make_items(T464* C,T2 a1);
void r464add_traversing_cursor(T464* C,T0* a1);
T6 r464se_assigned_from(T0* a1);
void r464print_on(T464* C,T0* a1);
T0* r464clone(T0* a1);
void r464out_in_tagged_out_memory(T464* C);
T6 r464after(T464* C);
void r464make(T464* C,T2 a1);
T0* r464item_for_iteration(T464* C);
void r464clone_items(T464* C);
T6 r464cursor_after(T0* a1);
T6 r464conforms_to(T464* C,T0* a1);
T2 r464hash_position(T464* C,T0* a1);
void r464cursor_forth(T464* C,T0* a1);
void r464items_resize(T464* C,T2 a1);
void r464resize(T464* C,T2 a1);
void r464cursor_start(T464* C,T0* a1);
void r464clashes_resize(T464* C,T2 a1);
void r464slots_resize(T464* C,T2 a1);
T0* r464twin(T464* C);
void r464force_last(T464* C,T0* a1);
T0* r464new_cursor(T464* C);
void r464make_slots(T464* C,T2 a1);
T2 r464new_modulus(T2 a1);
T6 r464cursor_off(T0* a1);
T2 r74new_capacity(T2 a1);
void r74copy(T74* C,T0* a1);
T6 r74extendible(T74* C,T2 a1);
void r74remove_traversing_cursor(T74* C,T0* a1);
T0* r74item(T74* C,T2 a1);
void r74move_all_cursors_after(T74* C);
void r74add_traversing_cursor(T74* C,T0* a1);
T6 r74se_assigned_from(T0* a1);
void r74print_on(T74* C,T0* a1);
T0* r74clone(T0* a1);
void r74out_in_tagged_out_memory(T74* C);
T6 r74cursor_before(T0* a1);
void r74make(T74* C,T2 a1);
T6 r74cursor_after(T0* a1);
T6 r74conforms_to(T74* C,T0* a1);
void r74resize(T74* C,T2 a1);
T0* r74twin(T74* C);
void r74force_last(T74* C,T0* a1);
T0* r74new_cursor(T74* C);
T6 r74cursor_off(T0* a1);
T2 r308new_capacity(T2 a1);
void r308copy(T308* C,T0* a1);
T6 r308extendible(T308* C,T2 a1);
void r308remove_traversing_cursor(T308* C,T0* a1);
void r308move_all_cursors_after(T308* C);
void r308add_traversing_cursor(T308* C,T0* a1);
T6 r308se_assigned_from(T0* a1);
void r308print_on(T308* C,T0* a1);
T0* r308clone(T0* a1);
void r308out_in_tagged_out_memory(T308* C);
T6 r308cursor_before(T0* a1);
void r308make(T308* C,T2 a1);
T6 r308cursor_after(T0* a1);
T6 r308conforms_to(T308* C,T0* a1);
void r308resize(T308* C,T2 a1);
T0* r308twin(T308* C);
void r308force_last(T308* C,T0* a1);
T0* r308new_cursor(T308* C);
T6 r308cursor_off(T0* a1);
void r649copy(T649* C,T0* a1);
T0* r649cursor_item(T0* a1);
void r649remove_traversing_cursor(T649* C,T0* a1);
void r649move_all_cursors_after(T649* C);
void r649add_traversing_cursor(T649* C,T0* a1);
T6 r649se_assigned_from(T0* a1);
void r649print_on(T649* C,T0* a1);
void r649out_in_tagged_out_memory(T649* C);
void r649make(T649* C);
T6 r649cursor_after(T0* a1);
T6 r649conforms_to(T649* C,T0* a1);
void r649cursor_forth(T649* C,T0* a1);
void r649cursor_start(T649* C,T0* a1);
T0* r649twin(T649* C);
T0* r649new_cursor(T649* C);
void r649put_last(T649* C,T0* a1);
T6 r649cursor_off(T0* a1);
T6 r273se_assigned_from(T0* a1);
void r273print_on(T273* C,T0* a1);
void r273out_in_tagged_out_memory(T273* C);
T0* r273make(T2 a1);
T6 r273conforms_to(T273* C,T0* a1);
T0* r273resize(T0* a1,T2 a2);
T0* r273twin(T273* C);
void r386copy(T386* C,T0* a1);
T0* r386item(T386* C);
T6 r386se_assigned_from(T0* a1);
void r386print_on(T386* C,T0* a1);
void r386out_in_tagged_out_memory(T386* C);
T6 r386after(T386* C);
void r386make(T386* C,T0* a1);
T6 r386off(T386* C);
T6 r386conforms_to(T386* C,T0* a1);
T0* r386twin(T386* C);
void r449copy(T449* C,T0* a1);
T6 r449se_assigned_from(T0* a1);
void r449print_on(T449* C,T0* a1);
void r449out_in_tagged_out_memory(T449* C);
T6 r449off(T449* C);
T6 r449conforms_to(T449* C,T0* a1);
T0* r449twin(T449* C);
T6 r643se_assigned_from(T0* a1);
void r643print_on(T643* C,T0* a1);
void r643out_in_tagged_out_memory(T643* C);
T6 r643conforms_to(T643* C,T0* a1);
T0* r643twin(T643* C);
T6 r629se_assigned_from(T0* a1);
void r629print_on(T629* C,T0* a1);
void r629out_in_tagged_out_memory(T629* C);
T6 r629conforms_to(T629* C,T0* a1);
T0* r629twin(T629* C);
void r588copy(T588* C,T0* a1);
T6 r588se_assigned_from(T0* a1);
void r588print_on(T588* C,T0* a1);
void r588out_in_tagged_out_memory(T588* C);
T6 r588off(T588* C);
T6 r588conforms_to(T588* C,T0* a1);
T0* r588twin(T588* C);
T6 r486se_assigned_from(T0* a1);
void r486print_on(T486* C,T0* a1);
void r486out_in_tagged_out_memory(T486* C);
T0* r486make(T2 a1);
T6 r486conforms_to(T486* C,T0* a1);
T0* r486resize(T0* a1,T2 a2);
T0* r486twin(T486* C);
T6 r675se_assigned_from(T0* a1);
void r675print_on(T675* C,T0* a1);
void r675out_in_tagged_out_memory(T675* C);
T0* r675make(T2 a1);
T6 r675conforms_to(T675* C,T0* a1);
T0* r675resize(T0* a1,T2 a2);
T0* r675twin(T675* C);
void r509copy(T509* C,T0* a1);
T6 r509se_assigned_from(T0* a1);
void r509print_on(T509* C,T0* a1);
void r509out_in_tagged_out_memory(T509* C);
T6 r509off(T509* C);
T6 r509conforms_to(T509* C,T0* a1);
T0* r509twin(T509* C);
void r298copy(T298* C,T0* a1);
T0* r298item(T298* C);
T6 r298se_assigned_from(T0* a1);
void r298print_on(T298* C,T0* a1);
void r298out_in_tagged_out_memory(T298* C);
T6 r298after(T298* C);
T6 r298off(T298* C);
T6 r298conforms_to(T298* C,T0* a1);
T0* r298twin(T298* C);
T6 r512se_assigned_from(T0* a1);
void r512print_on(T512* C,T0* a1);
void r512out_in_tagged_out_memory(T512* C);
T0* r512make(T2 a1);
T6 r512conforms_to(T512* C,T0* a1);
T0* r512resize(T0* a1,T2 a2);
T0* r512twin(T512* C);
T6 r268se_assigned_from(T0* a1);
void r268print_on(T268* C,T0* a1);
void r268out_in_tagged_out_memory(T268* C);
T6 r268conforms_to(T268* C,T0* a1);
T6 r268less_than(T0* a1,T0* a2);
T0* r268twin(T268* C);
void r334copy(T334* C,T0* a1);
T6 r334se_assigned_from(T0* a1);
void r334print_on(T334* C,T0* a1);
void r334out_in_tagged_out_memory(T334* C);
void r334make(T334* C,T0* a1);
T6 r334off(T334* C);
T6 r334conforms_to(T334* C,T0* a1);
T0* r334twin(T334* C);
T2 r61new_capacity(T2 a1);
void r61copy(T61* C,T0* a1);
T6 r61extendible(T61* C,T2 a1);
void r61force(T61* C,T0* a1);
T0* r61item(T61* C);
T6 r61se_assigned_from(T0* a1);
void r61print_on(T61* C,T0* a1);
T0* r61clone(T0* a1);
void r61out_in_tagged_out_memory(T61* C);
void r61make(T61* C,T2 a1);
void r61remove(T61* C);
T6 r61conforms_to(T61* C,T0* a1);
void r61resize(T61* C,T2 a1);
T0* r61twin(T61* C);
T2 r565new_capacity(T2 a1);
void r565copy(T565* C,T0* a1);
T6 r565extendible(T565* C,T2 a1);
void r565remove_traversing_cursor(T565* C,T0* a1);
void r565move_all_cursors_after(T565* C);
void r565add_traversing_cursor(T565* C,T0* a1);
T6 r565se_assigned_from(T0* a1);
void r565print_on(T565* C,T0* a1);
T0* r565clone(T0* a1);
void r565out_in_tagged_out_memory(T565* C);
T6 r565cursor_before(T0* a1);
void r565make(T565* C,T2 a1);
T6 r565cursor_after(T0* a1);
T6 r565conforms_to(T565* C,T0* a1);
void r565resize(T565* C,T2 a1);
T0* r565twin(T565* C);
void r565force_last(T565* C,T0* a1);
T0* r565new_cursor(T565* C);
T6 r565cursor_off(T0* a1);
void r438copy(T438* C,T0* a1);
T6 r438se_assigned_from(T0* a1);
void r438print_on(T438* C,T0* a1);
void r438out_in_tagged_out_memory(T438* C);
T6 r438off(T438* C);
T6 r438conforms_to(T438* C,T0* a1);
T0* r438twin(T438* C);
T6 r148se_assigned_from(T0* a1);
void r148print_on(T148* C,T0* a1);
void r148out_in_tagged_out_memory(T148* C);
T0* r148make(T2 a1);
T6 r148conforms_to(T148* C,T0* a1);
T0* r148resize(T0* a1,T2 a2);
T0* r148twin(T148* C);
T2 r239new_capacity(T2 a1);
void r239copy(T239* C,T0* a1);
T6 r239extendible(T239* C,T2 a1);
void r239append_last(T239* C,T0* a1);
void r239move_cursors_right(T239* C,T2 a1,T2 a2);
T0* r239last(T239* C);
void r239put(T239* C,T0* a1,T2 a2);
T0* r239cursor_item(T239* C,T0* a1);
T6 r239is_equal(T239* C,T0* a1);
void r239remove_traversing_cursor(T239* C,T0* a1);
void r239move_all_cursors_after(T239* C);
void r239add_traversing_cursor(T239* C,T0* a1);
T6 r239se_assigned_from(T0* a1);
void r239print_on(T239* C,T0* a1);
T0* r239clone(T0* a1);
void r239out_in_tagged_out_memory(T239* C);
T6 r239cursor_before(T0* a1);
T6 r239same_type(T239* C,T0* a1);
void r239make(T239* C,T2 a1);
T6 r239cursor_after(T0* a1);
T6 r239conforms_to(T239* C,T0* a1);
T6 r239has(T239* C,T0* a1);
void r239move_right(T239* C,T2 a1,T2 a2);
void r239cursor_forth(T239* C,T0* a1);
void r239resize(T239* C,T2 a1);
void r239cursor_start(T239* C,T0* a1);
T0* r239twin(T239* C);
void r239force_last(T239* C,T0* a1);
T0* r239new_cursor(T239* C);
void r239extend_last(T239* C,T0* a1);
void r239put_last(T239* C,T0* a1);
T6 r239cursor_off(T0* a1);
T6 r472se_assigned_from(T0* a1);
void r472print_on(T472* C,T0* a1);
void r472out_in_tagged_out_memory(T472* C);
T6 r472conforms_to(T472* C,T0* a1);
T6 r472test(T0* a1,T0* a2);
T0* r472twin(T472* C);
T2 r539new_capacity(T2 a1);
void r539copy(T539* C,T0* a1);
T6 r539extendible(T539* C,T2 a1);
void r539remove_traversing_cursor(T539* C,T0* a1);
T0* r539item(T539* C,T2 a1);
void r539move_all_cursors_after(T539* C);
void r539add_traversing_cursor(T539* C,T0* a1);
T6 r539se_assigned_from(T0* a1);
void r539print_on(T539* C,T0* a1);
T0* r539clone(T0* a1);
void r539out_in_tagged_out_memory(T539* C);
T6 r539cursor_before(T0* a1);
void r539make(T539* C,T2 a1);
T6 r539cursor_after(T0* a1);
T6 r539conforms_to(T539* C,T0* a1);
void r539resize(T539* C,T2 a1);
T0* r539twin(T539* C);
void r539force_last(T539* C,T0* a1);
T0* r539new_cursor(T539* C);
T6 r539cursor_off(T0* a1);
T6 r259se_assigned_from(T0* a1);
void r259print_on(T259* C,T0* a1);
void r259out_in_tagged_out_memory(T259* C);
T6 r259conforms_to(T259* C,T0* a1);
T6 r259less_than(T0* a1,T0* a2);
T0* r259twin(T259* C);
T6 r647se_assigned_from(T0* a1);
void r647print_on(T647* C,T0* a1);
void r647out_in_tagged_out_memory(T647* C);
void r647make(T647* C,T0* a1,T0* a2);
T6 r647conforms_to(T647* C,T0* a1);
T0* r647twin(T647* C);
T6 r247se_assigned_from(T0* a1);
void r247print_on(T247* C,T0* a1);
void r247out_in_tagged_out_memory(T247* C);
T6 r247conforms_to(T247* C,T0* a1);
T0* r247twin(T247* C);
T6 r303se_assigned_from(T0* a1);
void r303print_on(T303* C,T0* a1);
void r303out_in_tagged_out_memory(T303* C);
T0* r303make(T2 a1);
T6 r303conforms_to(T303* C,T0* a1);
T0* r303resize(T0* a1,T2 a2);
T0* r303twin(T303* C);
T6 r563se_assigned_from(T0* a1);
void r563print_on(T563* C,T0* a1);
void r563out_in_tagged_out_memory(T563* C);
T0* r563make(T2 a1);
T6 r563conforms_to(T563* C,T0* a1);
T0* r563resize(T0* a1,T2 a2);
T0* r563twin(T563* C);
T2 r108new_capacity(T2 a1);
void r108copy(T108* C,T0* a1);
void r108make_equal(T108* C,T2 a1);
void r108force(T108* C,T0* a1,T0* a2);
void r108make_clashes(T108* C,T2 a1);
T0* r108cursor_item(T108* C,T0* a1);
void r108search_position(T108* C,T0* a1);
void r108remove_traversing_cursor(T108* C,T0* a1);
void r108clone_slots(T108* C);
void r108keys_resize(T108* C,T2 a1);
void r108clone_clashes(T108* C);
void r108move_all_cursors_after(T108* C);
void r108make_items(T108* C,T2 a1);
void r108add_traversing_cursor(T108* C,T0* a1);
T6 r108se_assigned_from(T0* a1);
void r108print_on(T108* C,T0* a1);
T0* r108clone(T0* a1);
void r108remove_position(T108* C,T2 a1);
void r108out_in_tagged_out_memory(T108* C);
void r108make(T108* C,T2 a1);
void r108remove(T108* C,T0* a1);
T0* r108cursor_key(T108* C,T0* a1);
void r108clone_items(T108* C);
T6 r108cursor_after(T0* a1);
T6 r108conforms_to(T108* C,T0* a1);
void r108make_keys(T108* C,T2 a1);
T2 r108hash_position(T108* C,T0* a1);
void r108cursor_forth(T108* C,T0* a1);
void r108items_resize(T108* C,T2 a1);
void r108clone_keys(T108* C);
void r108move_cursors_after(T108* C,T2 a1);
void r108resize(T108* C,T2 a1);
T0* r108found_item(T108* C);
void r108make_with_equality_testers(T108* C,T2 a1,T0* a2,T0* a3);
T6 r108found(T108* C);
void r108move_cursors_forth(T108* C,T2 a1);
void r108cursor_start(T108* C,T0* a1);
void r108search(T108* C,T0* a1);
void r108clashes_resize(T108* C,T2 a1);
void r108slots_resize(T108* C,T2 a1);
T0* r108twin(T108* C);
T0* r108new_cursor(T108* C);
void r108make_slots(T108* C,T2 a1);
void r108move_all_cursors(T108* C,T2 a1,T2 a2);
T2 r108new_modulus(T2 a1);
T6 r108cursor_off(T0* a1);
T6 r136se_assigned_from(T0* a1);
void r136print_on(T136* C,T0* a1);
void r136out_in_tagged_out_memory(T136* C);
T0* r136make(T2 a1);
T6 r136conforms_to(T136* C,T0* a1);
T0* r136resize(T0* a1,T2 a2);
T0* r136twin(T136* C);
T2 r99new_capacity(T2 a1);
void r99copy(T99* C,T0* a1);
T6 r99extendible(T99* C,T2 a1);
void r99remove_traversing_cursor(T99* C,T0* a1);
void r99move_all_cursors_after(T99* C);
void r99add_traversing_cursor(T99* C,T0* a1);
T6 r99se_assigned_from(T0* a1);
void r99print_on(T99* C,T0* a1);
T0* r99clone(T0* a1);
void r99out_in_tagged_out_memory(T99* C);
T6 r99cursor_before(T0* a1);
void r99make(T99* C,T2 a1);
T6 r99cursor_after(T0* a1);
T6 r99conforms_to(T99* C,T0* a1);
void r99resize(T99* C,T2 a1);
T0* r99twin(T99* C);
void r99force_last(T99* C,T0* a1);
T0* r99new_cursor(T99* C);
T6 r99cursor_off(T0* a1);
T2 r317new_capacity(T2 a1);
void r317copy(T317* C,T0* a1);
void r317force(T317* C,T0* a1,T2 a2);
void r317make_clashes(T317* C,T2 a1);
void r317search_position(T317* C,T2 a1);
void r317remove_traversing_cursor(T317* C,T0* a1);
void r317clone_slots(T317* C);
void r317keys_resize(T317* C,T2 a1);
void r317clone_clashes(T317* C);
T0* r317item(T317* C,T2 a1);
void r317move_all_cursors_after(T317* C);
void r317make_items(T317* C,T2 a1);
void r317add_traversing_cursor(T317* C,T0* a1);
T6 r317se_assigned_from(T0* a1);
void r317print_on(T317* C,T0* a1);
T0* r317clone(T0* a1);
void r317out_in_tagged_out_memory(T317* C);
void r317make(T317* C,T2 a1);
void r317clone_items(T317* C);
T6 r317conforms_to(T317* C,T0* a1);
T6 r317has(T317* C,T2 a1);
void r317make_keys(T317* C,T2 a1);
T2 r317hash_position(T317* C,T2 a1);
void r317items_resize(T317* C,T2 a1);
void r317clone_keys(T317* C);
void r317make_with_equality_testers(T317* C,T2 a1,T0* a2,T0* a3);
void r317resize(T317* C,T2 a1);
void r317clashes_resize(T317* C,T2 a1);
void r317slots_resize(T317* C,T2 a1);
T0* r317twin(T317* C);
T0* r317new_cursor(T317* C);
void r317make_slots(T317* C,T2 a1);
T2 r317new_modulus(T2 a1);
T6 r317cursor_off(T0* a1);
void r421subsort_with_comparator(T0* a1,T0* a2,T2 a3,T2 a4);
T6 r421se_assigned_from(T0* a1);
void r421print_on(T421* C,T0* a1);
void r421out_in_tagged_out_memory(T421* C);
T6 r421conforms_to(T421* C,T0* a1);
void r421sort_with_comparator(T0* a1,T0* a2);
T0* r421twin(T421* C);
T6 r112se_assigned_from(T0* a1);
void r112print_on(T112* C,T0* a1);
void r112out_in_tagged_out_memory(T112* C);
T6 r112conforms_to(T112* C,T0* a1);
T6 r112test(T0* a1,T0* a2);
T0* r112twin(T112* C);
T6 r274se_assigned_from(T0* a1);
void r274print_on(T274* C,T0* a1);
void r274out_in_tagged_out_memory(T274* C);
T0* r274make(T2 a1);
T6 r274conforms_to(T274* C,T0* a1);
T0* r274resize(T0* a1,T2 a2);
T0* r274twin(T274* C);
T2 r371new_capacity(T2 a1);
void r371copy(T371* C,T0* a1);
void r371force(T371* C,T0* a1,T0* a2);
void r371make_clashes(T371* C,T2 a1);
T0* r371cursor_item(T371* C,T0* a1);
void r371search_position(T371* C,T0* a1);
void r371remove_traversing_cursor(T371* C,T0* a1);
void r371clone_slots(T371* C);
void r371keys_resize(T371* C,T2 a1);
void r371clone_clashes(T371* C);
T0* r371item(T371* C,T0* a1);
void r371move_all_cursors_after(T371* C);
void r371make_items(T371* C,T2 a1);
void r371add_traversing_cursor(T371* C,T0* a1);
T6 r371se_assigned_from(T0* a1);
void r371print_on(T371* C,T0* a1);
T0* r371clone(T0* a1);
void r371out_in_tagged_out_memory(T371* C);
void r371make(T371* C,T2 a1);
void r371clone_items(T371* C);
T6 r371cursor_after(T0* a1);
T6 r371conforms_to(T371* C,T0* a1);
T6 r371has(T371* C,T0* a1);
void r371make_keys(T371* C,T2 a1);
T2 r371hash_position(T371* C,T0* a1);
void r371cursor_forth(T371* C,T0* a1);
void r371items_resize(T371* C,T2 a1);
void r371clone_keys(T371* C);
void r371make_with_equality_testers(T371* C,T2 a1,T0* a2,T0* a3);
void r371resize(T371* C,T2 a1);
void r371cursor_start(T371* C,T0* a1);
void r371clashes_resize(T371* C,T2 a1);
void r371slots_resize(T371* C,T2 a1);
T0* r371twin(T371* C);
T0* r371new_cursor(T371* C);
void r371make_slots(T371* C,T2 a1);
T2 r371new_modulus(T2 a1);
T6 r371cursor_off(T0* a1);
T2 r66new_capacity(T2 a1);
void r66copy(T66* C,T0* a1);
T6 r66extendible(T66* C,T2 a1);
void r66remove_traversing_cursor(T66* C,T0* a1);
void r66move_all_cursors_after(T66* C);
void r66add_traversing_cursor(T66* C,T0* a1);
T6 r66se_assigned_from(T0* a1);
void r66print_on(T66* C,T0* a1);
T0* r66clone(T0* a1);
void r66out_in_tagged_out_memory(T66* C);
T6 r66cursor_before(T0* a1);
void r66make(T66* C,T2 a1);
T6 r66cursor_after(T0* a1);
T6 r66conforms_to(T66* C,T0* a1);
void r66resize(T66* C,T2 a1);
T0* r66twin(T66* C);
void r66force_last(T66* C,T0* a1);
T0* r66new_cursor(T66* C);
void r66put_last(T66* C,T0* a1);
T6 r66cursor_off(T0* a1);
void r412copy(T412* C,T0* a1);
T6 r412se_assigned_from(T0* a1);
void r412print_on(T412* C,T0* a1);
void r412out_in_tagged_out_memory(T412* C);
T6 r412off(T412* C);
T6 r412conforms_to(T412* C,T0* a1);
T0* r412twin(T412* C);
T6 r420se_assigned_from(T0* a1);
void r420print_on(T420* C,T0* a1);
void r420out_in_tagged_out_memory(T420* C);
T6 r420conforms_to(T420* C,T0* a1);
T6 r420less_than(T2 a1,T2 a2);
T0* r420twin(T420* C);
void r544clear_all(T0* a1);
T6 r544se_assigned_from(T0* a1);
void r544print_on(T544* C,T0* a1);
void r544out_in_tagged_out_memory(T544* C);
T0* r544make(T2 a1);
T6 r544conforms_to(T544* C,T0* a1);
T0* r544resize(T0* a1,T2 a2);
T0* r544twin(T544* C);
void r346copy(T346* C,T0* a1);
T6 r346se_assigned_from(T0* a1);
void r346print_on(T346* C,T0* a1);
void r346out_in_tagged_out_memory(T346* C);
T6 r346off(T346* C);
T6 r346conforms_to(T346* C,T0* a1);
T0* r346twin(T346* C);
extern T0*oBC30unix_file_system;
extern T0*oBC30file_system;
extern int fBC30file_system;
T0* r491file_system(void);
T6 r491se_assigned_from(T0* a1);
void r491print_on(T491* C,T0* a1);
T0* r491clone(T0* a1);
void r491out_in_tagged_out_memory(T491* C);
extern T0*oBC31operating_system;
T6 r491conforms_to(T491* C,T0* a1);
void r491execute(T491* C);
T0* r491twin(T491* C);
extern T0*oBC30windows_file_system;
void r491execute_shell(T491* C,T0* a1);
T6 r491is_executable(T491* C);
void r226build(T226* C);
T2 r226previous_symbol(T226* C,T2 a1);
void r226put(T226* C,T2 a1);
T6 r226se_assigned_from(T0* a1);
void r226print_on(T226* C,T0* a1);
void r226out_in_tagged_out_memory(T226* C);
T0* r226to_array(T226* C,T2 a1,T2 a2);
void r226make(T226* C,T2 a1,T2 a2);
void r226equiv_add(T226* C,T0* a1);
T6 r226conforms_to(T226* C,T0* a1);
void r226equiv_initialize(T226* C);
T2 r226equivalence_class(T226* C,T2 a1);
void r226add(T226* C,T0* a1);
T6 r226is_representative(T226* C,T2 a1);
T0* r226twin(T226* C);
void r226initialize(T226* C);
void r226equiv_put(T226* C,T2 a1);
extern T0*oBC55Dir_attribute_name;
extern int fBC55Dir_attribute_name;
T0* r536Dir_attribute_name(void);
extern T0*oBC536Output_filename_attribute_name;
extern int fBC536Output_filename_attribute_name;
T0* r536Output_filename_attribute_name(void);
extern T0*oBC536Processor_attribute_name;
extern int fBC536Processor_attribute_name;
T0* r536Processor_attribute_name(void);
extern T0*oBC55Unless_attribute_name;
extern int fBC55Unless_attribute_name;
T0* r536Unless_attribute_name(void);
void r536element_make(T536* C,T0* a1,T0* a2);
extern T0*oBC55If_attribute_name;
extern int fBC55If_attribute_name;
T0* r536If_attribute_name(void);
T0* r536file_system(void);
extern T0*oBC536Stylesheet_filename_attribute_name;
extern int fBC536Stylesheet_filename_attribute_name;
T0* r536Stylesheet_filename_attribute_name(void);
T6 r536se_assigned_from(T0* a1);
void r536print_on(T536* C,T0* a1);
void r536out_in_tagged_out_memory(T536* C);
void r536make(T536* C,T0* a1,T0* a2);
extern T0*oBC536Parameter_element_name;
extern int fBC536Parameter_element_name;
T0* r536Parameter_element_name(void);
extern T0*oBC536Classpath_attribute_name;
extern int fBC536Classpath_attribute_name;
T0* r536Classpath_attribute_name(void);
T0* r536uc_attribute_value(T536* C,T0* a1);
void r536task_make(T536* C,T0* a1,T0* a2);
T6 r536conforms_to(T536* C,T0* a1);
extern T0*oBC536Processor_attribute_value_xalan_java;
extern int fBC536Processor_attribute_value_xalan_java;
T0* r536Processor_attribute_value_xalan_java(void);
extern T0*oBC536Format_attribute_name;
extern int fBC536Format_attribute_name;
T0* r536Format_attribute_name(void);
void r536execute(T536* C);
T6 r536is_enabled(T536* C);
extern T0*oBC536Indent_attribute_name;
extern int fBC536Indent_attribute_name;
T0* r536Indent_attribute_name(void);
T0* r536twin(T536* C);
extern T0*oBC536Extdirs_attribute_name;
extern int fBC536Extdirs_attribute_name;
T0* r536Extdirs_attribute_name(void);
extern T0*oBC22STRING_;
T0* r536new_unicode_string(T0* a1);
extern T0*oBC536Input_filename_attribute_name;
extern int fBC536Input_filename_attribute_name;
T0* r536Input_filename_attribute_name(void);
extern T0*oBC536Processor_attribute_value_xalan_cpp;
extern int fBC536Processor_attribute_value_xalan_cpp;
T0* r536Processor_attribute_value_xalan_cpp(void);
void r190build(T190* C);
void r190build_accept_table(T190* C);
void r190initialize_dfa(T190* C,T0* a1,T2 a2,T2 a3);
T6 r190se_assigned_from(T0* a1);
void r190print_on(T190* C,T0* a1);
void r190out_in_tagged_out_memory(T190* C);
void r190put_start_condition(T190* C,T0* a1);
void r190set_nfa_state_ids(T0* a1);
void r190make(T190* C,T0* a1);
void r190build_eof_rules(T190* C,T0* a1,T2 a2,T2 a3);
T6 r190conforms_to(T190* C,T0* a1);
T0* r190twin(T190* C);
void r190build_transitions(T190* C,T0* a1);
void r190initialize(T190* C,T0* a1);
void r190put_eob_state(T190* C);
void r190build_rules(T190* C,T0* a1);
void r190build_nxt_table(T190* C);
T0* r190new_state(T190* C,T0* a1);
T6 r607se_assigned_from(T0* a1);
void r607print_on(T607* C,T0* a1);
void r607out_in_tagged_out_memory(T607* C);
T6 r607conforms_to(T607* C,T0* a1);
T0* r607twin(T607* C);
T6 r185se_assigned_from(T0* a1);
void r185print_on(T185* C,T0* a1);
void r185out_in_tagged_out_memory(T185* C);
T6 r185recognizes(T185* C,T0* a1);
T6 r185conforms_to(T185* C,T0* a1);
void r185compile(T185* C,T0* a1,T6 a2);
T0* r185twin(T185* C);
T2 r185longest_end_position(T185* C,T0* a1,T2 a2);
T0* r147pathname_from_file_system(T147* C,T0* a1,T0* a2);
T6 r147is_absolute_pathname(T0* a1);
T0* r147current_working_directory(T147* C);
void r147cd(T147* C,T0* a1);
T6 r147file_exists(T0* a1);
T6 r147directory_exists(T0* a1);
void r147recursive_delete_directory(T0* a1);
T0* r147absolute_pathname(T147* C,T0* a1);
T6 r147se_assigned_from(T0* a1);
T6 r147is_directory_readable(T0* a1);
void r147print_on(T147* C,T0* a1);
T0* r147clone(T0* a1);
T0* r147dirname(T0* a1);
void r147delete_file(T0* a1);
void r147out_in_tagged_out_memory(T147* C);
void r147set_current_working_directory(T147* C,T0* a1);
T0* r147cwd(T147* C);
T6 r147same_type(T147* C,T0* a1);
T6 r147is_file_readable(T0* a1);
void r147recursive_create_directory(T0* a1);
extern T0*oBC143tmp_file;
extern int fBC143tmp_file;
T0* r147tmp_file(void);
T6 r147conforms_to(T147* C,T0* a1);
void r147copy_file(T0* a1,T0* a2);
T0* r147string_to_pathname(T0* a1);
void r147rename_file(T0* a1,T0* a2);
T2 r147file_time_stamp(T0* a1);
extern T0*oBC147root_directory;
T6 r147is_root_directory(T0* a1);
T6 r147same_physical_file(T0* a1,T0* a2);
T0* r147pathname_to_string(T0* a1);
T0* r147twin(T147* C);
T0* r147basename(T0* a1);
T0* r147canonical_pathname(T0* a1);
T0* r147pathname(T0* a1,T0* a2);
extern T0*oBC143tmp_directory;
extern int fBC143tmp_directory;
T0* r147tmp_directory(void);
T6 r238is_equal(T238* C,T0* a1);
T6 r238has_transition(T238* C);
T6 r238se_assigned_from(T0* a1);
void r238print_on(T238* C,T0* a1);
void r238out_in_tagged_out_memory(T238* C);
T6 r238conforms_to(T238* C,T0* a1);
T6 r238_px_60(T238* C,T0* a1);
T6 r238is_accepting_head(T238* C);
T0* r238twin(T238* C);
T0* r63attribute_value_by_name(T63* C,T0* a1);
void r63add_attributes(T63* C,T0* a1);
T0* r63child_by_name(T63* C,T0* a1);
T6 r63se_assigned_from(T0* a1);
void r63print_on(T63* C,T0* a1);
void r63add_attribute(T63* C,T0* a1);
void r63out_in_tagged_out_memory(T63* C);
void r63make(T63* C,T0* a1);
T0* r63children_by_name(T63* C,T0* a1);
T6 r63conforms_to(T63* C,T0* a1);
void r63make_attribute_handler(T63* C);
extern T0*oBC63Empty_string;
extern int fBC63Empty_string;
T0* r63Empty_string(void);
T0* r63twin(T63* C);
void r63make_composite(T63* C);
T0* r63new_unicode_string(T0* a1);
T6 r63has_attribute(T63* C,T0* a1);
extern T0*oBC169Clean_attribute_name;
extern int fBC169Clean_attribute_name;
T0* r169Clean_attribute_name(void);
T0* r169Dir_attribute_name(void);
T0* r169Unless_attribute_name(void);
void r169element_make(T169* C,T0* a1,T0* a2);
T0* r169attribute_value(T169* C,T0* a1);
T0* r169If_attribute_name(void);
extern T0*oBC169Ace_attribute_name;
extern int fBC169Ace_attribute_name;
T0* r169Ace_attribute_name(void);
extern T0*oBC169Root_class_attribute_name;
extern int fBC169Root_class_attribute_name;
T0* r169Root_class_attribute_name(void);
T0* r169file_system(void);
T6 r169se_assigned_from(T0* a1);
void r169print_on(T169* C,T0* a1);
void r169out_in_tagged_out_memory(T169* C);
T6 r169uc_boolean_value(T169* C,T0* a1);
void r169make(T169* C,T0* a1,T0* a2);
extern T0*oBC55True_attribute_value;
extern int fBC55True_attribute_value;
T0* r169True_attribute_value(void);
T0* r169uc_attribute_value(T169* C,T0* a1);
void r169task_make(T169* C,T0* a1,T0* a2);
extern T0*oBC169Case_insensitive_attribute_name;
extern int fBC169Case_insensitive_attribute_name;
T0* r169Case_insensitive_attribute_name(void);
T6 r169conforms_to(T169* C,T0* a1);
void r169print(T0* a1);
extern T0*oBC169Executable_attribute_name;
extern int fBC169Executable_attribute_name;
T0* r169Executable_attribute_name(void);
extern T0*oBC169No_style_warning_attribute_name;
extern int fBC169No_style_warning_attribute_name;
T0* r169No_style_warning_attribute_name(void);
void r169execute(T169* C);
T0* r169uc_attribute_value_or_default(T169* C,T0* a1,T0* a2);
extern T0*oBC1std_output;
T6 r169is_enabled(T169* C);
extern T0*oBC55False_attribute_value;
extern int fBC55False_attribute_value;
T0* r169False_attribute_value(void);
T0* r169attribute_value_or_default(T169* C,T0* a1,T0* a2);
T0* r169twin(T169* C);
extern T0*oBC169Creation_procedure_attribute_name;
extern int fBC169Creation_procedure_attribute_name;
T0* r169Creation_procedure_attribute_name(void);
T0* r169new_unicode_string(T0* a1);
T6 r67se_assigned_from(T0* a1);
void r67print_on(T67* C,T0* a1);
void r67out_in_tagged_out_memory(T67* C);
void r67make(T67* C,T0* a1,T0* a2);
T6 r67conforms_to(T67* C,T0* a1);
T0* r67twin(T67* C);
void r306copy(T306* C,T0* a1);
void r306move_cursors_right(T306* C,T2 a1,T2 a2);
void r306put(T306* C,T0* a1,T2 a2);
void r306remove_traversing_cursor(T306* C,T0* a1);
void r306move_all_cursors_after(T306* C);
void r306make_with_initial(T306* C,T2 a1);
void r306add_traversing_cursor(T306* C,T0* a1);
T6 r306se_assigned_from(T0* a1);
void r306print_on(T306* C,T0* a1);
T0* r306clone(T0* a1);
void r306out_in_tagged_out_memory(T306* C);
T0* r306names(T306* C);
void r306add_nfa_to_non_exclusive(T306* C,T0* a1);
T6 r306cursor_before(T0* a1);
void r306make(T306* C,T2 a1);
T6 r306cursor_after(T0* a1);
T6 r306conforms_to(T306* C,T0* a1);
void r306move_right(T306* C,T2 a1,T2 a2);
void r306add_nfa_to_all(T306* C,T0* a1);
T0* r306twin(T306* C);
T0* r306new_cursor(T306* C);
void r306put_last(T306* C,T0* a1);
T6 r306cursor_off(T0* a1);
void r498_167Pmake(T498* C,T0* a1);
T0* r498file_system(void);
T6 r498se_assigned_from(T0* a1);
void r498print_on(T498* C,T0* a1);
T0* r498clone(T0* a1);
void r498out_in_tagged_out_memory(T498* C);
void r498make(T498* C,T0* a1);
T6 r498conforms_to(T498* C,T0* a1);
T6 r498is_validate_executable(T498* C);
T6 r498is_system_executable(T498* C);
void r498execute(T498* C);
T0* r498twin(T498* C);
T6 r498is_cluster_executable(T498* C);
void r498execute_shell(T498* C,T0* a1);
T6 r498is_executable(T498* C);
T6 r618se_assigned_from(T0* a1);
void r618print_on(T618* C,T0* a1);
void r618out_in_tagged_out_memory(T618* C);
extern T0*oBC18Arguments;
extern int fBC18Arguments;
T0* r618Arguments(void);
void r618make(T618* C,T0* a1);
T0* r618message(T618* C,T0* a1);
T6 r618conforms_to(T618* C,T0* a1);
T0* r618twin(T618* C);
T0* r618default_message(T618* C);
T0* r515Dir_attribute_name(void);
extern T0*oBC515Output_filename_attribute_name;
extern int fBC515Output_filename_attribute_name;
T0* r515Output_filename_attribute_name(void);
T0* r515Unless_attribute_name(void);
void r515element_make(T515* C,T0* a1,T0* a2);
T0* r515If_attribute_name(void);
T0* r515file_system(void);
T6 r515se_assigned_from(T0* a1);
void r515print_on(T515* C,T0* a1);
void r515out_in_tagged_out_memory(T515* C);
T6 r515uc_boolean_value(T515* C,T0* a1);
void r515make(T515* C,T0* a1,T0* a2);
T0* r515True_attribute_value(void);
extern T0*oBC515Verbose_filename_attribute_name;
extern int fBC515Verbose_filename_attribute_name;
T0* r515Verbose_filename_attribute_name(void);
T0* r515uc_attribute_value(T515* C,T0* a1);
void r515task_make(T515* C,T0* a1,T0* a2);
T6 r515conforms_to(T515* C,T0* a1);
void r515print(T0* a1);
void r515execute(T515* C);
extern T0*oBC515Tokens_classname_attribute_name;
extern int fBC515Tokens_classname_attribute_name;
T0* r515Tokens_classname_attribute_name(void);
T6 r515is_enabled(T515* C);
T0* r515False_attribute_value(void);
extern T0*oBC515Separate_actions_attribute_name;
extern int fBC515Separate_actions_attribute_name;
T0* r515Separate_actions_attribute_name(void);
T0* r515twin(T515* C);
T0* r515new_unicode_string(T0* a1);
extern T0*oBC515Input_filename_attribute_name;
extern int fBC515Input_filename_attribute_name;
T0* r515Input_filename_attribute_name(void);
T6 r497has_value(T497* C);
T0* r497name(T497* C);
T0* r497Unless_attribute_name(void);
T0* r497If_attribute_name(void);
T6 r497has_name(T497* C);
T6 r497se_assigned_from(T0* a1);
void r497print_on(T497* C,T0* a1);
void r497out_in_tagged_out_memory(T497* C);
void r497make(T497* C,T0* a1,T0* a2);
T0* r497value(T497* C);
T0* r497uc_attribute_value(T497* C,T0* a1);
extern T0*oBC497Value_attribute_name;
extern int fBC497Value_attribute_name;
T0* r497Value_attribute_name(void);
T6 r497conforms_to(T497* C,T0* a1);
extern T0*oBC497Name_attribute_name;
extern int fBC497Name_attribute_name;
T0* r497Name_attribute_name(void);
T6 r497is_enabled(T497* C);
T0* r497twin(T497* C);
T0* r497new_unicode_string(T0* a1);
T6 r383se_assigned_from(T0* a1);
void r383print_on(T383* C,T0* a1);
void r383out_in_tagged_out_memory(T383* C);
T0* r383Arguments(void);
void r383make(T383* C);
T0* r383message(T383* C,T0* a1);
T6 r383conforms_to(T383* C,T0* a1);
T0* r383twin(T383* C);
T0* r383default_message(T383* C);
T6 r396se_assigned_from(T0* a1);
void r396print_on(T396* C,T0* a1);
void r396out_in_tagged_out_memory(T396* C);
T0* r396Arguments(void);
void r396make(T396* C,T0* a1,T2 a2);
T0* r396message(T396* C,T0* a1);
T6 r396conforms_to(T396* C,T0* a1);
T0* r396twin(T396* C);
T0* r396default_message(T396* C);
T0* r616current_working_directory(T616* C);
T2 r616read_to_string(T616* C,T0* a1,T2 a2,T2 a3);
T6 r616se_assigned_from(T0* a1);
void r616print_on(T616* C,T0* a1);
void r616old_read_character(T616* C);
T0* r616clone(T0* a1);
extern T6 oBC91is_windows;
extern int fBC91is_windows;
T6 r616is_windows(T616* C);
T6 r616old_end_of_file(T616* C);
void r616out_in_tagged_out_memory(T616* C);
void r616read_character(T616* C);
void r616make(T616* C);
T6 r616conforms_to(T616* C,T0* a1);
extern T6 oBC91is_unix;
extern int fBC91is_unix;
T6 r616is_unix(T616* C);
T0* r616twin(T616* C);
void r196make_null(T196* C);
T6 r196se_assigned_from(T0* a1);
void r196print_on(T196* C,T0* a1);
extern T0*oBC197null_output_stream;
extern int fBC197null_output_stream;
T0* r196null_output_stream(void);
void r196out_in_tagged_out_memory(T196* C);
void r196report_message(T196* C,T0* a1);
extern T0*oBC29std;
T0* r196message(T0* a1);
T6 r196conforms_to(T196* C,T0* a1);
T0* r196twin(T196* C);
void r196make_standard(T196* C);
void r196report_error(T196* C,T0* a1);
extern T0*oBC178Force_attribute_name;
extern int fBC178Force_attribute_name;
T0* r178Force_attribute_name(void);
T6 r178se_assigned_from(T0* a1);
void r178print_on(T178* C,T0* a1);
void r178out_in_tagged_out_memory(T178* C);
T6 r178uc_boolean_value(T178* C,T0* a1);
void r178make(T178* C,T0* a1,T0* a2);
T0* r178True_attribute_value(void);
T0* r178uc_attribute_value(T178* C,T0* a1);
extern T0*oBC178Exclude_attribute_name;
extern int fBC178Exclude_attribute_name;
T0* r178Exclude_attribute_name(void);
T6 r178conforms_to(T178* C,T0* a1);
void r178print(T0* a1);
extern T0*oBC178Map_element_name;
extern int fBC178Map_element_name;
T0* r178Map_element_name(void);
T0* r178False_attribute_value(void);
extern T0*oBC178Concat_attribute_name;
extern int fBC178Concat_attribute_name;
T0* r178Concat_attribute_name(void);
void r178_55Pmake(T178* C,T0* a1,T0* a2);
extern T0*oBC178Include_attribute_name;
extern int fBC178Include_attribute_name;
T0* r178Include_attribute_name(void);
T0* r178twin(T178* C);
extern T0*oBC178Directory_attribute_name;
extern int fBC178Directory_attribute_name;
T0* r178Directory_attribute_name(void);
T0* r178new_unicode_string(T0* a1);
T0* r365substring(T365* C,T2 a1,T2 a2);
void r365fill_from_string(T365* C,T0* a1,T2 a2);
T2 r365fill_from_stream(T365* C,T0* a1,T2 a2,T2 a3);
T6 r365se_assigned_from(T0* a1);
void r365print_on(T365* C,T0* a1);
void r365out_in_tagged_out_memory(T365* C);
void r365move_left(T365* C,T2 a1,T2 a2,T2 a3);
void r365make(T365* C,T2 a1);
T6 r365conforms_to(T365* C,T0* a1);
void r365resize(T365* C,T2 a1);
T0* r365twin(T365* C);
T6 r380se_assigned_from(T0* a1);
void r380print_on(T380* C,T0* a1);
void r380out_in_tagged_out_memory(T380* C);
T0* r380Arguments(void);
void r380make(T380* C,T0* a1,T2 a2);
T0* r380message(T380* C,T0* a1);
T6 r380conforms_to(T380* C,T0* a1);
T0* r380twin(T380* C);
T0* r380default_message(T380* C);
T6 r385se_assigned_from(T0* a1);
void r385print_on(T385* C,T0* a1);
void r385out_in_tagged_out_memory(T385* C);
T0* r385Arguments(void);
void r385make(T385* C);
T0* r385message(T385* C,T0* a1);
T6 r385conforms_to(T385* C,T0* a1);
T0* r385twin(T385* C);
T0* r385default_message(T385* C);
T6 r525se_assigned_from(T0* a1);
void r525print_on(T525* C,T0* a1);
void r525out_in_tagged_out_memory(T525* C);
T6 r525conforms_to(T525* C,T0* a1);
void r525execute(T525* C);
T0* r525twin(T525* C);
T0* r523file_system(void);
T6 r523se_assigned_from(T0* a1);
T6 r523is_filename_executable(T523* C);
void r523print_on(T523* C,T0* a1);
void r523out_in_tagged_out_memory(T523* C);
T6 r523is_target_executable(T523* C);
T6 r523conforms_to(T523* C,T0* a1);
void r523execute(T523* C);
T0* r523twin(T523* C);
T0* r523new_unicode_string(T0* a1);
T6 r523is_executable(T523* C);
T0* r527file_system(void);
T6 r527se_assigned_from(T0* a1);
void r527print_on(T527* C,T0* a1);
void r527out_in_tagged_out_memory(T527* C);
T6 r527conforms_to(T527* C,T0* a1);
void r527execute(T527* C);
T0* r527twin(T527* C);
T6 r527is_executable(T527* C);
T6 r495se_assigned_from(T0* a1);
void r495print_on(T495* C,T0* a1);
void r495out_in_tagged_out_memory(T495* C);
T6 r495conforms_to(T495* C,T0* a1);
void r495execute(T495* C);
T0* r495twin(T495* C);
T6 r495is_executable(T495* C);
void r514_167Pmake(T514* C,T0* a1);
T0* r514file_system(void);
T6 r514se_assigned_from(T0* a1);
void r514print_on(T514* C,T0* a1);
T0* r514clone(T0* a1);
void r514out_in_tagged_out_memory(T514* C);
void r514make(T514* C,T0* a1);
T6 r514conforms_to(T514* C,T0* a1);
void r514execute(T514* C);
T0* r514twin(T514* C);
void r514execute_shell(T514* C,T0* a1);
T6 r514is_executable(T514* C);
T6 r425se_assigned_from(T0* a1);
void r425print_on(T425* C,T0* a1);
void r425out_in_tagged_out_memory(T425* C);
T0* r425Arguments(void);
void r425make(T425* C,T0* a1,T2 a2);
T0* r425message(T425* C,T0* a1);
T6 r425conforms_to(T425* C,T0* a1);
T0* r425twin(T425* C);
T0* r425default_message(T425* C);
T2 r370new_capacity(T2 a1);
void r370copy(T370* C,T0* a1);
T6 r370extendible(T370* C,T2 a1);
T2 r370last(T370* C);
void r370put(T370* C,T2 a1);
void r370remove_traversing_cursor(T370* C,T0* a1);
void r370move_all_cursors_after(T370* C);
void r370add_traversing_cursor(T370* C,T0* a1);
T6 r370se_assigned_from(T0* a1);
void r370print_on(T370* C,T0* a1);
T0* r370clone(T0* a1);
void r370out_in_tagged_out_memory(T370* C);
void r370sort(T370* C);
T6 r370arrayed_has(T370* C,T2 a1);
T6 r370cursor_before(T0* a1);
void r370make(T370* C,T2 a1);
void r370convert(T370* C,T0* a1);
T6 r370cursor_after(T0* a1);
extern T0*oBC370sorter;
extern int fBC370sorter;
T0* r370sorter(void);
T6 r370conforms_to(T370* C,T0* a1);
T6 r370has(T370* C,T2 a1);
void r370resize(T370* C,T2 a1);
T0* r370twin(T370* C);
void r370force_last(T370* C,T2 a1);
T0* r370new_cursor(T370* C);
T6 r370cursor_off(T0* a1);
extern T0*oBC173Clean_attribute_name;
extern int fBC173Clean_attribute_name;
T0* r173Clean_attribute_name(void);
T0* r173Dir_attribute_name(void);
extern T0*oBC173System_attribute_name;
extern int fBC173System_attribute_name;
T0* r173System_attribute_name(void);
T0* r173Unless_attribute_name(void);
void r173element_make(T173* C,T0* a1,T0* a2);
T0* r173If_attribute_name(void);
extern T0*oBC173Ace_attribute_name;
extern int fBC173Ace_attribute_name;
T0* r173Ace_attribute_name(void);
T0* r173file_system(void);
T6 r173se_assigned_from(T0* a1);
void r173print_on(T173* C,T0* a1);
void r173out_in_tagged_out_memory(T173* C);
T6 r173uc_boolean_value(T173* C,T0* a1);
void r173make(T173* C,T0* a1,T0* a2);
T0* r173True_attribute_value(void);
extern T0*oBC173Finalize_attribute_name;
extern int fBC173Finalize_attribute_name;
T0* r173Finalize_attribute_name(void);
T0* r173uc_attribute_value(T173* C,T0* a1);
void r173task_make(T173* C,T0* a1,T0* a2);
T6 r173conforms_to(T173* C,T0* a1);
void r173print(T0* a1);
void r173execute(T173* C);
T0* r173uc_attribute_value_or_default(T173* C,T0* a1,T0* a2);
T6 r173is_enabled(T173* C);
T0* r173False_attribute_value(void);
T0* r173attribute_value_or_default(T173* C,T0* a1,T0* a2);
T0* r173twin(T173* C);
extern T0*oBC173Fish_attribute_name;
extern int fBC173Fish_attribute_name;
T0* r173Fish_attribute_name(void);
T0* r173new_unicode_string(T0* a1);
T0* r180item_mapped_filename(T180* C);
void r180set_include_wc_string(T180* C,T0* a1);
T0* r180file_system(void);
T6 r180se_assigned_from(T0* a1);
void r180print_on(T180* C,T0* a1);
T0* r180clone(T0* a1);
void r180out_in_tagged_out_memory(T180* C);
void r180scan_internal(T180* C,T0* a1);
void r180make(T180* C,T0* a1);
void r180update_project_variables(T180* C);
void r180forth(T180* C);
T6 r180conforms_to(T180* C,T0* a1);
void r180set_exclude_wc_string(T180* C,T0* a1);
void r180start(T180* C);
void r180execute(T180* C);
T6 r180is_file_outofdate(T0* a1,T0* a2);
T0* r180twin(T180* C);
void r180add_fileset_entry_if_necessary(T180* C,T0* a1);
T0* r180item_filename(T180* C);
T6 r180is_executable(T180* C);
extern int fBC180set_convert_to_filesystem;
void r180set_convert_to_filesystem(T180* C,T6 a1);
T0* r526Dir_attribute_name(void);
T0* r526Unless_attribute_name(void);
void r526element_make(T526* C,T0* a1,T0* a2);
T0* r526attribute_value(T526* C,T0* a1);
T0* r526If_attribute_name(void);
T0* r526file_system(void);
T6 r526se_assigned_from(T0* a1);
void r526print_on(T526* C,T0* a1);
void r526out_in_tagged_out_memory(T526* C);
void r526make(T526* C,T0* a1,T0* a2);
void r526task_make(T526* C,T0* a1,T0* a2);
T6 r526conforms_to(T526* C,T0* a1);
void r526execute(T526* C);
T6 r526is_enabled(T526* C);
T0* r526twin(T526* C);
extern T0*oBC526Directory_attribute_name;
extern int fBC526Directory_attribute_name;
T0* r526Directory_attribute_name(void);
T0* r526new_unicode_string(T0* a1);
void r305copy(T305* C,T0* a1);
T6 r305se_assigned_from(T0* a1);
void r305print_on(T305* C,T0* a1);
T0* r305clone(T0* a1);
void r305out_in_tagged_out_memory(T305* C);
T0* r305_ix_12443124(T305* C);
void r305make_symbol(T305* C,T2 a1,T6 a2);
T0* r305_px_38(T305* C,T0* a1);
T6 r305conforms_to(T305* C,T0* a1);
T0* r305_px_124(T305* C,T0* a1);
T0* r305_ix_12442124(T305* C);
T0* r305twin(T305* C);
void r305make_epsilon(T305* C,T6 a1);
T0* r305_ix_12463124(T305* C);
void r305make_symbol_class(T305* C,T0* a1,T6 a2);
T6 r304se_assigned_from(T0* a1);
void r304print_on(T304* C,T0* a1);
void r304out_in_tagged_out_memory(T304* C);
T6 r304conforms_to(T304* C,T0* a1);
T0* r304twin(T304* C);
T6 r619se_assigned_from(T0* a1);
void r619print_on(T619* C,T0* a1);
void r619out_in_tagged_out_memory(T619* C);
T0* r619Arguments(void);
void r619make(T619* C,T0* a1);
T0* r619message(T619* C,T0* a1);
T6 r619conforms_to(T619* C,T0* a1);
T0* r619twin(T619* C);
T0* r619default_message(T619* C);
T0* r530Dir_attribute_name(void);
extern T0*oBC530Force_attribute_name;
extern int fBC530Force_attribute_name;
T0* r530Force_attribute_name(void);
T0* r530Unless_attribute_name(void);
void r530element_make(T530* C,T0* a1,T0* a2);
T0* r530attribute_value(T530* C,T0* a1);
T0* r530If_attribute_name(void);
T0* r530file_system(void);
T6 r530se_assigned_from(T0* a1);
void r530print_on(T530* C,T0* a1);
void r530out_in_tagged_out_memory(T530* C);
T6 r530uc_boolean_value(T530* C,T0* a1);
void r530make(T530* C,T0* a1,T0* a2);
T0* r530True_attribute_value(void);
extern T0*oBC530To_directory_attribute_name;
extern int fBC530To_directory_attribute_name;
T0* r530To_directory_attribute_name(void);
T0* r530uc_attribute_value(T530* C,T0* a1);
void r530task_make(T530* C,T0* a1,T0* a2);
extern T0*oBC530To_file_attribute_name;
extern int fBC530To_file_attribute_name;
T0* r530To_file_attribute_name(void);
T6 r530conforms_to(T530* C,T0* a1);
void r530print(T0* a1);
void r530execute(T530* C);
extern T0*oBC530Fileset_element_name;
extern int fBC530Fileset_element_name;
T0* r530Fileset_element_name(void);
T6 r530is_enabled(T530* C);
T0* r530False_attribute_value(void);
T0* r530twin(T530* C);
extern T0*oBC530File_attribute_name;
extern int fBC530File_attribute_name;
T0* r530File_attribute_name(void);
T0* r530new_unicode_string(T0* a1);
T0* r146pathname_from_file_system(T146* C,T0* a1,T0* a2);
T6 r146is_absolute_pathname(T0* a1);
T0* r146current_working_directory(T146* C);
void r146cd(T146* C,T0* a1);
T6 r146file_exists(T0* a1);
T6 r146directory_exists(T0* a1);
void r146recursive_delete_directory(T0* a1);
T0* r146absolute_pathname(T146* C,T0* a1);
T0* r146current_drive(T146* C);
T6 r146se_assigned_from(T0* a1);
T6 r146is_directory_readable(T0* a1);
void r146print_on(T146* C,T0* a1);
T0* r146clone(T0* a1);
T0* r146dirname(T0* a1);
void r146delete_file(T0* a1);
void r146out_in_tagged_out_memory(T146* C);
void r146set_current_working_directory(T146* C,T0* a1);
T0* r146cwd(T146* C);
T6 r146same_type(T146* C,T0* a1);
T6 r146is_file_readable(T0* a1);
void r146recursive_create_directory(T0* a1);
T0* r146tmp_file(void);
T6 r146conforms_to(T146* C,T0* a1);
void r146copy_file(T0* a1,T0* a2);
T0* r146string_to_pathname(T0* a1);
void r146rename_file(T0* a1,T0* a2);
T2 r146file_time_stamp(T0* a1);
extern T0*oBC146root_directory;
T6 r146is_relative_pathname(T0* a1);
T6 r146is_root_directory(T0* a1);
T6 r146same_physical_file(T0* a1,T0* a2);
T0* r146pathname_to_string(T0* a1);
T0* r146twin(T146* C);
T0* r146canonical_pathname(T0* a1);
T0* r146pathname(T0* a1,T0* a2);
T0* r146tmp_directory(void);
T6 r638is_closed(T638* C);
void r638old_close(T638* C);
T2 r638read_to_string(T638* C,T0* a1,T2 a2,T2 a3);
void r638open_read(T638* C);
T6 r638se_assigned_from(T0* a1);
void r638print_on(T638* C,T0* a1);
void r638old_read_character(T638* C);
T6 r638old_end_of_file(T638* C);
void r638out_in_tagged_out_memory(T638* C);
void r638read_character(T638* C);
void r638close(T638* C);
void r638make(T638* C,T0* a1);
T6 r638conforms_to(T638* C,T0* a1);
void r638connect_to(T638* C,T0* a1);
void r638read_string(T638* C,T2 a1);
T0* r638twin(T638* C);
void r638old_open_read(T638* C);
T6 r198se_assigned_from(T0* a1);
void r198print_on(T198* C,T0* a1);
void r198out_in_tagged_out_memory(T198* C);
void r198make(T198* C);
T6 r198conforms_to(T198* C,T0* a1);
T0* r198twin(T198* C);
void r198create_equiv_classes(T198* C);
T0* r522Dir_attribute_name(void);
extern T0*oBC522Start_target_attribute_name;
extern int fBC522Start_target_attribute_name;
T0* r522Start_target_attribute_name(void);
T0* r522Unless_attribute_name(void);
extern T0*oBC522Reuse_variables_attribute_name;
extern int fBC522Reuse_variables_attribute_name;
T0* r522Reuse_variables_attribute_name(void);
void r522element_make(T522* C,T0* a1,T0* a2);
T0* r522attribute_value(T522* C,T0* a1);
T0* r522If_attribute_name(void);
T0* r522file_system(void);
T6 r522se_assigned_from(T0* a1);
void r522print_on(T522* C,T0* a1);
void r522out_in_tagged_out_memory(T522* C);
T6 r522uc_boolean_value(T522* C,T0* a1);
void r522make(T522* C,T0* a1,T0* a2);
T0* r522True_attribute_value(void);
T0* r522uc_attribute_value(T522* C,T0* a1);
void r522task_make(T522* C,T0* a1,T0* a2);
T6 r522conforms_to(T522* C,T0* a1);
void r522print(T0* a1);
extern T0*oBC522Filename_attribute_name;
extern int fBC522Filename_attribute_name;
T0* r522Filename_attribute_name(void);
void r522execute(T522* C);
T6 r522is_enabled(T522* C);
T0* r522False_attribute_value(void);
T0* r522twin(T522* C);
T0* r522new_unicode_string(T0* a1);
void r516_167Pmake(T516* C,T0* a1);
T0* r516file_system(void);
T6 r516se_assigned_from(T0* a1);
void r516print_on(T516* C,T0* a1);
T0* r516clone(T0* a1);
void r516out_in_tagged_out_memory(T516* C);
void r516make(T516* C,T0* a1);
T6 r516conforms_to(T516* C,T0* a1);
void r516execute(T516* C);
T0* r516twin(T516* C);
void r516execute_shell(T516* C,T0* a1);
T6 r516is_executable(T516* C);
void r518_167Pmake(T518* C,T0* a1);
T0* r518file_system(void);
T6 r518se_assigned_from(T0* a1);
void r518print_on(T518* C,T0* a1);
T0* r518clone(T0* a1);
void r518out_in_tagged_out_memory(T518* C);
void r518create_directory(T518* C,T0* a1);
T6 r518is_file_executable(T518* C);
void r518make(T518* C,T0* a1);
T6 r518conforms_to(T518* C,T0* a1);
void r518execute(T518* C);
T6 r518is_file_outofdate(T0* a1,T0* a2);
T0* r518twin(T518* C);
void r518execute_shell(T518* C,T0* a1);
T6 r518is_executable(T518* C);
T6 r518is_fileset_executable(T518* C);
T6 r457se_assigned_from(T0* a1);
void r457print_on(T457* C,T0* a1);
void r457out_in_tagged_out_memory(T457* C);
T6 r457conforms_to(T457* C,T0* a1);
void r457put_line(T0* a1);
T0* r457twin(T457* C);
T0* r177Dir_attribute_name(void);
T0* r177Unless_attribute_name(void);
void r177element_make(T177* C,T0* a1,T0* a2);
T0* r177attribute_value(T177* C,T0* a1);
T0* r177If_attribute_name(void);
T0* r177file_system(void);
T6 r177se_assigned_from(T0* a1);
void r177print_on(T177* C,T0* a1);
void r177out_in_tagged_out_memory(T177* C);
void r177make(T177* C,T0* a1,T0* a2);
void r177task_make(T177* C,T0* a1,T0* a2);
T6 r177conforms_to(T177* C,T0* a1);
extern T0*oBC177Executable_attribute_name;
extern int fBC177Executable_attribute_name;
T0* r177Executable_attribute_name(void);
void r177execute(T177* C);
extern T0*oBC177Fileset_element_name;
extern int fBC177Fileset_element_name;
T0* r177Fileset_element_name(void);
T6 r177is_enabled(T177* C);
T0* r177twin(T177* C);
T0* r177new_unicode_string(T0* a1);
T6 r384se_assigned_from(T0* a1);
void r384print_on(T384* C,T0* a1);
void r384out_in_tagged_out_memory(T384* C);
T0* r384Arguments(void);
void r384make(T384* C);
T0* r384message(T384* C,T0* a1);
T6 r384conforms_to(T384* C,T0* a1);
T0* r384twin(T384* C);
T0* r384default_message(T384* C);
T6 r531is_fileset_to_directory_executable(T531* C);
T0* r531file_system(void);
T6 r531se_assigned_from(T0* a1);
void r531print_on(T531* C,T0* a1);
void r531out_in_tagged_out_memory(T531* C);
void r531create_directory(T531* C,T0* a1);
void r531create_directory_for_pathname(T531* C,T0* a1);
T6 r531conforms_to(T531* C,T0* a1);
void r531copy_file(T531* C,T0* a1,T0* a2);
void r531execute(T531* C);
T6 r531is_file_outofdate(T0* a1,T0* a2);
T0* r531twin(T531* C);
T6 r531is_file_to_directory_executable(T531* C);
T6 r531is_file_to_file_executable(T531* C);
T6 r531is_executable(T531* C);
T0* r558Dir_attribute_name(void);
extern T0*oBC558Variable_attribute_name;
extern int fBC558Variable_attribute_name;
T0* r558Variable_attribute_name(void);
T0* r558Unless_attribute_name(void);
void r558element_make(T558* C,T0* a1,T0* a2);
T0* r558If_attribute_name(void);
T0* r558file_system(void);
T6 r558se_assigned_from(T0* a1);
void r558print_on(T558* C,T0* a1);
void r558out_in_tagged_out_memory(T558* C);
extern T0*oBC558True_value_attribute_name;
extern int fBC558True_value_attribute_name;
T0* r558True_value_attribute_name(void);
void r558make(T558* C,T0* a1,T0* a2);
extern T0*oBC558False_value_attribute_name;
extern int fBC558False_value_attribute_name;
T0* r558False_value_attribute_name(void);
T0* r558uc_attribute_value(T558* C,T0* a1);
void r558task_make(T558* C,T0* a1,T0* a2);
T6 r558conforms_to(T558* C,T0* a1);
void r558execute(T558* C);
extern T0*oBC558Fileset_element_name;
extern int fBC558Fileset_element_name;
T0* r558Fileset_element_name(void);
T6 r558is_enabled(T558* C);
extern T0*oBC558Source_attribute_name;
extern int fBC558Source_attribute_name;
T0* r558Source_attribute_name(void);
T0* r558twin(T558* C);
T0* r558new_unicode_string(T0* a1);
extern T0*oBC558Target_attribute_name;
extern int fBC558Target_attribute_name;
T0* r558Target_attribute_name(void);
T6 r307se_assigned_from(T0* a1);
void r307print_on(T307* C,T0* a1);
void r307out_in_tagged_out_memory(T307* C);
void r307make(T307* C,T0* a1,T2 a2,T6 a3);
T6 r307conforms_to(T307* C,T0* a1);
T0* r307twin(T307* C);
void r593disconnect(T593* C);
T6 r593se_assigned_from(T0* a1);
void r593print_on(T593* C,T0* a1);
void r593out_in_tagged_out_memory(T593* C);
T6 r593conforms_to(T593* C,T0* a1);
void r593connect_to(T593* C,T0* a1);
T0* r593twin(T593* C);
T6 r633is_closed(T633* C);
void r633old_close(T633* C);
T6 r633se_assigned_from(T0* a1);
void r633print_on(T633* C,T0* a1);
void r633out_in_tagged_out_memory(T633* C);
void r633old_open_write(T633* C);
void r633close(T633* C);
void r633make(T633* C,T0* a1);
void r633old_put_string(T633* C,T0* a1);
T6 r633conforms_to(T633* C,T0* a1);
T0* r633twin(T633* C);
void r633open_write(T633* C);
T0* r520Dir_attribute_name(void);
T0* r520Unless_attribute_name(void);
void r520element_make(T520* C,T0* a1,T0* a2);
T0* r520If_attribute_name(void);
T0* r520file_system(void);
T6 r520se_assigned_from(T0* a1);
void r520print_on(T520* C,T0* a1);
extern T0*oBC520Define_element_name;
extern int fBC520Define_element_name;
T0* r520Define_element_name(void);
extern T0*oBC520Config_filename_attribute_name;
extern int fBC520Config_filename_attribute_name;
T0* r520Config_filename_attribute_name(void);
extern T0*oBC520Compile_attribute_name;
extern int fBC520Compile_attribute_name;
T0* r520Compile_attribute_name(void);
void r520out_in_tagged_out_memory(T520* C);
void r520make(T520* C,T0* a1,T0* a2);
T0* r520uc_attribute_value(T520* C,T0* a1);
void r520task_make(T520* C,T0* a1,T0* a2);
T6 r520conforms_to(T520* C,T0* a1);
void r520execute(T520* C);
T6 r520is_enabled(T520* C);
T0* r520twin(T520* C);
T0* r520new_unicode_string(T0* a1);
void r212make_default(T212* C,T2 a1);
T6 r212se_assigned_from(T0* a1);
void r212print_on(T212* C,T0* a1);
void r212out_in_tagged_out_memory(T212* C);
T6 r212conforms_to(T212* C,T0* a1);
T6 r212_px_60(T212* C,T0* a1);
extern T0*oBC212Dummy_pattern;
extern int fBC212Dummy_pattern;
T0* r212Dummy_pattern(void);
extern T0*oBC212Dummy_action;
extern int fBC212Dummy_action;
T0* r212Dummy_action(void);
T0* r212twin(T212* C);
T0* r532Dir_attribute_name(void);
T0* r532Unless_attribute_name(void);
void r532element_make(T532* C,T0* a1,T0* a2);
T0* r532attribute_value(T532* C,T0* a1);
T0* r532If_attribute_name(void);
T0* r532file_system(void);
T6 r532se_assigned_from(T0* a1);
void r532print_on(T532* C,T0* a1);
void r532out_in_tagged_out_memory(T532* C);
void r532make(T532* C,T0* a1,T0* a2);
extern T0*oBC532To_directory_attribute_name;
extern int fBC532To_directory_attribute_name;
T0* r532To_directory_attribute_name(void);
void r532task_make(T532* C,T0* a1,T0* a2);
extern T0*oBC532To_file_attribute_name;
extern int fBC532To_file_attribute_name;
T0* r532To_file_attribute_name(void);
T6 r532conforms_to(T532* C,T0* a1);
void r532execute(T532* C);
T6 r532is_enabled(T532* C);
T0* r532twin(T532* C);
extern T0*oBC532File_attribute_name;
extern int fBC532File_attribute_name;
T0* r532File_attribute_name(void);
T0* r532new_unicode_string(T0* a1);
T6 r602is_closed(T602* C);
T6 r602old_end_of_input(T602* C);
void r602open_read(T602* C);
T0* r602file_system(void);
T6 r602se_assigned_from(T0* a1);
void r602print_on(T602* C,T0* a1);
T0* r602clone(T0* a1);
void r602out_in_tagged_out_memory(T602* C);
void r602create_directory(T602* C);
T6 r602is_open_read(T602* C);
void r602close(T602* C);
T6 r602exists(T602* C);
void r602recursive_create_directory(T602* C);
void r602read_entry(T602* C);
T6 r602conforms_to(T602* C,T0* a1);
void r602delete(T602* C);
T0* r602twin(T602* C);
void r602recursive_delete(T602* C);
T6 r602is_readable(T602* C);
T2 r674new_capacity(T2 a1);
void r674copy(T674* C,T0* a1);
T6 r674extendible(T674* C,T2 a1);
void r674remove_traversing_cursor(T674* C,T0* a1);
void r674move_all_cursors_after(T674* C);
void r674add_traversing_cursor(T674* C,T0* a1);
T6 r674se_assigned_from(T0* a1);
void r674print_on(T674* C,T0* a1);
T0* r674clone(T0* a1);
void r674out_in_tagged_out_memory(T674* C);
T6 r674cursor_before(T0* a1);
void r674ds_arrayed_list_make(T674* C,T2 a1);
T6 r674cursor_after(T0* a1);
T6 r674conforms_to(T674* C,T0* a1);
void r674resize(T674* C,T2 a1);
void r674make_from_bilinear(T674* C,T0* a1);
T0* r674twin(T674* C);
void r674force_last(T674* C,T0* a1);
T0* r674new_cursor(T674* C);
void r674put_last(T674* C,T0* a1);
T6 r674cursor_off(T0* a1);
T0* r534Dir_attribute_name(void);
T0* r534Unless_attribute_name(void);
void r534element_make(T534* C,T0* a1,T0* a2);
T0* r534If_attribute_name(void);
T0* r534file_system(void);
T6 r534se_assigned_from(T0* a1);
void r534print_on(T534* C,T0* a1);
void r534out_in_tagged_out_memory(T534* C);
void r534make(T534* C,T0* a1,T0* a2);
T0* r534uc_attribute_value(T534* C,T0* a1);
void r534task_make(T534* C,T0* a1,T0* a2);
extern T0*oBC534Value_attribute_name;
extern int fBC534Value_attribute_name;
T0* r534Value_attribute_name(void);
T6 r534conforms_to(T534* C,T0* a1);
void r534execute(T534* C);
extern T0*oBC534Name_attribute_name;
extern int fBC534Name_attribute_name;
T0* r534Name_attribute_name(void);
T6 r534is_enabled(T534* C);
T0* r534twin(T534* C);
T0* r534new_unicode_string(T0* a1);
T6 r174is_cleanable(T174* C);
T0* r174file_system(void);
T6 r174se_assigned_from(T0* a1);
void r174print_on(T174* C,T0* a1);
T0* r174clone(T0* a1);
void r174out_in_tagged_out_memory(T174* C);
void r174execute_clean(T174* C);
void r174execute_compile(T174* C);
T6 r174conforms_to(T174* C,T0* a1);
T6 r174is_compilable(T174* C);
void r174execute(T174* C);
T0* r174twin(T174* C);
void r174execute_shell(T174* C,T0* a1);
T6 r174is_executable(T174* C);
extern T0*oBC171Clean_attribute_name;
extern int fBC171Clean_attribute_name;
T0* r171Clean_attribute_name(void);
T0* r171Dir_attribute_name(void);
extern T0*oBC171System_attribute_name;
extern int fBC171System_attribute_name;
T0* r171System_attribute_name(void);
extern T0*oBC171Finish_freezing_attribute_name;
extern int fBC171Finish_freezing_attribute_name;
T0* r171Finish_freezing_attribute_name(void);
T0* r171Unless_attribute_name(void);
void r171element_make(T171* C,T0* a1,T0* a2);
T0* r171If_attribute_name(void);
extern T0*oBC171Ace_attribute_name;
extern int fBC171Ace_attribute_name;
T0* r171Ace_attribute_name(void);
T0* r171file_system(void);
T6 r171se_assigned_from(T0* a1);
void r171print_on(T171* C,T0* a1);
void r171out_in_tagged_out_memory(T171* C);
T6 r171uc_boolean_value(T171* C,T0* a1);
void r171make(T171* C,T0* a1,T0* a2);
T0* r171True_attribute_value(void);
extern T0*oBC171Finalize_attribute_name;
extern int fBC171Finalize_attribute_name;
T0* r171Finalize_attribute_name(void);
T0* r171uc_attribute_value(T171* C,T0* a1);
void r171task_make(T171* C,T0* a1,T0* a2);
T6 r171conforms_to(T171* C,T0* a1);
void r171print(T0* a1);
void r171execute(T171* C);
T0* r171uc_attribute_value_or_default(T171* C,T0* a1,T0* a2);
T6 r171is_enabled(T171* C);
T0* r171False_attribute_value(void);
T0* r171attribute_value_or_default(T171* C,T0* a1,T0* a2);
T0* r171twin(T171* C);
T0* r171new_unicode_string(T0* a1);
void r362set_position(T362* C,T2 a1,T2 a2,T2 a3);
T6 r362se_assigned_from(T0* a1);
void r362print_on(T362* C,T0* a1);
void r362out_in_tagged_out_memory(T362* C);
void r362make(T362* C,T0* a1);
T6 r362conforms_to(T362* C,T0* a1);
void r362make_from_buffer(T362* C,T0* a1);
T0* r362twin(T362* C);
T6 r459is_equal(T459* C,T0* a1);
T0* r459file_system(void);
T6 r459se_assigned_from(T0* a1);
void r459print_on(T459* C,T0* a1);
T0* r459clone(T0* a1);
void r459out_in_tagged_out_memory(T459* C);
void r459make(T459* C,T0* a1,T0* a2);
T6 r459conforms_to(T459* C,T0* a1);
T0* r459mapped_filename_converted(T459* C);
T0* r459filename_converted(T459* C);
T0* r459twin(T459* C);
T6 r379se_assigned_from(T0* a1);
void r379print_on(T379* C,T0* a1);
void r379out_in_tagged_out_memory(T379* C);
T0* r379Arguments(void);
void r379make(T379* C,T0* a1,T2 a2,T0* a3);
T0* r379message(T379* C,T0* a1);
T6 r379conforms_to(T379* C,T0* a1);
T0* r379twin(T379* C);
T0* r379default_message(T379* C);
T6 r426se_assigned_from(T0* a1);
void r426print_on(T426* C,T0* a1);
void r426out_in_tagged_out_memory(T426* C);
T6 r426conforms_to(T426* C,T0* a1);
T0* r426twin(T426* C);
T0* r528Dir_attribute_name(void);
T0* r528Unless_attribute_name(void);
void r528element_make(T528* C,T0* a1,T0* a2);
T0* r528attribute_value(T528* C,T0* a1);
T0* r528If_attribute_name(void);
T0* r528file_system(void);
T6 r528se_assigned_from(T0* a1);
void r528print_on(T528* C,T0* a1);
void r528out_in_tagged_out_memory(T528* C);
void r528make(T528* C,T0* a1,T0* a2);
void r528task_make(T528* C,T0* a1,T0* a2);
T6 r528conforms_to(T528* C,T0* a1);
void r528execute(T528* C);
extern T0*oBC528Fileset_element_name;
extern int fBC528Fileset_element_name;
T0* r528Fileset_element_name(void);
T6 r528is_enabled(T528* C);
T0* r528twin(T528* C);
extern T0*oBC528File_attribute_name;
extern int fBC528File_attribute_name;
T0* r528File_attribute_name(void);
extern T0*oBC528Directory_attribute_name;
extern int fBC528Directory_attribute_name;
T0* r528Directory_attribute_name(void);
T0* r528new_unicode_string(T0* a1);
extern T0*oBC84utils;
T2 r84item_code(T84* C,T2 a1);
T6 r84se_assigned_from(T0* a1);
void r84print_on(T84* C,T0* a1);
void r84out_in_tagged_out_memory(T84* C);
void r84make(T84* C);
void r84insert(T84* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r84add_to_storage_count(T84* C,T2 a1);
void r84remove(T84* C,T2 a1,T2 a2);
void r84find_slice_position(T84* C,T2 a1,T2 a2);
void r84insert_code(T84* C,T2 a1,T2 a2);
T6 r84conforms_to(T84* C,T0* a1);
extern T6 oBC84optimize_access;
void r84storage_move(T84* C,T2 a1,T2 a2,T2 a3);
T0* r84twin(T84* C);
T2 r84storage_slice_count(T84* C);
void r84find_position(T84* C,T2 a1);
void r521_167Pmake(T521* C,T0* a1);
T0* r521file_system(void);
T6 r521se_assigned_from(T0* a1);
void r521print_on(T521* C,T0* a1);
T0* r521clone(T0* a1);
void r521out_in_tagged_out_memory(T521* C);
void r521make(T521* C,T0* a1);
T6 r521conforms_to(T521* C,T0* a1);
void r521execute(T521* C);
T0* r521twin(T521* C);
void r521execute_shell(T521* C,T0* a1);
T6 r521is_executable(T521* C);
T6 r382se_assigned_from(T0* a1);
void r382print_on(T382* C,T0* a1);
void r382out_in_tagged_out_memory(T382* C);
T0* r382Arguments(void);
void r382make(T382* C,T0* a1,T2 a2,T0* a3);
T0* r382message(T382* C,T0* a1);
T6 r382conforms_to(T382* C,T0* a1);
T0* r382twin(T382* C);
T0* r382default_message(T382* C);
void r533move_file(T533* C,T0* a1,T0* a2);
T6 r533is_fileset_to_directory_executable(T533* C);
T0* r533file_system(void);
T6 r533se_assigned_from(T0* a1);
void r533print_on(T533* C,T0* a1);
void r533out_in_tagged_out_memory(T533* C);
void r533create_directory(T533* C,T0* a1);
void r533create_directory_for_pathname(T533* C,T0* a1);
T6 r533conforms_to(T533* C,T0* a1);
void r533execute(T533* C);
T0* r533twin(T533* C);
T6 r533is_file_to_directory_executable(T533* C);
T6 r533is_file_to_file_executable(T533* C);
T6 r533is_executable(T533* C);
T0* r578default_target_name(T578* C);
T0* r578name(T578* C);
T6 r578has_name(T578* C);
T6 r578se_assigned_from(T0* a1);
void r578print_on(T578* C,T0* a1);
extern T0*oBC578Target_element_name;
extern int fBC578Target_element_name;
T0* r578Target_element_name(void);
void r578out_in_tagged_out_memory(T578* C);
extern T0*oBC55Description_element_name;
extern int fBC55Description_element_name;
T0* r578Description_element_name(void);
void r578make(T578* C,T0* a1,T0* a2);
extern T0*oBC578Default_attribute_name;
extern int fBC578Default_attribute_name;
T0* r578Default_attribute_name(void);
T0* r578xml_target_elements(T578* C);
T0* r578uc_attribute_value(T578* C,T0* a1);
T6 r578conforms_to(T578* C,T0* a1);
T0* r578description(T578* C);
T6 r578has_description(T578* C);
extern T0*oBC578Name_attribute_name;
extern int fBC578Name_attribute_name;
T0* r578Name_attribute_name(void);
T6 r578has_default_target_name(T578* C);
T6 r578has_parent(T578* C);
T0* r578twin(T578* C);
extern T0*oBC578Inherit_attribute_name;
extern int fBC578Inherit_attribute_name;
T0* r578Inherit_attribute_name(void);
T0* r578new_unicode_string(T0* a1);
T0* r578parent(T578* C);
T0* r83create_representation(T83* C);
T6 r83se_assigned_from(T0* a1);
void r83print_on(T83* C,T0* a1);
void r83out_in_tagged_out_memory(T83* C);
T6 r83conforms_to(T83* C,T0* a1);
T0* r83twin(T83* C);
T0* r492Dir_attribute_name(void);
T0* r492Unless_attribute_name(void);
void r492element_make(T492* C,T0* a1,T0* a2);
T0* r492If_attribute_name(void);
T0* r492file_system(void);
T6 r492se_assigned_from(T0* a1);
void r492print_on(T492* C,T0* a1);
void r492out_in_tagged_out_memory(T492* C);
void r492make(T492* C,T0* a1,T0* a2);
T0* r492uc_attribute_value(T492* C,T0* a1);
void r492task_make(T492* C,T0* a1,T0* a2);
extern T0*oBC492Value_attribute_name;
extern int fBC492Value_attribute_name;
T0* r492Value_attribute_name(void);
T6 r492conforms_to(T492* C,T0* a1);
void r492execute(T492* C);
extern T0*oBC492Name_attribute_name;
extern int fBC492Name_attribute_name;
T0* r492Name_attribute_name(void);
T6 r492is_enabled(T492* C);
T0* r492twin(T492* C);
T0* r492new_unicode_string(T0* a1);
T6 r210is_equal(T210* C,T0* a1);
extern T0*oBC210rule_sorter;
extern int fBC210rule_sorter;
T0* r210rule_sorter(void);
T6 r210se_assigned_from(T0* a1);
void r210print_on(T210* C,T0* a1);
extern T0*oBC210bubble_sorter;
extern int fBC210bubble_sorter;
T0* r210bubble_sorter(void);
void r210out_in_tagged_out_memory(T210* C);
T6 r210same_type(T210* C,T0* a1);
void r210make(T210* C,T0* a1,T2 a2,T2 a3);
void r210partition(T210* C,T0* a1);
T6 r210conforms_to(T210* C,T0* a1);
T6 r210is_accepting(T210* C);
T0* r210twin(T210* C);
T0* r210new_state(T210* C,T2 a1);
T0* r490Dir_attribute_name(void);
T0* r490Unless_attribute_name(void);
void r490element_make(T490* C,T0* a1,T0* a2);
T0* r490If_attribute_name(void);
T0* r490file_system(void);
T6 r490se_assigned_from(T0* a1);
void r490print_on(T490* C,T0* a1);
void r490out_in_tagged_out_memory(T490* C);
void r490make(T490* C,T0* a1,T0* a2);
T0* r490uc_attribute_value(T490* C,T0* a1);
void r490task_make(T490* C,T0* a1,T0* a2);
T6 r490conforms_to(T490* C,T0* a1);
extern T0*oBC490Executable_attribute_name;
extern int fBC490Executable_attribute_name;
T0* r490Executable_attribute_name(void);
void r490execute(T490* C);
T6 r490is_enabled(T490* C);
extern T0*oBC490Source_filename_attribute_name;
extern int fBC490Source_filename_attribute_name;
T0* r490Source_filename_attribute_name(void);
T0* r490twin(T490* C);
T0* r490new_unicode_string(T0* a1);
void r28calculate_depend_order(T28* C,T0* a1);
void r28build(T28* C);
void r28trace(T28* C,T0* a1);
extern T0*oBC28Parser_factory;
extern int fBC28Parser_factory;
T0* r28Parser_factory(void);
void r28build_target(T28* C,T0* a1);
T0* r28file_system(void);
T6 r28se_assigned_from(T0* a1);
void r28print_on(T28* C,T0* a1);
T0* r28clone(T0* a1);
void r28load(T28* C,T0* a1);
void r28out_in_tagged_out_memory(T28* C);
extern T0*oBC17Exceptions;
void r28log(T0* a1);
T0* r28target_with_name(T28* C,T0* a1);
T6 r28conforms_to(T28* C,T0* a1);
void r28print(T0* a1);
void r28make_with_filename(T28* C,T0* a1,T0* a2,T0* a3);
void r28trace_debug(T28* C,T0* a1);
void r28execute_target(T28* C,T0* a1,T6 a2);
void r28reset(T28* C);
void r28exit_application(T2 a1,T0* a2);
T0* r28twin(T28* C);
extern T0*oBC28Default_build_filename;
extern int fBC28Default_build_filename;
T0* r28Default_build_filename(void);
T0* r28new_unicode_string(T0* a1);
T0* r25out(T25* C);
void r25copy(T25* C,T0* a1);
T0* r25substring(T25* C,T2 a1,T2 a2);
T2 r25count(T25* C);
T2 r25item_code(T25* C,T2 a1);
void r25remove_between(T25* C,T2 a1,T2 a2);
T6 r25is_equal(T25* C,T0* a1);
T69 r25item(T25* C,T2 a1);
void r25append_uc_string(T25* C,T0* a1);
T6 r25se_assigned_from(T0* a1);
void r25print_on(T25* C,T0* a1);
void r25make_from_string(T25* C,T0* a1);
T2 r25index_of(T25* C,T69 a1,T2 a2);
void r25out_in_tagged_out_memory(T25* C);
void r25make(T25* C,T2 a1);
void r25append_string(T25* C,T0* a1);
void r25head(T25* C,T2 a1);
T6 r25conforms_to(T25* C,T0* a1);
void r25append_ucc_code(T25* C,T2 a1);
T6 r25empty(T25* C);
T0* r25twin(T25* C);
T2 r25three_way_comparison(T25* C,T0* a1);
extern T0*oBC25i_settings;
void r25tail(T25* C,T2 a1);
void r227build(T227* C);
void r227put(T227* C,T2 a1);
T2 r227upper(T227* C);
T2 r227lower(T227* C);
T6 r227se_assigned_from(T0* a1);
void r227print_on(T227* C,T0* a1);
void r227out_in_tagged_out_memory(T227* C);
T0* r227to_array(T227* C,T2 a1,T2 a2);
void r227make(T227* C,T2 a1,T2 a2);
T6 r227conforms_to(T227* C,T0* a1);
T2 r227equivalence_class(T227* C,T2 a1);
void r227add(T227* C,T0* a1);
T6 r227is_representative(T227* C,T2 a1);
T0* r227twin(T227* C);
void r227initialize(T227* C);
T6 r529is_directory_executable(T529* C);
T0* r529file_system(void);
T6 r529se_assigned_from(T0* a1);
void r529print_on(T529* C,T0* a1);
void r529out_in_tagged_out_memory(T529* C);
T6 r529is_file_executable(T529* C);
T6 r529conforms_to(T529* C,T0* a1);
void r529execute(T529* C);
T0* r529twin(T529* C);
T6 r529is_executable(T529* C);
T0* r517Dir_attribute_name(void);
extern T0*oBC517Output_filename_attribute_name;
extern int fBC517Output_filename_attribute_name;
T0* r517Output_filename_attribute_name(void);
extern T0*oBC517Force_attribute_name;
extern int fBC517Force_attribute_name;
T0* r517Force_attribute_name(void);
T0* r517Unless_attribute_name(void);
void r517element_make(T517* C,T0* a1,T0* a2);
T0* r517attribute_value(T517* C,T0* a1);
T0* r517If_attribute_name(void);
T0* r517file_system(void);
T6 r517se_assigned_from(T0* a1);
void r517print_on(T517* C,T0* a1);
extern T0*oBC517Define_element_name;
extern int fBC517Define_element_name;
T0* r517Define_element_name(void);
extern T0*oBC517Lines_attribute_name;
extern int fBC517Lines_attribute_name;
T0* r517Lines_attribute_name(void);
void r517out_in_tagged_out_memory(T517* C);
T6 r517uc_boolean_value(T517* C,T0* a1);
void r517make(T517* C,T0* a1,T0* a2);
T0* r517True_attribute_value(void);
extern T0*oBC517To_directory_attribute_name;
extern int fBC517To_directory_attribute_name;
T0* r517To_directory_attribute_name(void);
T0* r517uc_attribute_value(T517* C,T0* a1);
void r517task_make(T517* C,T0* a1,T0* a2);
T6 r517conforms_to(T517* C,T0* a1);
void r517print(T0* a1);
void r517execute(T517* C);
extern T0*oBC517Fileset_element_name;
extern int fBC517Fileset_element_name;
T0* r517Fileset_element_name(void);
T6 r517is_enabled(T517* C);
T0* r517False_attribute_value(void);
T0* r517twin(T517* C);
T0* r517new_unicode_string(T0* a1);
extern T0*oBC517Input_filename_attribute_name;
extern int fBC517Input_filename_attribute_name;
T0* r517Input_filename_attribute_name(void);
T0* r559file_system(void);
T6 r559se_assigned_from(T0* a1);
void r559print_on(T559* C,T0* a1);
void r559out_in_tagged_out_memory(T559* C);
T6 r559is_file_executable(T559* C);
T6 r559conforms_to(T559* C,T0* a1);
void r559execute(T559* C);
T6 r559is_file_outofdate(T0* a1,T0* a2);
T0* r559twin(T559* C);
T6 r559is_executable(T559* C);
T6 r559is_fileset_executable(T559* C);
T6 r493se_assigned_from(T0* a1);
void r493print_on(T493* C,T0* a1);
void r493out_in_tagged_out_memory(T493* C);
T6 r493conforms_to(T493* C,T0* a1);
void r493execute(T493* C);
T0* r493twin(T493* C);
T6 r493is_executable(T493* C);
T6 r669se_assigned_from(T0* a1);
void r669print_on(T669* C,T0* a1);
void r669out_in_tagged_out_memory(T669* C);
T6 r669conforms_to(T669* C,T0* a1);
T0* r669twin(T669* C);
void r361fill(T361* C);
void r361compact_left(T361* C);
void r361set_position(T361* C,T2 a1,T2 a2,T2 a3);
T6 r361se_assigned_from(T0* a1);
void r361print_on(T361* C,T0* a1);
void r361make_from_string(T361* C,T0* a1);
void r361out_in_tagged_out_memory(T361* C);
T6 r361conforms_to(T361* C,T0* a1);
void r361make_from_buffer(T361* C,T0* a1);
void r361resize(T361* C);
void r361make_with_size(T361* C,T0* a1,T2 a2);
T0* r361twin(T361* C);
void r361set_file(T361* C,T0* a1);
void r361flush(T361* C);
T0* r90current_working_directory(T90* C);
T6 r90se_assigned_from(T0* a1);
void r90print_on(T90* C,T0* a1);
T0* r90clone(T0* a1);
T6 r90is_windows(T90* C);
void r90out_in_tagged_out_memory(T90* C);
void r90make(T90* C);
void r90old_put_string(T0* a1);
T6 r90conforms_to(T90* C,T0* a1);
T6 r90is_unix(T90* C);
void r90put_line(T0* a1);
T0* r90twin(T90* C);
T6 r170is_cleanable(T170* C);
T0* r170file_system(void);
T6 r170se_assigned_from(T0* a1);
void r170print_on(T170* C,T0* a1);
T0* r170clone(T0* a1);
void r170out_in_tagged_out_memory(T170* C);
T0* r170new_ace_cmdline(T170* C);
T6 r170is_traditional_configuration(T170* C);
T6 r170conforms_to(T170* C,T0* a1);
void r170execute(T170* C);
T0* r170twin(T170* C);
T0* r170new_clean_cmdline(T170* C);
T0* r170new_traditional_cmdline(T170* C);
void r170execute_shell(T170* C,T0* a1);
T6 r170is_executable(T170* C);
T6 r170is_ace_configuration(T170* C);
T6 r381se_assigned_from(T0* a1);
void r381print_on(T381* C,T0* a1);
void r381out_in_tagged_out_memory(T381* C);
T0* r381Arguments(void);
void r381make(T381* C,T0* a1,T2 a2);
T0* r381message(T381* C,T0* a1);
T6 r381conforms_to(T381* C,T0* a1);
T0* r381twin(T381* C);
T0* r381default_message(T381* C);
T0* r368current_working_directory(T368* C);
T6 r368se_assigned_from(T0* a1);
void r368print_on(T368* C,T0* a1);
T0* r368clone(T0* a1);
T6 r368is_windows(T368* C);
void r368out_in_tagged_out_memory(T368* C);
void r368make(T368* C);
void r368old_put_string(T0* a1);
T6 r368conforms_to(T368* C,T0* a1);
T6 r368is_unix(T368* C);
void r368put_line(T0* a1);
T0* r368twin(T368* C);
T6 r176is_cleanable(T176* C);
T0* r176file_system(void);
T6 r176se_assigned_from(T0* a1);
void r176print_on(T176* C,T0* a1);
T0* r176clone(T0* a1);
void r176out_in_tagged_out_memory(T176* C);
void r176execute_clean(T176* C);
T6 r176conforms_to(T176* C,T0* a1);
void r176execute_tuner(T176* C);
T6 r176is_compilable(T176* C);
void r176execute(T176* C);
T6 r176is_tunable(T176* C);
T0* r176twin(T176* C);
void r176execute_shell(T176* C,T0* a1);
T6 r176is_executable(T176* C);
extern T0*oBC54Echo_task_name;
extern int fBC54Echo_task_name;
T0* r53Echo_task_name(void);
T0* r53Dir_attribute_name(void);
extern T0*oBC54Outofdate_task_name;
extern int fBC54Outofdate_task_name;
T0* r53Outofdate_task_name(void);
extern T0*oBC54Delete_task_name;
extern int fBC54Delete_task_name;
T0* r53Delete_task_name(void);
T0* r53dependencies(T53* C);
extern T0*oBC54Set_task_name;
extern int fBC54Set_task_name;
T0* r53Set_task_name(void);
extern T0*oBC54Ise_task_name;
extern int fBC54Ise_task_name;
T0* r53Ise_task_name(void);
extern T0*oBC54Exec_task_name;
extern int fBC54Exec_task_name;
T0* r53Exec_task_name(void);
T0* r53Unless_attribute_name(void);
T0* r53dependent_targets(T53* C);
T0* r53If_attribute_name(void);
extern T0*oBC54Mkdir_task_name;
extern int fBC54Mkdir_task_name;
T0* r53Mkdir_task_name(void);
T0* r53file_system(void);
extern T0*oBC54Setenv_task_name;
extern int fBC54Setenv_task_name;
T0* r53Setenv_task_name(void);
T6 r53has_dependencies(T53* C);
T6 r53se_assigned_from(T0* a1);
void r53print_on(T53* C,T0* a1);
extern T0*oBC53Depend_attribute_name;
extern int fBC53Depend_attribute_name;
T0* r53Depend_attribute_name(void);
extern T0*oBC54Geant_task_name;
extern int fBC54Geant_task_name;
T0* r53Geant_task_name(void);
void r53out_in_tagged_out_memory(T53* C);
T0* r53Description_element_name(void);
T69 r53new_unicode_character(T3 a1);
extern T0*oBC54Hact_task_name;
extern int fBC54Hact_task_name;
T0* r53Hact_task_name(void);
void r53make(T53* C,T0* a1,T0* a2);
extern T0*oBC54Gexace_task_name;
extern int fBC54Gexace_task_name;
T0* r53Gexace_task_name(void);
extern T0*oBC54Gelex_task_name;
extern int fBC54Gelex_task_name;
T0* r53Gelex_task_name(void);
extern T0*oBC54Unset_task_name;
extern int fBC54Unset_task_name;
T0* r53Unset_task_name(void);
extern T0*oBC54Se_task_name;
extern int fBC54Se_task_name;
T0* r53Se_task_name(void);
T6 r53conforms_to(T53* C,T0* a1);
void r53print(T0* a1);
T0* r53string_tokens(T0* a1,T3 a2);
extern T0*oBC54Getest_task_name;
extern int fBC54Getest_task_name;
T0* r53Getest_task_name(void);
T6 r53has_description(T53* C);
void r53show_dependent_targets(T0* a1);
extern T0*oBC54Copy_task_name;
extern int fBC54Copy_task_name;
T0* r53Copy_task_name(void);
void r53execute(T53* C);
extern T0*oBC53Name_attribute_name;
extern int fBC53Name_attribute_name;
T0* r53Name_attribute_name(void);
T6 r53is_enabled(T53* C);
extern T0*oBC54Lcc_task_name;
extern int fBC54Lcc_task_name;
T0* r53Lcc_task_name(void);
void r53exit_application(T2 a1,T0* a2);
extern T0*oBC54Xslt_task_name;
extern int fBC54Xslt_task_name;
T0* r53Xslt_task_name(void);
extern T0*oBC54Gepp_task_name;
extern int fBC54Gepp_task_name;
T0* r53Gepp_task_name(void);
void r53_55Pmake(T53* C,T0* a1,T0* a2);
T0* r53twin(T53* C);
extern T0*oBC54Move_task_name;
extern int fBC54Move_task_name;
T0* r53Move_task_name(void);
extern T0*oBC54Geyacc_task_name;
extern int fBC54Geyacc_task_name;
T0* r53Geyacc_task_name(void);
T0* r53new_unicode_string(T0* a1);
extern T0*oBC54Ve_task_name;
extern int fBC54Ve_task_name;
T0* r53Ve_task_name(void);
extern T0*oBC175Clean_attribute_name;
extern int fBC175Clean_attribute_name;
T0* r175Clean_attribute_name(void);
T0* r175Dir_attribute_name(void);
T0* r175Unless_attribute_name(void);
void r175element_make(T175* C,T0* a1,T0* a2);
T0* r175If_attribute_name(void);
T0* r175file_system(void);
extern T0*oBC175Level_attribute_name;
extern int fBC175Level_attribute_name;
T0* r175Level_attribute_name(void);
T6 r175se_assigned_from(T0* a1);
void r175print_on(T175* C,T0* a1);
extern T0*oBC175Esd_attribute_name;
extern int fBC175Esd_attribute_name;
T0* r175Esd_attribute_name(void);
void r175out_in_tagged_out_memory(T175* C);
T6 r175uc_boolean_value(T175* C,T0* a1);
void r175make(T175* C,T0* a1,T0* a2);
T0* r175True_attribute_value(void);
T0* r175uc_attribute_value(T175* C,T0* a1);
void r175task_make(T175* C,T0* a1,T0* a2);
T6 r175conforms_to(T175* C,T0* a1);
void r175print(T0* a1);
void r175execute(T175* C);
T0* r175uc_attribute_value_or_default(T175* C,T0* a1,T0* a2);
T6 r175is_enabled(T175* C);
T0* r175False_attribute_value(void);
extern T0*oBC175Recursive_attribute_name;
extern int fBC175Recursive_attribute_name;
T0* r175Recursive_attribute_name(void);
T0* r175attribute_value_or_default(T175* C,T0* a1,T0* a2);
T0* r175twin(T175* C);
T0* r175new_unicode_string(T0* a1);
extern T0*oBC175Tune_attribute_name;
extern int fBC175Tune_attribute_name;
T0* r175Tune_attribute_name(void);
T6 r85se_assigned_from(T0* a1);
void r85print_on(T85* C,T0* a1);
void r85out_in_tagged_out_memory(T85* C);
void r85make(T85* C);
void r85insert(T85* C,T2 a1,T0* a2,T2 a3,T2 a4);
void r85remove(T85* C,T2 a1,T2 a2);
void r85insert_code(T85* C,T2 a1,T2 a2);
void r85move(T85* C,T2 a1,T2 a2,T2 a3);
T6 r85conforms_to(T85* C,T0* a1);
void r85storage_ensure_capacity(T85* C,T2 a1);
T0* r85twin(T85* C);
T0* r524Dir_attribute_name(void);
T0* r524Unless_attribute_name(void);
void r524element_make(T524* C,T0* a1,T0* a2);
T0* r524attribute_value(T524* C,T0* a1);
T0* r524If_attribute_name(void);
T0* r524file_system(void);
T6 r524se_assigned_from(T0* a1);
void r524print_on(T524* C,T0* a1);
void r524out_in_tagged_out_memory(T524* C);
void r524make(T524* C,T0* a1,T0* a2);
void r524task_make(T524* C,T0* a1,T0* a2);
T6 r524conforms_to(T524* C,T0* a1);
extern T0*oBC524Message_attribute_name;
extern int fBC524Message_attribute_name;
T0* r524Message_attribute_name(void);
void r524execute(T524* C);
T6 r524is_enabled(T524* C);
T0* r524twin(T524* C);
T0* r524new_unicode_string(T0* a1);
void r612yy_do_action(T612* C,T2 a1);
extern T0*oBC613yytable_template;
extern int fBC613yytable_template;
T0* r612yytable_template(void);
T0* r612empty_ucstring(void);
void r612make_parser_skeleton(T612* C);
T2 r612yy_at_beginning_of_line(T612* C);
void r612fatal_error(T0* a1);
T0* r612yytype1(T0* a1);
T6 r612yytype2(T0* a1);
T0* r612yytype3(T0* a1);
T0* r612yytype4(T0* a1);
T0* r612yytype5(T0* a1);
void r612handle_found_text(T612* C);
void r612parse(T612* C);
void r612set_input_buffer(T612* C,T0* a1);
T2 r612yy_translate(T612* C,T2 a1);
extern T0*oBC614yy_ec_template;
extern int fBC614yy_ec_template;
T0* r612yy_ec_template(void);
void r612yy_execute_action(T612* C,T2 a1);
extern T0*oBC613yytranslate_template;
extern int fBC613yytranslate_template;
T0* r612yytranslate_template(void);
void r612clear_stacks(T612* C);
extern T0*oBC614yy_def_template;
extern int fBC614yy_def_template;
T0* r612yy_def_template(void);
T3 r612text_item(T612* C,T2 a1);
void r612yy_load_input_buffer(T612* C);
extern T69 oBC613uc_collon;
extern int fBC613uc_collon;
T69 r612uc_collon(void);
extern T0*oBC613yyr1_template;
extern int fBC613yyr1_template;
T0* r612yyr1_template(void);
void r612make_with_buffer(T612* C,T0* a1);
T2 r612yy_null_trans_state(T612* C,T2 a1);
extern T0*oBC614yy_accept_template;
extern int fBC614yy_accept_template;
T0* r612yy_accept_template(void);
void r612read_token(T612* C);
extern T0*oBC613yyr2_template;
extern int fBC613yyr2_template;
T0* r612yyr2_template(void);
T2 r612yy_previous_state(T612* C);
extern T0*oBC613yypgoto_template;
extern int fBC613yypgoto_template;
T0* r612yypgoto_template(void);
void r612yy_refill_input_buffer(T612* C);
T0* r612yy_fixed_array(T0* a1);
T6 r612conforms_to(T612* C,T0* a1);
extern T0*oBC614yy_meta_template;
extern int fBC614yy_meta_template;
T0* r612yy_meta_template(void);
extern T0*oBC614yy_base_template;
extern int fBC614yy_base_template;
T0* r612yy_base_template(void);
T0* r612twin(T612* C);
T0* r612clone(T0* a1);
T0* r612new_file_buffer(T0* a1);
void r612yy_initialize(T612* C);
void r612reset(T612* C);
void r612parse_from_file_name(T612* C,T0* a1);
T0* r612text(T612* C);
void r612out_in_tagged_out_memory(T612* C);
extern T0*oBC614yy_nxt_template;
extern int fBC614yy_nxt_template;
T0* r612yy_nxt_template(void);
void r612parse_from_stream(T612* C,T0* a1);
void r612yy_set_line_column(T612* C);
void r612yy_build_parser_tables(T612* C);
T69 r612new_unicode_character(T3 a1);
T0* r612new_unicode_string(T0* a1);
T0* r612split_name_and_prefix(T0* a1);
void r612report_error(T612* C,T0* a1);
extern T0*oBC613yydefact_template;
extern int fBC613yydefact_template;
T0* r612yydefact_template(void);
extern T0*oBC614yy_chk_template;
extern int fBC614yy_chk_template;
T0* r612yy_chk_template(void);
extern T0*oBC613yycheck_template;
extern int fBC613yycheck_template;
T0* r612yycheck_template(void);
void r612make(T612* C);
T0* r612yyfixed_array(T0* a1);
void r612yy_clear_all(T612* C);
extern T0*oBC613yydefgoto_template;
extern int fBC613yydefgoto_template;
T0* r612yydefgoto_template(void);
void r612yy_set_content(T612* C,T0* a1);
extern T0*oBC613yypact_template;
extern int fBC613yypact_template;
T0* r612yypact_template(void);
void r612set_start_condition(T612* C,T2 a1);
T6 r612se_assigned_from(T0* a1);
void r612yy_build_tables(T612* C);
void r612print_on(T612* C,T0* a1);
void r612less(T612* C,T2 a1);
extern T0*oBC513Meta_ecs_attribute_name;
extern int fBC513Meta_ecs_attribute_name;
T0* r513Meta_ecs_attribute_name(void);
T0* r513Dir_attribute_name(void);
extern T0*oBC513Output_filename_attribute_name;
extern int fBC513Output_filename_attribute_name;
T0* r513Output_filename_attribute_name(void);
extern T0*oBC513Size_attribute_name;
extern int fBC513Size_attribute_name;
T0* r513Size_attribute_name(void);
extern T0*oBC513Ecs_attribute_name;
extern int fBC513Ecs_attribute_name;
T0* r513Ecs_attribute_name(void);
T0* r513Unless_attribute_name(void);
void r513element_make(T513* C,T0* a1,T0* a2);
T0* r513If_attribute_name(void);
T0* r513file_system(void);
T6 r513se_assigned_from(T0* a1);
void r513print_on(T513* C,T0* a1);
void r513out_in_tagged_out_memory(T513* C);
T6 r513uc_boolean_value(T513* C,T0* a1);
void r513make(T513* C,T0* a1,T0* a2);
T0* r513True_attribute_value(void);
T0* r513uc_attribute_value(T513* C,T0* a1);
void r513task_make(T513* C,T0* a1,T0* a2);
extern T0*oBC513Case_insensitive_attribute_name;
extern int fBC513Case_insensitive_attribute_name;
T0* r513Case_insensitive_attribute_name(void);
extern T0*oBC513No_default_attribute_name;
extern int fBC513No_default_attribute_name;
T0* r513No_default_attribute_name(void);
T6 r513conforms_to(T513* C,T0* a1);
void r513print(T0* a1);
extern T0*oBC513Backup_attribute_name;
extern int fBC513Backup_attribute_name;
T0* r513Backup_attribute_name(void);
extern T0*oBC513No_warn_attribute_name;
extern int fBC513No_warn_attribute_name;
T0* r513No_warn_attribute_name(void);
void r513execute(T513* C);
T6 r513is_enabled(T513* C);
T0* r513False_attribute_value(void);
extern T0*oBC513Separate_actions_attribute_name;
extern int fBC513Separate_actions_attribute_name;
T0* r513Separate_actions_attribute_name(void);
T0* r513twin(T513* C);
T0* r513new_unicode_string(T0* a1);
extern T0*oBC513Input_filename_attribute_name;
extern int fBC513Input_filename_attribute_name;
T0* r513Input_filename_attribute_name(void);
extern T0*oBC513Full_attribute_name;
extern int fBC513Full_attribute_name;
T0* r513Full_attribute_name(void);
extern T0*oBC573stack;
extern int fBC573stack;
T0* r573stack(void);
void r573on_content(T0* a1);
T6 r573se_assigned_from(T0* a1);
void r573print_on(T573* C,T0* a1);
T0* r573clone(T0* a1);
void r573out_in_tagged_out_memory(T573* C);
void r573on_start_tag(T573* C,T0* a1,T0* a2,T0* a3);
void r573make_from_implementation(T573* C,T0* a1);
T6 r573conforms_to(T573* C,T0* a1);
T0* r573twin(T573* C);
void r538_167Pmake(T538* C,T0* a1);
T0* r538file_system(void);
T6 r538se_assigned_from(T0* a1);
void r538print_on(T538* C,T0* a1);
T0* r538clone(T0* a1);
void r538out_in_tagged_out_memory(T538* C);
void r538make(T538* C,T0* a1);
void r538execute_xalan_java(T538* C);
T6 r538conforms_to(T538* C,T0* a1);
void r538execute(T538* C);
T0* r538twin(T538* C);
void r538execute_xalan_cpp(T538* C);
void r538execute_shell(T538* C,T0* a1);
T6 r538is_executable(T538* C);
extern T0*oBC182Type_attribute_value_flat;
T6 r182se_assigned_from(T0* a1);
void r182print_on(T182* C,T0* a1);
T0* r182clone(T0* a1);
T0* r182string_remove_head(T0* a1,T2 a2);
T0* r182glob_prefix(T0* a1);
void r182out_in_tagged_out_memory(T182* C);
void r182make(T182* C,T0* a1);
T6 r182conforms_to(T182* C,T0* a1);
extern T0*oBC182Type_attribute_value_merge;
T0* r182mapped_filename(T182* C,T0* a1);
T0* r182twin(T182* C);
T0* r182string_remove_tail(T0* a1,T2 a2);
T0* r182glob_postfix(T0* a1);
T6 r182is_executable(T182* C);
extern T0*oBC182Type_attribute_value_glob;
extern T0*oBC182Type_attribute_value_identity;
void r632copy(T632* C,T0* a1);
void r632append_name(T632* C,T0* a1);
T6 r632se_assigned_from(T0* a1);
void r632print_on(T632* C,T0* a1);
T0* r632clone(T0* a1);
void r632out_in_tagged_out_memory(T632* C);
T6 r632is_parent(T632* C,T2 a1);
void r632make(T632* C);
void r632set_canonical(T632* C);
T6 r632conforms_to(T632* C,T0* a1);
T0* r632twin(T632* C);
T6 r632is_current(T632* C,T2 a1);
T6 r179se_assigned_from(T0* a1);
void r179print_on(T179* C,T0* a1);
void r179out_in_tagged_out_memory(T179* C);
T6 r179is_commandline_executable(T179* C);
T6 r179conforms_to(T179* C,T0* a1);
void r179set_fileset(T179* C,T0* a1);
void r179execute(T179* C);
T0* r179twin(T179* C);
void r179execute_shell(T179* C,T0* a1);
T6 r179is_executable(T179* C);
T6 r179is_fileset_executable(T179* C);
T6 r32se_assigned_from(T0* a1);
void r32print_on(T32* C,T0* a1);
void r32out_in_tagged_out_memory(T32* C);
T6 r32conforms_to(T32* C,T0* a1);
T0* r32twin(T32* C);
void r32put_character(T3 a1);
void r32put_string(T0* a1);
void r199yy_do_action(T199* C,T2 a1);
void r199process_escaped_character(T199* C);
void r199report_bad_character_error(T199* C,T0* a1);
extern T0*oBC199yytable_template;
extern int fBC199yytable_template;
T0* r199yytable_template(void);
void r199make_parser_skeleton(T199* C);
T0* r199append_character_set_to_character_class(T199* C,T2 a1,T2 a2,T0* a3);
T2 r199yy_at_beginning_of_line(T199* C);
void r199report_unrecognized_rule_error(T199* C);
void r199fatal_error(T0* a1);
T2 r199yytype1(T0* a1);
T0* r199yytype2(T0* a1);
T0* r199yytype3(T0* a1);
T0* r199yytype4(T0* a1);
T2 r199start_condition(T199* C);
T0* r199new_nfa_from_character(T199* C,T2 a1);
void r199parse(T199* C);
void r199check_options(T199* C);
void r199report_missing_quote_error(T199* C);
void r199set_input_buffer(T199* C,T0* a1);
T2 r199yy_translate(T199* C,T2 a1);
extern T0*oBC200yy_ec_template;
extern int fBC200yy_ec_template;
T0* r199yy_ec_template(void);
void r199yy_execute_action(T199* C,T2 a1);
extern T0*oBC199yytranslate_template;
extern int fBC199yytranslate_template;
T0* r199yytranslate_template(void);
extern T0*oBC206Empty_buffer;
extern int fBC206Empty_buffer;
T0* r199Empty_buffer(void);
void r199clear_stacks(T199* C);
extern T0*oBC200yy_def_template;
extern int fBC200yy_def_template;
T0* r199yy_def_template(void);
void r199report_full_and_meta_equiv_classes_error(T199* C);
T3 r199text_item(T199* C,T2 a1);
T0* r199new_string_buffer(T0* a1);
void r199yy_load_input_buffer(T199* C);
extern T0*oBC199yyr1_template;
extern int fBC199yyr1_template;
T0* r199yyr1_template(void);
void r199make_with_buffer(T199* C,T0* a1);
void r199process_rule(T199* C,T0* a1);
void r199process_character(T199* C,T2 a1);
T2 r199yy_null_trans_state(T199* C,T2 a1);
void r199report_negative_range_in_character_class_error(T199* C);
void r199report_full_and_variable_trailing_context_error(T199* C);
extern T0*oBC200yy_accept_template;
extern int fBC200yy_accept_template;
T0* r199yy_accept_template(void);
void r199read_token(T199* C);
T0* r199question_character_class(T199* C);
extern T0*oBC199yyr2_template;
extern int fBC199yyr2_template;
T0* r199yyr2_template(void);
T2 r199yy_previous_state(T199* C);
extern T0*oBC199yypgoto_template;
extern int fBC199yypgoto_template;
T0* r199yypgoto_template(void);
void r199yy_refill_input_buffer(T199* C);
T0* r199yy_fixed_array(T0* a1);
T6 r199conforms_to(T199* C,T0* a1);
extern T0*oBC200yy_meta_template;
extern int fBC200yy_meta_template;
T0* r199yy_meta_template(void);
void r199report_character_out_of_range_error(T199* C,T0* a1);
T0* r199new_epsilon_nfa(T199* C);
extern T0*oBC200yy_base_template;
extern int fBC200yy_base_template;
T0* r199yy_base_template(void);
void r199report_full_and_reject_error(T199* C);
T0* r199twin(T199* C);
T0* r199append_character_to_character_class(T199* C,T2 a1,T0* a2);
T2 r199text_count(T199* C);
void r199parse_string(T199* C,T0* a1);
void r199yy_initialize(T199* C);
T0* r199text(T199* C);
void r199out_in_tagged_out_memory(T199* C);
T0* r199new_symbol_nfa(T199* C,T2 a1);
extern T0*oBC200yy_nxt_template;
extern int fBC200yy_nxt_template;
T0* r199yy_nxt_template(void);
void r199yy_set_line_column(T199* C);
void r199yy_build_parser_tables(T199* C);
void r199build_equiv_classes(T199* C);
T0* r199new_symbol_class_nfa(T199* C,T0* a1);
void r199report_error(T199* C,T0* a1);
T0* r199append_character_to_string(T199* C,T2 a1,T0* a2);
extern T0*oBC199yydefact_template;
extern int fBC199yydefact_template;
T0* r199yydefact_template(void);
extern T0*oBC200yy_chk_template;
extern int fBC200yy_chk_template;
T0* r199yy_chk_template(void);
T0* r199new_nfa_from_character_class(T199* C,T0* a1);
extern T0*oBC199yycheck_template;
extern int fBC199yycheck_template;
T0* r199yycheck_template(void);
T0* r199new_character_class(T199* C);
T0* r199filename(T199* C);
T0* r199yyfixed_array(T0* a1);
extern T0*oBC199yydefgoto_template;
extern int fBC199yydefgoto_template;
T0* r199yydefgoto_template(void);
void r199yy_clear_all(T199* C);
void r199yy_set_content(T199* C,T0* a1);
extern T0*oBC199yypact_template;
extern int fBC199yypact_template;
T0* r199yypact_template(void);
void r199set_start_condition(T199* C,T2 a1);
T6 r199se_assigned_from(T0* a1);
void r199yy_build_tables(T199* C);
void r199print_on(T199* C,T0* a1);
void r199make_lex_scanner_from_description(T199* C,T0* a1,T0* a2);
void r199less(T199* C,T2 a1);
void r199report_bad_character_class_error(T199* C);
void r199make_from_description(T199* C,T0* a1,T0* a2);
T6 r172is_cleanable(T172* C);
T0* r172file_system(void);
T6 r172se_assigned_from(T0* a1);
void r172print_on(T172* C,T0* a1);
T0* r172clone(T0* a1);
void r172out_in_tagged_out_memory(T172* C);
void r172execute_clean(T172* C);
void r172execute_compile(T172* C);
T6 r172conforms_to(T172* C,T0* a1);
T6 r172is_compilable(T172* C);
void r172execute(T172* C);
T0* r172twin(T172* C);
void r172execute_shell(T172* C,T0* a1);
T6 r172is_executable(T172* C);
T6 r357se_assigned_from(T0* a1);
void r357print_on(T357* C,T0* a1);
void r357out_in_tagged_out_memory(T357* C);
T0* r357Arguments(void);
void r357make(T357* C,T0* a1,T2 a2);
T0* r357message(T357* C,T0* a1);
T6 r357conforms_to(T357* C,T0* a1);
T0* r357twin(T357* C);
T0* r357default_message(T357* C);
T0* r98expanded_variable_value(T98* C,T0* a1);
T0* r98variable_value(T98* C,T0* a1);
T0* r98file_system(void);
T6 r98se_assigned_from(T0* a1);
void r98print_on(T98* C,T0* a1);
T0* r98clone(T0* a1);
void r98out_in_tagged_out_memory(T98* C);
T69 r98new_unicode_character(T3 a1);
void r98make(T98* C);
extern T0*oBC19Commandline_variables;
extern int fBC19Commandline_variables;
T0* r98Commandline_variables(void);
extern T0*oBC21Execution_environment;
T6 r98boolean_condition_value(T98* C,T0* a1);
T6 r98conforms_to(T98* C,T0* a1);
void r98print(T0* a1);
T0* r98string_tokens(T0* a1,T3 a2);
T0* r98interpreted_string(T98* C,T0* a1);
void r98exit_application(T2 a1,T0* a2);
T0* r98twin(T98* C);
T6 r98has_variable(T98* C,T0* a1);
T0* r98new_unicode_string(T0* a1);
extern T0*oBC1command_arguments;
extern int fBC1command_arguments;
T0* r359command_arguments(void);
T6 r359se_assigned_from(T0* a1);
void r359print_on(T359* C,T0* a1);
void r359out_in_tagged_out_memory(T359* C);
T6 r359conforms_to(T359* C,T0* a1);
T0* r359twin(T359* C);
T0* r359argument(T2 a1);
extern T0*oBC606ep_event_fact;
T6 r606se_assigned_from(T0* a1);
void r606print_on(T606* C,T0* a1);
void r606out_in_tagged_out_memory(T606* C);
void r606make(T606* C);
T6 r606conforms_to(T606* C,T0* a1);
extern T0*oBC606ef_event_fact;
T0* r606twin(T606* C);
T6 r620se_assigned_from(T0* a1);
void r620print_on(T620* C,T0* a1);
void r620out_in_tagged_out_memory(T620* C);
T2 r620execute_command(T0* a1);
T6 r620conforms_to(T620* C,T0* a1);
void r620execute(T620* C);
T0* r620twin(T620* C);
extern T0*oBC496Cluster_attribute_name;
extern int fBC496Cluster_attribute_name;
T0* r496Cluster_attribute_name(void);
T0* r496Dir_attribute_name(void);
extern T0*oBC496Validate_attribute_name;
extern int fBC496Validate_attribute_name;
T0* r496Validate_attribute_name(void);
extern T0*oBC496System_attribute_name;
extern int fBC496System_attribute_name;
T0* r496System_attribute_name(void);
extern T0*oBC496Output_filename_attribute_name;
extern int fBC496Output_filename_attribute_name;
T0* r496Output_filename_attribute_name(void);
extern T0*oBC496Xace_filename_attribute_name;
extern int fBC496Xace_filename_attribute_name;
T0* r496Xace_filename_attribute_name(void);
T0* r496Unless_attribute_name(void);
void r496element_make(T496* C,T0* a1,T0* a2);
extern T0*oBC496Verbose_attribute_name;
extern int fBC496Verbose_attribute_name;
T0* r496Verbose_attribute_name(void);
T0* r496If_attribute_name(void);
T0* r496file_system(void);
T6 r496se_assigned_from(T0* a1);
void r496print_on(T496* C,T0* a1);
extern T0*oBC496Define_element_name;
extern int fBC496Define_element_name;
T0* r496Define_element_name(void);
void r496out_in_tagged_out_memory(T496* C);
T6 r496uc_boolean_value(T496* C,T0* a1);
void r496make(T496* C,T0* a1,T0* a2);
T0* r496True_attribute_value(void);
T0* r496uc_attribute_value(T496* C,T0* a1);
void r496task_make(T496* C,T0* a1,T0* a2);
T6 r496conforms_to(T496* C,T0* a1);
void r496print(T0* a1);
void r496execute(T496* C);
T6 r496is_enabled(T496* C);
T0* r496False_attribute_value(void);
T0* r496twin(T496* C);
T0* r496new_unicode_string(T0* a1);
T0* r494Dir_attribute_name(void);
T0* r494Unless_attribute_name(void);
void r494element_make(T494* C,T0* a1,T0* a2);
T0* r494If_attribute_name(void);
T0* r494file_system(void);
T6 r494se_assigned_from(T0* a1);
void r494print_on(T494* C,T0* a1);
void r494out_in_tagged_out_memory(T494* C);
void r494make(T494* C,T0* a1,T0* a2);
T0* r494uc_attribute_value(T494* C,T0* a1);
void r494task_make(T494* C,T0* a1,T0* a2);
T6 r494conforms_to(T494* C,T0* a1);
void r494execute(T494* C);
extern T0*oBC494Name_attribute_name;
extern int fBC494Name_attribute_name;
T0* r494Name_attribute_name(void);
T6 r494is_enabled(T494* C);
T0* r494twin(T494* C);
T0* r494new_unicode_string(T0* a1);
T6 r535se_assigned_from(T0* a1);
void r535print_on(T535* C,T0* a1);
void r535out_in_tagged_out_memory(T535* C);
T6 r535conforms_to(T535* C,T0* a1);
void r535execute(T535* C);
T0* r535twin(T535* C);
T6 r535is_executable(T535* C);
T6 r591is_closed(T591* C);
void r591old_close(T591* C);
T2 r591count(T591* C);
void r591old_delete(T0* a1);
T2 r591time_stamp(T591* C);
T6 r591file_exists(T0* a1);
extern T626 oBC595epoch_time;
extern int fBC595epoch_time;
T626 r591epoch_time(void);
T2 r591read_to_string(T591* C,T0* a1,T2 a2,T2 a3);
T626 r591last_change_of(T0* a1);
void r591rename_to(T0* a1,T0* a2);
void r591open_read(T591* C);
T0* r591file_system(void);
T6 r591se_assigned_from(T0* a1);
void r591print_on(T591* C,T0* a1);
void r591old_read_character(T591* C);
T6 r591old_end_of_file(T591* C);
void r591out_in_tagged_out_memory(T591* C);
void r591read_character(T591* C);
void r591close(T591* C);
void r591make(T591* C,T0* a1);
T6 r591exists(T591* C);
T2 r591size_of(T0* a1);
T6 r591conforms_to(T591* C,T0* a1);
void r591copy_file(T591* C,T0* a1);
void r591connect_to(T591* C,T0* a1);
extern T596 oBC1file_tools;
T6 r591same_physical_file(T591* C,T0* a1);
void r591delete(T591* C);
T0* r591twin(T591* C);
void r591change_name(T591* C,T0* a1);
extern T0*oBC595tmp_file1;
extern int fBC595tmp_file1;
T0* r591tmp_file1(void);
T6 r591is_readable(T591* C);
extern T0*oBC592tmp_directory;
extern int fBC592tmp_directory;
T0* r591tmp_directory(void);
extern T0*oBC181From_attribute_name;
extern int fBC181From_attribute_name;
T0* r181From_attribute_name(void);
T6 r181se_assigned_from(T0* a1);
void r181print_on(T181* C,T0* a1);
void r181out_in_tagged_out_memory(T181* C);
void r181make(T181* C,T0* a1,T0* a2);
T0* r181uc_attribute_value(T181* C,T0* a1);
extern T0*oBC181To_attribute_name;
extern int fBC181To_attribute_name;
T0* r181To_attribute_name(void);
T6 r181conforms_to(T181* C,T0* a1);
extern T0*oBC181Type_attribute_name;
extern int fBC181Type_attribute_name;
T0* r181Type_attribute_name(void);
extern T0*oBC181Map_element_name;
extern int fBC181Map_element_name;
T0* r181Map_element_name(void);
void r181_55Pmake(T181* C,T0* a1,T0* a2);
T0* r181twin(T181* C);
T0* r181new_unicode_string(T0* a1);
extern T0*oBC596tfr1;
T6 r596is_readable(T0* a1);
T6 r627se_assigned_from(T0* a1);
void r627print_on(T627* C,T0* a1);
T6 r627conforms_to(T627* C,T0* a1);
T0* r627twin(T627* C);
T6 r695se_assigned_from(T0* a1);
void r695print_on(T695* C,T0* a1);
void r695out_in_tagged_out_memory(T695* C);
T6 r695conforms_to(T695* C,T0* a1);
T0* r695twin(T695* C);
void r16read_command_line(T16* C);
T6 r16se_assigned_from(T0* a1);
void r16print_on(T16* C,T0* a1);
T0* r16clone(T0* a1);
void r16out_in_tagged_out_memory(T16* C);
void r16report_usage_message(T16* C);
T0* r16Arguments(void);
T0* r16Commandline_variables(void);
void r16make(T16* C);
T6 r16conforms_to(T16* C,T0* a1);
void r16print(T0* a1);
void r16report_version_number(T16* C);
void r16exit_application(T2 a1,T0* a2);
T0* r16twin(T16* C);
T0* r16new_unicode_string(T0* a1);
extern T0*oBC16Usage_message;
extern int fBC16Usage_message;
T0* r16Usage_message(void);
void r16report_usage_error(T16* C);
extern T0*oBC89error;
extern int fBC89error;
T0* r89error(void);
T6 r89se_assigned_from(T0* a1);
void r89print_on(T89* C,T0* a1);
void r89out_in_tagged_out_memory(T89* C);
extern T0*oBC89input;
extern int fBC89input;
T0* r89input(void);
extern T0*oBC89output;
extern int fBC89output;
T0* r89output(void);
T6 r89conforms_to(T89* C,T0* a1);
T0* r89twin(T89* C);
T6 r95se_assigned_from(T0* a1);
void r95print_on(T95* C,T0* a1);
void r95out_in_tagged_out_memory(T95* C);
T6 r95conforms_to(T95* C,T0* a1);
T0* r95twin(T95* C);
void r56raise(T56* C,T0* a1);
T6 r56se_assigned_from(T0* a1);
void r56print_on(T56* C,T0* a1);
void r56out_in_tagged_out_memory(T56* C);
T6 r56conforms_to(T56* C,T0* a1);
T0* r56twin(T56* C);
extern T0*oBC57developer_exception_name_memory;
void r57raise(T57* C,T0* a1);
T6 r57se_assigned_from(T0* a1);
void r57print_on(T57* C,T0* a1);
void r57out_in_tagged_out_memory(T57* C);
T6 r57conforms_to(T57* C,T0* a1);
T0* r57twin(T57* C);
T6 r34se_assigned_from(T0* a1);
void r34print_on(T34* C,T0* a1);
T6 r34conforms_to(T34* C,T0* a1);
T0* r34twin(T34* C);
T6 r38se_assigned_from(T0* a1);
void r38print_on(T38* C,T0* a1);
void r38out_in_tagged_out_memory(T38* C);
T6 r38conforms_to(T38* C,T0* a1);
T0* r38twin(T38* C);
T6 r691se_assigned_from(T0* a1);
void r691print_on(T691* C,T0* a1);
void r691out_in_tagged_out_memory(T691* C);
T6 r691conforms_to(T691* C,T0* a1);
T0* r691twin(T691* C);
T6 r96se_assigned_from(T0* a1);
void r96print_on(T96* C,T0* a1);
void r96out_in_tagged_out_memory(T96* C);
T0* r96to_hexadecimal(T2 a1,T6 a2);
T6 r96conforms_to(T96* C,T0* a1);
T3 r96to_character(T2 a1);
T0* r96twin(T96* C);
void r96append_hexadecimal_integer(T0* a1,T2 a2,T6 a3);
extern T0*oBC81factory;
extern int fBC81factory;
T0* r81factory(void);
T6 r81se_assigned_from(T0* a1);
void r81print_on(T81* C,T0* a1);
void r81out_in_tagged_out_memory(T81* C);
T6 r81conforms_to(T81* C,T0* a1);
T0* r81twin(T81* C);
T6 r693se_assigned_from(T0* a1);
void r693print_on(T693* C,T0* a1);
void r693out_in_tagged_out_memory(T693* C);
T6 r693conforms_to(T693* C,T0* a1);
T0* r693twin(T693* C);
T6 r36se_assigned_from(T0* a1);
void r36print_on(T36* C,T0* a1);
T6 r36conforms_to(T36* C,T0* a1);
T0* r36twin(T36* C);
T0* r101get_environment_variable(T0* a1);
T6 r692se_assigned_from(T0* a1);
void r692print_on(T692* C,T0* a1);
void r692out_in_tagged_out_memory(T692* C);
T6 r692conforms_to(T692* C,T0* a1);
T0* r692twin(T692* C);
T6 r611se_assigned_from(T0* a1);
void r611print_on(T611* C,T0* a1);
void r611out_in_tagged_out_memory(T611* C);
T6 r611conforms_to(T611* C,T0* a1);
T0* r611twin(T611* C);
void r145connect_to_current_working_directory(T145* C);
void r145disconnect(T145* C);
T6 r145remove_directory(T0* a1);
extern T0*oBC145last_entry;
void r145change_current_working_directory(T145* C,T0* a1);
void r145read_entry(T145* C);
void r145connect_to(T145* C,T0* a1);
T6 r145create_new_directory(T0* a1);
T6 r97se_assigned_from(T0* a1);
void r97print_on(T97* C,T0* a1);
void r97out_in_tagged_out_memory(T97* C);
T6 r97is_integer(T0* a1);
T0* r97make(T2 a1);
T6 r97conforms_to(T97* C,T0* a1);
T0* r97twin(T97* C);
T0* r69out(T69* C);
extern T0*oBC72Platform;
T6 r69is_equal(T69* C,T69 a1);
T3 r69as_character(T69* C);
T6 r69_px_60(T69* C,T69 a1);
T6 r69_px_62(T69* C,T69 a1);
T0* r69as_hexadecimal(T69* C);
T3 r69code_to_character(T2 a1);
extern T0*oBC71INTEGER_;
T0* r100variable_value(T0* a1);
T6 r100se_assigned_from(T0* a1);
void r100print_on(T100* C,T0* a1);
void r100out_in_tagged_out_memory(T100* C);
extern T101 oBC100environment_impl;
T6 r100conforms_to(T100* C,T0* a1);
T0* r100twin(T100* C);
T2 r642nr_of_following_octets(T3 a1);
T6 r642se_assigned_from(T0* a1);
void r642print_on(T642* C,T0* a1);
void r642read_code(T642* C,T0* a1,T2 a2);
void r642out_in_tagged_out_memory(T642* C);
void r642put_code(T2 a1,T0* a2,T2 a3);
void r642read_following_octet(T642* C,T0* a1);
T6 r642conforms_to(T642* C,T0* a1);
T3 r642code_to_character(T2 a1);
T2 r642octet_size(T2 a1);
T0* r642twin(T642* C);
extern T0*oBC642specific;
T6 r642is_leading_octet(T3 a1);
T2 r642read_leading_octet(T642* C,T0* a1,T2 a2);
T6 r610se_assigned_from(T0* a1);
void r610print_on(T610* C,T0* a1);
void r610out_in_tagged_out_memory(T610* C);
T0* r610new_event_parser_imp(void);
T6 r610conforms_to(T610* C,T0* a1);
T0* r610twin(T610* C);
T2 r626day(T626* C);
T2 r626elapsed_seconds(T626* C,T626 a1);
T6 r626set(T626* C,T2 a1,T2 a2,T2 a3,T2 a4,T2 a5,T2 a6);
T2 r626hour(T626* C);
T2 r626year(T626* C);
T2 r626month(T626* C);
extern T0*oBC626time_mode_memo;
T2 r626minute(T626* C);
T2 r626second(T626* C);
T6 r37se_assigned_from(T0* a1);
void r37print_on(T37* C,T0* a1);
T6 r37conforms_to(T37* C,T0* a1);
T0* r37twin(T37* C);
T6 r694se_assigned_from(T0* a1);
void r694print_on(T694* C,T0* a1);
void r694out_in_tagged_out_memory(T694* C);
T6 r694conforms_to(T694* C,T0* a1);
T0* r694twin(T694* C);
T0* r91current_working_directory(T91* C);
T6 r91se_assigned_from(T0* a1);
void r91print_on(T91* C,T0* a1);
T0* r91clone(T0* a1);
T6 r91is_windows(T91* C);
void r91out_in_tagged_out_memory(T91* C);
T6 r91conforms_to(T91* C,T0* a1);
T6 r91is_unix(T91* C);
T0* r91twin(T91* C);
extern T16*eiffel_root_object;
extern int se_argc;
extern char**se_argv;
#define SE_MAXID 696
extern T7* g[];
extern T7* t[];
void initialize_eiffel_runtime(int argc,char*argv[]);
extern T7*ms396_280487577;
extern T7*ms379_645257649;
extern T7*ms632_276;
extern T7*ms619_1515383187;
extern T7*ms357_1449702436;
extern T7*ms595_80516;
extern T7*ms146_46;
extern T7*ms147_46;
extern T7*ms618_1158552108;
extern T7*ms146_276;
extern T7*ms147_276;
extern T7*ms383_1686894687;
extern T7*ms90_10;
extern T7*ms368_10;
extern T7*ms385_1531431095;
extern T7*ms143_80516;
extern T7*ms23_1483;
extern T7*ms632_46;
extern T7*ms147_0;
extern T7*ms381_1086870388;
extern T7*ms425_823229232;
extern T7*ms384_1520688928;
extern T7*ms382_215272365;
extern T7*ms380_1203377682;
extern T7*ms146_8976;
extern T7*ms457_10;
T7*se_ms(int c,char*e);
T7*se_string(char*e);
void se_msi1(void);
void*se_ma87(int argc,...);
T0* X544make(T0*C,T2 a1);
T0* X544resize(T0*C,T0* a1,T2 a2);
void X227put(T0*C,T2 a1);
T0* X227to_array(T0*C,T2 a1,T2 a2);
void X227add(T0*C,T0* a1);
void X541put(T0*C,T0* a1,T2 a2);
T0* X541item(T0*C,T2 a1);
void X541set_all_with(T0*C,T0* a1);
void X541resize(T0*C,T2 a1);
void X33put_string(T0*C,T0* a1);
T2 X62exit_code(T0*C);
void X62execute(T0*C);
T6 X62is_executable(T0*C);
void X10out_in_tagged_out_memory(T0*C);
T0* X10twin(T0*C);
void X32put_string(T0*C,T0* a1);
void X537out_in_tagged_out_memory(T0*C);
void X593disconnect(T0*C);
T6 X593is_connected(T0*C);
void X593connect_to(T0*C,T0* a1);
T6 X1se_assigned_from(T0*C,T0* a1);
void X1print_on(T0*C,T0* a1);
T6 X1conforms_to(T0*C,T0* a1);
void X352clear_all(T0*C,T0* a1);
T0* X352make(T0*C,T2 a1);
T0* X352resize(T0*C,T0* a1,T2 a2);
void X92put_line(T0*C,T0* a1);
T0* X363name(T0*C);
T2 X363read_to_string(T0*C,T0* a1,T2 a2,T2 a3);
void X363read_character(T0*C);
T6 X363end_of_input(T0*C);
void X362fill(T0*C);
void X57raise(T0*C,T0* a1);
T2 X442count(T0*C);
T2 X442item(T0*C,T2 a1);
T2 X442lower(T0*C);
T6 X245labeled(T0*C,T2 a1);
void X245record(T0*C,T0* a1);
void X354put(T0*C,T0* a1,T2 a2);
T0* X354item(T0*C,T2 a1);
void X354set_all_with(T0*C,T0* a1);
void X354resize(T0*C,T2 a1);
T2 X167exit_code(T0*C);
void X167execute(T0*C);
T6 X167is_executable(T0*C);
T2 X68item_code(T0*C,T2 a1);
void X68insert(T0*C,T2 a1,T0* a2,T2 a3,T2 a4);
void X68remove(T0*C,T2 a1,T2 a2);
void X68insert_code(T0*C,T2 a1,T2 a2);
T0* X144string_to_pathname(T0*C,T0* a1);
T0* X358default_message(T0*C);
T6 X91is_windows(T0*C);
T6 X91is_unix(T0*C);
T0* X143pathname_from_file_system(T0*C,T0* a1,T0* a2);
T0* X143relative_current_directory(T0*C);
T0* X143absolute_pathname(T0*C,T0* a1);
T0* X143dirname(T0*C,T0* a1);
T0* X143exe_extension(T0*C);
T0* X143relative_parent_directory(T0*C);
T0* X143pathname(T0*C,T0* a1,T0* a2);
T0* X143canonical_pathname(T0*C,T0* a1);
T0* T2toT34(T2 source);
T2 T34toT2(T0* source);
T0* T6toT36(T6 source);

#ifdef __cplusplus
}
#endif
